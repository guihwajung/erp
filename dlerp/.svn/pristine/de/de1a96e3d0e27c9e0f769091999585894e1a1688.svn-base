<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="단체보험지급내역" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="1" left="0" top="0" height="46.0" right="0" cssclass="div_SEARCH_Bg" text="">
          <Layouts>
            <Layout>
              <Div id="ccfCD_CORP" CDTextWidth="70" taborder="4" left="0.0" top="10.0" width="280" height="24.0" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DAX_CFCORP"/>
              <Static id="staID_SABUN" taborder="0" text="성명" left="ccfCD_CORP:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfID_SABUN" CDTextWidth="70" taborder="1" left="staID_SABUN:0.0" top="10.0" width="200" height="24.0" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DAX_CFBASEINFO_ALL"/>
              <Static id="staDT_GIVE" taborder="2" text="지급일자" left="ccfID_SABUN:0.0" top="10.0" width="92.0" height="24.0" rtl="false" cssclass="sta_WF_SchLabel"/>
              <Static id="staCD_CORP" taborder="3" text="법인" left="staDT_GIVE:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Calendar id="calDT_GIVE_FR" taborder="5" left="staDT_GIVE:0.0" top="10.0" width="95" height="24.0" dateformat="yyyy-MM-dd" autoselect="true" autoskip="true"/>
              <Static id="staCD_APPROVAL00" taborder="7" text="~" left="calDT_GIVE_FR:0.0" top="10.0" width="30.0" height="24.0" textAlign="center" cssclass="sta_WF_AC"/>
              <Calendar id="calDT_GIVE_TO" taborder="6" left="staCD_APPROVAL00:0.0" top="10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" autoselect="true" autoskip="true"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="1" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0" oncelldblclick="divData_objGrid_oncelldblclick" oncellclick="divData_objGrid_oncellclick"/>
              <Grid id="grdForm" taborder="1" left="750" top="145" width="257" height="85" visible="false" binddataset="dsExcelForm">
                <Formats>
                  <Format id="default">
                    <Columns>
                      <Column size="80"/>
                      <Column size="80"/>
                      <Column size="80"/>
                      <Column size="80"/>
                      <Column size="80"/>
                      <Column size="80"/>
                      <Column size="200"/>
                      <Column size="80"/>
                      <Column size="80"/>
                    </Columns>
                    <Rows>
                      <Row size="32" band="head"/>
                      <Row size="24"/>
                    </Rows>
                    <Band id="head">
                      <Cell text="상태&#13;&#10;(E:종결,I진행중,P미결)"/>
                      <Cell col="1" text="사고번호"/>
                      <Cell col="2" text="사원번호"/>
                      <Cell col="3" text="사고일시"/>
                      <Cell col="4" text="지급공제금"/>
                      <Cell col="5" text="지급일자"/>
                      <Cell col="6" text="진행상태&#13;&#10;(A 심사중,B추가지급,C종결지급)"/>
                      <Cell col="7" text="사고내용"/>
                      <Cell col="8" text="비고"/>
                    </Band>
                    <Band id="body">
                      <Cell text="bind:CD_STATUS"/>
                      <Cell col="1" text="bind:NO_ACCIDENT"/>
                      <Cell col="2" text="bind:ID_SABUN"/>
                      <Cell col="3" text="bind:DT_ACCIDENT"/>
                      <Cell col="4" text="bind:AM_ACCIDENT"/>
                      <Cell col="5" text="bind:DT_GIVE"/>
                      <Cell col="6" text="bind:CD_PROGRESS"/>
                      <Cell col="7" text="bind:DS_ACCIDENT"/>
                      <Cell col="8" text="bind:DS_REMARK"/>
                    </Band>
                  </Format>
                </Formats>
              </Grid>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	
	this.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);		
	this.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP);	
	
	var today = this.gfnGetDate();
	this.calDT_GIVE_FR.set_value(this.gfnAddDate(today, -365));
	this.calDT_GIVE_TO.set_value(today);
	
	if(this.FormInfo.GR_SEARCH == "9"){
		//GR_SEARCH 가 9인경우에는 본인것만 신청 가능
		this.ccfID_SABUN.form.CDTextBox.set_value(this.AuthClient.ID_SABUN);
		this.ccfID_SABUN.form.DSTextBox.set_value(this.AuthClient.DS_HNAME);
		this.ccfCD_CORP.set_enable(false);
		this.ccfID_SABUN.set_enable(false);
	}
	
	//첨부파일
	this.fileConfig = this.gfnGetFileConfig();	
	this.filepath = ""; //this.fnGetfilepath("DA09");

	//화면 로드시 자동조회
	//this.FormBtns.Select.click();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
 	this.btnFormDown = this.gfnFormButtonAdd("FormDown", "fnFormDown"); //양식다운로드
	this.btnExcelImport = this.gfnFormButtonAdd("ExcelImport", "fnExcelImport");//엑셀업로드
};


/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {

	this.dxGrid = this.divData.form.objGrid;

	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;
	this.ccfID_SABUN = this.divSearch.form.ccfID_SABUN;
	this.calDT_GIVE_FR = this.divSearch.form.calDT_GIVE_FR;		
	this.calDT_GIVE_TO = this.divSearch.form.calDT_GIVE_TO;
	
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";	
	this.ccfID_SABUN.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfID_SABUN.AfterCDTextChanged = "fnAfterCDTextChanged";

	this.gfnGridInit(this.dxGrid, this.dsList, "DA", "DAB_SETTLEMENT");

	//this.dxGrid.set_selecttype("multirow");
 	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";// 그리드 코드파인드 설정
 	this.dxGrid.AfterCDTextChanged = "fnGrid_AfterCDTextChanged";// 그리드 코드파인드 값 변경
	this.dxGrid.EnterCell = "fnGrid_EnterCell";	// 셀 수정가능 여부
	this.dxGrid.ExpandUp = "fnGrid_ExpandUp";	// BUTTON, BUTTON-IN 처리
	this.dxGrid.AfterEdit = "fnGrid_AfterEdit";// 셀 변경 후 이벤트

}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("ID_SABUN", "string");
	this.dsSelect.addColumn("DT_GIVE_FR", "string");
	this.dsSelect.addColumn("DT_GIVE_TO", "string");
	this.dsSelect.addColumn("GR_SEARCH", "string");
	this.dsSelect.addColumn("TY_AUTH", "string");
	this.dsSelect.addColumn("GR_DEPT", "string");
	this.dsSelect.addColumn("ID_USER", "string");
	
	this.dsSave = new Dataset();
	this.dsSave.addColumn("TY_SAVE", "string");
	this.dsSave.addColumn("NO_SEQ", "int");
	this.dsSave.addColumn("CD_CORP", "string");
	this.dsSave.addColumn("ID_SABUN", "string");
	this.dsSave.addColumn("ID_RESIDENT", "string");
	this.dsSave.addColumn("NO_ACCIDENT", "string");
	this.dsSave.addColumn("DT_ACCIDENT", "string");
	this.dsSave.addColumn("AM_ACCIDENT", "bigdecimal");
	this.dsSave.addColumn("DT_GIVE", "string");
	this.dsSave.addColumn("CD_PROGRESS", "string");
	this.dsSave.addColumn("CD_STATUS", "string");
	this.dsSave.addColumn("DS_ACCIDENT", "string");
	this.dsSave.addColumn("DS_FILE_NAME", "string");
	this.dsSave.addColumn("DS_FILE_PATH", "string");
	this.dsSave.addColumn("DS_FILESIZE", "string");
	this.dsSave.addColumn("DS_REMARK", "string");
	this.dsSave.addColumn("GR_SEARCH", "string");
	this.dsSave.addColumn("TY_AUTH", "string");
	this.dsSave.addColumn("GR_DEPT", "string");
	this.dsSave.addColumn("ID_USER", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
// 파알 DIR 정보
this.fnGetfilepath = function(dirCd) {
		
	this.dsFileDirInfoParam.clearData();
	this.dsFileDirInfoParam.addRow();
	
	this.dsFileDirInfoParam.setColumn(0, "CD_GUBUN", dirCd);
	
	var strSvcId    = "fileDirInfo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "fileDirInfo=dsFileDirInfoParam";
	var outData     = "dsFileDirInfo=fileDirInfo0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc,
						false); 		// 통신방법 정의 [생략가능]

	return this.dsFileDirInfo.getColumn(0, "DS_PATH");
};

 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if(!this.fnSelectValid()) return;

	this.gfnGridBeforeSelect(this.dxGrid);
	this.gfnSetFormStatus(this);

	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "CD_CORP", this.gfnNvl(this.dsSearch.getColumn(0, "CD_CORP"), ""));
	this.dsSelect.setColumn(0, "ID_SABUN", this.gfnNvl(this.dsSearch.getColumn(0, "ID_SABUN"), ""));
	this.dsSelect.setColumn(0, "DT_GIVE_FR", this.gfnNvl(this.dsSearch.getColumn(0, "DT_GIVE_FR"), ""));
	this.dsSelect.setColumn(0, "DT_GIVE_TO", this.gfnNvl(this.dsSearch.getColumn(0, "DT_GIVE_TO"), ""));
	this.dsSelect.setColumn(0, "GR_SEARCH", this.FormInfo.GR_SEARCH);
	this.dsSelect.setColumn(0, "TY_AUTH", this.FormInfo.TY_AUTH);
	this.dsSelect.setColumn(0, "GR_DEPT", this.AuthClient.CD_DEPT);
	this.dsSelect.setColumn(0, "ID_USER", this.AuthClient.ID_USER);	

	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
	
}

this.fnSelectValid = function(){
	if(this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)){
		this.fnValidCallback = function(){
			this.ccfCD_CORP.form.CDTextBox.setFocus();
		}
		this.gfnAlert("법인을 선택하세요!", "fnValidCallback");
		return false;
	}
// 	if(this.gfnIsNull(this.calDT_GIVE_FR.value) || this.gfnIsNull(this.calDT_GIVE_TO.value) ){
// 		this.fnValidCallback = function(){
// 			this.calDT_GIVE_FR.setFocus();
// 		}
// 		this.gfnAlert("지급일자를 입력하세요!", "fnValidCallback");
// 		return false;
// 	}else{
// 		if(this.calDT_GIVE_FR.value > this.calDT_GIVE_TO.value ){
// 			this.fnValidCallback = function(){
// 				this.calDT_GIVE_TO.setFocus();
// 			}
// 			this.gfnAlert("지급일자를 바르게 입력하세요!", "fnValidCallback");
// 			return false;
// 		}
// 	}
	
	return true;
}

this.fnAdd = function() {
	var nrow = this.gfnGridAdd(this.dxGrid);
	this.dsList.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
	this.dsList.setColumn(nrow, "DS_CORP", this.ccfCD_CORP.form.DSTextBox.value);
	this.dsList.setColumn(nrow, "CD_STATUS", "I"); //|E:종결|I:진행중|P:미결
}

/*
 *	삭제 버튼
 */
this.fnDel = function() { 
	var rows = this.dxGrid.getSelectedDatasetRows();
	if(rows.length > 0) {
		for(var i =0; i < rows.length; i++) {
			var nrow = rows[i];
			if(!this.gfnIsNull(this.dsList.getColumn(nrow, "DS_FILE_NAME"))){
				this.gfnAlert("첨부파일 먼저 삭제하세요!");
				return;
			}
		}
	}
	this.gfnGridDel(this.dxGrid); 
} 


/*
 *	저장 버튼
 */
this.fnSave = function() {

	// 그리드 필수항목 체크
	if (!this.gfnGridValidate(this.dxGrid)) return;
	
	this.dxGrid.updateToDataset();

	this.dsSave.clearData();

	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
			case "U":
			case "D":
				var nrow = this.dsSave.addRow();
				this.dsSave.setColumn(nrow, "TY_SAVE", flag);
				this.dsSave.setColumn(nrow, "NO_SEQ", (flag == "I" ? 0 : this.dsList.getColumn(i, "NO_SEQ")));
				this.dsSave.setColumn(nrow, "CD_CORP", this.gfnNvl(this.dsList.getColumn(i, "CD_CORP"), ""));
				this.dsSave.setColumn(nrow, "ID_SABUN", this.gfnNvl(this.dsList.getColumn(i, "ID_SABUN"), ""));
				this.dsSave.setColumn(nrow, "ID_RESIDENT", this.gfnNvl(this.dsList.getColumn(i, "ID_RESIDENT"), ""));
				this.dsSave.setColumn(nrow, "NO_ACCIDENT", this.gfnNvl(this.dsList.getColumn(i, "NO_ACCIDENT"), ""));
				this.dsSave.setColumn(nrow, "DT_ACCIDENT", this.gfnNvl(this.dsList.getColumn(i, "DT_ACCIDENT"), ""));
				this.dsSave.setColumn(nrow, "AM_ACCIDENT", this.gfnNvl(this.dsList.getColumn(i, "AM_ACCIDENT"), 0));
				this.dsSave.setColumn(nrow, "DT_GIVE", this.gfnNvl(this.dsList.getColumn(i, "DT_GIVE"), ""));
				this.dsSave.setColumn(nrow, "CD_PROGRESS", this.gfnNvl(this.dsList.getColumn(i, "CD_PROGRESS"), ""));
				this.dsSave.setColumn(nrow, "CD_STATUS", this.gfnNvl(this.dsList.getColumn(i, "CD_STATUS"), ""));
				this.dsSave.setColumn(nrow, "DS_ACCIDENT", this.gfnNvl(this.dsList.getColumn(i, "DS_ACCIDENT"), ""));
				this.dsSave.setColumn(nrow, "DS_FILE_NAME", this.gfnNvl(this.dsList.getColumn(i, "DS_FILE_NAME"), ""));
				this.dsSave.setColumn(nrow, "DS_FILE_PATH", this.gfnNvl(this.dsList.getColumn(i, "DS_FILE_PATH"), ""));
				this.dsSave.setColumn(nrow, "DS_FILESIZE", this.gfnNvl(this.dsList.getColumn(i, "DS_FILESIZE"), ""));
				this.dsSave.setColumn(nrow, "DS_REMARK", this.gfnNvl(this.dsList.getColumn(i, "DS_REMARK"), ""));
				this.dsSave.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
				this.dsSave.setColumn(nrow, "TY_AUTH", this.FormInfo.TY_AUTH);
				this.dsSave.setColumn(nrow, "GR_DEPT", this.AuthClient.CD_DEPT);
				this.dsSave.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
				break;
		}
	}	
	
	if (this.dsSave.rowcount == 0) return;

	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";

	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc);   // 통신방법 정의 [생략가능]
}



this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

this.fnPrint = function() {
}


/************************************************************************
 * Validate
 ************************************************************************/

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
		
	} else if(svcID == "save") {
		if (errorCode == 0) {
			this.fnSaveAfter = function(){
				this.FormBtns.Select.click();
			}
			this.gfnAlert("저장이 완료되었습니다.", "fnSaveAfter");
		} else {
			this.gfnAlert(errorMsg);
		}
	} 
}


/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if(id == "ccfCD_CORP"){
		;

	}else if(id == "ccfID_SABUN"){
		if(this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)){
			this.fnValidCallback = function(){
				this.ccfCD_CORP.form.CDTextBox.setFocus();
			}
			this.gfnAlert("법인을 선택하세요!", "fnValidCallback");
			return false;
		}
		dsUserParam.setColumn(nrow, "CD_DEPT", this.AuthClient.CD_DEPT);
		dsUserParam.setColumn(nrow, "CD_CORP", this.gfnNvl(this.ccfCD_CORP.form.CDTextBox.value,"%"));
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "YN_CORP", "N");
		dsUserParam.setColumn(nrow, "TY_RETIRE", "%");
	}
	
	return true;
};

this.fnAfterCDTextChanged = function(id, codeFindData) {	
	var arr = codeFindData;

	if(id == "ccfCD_CORP"){
		this.ccfID_SABUN.form.fnCodeFindClear();
		
	}else if(id == "ccfID_SABUN"){

	}	
}

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGrid_BeforeUserDataSetParam = function(id, dsUserParam, nrow){
	if(id == "DAX_CFBASEINFO_ALL") {
		dsUserParam.setColumn(nrow, "CD_DEPT", "");
		dsUserParam.setColumn(nrow, "CD_CORP", this.dsList.getColumn(this.dsList.rowposition, "CD_CORP"));
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "YN_CORP", "N");
		dsUserParam.setColumn(nrow, "TY_RETIRE", "%");
	}
 	return true;
};

this.fnGrid_AfterCDTextChanged = function(id, codeFindData) {
	;
}

this.fnGrid_EnterCell = function(obj:nexacro.Grid, row, cell) {
	;
}

//첨부파일 팝업
this.fnGrid_ExpandUp = function(obj:nexacro.Grid, e:nexacro.GridMouseEventInfo){
	var colnm = this.gfnGridGetBindColumnNameByIndex(obj, e.cell);
	//trace("fnGrid_ExpandUp >> colnm", colnm);	
	if(colnm == "DS_FILE_NAME"){
		if(this.gfnIsNull(this.dsList.getColumn(e.row, "ID_SABUN"))){
			this.gfnAlert("사원을 먼저 입력하세요!");
			return false;
		}
		if(this.gfnIsNull(this.dsList.getColumn(e.row, "DT_GIVE"))){
			this.gfnAlert("지급일자를 먼저 입력하세요!");
			return false;
		}
	
		this.fdg00.row = e.row;
		this.fdg00.open('FileOpen', FileDialog.LOAD);
	}
	else if(colnm == "BTN_FILE_DEL"){
		var sDS_FILE_NAME = this.dsList.getColumn(e.row, "DS_FILE_NAME");
		if(!this.gfnIsNull(sDS_FILE_NAME)){
			this.gfnConfirm("삭제하시겠습니까?", "fnFileDel");
		}
		
	}
};

this.fnGrid_AfterEdit = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo) {
	if(e.oldvalue != e.newvalue) {
		if(e.columnid == "DS_FILE_NAME") {
			this.dsList.setColumn(this.dsList.rowposition, "DS_FILE_PATH" ,"");
			this.dsList.setColumn(this.dsList.rowposition, "DS_FILESIZE" ,"");
		}
	}
}

/************************************************************************
 * 확장버튼 이벤트
 ************************************************************************/
this.fnFormDown = function(){
	this.dsExcelForm.clearData();
	this.gfnExcelExport(this.divData.form.grdForm);
}

this.fnExcelImport = function(){
	if(!this.fnSelectValid()) return;
	
	this.gfnExcelImport("dsExcelForm","Sheet1","A2","fnExcelImportCallback","import",this);
}


this.fnExcelImportCallback = function(sImportId, dsOut, dsSheet) {
	//trace("sImportId", sImportId);

 	if (dsOut.rowcount == 0)  {
		this.gfnAlert("엑셀파일에 내용이 없습니다."); 
		return false;
	}
	
	// 주석시작(양식 다운로드해서 업로드하는게 아니면 아래 부분 주석처리하고 값셋하는부분 더 아래부분 주석 풀어서 처리하면 됨, copyRow로 주석처리해야함)
// 	trace(dsOut.saveXML());
// 	for (var i=0; i< this.dsList.getColCount(); i++)
// 	{
// 		sColumnId = "Column"+i;
// 		
// 		var sColumnNm = this.gfnGridGetBindColumnNameByIndex(this.dxGrid, i);
// 		if (sColumnNm != "" && sColumnId != sColumnNm)
// 		{
// 			dsOut.updateColID(sColumnId, sColumnNm);
// 		}
// 	}  
// 	trace("==============111===============");
//	trace(dsOut.saveXML());

	
    //그리드 코드파인드 타게하려고 set_enableevent false 주석 막음 >> 속도가 안나면 set_enableevent false 할것
	//this.dsList.set_enableevent(false);
	for (var i=0; i< dsOut.rowcount; i++) {
		var nrow = this.dsList.addRow();
		
		//아래 copyRow가 컬럼변경 이벤트를 실행하지 않음. 코드파인더 실행때문에 이 위치로 이동
		// 양식이 일치하는 경우 copyRow
		//this.dsList.copyRow(nrow, dsOut, i);
		this.dsList.setColumn(nrow, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));  //법인            
		this.dsList.setColumn(nrow, "DS_CORP", this.dsSearch.getColumn(0, "DS_CORP"));  //법인            
		this.dsList.setColumn(nrow, "CD_STATUS", this.gfnNvl(dsOut.getColumn(i, "Column0"), ""));  //상태
		this.dsList.setColumn(nrow, "NO_ACCIDENT", this.gfnNvl(dsOut.getColumn(i, "Column1"), ""));  //사고번호
		this.dsList.setColumn(nrow, "ID_SABUN", this.gfnNvl(dsOut.getColumn(i, "Column2"), ""));  //사번
		this.dsList.setColumn(nrow, "DT_ACCIDENT", this.fnReplace(dsOut.getColumn(i, "Column3"), "-", ""));  //사고일자
		this.dsList.setColumn(nrow, "AM_ACCIDENT", this.gfnNvl(dsOut.getColumn(i, "Column4"), 0));  //공제금액
		this.dsList.setColumn(nrow, "DT_GIVE", this.fnReplace(dsOut.getColumn(i, "Column5"), "-", ""));  //지급일
		this.dsList.setColumn(nrow, "CD_PROGRESS", this.gfnNvl(dsOut.getColumn(i, "Column6"), ""));  //진행상태
		this.dsList.setColumn(nrow, "DS_ACCIDENT", this.gfnNvl(dsOut.getColumn(i, "Column7"), ""));  //사고내용
		this.dsList.setColumn(nrow, "DS_REMARK", this.gfnNvl(dsOut.getColumn(i, "Column8"), ""));  //비고
		
		this.dsList.setColumn(nrow, this.ucFlag, "I");
	}	
	//this.dsList.set_enableevent(true); 
	
	this.gfnSetFormStatus(this, "I");
};
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo){	
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};


this.dsList_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo){
	if(e.newvalue != e.oldvalue){
	}
};

this.fnReplace = function(orgText, fromSplit, toSplit){
	if(this.gfnIsNull(orgText)) return "";

	var newSplit = "";
	if(!this.gfnIsNull(toSplit)) newSplit = toSplit;

	var arrResult = orgText.split(fromSplit);
	var sResult = arrResult.join(newSplit);
	return sResult;
}
/************************************************************************
 * 파일관련
 ************************************************************************/
this.fdg00_onclose = function(obj:nexacro.FileDialog,e:nexacro.FileDialogEventInfo){
	this.addFileList(obj, e.virtualfiles);
};

this.addFileList = function(obj, filelist){
	this.FileList = filelist;
	if(filelist.length > 0) {
		var vFile;
		for (var i = 0; i < filelist.length; i++)
		{
			vFile = filelist[i];
			vFile.row = obj.row;
			vFile.addEventHandler("onsuccess", this.FileList_onsuccess, this);
			vFile.addEventHandler("onerror", this.FileList_onerror , this);
			
			vFile.open(null, 1);
		}
	}
}

this.FileList_onsuccess = function(obj:nexacro.VirtualFile, e:nexacro.VirtualFileEventInfo){
	switch (e.reason)
	{
		case 1:
			var size = obj.getFileSize();
			break;
		case 9:
			trace("FileList_onsuccess>>9");
			var row = obj.row;
			
			this.FileUpTransfer00.clearFileList();
			this.FileUpTransfer00.addFile(obj.filename, obj);	
			
			if(this.FileUpTransfer00.filelist.length > 0) {
				//this._waitCursor(true);
				
				var path = this.filepath + this.dsList.getColumn(obj.row, "DT_GIVE") + "/"+this.dsList.getColumn(obj.row, "ID_SABUN");
				//trace("FileList_onsuccess>>>path>>", path);
				this.dsList.setColumn(obj.row, "DS_FILE_NAME", obj.filename);
				this.dsList.setColumn(obj.row, "DS_FILE_PATH", path);
				
				var sUploadUrl = this.fileConfig.host + this.fileConfig.uploadUrl;
				//trace("FileList_onsuccess>>>sUploadUrl>>", sUploadUrl);
				
				this.FileUpTransfer00.setPostData("path", path);
				this.FileUpTransfer00.upload(sUploadUrl);		
			}
			break;
	}
}

this.FileList_onerror = function(obj:nexacro.VirtualFile, e:nexacro.VirtualFileErrorEventInfo){
	trace("errortype: "+e.errortype);
	trace("errormsg: "+e.errormsg);
	trace("statuscode: "+e.statuscode);
}

this.FileUpTransfer00_onerror = function(obj:nexacro.FileUpTransfer,e:nexacro.FileUpTransferErrorEventInfo){
	this._waitCursor(false);
	if(e.errormsg.indexOf("maxsize") > -1) {
		this.gfnAlert("첨부파일 허용용량("+ this.gfnCutFileSize(nexacro.toNumber(e.errormsg.split(':')[1])) + ")을 초과할 수 없습니다.");
	} else {
		this.gfnAlert(e.errormsg);
	}
};

this.FileUpTransfer00_onprogress = function(obj:nexacro.FileUpTransfer,e:nexacro.FileUpTransferProgressEventInfo){
	trace("FileUpTransfer00_onprogress: " + e.loaded+"/"+e.total);
};

this.FileUpTransfer00_onsuccess = function(obj:nexacro.FileUpTransfer,e:nexacro.FileUpTransferEventinfo){
	this._waitCursor(false);
	trace("FileUpTransfer00_onsuccess: " + e.code + "/" + e.message);
	if(e.code == 0) {
		if(e.datasets.length > 0) {
			for(var i = 0; i < e.datasets[0].rowcount; i++) {
				var row = obj.filelist[i].row;
				//trace("filesize>>>"+e.datasets[0].getColumn(i, "filesize"));
				this.dsList.setColumn(row, "DS_FILESIZE", e.datasets[0].getColumn(i, "filesize"));
			}
		}
	}
};

this.fnFileDel = function(id, val){
	if(val == false) return;
	
	this.dsDeleteList.clearData();
	
	var nrow = this.dsDeleteList.addRow();	
	this.dsDeleteList.setColumn(nrow, "filepath", this.dsList.getColumn(this.dsList.rowposition, "DS_FILE_PATH"));
	this.dsDeleteList.setColumn(nrow, "filename", this.dsList.getColumn(this.dsList.rowposition, "DS_FILE_NAME"));
	
	this.dsList.setColumn(this.dsList.rowposition, "DS_FILE_PATH", "");
	this.dsList.setColumn(this.dsList.rowposition, "DS_FILE_NAME", "");
	this.dsList.setColumn(this.dsList.rowposition, "DS_FILESIZE", "");
	
		
	var strSvcId    = "deletefile";
	var strSvcType  = "file/deleteFile";
	var inProc		= "";
	var inData      = "input=dsDeleteList";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnDeleteCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

this.fnDeleteCallback = function(svcID, errorCode, errorMsg) {
	if(svcID == "deletefile") {
		if (errorCode == 0) {
			this.fnSave();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

this.divData_objGrid_oncelldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo){
	var colnm = this.gfnGridGetBindColumnNameByIndex(obj, e.cell);
	if(colnm == "DS_FILE_NAME"){
		this.fnDownload();
	}
};

this.fnDownload = function() {
	if(this.dsList.rowcount == 0) return false;
	if(this.gfnIsNull(this.dsList.getColumn(this.dsList.rowposition, "DS_FILE_NAME"))) return false;
	
	
	var sFilename = this.dsList.getColumn(this.dsList.rowposition, "DS_FILE_NAME");
	var encodeFileName = encodeURIComponent(sFilename);
		
	var surl = this.fileConfig.host+ this.fileConfig.downloadUrl; // + encodeFileName;
	this.FileDownTransfer00.set_url(surl);
	this.FileDownTransfer00.setPostData("path", this.dsList.getColumn(this.dsList.rowposition, "DS_FILE_PATH"));
	this.FileDownTransfer00.setPostData("fileName", encodeFileName);
	if( system.navigatorname =="nexacro"){
		this.FileDownTransfer00.set_downloadfilename(sFilename);
	}
	this.FileDownTransfer00.download();
};

this.divData_objGrid_oncellclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	var colnm = this.gfnGridGetBindColumnNameByIndex(obj, e.cell);
	if(colnm == "BTN_FILE_DEL"){
		var sDS_FILE_NAME = this.dsList.getColumn(e.row, "DS_FILE_NAME");
		if(!this.gfnIsNull(sDS_FILE_NAME)){
			this.gfnConfirm("삭제하시겠습니까?", "fnFileDel");
		}
		
	}
};
]]></Script>
    <Objects>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DABPR_SETTLEMENT_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DABPR_SETTLEMENT_SAVE</Col>
          </Row>
          <Row>
            <Col id="TARGET">fileDirInfo</Col>
            <Col id="SP">DZUPR_FILEMANAGER_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="DS_CORP" type="STRING" size="256"/>
          <Column id="ID_SABUN" type="STRING" size="256"/>
          <Column id="DS_HNAME" type="STRING" size="256"/>
          <Column id="DT_GIVE_FR" type="STRING" size="256"/>
          <Column id="DT_GIVE_TO" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CORP"/>
            <Col id="DS_CORP"/>
            <Col id="ID_SABUN"/>
            <Col id="DS_HNAME"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsList" onvaluechanged="dsList_onvaluechanged">
        <ColumnInfo>
          <Column id="NO_SEQ" type="INT" size="256"/>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="DS_CORP" type="STRING" size="256"/>
          <Column id="CD_STATUS" type="STRING" size="256"/>
          <Column id="NO_ACCIDENT" type="STRING" size="256"/>
          <Column id="ID_SABUN" type="STRING" size="256"/>
          <Column id="DS_HNAME" type="STRING" size="256"/>
          <Column id="ID_RESIDENT" type="STRING" size="256"/>
          <Column id="DT_ACCIDENT" type="STRING" size="256"/>
          <Column id="AM_ACCIDENT" type="BIGDECIMAL" size="256"/>
          <Column id="DT_GIVE" type="STRING" size="256"/>
          <Column id="CD_PROGRESS" type="STRING" size="256"/>
          <Column id="DS_ACCIDENT" type="STRING" size="256"/>
          <Column id="DS_FILE_NAME" type="STRING" size="256"/>
          <Column id="DS_FILE_PATH" type="STRING" size="256"/>
          <Column id="DS_FILESIZE" type="STRING" size="256"/>
          <Column id="DS_REMARK" type="STRING" size="256"/>
          <Column id="BTN_FILE_DEL" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsExcelForm" useclientlayout="true">
        <ColumnInfo>
          <Column id="CD_STATUS" type="STRING" size="256"/>
          <Column id="NO_ACCIDENT" type="STRING" size="256"/>
          <Column id="ID_SABUN" type="STRING" size="256"/>
          <Column id="DT_ACCIDENT" type="STRING" size="256"/>
          <Column id="AM_ACCIDENT" type="BIGDECIMAL" size="256"/>
          <Column id="DT_GIVE" type="STRING" size="256"/>
          <Column id="CD_PROGRESS" type="STRING" size="256"/>
          <Column id="DS_ACCIDENT" type="STRING" size="256"/>
          <Column id="DS_REMARK" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsFileDirInfoParam">
        <ColumnInfo>
          <Column id="CD_GUBUN" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsFileDirInfo"/>
      <FileDialog id="fdg00" onclose="fdg00_onclose"/>
      <FileUpTransfer id="FileUpTransfer00" onprogress="FileUpTransfer00_onprogress" onsuccess="FileUpTransfer00_onsuccess" onerror="FileUpTransfer00_onerror"/>
      <Dataset id="dsDeleteList">
        <ColumnInfo>
          <Column id="filepath" type="STRING" size="256"/>
          <Column id="filename" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <FileDownTransfer id="FileDownTransfer00"/>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_CORP.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_CORP"/>
      <BindItem id="item4" compid="divSearch.form.ccfID_SABUN.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="ID_SABUN"/>
      <BindItem id="item5" compid="divSearch.form.ccfID_SABUN.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_HNAME"/>
      <BindItem id="item2" compid="divSearch.form.calDT_GIVE_FR" propid="value" datasetid="dsSearch" columnid="DT_GIVE_FR"/>
      <BindItem id="item3" compid="divSearch.form.calDT_GIVE_TO" propid="value" datasetid="dsSearch" columnid="DT_GIVE_TO"/>
    </Bind>
  </Form>
</FDL>
