<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="frameLogin" width="840" height="460" titletext="frameLogin" onload="form_onload" onsize="form_onsize" scrolltype="none" scrollbartype="none none">
    <Layouts>
      <Layout>
        <Static id="sta00" taborder="0" left="0" top="0" right="0" bottom="0" cssclass="sta_LOGIN_Bg" text=""/>
        <Div id="divLogin" taborder="1" text="" left="0" top="0" background="transparent" border="1px none transparent" width="840" height="450" visible="false" formscrollbartype="none" formscrolltype="none">
          <Layouts>
            <Layout>
              <Div id="login_logobox" taborder="4" left="0" top="0" width="400" height="450" cssclass="login_logobox" text="">
                <Layouts>
                  <Layout>
                    <Static id="sta00" taborder="0" text="Copyright ⓒ DL. All Rights Reserved." left="0" top="413" cssclass="sta_Login_copy" bottom="16" right="0"/>
                    <Static id="sta01" taborder="1" left="53" top="159" width="174" height="82" cssclass="sta_logo_DL"/>
                    <Static id="sta02" taborder="2" text="ERP" left="234" top="181" width="126" height="60" cssclass="sta_ERPtxt" font="normal bold 60px/normal &quot;Arial&quot;"/>
                  </Layout>
                </Layouts>
              </Div>
              <Div id="div_login_info" taborder="1" text="div00" left="400" top="0" height="450" width="440" cssclass="div_login_info">
                <Layouts>
                  <Layout>
                    <Button id="btnLogin" taborder="0" left="60" top="320" width="320" height="65" cssclass="btn_LOGIN_Login" onclick="divLogin_btnLogin_onclick" text="LOGIN"/>
                    <Div id="div_login_info_input" taborder="1" left="0" top="73" height="187" cssclass="div_login_info_input" right="0" text="">
                      <Layouts>
                        <Layout>
                          <Edit id="edId" taborder="0" left="60" top="69" width="320" height="50" cssclass="edi_login_input" onkeyup="divLogin_onkeyup" displaynulltext="사번" onchanged="divLogin_edId_onchanged"/>
                          <Edit id="edPw" taborder="1" left="60" top="edId:8" width="320" height="50" cssclass="edi_login_input" password="true" onkeyup="divLogin_onkeyup" displaynulltext="비밀번호"/>
                          <Static id="sta00" taborder="2" text="CARBONCO" left="60" top="0" width="320" height="47" cssclass="sta_companyName"/>
                        </Layout>
                      </Layouts>
                    </Div>
                    <Div id="div00" taborder="2" left="60" top="253" width="320" height="27" cssclass="div_id_memory">
                      <Layouts>
                        <Layout>
                          <CheckBox id="chk00" taborder="0" text="아이디 기억하기" left="0" top="6" width="150" height="20" cssclass="chk_id_memory" onchanged="divLogin_div_login_info_div00_chk00_onchanged"/>
                          <Static id="sta00" taborder="1" text="비밀번호 초기화" left="223" top="8" height="14" width="97" cssclass="sta_pw_reset" onclick="divLogin_div_login_info_div00_sta00_onclick"/>
                        </Layout>
                      </Layouts>
                    </Div>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[/**
*  컨설팅 표준화 작업
*  @MenuPath    frame > frameLogin
*  @FileName 	frameLogin.xfdl 
*  @Creator 	consulting
*  @CreateDate 	2017.03.09
*  @Desction    
************** 소스 수정 이력 ***********************************************
*  date          		Modifier                Description
*******************************************************************************
*  2017.03.09     	consulting 	            	최초 생성 
*  2017.10.17     	consulting       	       	주석 정비
*  2018.01.16		consulting			        gfnGetApplication 공통함수 변경
*******************************************************************************
*/

/************************************************************************************************
 * FORM 변수 선언 영역
 ************************************************************************************************/
this.objApp 	  = this.gfnGetApplication();
this.objMainframe = this.objApp.mainframe;
this.gcToken 	  = "";
/************************************************************************************************
 * FORM EVENT 영역(onload, onbeforeclose)
 ************************************************************************************************/
this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo) {	
	this.objApp.gdsUserInfo.clearData();
    this.divLogin.form.set_scrollbartype("none");
	this.form_onsize();
	
	if (system.navigatorname != "nexacro" && (location.href.indexOf("tk=") > -1 || sessionStorage.getItem("tk") != null)) {
		this.fnUserInfo();
	} else {
		this.divLogin.set_visible(true);
	}
	
	this.divLogin.form.div_login_info.form.div_login_info_input.form.sta00.set_text(nexacro.getEnvironmentVariable("evCompanyName"));
	
	if (localStorage.getItem("nexa-id") != null) {
		this.divLogin.form.div_login_info.form.div_login_info_input.form.edId.set_value(localStorage.getItem("nexa-id"));
		this.divLogin.form.div_login_info.form.div_login_info_input.form.edPw.setFocus();
		this.divLogin.form.div_login_info.form.div00.form.chk00.set_value(true);
	} else {
		this.divLogin.form.div_login_info.form.div_login_info_input.form.edId.setFocus();
	}
};

/**
* form onsize 변경시
* @return 
* @example
* @memberOf public
*/ 
this.form_onsize = function()
{		
	var nLeft = (this.objMainframe.width / 2) - Math.round((this.divLogin.form.getOffsetWidth()) / 2);
	var nTop = (this.objMainframe.height / 2) - Math.round((this.divLogin.form.getOffsetHeight()) / 2);
	
	if(nLeft <= 0)
	{
		this.divLogin.form.setOffsetLeft(0);
	}
	else
	{
		this.divLogin.setOffsetLeft(nLeft);
		this.divLogin.setOffsetTop(nTop);
	}
};

/************************************************************************************************
 * CALLBACK 콜백 처리부분(Transaction, Popup)
 ************************************************************************************************/
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	var dec_key = nexacro.getEnvironmentVariable("evKey");
	var key = CryptoJS.enc.Hex.parse(dec_key.toString());
	
	switch(svcID)
	{
		case "login":			
			this.dsLogin.clearData();
			this.objApp.gdsUserInfo.clearData();
			this.objApp.gdsDeptInfo.clearData();
			
			if (this.dsDeptList.rowcount > 0 ) {
				nexacro.setHTTPHeaderVariable("X-AUTH-TOKEN", this.gcToken);
				nexacro.setEnvironmentVariable("LAST-DATE-TOKEN", new Date());
				
				if (this.dsDeptList.rowcount == 1 ) {															
					var nRow = this.dsLogin.addRow();
					this.dsLogin.setColumn(nRow , "ID_USER", CryptoJS.AES.encrypt(this.dsDeptList.getColumn(this.dsDeptList.rowposition, "ID_USER"), key, {iv:key}).toString());
					this.dsLogin.setColumn(nRow , "CD_CORP", CryptoJS.AES.encrypt(this.dsDeptList.getColumn(this.dsDeptList.rowposition, "CD_CORP"), key, {iv:key}).toString());
					this.dsLogin.setColumn(nRow , "CD_DEPT", CryptoJS.AES.encrypt(this.dsDeptList.getColumn(this.dsDeptList.rowposition, "CD_DEPT"), key, {iv:key}).toString());
					
					this.fnUserInfo();
				} else {
					this.gfnGyumjikOpen(this.dsDeptList);
				}
				return;
			}
			
			alert("로그인에 실패하였습니다.");
			break;
		
		case "loginInfo":
			if (this.dsUserInfo.rowcount == 1 ) {		
				//사용자테마 설정
				var id_theme = this.dsUserInfo.getColumn(0, 'ID_THEME');
				
				nexacro.setHTTPHeaderVariable("X-AUTH-TOKEN", this.gcToken);
				nexacro.setEnvironmentVariable("LAST-DATE-TOKEN", new Date());
				
				// 사용자 정보 글로벌데이타셋에 저장				
				this.objApp.gdsUserInfo.copyData(this.dsUserInfo);
				this.objApp.gdsDeptInfo.copyData(this.dsDeptList);
				
				var userInfo = this.objApp.gvUserInfo;
				for(var i = 0; i < this.dsUserInfo.colinfos.length; i++) {
					var col = this.dsUserInfo.colinfos[i].name;
					userInfo[col] = this.dsUserInfo.getColumn(0, col);
				}
				
				this.dsUserInfo.clearData();
				this.dsDeptList.clearData();
				
				//gloval variable 세팅					
				var id_user = this.objApp.gdsUserInfo.getColumn(0,"ID_USER");
				nexacro.setHTTPHeaderVariable("X-AUTH-USER", CryptoJS.AES.encrypt("[ERP] " + id_user, key, {iv:key}).toString());
				nexacro.setEnvironmentVariable("evUserId", id_user);
				nexacro.setEnvironmentVariable("evUserNm", this.objApp.gdsUserInfo.getColumn(0,"DS_HNAME"));
				
				sessionStorage.setItem("tk", CryptoJS.AES.encrypt(this.gcToken, key, {iv:key}).toString());
				
				window.history.pushState("erp","", "?v=1");
				/*
				if (system.navigatorname != "nexacro") {
					var param = this.gfnGetUrlParam(location.href);
					
					var urlparam = "?";
					if(location.href.indexOf("?") > -1) {
						urlparam = location.href.substr(location.href.indexOf("?"));
						if(urlparam.indexOf("tk=") == -1) {
							urlparam += "&";
						}
					}
					if (urlparam.indexOf("tk=") == -1) {
						window.history.pushState("erp","", urlparam + "tk=" + encId);
					}
					else if (param.tk != encId) {
						window.history.pushState("erp","", urlparam.replace("tk="+param.tk, "tk="+encId));
					}
				}
				*/
				
				if (!this.gfnIsNull(id_theme) && !setDisplayTheme(id_theme)) {
					return;
				}
				
				// 프레임 변경
				this.fnSetSeprateFrame();
				return;				
			} else {
				this.divLogin.set_visible(true);
			}
			break;
	}
};

this.gfnGyumjikOpen = function(ds, change) {
	if(change == true) {
		this.dsLogin.clearData();
		this.dsDeptList.copyData(ds);
	}
	var sTitle = "부서선택";
	var oArg = {deptList:ds};
	var oOption = {title:sTitle};	//top, left를 지정하지 않으면 가운데정렬 //"top=20,left=370"
	
	this.gfnOpenPopup("pop_gyumjik","cmm::cmmGyumjik.xfdl",oArg,"fnGyumjikCallback",oOption);
};

this.fnGyumjikCallback = function(strId, val) {
	if (val != null) {
		
		for(var i = this.objApp.gvWorkFrame.frames.length - 1; i >= 0; i--) {
			this.objApp.gvMdiFrame.form.fnTabOnClose(this.objApp.gvWorkFrame.frames[i].name);
		}
	
		var dec_key = nexacro.getEnvironmentVariable("evKey");
		var key = CryptoJS.enc.Hex.parse(dec_key.toString());
		
		var json = JSON.parse(val);
		var nRow = this.dsLogin.addRow();
		this.dsLogin.setColumn(nRow , "ID_USER", CryptoJS.AES.encrypt(json.ID_USER, key, {iv:key}).toString());
		this.dsLogin.setColumn(nRow , "CD_CORP", CryptoJS.AES.encrypt(json.CD_CORP, key, {iv:key}).toString());
		this.dsLogin.setColumn(nRow , "CD_DEPT", CryptoJS.AES.encrypt(json.CD_DEPT, key, {iv:key}).toString());
		
		this.fnUserInfo();
	}
};

/************************************************************************************************
 * CRUD 및 TRANSACTION 서비스 호출 처리
 ************************************************************************************************/

/************************************************************************************************
 * 사용자 FUNCTION 영역
 ************************************************************************************************/
/**
 * 로그인 transaction
 * @param {string} reLoginYn 
 * @return 
 * @example
 *
 * @memberOf 
 */
this.fnLogin = function() 
{	
	var id = this.divLogin.form.div_login_info.form.div_login_info_input.form.edId.text;
	var pw = this.divLogin.form.div_login_info.form.div_login_info_input.form.edPw.text;
	
	if(this.gfnIsNull(id)) {
		this.fnVaidateCallback = function() {
			this.divLogin.form.edId.setFocus();
		}
		this.gfnAlert("아이디를 입력하세요.", "fnVaidateCallback");
		return false;
	}
	if(this.gfnIsNull(pw)) {
		this.fnVaidateCallback = function() {
			this.divLogin.form.edPw.setFocus();
		}
		this.gfnAlert("비밀번호를 입력하세요.", "fnVaidateCallback");
		return false;
	}
	
	this.gcToken = "";
	nexacro.removeHTTPHeaderVariable("X-AUTH-TOKEN");
	sessionStorage.removeItem("tk");
	
	var dec_key = nexacro.getEnvironmentVariable("evKey");
	var key = CryptoJS.enc.Hex.parse(dec_key.toString());
	
	this.dsSearch = new Dataset();
	this.dsSearch.addColumn("ID_USER", "string");
	this.dsSearch.addColumn("ID_PASSWORD", "string");
	
	this.dsSearch.addRow();
	this.dsSearch.setColumn(0, "ID_USER", CryptoJS.AES.encrypt(id, key, {iv:key}).toString());
	this.dsSearch.setColumn(0, "ID_PASSWORD", CryptoJS.AES.encrypt(pw, key, {iv:key}).toString());
	
	var strSvcId    = "login";
	var strSvcType  = "login";
	
	var inProc		= "";
	var inData      = "dsLogin=dsSearch";
	var outData     = "dsDeptList=output0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};	

this.fnUserInfo = function(rowIndex) 
{	
	var strSvcId    = "loginInfo";
	var strSvcType  = "loginInfo";

	var inProc		= "";
	var inData      = "dsLogin=dsLogin";
	var outData     = "dsUserInfo=output0 dsDeptList=output1";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	if (system.navigatorname != "nexacro") {
// 		var param = this.gfnGetUrlParam(location.href);
// 		if (param.tk != null) {
// 			strArg = "tk=" + param.tk;
// 		}
		if (sessionStorage.getItem("tk") != null) {	
			var dec_key = nexacro.getEnvironmentVariable("evKey");
			var key = CryptoJS.enc.Hex.parse(dec_key.toString());	
			nexacro.setHTTPHeaderVariable("X-AUTH-TOKEN", CryptoJS.AES.decrypt(sessionStorage.getItem("tk"), key, {iv:key}).toString(CryptoJS.enc.Utf8));
		}
	}	
		
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};	

/**
* 로그인 성공시 처리 프레임 변경 등...
* @return 
* @example
* @memberOf 
*/ 
this.fnSetSeprateFrame = function()
{	
	if(nexacro.getEnvironmentVariable("evRunMode") == "2") {
		if (this.objApp.mainframe.width < this.objApp.gvMaxWidth) {
			this.objApp.mainframe.set_width(this.objApp.gvMaxWidth);
		}
	}
	
	var url;
	if(system.navigatorname == "nexacro") { 
		url = nexacro.getApplication().xadl;
	} else {
		url = window.location.href;
	}
	var param = this.gfnGetUrlParam(url);
	if (param.ID_FORM != null) {
		// 외부에서 화면으로 직접 링크
		this.objApp.gvVFrameSet.set_separatesize("0,*,0");	
		this.objApp.gvHFrame.set_separatesize("0,*");
		this.objApp.gvVFrameSet1.set_separatesize("0,0,*,0");
		this.objApp.gvMainFrame.set_formurl("frame::frameWorkDirect.xfdl");
		
	} else {
		this.objApp.gvVFrameSet.set_separatesize("0,*,0");	
	}
	
	// topframe argument setting	
	this.objApp.gvTopFrame.form.fnLoad();
	this.objApp.gvTopFrame.form.fnSetName();
	
	this.objApp.gvLeftFrame.form.fnSetModule();	
	
	//mainform 메인화면 구성 데이터 조회
	this.objApp.gvMainFrame.form.fnSelect();
};

/************************************************************************************************
 * 각 COMPONENT 별 EVENT 영역
 ************************************************************************************************/
this.divLogin_btnLogin_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{	
	this.fnLogin();	//서버와통신
};

this.divLogin_onkeyup = function(obj:nexacro.Edit,e:nexacro.KeyEventInfo) {
	if (e.keycode == 13) {
		var id = this.divLogin.form.div_login_info.form.div_login_info_input.form.edId.text
		var pw = this.divLogin.form.div_login_info.form.div_login_info_input.form.edPw.text;
		if (!this.gfnIsNull(id) && !this.gfnIsNull(pw)) {
			this.rememberMe();
			this.fnLogin();	//서버와통신
		}
	}
};

this.divLogin_div_login_info_div00_chk00_onchanged = function(obj:nexacro.CheckBox,e:nexacro.CheckBoxChangedEventInfo) {
	this.rememberMe();
};

this.rememberMe = function() {
	if (this.divLogin.form.div_login_info.form.div00.form.chk00.value) {
		if (localStorage.getItem("nexa-id")) {
			localStorage.removeItem("nexa-id");
		}
		localStorage.setItem("nexa-id", this.divLogin.form.div_login_info.form.div_login_info_input.form.edId.value);	
	} else {
		localStorage.removeItem("nexa-id");
	}
}

this.divLogin_div_login_info_div00_sta00_onclick = function(obj:nexacro.Static, e:nexacro.ClickEventInfo) {
// 	var oArgs = {};
// 	var oOption = {closebutton : 'false'};
// 	this.gfnOpenPopup('password_reset', 'dzz::DZZ_PASSWORD_RESET.xfdl', {}, function(svcId, oRtn){}, oOption);
	
	this.gfnOpenPopup("passwordReset", "dzz::DZZ_PASSWORD_RESET.xfdl", "", "", { titlebar: false });
}
]]></Script>
    <Objects>
      <Dataset id="dsUserInfo">
        <ColumnInfo>
          <Column id="ID_USER" type="STRING" size="256"/>
          <Column id="DS_HNAME" type="STRING" size="256"/>
          <Column id="CD_DEPT" type="STRING" size="256"/>
          <Column id="DS_DEPT" type="STRING" size="256"/>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="DS_CORP" type="STRING" size="256"/>
          <Column id="ID_SABUN" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsDeptList">
        <ColumnInfo>
          <Column id="ID_USER" type="STRING" size="256"/>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="DS_CORP" type="STRING" size="256"/>
          <Column id="CD_DEPT" type="STRING" size="256"/>
          <Column id="DS_DEPT" type="STRING" size="256"/>
          <Column id="DT_PWDCHG" type="STRING" size="256"/>
          <Column id="TY_PASSWORD" type="STRING" size="256"/>
          <Column id="MM_PASSWORD" type="STRING" size="256"/>
          <Column id="DT_CURRENT" type="STRING" size="256"/>
          <Column id="YN_INIT" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsLogin">
        <ColumnInfo>
          <Column id="ID_USER" type="STRING" size="256"/>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="CD_DEPT" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
  </Form>
</FDL>
