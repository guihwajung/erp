<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="마감작업(현장)" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" cssclass="div_SEARCH_Bg" formscrolltype="none" height="46.0" right="0">
          <Layouts>
            <Layout>
              <Static id="staCD_CORP" taborder="0" text="법인" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_CORP" CDTextWidth="30" taborder="1" left="staCD_CORP:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DSX_CFCORP"/>
              <Static id="staCD_SITE" taborder="2" text="현장코드" left="ccfCD_CORP:0.0" top="10.0" width="92.0" height="24.0" textAlign="center" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_SITE" CDTextWidth="80" taborder="3" left="staCD_SITE:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DSX_CFSITE"/>
              <Static id="staYM_WORK" taborder="4" text="작업년월" left="ccfCD_SITE:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYM_WORK" taborder="5" left="staYM_WORK:0.0" top="10.0" width="90" height="24.0" url="cmm::cmmCalMM.xfdl"/>
              <Static id="staTY_SALARY" taborder="6" text="채용구분" left="ctclYM_WORK:0.0" top="10.0" width="92.0" height="24.0" visible="false" cssclass="sta_WF_SchLabel"/>
              <Combo id="cboTY_CHAIYONG" taborder="7" left="staTY_SALARY:0.0" top="10.0" width="100" height="24.0" datacolumn="DS_CODE" codecolumn="CD_CODE" value="" onitemchanged="fnSearchInit" index="0" visible="false" innerdataset="dsTY_CHAIYONG"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList">
        <ColumnInfo>
          <Column id="TY_CHECK" type="STRING" size="256"/>
          <Column id="YN_CHK" type="STRING" size="256"/>
          <Column id="DS_NAME" type="STRING" size="256"/>
          <Column id="NO_ID" type="STRING" size="256"/>
          <Column id="TY_CHAIYONG" type="STRING" size="256"/>
          <Column id="CT_WORK" type="INT" size="256"/>
          <Column id="AM_WOLGUB" type="INT" size="256"/>
          <Column id="RT_GS" type="BIGDECIMAL" size="256"/>
          <Column id="AM_IMGUM" type="INT" size="256"/>
          <Column id="AM_PREPAY" type="INT" size="256"/>
          <Column id="AM_SODUK" type="INT" size="256"/>
          <Column id="AM_JUMIN" type="INT" size="256"/>
          <Column id="AM_GOYONGPER" type="INT" size="256"/>
          <Column id="AM_KOOKMIN" type="INT" size="256"/>
          <Column id="AM_MEDICARE" type="INT" size="256"/>
          <Column id="AM_GONGJE" type="INT" size="256"/>
          <Column id="AM_JIGUB" type="INT" size="256"/>
          <Column id="CT_WORKT" type="INT" size="256"/>
          <Column id="CT_WORKNT" type="INT" size="256"/>
          <Column id="AM_IMGUMT" type="INT" size="256"/>
          <Column id="AM_IMGUMNT" type="INT" size="256"/>
          <Column id="AM_GOYONGT" type="INT" size="256"/>
          <Column id="AM_GOYONGNT" type="INT" size="256"/>
          <Column id="TT_RWPAY" type="INT" size="256"/>
          <Column id="TT_OTPAY" type="INT" size="256"/>
          <Column id="TT_NWPAY" type="INT" size="256"/>
          <Column id="TT_WWPAY" type="INT" size="256"/>
          <Column id="TT_MWPAY" type="INT" size="256"/>
          <Column id="TT_HWPAY" type="BIGDECIMAL" size="256"/>
          <Column id="TT_ETCPAY" type="INT" size="256"/>
          <Column id="AM_PREIMGUM" type="INT" size="256"/>
          <Column id="AM_PREJIGUB" type="INT" size="256"/>
          <Column id="AM_NETJIGUB" type="INT" size="256"/>
          <Column id="AM_PREGONGJE" type="INT" size="256"/>
          <Column id="AM_PRESODUK" type="INT" size="256"/>
          <Column id="AM_PREJUMIN" type="INT" size="256"/>
          <Column id="AM_PREKOOKMIN" type="INT" size="256"/>
          <Column id="AM_PREHEALTH" type="INT" size="256"/>
          <Column id="AM_PREGOYONGPER" type="INT" size="256"/>
          <Column id="YN_COSTTUJA" type="STRING" size="256"/>
          <Column id="YN_ANGJAUN" type="STRING" size="256"/>
          <Column id="AM_FOOD" type="INT" size="256"/>
          <Column id="NO_ERPKEY" type="STRING" size="256"/>
          <Column id="DS_APPROVALGW" type="STRING" size="256"/>
          <Column id="CD_TRADE" type="STRING" size="256"/>
          <Column id="NO_SEQ" type="STRING" size="256"/>
          <Column id="YN_ISSUESLIP" type="STRING" size="256"/>
          <Column id="YN_CANCELSLIP" type="STRING" size="256"/>
          <Column id="YN_QUERYSLIP" type="STRING" size="256"/>
          <Column id="YN_APPROVAL" type="STRING" size="256"/>
          <Column id="YN_QUERYAPPROVAL" type="STRING" size="256"/>
          <Column id="NO_GROUPWARE" type="STRING" size="256"/>
          <Column id="CD_AUTOSLIP" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsList2">
        <ColumnInfo>
          <Column id="YN_MAGAM" type="STRING" size="256"/>
          <Column id="YN_SLIP" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsList3"/>
      <Dataset id="dsList4"/>
      <Dataset id="dsList5"/>
      <Dataset id="dsList6"/>
      <Dataset id="dsList7"/>
      <Dataset id="dsList8"/>
      <Dataset id="dsList9"/>
      <Dataset id="dsList10"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DSBPR_MONMAGAM_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">update</Col>
            <Col id="SP">DSBPR_MONMAGAM_UPDATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">magamcheck</Col>
            <Col id="SP">DSBPR_MAGAMCHECK_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">magam</Col>
            <Col id="SP">DSBPR_MONMAGAM</Col>
          </Row>
          <Row>
            <Col id="TARGET">magamcancel</Col>
            <Col id="SP">DSBPR_MONMAGAM_CANCEL</Col>
          </Row>
          <Row>
            <Col id="TARGET">issuemagam</Col>
            <Col id="SP">DSBPR_AUTOSLIP_ISSUE_MAGAM</Col>
          </Row>
          <Row>
            <Col id="TARGET">issuemagamcancel</Col>
            <Col id="SP">DSBPR_AUTOSLIP_ISSUE_MAGAM_CANCEL</Col>
          </Row>
          <Row>
            <Col id="TARGET">autosliplock</Col>
            <Col id="SP">DSBPR_AUTOSLIP_LOCK</Col>
          </Row>
          <Row>
            <Col id="TARGET">autoslipunlock</Col>
            <Col id="SP">DSBPR_AUTOSLIP_UNLOCK</Col>
          </Row>
          <Row>
            <Col id="TARGET">venok</Col>
            <Col id="SP">DSBPR_MONMAGAM_VEN</Col>
          </Row>
          <Row>
            <Col id="TARGET">vencancel</Col>
            <Col id="SP">DSBPR_MONMAGAM_VEN</Col>
          </Row>
          <Row>
            <Col id="TARGET">monpayreport</Col>
            <Col id="SP">DSBPR_MONPAY_REPORT_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">mondereport</Col>
            <Col id="SP">DSBPR_MONDE_PRINT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="YM_WORK" type="STRING" size="256"/>
          <Column id="TY_CHAIYONG" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CORP"> </Col>
            <Col id="CD_SITE"> </Col>
            <Col id="YM_WORK"> </Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_CHAIYONG">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">1</Col>
            <Col id="DS_CODE">상용직</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">2</Col>
            <Col id="DS_CODE">일용직</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)  
{ 
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();	  
	
		
	//법인 셋팅
	this.divSearch.form.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);
	this.divSearch.form.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP);
	
	//현장 코드
// 	this.divSearch.form.ccfCD_SITE.form.CDTextBox.set_value(this.AuthClient.CD_SITE);
// 	this.divSearch.form.ccfCD_SITE.form.DSTextBox.set_value(this.AuthClient.DS_SITE);
	/* CD_SITE, DS_SITE 이전 값 받아오는 부분 START */
	var cd_site = "";
	var ds_site = "";
	if(!this.gfnIsNull(this.objApp.DW_SPACE98)) {
		cd_site = this.objApp.DW_SPACE98;
		ds_site = this.objApp.DW_SPACE99;
	} else {
		cd_site = this.AuthClient.CD_SITE;
		ds_site = this.AuthClient.DS_SITE;
	}
	
	this.dsSearch.setColumn(0, "CD_SITE", cd_site);
	this.divSearch.form.ccfCD_SITE.form.DSTextBox.set_value(ds_site)
	/* CD_SITE, DS_SITE 이전 값 받아오는 부분 END */
	
// 	trace("this.objApp.DS_SPACE01", this.objApp.DS_SPACE01);
// 	trace("this.objApp.DS_SPACE02", this.objApp.DS_SPACE02);
// 	this.ccfCD_SITE.form.CDTextBox.set_value(this.objApp.DS_SPACE01);
// 	this.ccfCD_SITE.form.DSTextBox.set_value(this.objApp.DS_SPACE02);	

	
	// GR_SEARCH가 2보다 크면.. 법인코드 disable
	// GR_SEARCH가 7또는 9 인경우 부서코드 disable	
	//trace("GR_SEARCH", this.FormInfo.GR_SEARCH);
	if( this.FormInfo.GR_SEARCH  >= "2"){
		this.divSearch.form.ccfCD_CORP.set_enable(false);
	}
	
	if(this.FormInfo.GR_SEARCH == "7" || this.FormInfo.GR_SEARCH == "9"){
		this.divSearch.form.ccfCD_SITE.set_enable(false);
	} 	
		
	//출역월 셋팅
	var today = this.gfnGetDate().substring(0,6);
	this.divSearch.form.ctclYM_WORK.form.TextBox.set_value(today);
	
	//채용구분
	this.cboTY_CHAIYONG.set_index(1); 
	

	//다른화면의 파라미터 세팅하기
	var sPARAM_YM_WORK = this.getOwnerFrame().YM_WORK;
	var sPARAM_CD_CORP = this.getOwnerFrame().CD_CORP;
	var sPARAM_DS_CORP = this.getOwnerFrame().DS_CORP;
	var sPARAM_CD_SITE = this.getOwnerFrame().CD_SITE;
	var sPARAM_DS_SITE = this.getOwnerFrame().DS_SITE;

// trace("sPARAM_YM_WORK", sPARAM_YM_WORK);
// trace("sPARAM_CD_CORP", sPARAM_CD_CORP);
// trace("sPARAM_DS_CORP", sPARAM_DS_CORP);
// trace("sPARAM_CD_SITE", sPARAM_CD_SITE);
// trace("sPARAM_DS_SITE", sPARAM_DS_SITE);
	
	if(!this.gfnIsNull(sPARAM_YM_WORK)){
		this.divSearch.form.ctclYM_WORK.form.TextBox.set_value(sPARAM_YM_WORK);
	}	
	if(!this.gfnIsNull(sPARAM_CD_CORP)){
		this.divSearch.form.ccfCD_CORP.form.CDTextBox.set_value(sPARAM_CD_CORP);
		this.divSearch.form.ccfCD_CORP.form.DSTextBox.set_value(sPARAM_DS_CORP);
	}
	if(!this.gfnIsNull(sPARAM_CD_SITE)){
		this.divSearch.form.ccfCD_SITE.form.CDTextBox.set_value(sPARAM_CD_SITE);
		this.divSearch.form.ccfCD_SITE.form.DSTextBox.set_value(sPARAM_DS_SITE);
	}


	//YN_CHK =  1 인 ROW는 only READ 
	//this.dxGrid.setCellProperty("body", 14, "edittype", "expr:YN_CHK !='1'?'mask':'none'");
	this.dxGrid.setCellProperty("body", this.dxGrid.getBindCellIndex("body", "AM_SODUK"), "edittype", "expr:YN_CHK !='1'?'mask':'none'");
	this.dxGrid.setCellProperty("body", this.dxGrid.getBindCellIndex("body", "AM_JUMIN"), "edittype", "expr:YN_CHK !='1'?'mask':'none'");
	this.dxGrid.setCellProperty("body", this.dxGrid.getBindCellIndex("body", "AM_GOYONGPER"), "edittype", "expr:YN_CHK !='1'?'mask':'none'");
	this.dxGrid.setCellProperty("body", this.dxGrid.getBindCellIndex("body", "AM_KOOKMIN"), "edittype", "expr:YN_CHK !='1'?'mask':'none'");
	this.dxGrid.setCellProperty("body", this.dxGrid.getBindCellIndex("body", "AM_MEDICARE"), "edittype", "expr:YN_CHK !='1'?'mask':'none'");
		
	this.FormBtns.Select.click();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	this.FormBtns.Add.set_enable(false);
	this.FormBtns.Del.set_enable(false);
	//this.FormBtns.Reset.set_enable(true); 
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnFormButtonNr = this.gfnFormButtonAdd("BTN_MONMAGAM", "fnTbbMonthMagam"); 				// 월 집계
	this.btnFormButtonDe = this.gfnFormButtonAdd("BTN_MONMAGAM_CANCEL", "fnTbbMonthMagamCancel"); 	// 월 집계 취소	
	this.btnFormButtonOc = this.gfnFormButtonAdd("BTN_SLIP", "fnTbbInsertSlip"); 
	this.btnFormButtonPh = this.gfnFormButtonAdd("BTN_SLIP_CANCEL", "fnTbbCancelSlip"); 
	this.btnFormButtonCe = this.gfnFormButtonAdd("BTN_SHOW_SLIP", "fnTbbSelectSlip");
	this.btnMonMagam_Ven = this.gfnFormButtonAdd("BTN_MONMAGAM_VEN", "fnMonMagam_Ven");
	this.btnMonMagam_Ven_Cal = this.gfnFormButtonAdd("BTN_MONMAGAM_VEN_CAL", "fnMonMagam_Ven_Cal");
	this.btnMonPayPrint = this.gfnFormButtonAdd("BTN_MONPAY_PRINT", "fnMonPay_Print");	// 임금명세서 출력
	this.btnMonDePrint = this.gfnFormButtonAdd("BTN_MONDE_PRINT", "fnMonDe_Print");	// 노무비명세서
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;
	this.ccfCD_SITE = this.divSearch.form.ccfCD_SITE;
	this.ctclYM_WORK = this.divSearch.form.ctclYM_WORK;
	this.cboTY_CHAIYONG = this.divSearch.form.cboTY_CHAIYONG;
	
	this.magamflag = false;	//현장마감 flag
	this.slipflag = false;  //전표발행 flag
	
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_SITE.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
 	this.ccfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";
 	this.ccfCD_SITE.AfterCDTextChanged = "fnAfterCDTextChanged";

	this.gfnGridInit(this.dxGrid, this.dsList, "DS", "DSB_MAGAM");
	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
	this.dxGrid.EnterCell = "fnGrid_EnterCell";
	this.dxGrid.AfterEdit = "fnGrid_AfterEdit";
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	
	/*	DSBPR_MONMAGAM_SELECT 마감 조회*/
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_SITE", "string");
	this.dsSelect.addColumn("YM_WORK", "string");
	this.dsSelect.addColumn("TY_CHAIYONG", "string");

	/* DSBPR_MAGAMCHECK_SELECT 마감확인 조회*/
	this.dsMagamcheck = new Dataset();
	this.dsMagamcheck.addColumn("CD_SITE", "string");
	this.dsMagamcheck.addColumn("YM_WORK", "string");
	this.dsMagamcheck.addColumn("TY_CHAIYONG", "string");

	
	/*	DSBPR_MONMAGAM 현장마감*/
	this.dsMagam = new Dataset();
	this.dsMagam.addColumn("CD_SITE", "string");
	this.dsMagam.addColumn("YM_WORK", "string");
	this.dsMagam.addColumn("ID_INSERT", "string");
	this.dsMagam.addColumn("GUBUN", "string");
	
	/*	DSBPR_MONMAGAM_CANCEL 현장마감 취소*/
	this.dsMagamcancel = new Dataset();
	this.dsMagamcancel.addColumn("CD_SITE", "string");
	this.dsMagamcancel.addColumn("YM_WORK", "string");
	this.dsMagamcancel.addColumn("ID_INSERT", "string");
	this.dsMagamcancel.addColumn("NO_ERPKEY", "string");
	this.dsMagamcancel.addColumn("GUBUN", "string");
	
	/* DSBPR_AUTOSLIP_ISSUE_MAGAM 전표발행*/
	this.dsIssuemagam = new Dataset();
	this.dsIssuemagam.addColumn("CD_CORP", "string");
	this.dsIssuemagam.addColumn("CD_SITE", "string");
	this.dsIssuemagam.addColumn("YM_WORK", "string");
	this.dsIssuemagam.addColumn("DT_ACCOUNT", "string");
	this.dsIssuemagam.addColumn("DT_REQUEST", "string");
	this.dsIssuemagam.addColumn("TY_CHAIYONG", "string");
	this.dsIssuemagam.addColumn("ID_USER", "string");
	
	/* DSBPR_AUTOSLIP_ISSUE_MAGAM_CANCEL 전표발행 취소*/
	this.dsIssuemagamcancel = new Dataset();
	this.dsIssuemagamcancel.addColumn("CD_CORP", "string");
	this.dsIssuemagamcancel.addColumn("CD_SITE", "string");
	this.dsIssuemagamcancel.addColumn("YM_WORK", "string");
	this.dsIssuemagamcancel.addColumn("CD_TRADE", "string");
	this.dsIssuemagamcancel.addColumn("ID_USER", "string");
	
	// 저장
	this.dsSave = new Dataset();
	this.dsSave.addColumn("CD_CORP", "string");
	this.dsSave.addColumn("CD_SITE", "string");
	this.dsSave.addColumn("YM_WORK", "string");
	this.dsSave.addColumn("NO_ID", "string");
	this.dsSave.addColumn("NO_JUMIN", "string");
	this.dsSave.addColumn("AM_SODUK", "bigdecimal");
	this.dsSave.addColumn("AM_JUMIN", "bigdecimal");
	this.dsSave.addColumn("AM_GOYONG", "bigdecimal");
	this.dsSave.addColumn("AM_KOOKMIN", "bigdecimal");
	this.dsSave.addColumn("AM_MEDICARE", "bigdecimal");
	this.dsSave.addColumn("AM_SILVER", "bigdecimal");
	this.dsSave.addColumn("AM_ETCGONGJE", "bigdecimal");
	this.dsSave.addColumn("CD_COST", "string");
	this.dsSave.addColumn("ID_USER", "string");
	
	//담당자 확정, 취소
	this.dsDamDang = new Dataset();
	this.dsDamDang.addColumn("CD_SITE", "string");
	this.dsDamDang.addColumn("YM_WORK", "string");
	this.dsDamDang.addColumn("ID_INSERT", "string");
	this.dsDamDang.addColumn("GUBUN", "string");
	
	// 출력(OZ_REPORT)
	this.dsSelectMonPay = new Dataset();
	this.dsSelectMonPay.addColumn("CD_SITE", "string"); 		// 현장코드
	this.dsSelectMonPay.addColumn("YM_WORK", "string"); 		// 작업년월
	this.dsSelectMonPay.addColumn("NO_SABUN", "string"); 		// 노무번호
	this.dsSelectMonPay.addColumn("TY_CHAIYONG", "string"); 	// 채용구분
	
	this.dsSelectMonDe = new Dataset();
	this.dsSelectMonDe.addColumn("CD_SITE", "string"); 		// 현장코드
	this.dsSelectMonDe.addColumn("DS_SITE", "string"); 		// 현장명
	this.dsSelectMonDe.addColumn("YM_WORK", "string"); 		// 작업년월
	this.dsSelectMonDe.addColumn("LAST_DAY", "string"); 	// 말일
	this.dsSelectMonDe.addColumn("DT_APP1", "string"); 		// 담당
	this.dsSelectMonDe.addColumn("DT_APP2", "string"); 		// 소장
	this.dsSelectMonDe.addColumn("NO_ERPKEY", "string");
	
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	this.fnSetMagamCheck();
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();

	this.dsSelect.setColumn(0, "CD_SITE", this.ccfCD_SITE.form.CDTextBox.value);
	this.dsSelect.setColumn(0, "YM_WORK", this.ctclYM_WORK.form.TextBox.value);	
	//this.dsSelect.setColumn(0, "NO_CHASU", "");
	this.dsSelect.setColumn(0, "TY_CHAIYONG", "");
		
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId ,  
						strSvcType , 	 
						inProc,		 
						inData , 		 
						outData , 	 
						strArg, 			 
						callBackFnc);  
};

// 마감여부 조회
this.fnSetMagamCheck = function () {
	this.dsMagamcheck.clearData();
	this.dsMagamcheck.addRow();
		
	this.dsMagamcheck.setColumn(0, "CD_SITE", this.ccfCD_SITE.form.CDTextBox.value);
	this.dsMagamcheck.setColumn(0, "YM_WORK", this.ctclYM_WORK.form.TextBox.value);	
	this.dsMagamcheck.setColumn(0, "TY_CHAIYONG","");
	
	var strSvcId    = "magamcheck";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "magamcheck=dsMagamcheck";
	var outData     = "dsList2=magamcheck0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {	
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);

	this.dsSave.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			//case "I":
			case "U":
			//case "D":
				var nrow = this.dsSave.addRow();
				this.dsSave.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);	
				this.dsSave.setColumn(nrow, "CD_SITE", this.ccfCD_SITE.form.CDTextBox.value);
				this.dsSave.setColumn(nrow, "YM_WORK", this.ctclYM_WORK.form.TextBox.value.replace(/-/g, ""));
				this.dsSave.setColumn(nrow, "NO_ID", this.dsList.getColumn(i, "NO_ID").replace(/-/g, ""));	
				this.dsSave.setColumn(nrow, "NO_JUMIN", this.dsList.getColumn(i, "NO_JUMIN_ORG"));
				this.dsSave.setColumn(nrow, "AM_SODUK", this.dsList.getColumn(i, "AM_SODUK"));
				this.dsSave.setColumn(nrow, "AM_JUMIN", this.dsList.getColumn(i, "AM_JUMIN"));
				this.dsSave.setColumn(nrow, "AM_GOYONG", this.dsList.getColumn(i, "AM_GOYONGPER"));
				this.dsSave.setColumn(nrow, "AM_KOOKMIN", this.dsList.getColumn(i, "AM_KOOKMIN"));
				this.dsSave.setColumn(nrow, "AM_MEDICARE", this.dsList.getColumn(i, "AM_MEDICARE"));
				this.dsSave.setColumn(nrow, "AM_SILVER", this.dsList.getColumn(i, "AM_SILVER"));
				this.dsSave.setColumn(nrow, "AM_ETCGONGJE", this.dsList.getColumn(i, "AM_ETCGONGJE"));
				this.dsSave.setColumn(nrow, "CD_COST", this.dsList.getColumn(i, "CD_COST"));
				this.dsSave.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);	
				break;
		}
	}
	
	if (this.dsSave.rowcount == 0) return;
	
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "update=dsSave";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
	this.fnMonPay_Print();
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.text)) {
		this.gfnAlert("소속법인을 입력 하세요.");
		this.ccfCD_CORP.form.CDTextBox.setFocus();
		return false;
	}	
	
	if (this.gfnIsNull(this.ccfCD_SITE.form.CDTextBox.text)) {
		this.gfnAlert("현장코드를 입력 하세요.");
		this.ccfCD_SITE.form.CDTextBox.setFocus();
		return false;
	}
	
	if (this.gfnIsNull(this.ctclYM_WORK.form.TextBox.value)) {
		this.gfnAlert("작업년월 입력 하세요.");
		this.ctclYM_WORK.form.TextBox.setFocus();
		return false;
	}
	
	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	this.fnSetButton();
	
	if (svcID == "select") {
		if (this.dsList.rowcount == 0) {
		} else {
			this.gfnGridAfterSelect(this.dxGrid);	
		}
	} else if (svcID == "magamcheck") {
		if (errorCode == 0) {
			var YN_MAGAM = this.dsList2.getColumn(0, "YN_MAGAM");	
			var YN_SLIP = this.dsList2.getColumn(0, "YN_SLIP");			
			
			if (YN_MAGAM == "Y") {
				this.magamflag = true;
			} else if (YN_MAGAM == "N") {
				this.magamflag = false;
			}
			if (YN_SLIP == "Y") {
				this.slipflag = true;
			} else if (YN_SLIP == "N") {
				this.slipflag = false;
			}

			// 확장버튼 제어
			if (this.magamflag == true){ // 현장마감
				this.btnFormButtonNr.set_enable(false);  //현장마감			
				this.btnFormButtonDe.set_enable(false);  //현장마감해제
			}
			else { // 현장 미마감
				this.btnFormButtonNr.set_enable(true);  //현장마감			
				this.btnFormButtonDe.set_enable(true);  //현장마감해제			
			}			
		} else {
			this.gfnAlert(errorMsg);
		}			
	} else if (svcID == "magam") {
		if (errorCode == 0) {
		this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}		
	} else if (svcID == "magamcancel") {
		if (errorCode == 0) {
		this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	} else if (svcID == "issuemagam") {
		if (errorCode == 0) {
			this.gfnAlert("전표가 발행되었습니다.");
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	} else if (svcID == "issuemagamcancel") {
		if (errorCode == 0) {
			this.gfnAlert("전표가 취소되었습니다.");
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}	
	} else if (svcID == "save") {
		if (errorCode == 0) {
			this.fnSaveAfter = function() {
				this.FormBtns.Select.click();
			}
			this.fnSaveAfter();		
		} else {
			this.gfnAlert(errorMsg);
		}		
	}else if (svcID == "venok") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
			this.gfnAlert("집계가 완료되었습니다.");
		} else {
			this.gfnAlert(errorMsg);
		}
	}else if (svcID == "vencancel") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
			this.gfnAlert("집계가 취소되었습니다.");
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/*확장버튼*/
// 현장마감
this.fnTbbMonthMagam_callback = function(strId, val)
{
	if(val == true) {
		this.fnMonthMagam("현장마감");
	}
}

// 현장마감 해제
this.fnTbbMonthMagamCancel_callback = function(strId, val)
{
	if (val == true) {
		this.fnMonthMagam("현장마감 해제");
	}	
};

this.fnMonthMagam = function(flag) {
	if (flag == "현장마감") {
		this.fnMagam();
	} else if (flag == "현장마감 해제") {
		this.fnMagamCancel();
	}
	this.FormBtns.Select.click();	
};

//현장마감
this.fnMagam = function () {
	this.dsMagam.clearData();
	this.dsMagam.addRow();
	
	this.dsMagam.setColumn(0, "CD_SITE", this.ccfCD_SITE.form.CDTextBox.value);
	this.dsMagam.setColumn(0, "YM_WORK", this.ctclYM_WORK.form.TextBox.value);	
	this.dsMagam.setColumn(0, "ID_INSERT", this.AuthClient.ID_USER);
	this.dsMagam.setColumn(0, "GUBUN", "OK");	
	
	var strSvcId    = "magam";
	//var strSvcType  = "grid";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "magam=dsMagam";
	//var outData     = "dsList=magam";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	 
						strSvcType , 	 
						inProc,			 
						inData , 		 
						outData , 		 
						strArg, 			 
						callBackFnc);  

};

//현장마감 취소
this.fnMagamCancel = function () {
// 	if(this.dsList.rowposition == 0){
// 		this.gfnAlert("선택 된 항목이 없습니다.");
// 		return false;
// 	}
	var NO_ERPKEY = this.dsList.getColumn(this.dsList.rowposition, "NO_ERPKEY");
	if(this.gfnIsNull(NO_ERPKEY)){
		this.gfnAlert("대상자가 클릭 되지 않았습니다.");
		return;
	}
	
	this.dsMagamcancel.clearData();
	this.dsMagamcancel.addRow();
		
	this.dsMagamcancel.setColumn(0, "CD_SITE", this.ccfCD_SITE.form.CDTextBox.value);
	this.dsMagamcancel.setColumn(0, "YM_WORK", this.ctclYM_WORK.form.TextBox.value);	
	this.dsMagamcancel.setColumn(0, "ID_INSERT", this.AuthClient.ID_USER);
	this.dsMagamcancel.setColumn(0, "NO_ERPKEY", this.dsList.getColumn(this.dsList.rowposition, "NO_ERPKEY"));
	this.dsMagamcancel.setColumn(0, "GUBUN", "CANCEL");	
	
	var strSvcId    = "magamcancel";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "magamcancel=dsMagamcancel";
	var outData     = "dsList=magamcancel";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	 
						strSvcType , 	 
						inProc,			 
						inData , 		 
						outData , 		 
						strArg, 		 
						callBackFnc);  
};

// 전표발행 
this.fnDsbMagmSlipCallback = function(svcID, val) {
	if(this.gfnIsNull(val)) return;
	if(val == false) return;
	
	var json = JSON.parse(val);	
	
	if (!this.gfnIsNull(this.dsList.getColumn(this.dsList.rowposition, "CD_TRADE"))) {
		this.gfnAlert("이미 전표가 발행되었습니다.");
		return;
	}
	
	this.dsIssuemagam.clearData();
	this.dsIssuemagam.addRow();

	this.dsIssuemagam.setColumn(0, "CD_CORP", json.CD_CORP); //법인코드
	this.dsIssuemagam.setColumn(0, "CD_SITE", json.CD_SITE); //현장코드	
	this.dsIssuemagam.setColumn(0, "YM_WORK", json.YM_WORK);	//작업연월
	this.dsIssuemagam.setColumn(0, "DT_ACCOUNT", json.DT_ACCOUNT); //회계일자
	this.dsIssuemagam.setColumn(0, "DT_REQUEST", json.DT_JIGUB); //지급일자
	this.dsIssuemagam.setColumn(0, "TY_CHAIYONG", json.TY_CHAIYONG); //근무구분
	this.dsIssuemagam.setColumn(0, "ID_USER", this.AuthClient.ID_USER); //발행자사번

	var strSvcId    = "issuemagam";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "issuemagam=dsIssuemagam";
	var outData     = "";	//dsList10=issuemagam0
	var strArg      = "";
	var callBackFnc = "fnCallback";

	this.gfnTransaction( strSvcId , 	 
						strSvcType ,  
						inProc,		 
						inData , 	 
						outData , 	 
						strArg, 			 
						callBackFnc);  
};

// 전표발행 취소
this.fnTbbCancelSlip_callback = function(strId, val)
{
	if(val == true) {
		this.FormBtns.Select.click();
	
//팝업에서 취소 call 하는걸로 변경함	
// 		if (!this.gfnIsNull(this.dsList.getColumn(this.dsList.rowposition, "CD_TRADE"))) { 
// 			this.dsIssuemagamcancel.clearData();
// 			this.dsIssuemagamcancel.addRow();		
// 
// 			this.dsIssuemagamcancel.setColumn(0, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
// 			this.dsIssuemagamcancel.setColumn(0, "CD_SITE", this.ccfCD_SITE.form.CDTextBox.value);	
// 			this.dsIssuemagamcancel.setColumn(0, "YM_WORK", this.ctclYM_WORK.form.TextBox.value);	
// 			this.dsIssuemagamcancel.setColumn(0, "CD_TRADE", this.dsList.getColumn(this.dsList.rowposition, "CD_TRADE"));
// 			this.dsIssuemagamcancel.setColumn(0, "ID_USER", this.AuthClient.ID_USER);
// 		
// 
// 			var strSvcId    = "issuemagamcancel";
// 			var strSvcType  = "grid";
// 			var inProc		= "_dsProc";
// 			var inData      = "issuemagamcancel=dsIssuemagamcancel";
// 			var outData     = "dsList9=issuemagamcancel0";
// 			var strArg      = "";
// 			var callBackFnc = "fnCallback";
// 
// 			this.gfnTransaction( strSvcId , 	
// 								strSvcType , 	
// 								inProc,			
// 								inData , 		
// 								outData , 		 
// 								strArg, 		 
// 								callBackFnc);  
// 		}		
	}
};

this.fnFormButton_callback = function(svcID, val) {
		this.FormBtns.Select.click();
};

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	//조회조건 코드파인드
	if (id == "ccfCD_CORP") {
 		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "GR_CORP", this.AuthClient.CD_CORP);
 		dsUserParam.setColumn(nrow, "GR_DEPT", this.AuthClient.CD_DEPT);
	}
	else if (id == "ccfCD_SITE"){
		if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
			this.gfnAlert("법인을 먼저 입력하세요.");
			return false;
		}
		dsUserParam.setColumn(nrow, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));	// 법인코드
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "GR_CORP", this.AuthClient.CD_CORP);
 		dsUserParam.setColumn(nrow, "GR_DEPT", this.AuthClient.CD_DEPT);
	}
	return true;
};
 
this.fnAfterCDTextChanged = function(id, codeFindData) {
	if(id == "ccfCD_CORP") {
		this.ccfCD_SITE.form.fnCodeFindClear();
	}
}
 
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 this.fnGrid_BeforeUserDataSetParam = function(id, dsUserParam, nrow){
	switch(id) {
		case "DWXPR_COST_TREE_01":
			if (!this.gfnIsNull(this.ccfCD_SITE.form.CDTextBox.value)) {
				/*dsUserParam.setColumn(nrow, "CD_SITE", this.ccfCD_SITE.form.CDTextBox.value);*/
				dsUserParam.setColumn(nrow, "CD_SITE", this.ccfCD_SITE.form.CDTextBox.value);
			} else {
				dsUserParam.setColumn(nrow, "CD_SITE", "");	
			}	
			break;

		default:
	}
	return true;
};


// 셀 수정가능 여부 (반드시 EnterCell에서 처리할것)
this.fnGrid_EnterCell = function(obj:nexacro.Grid, row, cell) { 
	var colnm = this.gfnGridGetBindColumnNameByIndex(obj, cell);
	var rowFlag = this.gfnGetFlag(this.dsList, row);	 

	if(this.dsList.rowposition == 0)
	{
		return false;
	}
	
	if (!this.gfnIsNull(this.dsList.getColumn(this.dsList.rowposition, "CD_TRADE"))) { // 전표발행
		return false;	
	}
	
	if(this.dsList.getColumn(this.dsList.rowposition, "DS_CHECK_1") == "Y"){
		return false;
	}
	
	// 공통 > Setting > 그리드정보 에서 셋팅한 내용대로 
	var nGrdSpcRow = this.dsGridSpec.findRow("DS_FIELD", colnm);
	
	if(this.dsGridSpec.getColumn(nGrdSpcRow, "YN_READONLY") == "Y"){
		return false;
	}
	
	return true;
}

// 셀 값 변경 후 이벤트
this.fnGrid_AfterEdit = function(obj,e) {	
	this.fnSetButton();	
}

 /************************************************************************
 * 확장버튼 이벤트
 ************************************************************************/
 // 현장마감		
this.fnTbbMonthMagam = function () {
	this.gfnConfirm("집계를 수행하시겠습니까?\n\n고용보험 - 만64세 이하 까지 무조건 공제\n건강, 노인장기요양, 국민연금 - 8일이상 공제", "fnTbbMonthMagam_callback");
};

// 현장마감 해제
this.fnTbbMonthMagamCancel = function () {
	//if(!this.gfnGridIsRow(this.dxGrid)) {return false;}
	this.gfnConfirm("집계 취소 작업을 수행하시겠습니까?", "fnTbbMonthMagamCancel_callback");
};

// 전표발행	
this.fnTbbInsertSlip = function () {
	//if(!this.gfnGridIsRow(this.dxGrid)) {return false;}
	
	// 당월 말일
	var LastDay = this.gfnGetLastDate(this.ctclYM_WORK.form.TextBox.value);
	//var Corp = this.ccfCD_CORP.form.CDTextBox.value;
	
	var param = {};	
	if (this.magamflag == true) {
		param.DT_ACCOUNT = LastDay;	
		param.CD_CORP = this.ccfCD_CORP.form.CDTextBox.value;	
		param.DS_CORP = this.ccfCD_CORP.form.DSTextBox.value;	
		param.CD_SITE = this.ccfCD_SITE.form.CDTextBox.value;	
		param.DS_SITE = this.ccfCD_SITE.form.DSTextBox.value;	
		param.YM_WORK = this.ctclYM_WORK.form.TextBox.value;	
	}
	this.gfnFormOpen("DSB", "DSB_MAGAMSLIP_DLG", "fnDsbMagmSlipCallback", param, 200,200);
	
};


// 전표발행 취소
this.fnTbbCancelSlip = function () {
	//if(!this.gfnGridIsRow(this.dxGrid)) {return false;}
	
	//this.gfnConfirm("전표를 취소 하시겠습니까?", "fnTbbCancelSlip_callback");
	
	var param = {};	
	param.CD_CORP = this.ccfCD_CORP.form.CDTextBox.value;	
	param.DS_CORP = this.ccfCD_CORP.form.DSTextBox.value;	
	param.CD_SITE = this.ccfCD_SITE.form.CDTextBox.value;	
	param.DS_SITE = this.ccfCD_SITE.form.DSTextBox.value;	
	param.YM_WORK = this.ctclYM_WORK.form.TextBox.value;	
	
	this.gfnFormOpen("DSB", "DSB_MAGAMSLIP_CANCEL_DLG", "fnTbbCancelSlip_callback", param, 380,420);	
};

// 전표조회
this.fnTbbSelectSlip = function () {
// 	//if(!this.gfnGridIsRow(this.dxGrid)) {return false;}
// 	var cd_trade = this.dsList.getColumn(this.dsList.rowposition, "CD_TRADE");
// 	
// 	if (this.gfnIsNull(cd_trade)) return;
// 	
// 	var param = {}; 
// 	
// 	param.CD_TRADE = cd_trade;
// 	param.IUD_FLAG = "S";
// 	
// 	this.gfnFormOpen("DHA", "DHA_ISSUESLIP", "", param);


	var param = {};	
	param.CD_CORP = this.ccfCD_CORP.form.CDTextBox.value;	
	param.DS_CORP = this.ccfCD_CORP.form.DSTextBox.value;	
	param.CD_SITE = this.ccfCD_SITE.form.CDTextBox.value;	
	param.DS_SITE = this.ccfCD_SITE.form.DSTextBox.value;	
	param.YM_WORK = this.ctclYM_WORK.form.TextBox.value;	
	
	this.gfnFormOpen("DSB", "DSB_MAGAMSLIP_INQ_DLG", "fnTbbSelectSlip_callback", param, 380,420);	
		
};

this.fnTbbSelectSlip_callback = function(id, val){
	//trace("fnTbbSelectSlip_callback>>"+id, val);
}

// 제세보험료
this.fnTbbEmployee_Dlg = function () {
	//if(!this.gfnGridIsRow(this.dxGrid)) {return false;}
	var param = {};
	
	param.CD_CORP = this.ccfCD_CORP.form.CDTextBox.value;
	param.DS_CORP = this.ccfCD_CORP.form.DSTextBox.value;
	param.CD_SITE = this.ccfCD_SITE.form.CDTextBox.value;
	param.DS_SITE = this.ccfCD_SITE.form.DSTextBox.value;
	param.DT_MONTH = this.ctclYM_WORK.form.TextBox.value;			
	param.NO_ID = this.dsList.getColumn(this.dsList.rowposition, "NO_ID");
	param.DS_NAME = this.dsList.getColumn(this.dsList.rowposition, "DS_NAME");
	param.AM_SODUK = this.dsList.getColumn(this.dsList.rowposition, "AM_SODUK");
	param.AM_JUMIN = this.dsList.getColumn(this.dsList.rowposition, "AM_JUMIN");
	param.AM_GOYONG = this.dsList.getColumn(this.dsList.rowposition, "AM_GOYONGPER");
	param.AM_KUKMIN = this.dsList.getColumn(this.dsList.rowposition, "AM_KOOKMIN");
	param.AM_HEALTH = this.dsList.getColumn(this.dsList.rowposition, "AM_MEDICARE");

	this.gfnFormOpen("DSB", "DSB_MONTHLY_LIST_DLG", "fnFormButton_callback", param);
};


this.fnMonMagam_Ven = function(svcID, val){
	this.dsDamDang.clearData();
	this.dsDamDang.addRow();
	
	this.dsDamDang.setColumn(0, "CD_SITE", this.ccfCD_SITE.form.CDTextBox.value);	
	this.dsDamDang.setColumn(0, "YM_WORK", this.ctclYM_WORK.form.TextBox.value);	
	this.dsDamDang.setColumn(0, "ID_INSERT", this.AuthClient.ID_USER);
	this.dsDamDang.setColumn(0, "GUBUN", "OK");
	
	var strSvcId    = "venok";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "venok=dsDamDang";
	var outData     = "";	//dsList10=issuemagam0
	var strArg      = "";
	var callBackFnc = "fnCallback";

	this.gfnTransaction( strSvcId , 	 
						strSvcType ,  
						inProc,		 
						inData , 	 
						outData , 	 
						strArg, 			 
						callBackFnc);  
}

this.fnMonMagam_Ven_Cal = function(){
	this.dsDamDang.clearData();
	this.dsDamDang.addRow();
	
	this.dsDamDang.setColumn(0, "CD_SITE", this.ccfCD_SITE.form.CDTextBox.value);	
	this.dsDamDang.setColumn(0, "YM_WORK", this.ctclYM_WORK.form.TextBox.value);	
	this.dsDamDang.setColumn(0, "ID_INSERT", this.AuthClient.ID_USER);
	this.dsDamDang.setColumn(0, "GUBUN", "CANCEL");

	var strSvcId    = "vencancel";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "vencancel=dsDamDang";
	var outData     = "";	//dsList10=issuemagam0
	var strArg      = "";
	var callBackFnc = "fnCallback";

	this.gfnTransaction( strSvcId , 	 
						strSvcType ,  
						inProc,		 
						inData , 	 
						outData , 	 
						strArg, 			 
						callBackFnc); 
}

this.fnMonPay_Print = function() {
	if(!this.gfnGridIsRow(this.dxGrid)) {return false;}
	//if(this.gfnIsNull(this.dsList.rowposition) || this.dsList.rowposition == 0){return false;}
	
	var rowposition = this.dsList.rowposition;
	
	var NO_ERPKEY = this.dsList.getColumn(this.dsList.rowposition, "NO_ERPKEY");
	if(this.gfnIsNull(NO_ERPKEY)){
		this.gfnAlert("대상자가 클릭 되지 않았습니다.");
		return;
	}
	
	if(!this.gfnIsNull(this.dsList.getColumn(rowposition, "CD_TRADE"))){
		this.dsSelectMonPay.clearData();
		
		var nrow = this.dsSelectMonPay.addRow();
		this.dsSelectMonPay.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE")); 					// 현장코드
		this.dsSelectMonPay.setColumn(nrow, "YM_WORK", this.dsSearch.getColumn(0, "YM_WORK")); 					// 작업년월
		this.dsSelectMonPay.setColumn(nrow, "NO_SABUN", this.dsList.getColumn(rowposition, "NO_SABUN")); 			// 노무번호
		this.dsSelectMonPay.setColumn(nrow, "TY_CHAIYONG", this.dsList.getColumn(rowposition, "TY_CHAIYONG"));	// 채용구분

		if (this.dsSelectMonPay.rowcount == 0) return;
		
		var inProc		= "_dsProc";
		//var inParam 	= "params=dsReportParam";	// 조회SP이외 사용할 정보
		var inParam 	= "";						// 필요없는 경우 생략
		var inData      = "monpayreport=dsSelectMonPay";
		var reportpath  = "/ds/dsb/DSB_MONPAY_REPORT.ozr";
		 
		gfnOpenReport(this, reportpath, inProc, inParam, inData);
	
	}else{
		this.gfnAlert("전표가 발행되지 않아 출력할 수 없습니다.");
	}
}

this.fnMonDe_Print = function() {
	if(!this.gfnGridIsRow(this.dxGrid)) {return false;}

	this.dsSelectMonDe.clearData();
	
	var lastDay = this.gfnGetLastDate(this.dsSearch.getColumn(0, "YM_WORK"));

// 	if (this.dsList.rowposition == 0){
// 		this.gfnAlert("선택 된 항목이 없습니다.");
// 		return;
// 	}
	var NO_ERPKEY = this.dsList.getColumn(this.dsList.rowposition, "NO_ERPKEY");
	if(this.gfnIsNull(NO_ERPKEY)){
		this.gfnAlert("대상자가 클릭 되지 않았습니다.");
		return;
	}
	
	var nrow = this.dsSelectMonDe.addRow();
	this.dsSelectMonDe.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE")); 	// 현장코드
	this.dsSelectMonDe.setColumn(nrow, "DS_SITE", this.ccfCD_SITE.form.DSTextBox.value); 	// 현장명
	this.dsSelectMonDe.setColumn(nrow, "YM_WORK", this.dsSearch.getColumn(0, "YM_WORK"));	// 작업년월
	this.dsSelectMonDe.setColumn(nrow, "LAST_DAY", lastDay.substr(6,2));					// 말일
	this.dsSelectMonDe.setColumn(nrow, "DT_APP1", this.dsList.getColumn(this.dsList.rowposition, "DT_APP1")); // 담당
	this.dsSelectMonDe.setColumn(nrow, "DT_APP2", this.dsList.getColumn(this.dsList.rowposition, "DT_APP2")); // 소장
	this.dsSelectMonDe.setColumn(nrow, "NO_ERPKEY", this.dsList.getColumn(this.dsList.rowposition, "NO_ERPKEY")); // 소장
	
	if (this.dsSelectMonDe.rowcount == 0) return;
	
	var inProc		= "_dsProc";
	var inParam 	= "params=dsSelectMonDe";	// 필요없는 경우 생략
	var inData      = "mondereport=dsSelectMonDe";
	var reportpath  = "/ds/dsb/DSB_MONDE_REPORT.ozr";
	 
	gfnOpenReport(this, reportpath, inProc, inParam, inData);
}
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		// 폼상태 초기화
		this.gfnSetFormStatus(this);	
		this.gfnGridClear(this.dxGrid);
	}
};

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};]]></Script>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item2" compid="divSearch.form.ctclYM_WORK.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_WORK"/>
      <BindItem id="item3" compid="divSearch.form.cboTY_CHAIYONG" propid="value" datasetid="dsSearch" columnid="TY_CHAIYONG"/>
    </Bind>
  </Form>
</FDL>
