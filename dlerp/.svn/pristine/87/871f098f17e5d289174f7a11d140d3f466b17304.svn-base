<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1500" height="720" titletext="채권가압류" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0" top="0" height="46" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static cssclass="sta_WF_SchLabelE" id="staCD_CORP" text="법인코드" left="0" top="10" width="92" height="24"/>
              <Div id="ccfCD_CORP" CodeFindName="DZX_CFCORP_STD" CDTextWidth="50" taborder="0" left="staCD_CORP:0" top="10" width="230" height="24" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staCD_VENDOR" text="채무자" left="ccfCD_CORP:0" top="10" width="79" height="24" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_VENDOR" CodeFindName="DFX_CFVENDOR" CDTextWidth="70" taborder="1" left="staCD_VENDOR:0" top="10" width="250" height="24" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staDS_CREDITOR" text="채권자" left="ccfCD_VENDOR:0" top="10" width="79" height="24" cssclass="sta_WF_SchLabel"/>
              <Edit id="ctxtDS_CREDITOR" taborder="2" left="staDS_CREDITOR:0" top="10" width="80" height="24"/>
              <Static id="staDS_RDEPT" text="관련현장" left="ctxtDS_CREDITOR:0" top="10" width="92" height="24" cssclass="sta_WF_SchLabel"/>
              <Edit id="ctxtDS_RDEPT" taborder="3" left="staDS_RDEPT:0" top="10" width="80" height="24"/>
              <Static id="staDT_RECEIPT" text="접수일자" left="ctxtDS_RDEPT:0" top="10" width="92" height="24" cssclass="sta_WF_SchLabel"/>
              <Calendar id="ctclFR_RECEIPT" taborder="4" left="staDT_RECEIPT:0" top="10" width="110" height="24" dateformat="yyyy-MM-dd" editformat="yyyy-MM-dd" autoselect="true"/>
              <Static id="staDT_RECEIPT_DASH" text="~" left="ctclFR_RECEIPT:0" top="10" width="20" height="24" cssclass="sta_WF_AC"/>
              <Calendar id="ctclTO_RECEIPT" taborder="5" left="staDT_RECEIPT_DASH:0" top="10" width="110" height="24" dateformat="yyyy-MM-dd" editformat="yyyy-MM-dd" autoselect="true"/>
              <Static id="staYN_TERMINATE" text="해지구분" left="ctclTO_RECEIPT:0" top="10" width="92" height="24" cssclass="sta_WF_SchLabel"/>
              <Combo id="ccboYN_TERMINATE" taborder="6" text="" left="staYN_TERMINATE:0" top="10" width="60" height="24" innerdataset="dsYN_TERMINATE" codecolumn="CD_CODE" datacolumn="DS_CODE"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:20" bottom="0" right="0" cssclass="div_DATA_Bg" ondragmove="divData_ondragmove">
          <Layouts>
            <Layout>
              <Div id="divSplitter" taborder="2" top="0" width="23" background="url('theme://images/slt_WF_SplitterV.png') no-repeat center center" cursor="ew-resize" bottom="0" ondrag="divData_divSplitter_ondrag" left="30%"/>
              <Div id="divDataLeft" taborder="0" left="0" top="0" bottom="0" right="divSplitter:6">
                <Layouts>
                  <Layout>
                    <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0" scrollbartype="auto"/>
                  </Layout>
                </Layouts>
              </Div>
              <Div id="divDataRight" taborder="1" left="divSplitter:6" top="0" bottom="0" text="" right="0" minwidth="1021" maxwidth="">
                <Layouts>
                  <Layout>
                    <Static id="sta11" left="114" top="28" height="34" cssclass="sta_WF_tablebgT" text="" right="0"/>
                    <Static id="sta03" left="114" top="61" height="34" cssclass="sta_WF_tablebg" right="0"/>
                    <Static id="sta00" text="채권/채무관리" left="0" top="-3" height="22" cssclass="sta_TITLE_Bg" right="0"/>
                    <Static id="sta33_00" left="114" top="193" height="34" cssclass="sta_WF_tablebg" width="907"/>
                    <Static id="sta06" left="114" top="94" height="34" cssclass="sta_WF_tablebg" width="376"/>
                    <Static id="sta27" left="114" top="127" height="34" cssclass="sta_WF_tablebg" width="376"/>
                    <Static id="sta30" left="114" top="160" height="34" cssclass="sta_WF_tablebg" width="376"/>
                    <Static id="sta33" left="114" top="226" height="34" cssclass="sta_WF_tablebg" right="0"/>
                    <Static id="sta35" left="114" top="259" height="34" cssclass="sta_WF_tablebg" right="0"/>
                    <Static id="sta07" left="114" top="292" height="34" cssclass="sta_WF_tablebg" text="" right="0"/>
                    <Static id="sta43" left="114" top="325" height="34" cssclass="sta_WF_tablebg" text="" right="0"/>
                    <Static id="sta03_00" left="603" top="93" height="101" cssclass="sta_WF_tablebg" right="0"/>
                    <Static id="staNO_RECEIPT" text="접수번호" left="0" top="28" width="115" height="34" cssclass="sta_WF_tablelabelT"/>
                    <Edit id="txtNO_RECEIPT" taborder="7" left="119" top="33" width="198" height="24" maxlength="15" enable="false"/>
                    <Static id="staDT_RECEIPT" text="접수일자" left="489" top="28" width="115" height="34" cssclass="sta_WF_tablelabelTE"/>
                    <Calendar id="tclDT_RECEIPT" taborder="8" left="608" top="33" width="120" height="24" dateformat="yyyy-MM-dd" editformat="yyyy-MM-dd" autoselect="true"/>
                    <Static id="staDT_INPUT" text="입력일자" left="732" top="28" width="115" height="34" cssclass="sta_WF_tablelabelTE"/>
                    <Calendar id="tclDT_INPUT" taborder="9" left="851" top="33" width="120" height="24" dateformat="yyyy-MM-dd" editformat="yyyy-MM-dd" autoselect="true"/>
                    <Static id="staNO_CASE" text="사건번호" left="0" top="61" width="115" height="34" cssclass="sta_WF_tablelabel"/>
                    <Edit id="txtNO_CASE" taborder="10" left="119" top="66" width="112" height="24" maxlength="0"/>
                    <Static id="staDS_CASE" text="사건명" left="235" top="61" width="81" height="34" cssclass="sta_WF_tablelabel"/>
                    <Edit id="txtDS_CASE" taborder="11" left="320" top="66" width="165" height="24" maxlength="0"/>
                    <Static id="staID_INPUTSABUN" text="입력자" left="489" top="61" width="115" height="34" cssclass="sta_WF_tablelabel"/>
                    <Edit id="txtID_INPUTSABUN" taborder="12" left="608" top="66" width="143" height="24" maxlength="15"/>
                    <Edit id="txtDS_INPUTSABUN" taborder="13" left="755" top="66" width="241" height="24" maxlength="15"/>
                    <Static id="staDS_BIGO" text="채권내용" left="0" top="94" width="115" height="34" cssclass="sta_WF_tablelabelE"/>
                    <Edit id="txtDS_BIGO" taborder="14" left="119" top="99" width="366" height="24" maxlength="100"/>
                    <Static id="staDS_BALSONGCHO" text="발송처" left="0" top="127" width="115" height="34" cssclass="sta_WF_tablelabel"/>
                    <Edit id="txtDS_BALSONGCHO" taborder="15" left="119" top="132" width="366" height="24" maxlength="100"/>
                    <Static id="staDS_CREDITOR" text="채권자" left="0" top="160" width="115" height="34" cssclass="sta_WF_tablelabelE"/>
                    <Edit id="txtDS_CREDITOR" taborder="16" left="119" top="165" width="366" height="24" maxlength="100"/>
                    <Static id="staCD_VENDOR" text="채무자" left="0" top="193" width="115" height="34" cssclass="sta_WF_tablelabelE"/>
                    <Div id="cfCD_VENDOR" CodeFindName="DFX_CFVENDOR" CDTextWidth="80" taborder="17" left="119" top="198" width="228" height="24" url="cmm::cmmCodeFind.xfdl"/>
                    <Edit id="txtNO_SJC" taborder="18" left="351" top="198" width="134" height="24" maxlength="0"/>
                    <Static id="staCD_SITE" text="해당현장" left="0" top="226" width="115" height="34" cssclass="sta_WF_tablelabel"/>
                    <Radio id="rdoYN_SITECHECK" taborder="19" left="121" top="231" width="153" height="24" innerdataset="dsYN_SITECHECK" codecolumn="CODE" datacolumn="NAME" direction="vertical"/>
                    <Static id="staRM_BIGO" text="비고" left="489" top="94" width="115" height="100" cssclass="sta_WF_tablelabel"/>
                    <TextArea id="txtRM_BIGO" taborder="21" left="608" top="99" width="388" maxlength="100" height="90"/>
                    <Static id="staDS_SITE_DTL" text="현장비고" left="0" top="259" width="115" height="34" cssclass="sta_WF_tablelabel"/>
                    <Edit id="txtDS_SITE_DTL" taborder="22" left="119" top="264" width="366" height="24" maxlength="0"/>
                    <Static id="staDS_VENDOR2" text="제3채무자" left="489" top="193" width="115" height="34" cssclass="sta_WF_tablelabel"/>
                    <Edit id="txtDS_VENDOR2" taborder="23" left="608" top="198" width="388" height="24" maxlength="0"/>
                    <Static id="staAM_CLAIM" text="청구액" left="0" top="292" width="115" height="34" cssclass="sta_WF_tablelabel"/>
                    <MaskEdit id="txtAM_CLAIM" taborder="24" left="119" top="297" width="112" height="24" format="##,###,###,###,##0.####"/>
                    <Static id="staYN_DISHONOR" text="부도여부" left="235" top="292" width="115" height="34" cssclass="sta_WF_tablelabel"/>
                    <Radio id="rdoYN_DISHONOR" taborder="25" left="355" top="297" width="108" height="24" innerdataset="dsYN" codecolumn="CODE" datacolumn="NAME" direction="vertical"/>
                    <Static id="staDS_BIGOCANCEL" text="해지사유" left="489" top="259" width="115" height="34" cssclass="sta_WF_tablelabel"/>
                    <Edit id="txtDS_BIGOCANCEL" taborder="26" left="608" top="264" width="388" height="24" maxlength="0"/>
                    <Static id="staYN_TRANSFER" text="양도여부" left="0" top="325" width="115" height="34" cssclass="sta_WF_tablelabel"/>
                    <Radio id="rdoYN_TRANSFER" taborder="27" left="120" top="330" width="105" height="24" innerdataset="dsYN" codecolumn="CODE" datacolumn="NAME" direction="vertical"/>
                    <Static id="staDS_BIGOJIGUEB" text="지급가능사유" left="489" top="325" width="115" height="34" cssclass="sta_WF_tablelabel"/>
                    <Edit id="txtDS_BIGOJIGUEB" taborder="28" left="608" top="330" width="388" height="24" maxlength="0"/>
                    <Static id="staYN_TERMINATE" text="해지구분" left="489" top="226" width="115" height="34" cssclass="sta_WF_tablelabel"/>
                    <Radio id="rdoYN_TERMINATE" taborder="29" left="610" top="233" width="118" height="20" innerdataset="dsYN" codecolumn="CODE" datacolumn="NAME" direction="vertical"/>
                    <Static id="staYN_PROVISIONAL" text="가압류여부" left="235" top="325" width="115" height="34" cssclass="sta_WF_tablelabel"/>
                    <Radio id="rdoYN_PROVISIONAL" taborder="30" left="355" top="330" width="108" height="24" innerdataset="dsYN" codecolumn="CODE" datacolumn="NAME" direction="vertical"/>
                    <Static id="staYN_JIGUEB" text="지급가능여부" left="732" top="226" width="115" height="34" cssclass="sta_WF_tablelabel"/>
                    <Radio id="rdoYN_JIGUEB" taborder="31" left="851" top="233" width="106" height="20" innerdataset="dsYN" codecolumn="CODE" datacolumn="NAME" direction="vertical"/>
                    <Static id="sta00_00" text="적용현장" left="1" top="369" height="22" cssclass="sta_TITLE_Bg" right="0" taborder="59"/>
                    <Button id="btnSave" taborder="7" text="저장" top="363" width="60" right="0" height="26" onclick="divData_divDataRight_btnSave_onclick" cssclass="btn_WF_function"/>
                    <Button id="btnDelete" taborder="2" text="삭제" top="363" width="60" right="btnSave:4" height="26" onclick="divData_divDataRight_btnDelete_onclick"/>
                    <Button id="btnInsert" taborder="4" text="등록" top="363" width="60" right="btnDelete:4" height="26" onclick="divData_divDataRight_btnInsert_onclick"/>
                    <Grid id="objGrid2" taborder="0" left="0" top="394" bottom="0" right="0" scrollbartype="auto"/>
                    <Static id="staDT_HAEJI" text="해지일자" left="489" top="292" width="115" height="34" cssclass="sta_WF_tablelabel" taborder="63"/>
                    <Calendar id="tclDT_HAEJI" taborder="64" left="608" top="297" width="120" height="24" dateformat="yyyy-MM-dd" editformat="yyyy-MM-dd" autoselect="true"/>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList" onvaluechanged="dsList_onvaluechanged"/>
      <Dataset id="dsList2" onvaluechanged="dsList_onvaluechanged"/>
      <Dataset id="dsListSub"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DZAPR_CLAIMQRY_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">insert</Col>
            <Col id="SP">DZAPR_CLAIM_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">update</Col>
            <Col id="SP">DZAPR_CLAIM_UPDATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">delete</Col>
            <Col id="SP">DZAPR_CLAIM_DELETE</Col>
          </Row>
          <Row>
            <Col id="TARGET">selectsite</Col>
            <Col id="SP">DZAPR_CLAIM_SITE_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">insertsite</Col>
            <Col id="SP">DZAPR_CLAIM_SITE_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">updatesite</Col>
            <Col id="SP">DZAPR_CLAIM_SITE_UPDATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">deletesite</Col>
            <Col id="SP">DZAPR_CLAIM_SITE_DELETE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsYN_SITECHECK">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="NAME" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">Y</Col>
            <Col id="NAME">적용현장</Col>
          </Row>
          <Row>
            <Col id="CODE">N</Col>
            <Col id="NAME">전사적용</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsYN_TERMINATE"/>
      <Dataset id="dsYN">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="NAME" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">Y</Col>
            <Col id="NAME">Yes</Col>
          </Row>
          <Row>
            <Col id="CODE">N</Col>
            <Col id="NAME">No</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="DS_CORP" type="STRING" size="256"/>
          <Column id="CD_VENDOR" type="STRING" size="256"/>
          <Column id="DS_VENDOR" type="STRING" size="256"/>
          <Column id="DS_CREDITOR" type="STRING" size="256"/>
          <Column id="DS_RDEPT" type="STRING" size="256"/>
          <Column id="FR_RECEIPT" type="STRING" size="256"/>
          <Column id="TO_RECEIPT" type="STRING" size="256"/>
          <Column id="YN_TERMINATE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_VENDOR"/>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.gfnSetElements();
	this.fnSetEvent();
	this.fnSetParameter();
	
	// 공통코드 세팅.
	this.gfnLoadCommonCode([{col: "YN_TERMINATE", code: "DZYN", yn_all: "A"}]);
	this.dsSearch.setColumn(0, "YN_TERMINATE", "");
	
	if(!this.gfnIsNull(this.getOwnerFrame().CD_CORP)) {
		this.dsSearch.setColumn(0, "CD_CORP"     , this.getOwnerFrame().CD_CORP);
		this.dsSearch.setColumn(0, "DS_CORP"     , this.getOwnerFrame().DS_CORP);
		this.dsSearch.setColumn(0, "CD_VENDOR"   , this.getOwnerFrame().CD_VENDOR);
		this.dsSearch.setColumn(0, "DS_VENDOR"   , this.getOwnerFrame().DS_VENDOR);
		this.dsSearch.setColumn(0, "FR_RECEIPT"  , this.getOwnerFrame().FR_RECEIPT);
		this.dsSearch.setColumn(0, "TO_RECEIPT"  , this.getOwnerFrame().TO_RECEIPT);
		this.dsSearch.setColumn(0, "YN_TERMINATE", this.getOwnerFrame().YN_TERMINATE);
		this.dsSearch.setColumn(0, "DS_CREDITOR" , this.getOwnerFrame().DS_CREDITOR);
		this.dsSearch.setColumn(0, "DS_RDEPT"    , this.getOwnerFrame().DS_RDEPT);
		
		this.FormBtns.Select.click();
	}
	
	this.fnSetSiteBtns();
};

/************************************************************************
 * 버튼 설정 
 * 서브버튼 사용 처리. 공통 및 확장버튼 버튼관리화면에서 셋팅.
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관
 ************************************************************************/
this.fnSetExtendButton = function() {};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() 
{
	this.btnSave   = this.divData.form.divDataRight.form.btnSave;
	this.btnDelete = this.divData.form.divDataRight.form.btnDelete;
	this.btnInsert = this.divData.form.divDataRight.form.btnInsert;

	this.dxGrid  = this.divData.form.divDataLeft.form.objGrid;
	this.dxGrid2 = this.divData.form.divDataRight.form.objGrid2;
	this.cdGroup = this.gfnIsNull(this.AuthClient.CD_GROUP) ? "" : this.AuthClient.CD_GROUP;	// 그룹코드
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	
	this.ccfCD_VENDOR.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.cfCD_VENDOR.BeforeUserDataSetParam  = "fnBeforeUserDataSetParam";
	
	this.ccfCD_VENDOR.AfterCDTextChanged     = "fnAfterCDTextChanged";
	this.cfCD_VENDOR.AfterCDTextChanged      = "fnAfterCDTextChanged";
	
	this.gfnGridInit(this.dxGrid , this.dsList , "DF", "DZA_CLAIMQRY");
	this.gfnGridInit(this.dxGrid2, this.dsList2, "DF", "DZA_CLAIM_SITE");
	
	this.dxGrid2.BeforeUserDataSetParam = "fnGrid_BeforuserDataSetParam";
	
	this.dxGrid.addEventHandler("onselectchanged", this.fnGrid_RowCellChanged, this);
	
	this.dsSearch.setColumn(0, "FR_RECEIPT", "20000101");
	this.dsSearch.setColumn(0, "TO_RECEIPT", this.gfnGetDate());
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_VENDOR"   	 , "string");
	this.dsSelect.addColumn("FR_RECEIPT"  	 , "string");
	this.dsSelect.addColumn("TO_RECEIPT"  	 , "string");
	this.dsSelect.addColumn("YN_TERMINATE"	 , "string");
	this.dsSelect.addColumn("CD_CORP"     	 , "string");
	this.dsSelect.addColumn("DS_CREDITOR" 	 , "string");
	this.dsSelect.addColumn("DS_RDEPT"    	 , "string");
	
	this.dsInsert = new Dataset();
	this.dsInsert.addColumn("NO_RECEIPT"     , "string");
	this.dsInsert.addColumn("DT_RECEIPT"     , "string");
	this.dsInsert.addColumn("DT_INPUT"       , "string");
	this.dsInsert.addColumn("ID_INPUT"       , "string");
	this.dsInsert.addColumn("NO_CASE"        , "string");
	this.dsInsert.addColumn("DS_CASE"        , "string");
	this.dsInsert.addColumn("DS_BALSONGCHO"  , "string");
	this.dsInsert.addColumn("AM_CLAIM"       , "bigdecimal");
	this.dsInsert.addColumn("AM_PAY"         , "bigdecimal");
	this.dsInsert.addColumn("CD_VENDOR"      , "string");
	this.dsInsert.addColumn("DS_CREDITOR"    , "string");
	this.dsInsert.addColumn("DT_LASTPAY"     , "string");
	this.dsInsert.addColumn("DT_REQUESTPAY"  , "string");
	this.dsInsert.addColumn("YN_SITECHECK"   , "string");
	this.dsInsert.addColumn("DS_RESERVEDSITE", "string");
	this.dsInsert.addColumn("YN_TERMINATE"   , "string");
	this.dsInsert.addColumn("YN_DISHONOR"    , "string");
	this.dsInsert.addColumn("DS_BIGO"        , "string");
	this.dsInsert.addColumn("NO_TERMINATION" , "string");
	this.dsInsert.addColumn("DS_BIGOCANCEL"  , "string");
	this.dsInsert.addColumn("CD_CORP"        , "string");
	this.dsInsert.addColumn("RM_BIGO"        , "string");
	this.dsInsert.addColumn("YN_JIGUEB"      , "string");
	this.dsInsert.addColumn("DS_VENDOR2"     , "string");
	this.dsInsert.addColumn("RM_AMT"         , "string");
	this.dsInsert.addColumn("CD_ACNTUNIT"    , "string");
	this.dsInsert.addColumn("CD_ROOM"        , "string");
	this.dsInsert.addColumn("YN_TRANSFER"    , "string");
	this.dsInsert.addColumn("YN_PROVISIONAL" , "string");
	this.dsInsert.addColumn("YN_SALE"        , "string");
	this.dsInsert.addColumn("DS_SITE_DTL"    , "string");
	this.dsInsert.addColumn("DS_BIGOJIGUEB"  , "string");
	this.dsInsert.addColumn("DT_HAEJI"       , "string");
	this.dsInsert.addColumn("ID_USER"        , "string");

	this.dsUpdate = new Dataset();
	this.dsUpdate.addColumn("NO_RECEIPT"     , "string");
	this.dsUpdate.addColumn("DT_RECEIPT"     , "string");
	this.dsUpdate.addColumn("DT_INPUT"       , "string");
	this.dsUpdate.addColumn("ID_INPUT"       , "string");
	this.dsUpdate.addColumn("NO_CASE"        , "string");
	this.dsUpdate.addColumn("DS_CASE"        , "string");
	this.dsUpdate.addColumn("DS_BALSONGCHO"  , "string");
	this.dsUpdate.addColumn("AM_CLAIM"       , "bigdecimal");
	this.dsUpdate.addColumn("AM_PAY"         , "bigdecimal");
	this.dsUpdate.addColumn("CD_VENDOR"      , "string");
	this.dsUpdate.addColumn("DS_CREDITOR"    , "string");
	this.dsUpdate.addColumn("DT_LASTPAY"     , "string");
	this.dsUpdate.addColumn("DT_REQUESTPAY"  , "string");
	this.dsUpdate.addColumn("YN_SITECHECK"   , "string");
	this.dsUpdate.addColumn("DS_RESERVEDSITE", "string");
	this.dsUpdate.addColumn("YN_TERMINATE"   , "string");
	this.dsUpdate.addColumn("YN_DISHONOR"    , "string");
	this.dsUpdate.addColumn("DS_BIGO"        , "string");
	this.dsUpdate.addColumn("NO_TERMINATION" , "string");
	this.dsUpdate.addColumn("DS_BIGOCANCEL"  , "string");
	this.dsUpdate.addColumn("RM_BIGO"        , "string");
	this.dsUpdate.addColumn("CD_CORP"        , "string");
	this.dsUpdate.addColumn("YN_JIGUEB"      , "string");
	this.dsUpdate.addColumn("DS_VENDOR2"     , "string");
	this.dsUpdate.addColumn("RM_AMT"         , "string");
	this.dsUpdate.addColumn("CD_ACNTUNIT"    , "string");
	this.dsUpdate.addColumn("CD_ROOM"        , "string");
	this.dsUpdate.addColumn("YN_TRANSFER"    , "string");
	this.dsUpdate.addColumn("YN_PROVISIONAL" , "string");
	this.dsUpdate.addColumn("YN_SALE"        , "string");
	this.dsUpdate.addColumn("DS_SITE_DTL"    , "string");
	this.dsUpdate.addColumn("DS_BIGOJIGUEB"  , "string");
	this.dsUpdate.addColumn("DT_HAEJI"       , "string");
	this.dsUpdate.addColumn("ID_USER"        , "string");

	this.dsDelete = new Dataset();
	this.dsDelete.addColumn("CD_CORP"        , "string");
	this.dsDelete.addColumn("NO_RECEIPT"     , "string");
	
	this.dsSiteSelect = new Dataset();
	this.dsSiteSelect.addColumn("CD_CORP"    , "string");
	this.dsSiteSelect.addColumn("NO_RECEIPT" , "string");
	this.dsSiteSelect.addColumn("NO_CASE"  	 , "string");
	
	this.dsSiteInsert = new Dataset();
	this.dsSiteInsert.addColumn("CD_CORP" 	 , "string");
	this.dsSiteInsert.addColumn("NO_RECEIPT" , "string");
	this.dsSiteInsert.addColumn("NO_CASE"	 , "string");
	this.dsSiteInsert.addColumn("CD_SITE"	 , "string");
	this.dsSiteInsert.addColumn("DS_BIGO"	 , "string");
	this.dsSiteInsert.addColumn("ID_USER"	 , "string");

	this.dsSiteUpdate = new Dataset()
	this.dsSiteUpdate.addColumn("CD_CORP"	 , "string");
	this.dsSiteUpdate.addColumn("NO_RECEIPT" , "string");
	this.dsSiteUpdate.addColumn("NO_CASE"	 , "string");
	this.dsSiteUpdate.addColumn("CD_SITE"	 , "string");
	this.dsSiteUpdate.addColumn("DS_BIGO"	 , "string");
	this.dsSiteUpdate.addColumn("ID_USER"	 , "string");

	this.dsSiteDelete = new Dataset()
	this.dsSiteDelete.addColumn("CD_CORP"	 , "string");
	this.dsSiteDelete.addColumn("NO_RECEIPT" , "string");
	this.dsSiteDelete.addColumn("NO_CASE"	 , "string");
	this.dsSiteDelete.addColumn("CD_SITE"	 , "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "CD_VENDOR"   , this.dsSearch.getColumn(0, "CD_VENDOR"));
	this.dsSelect.setColumn(0, "FR_RECEIPT"  , this.dsSearch.getColumn(0, "FR_RECEIPT"));
	this.dsSelect.setColumn(0, "TO_RECEIPT"  , this.dsSearch.getColumn(0, "TO_RECEIPT"));
	this.dsSelect.setColumn(0, "YN_TERMINATE", this.dsSearch.getColumn(0, "YN_TERMINATE"));
	this.dsSelect.setColumn(0, "CD_CORP"     , this.dsSearch.getColumn(0, "CD_CORP"));
	this.dsSelect.setColumn(0, "DS_CREDITOR" , this.dsSearch.getColumn(0, "DS_CREDITOR"));
	this.dsSelect.setColumn(0, "DS_RDEPT"    , this.dsSearch.getColumn(0, "DS_RDEPT"));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
}

/*
  *	적용현장 조회 버튼
  */
this.fnSiteSelect = function() {
	
	this.gfnGridBeforeSelect(this.dxGrid2);
	
	this.dsSiteSelect.clearData();
	this.dsSiteSelect.addRow();
	
	this.dsSiteSelect.setColumn(0, "CD_CORP"   , this.dsList.getColumn(this.dsList.rowposition, "CD_CORP"));
	this.dsSiteSelect.setColumn(0, "NO_RECEIPT", this.dsList.getColumn(this.dsList.rowposition, "NO_RECEIPT"));
	this.dsSiteSelect.setColumn(0, "NO_CASE"   , this.dsList.getColumn(this.dsList.rowposition, "NO_CASE"));
	
	var strSvcId    = "selectsite";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "selectsite=dsSiteSelect";
	var outData     = "dsList2=selectsite0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	var nrow = this.gfnGridAdd(this.dxGrid);
	
	this.fnInsertSetter();
};

this.fnInsertSetter = function() {

	this.fnEnableSetter(true);
	
	// 입력폼 세팅.
	this.dsList.set_enableevent(false);
	this.dsList.setColumn(this.dsList.rowposition, "YN_SITECHECK"  , "N");	// 해당현장
	this.dsList.setColumn(this.dsList.rowposition, "YN_DISHONOR"   , "N");	// 부도여부
	this.dsList.setColumn(this.dsList.rowposition, "YN_TRANSFER"   , "N");	// 양도여부
	this.dsList.setColumn(this.dsList.rowposition, "YN_PROVISIONAL", "N");	// 가압류여부
	this.dsList.setColumn(this.dsList.rowposition, "YN_TERMINATE"  , "N");	// 해지구분
	this.dsList.setColumn(this.dsList.rowposition, "YN_JIGUEB"     , "N");	// 지급가능여부
	
	this.dsList.setColumn(this.dsList.rowposition, "AM_CLAIM"      , 0);	// 청구액
	
	this.dsList.setColumn(this.dsList.rowposition, "DT_RECEIPT"    , this.gfnGetDate());
	this.dsList.setColumn(this.dsList.rowposition, "DT_INPUT"      , this.gfnGetDate());
	
	this.dsList.setColumn(this.dsList.rowposition, "ID_INPUT" , this.AuthClient.ID_USER);
	this.dsList.setColumn(this.dsList.rowposition, "DS_INPUT" , this.AuthClient.DS_HNAME);
	this.dsList.set_enableevent(true);
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
};

/*
 *	저장 버튼
 */
this.fnSave = function() {
	// 그리드 필수항목 체크
	if (!this.fnSaveValidate()) return;	

	this.dxGrid.updateToDataset();
		
	this.dsInsert.clearData();
	this.dsUpdate.clearData();
	this.dsDelete.clearData();
	
	trace("222");
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
					if(i == this.dsList.rowposition) {
						var nrow = this.dsInsert.addRow();
						this.dsInsert.setColumn(nrow, "NO_RECEIPT"     , this.dsList.getColumn(i, "NO_RECEIPT"));
						this.dsInsert.setColumn(nrow, "DT_RECEIPT"     , this.dsList.getColumn(i, "DT_RECEIPT"));
						this.dsInsert.setColumn(nrow, "DT_INPUT"       , this.dsList.getColumn(i, "DT_INPUT"));
						this.dsInsert.setColumn(nrow, "NO_CASE"        , this.dsList.getColumn(i, "NO_CASE"));
						this.dsInsert.setColumn(nrow, "ID_INPUT"       , this.dsList.getColumn(i, "ID_INPUT"));
						this.dsInsert.setColumn(nrow, "DS_CASE"        , this.dsList.getColumn(i, "DS_CASE"));
						this.dsInsert.setColumn(nrow, "DS_BALSONGCHO"  , this.dsList.getColumn(i, "DS_BALSONGCHO"));
						this.dsInsert.setColumn(nrow, "AM_CLAIM"       , this.dsList.getColumn(i, "AM_CLAIM"));
						this.dsInsert.setColumn(nrow, "AM_PAY"         , 0);
						this.dsInsert.setColumn(nrow, "CD_VENDOR"      , this.dsList.getColumn(i, "CD_VENDOR"));
						this.dsInsert.setColumn(nrow, "DS_CREDITOR"    , this.dsList.getColumn(i, "DS_CREDITOR"));
						this.dsInsert.setColumn(nrow, "DT_LASTPAY"     , 0);
						this.dsInsert.setColumn(nrow, "DT_REQUESTPAY"  , 0);
						this.dsInsert.setColumn(nrow, "YN_SITECHECK"   , this.dsList.getColumn(i, "YN_SITECHECK"));
						this.dsInsert.setColumn(nrow, "DS_RESERVEDSITE", "");
						this.dsInsert.setColumn(nrow, "YN_TERMINATE"   , this.dsList.getColumn(i, "YN_TERMINATE"));
						this.dsInsert.setColumn(nrow, "YN_DISHONOR"    , this.dsList.getColumn(i, "YN_DISHONOR"));
						this.dsInsert.setColumn(nrow, "DS_BIGO"        , this.dsList.getColumn(i, "DS_BIGO"));
						this.dsInsert.setColumn(nrow, "NO_TERMINATION" , "");
						this.dsInsert.setColumn(nrow, "DS_BIGOCANCEL"  , this.dsList.getColumn(i, "DS_BIGOCANCEL"));
						this.dsInsert.setColumn(nrow, "CD_CORP"        , this.dsSearch.getColumn(0, "CD_CORP"));
						this.dsInsert.setColumn(nrow, "RM_BIGO"        , this.dsList.getColumn(i, "RM_BIGO"));
						this.dsInsert.setColumn(nrow, "YN_JIGUEB"      , this.dsList.getColumn(i, "YN_JIGUEB"));
						this.dsInsert.setColumn(nrow, "DS_VENDOR2"     , this.dsList.getColumn(i, "DS_VENDOR2"));
						this.dsInsert.setColumn(nrow, "RM_AMT"         , this.dsList.getColumn(i, "RM_AMT"));
						this.dsInsert.setColumn(nrow, "CD_ACNTUNIT"    , this.dsList.getColumn(i, "CD_ACNTUNIT"));
						this.dsInsert.setColumn(nrow, "CD_ROOM"        , this.dsList.getColumn(i, "CD_ROOM"));
						this.dsInsert.setColumn(nrow, "YN_TRANSFER"    , this.dsList.getColumn(i, "YN_TRANSFER"));
						this.dsInsert.setColumn(nrow, "YN_PROVISIONAL" , this.dsList.getColumn(i, "YN_PROVISIONAL"));
						this.dsInsert.setColumn(nrow, "YN_SALE"        , this.dsList.getColumn(i, "YN_SALE"));
						this.dsInsert.setColumn(nrow, "DS_SITE_DTL"    , this.dsList.getColumn(i, "DS_SITE_DTL"));
						this.dsInsert.setColumn(nrow, "DS_BIGOJIGUEB"  , this.dsList.getColumn(i, "DS_BIGOJIGUEB"));
						this.dsInsert.setColumn(nrow, "DT_HAEJI"       , this.dsList.getColumn(i, "DT_HAEJI"));
						this.dsInsert.setColumn(nrow, "ID_USER"        , this.AuthClient.ID_USER);
					}
				break;
				
			case "U":
					var nrow = this.dsUpdate.addRow();
					this.dsUpdate.setColumn(nrow, "NO_RECEIPT"     , this.dsList.getColumn(i, "NO_RECEIPT"));
					this.dsUpdate.setColumn(nrow, "DT_RECEIPT"     , this.dsList.getColumn(i, "DT_RECEIPT"));
					this.dsUpdate.setColumn(nrow, "DT_INPUT"       , this.dsList.getColumn(i, "DT_INPUT"));
					this.dsUpdate.setColumn(nrow, "NO_CASE"        , this.dsList.getColumn(i, "NO_CASE"));
					this.dsUpdate.setColumn(nrow, "ID_INPUT"       , this.dsList.getColumn(i, "ID_INPUT"));
					this.dsUpdate.setColumn(nrow, "DS_CASE"        , this.dsList.getColumn(i, "DS_CASE"));
					this.dsUpdate.setColumn(nrow, "DS_BALSONGCHO"  , this.dsList.getColumn(i, "DS_BALSONGCHO"));
					this.dsUpdate.setColumn(nrow, "AM_CLAIM"       , this.dsList.getColumn(i, "AM_CLAIM"));
					this.dsUpdate.setColumn(nrow, "AM_PAY"         , 0);
					this.dsUpdate.setColumn(nrow, "CD_VENDOR"      , this.dsList.getColumn(i, "CD_VENDOR"));
					this.dsUpdate.setColumn(nrow, "DS_CREDITOR"    , this.dsList.getColumn(i, "DS_CREDITOR"));
					this.dsUpdate.setColumn(nrow, "DT_LASTPAY"     , 0);
					this.dsUpdate.setColumn(nrow, "DT_REQUESTPAY"  , 0);
					this.dsUpdate.setColumn(nrow, "YN_SITECHECK"   , this.dsList.getColumn(i, "YN_SITECHECK"));
					this.dsUpdate.setColumn(nrow, "DS_RESERVEDSITE", "");
					this.dsUpdate.setColumn(nrow, "YN_TERMINATE"   , this.dsList.getColumn(i, "YN_TERMINATE"));
					this.dsUpdate.setColumn(nrow, "YN_DISHONOR"    , this.dsList.getColumn(i, "YN_DISHONOR"));
					this.dsUpdate.setColumn(nrow, "DS_BIGO"        , this.dsList.getColumn(i, "DS_BIGO"));
					this.dsUpdate.setColumn(nrow, "NO_TERMINATION" , "");
					this.dsUpdate.setColumn(nrow, "DS_BIGOCANCEL"  , this.dsList.getColumn(i, "DS_BIGOCANCEL"));
					this.dsUpdate.setColumn(nrow, "RM_BIGO"        , this.dsList.getColumn(i, "RM_BIGO"));
					this.dsUpdate.setColumn(nrow, "CD_CORP"        , this.dsSearch.getColumn(0, "CD_CORP"));
					this.dsUpdate.setColumn(nrow, "YN_JIGUEB"      , this.dsList.getColumn(i, "YN_JIGUEB"));
					this.dsUpdate.setColumn(nrow, "DS_VENDOR2"     , this.dsList.getColumn(i, "DS_VENDOR2"));
					this.dsUpdate.setColumn(nrow, "RM_AMT"         , this.dsList.getColumn(i, "RM_AMT"));
					this.dsUpdate.setColumn(nrow, "CD_ACNTUNIT"    , this.dsList.getColumn(i, "CD_ACNTUNIT"));
					this.dsUpdate.setColumn(nrow, "CD_ROOM"        , this.dsList.getColumn(i, "CD_ROOM"));
					this.dsUpdate.setColumn(nrow, "YN_TRANSFER"    , this.dsList.getColumn(i, "YN_TRANSFER"));
					this.dsUpdate.setColumn(nrow, "YN_PROVISIONAL" , this.dsList.getColumn(i, "YN_PROVISIONAL"));
					this.dsUpdate.setColumn(nrow, "YN_SALE"        , this.dsList.getColumn(i, "YN_SALE"));
					this.dsUpdate.setColumn(nrow, "DS_SITE_DTL"    , this.dsList.getColumn(i, "DS_SITE_DTL"));
					this.dsUpdate.setColumn(nrow, "DS_BIGOJIGUEB"  , this.dsList.getColumn(i, "DS_BIGOJIGUEB"));
					this.dsUpdate.setColumn(nrow, "DT_HAEJI"       , this.dsList.getColumn(i, "DT_HAEJI"));
					this.dsInsert.setColumn(nrow, "ID_USER"        , this.AuthClient.ID_USER);
				break;
				
			case "D":
				var nrow = this.dsDelete.addRow();
					this.dsDelete.setColumn(nrow, "CD_CORP"        , this.dsSearch.getColumn(0, "CD_CORP"));
					this.dsDelete.setColumn(nrow, "NO_RECEIPT"     , this.dsList.getColumn(i, "NO_RECEIPT"));
				break;
		}
	}
	
	trace("333");
	
	if (this.dsInsert.rowcount == 0 && this.dsUpdate.rowcount == 0 && this.dsDelete.rowcount == 0) return;
		
	trace("444");	
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "insert=dsInsert update=dsUpdate delete=dsDelete";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
}

// 계획 저장
this.fnSaveSite = function() {
	
	// 그리드 필수항목 체크
	if (!this.gfnGridValidate(this.dxGrid2)) return;	
	
	this.dxGrid2.updateToDataset();
	
	this.dsSiteInsert.clearData();
	this.dsSiteUpdate.clearData();
	this.dsSiteDelete.clearData();
	
	for (var i = 0; i < this.dsList2.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList2, i);
		switch(flag) {
			case "I":
					var nrow = this.dsSiteInsert.addRow();
					this.dsSiteInsert.setColumn(nrow, "CD_CORP"   	, this.dsList2.getColumn(i, "CD_CORP"));
					this.dsSiteInsert.setColumn(nrow, "NO_RECEIPT"	, this.dsList2.getColumn(i, "NO_RECEIPT"));
					this.dsSiteInsert.setColumn(nrow, "NO_CASE"     , this.dsList2.getColumn(i, "NO_CASE"));
					this.dsSiteInsert.setColumn(nrow, "CD_SITE"		, this.dsList2.getColumn(i, "CD_SITE"));
					this.dsSiteInsert.setColumn(nrow, "DS_BIGO"		, this.dsList2.getColumn(i, "DS_BIGO"));
					this.dsSiteInsert.setColumn(nrow, "ID_USER"		, this.AuthClient.ID_USER);

				break;
				
			case "U":
					var nrow = this.dsSiteUpdate.addRow();
					this.dsSiteUpdate.setColumn(nrow, "CD_CORP"		, this.dsList2.getColumn(i, "CD_CORP"));
					this.dsSiteUpdate.setColumn(nrow, "NO_RECEIPT"	, this.dsList2.getColumn(i, "NO_RECEIPT"));
					this.dsSiteUpdate.setColumn(nrow, "NO_CASE"		, this.dsList2.getColumn(i, "NO_CASE"));
					this.dsSiteUpdate.setColumn(nrow, "CD_SITE"		, this.dsList2.getColumn(i, "CD_SITE"));
					this.dsSiteUpdate.setColumn(nrow, "DS_BIGO"		, this.dsList2.getColumn(i, "DS_BIGO"));
					this.dsSiteUpdate.setColumn(nrow, "ID_USER"		, this.AuthClient.ID_USER);
				break;
				
			case "D":
					var nrow = this.dsSiteDelete.addRow();
					this.dsSiteDelete.setColumn(nrow, "CD_CORP"		, this.dsList2.getColumn(i, "CD_CORP"));
					this.dsSiteDelete.setColumn(nrow, "NO_RECEIPT"	, this.dsList2.getColumn(i, "NO_RECEIPT"));
					this.dsSiteDelete.setColumn(nrow, "NO_CASE"		, this.dsList2.getColumn(i, "NO_CASE"));
					this.dsSiteDelete.setColumn(nrow, "CD_SITE"		, this.dsList2.getColumn(i, "CD_SITE"));
				break;
		}
	}
	
	if (this.dsSiteInsert.rowcount == 0 && this.dsSiteUpdate.rowcount == 0 && this.dsSiteDelete.rowcount == 0) return;
		
	var strSvcId    = "savesite";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "insertsite=dsSiteInsert updatesite=dsSiteUpdate deletesite=dsSiteDelete";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "CD_CORP"))) {
		this.gfnAlert("법인코드를 입력 하세요.");
		this.ccfCD_CORP.setFocus();
		return false;
	}
	
	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
	if (svcID == "selectsite") {
		this.gfnGridAfterSelect(this.dxGrid2);
	}
	}else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	else if(svcID == "savesite") {
		if (errorCode == 0) {
			this.fnSiteSelect();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
 this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	
	if(id == "ccfCD_VENDOR") {
		dsUserParam.setColumn(nrow, "TY_VENDOR1", "F");
		dsUserParam.setColumn(nrow, "CD_CORP"   , this.dsSearch.getColumn(0, "CD_CORP"));
	}
	
	if(id == "cfCD_VENDOR") {
		dsUserParam.setColumn(nrow, "TY_VENDOR1", "F");
		dsUserParam.setColumn(nrow, "CD_CORP"   , this.dsSearch.getColumn(0, "CD_CORP"));
	}
	
	return true;
};
 
this.fnAfterCDTextChanged = function(id, codeFindData) {
	var arr = codeFindData;
	switch(id) {
	
		// 금융기관거래처(전표발행지점)
		case "cfCD_VENDOR":
				if(arr.length > 0) {
				
					this.dsList.set_enableevent(false);
					this.dsList.setColumn(this.dsList.rowposition, "NO_SJC", arr[0]["NO_SJC"]);
					this.dsList.set_enableevent(true);
				}	
			break;	
			
		default:
	}	
	return true;
}

this.fnGrid_BeforuserDataSetParam = function(id, dsUserParam, nrow) {
	var cdCorp = this.dsList.getColumn(this.dsList.rowposition, "CD_CORP");
	
	// 귀속부서
	if (id == "DFX_CFACNTUNIT") {
		dsUserParam.setColumn(nrow, "CD_GROUP", this.cdGroup);
		dsUserParam.setColumn(nrow, "CD_CORP" , this.gfnIsNull(cdCorp) ? this.dsSearch.getColumn(0, "CD_CORP") : cdCorp);
	}	
	return true;
}
 
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGrid_RowCellChanged = function(obj:nexacro.Grid,e:nexacro.GridSelectEventInfo)
{
    if ((obj.oldrow > -1 && obj.oldrow == e.row)
		|| (obj.oldrow == -1 && e.oldrow != e.row)) {
		
		this.fnSiteSelect();
		this.fnSetSiteBtns();
		
		this.dsList.set_enableevent(false);
		
		// 해지구분
		this.txtDS_BIGOCANCEL.set_enable(this.dsList.getColumn(e.row, "YN_TERMINATE") == "Y" ? true : false);
		if(this.dsList.getColumn(e.row, "YN_TERMINATE") == "N") this.dsList.setColumn(e.row, "DS_BIGOCANCEL", "");
		
		// 해지일자
		this.tclDT_HAEJI.set_enable(this.dsList.getColumn(e.row, "YN_TERMINATE") == "Y" ? true : false);
		if(this.dsList.getColumn(e.row, "YN_TERMINATE") == "N") this.dsList.setColumn(e.row, "DT_HAEJI", "");
		
		// 지급가능여부
		this.txtDS_BIGOJIGUEB.set_enable(this.dsList.getColumn(e.row, "YN_JIGUEB") == "Y" ? true : false);
		if(this.dsList.getColumn(e.row, "YN_JIGUEB") == "N") this.dsList.setColumn(e.row, "DS_BIGOJIGUEB", "");
		
		this.dsList.set_enableevent(true);
		
		obj.oldrow = -1;
	}
};

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);
		
		if(e.columnid == "CD_CORP") {
			this.ccfCD_VENDOR.form.fnCodeFindClear(false);
		}
	}
};

this.divData_divSplitter_ondrag = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
	e.set_userdata("splitter");
	return true;
};

this.divData_ondragmove = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
	if(e.userdata == "splitter") {
		this.divData.form.divSplitter.set_left(e.clientx);
		this.divData.form.resetScroll();
	}
};

this.dsList_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		
		this.dsList.set_enableevent(false);
		
		// 해당현장
		if(e.columnid == "YN_SITECHECK") {
			this.fnSetSiteBtns();
		}
		
		// 해지구분, 해지일자
		if(e.columnid == "YN_TERMINATE") {
			this.txtDS_BIGOCANCEL.set_enable(e.newvalue == "Y" ? true : false);
			this.tclDT_HAEJI.set_enable(e.newvalue == "Y" ? true : false);
			if(e.newvalue == "N") {
				this.dsList.setColumn(this.dsList.rowposition, "DS_BIGOCANCEL", "");
				this.dsList.setColumn(this.dsList.rowposition, "DT_HAEJI", "");
			}
		}
		
		// 지급가능여부
		if(e.columnid == "YN_JIGUEB") {
			this.txtDS_BIGOJIGUEB.set_enable(e.newvalue == "Y" ? true : false);
			if(e.newvalue == "N") this.dsList.setColumn(this.dsList.rowposition, "DS_BIGOJIGUEB", "");
		}
		
		this.dsList.set_enableevent(true);
	}
};

this.fnSaveValidate = function() {
	
	if(this.gfnIsNull(this.dsList.getColumn(this.dsList.rowposition, "CD_VENDOR"))) {
		this.gfnAlert("채무자를 입력하세요.");
		this.cfCD_VENDOR.form.TextBox.setFocus();
		return false;
	}
	
	if(this.gfnIsNull(this.dsList.getColumn(this.dsList.rowposition, "DS_CREDITOR"))) {
		this.gfnAlert("채권자를 입력하세요.");
		this.txtDS_CREDITOR.setFocus();
		return false;
	}
	
	if(this.gfnIsNull(this.dsList.getColumn(this.dsList.rowposition, "DT_RECEIPT"))) {
		this.gfnAlert("접수일자를 입력하세요.");
		this.tclDT_RECEIPT.setFocus();
		return false;
	}
	
	if(this.gfnIsNull(this.dsList.getColumn(this.dsList.rowposition, "DS_BIGO"))) {
		this.gfnAlert("채권내용을 입력하세요.");
		this.txtDS_BIGO.setFocus();
		return false;
	}
	
	// 수정상태일 경우만 적용현장 필수.
	var flag = this.gfnGetFlag(this.dsList, this.dsList.rowposition);
 	if(flag == "U" && this.dsList.getColumn(this.dsList.rowposition, "YN_SITECHECK") == "Y") {
 		if(this.dsList2.rowcount < 1) {
 			this.gfnAlert("현장을 입력하세요.");
 			return false;
 		}
 	}
	
	if(this.dsList.getColumn(this.dsList.rowposition, "YN_TERMINATE") == "Y" && this.gfnIsNull(this.dsList.getColumn(this.dsList.rowposition, "DS_BIGOCANCEL"))) {
		this.gfnAlert("해지사유를 입력하세요.");
		this.txtDS_BIGOCANCEL.setFocus();
		return false;
	}
	
	if(this.dsList.getColumn(this.dsList.rowposition, "YN_JIGUEB") == "Y" && this.gfnIsNull(this.dsList.getColumn(this.dsList.rowposition, "DS_BIGOJIGUEB"))) {
		this.gfnAlert("지급가능 사유를 입력하세요.");
		this.txtDS_BIGOJIGUEB.setFocus();
		return false;
	}
	
	if(this.gfnIsNull(this.dsList.getColumn(this.dsList.rowposition, "DS_BIGO"))) {
		this.gfnAlert("채권내용을 입력하세요.");
		this.txtDS_BIGO.setFocus();
		return false;
	}
	
	return true;
}

this.fnEnableSetter = function($BOOL) {

	this.tclDT_RECEIPT.set_enable($BOOL);		// 접수일자
	this.txtNO_CASE.set_enable($BOOL);			// 사건번호
	this.txtDS_CASE.set_enable($BOOL);			// 사건명
	this.txtDS_BIGO.set_enable($BOOL);			// 채권내용
	this.txtDS_BALSONGCHO.set_enable($BOOL);	// 발송처
	this.txtDS_CREDITOR.set_enable($BOOL);		// 채권자
	this.cfCD_VENDOR.set_enable($BOOL);			// 채무자
	this.rdoYN_SITECHECK.set_enable($BOOL);		// 해당현장
	this.txtRM_BIGO.set_enable($BOOL);			// 비고
	this.txtDS_SITE_DTL.set_enable($BOOL);		// 현장비고
	this.txtDS_VENDOR2.set_enable($BOOL);		// 제3채무자
	this.txtAM_CLAIM.set_enable($BOOL);			// 청구액
	this.rdoYN_DISHONOR.set_enable($BOOL);		// 부도여부
	this.rdoYN_TRANSFER.set_enable($BOOL);		// 양도여부
	this.rdoYN_PROVISIONAL.set_enable($BOOL);	// 가압류여부
	this.rdoYN_TERMINATE.set_enable($BOOL);		// 해지구분
	this.rdoYN_JIGUEB.set_enable($BOOL);		// 지급가능여부
	
	if(!this.gfnIsNull(this.dsList.getColumn(this.dsList.rowposition, "NO_RECEIPT"))) {
		this.txtNO_CASE.set_enable(false);
	}
	
	this.txtDS_BIGOCANCEL.set_enable(this.dsList.getColumn(this.dsList.rowposition, "YN_TERMINATE") == "Y" ? true : false);		// 해지구분
	this.tclDT_HAEJI.set_enable(this.dsList.getColumn(this.dsList.rowposition, "YN_TERMINATE") == "Y" ? true : false);			// 해지일자
	this.txtDS_BIGOJIGUEB.set_enable(this.dsList.getColumn(this.dsList.rowposition, "YN_JIGUEB") == "Y" ? true : false);		// 지급가능여부
}

// 등록
this.divData_divDataRight_btnInsert_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var nrow = this.gfnGridAdd(this.dxGrid2, "bottom");
	this.dsList2.set_enableevent(false);

	var row = this.dsList.rowposition;
	
 	this.dsList2.setColumn(nrow, "CD_CORP"   , this.dsList.getColumn(row, "CD_CORP"));			// 법인코드
	this.dsList2.setColumn(nrow, "NO_RECEIPT", this.dsList.getColumn(row, "NO_RECEIPT"));		// 접수번호
	this.dsList2.setColumn(nrow, "NO_CASE"   , this.dsList.getColumn(row, "NO_CASE"));			// 사건번호
	
	this.dsList2.set_enableevent(true);
	
	this.dsList2.set_rowposition(nrow);
	this.dxGrid2.setCellPos(1);
};

// 삭제
this.divData_divDataRight_btnDelete_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.gfnGridDel(this.dxGrid2);
};

// 저장
this.divData_divDataRight_btnSave_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.fnSaveSite();
	this.fnSave();
};

// 적용현장 버튼 세팅.
this.fnSetSiteBtns = function() {
	this.btnSave.set_enable(false);
	this.btnDelete.set_enable(false);
	this.btnInsert.set_enable(false);
	
	var flag = this.gfnGetFlag(this.dsList, this.dsList.rowposition);
	
	var ds   = this.dsList;
	var row  = this.dsList.rowposition;
	
	if(flag != 'I' && ds.getColumn(row, "YN_SITECHECK") == "Y") {		// 적용현장
		this.btnSave.set_enable(true);
		this.btnDelete.set_enable(true);
		this.btnInsert.set_enable(true);
	} 
}
]]></Script>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_CORP.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_CORP"/>
      <BindItem id="item2" compid="divSearch.form.ccfCD_VENDOR.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_VENDOR"/>
      <BindItem id="item3" compid="divSearch.form.ccfCD_VENDOR.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_VENDOR"/>
      <BindItem id="item4" compid="divSearch.form.ctxtDS_CREDITOR" propid="value" datasetid="dsSearch" columnid="DS_CREDITOR"/>
      <BindItem id="item5" compid="divSearch.form.ctxtDS_RDEPT" propid="value" datasetid="dsSearch" columnid="DS_RDEPT"/>
      <BindItem id="item6" compid="divSearch.form.ctclFR_RECEIPT" propid="value" datasetid="dsSearch" columnid="FR_RECEIPT"/>
      <BindItem id="item7" compid="divSearch.form.ctclTO_RECEIPT" propid="value" datasetid="dsSearch" columnid="TO_RECEIPT"/>
      <BindItem id="item8" compid="divSearch.form.ccboYN_TERMINATE" propid="value" datasetid="dsSearch" columnid="YN_TERMINATE"/>
      <BindItem id="item9" compid="divData.form.divDataRight.form.txtNO_RECEIPT" propid="value" datasetid="dsList" columnid="NO_RECEIPT"/>
      <BindItem id="item10" compid="divData.form.divDataRight.form.tclDT_RECEIPT" propid="value" datasetid="dsList" columnid="DT_RECEIPT"/>
      <BindItem id="item11" compid="divData.form.divDataRight.form.tclDT_INPUT" propid="value" datasetid="dsList" columnid="DT_INPUT"/>
      <BindItem id="item12" compid="divData.form.divDataRight.form.txtID_INPUT" propid="value" datasetid="dsList" columnid="ID_INPUT"/>
      <BindItem id="item52" compid="divData.form.divDataRight.form.txtDS_INPUT" propid="value" datasetid="dsList" columnid="DS_INPUT"/>
      <BindItem id="item13" compid="divData.form.divDataRight.form.txtDS_CASE" propid="value" datasetid="dsList" columnid="DS_CASE"/>
      <BindItem id="item14" compid="divData.form.divDataRight.form.txtDS_BALSONGCHO" propid="value" datasetid="dsList" columnid="DS_BALSONGCHO"/>
      <BindItem id="item15" compid="divData.form.divDataRight.form.txtAM_CLAIM" propid="value" datasetid="dsList" columnid="AM_CLAIM"/>
      <BindItem id="item16" compid="divData.form.divDataRight.form.cfCD_VENDOR.form.CDTextBox" propid="value" datasetid="dsList" columnid="CD_VENDOR"/>
      <BindItem id="item53" compid="divData.form.divDataRight.form.cfCD_VENDOR.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_VENDOR"/>
      <BindItem id="item54" compid="divData.form.divDataRight.form.txtNO_SJC" propid="value" datasetid="dsList" columnid="NO_SJC"/>
      <BindItem id="item17" compid="divData.form.divDataRight.form.txtDS_CREDITOR" propid="value" datasetid="dsList" columnid="DS_CREDITOR"/>
      <BindItem id="item18" compid="divData.form.divDataRight.form.rdoYN_SITECHECK" propid="value" datasetid="dsList" columnid="YN_SITECHECK"/>
      <BindItem id="item21" compid="divData.form.divDataRight.form.rdoYN_TERMINATE" propid="value" datasetid="dsList" columnid="YN_TERMINATE"/>
      <BindItem id="item22" compid="divData.form.divDataRight.form.rdoYN_DISHONOR" propid="value" datasetid="dsList" columnid="YN_DISHONOR"/>
      <BindItem id="item23" compid="divData.form.divDataRight.form.txtDS_BIGO" propid="value" datasetid="dsList" columnid="DS_BIGO"/>
      <BindItem id="item24" compid="divData.form.divDataRight.form.txtDS_BIGOCANCEL" propid="value" datasetid="dsList" columnid="DS_BIGOCANCEL"/>
      <BindItem id="item25" compid="divData.form.divDataRight.form.txtRM_BIGO" propid="value" datasetid="dsList" columnid="RM_BIGO"/>
      <BindItem id="item29" compid="divData.form.divDataRight.form.rdoYN_JIGUEB" propid="value" datasetid="dsList" columnid="YN_JIGUEB"/>
      <BindItem id="item30" compid="divData.form.divDataRight.form.txtDS_VENDOR2" propid="value" datasetid="dsList" columnid="DS_VENDOR2"/>
      <BindItem id="item31" compid="divData.form.divDataRight.form.txtAM_CLAIM" propid="value" datasetid="dsList" columnid="AM_CLAIM"/>
      <BindItem id="item34" compid="divData.form.divDataRight.form.rdoYN_TRANSFER" propid="value" datasetid="dsList" columnid="YN_TRANSFER"/>
      <BindItem id="item35" compid="divData.form.divDataRight.form.rdoYN_PROVISIONAL" propid="value" datasetid="dsList" columnid="YN_PROVISIONAL"/>
      <BindItem id="item37" compid="divData.form.divDataRight.form.txtDS_SITE_DTL" propid="value" datasetid="dsList" columnid="DS_SITE_DTL"/>
      <BindItem id="item38" compid="divData.form.divDataRight.form.txtDS_BIGOJIGUEB" propid="value" datasetid="dsList" columnid="DS_BIGOJIGUEB"/>
      <BindItem id="item26" compid="divData.form.divDataRight.form.txtNO_CASE" propid="value" datasetid="dsList" columnid="NO_CASE"/>
      <BindItem id="item19" compid="divData.form.divDataRight.form.tclDT_HAEJI" propid="value" datasetid="dsList" columnid="DT_HAEJI"/>
    </Bind>
  </Form>
</FDL>
