<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="500" height="250" titletext="New Form" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divData" taborder="0" left="0" top="0" bottom="0" right="0" cssclass="div_DATA_Bg" text="">
          <Layouts>
            <Layout>
              <Static id="staTITLE" taborder="0" text="거래처/계좌정보 동기화" left="0" top="0" width="100%" height="45" cssclass="sta_TITLE_Bg" textAlign="center"/>
              <Static id="staMSG" taborder="1" text="※ SAP거래처/계좌정보를 동기화합니다. 이 기능은 일시적으로 ERP시스템 성능저하의 원인이 될수 있으니 꼭 필요한 경우만 사용하십시오." left="0" top="staTITLE:0" height="60" textAlign="left" right="0" wordWrap="english" color="red" font="bold 12px/normal &quot;Dotum&quot;"/>
              <Static id="staAP_SYNC" taborder="2" text="매입거래처 동기화" left="0" top="staMSG:5" width="140" height="30" cssclass="sta_WF_tablelabel" textAlign="right"/>
              <Static id="staAR_SYNC" taborder="3" text="매출거래처 동기화" left="0" top="staAP_SYNC:-1" width="140" height="30" cssclass="sta_WF_tablelabel" textAlign="right"/>
              <Static id="staACCOUNT_SYNC" taborder="4" text="계좌정보 동기화" left="0" top="staAR_SYNC:-1" width="140" height="30" cssclass="sta_WF_tablelabel" textAlign="right"/>
              <Static id="staBgAP_SYNC" taborder="5" left="staAP_SYNC:-1" top="staMSG:5" right="0" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staBgAR_SYNC" taborder="6" left="staAR_SYNC:-1" top="staBgAP_SYNC:-1" right="0" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staBgACCOUNT_SYNC" taborder="7" left="staACCOUNT_SYNC:-1" top="staBgAR_SYNC:-1" right="0" height="30" cssclass="sta_WF_tablebg"/>
              <Button id="btnCancel" taborder="8" text="닫기" left="42%" top="staACCOUNT_SYNC:20" width="60" height="20" onclick="divData_btnCancel_onclick"/>
              <Button id="btnAP_SYNC" taborder="9" text="매입거래처 동기화" left="staAP_SYNC:5" top="staMSG:10" width="120" height="20" onclick="divData_btnAP_SYNC_onclick"/>
              <Button id="btnAR_SYNC" taborder="10" text="매출거래처 동기화" left="staAP_SYNC:5" top="btnAP_SYNC:9" width="120" height="20" onclick="divData_btnAR_SYNC_onclick"/>
              <Button id="btnACCOUNT_SYNC" taborder="11" text="계좌정보 동기화" left="staAP_SYNC:5" top="btnAR_SYNC:9" width="120" height="20" onclick="divData_btnACCOUNT_SYNC_onclick"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	//this.FormBtns.Select.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {

};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {		
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {

};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {	
	this.dsSync = new Dataset();
	this.dsSync.addColumn("PARAM", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
  /*
  *	조회 버튼
  */
this.fnSelect = function() {

}
 
/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	저장 Validate
 */
this.fnSaveValidate = function() {	
	var validate = true;
	
	return validate;
	
};
/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg, strArg)
{
	if(svcID == "sync") {
		if (errorCode == 0) {
		
			var msg = "";
			
			if(strArg == "ap")
			{
				msg = "매입거래처 동기화가 정상처리되었습니다.";
			}
			else if(strArg == "ar")
			{
				msg = "매출거래처 동기화가 정상처리되었습니다.";
			}
			else if(strArg == "account")
			{
				msg = "계좌정보 동기화가 정상처리되었습니다.";
			}
			
			this.gfnAlert(msg);
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
// 닫기 버튼 클릭
this.divData_btnCancel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	// this.close()가 작동하지 않았고, 
	// 부모의 callback 함수로 데이터를 넘겨주기 위해 작성되었습니다.
	this.getParentContext().close(false);
};


this.divData_btnAP_SYNC_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.gfnConfirm("매입거래처 동기화를 진행하시겠습니까?","fnAP_SYNC_callback");
};

this.fnAP_SYNC_callback = function(strID, val)
{
	if(val == true)
	{
		this.fnSync("ap");
	}
}

this.divData_btnAR_SYNC_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.gfnConfirm("매출거래처 동기화를 진행하시겠습니까?","fnAR_SYNC_callback");	
};

this.fnAR_SYNC_callback = function(strID, val)
{
	if(val == true)
	{
		this.fnSync("ar");
	}
}

this.divData_btnACCOUNT_SYNC_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.gfnConfirm("계좌정보 동기화를 진행하시겠습니까?","fnACCOUNT_SYNC_callback");		
};

this.fnACCOUNT_SYNC_callback = function(strID, val)
{
	if(val == true)
	{
		this.fnSync("account");
	}
}

this.fnSync = function(sync)
{
	this.dsSync.clearData();
	var nrow = this.dsSync.addRow();
	
	if (this.dsSync.rowcount == 0) return;
	
	var inData = "";
	
	if(sync == "ap")
	{
		inData = "sync_ap=dsSync";
	}
	else if(sync == "ar")
	{
		inData = "sync_ar=dsSync";
	}
	else
	{
		inData = "sync_account=dsSync";
	}
	
	var strSvcId    = "sync";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var outData     = "";
	var strArg      = sync;
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}]]></Script>
    <Objects>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">sync_ap</Col>
            <Col id="SP">DZZPR_AP_VENDOR_SYNC_FROM_SAP</Col>
          </Row>
          <Row>
            <Col id="TARGET">sync_ar</Col>
            <Col id="SP">DZZPR_AR_VENDOR_SYNC_FROM_SAP</Col>
          </Row>
          <Row>
            <Col id="TARGET">sync_account</Col>
            <Col id="SP">DZZPR_VENDOR_ACCOUNT_SYNC_FROM_SAP</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsList"/>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divData.form.ccboTY_GUBUN" propid="value" datasetid="dsData" columnid="TY_GUBUN"/>
      <BindItem id="item1" compid="divData.form.ctxtMDM_CD_VENDOR" propid="value" datasetid="dsData" columnid="MDM_CD_VENDOR"/>
      <BindItem id="item2" compid="divData.form.ctxtMDM_DS_VENDOR" propid="value" datasetid="dsData" columnid="MDM_DS_VENDOR"/>
    </Bind>
  </Form>
</FDL>
