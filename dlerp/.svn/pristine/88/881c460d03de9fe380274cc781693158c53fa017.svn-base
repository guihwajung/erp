<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="New Form" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0" top="0" height="46.0" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static id="staCD_CORP" taborder="0" text="법인" left="0.0" top="10.0" width="79.0" height="24.0" visible="false" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_CORP" CDTextWidth="30" taborder="1" left="staCD_CORP:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" text="" visible="false"/>
              <Static id="staYM_DEDUCTION" taborder="6" text="기준월" left="ccfCD_CORP:0.0" top="10.0" width="79.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ctclYM_DEDUCTION" taborder="2" left="staYM_DEDUCTION:0.0" top="10.0" width="90" height="24.0" url="cmm::cmmCalMM.xfdl"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DAAPR_DED_AMOUNT_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DAAPR_DED_AMOUNT_SAVE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>

          <Column id="YM_DEDUCTION" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>

            <Col id="YM_DEDUCTION"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsListSub"/>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	//this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();	
	
	this.FormBtns.Select.click();

	
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
// 	this.FormBtns.Add.set_enable(false);
// 	this.FormBtns.Del.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	//this.btn1 = this.gfnFormButtonAdd("Detail", "fnDetail1");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	//this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;
	this.ctclYM_DEDUCTION = this.divSearch.form.ctclYM_DEDUCTION;
	
	this.dxGrid = this.divData.form.objGrid;

	
	
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	//this.ccfCD_CORP.CodeFindName = "DAX_CFCORP";
	//this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	//this.ccfCD_CORP.AfterCDTextChanged = "codefind_AfterCDTextChanged";	
	
	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforuserDataSetParam";
	
	this.gfnGridInit(this.dxGrid, this.dsList, "DA", "DAA_DEDUCTION_AMOUNT");
	

}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	//this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("YM_DEDUCTION", "string");
	
	this.dsSave = new Dataset();
	this.dsSave.addColumn("TY_SAVE", "string");
	this.dsSave.addColumn("YM_DEDUCTION", "string");
	this.dsSave.addColumn("CD_CORP", "string");
	this.dsSave.addColumn("CD_POSITION", "string");
	this.dsSave.addColumn("AM_DEDUCTION", "int");
	this.dsSave.addColumn("YN_USE", "string");
	this.dsSave.addColumn("DS_REMARK", "string");
	this.dsSave.addColumn("ID_INSERT", "string");

}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if(!this.fnValidate()) return;
	
	//var cd_corp = this.dsSearch.getColumn(0, "CD_CORP"); 
	var ym_deduction = this.dsSearch.getColumn(0, "YM_DEDUCTION");
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	//this.dsSelect.setColumn(0, "CD_CORP", cd_corp);
	this.dsSelect.setColumn(0, "YM_DEDUCTION", ym_deduction);

	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	this.gfnGridAdd(this.dxGrid);
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	// 그리드 필수항목 체크
	if (!this.gfnGridValidate(this.dxGrid)) return;

	this.dxGrid.updateToDataset();

	this.dsSave.clearData();

	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
			case "U":
			case "D":
				var nrow = this.dsSave.addRow();

				this.dsSave.setColumn(nrow, "TY_SAVE", flag);
				this.dsSave.setColumn(nrow, "YM_DEDUCTION", this.dsList.getColumn(i, "YM_DEDUCTION"));
				//this.dsSave.setColumn(nrow, "CD_CORP", this.AuthClient.CD_CORP);
				this.dsSave.setColumn(nrow, "CD_POSITION", this.dsList.getColumn(i, "CD_POSITION"));
				this.dsSave.setColumn(nrow, "AM_DEDUCTION", this.dsList.getColumn(i, "AM_DEDUCTION"));
				this.dsSave.setColumn(nrow, "YN_USE", this.dsList.getColumn(i, "YN_USE"));
				this.dsSave.setColumn(nrow, "DS_REMARK", this.dsList.getColumn(i, "DS_REMARK"));
				this.dsSave.setColumn(nrow, "ID_INSERT", this.AuthClient.ID_USER);
								
				break;
		}
	}

	if (this.dsSave.rowcount == 0) return;

	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave";
	var outData     = "dsOutput=save";
	var strArg      = "";
	var callBackFnc = "fnCallback";

	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * 서브 버튼 이벤트
 ************************************************************************/

/************************************************************************
 * Validate
 ************************************************************************/ 
/*
 *	조회 Validate
 */
this.fnValidate = function() {
// 	if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
// 		this.fnVaidateCallback = function() {
// 			this.ccfCD_CORP.form.CDTextBox.setFocus();
// 		}
// 		this.gfnAlert("법인코드를 입력하세요.");
// 		return false;
// 	}
// 	
 	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
	} else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.codefind_AfterCDTextChanged = function(id) {
	this.fnSearchInit();
}

this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow){
	return true;
};
 
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
this.fnGrid_BeforuserDataSetParam = function(id, dsUserParam, nrow)
{
	switch(id) {
	//구분
		case "DAX_CFCOMMONCODE":
			dsUserParam.setColumn(nrow, "CD_PREFIX", "ED");
		break;
		default:
	}
	
	return true;
};
	


/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		// 폼상태 초기화
		this.gfnSetFormStatus(this);	
		this.gfnGridClear(this.dxGrid);
	}
};

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};

]]></Script>
    <Bind>

      <BindItem id="item0" compid="divSearch.form.ctclYM_DEDUCTION.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_DEDUCTION"/>
    </Bind>
  </Form>
</FDL>
