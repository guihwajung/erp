<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="280" height="160" maxwidth="320" maxheight="210" titletext="자산분할" onload="form_onload">
    <Layouts>
      <Layout>
        <Static id="staTitle" taborder="0" text="자산분할" left="0" top="10" height="22" cssclass="sta_TITLE_Bg" right="0"/>
        <Button id="btnConf" taborder="1" text="확인" left="68" width="69" height="27" onclick="btnConf_onclick" top="119"/>
        <Button id="btnCancel" taborder="2" text="취소" left="148" width="69" height="27" top="119" onclick="btnCancel_onclick"/>
        <Static id="staNO_DIVIDE" taborder="3" text="자산분할수(금액)" left="0" top="69" height="27" textAlign="center" width="120" cssclass="sta_WF_tablelabelE"/>
        <Static id="staBg14" taborder="4" left="staNO_DIVIDE:-1" top="69" height="27" cssclass="sta_WF_tablebg" right="1"/>
        <Static id="staBg00" taborder="5" left="119" top="43" height="27" cssclass="sta_WF_tablebg" right="1"/>
        <Static id="staNO_DIVIDE00" taborder="6" text="취득수량" left="0" top="43" height="27" cssclass="sta_WF_tablelabel" textAlign="center" width="120"/>
        <MaskEdit id="mskQN_GET" taborder="7" left="124" top="47" height="20" format="#,###,###,###,###,###,###" limitbymask="integer" right="6" enable="false"/>
        <MaskEdit id="mskNO_PART" taborder="8" left="124" top="73" height="20" format="!#,###,###,###,###,###,###" limitbymask="integer" right="6"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	//this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	//this.fnSetCombo();
	
	this.mskQN_GET.set_value(this.getOwnerFrame().QN_GET);
	
	this.mskNO_PART.setFocus();
	
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
};

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {	
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CORP", "string");			//법인코드
	this.dsSelect.addColumn("CD_ASSET", "string");			//자산번호
	this.dsSelect.addColumn("CD_ACASSET", "string");		//자산코드
	this.dsSelect.addColumn("PART_NO", "string");			//분할수
	this.dsSelect.addColumn("SABUN", "string");				//변경자 사번
};

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnProc = function() {
	var qnGet  = nexacro.toNumber(this.getOwnerFrame().QN_GET, 0);	//취득수량
	var noPart = nexacro.toNumber(this.mskNO_PART.value, 0);		//분할수량
	var amGet  = nexacro.toNumber(this.getOwnerFrame().AM_GET, 0);	//취득금액
	
	if(noPart == 0){
		this.fnVaidateCallback = function() {
			this.mskNO_PART.setFocus();
		}
		this.gfnAlert("분할수를 입력하세요","fnVaidateCallback");
		return false;
	}
	
// 	if(qnGet > 1){
// 		if(noPart > qnGet){
// 			this.fnVaidateCallback = function() {
// 				this.mskNO_PART.setFocus();
// 			}
// 			this.gfnAlert("분할수는 취득수량( "+qnGet+" )보다 작거나 같아야 합니다.","fnVaidateCallback");
// 			return false;
// 		}
// 	}else{
// 		if(noPart > amGet){
// 			this.gfnAlert("분할금액은 취득금액 보다 클수 업습니다.","fnVaidateCallback");
// 			return false;
// 		}
// 	}
	
	var sMsg = "분할하시겠습니까?";
// 	if(qnGet > 1){
// 		sMsg = "수량으로 분할하시겠습니까?";
// 	} else if(qnGet == 1){
// 		sMsg = "금액으로 분할하시겠습니까?";
// 	}
	
	this.gfnConfirm(sMsg, "fnProc_callback");
	
};

this.fnProc_callback = function(strId, val) 
{
	if(val == true) {
		this.dsSelect.clearData();
		var nrow = this.dsSelect.addRow();
		
		this.dsSelect.setColumn(nrow, "CD_CORP", this.getOwnerFrame().CD_CORP);				//법인코드
		this.dsSelect.setColumn(nrow, "CD_ACASSET", this.getOwnerFrame().CD_ACASSET);		//자산코드
		this.dsSelect.setColumn(nrow, "CD_ASSET", this.getOwnerFrame().CD_ASSET);			//자산번호
		this.dsSelect.setColumn(nrow, "PART_NO", this.mskNO_PART.value);					//분할수
		this.dsSelect.setColumn(nrow, "SABUN", this.AuthClient.ID_USER);					//변경자 사번

		var strSvcId    = "proc";
		var strSvcType  = "grid";
		var inProc		= "_dsProc";
		var inData      = "proc=dsSelect";
		var outData     = "";
		var strArg      = "";
		var callBackFnc = "fnCallback";
		
		this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
							strSvcType , 	// trabsaction을 요청할 구분
							inProc,			// Procedure 정보 Dataset 이름
							inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
							outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
							strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
							callBackFnc); // 통신방법 정의 [생략가능]
	}
};
 /*
 *	입력 버튼
 */
this.fnAdd = function() {
};

 /*
 *	저장 버튼
 */
this.fnSave = function() {
};

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	//this.gfnGridDel(this.dxGrid);
};


/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	//this.gfnExcelExport(this.dxGrid);
};

/*
 *	출력 버튼
 */
this.fnPrint = function() {
};
/************************************************************************
 * Validate
 ************************************************************************/
this.fnSelectValidate = function() {
	var validate = true;

	return validate;
};
/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
*/
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "proc") {
		this.getParentContext().close(true);
	}
};

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
 /************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
//확인버튼 클릭
this.btnConf_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.fnProc();
};
this.btnCancel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.getParentContext().close();
};
]]></Script>
    <Objects>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">proc</Col>
            <Col id="SP">DHNPR_ASSETGAINALL_PARTITION</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
  </Form>
</FDL>
