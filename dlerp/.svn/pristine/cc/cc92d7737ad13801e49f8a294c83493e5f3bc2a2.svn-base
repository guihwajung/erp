(function()
{
    return function()
    {
        if (!this._is_form)
            return;
        
        var obj = null;
        
        this.on_create = function()
        {
            this.set_name("form");
            this.set_titletext("급여명세서");
            this.getSetter("maxwidth").set("391");
            this.getSetter("maxheight").set("409");
            if (Form == this.constructor)
            {
                this._setFormPosition(351,334);
            }
            
            // Object(Dataset, ExcelExportObject) Initialize
            obj = new Dataset("_dsProc", this);
            obj._setContents("<ColumnInfo><Column id=\"TARGET\" type=\"STRING\" size=\"256\"/><Column id=\"SP\" type=\"STRING\" size=\"256\"/></ColumnInfo><Rows><Row><Col id=\"TARGET\">select</Col><Col id=\"SP\">DAUPR_SALARYPAYLIST_SELECT</Col></Row><Row><Col id=\"TARGET\">report1</Col><Col id=\"SP\">DAUPR_SALARYPAYLIST_REPORT</Col></Row><Row><Col id=\"TARGET\">report2</Col><Col id=\"SP\">DAUPR_SALARYPAYLIST_INCOME_SUBST_PRINT</Col></Row></Rows>");
            this.addChild(obj.name, obj);


            obj = new Dataset("dsList", this);
            obj._setContents("");
            this.addChild(obj.name, obj);


            obj = new Dataset("dsSearch", this);
            obj._setContents("<ColumnInfo><Column id=\"YY_BASE\" type=\"STRING\" size=\"256\"/></ColumnInfo><Rows><Row/></Rows>");
            this.addChild(obj.name, obj);


            obj = new Dataset("dsHead", this);
            obj._setContents("");
            this.addChild(obj.name, obj);


            obj = new Dataset("dsDetail", this);
            obj._setContents("");
            this.addChild(obj.name, obj);
            
            // UI Components Initialize
            obj = new Div("divTop","0","0",null,"68","0","0",null,null,null,null,this);
            obj.set_taborder("0");
            obj.set_cssclass("div_DATA_Bg");
            this.addChild(obj.name, obj);

            obj = new Static("staTITLE","0","0","100%","30",null,null,null,null,null,null,this.divTop.form);
            obj.set_taborder("0");
            obj.set_text("급여지급현황");
            obj.set_cssclass("sta_TITLE_Bg");
            obj.set_textAlign("left");
            this.divTop.addChild(obj.name, obj);

            obj = new Static("stalYY_BASE","0","staTITLE:5","90","30",null,null,null,null,null,null,this.divTop.form);
            obj.set_taborder("3");
            obj.set_text("기준연도");
            obj.set_cssclass("sta_WF_tablelabelE");
            this.divTop.addChild(obj.name, obj);

            obj = new Static("stalYY_BASE_bg","stalYY_BASE:-1","stalYY_BASE:-30","262","30",null,null,null,null,null,null,this.divTop.form);
            obj.set_taborder("6");
            obj.set_cssclass("sta_WF_tablebg");
            this.divTop.addChild(obj.name, obj);

            obj = new Div("ctclYY_BASE","stalYY_BASE:5","stalYY_BASE:-25","60","20",null,null,null,null,null,null,this.divTop.form);
            obj.set_taborder("0");
            obj.set_url("cmm::cmmCalYY.xfdl");
            this.divTop.addChild(obj.name, obj);

            obj = new Div("divData","0","divTop:10",null,"150","0","0",null,null,null,null,this);
            obj.set_taborder("0");
            obj.set_cssclass("div_DATA_Bg");
            this.addChild(obj.name, obj);

            obj = new Grid("objGrid","0","0",null,null,"0","0",null,null,null,null,this.divData.form);
            obj.set_taborder("0");
            obj._setContents("");
            this.divData.addChild(obj.name, obj);

            obj = new Div("divBottom","0","divData:10",null,null,"0","0",null,null,null,null,this);
            obj.set_taborder("0");
            obj.set_cssclass("div_DATA_Bg");
            obj.set_text("");
            this.addChild(obj.name, obj);

            obj = new Static("staCD_CORP","0","0","90","30",null,null,null,null,null,null,this.divBottom.form);
            obj.set_taborder("4");
            obj.set_text("법인");
            obj.set_cssclass("sta_WF_tablelabelE");
            this.divBottom.addChild(obj.name, obj);

            obj = new Static("staCD_CORP_bg","staCD_CORP:-1","staCD_CORP:-30","262","30",null,null,null,null,null,null,this.divBottom.form);
            obj.set_taborder("5");
            obj.set_cssclass("sta_WF_tablebg");
            obj.set_text("");
            this.divBottom.addChild(obj.name, obj);

            obj = new Div("ccfCD_CORP","staCD_CORP:5","staCD_CORP:-25","250","20",null,null,null,null,null,null,this.divBottom.form);
            obj.getSetter("CDTextWidth").set("80");
            obj.set_taborder("9");
            obj.set_url("cmm::cmmCodeFind.xfdl");
            this.divBottom.addChild(obj.name, obj);

            obj = new Static("staID_SABUN","0","staCD_CORP:-1","90","30",null,null,null,null,null,null,this.divBottom.form);
            obj.set_taborder("7");
            obj.set_text("성명");
            obj.set_cssclass("sta_WF_tablelabelE");
            this.divBottom.addChild(obj.name, obj);

            obj = new Static("staID_SABUN_bg","staID_SABUN:-1","staID_SABUN:-30","262","30",null,null,null,null,null,null,this.divBottom.form);
            obj.set_taborder("8");
            obj.set_cssclass("sta_WF_tablebg");
            this.divBottom.addChild(obj.name, obj);

            obj = new Div("ccfID_SABUN","staID_SABUN:5","staCD_CORP:4","250","20",null,null,null,null,null,null,this.divBottom.form);
            obj.getSetter("CDTextWidth").set("80");
            obj.set_taborder("11");
            obj.set_url("cmm::cmmCodeFind.xfdl");
            this.divBottom.addChild(obj.name, obj);

            obj = new Div("divBtns","120","staID_SABUN_bg:10","130","27",null,null,null,null,null,null,this.divBottom.form);
            obj.set_taborder("2");
            this.divBottom.addChild(obj.name, obj);

            obj = new Button("btnSave","0","staID_SABUN:0","60","27",null,null,null,null,null,null,this.divBottom.form.divBtns.form);
            obj.set_taborder("1");
            obj.set_text("확인");
            this.divBottom.form.divBtns.addChild(obj.name, obj);

            obj = new Button("btnCancel","btnSave:10","staID_SABUN:0","60","27",null,null,null,null,null,null,this.divBottom.form.divBtns.form);
            obj.set_taborder("2");
            obj.set_text("취소");
            this.divBottom.form.divBtns.addChild(obj.name, obj);
            // Layout Functions
            //-- Default Layout : this
            obj = new Layout("default","",this._adjust_width,this._adjust_height,this,function(p){});
            this.addLayout(obj.name, obj);
            
            // BindItem Information
            obj = new BindItem("item0","divTop.form.ctclYY_BASE.form.TextBox","value","dsSearch","YY_BASE");
            this.addChild(obj.name, obj);
            obj.bind();
            
            // TriggerItem Information

        };
        
        this.loadPreloadList = function()
        {
            this._addPreloadList("fdl","cmm::cmmCalYY.xfdl");
            this._addPreloadList("fdl","cmm::cmmCodeFind.xfdl");
        };
        
        // User Script
        this.registerScript("DAU_SALARYPAYLIST_DLG.xfdl", function() {
        this.objApp = this.gfnGetApplication();

        this.form_onload = function(obj,e)
        {
        	// -- 필수 -------------------//
        	this.gfnFormOnLoad(this);
        	this.gfnFormInfo(this);
        	// ---------------------------//

        	this.fnSetVariable();
        	this.fnSetEvent();
        	this.fnSetParameter();

        	this.FormBtns.Select.click();
        };


        /************************************************************************
         * 변수 선언
         ************************************************************************/
        this.fnSetVariable = function() {
        	this.ccfCD_CORP = this.divBottom.form.ccfCD_CORP;
        	this.ccfID_SABUN = this.divBottom.form.ccfID_SABUN;
        	this.ctclYY_BASE = this.divTop.form.ctclYY_BASE;
        	this.dxGrid = this.divData.form.objGrid;
        };

        /************************************************************************
         * 이벤트 설정
         ************************************************************************/
        this.fnSetEvent = function() {
        	this.ccfCD_CORP.CodeFindName = "DAX_CFCORP";
        	this.ccfID_SABUN.CodeFindName = "DAX_CFBASEINFOCORP";



         	var dt = new Date();
        	this.ctclYY_BASE.form.TextBox.set_value(dt.getFullYear());

        	if (nexacro.toNumber(this.FormInfo.GR_SEARCH) == 4) {
        		this.ccfID_SABUN.form.CDTextBox.set_value(this.AuthClient.ID_USER);
        		this.ccfID_SABUN.form.DSTextBox.set_value(this.AuthClient.DS_HNAME);
        		this.ccfID_SABUN.form.set_readonly(true);
        	}

        	if (this.gfnIsNull(this.AuthClient.CD_CORP) || nexacro.toNumber(this.FormInfo.GR_SEARCH) > 9) {

        		this.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);
        		this.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP);
        		this.ccfID_SABUN.form.CDTextBox.set_value(this.AuthClient.ID_USER);
        		this.ccfID_SABUN.form.DSTextBox.set_value(this.AuthClient.DS_HNAME);
        	} else {
        		this.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP);
        		this.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);
        		this.ccfID_SABUN.form.CDTextBox.set_value(this.AuthClient.ID_USER);
        		this.ccfID_SABUN.form.DSTextBox.set_value(this.AuthClient.DS_HNAME);
        	}

        	if (nexacro.toNumber(this.FormInfo.GR_SEARCH) == 9) {
        		this.ccfID_SABUN.form.CDTextBox.set_value(this.AuthClient.ID_USER);
        		this.ccfID_SABUN.form.DSTextBox.set_value(this.AuthClient.DS_HNAME);
        		this.ccfCD_CORP.form.set_readonly(true);
        		this.ccfID_SABUN.form.set_readonly(true);
        	}


        	/*******************************************************************/
        	this.ccfID_SABUN.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";

        	this.ccfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";
        	this.ccfID_SABUN.AfterCDTextChanged = "fnAfterCDTextChanged";

        	this.gfnGridInit(this.dxGrid, this.dsList, "DA", "DAU_SALARYPAYLIST_DLG");
        }

        /************************************************************************
         * 파라미터 설정
         ************************************************************************/
        this.fnSetParameter = function() {

        	this.dsSelect = new Dataset();
        	this.dsSelect.addColumn("YY_BASE", "string");
        	this.dsSelect.addColumn("CD_CORP", "string");
        	this.dsSelect.addColumn("ID_SABUN", "string");

        	this.dsReport = new Dataset();
        	this.dsReport.addColumn("ID_SABUN", 	"string");
        	this.dsReport.addColumn("YM_SALARY", 	"string");
        	this.dsReport.addColumn("TY_SALARY", 	"string");
        	this.dsReport.addColumn("SN_SALARY", 	"string");
        	this.dsReport.addColumn("CD_CORP", 		"string");
        	this.dsReport.addColumn("TY_GUBUN", 	"string");

        }

        /************************************************************************
         * 컨트롤 이벤트
         ************************************************************************/
         /*
          *	조회 버튼
          */
        this.fnSelect = function() {
        	if (!this.fnSelectValidate()) return false;

        	this.gfnGridBeforeSelect(this.dxGrid);

        	this.dsSelect.clearData();
        	this.dsSelect.addRow();

        	this.dsSelect.setColumn(0, "YY_BASE", this.dsSearch.getColumn(0, "YY_BASE"));
        	this.dsSelect.setColumn(0, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
        	this.dsSelect.setColumn(0, "ID_SABUN", this.ccfID_SABUN.form.CDTextBox.value);

        //trace("dsSelect >>>"+this.dsSelect.saveXML());

        	var strSvcId    = "select";
        	var strSvcType  = "grid";
        	var inProc		= "_dsProc";
        	var inData      = "select=dsSelect";
        	var outData     = "dsList=select0";
        	var strArg      = "";
        	var callBackFnc = "fnCallback";

        	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
        						strSvcType , 	// trabsaction을 요청할 구분
        						inProc,			// Procedure 정보 Dataset 이름
        						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
        						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
        						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
        						callBackFnc); // 통신방법 정의 [생략가능]
        }

        /*
         *	입력 버튼
         */
        this.fnAdd = function() {
        }

        /*
         *	삭제 버튼
         */
        this.fnDel = function() {
        }

        /*
         *	저장 버튼
         */
        this.fnSave = function() {
        }

        /*
         *	엑셀 버튼
         */
        this.fnExcel = function() {
        	this.gfnExcelExport(this.dxGrid);
        }

        /*
         *	출력 버튼
         */
        this.fnPrint = function() {
        }

        /************************************************************************
         * Validate
         ************************************************************************/
        /*
         *	조회 Validate
         */
        this.fnSelectValidate = function() {

        	if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
        		this.gfnAlert("법인이 입력되지 않았습니다.");
        		this.ccfCD_CORP.form.CDTextBox.setFocus();
        		return false;
        	}

        	if (this.gfnIsNull(this.ctclYY_BASE.form.TextBox.value)) {
        		this.gfnAlert("년도가 입력되지 않았습니다.");
        		this.ctclYY_BASE.setFocus();
        		return false;
        	}

        	if (this.gfnIsNull(this.ccfID_SABUN.form.CDTextBox.value)) {
        		this.gfnAlert("성명이 입력되지 않았습니다.");
        		this.ccfID_SABUN.setFocus();
        		return false;
        	}

        	return true;
        };

        /************************************************************************
         * 콜백 이벤트
         ************************************************************************/
        /*
         *	콜백 처리
         */
        this.fnCallback = function(svcID, errorCode, errorMsg)
        {
        	if (svcID == "select") {
        		if (this.dsList.rowcount == 0) {
        			this.gfnAlert("자료가 존재하지 않습니다.");
        		} else {
        			this.gfnGridAfterSelect(this.dxGrid);
        		}
        	}
        }

        /************************************************************************
         * 코드파인드 이벤트
         ************************************************************************/
         this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
        	if (id == "ccfID_SABUN") {
        		if (!this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
        			dsUserParam.setColumn(nrow, "GR_SEARCH", "");
        			dsUserParam.setColumn(nrow, "CD_DEPT", "");
        			dsUserParam.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
        		}else{
        			this.gfnAlert("먼저 법인을 선택해주세요.");
        			return false;
        		}
        	}

        	return true;

        };

        this.fnAfterCDTextChanged = function(id, codeFindData) {
        	this.fnSearchInit();
        }

        /************************************************************************
         * 그리드 이벤트
         ************************************************************************/

        /************************************************************************
         * 기타 이벤트
         ************************************************************************/

        /*
         *	조회 조건 변경시 초기화
         */
        this.fnSearchInit = function(obj,e) {
        	//trace("날짜:"+this.ctclYY_BASE.form.TextBox.value);
        	this.fnSelect();
        };

        // 저장 버튼 클릭
        this.divData_btnSave_onclick = function(obj,e)
        {
        	if (!this.fnSelectValidate()) return false;

        	if (this.dsList.rowcount > 0) {
        		this.fnReport();
        	} else {
        		this.gfnAlert("급여자료가 존재하지 않아 레포트를 출력할 수 없습니다.");
        		return false;
        	}
        }

        this.fnReport = function() {

        	this.dsReport.clearData();

        	var nrow = this.dsReport.addRow();

        	this.dsReport.setColumn(0, "ID_SABUN", this.ccfID_SABUN.form.CDTextBox.value);
        	this.dsReport.setColumn(0, "YM_SALARY", this.dsList.getColumn(this.dsList.rowposition, "YM_SALARY").replace("-",""));
        	this.dsReport.setColumn(0, "TY_SALARY", this.dsList.getColumn(this.dsList.rowposition, "TY_SALARY"));
        	this.dsReport.setColumn(0, "SN_SALARY", this.dsList.getColumn(this.dsList.rowposition, "SN_SALARY"));
        	this.dsReport.setColumn(0, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
        	this.dsReport.setColumn(0, "TY_GUBUN", 	"D"); //D:화면 / E:E-MAIL


        // 	var strSvcId    = "select";
        // 	var strSvcType  = "grid";
        // 	var inProc		= "_dsProc";
        // 	var inData      = "report1=dsReport report2=dsReport";
        // 	var outData     = "dsHead=report10 dsDetail=report20";
        // 	var strArg      = "";
        // 	var callBackFnc = "fnCallback";
        //
        // 	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
        // 						strSvcType , 	// trabsaction을 요청할 구분
        // 						inProc,			// Procedure 정보 Dataset 이름
        // 						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
        // 						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
        // 						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
        // 						callBackFnc); // 통신방법 정의 [생략가능]


        	var inProc		= "_dsProc";
        	//var inParam 	= "params=dsReportParam";	// 조회SP이외 사용할 정보
        	var inParam 	= "";						// 필요없는 경우 생략
        	var inData      = "report1=dsReport report2=dsReport";
        	//var reportpath  = "/da/dau/DAU_SALARYPAYLIST_DLG.ozr";
        	var reportpath  = "/da/dau/DAU_SALARYPAYLIST_DLG_DSC.ozr";

        	gfnOpenReport(this, reportpath, inProc, inParam, inData);

        }

        // 취소 버튼 클릭
        this.divData_btnCancel_onclick = function(obj,e)
        {
        	// this.close()가 작동하지 않았고,
        	// 부모의 callback 함수로 데이터를 넘겨주기 위해 작성되었습니다.
        	this.getParentContext().close(false);
        };

        this.dsSearch_oncolumnchanged = function(obj,e)
        {
        	if(e.columnid == "YY_BASE"){
        		if(e.oldvalue != e.newvalue){
        			// 기준년도 변경시 자동조회가 안되서 추가함
        			if( !this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.text) && !this.gfnIsNull(this.ccfID_SABUN.form.CDTextBox.value) ){
        				this.dsSearch.setColumn(0, "YY_BASE",e.newvalue)
        				this.fnSelect();
        			}
        		}
        	}
        };

        });
        
        // Regist UI Components Event
        this.on_initEvent = function()
        {
            this.addEventHandler("onload",this.form_onload,this);
            this.divBottom.form.divBtns.form.btnSave.addEventHandler("onclick",this.divData_btnSave_onclick,this);
            this.divBottom.form.divBtns.form.btnCancel.addEventHandler("onclick",this.divData_btnCancel_onclick,this);
            this.dsSearch.addEventHandler("oncolumnchanged",this.dsSearch_oncolumnchanged,this);
        };
        this.loadIncludeScript("DAU_SALARYPAYLIST_DLG.xfdl");
        this.loadPreloadList();
        
        // Remove Reference
        obj = null;
    };
}
)();
