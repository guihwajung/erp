<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="1130" height="780" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="div00" taborder="4" text="div00" left="34" top="18" width="537" height="304">
          <Layouts>
            <Layout>
              <Static id="sta03_02" taborder="0" text="save_SP" left="10" top="177" width="80" height="14"/>
              <Div id="divBtns" taborder="1" left="115" top="270" width="207" height="21">
                <Layouts>
                  <Layout>
                    <Button id="btnConfirm" taborder="3" text="조회" left="0" top="0" width="60" height="21" onclick="div00_btnConfirm_onclick"/>
                    <Button id="btnCancel" taborder="4" text="취소" left="btnConfirm:10" top="0" width="60" height="21" onclick="div00_btnCancel_onclick"/>
                    <Button id="btnReset" taborder="2" text="초기화" left="140" top="0" width="60" height="21" onclick="div00_divBtns_btnReset_onclick"/>
                  </Layout>
                </Layouts>
              </Div>
              <Static id="sta03_01" taborder="2" text="update_SP" left="10" top="147" width="80" height="14"/>
              <Static id="sta03_00" taborder="3" text="delete_SP" left="10" top="117" width="80" height="14"/>
              <Static id="sta03" taborder="4" text="insert_SP" left="10" top="87" width="80" height="14"/>
              <Static id="sta02" taborder="5" text="select_SP" left="10" top="58" width="80" height="14"/>
              <Static id="sta03_02_00" taborder="6" text="print_SP" left="10" top="207" width="80" height="14" onclick="sta03_02_00_onclick"/>
              <Edit id="txtSelectSP" taborder="7" left="87" width="205" height="20" top="56" text="dsSearch" onchanged="txtItem_onchanged"/>
              <Edit id="txtInsertSP" taborder="8" left="87" width="205" height="20" top="86" onchanged="txtItem_onchanged"/>
              <Edit id="txtDeleteSP" taborder="9" left="87" width="205" height="20" top="116" onchanged="txtItem_onchanged"/>
              <Edit id="txtUpdateSP" taborder="10" left="87" width="205" height="20" top="146" onchanged="txtItem_onchanged"/>
              <Edit id="txtSaveSP" taborder="11" left="87" width="205" height="20" top="176" onchanged="txtItem_onchanged"/>
              <Edit id="txtPringSP" taborder="12" left="87" width="205" height="20" top="205" onchanged="txtItem_onchanged"/>
              <Edit id="txtdsSelect" taborder="13" left="296" width="85" height="20" top="55" value="dsSelect" text="dsSelect"/>
              <Edit id="txtdsInsert" taborder="14" left="296" width="85" height="20" top="85" value="dsInsert" text="dsInsert"/>
              <Edit id="txtdsDelete" taborder="15" left="296" width="85" height="20" top="115" value="dsDelete" text="dsDelete"/>
              <Edit id="txtdsUpdate" taborder="16" left="296" width="85" height="20" top="145" value="dsUpdate" text="dsUpdate"/>
              <Edit id="txtdsSave" taborder="17" left="296" width="85" height="20" top="175" value="dsSave" text="dsSave"/>
              <Edit id="txtdsPrint" taborder="18" left="296" width="85" height="20" top="205" value="dsPrint" text="dsPrint"/>
              <CheckBox id="chkSingle" taborder="19" text="싱글폼" left="391" top="51" width="137" height="27"/>
            </Layout>
          </Layouts>
        </Div>
        <Static id="sta01" taborder="3" text="GENERATE NEXACRO 개발도구" left="20" top="30" width="50.00%" height="22" cssclass="sta_TITLE_Bg"/>
        <TextArea id="txtResult1" taborder="0" left="3" top="330" width="50%" bottom="0" readonly="false" enable="true" wordWrap="english"/>
        <TextArea id="txtResult" taborder="2" left="txtResult1:3" top="11" height="350" right="5" readonly="false" enable="true" wordWrap="english"/>
        <TextArea id="txtResult2" taborder="1" left="txtResult1:3" top="txtResult:1" bottom="0" right="5" readonly="false" enable="true" wordWrap="english"/>
      </Layout>
    </Layouts>
    <Bind>
      <BindItem id="item1" compid="txtResult1" propid="value" datasetid="dsList" columnid="DS_TEXT"/>
      <BindItem id="item0" compid="txtResult2" propid="value" datasetid="dsList" columnid="DS_TEXT"/>
      <BindItem id="item2" compid="txtResult" propid="value" datasetid="dsList" columnid="DS_TEXT"/>
    </Bind>
    <Script type="xscript5.1"><![CDATA[
this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{

	this.fnSetParameter();
	
	this.addColumnResult = "";
	this.setColumnResult = "";
	this.ColumnInfoResult = "";
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsLoadSP = new Dataset();
	this.dsLoadSP.addColumn("SPNAME", "string");	
	
	this.txtSelectSP = this.div00.form.txtSelectSP; 
	this.txtInsertSP = this.div00.form.txtInsertSP; 
	this.txtDeleteSP = this.div00.form.txtDeleteSP; 
	this.txtUpdateSP = this.div00.form.txtUpdateSP; 
	this.txtSaveSP = this.div00.form.txtSaveSP; 
	this.txtPringSP = this.div00.form.txtPringSP; 
	this.txtdsSelect = this.div00.form.txtdsSelect; 
	this.txtdsInsert = this.div00.form.txtdsInsert; 
	this.txtdsDelete = this.div00.form.txtdsDelete; 
	this.txtdsUpdate = this.div00.form.txtdsUpdate; 
	this.txtdsSave = this.div00.form.txtdsSave; 
	this.txtdsPrint = this.div00.form.txtdsPrint; 
	this.chkSingle = this.div00.form.chkSingle; 
	
}

this.div00_btnConfirm_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	
	if(this.gfnIsNull(this.txtSelectSP.value) && this.gfnIsNull(this.txtInsertSP.value) && this.gfnIsNull(this.txtDeleteSP.value) 
		&& this.gfnIsNull(this.txtUpdateSP.value) && this.gfnIsNull(this.txtSaveSP.value) && this.gfnIsNull(this.txtPringSP.value) ) {
		this.gfnAlert("SP명을 입력하세요.");		
		return false;
	}
	this.addColumnResult = "";
	this.setColumnResult = "";
	this.ColumnInfoResult = "";	
	
	if (!this.gfnIsNull(this.txtSelectSP.value))
	{
		this.fnSelectSP(this.txtSelectSP.value , this.txtdsSelect.value);
	}
	if (!this.gfnIsNull(this.txtInsertSP.value))
	{
		this.fnSelectSP(this.txtInsertSP.value , this.txtdsInsert.value);
	}
	if (!this.gfnIsNull(this.txtDeleteSP.value))
	{
		this.fnSelectSP(this.txtDeleteSP.value , this.txtdsDelete.value);
	}
	if (!this.gfnIsNull(this.txtUpdateSP.value))
	{
		this.fnSelectSP(this.txtUpdateSP.value , this.txtdsUpdate.value);
	}
	if (!this.gfnIsNull(this.txtSaveSP.value))
	{
		this.fnSelectSP(this.txtSaveSP.value , this.txtdsSave.value);
	}
	if (!this.gfnIsNull(this.txtPringSP.value))
	{
		this.fnSelectSP(this.txtPringSP.value , this.txtdsPrint.value);
	}
	
};


this.fnSelectSP = function(vSpName , vDsName) 
{
	
	this.dsLoadSP.clearData();
	this.dsLoadSP.addRow();
	
	this.dsLoadSP.setColumn(0, "SPNAME", vSpName);
	this._dsProc.setColumn(1, "SP", vSpName);
	
	this.DatasetName = vDsName;
	
	var strSvcId    = "select_" + vDsName ;
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "loadsp=dsLoadSP";
	var outData     = "dsSPInfo=loadsp0 dsSPSpec=loadsp1";
	var strArg      = "";
	var callBackFnc = "fnCallbackLoadSP";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};

this.fnCallbackLoadSP = function(strId, val) {
	if(strId.substr(0,6) == "select") {
		for(var i = 0; i < this.dsSPInfo.rowcount; i++) {
			if(this.dsSPInfo.getColumn(i, "Type") == "stored procedure") {
				
				if(this.dsSPSpec.rowcount > 0) {
					this.addColumnResult = this.addColumnResult + "--------------------------------------------------\n dataset addColumn :  "+ strId.substr(7) + "\n\n" ;  
					this.setColumnResult = this.setColumnResult + "--------------------------------------------------\n dataset setColumn :  "+ strId.substr(7) + "\n\n" ; 
					
					// trace("dsSPSpec =>" + this.dsSPSpec.saveXML());
					
					for(var j = 0; j < this.dsSPSpec.rowcount; j++) {
						var pname = this.dsSPSpec.getColumn(j, "Parameter_name");
						var ptype = this.dsSPSpec.getColumn(j, "Type");
						
						trace(" ptype=>" + ptype);
						var vType = (ptype=="varchar" || ptype=="char") ? "string" : "bigint" ;
						if( pname == "NOT_PARAM" ) break;
							
						this.addColumnResult += '	this.' + strId.substr(7) + '.addColumn("'+ pname.replace("@", "") + '", "'+ vType +'"); \n';
						
						if ( pname.replace("@", "") != "ID_USER" )
						{ this.setColumnResult += '		this.' + strId.substr(7) + '.setColumn('+ (strId.substr(7) =="dsSelect" ? "0" : "nrow") +', "'+ pname.replace("@", "") + '", this.'+ (strId.substr(7) =="dsSelect" ? "dsSearch" : "dsList") +'.getColumn('+ (strId.substr(7) =="dsSelect" ? "0" : "i") +', "'+ pname.replace("@", "") + '")); \n';
						} else 
						{ this.setColumnResult += '		this.' + strId.substr(7) + '.setColumn('+ (strId.substr(7) =="dsSelect" ? "0" : "nrow") +', "'+ pname.replace("@", "") + '", this.AuthClient.ID_USER); \n'; }
					}
					
					this.txtResult.set_value(this.addColumnResult); 
					this.txtResult1.set_value(this.setColumnResult); 
					this.txtResult2.set_value(this.ColumnInfoResult); 
				
					if (this.chkSingle.value && strId.substr(7) == this.txtdsSelect.value) 
					{
						this.fnRealsp("realsp");
					}
					if (strId.substr(7) == this.txtdsPrint.value )
					{
						this.fnRealsp("printsp");
					}
				}
			}
		}
	}
	else if(strId == "printsp") {
	
		this.ColumnInfoResult = this.ColumnInfoResult + "--------------------------------------------------\n 출력용 json Column  \n\n" ;  
		this.ColumnInfoResult = this.ColumnInfoResult + '{"Data1":'
		//trace(" dsListSP =>" + this.dsListSP.saveXML());
		
		var json = {};
		
		for(var i = 0; i < this.dsListSP.colinfos.length; i++) {
			if (this.dsListSP.rowcount == 0)
			{
				if (this.dsListSP.colinfos[i].type == "datetime" || this.dsListSP.colinfos[i].type == "string")
				{
					var value = "";
				} else {
					var value = 0;
				}
			} else {
				var value = this.dsListSP.getColumn(0, this.dsListSP.colinfos[i].name) == undefined ? "" : this.dsListSP.getColumn(1519, this.dsListSP.colinfos[i].name); 
			}
			json[`${this.dsListSP.colinfos[i].name}`] = value;
			//trace(" JSON=>" + i + ":" + this.dsListSP.colinfos[i].name + ":" + value);
	
			//trace(" JSON=>" +  JSON.stringify(json).replace("[", "[{").replace("]", "}]}").replaceAll('{"hi":', "").replaceAll(',"lo":0}', "") );
		}
		
		this.ColumnInfoResult = this.ColumnInfoResult + JSON.stringify(json).replace("[", "[{").replace("]", "}]}").replaceAll('{"hi":', "").replaceAll(',"lo":0}', "");
		
		this.txtResult2.set_value(this.ColumnInfoResult); 
	}
	
	else if(strId == "realsp") {
	
		this.ColumnInfoResult = this.ColumnInfoResult + "--------------------------------------------------\n 싱글폼 ColumnInfo  \n\n" ; 
		
		trace(" dsListSP =>" + this.dsListSP.saveXML());
		
		
		for(var i = 0; i < this.dsListSP.colinfos.length; i++) {
			var cName = this.dsListSP.colinfos[i].name; 
			var cType = this.dsListSP.colinfos[i].type; 
			var pType = (cType == "datetime" || cType == "string") ? "STRING" : cType ;
			
			this.ColumnInfoResult = this.ColumnInfoResult +'		<Column id="' + this.dsListSP.colinfos[i].name +'" type="'+ pType + '" size="256"/> \n'
			//<Column id="CD_DEPT_SELFACNT" type="STRING" size="256"/>
		}
		this.txtResult2.set_value(this.ColumnInfoResult); 
	}
	
// 	{
// "Data1": [
//     {
//       "DS_JOBTYPE": "개발",
//       "DS_ADDRESS": null,
}

this.fnRealsp = function (pSvcID)
{
	this.dsRealSP = new Dataset();

	for(var j = 0; j < this.dsSPSpec.rowcount; j++) {
		var pname = this.dsSPSpec.getColumn(j, "Parameter_name");
		if(pname == "NOT_PARAM") break;
		this.dsRealSP.addColumn(pname.replace("@", ""), "string");
	}
	
	this.dsRealSP.addRow();
	for(var j = 0; j < this.dsSPSpec.rowcount; j++) {
		var pname = this.dsSPSpec.getColumn(j, "Parameter_name");
		if(pname == "NOT_PARAM") break;
		this.dsRealSP.setColumn(0, pname.replace("@", ""), "");
	}
	
	if(this.dsRealSP.rowcount == 0) return;

	var strSvcId    = pSvcID ;
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "realsp=dsRealSP";
	var outData     = "dsListSP=realsp0";
	var strArg      = "meta=Y";
	var callBackFnc = "fnCallbackLoadSP";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]

};


this.div00_btnCancel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.getParentContext().close(false);
};


this.div00_divBtns_btnReset_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.fnReset();	
};

this.fnReset = function(){
	this.txtResult.set_value();
	this.txtResult1.set_value();
	this.txtResult2.set_value();
	
	this.txtSelectSP.set_value();
	this.txtInsertSP.set_value();
	this.txtDeleteSP.set_value();
	this.txtUpdateSP.set_value();
	this.txtSaveSP.set_value();
	this.txtPringSP.set_value();
}

this.txtItem_onchanged = function(obj:nexacro.Edit,e:nexacro.ChangeEventInfo)
{
	this.txtResult.set_value();
	this.txtResult1.set_value();
	this.txtResult2.set_value();
};
]]></Script>
    <Objects>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">loadsp</Col>
            <Col id="SP">DZZPR_SPHELP_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">realsp</Col>
            <Col id="SP"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSPInfo"/>
      <Dataset id="dsSPSpec"/>
      <Dataset id="dsListSP"/>
      <Dataset id="dsListInfo"/>
    </Objects>
  </Form>
</FDL>
