<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="950" height="500" titletext="경조대상자추가" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0" top="10" height="78.0" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static id="staCD_CORP" taborder="0" text="법인" left="0.0" top="10.0" width="92.0" height="24.0" textDecoration="none" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_CORP" CDTextWidth="30" taborder="1" left="staCD_CORP:0.0" top="10.0" width="230" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staYY_WORK" taborder="6" text="경조일자" left="0.0" top="staCD_CORP:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Calendar id="ctclDT_EVENT_FROM" taborder="7" left="staYY_WORK:0.0" top="staCD_CORP:10.0" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" width="105"/>
              <Static id="staDT_REQ00" taborder="8" text="~" left="ctclDT_EVENT_FROM:0.0" top="staCD_CORP:10.0" width="30.0" height="24.0" cssclass="sta_WF_AC"/>
              <Calendar id="ctclDT_EVENT_TO" taborder="9" left="staDT_REQ00:0.0" top="staCD_CORP:10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="10" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="1" top="0" bottom="70" right="4"/>
            </Layout>
          </Layouts>
        </Div>
        <Button id="btn_apply" taborder="2" text="적용" left="410" top="448" width="50" height="24" onclick="btn_apply_onclick"/>
        <Button id="btn_cancel" taborder="3" text="취소" left="470" top="448" width="50" height="24" onclick="btn_cancel_onclick"/>
        <Button id="btn_select" taborder="4" text="조회" left="335" top="37" width="50" height="24" onclick="btn_select_onclick"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DAAPR_FAMILYEVENT_POP_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="CD_DEPT" type="STRING" size="256"/>
          <Column id="ID_SABUN" type="STRING" size="256"/>
          <Column id="DT_EVENT_FROM" type="STRING" size="256"/>
          <Column id="DT_EVENT_TO" type="STRING" size="256"/>
          <Column id="CD_EVENT" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CORP"/>
            <Col id="CD_DEPT"/>
            <Col id="ID_SABUN"/>
            <Col id="DT_EVENT_FROM"/>
            <Col id="DT_EVENT_TO"/>
            <Col id="CD_EVENT"/>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	//this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();	
	
	//법인 셋팅
	//this.divSearch.form.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);
	//this.divSearch.form.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP);

	this.fnSelect();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
// 	this.FormBtns.Add.set_enable(false);
// 	this.FormBtns.Del.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	//this.btn1 = this.gfnFormButtonAdd("Detail", "fnDetail1");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;
	this.ccfCD_DEPT = this.divSearch.form.ccfCD_DEPT;
	this.ccfID_SABUN = this.divSearch.form.ccfID_SABUN;
	this.ctclDT_EVENT_FROM = this.divSearch.form.ctclDT_EVENT_FROM;
	this.ctclDT_EVENT_TO = this.divSearch.form.ctclDT_EVENT_TO;
	this.ccfCD_EVENT = this.divSearch.form.ccfCD_EVENT;
	
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.ccfCD_CORP.CodeFindName = "DAX_CFCORP";
	this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_CORP.AfterCDTextChanged = "codefind_AfterCDTextChanged";	
		
	this.gfnGridInit(this.dxGrid, this.dsList, "DA", "DAA_FAMILYEVENTLIST_POP");
	
	/*this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";*/

}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("DT_EVENT_FROM", "string");
	this.dsSelect.addColumn("DT_EVENT_TO", "string");


}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	//if(!this.fnValidate()) return;
	
	var cd_corp = this.dsSearch.getColumn(0, "CD_CORP"); //this.divSearch.form.ctclYY_WORK.value;
		
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
	this.dsSelect.setColumn(0, "DT_EVENT_FROM", this.ctclDT_EVENT_FROM.value);
	this.dsSelect.setColumn(0, "DT_EVENT_TO", this.ctclDT_EVENT_TO.value);
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnValidate = function() {
	if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
		this.fnVaidateCallback = function() {
			this.ccfCD_CORP.form.CDTextBox.setFocus();
		}
		this.gfnAlert("법인코드를 입력하세요.");
		return false;
	}

	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
	
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.codefind_AfterCDTextChanged = function(id) {
	this.fnSearchInit();
}

this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow){
	if(id = "DAX_CFBASEINFOCORP"){
		dsUserParam.setColumn(nrow, "GR_SEARCH", "");
		dsUserParam.setColumn(nrow, "CD_DEPT", "");
		dsUserParam.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
	}
		
	return true;
};
 
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		// 폼상태 초기화
		this.gfnSetFormStatus(this);	
		this.gfnGridClear(this.dxGrid);
	}
};

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};

this.btn_cancel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.getParentContext().close(false);
};

this.btn_select_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.fnSelect();
};

this.btn_apply_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var ds = this.dxGrid.getBindDataset();

	var arr = [];
	
	if(ds.rowcount > 0) {
		for(var r = 0; r < ds.rowcount; r++) {
			if(ds.getColumn(r, "CHK") == "Y") {
				var json = {};
				
 				for(var c = 0; c < ds.colcount; c++) {
 					if(ds.getColumn(r, c) instanceof nexacro.Decimal) {
 						json[ds.getColID(c)] = ds.getColumn(r, c).hi;
 					} else {
 						json[ds.getColID(c)] = ds.getColumn(r, c);
 					}
 				}
				
 				arr.push(json);
			}
		}
	}
	
	if(arr.length < 1) {
		this.gfnAlert("체크된 항목이 없습니다.");
		return;
	}
	
	var jsonArr = {};
	
	jsonArr.ARR = arr;
			
	this.getParentContext().close(JSON.stringify(jsonArr));

	
};
]]></Script>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_DEPT.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_DEPT"/>
      <BindItem id="item2" compid="divSearch.form.ccfID_SABUN.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="ID_SABUN"/>
      <BindItem id="item3" compid="divSearch.form.DT_EVENT_FROM" propid="value" datasetid="dsSearch" columnid="DT_EVENT_FROM"/>
      <BindItem id="item4" compid="divSearch.form.DT_EVENT_TO" propid="value" datasetid="dsSearch" columnid="DT_EVENT_TO"/>
      <BindItem id="item5" compid="divSearch.form.CD_EVENT.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_EVENT"/>
    </Bind>
  </Form>
</FDL>
