<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="1280" height="720" titletext="New Form" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0" top="0" height="46" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static id="staID_RTNG" taborder="0" text="평가회차" left="322" top="10.0" width="92" height="24.0" rtl="false" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfID_RTNG" CDTextWidth="100" taborder="1" left="414" top="10.0" width="350" height="24.0" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DAX_CFRTNG_STD"/>
              <Static id="staCD_CORP" taborder="2" text="법인" left="0" top="10.0" width="66" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_CORP" CDTextWidth="50" taborder="3" left="66" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DAX_CFCORP_CODEFIND" enable="true"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:-3" bottom="0" right="0" cssclass="div_DATA_Bg" ondragmove="divData_ondragmove">
          <Layouts>
            <Layout>
              <Div id="divSplitter" taborder="1" left="50%" top="0" width="23" height="100%" background="url('theme://images/slt_WF_SplitterV.png') no-repeat center center" cursor="e-resize" ondrag="divData_divSplitter_ondrag"/>
              <Div id="divDataLeft" taborder="0" left="0" top="0" bottom="0" right="divSplitter:6">
                <Layouts>
                  <Layout>
                    <Static id="sta01" taborder="0" text="보직자" left="0" top="0" width="100%" height="35" cssclass="sta_TITLE_Bg"/>
                    <Grid id="objGrid" taborder="0" left="0" top="sta01:0" bottom="0" right="0" autofittype="col"/>
                  </Layout>
                </Layouts>
              </Div>
              <Div id="divDataRight" taborder="0" left="divSplitter:6" top="0" bottom="0" right="0">
                <Layouts>
                  <Layout>
                    <Static id="sta02" taborder="0" text="조회대상자" left="0" top="0" width="100%" height="35" cssclass="sta_TITLE_Bg"/>
                    <Grid id="objGridSub" sub="true" taborder="0" left="0" top="sta02:0" bottom="0" right="0" autofittype="col"/>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	//this.FormBtns.Select.click();
	
	// 법인
	this.dsSearch.setColumn(0, "CD_CORP",  this.AuthClient.CD_CORP);
	this.dsSearch.setColumn(0, "DS_CORP",  this.AuthClient.DS_CORP);
	this.FormBtns.Del.set_enable(false);
};

/************************************************************************
 * 버튼 설정 
 ************************************************************************/
this.fnSetButton = function() {
	// 서브 버튼 사용
	this.gfnUseSubBtn(true, this.divData, this.divData.form.divSplitter); // divSplitter sync
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnAddSub    = this.gfnFormButtonAdd("btnAddSub"   , "fnSetAddSub" , "조회자등록");		// 조회자 등록 
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.dxGrid = this.divData.form.divDataLeft.form.objGrid;
	this.dxGridSub = this.divData.form.divDataRight.form.objGridSub;
	
	// 검색영역
	this.ccfCD_CORP   = this.divSearch.form.ccfCD_CORP;
	this.ccfID_RTNG   = this.divSearch.form.ccfID_RTNG;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {	
	this.gfnGridInit(this.dxGrid, this.dsList, "DA", "DAJ_RTNG_GOAL_SEARCH");
	this.dxGrid.set_selecttype("cell");	
	this.dxGrid.addEventHandler("onselectchanged", this.fnGrid_RowCellChanged, this);
	this.dsList.addEventHandler("canrowposchange", this.dsList_canrowposchange, this);
	this.dxGrid.BeforeUserDataSetParam = "fnGridSub_BeforeUserDataSetParam";
	this.dxGrid.AfterCDTextChanged = "fnGrid_AfterCDTextChanged";
	
	this.gfnGridInit(this.dxGridSub, this.dsListSub, "DA", "DAJ_RTNG_GOAL_SEARCH_B");
	this.dxGridSub.BeforeUserDataSetParam = "fnGridSub_BeforeUserDataSetParam";
	//this.dxGridSub.AfterEdit = "fnGridSub_AfterEdit";
    this.dsListSub.addEventHandler("onvaluechanged", this.dsList_onvaluechanged, this);	
	
		// 검색영역
	this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";	// 법인
	this.ccfCD_CORP.AfterCDTextChanged     = "fnAfterCDTextChanged";
	this.ccfID_RTNG.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";	// 평가기준
	this.ccfID_RTNG.AfterCDTextChanged     = "fnAfterCDTextChanged";
	
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("ID_RTNG", "string");
	this.dsSelect.addColumn("ID_ITVWPRSN", "string");
	this.dsSelect.addColumn("TY_PTCP", "string");

	this.dsSave = new Dataset();
	this.dsSave.addColumn("TY_WRK", "string");
	this.dsSave.addColumn("CD_CORP", "string");
	this.dsSave.addColumn("ID_RTNG", "string");
	this.dsSave.addColumn("ID_ITVWPRSN", "string");
	this.dsSave.addColumn("SEQ_BGVDPRSN", "int");
	this.dsSave.addColumn("ID_BGVDPRSN", "string");
	this.dsSave.addColumn("ID_USER", "string");

}

/************************************************************************
 * 버튼 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	this.gfnSetFormSubStatus(this);
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));
	this.dsSelect.setColumn(0, "ID_RTNG", this.dsSearch.getColumn(0, "ID_RTNG"));
	this.dsSelect.setColumn(0, "ID_ITVWPRSN", "");
	this.dsSelect.setColumn(0, "TY_PTCP", "R"); //면담자 


	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	var nrow = this.gfnGridAdd(this.dxGrid);
	
	this.dsList.set_enableevent(false);
	this.dsList.setColumn(nrow , "ID_ITVWPRSN" , this.dsList.getColumn(this.dsList.rowposition,"ID_ITVWPRSN"));
	this.dsList.setColumn(nrow , "ID_ITVWPRSN" , this.dsList.getColumn(this.dsList.rowposition,"ID_ITVWPRSN"));
	this.dsList.set_enableevent(true);
	
	this.dsListSub.clearData();
	this.fnAddSub();
	this.FormBtns.Del.set_enable(true);
}


this.fnAddSub = function() {
	
	var nrow = this.gfnGridAdd(this.dxGridSub);
	
	this.dsListSub.set_enableevent(false);
	this.dsListSub.setColumn(nrow , "ID_ITVWPRSN" , this.dsList.getColumn(this.dsList.rowposition,"ID_ITVWPRSN"));
	this.dsListSub.set_enableevent(true);
	//trace("flag" + this.dsList.getColumn(this.dsList.rowposition, this.ucFlag));
	if (this.dsList.getColumn(this.dsList.rowposition, this.ucFlag) == "I") {this.FormBtns.Del.set_enable(true);}
	else {this.FormBtns.Del.set_enable(false);}
	
	
}
/*
 *	삭제 버튼
 */ 
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
	
	this.gfnGridDel(this.dxGridSub);
	this.dsListSub.clearData();	
	this.FormBtns.Del.set_enable(false);
}

this.fnDelSub = function() {
	this.gfnGridDel(this.dxGridSub);
	this.FormBtns.Del.set_enable(false);
}


/*
 *	저장 버튼
 */ 
 

this.fnSaveSub = function() {
	if (!this.gfnGridValidate(this.dxGridSub)) return;

	this.dxGridSub.updateToDataset();
	
	this.dsSave.clearData();
	
	for (var i = 0; i < this.dsListSub.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsListSub, i);
		if (flag =="I" || flag == "D" )
		{
			var nrow = this.dsSave.addRow();
			this.dsSave.setColumn(nrow, "TY_WRK", flag);
			this.dsSave.setColumn(nrow, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));
			this.dsSave.setColumn(nrow, "ID_RTNG", this.dsSearch.getColumn(0, "ID_RTNG"));
			this.dsSave.setColumn(nrow, "ID_ITVWPRSN", this.dsList.getColumn(this.dsList.rowposition, "ID_ITVWPRSN"));
			this.dsSave.setColumn(nrow, "SEQ_BGVDPRSN", this.dsListSub.getColumn(i, "SEQ_BGVDPRSN"));
			this.dsSave.setColumn(nrow, "ID_BGVDPRSN", this.dsListSub.getColumn(i, "ID_BGVDPRSN"));
			this.dsSave.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);

		}
	}
	
	if (this.dsSave.rowcount == 0) return;
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */ 
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
	this.gfnExcelExport(this.dxGridSub);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}
 
/************************************************************************
 * 서브 버튼 이벤트
 ************************************************************************/
this.fnSelectSub = function() {
	if (this.dxGrid.rowcount == 0 || this.dxGrid.currentrow < 0) return false;
	//trace(" fnSelectSub=>" + nRow);
	
	var nRowType = this.dsList.getRowType(this.dsList.rowposition);
	if(nRowType == Dataset.ROWTYPE_INSERT){
		this.dsListSub.clearData();
		return false;
	}	
	this.dsListSub.clearData();
	
	this.gfnGridBeforeSelect(this.dxGridSub);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));
	this.dsSelect.setColumn(0, "ID_RTNG", this.dsSearch.getColumn(0, "ID_RTNG"));
	this.dsSelect.setColumn(0, "ID_ITVWPRSN", this.dsList.getColumn(this.dsList.rowposition, "ID_ITVWPRSN"));
	this.dsSelect.setColumn(0, "TY_PTCP", "B"); //피평가자 

	var strSvcId    = "detail";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsListSub=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/************************************************************************
 * Validate
 ************************************************************************/

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
		this.FormBtns.Del.set_enable(false);
	}
	else if (svcID == "detail") {
		this.gfnGridAfterSelect(this.dxGridSub);	
		this.FormBtns.Del.set_enable(false);
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.fnSelectSub(this.dsList.rowposition);
			this.FormBtns.Select.click();
			this.FormBtns.Del.set_enable(false);
			//this.FormBtns.SubSelect.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	
}
 
/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if (id == "ccfCD_CORP") {
		dsUserParam.setColumn(nrow, "CD_CORP"  , this.AuthClient.CD_CORP);
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "ID_USER"  , this.AuthClient.ID_USER);
	} else if (id == "ccfID_RTNG") {
		dsUserParam.setColumn(nrow, "CD_CORP"     , this.dsSearch.getColumn(0, "CD_CORP"));
		dsUserParam.setColumn(nrow, "YR_RTNG"     , "");
		dsUserParam.setColumn(nrow, "CD_RTNG_TYPE", "JA1");
		dsUserParam.setColumn(nrow, "CD_ROLE"     , this.AuthClient.CD_ROLE);
	}	
	return true;
}

this.fnAfterCDTextChanged = function(id, codeFindData) {
	if (codeFindData[0] == undefined) {
		return;
	}
	
	if (id == "ccfID_RTNG") {
		this.dsSearch.setColumn(0, "TY_PTCP", codeFindData[0]["TY_PTCP"]);
		this.dsSearch.setColumn(0, "CD_RTNG_ASBLNEXT", codeFindData[0]["CD_RTNG_ASBLNEXT"]);
		this.dsSearch.setColumn(0, "DS_RTNG_ASBLNEXT", codeFindData[0]["DS_RTNG_ASBLNEXT"]);
		this.dsSearch.setColumn(0, "CNTN_RTNG_ID", codeFindData[0]["CNTN_RTNG_ID"]);
		//this.FormBtns.Select.click();
	}
}

/*
 *	서브 그리드 코드파인드
 */ 
this.fnGridSub_BeforeUserDataSetParam = function(id, dsUserParam, nrow) {

 	if (id == "DAX_CFRTNG_BGRN") {
		
 		dsUserParam.setColumn(nrow, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));
		dsUserParam.setColumn(nrow, "ID_RTNG", this.dsSearch.getColumn(0, "ID_RTNG"));
 	}
	return true;
}

this.fnGrid_AfterCDTextChanged = function(id, codeFindData) {
    var arrData = codeFindData;
	if(id == "DAX_CFRTNG_BGRN") {		
		this.dsListSub.set_enableevent(false);
		this.dsListSub.setColumn(0, "ID_ITVWPRSN", arrData[0]["ID_SABUN"]);
		this.dsListSub.set_enableevent(true);
	}
}

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
 this.fnGrid_RowCellChanged = function(obj:nexacro.Grid,e:nexacro.GridSelectEventInfo)
{
    if ((obj.oldrow > -1 && obj.oldrow == e.row)
		|| (obj.oldrow == -1 && e.oldrow != e.row)) {
		this.FormBtns.SubSelect.click();
		//this.fnSelectSub(e.row);
		obj.oldrow = -1;
	}
};

this.dsList_canrowposchange = function(obj:nexacro.NormalDataset,e:nexacro.DSRowPosChangeEventInfo) {
	var can_rowchange = true;
	for (var i = 0; i < this.dsListSub.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsListSub, i);
		if (flag == "I" || flag == "U" || flag == "D") {
			can_rowchange = false;
			break;
		}
	}
	if(!can_rowchange) {
		this._row = e.newrow;
		this.gfnConfirm("변경된 데이터가 있습니다.\r\n계속 진행하시겠습니까?", "dsList_canrowposchange_callback");
	}
	return can_rowchange;
}

this.dsList_canrowposchange_callback = function(strId, val) 
{
	if(val == true) {
		this.dsList.set_enableevent(false);
		this.dsList.set_rowposition(this._row);
		this.dsList.set_enableevent(true);
	}	
}

this.dsList_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{	

	//trace(" dsListSub_onvaluechanged=>" + this.gfnDsIsUpdated(obj));
	
	if(this.gfnDsIsUpdated(obj)){
		var rowType = obj.getRowType(e.row);
		this.gfnSetFormStatus(this, (rowType == 2 ? "I" : "U"));
	}

};

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		this.gfnSetFormStatus(this);
		this.gfnGridClear(this.dxGrid);
		this.gfnGridClear(this.dxGridSub);
	}
}

this.divData_ondragmove = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
	this.divData.form.divSplitter.set_left(e.clientx);
	this.divData.form.resetScroll();	
};

this.divData_divSplitter_ondrag = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
	return true;
};

// 조회자 muity 추가 
this.fnSetAddSub = function(){

	var param = {}
	
	param.CD_CORP = this.dsSearch.getColumn(0, "CD_CORP");
	param.DS_CORP = this.dsSearch.getColumn(0, "DS_CORP");
	param.YR_RTNG = this.dsSearch.getColumn(0, "YR_RTNG");
	param.ID_RTNG = this.dsSearch.getColumn(0, "ID_RTNG");
	param.DS_RTNG = this.dsSearch.getColumn(0, "DS_RTNG");
	param.CD_RTNG_TYPE = this.dsSearch.getColumn(0, "CD_RTNG_TYPE");
	param.DS_RTNG_TYPE = this.dsSearch.getColumn(0, "DS_RTNG_TYPE");
	param.DT_RTNG_BEGN = this.dsSearch.getColumn(0, "DT_RTNG_BEGN");
	param.DT_RTNG_END = this.dsSearch.getColumn(0, "DT_RTNG_END");
	param.DT_RTNG_STD = this.dsSearch.getColumn(0, "DT_RTNG_STD");
	param.CD_RTNG_ASBLNEXT = this.dsSearch.getColumn(0, "CD_RTNG_ASBLNEXT");
	param.DS_RTNG_ASBLNEXT = this.dsSearch.getColumn(0, "DS_RTNG_ASBLNEXT");
	
	trace("ID_RTNG =>" + param.ID_RTNG);
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DAJ_RTNG_GOAL_SEARCH_DLG", "fnAddSub_callback", param, 700, 600);
   
}

this.fnAddSub_callback = function (svcId, value)
{
	
    if (value)
    {		
		var json = JSON.parse(value);
		if (json.length > 0) {	
			var nCount = 0 ;
			//this.dsListSub.set_enableevent(false);
			for (var i=0; i < json.length; i++) {				
				if (this.dsListSub.getCaseCount("ID_BGVDPRSN =='"+ json[i].ID_CPNYDUTY + "'") == 0)	{
					var nrow = this.dsListSub.addRow();
					this.dsListSub.setColumn(nrow, this.ucFlag, "I") ; 
					this.dsListSub.setColumn(nrow, "ID_ITVWPRSN"	, this.dsList.getColumn(this.dsList.rowposition, "ID_ITVWPRSN"));
					this.dsListSub.setColumn(nrow, "SEQ_BGVDPRSN"	, json[i].SEQ_BGVDPRSN);
					this.dsListSub.setColumn(nrow, "ID_BGVDPRSN"	, json[i].ID_CPNYDUTY);
					this.dsListSub.setColumn(nrow, "DS_HNAME"		, json[i].DS_HNAME);
					this.dsListSub.setColumn(nrow, "DS_DEPT"		, json[i].DS_DEPT);
					this.dsListSub.setColumn(nrow, "DS_DUTY"		, json[i].DS_DUTY);
					this.dsListSub.setColumn(nrow, "CD_POSITION"	, json[i].CD_POSITION);
					this.dsListSub.setColumn(nrow, "DS_POSITION"	, json[i].DS_POSITION);
					this.dsListSub.setColumn(nrow, "CD_OCCUPATION"	, json[i].CD_OCCUPATION);
					this.dsListSub.setColumn(nrow, "DT_JOIN"		, json[i].DT_JOIN);	
					nCount = nCount +1; 
					this.gfnSetFormSubStatus(this, "I");
				}
			}
			//this.dsListSub.set_enableevent(true);
			//this.gfnAlert(nCount.toString() + "건의 자료가 추가되었습니다.");
		}
    }
};

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {	
		if( e.columnid == "YR_RTNG" ){
			this.dsSearch.setColumn(0,"ID_RTNG","");
			this.dsSearch.setColumn(0,"DS_RTNG","");
			this.dsSearch.setColumn(0,"CD_RTNG_TYPE","");
			this.dsSearch.setColumn(0,"DS_RTNG_TYPE","");
			this.dsSearch.setColumn(0,"DT_RTNG_BEGN","");
			this.dsSearch.setColumn(0,"DT_RTNG_END","");
			this.dsSearch.setColumn(0,"DT_RTNG_STD","");
			this.dsSearch.setColumn(0,"CD_RTNG_ASBLNEXT","");
			this.dsSearch.setColumn(0,"DS_RTNG_ASBLNEXT","");
		}
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
		this.gfnGridClear(this.dxGridSub);

	}
};
]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DAJPR_RTNG_GOAL_SEARCH_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DAJPR_RTNG_GOAL_SEARCH_SAVE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsListSub"/>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="DS_CORP" type="STRING" size="256"/>
          <Column id="YR_RTNG" type="STRING" size="256"/>
          <Column id="ID_RTNG" type="STRING" size="256"/>
          <Column id="DS_RTNG" type="STRING" size="256"/>
          <Column id="CD_RTNG_TYPE" type="STRING" size="256"/>
          <Column id="DS_RTNG_TYPE" type="STRING" size="256"/>
          <Column id="DT_RTNG_BEGN" type="STRING" size="256"/>
          <Column id="DT_RTNG_END" type="STRING" size="256"/>
          <Column id="DT_RTNG_STD" type="STRING" size="256"/>
          <Column id="CD_RTNG_ASBLNEXT" type="STRING" size="256"/>
          <Column id="DS_RTNG_ASBLNEXT" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CORP"/>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfID_RTNG.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="ID_RTNG"/>
      <BindItem id="item1" compid="divSearch.form.ccfID_RTNG.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_RTNG"/>
      <BindItem id="item2" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item3" compid="divSearch.form.ccfCD_CORP.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_CORP"/>
    </Bind>
  </Form>
</FDL>
