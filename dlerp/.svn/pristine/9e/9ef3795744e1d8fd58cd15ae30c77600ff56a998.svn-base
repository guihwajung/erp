<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="550" height="550" maxwidth="550" maxheight="590" titletext="부가세등록(팝업)" onload="form_onload" ondeactivate="form_ondeactivate" onbeforeclose="form_onbeforeclose">
    <Layouts>
      <Layout>
        <Div id="divData" taborder="0" left="0" top="42" bottom="60" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Static id="staCD_DEPT" taborder="0" text="귀속부서" left="10" top="2" width="95" height="30" onclick="divData_divDataRight_sta01_onclick" cssclass="sta_WF_tablelabelE"/>
              <Static id="staCD_ACNT" taborder="18" text="투자계정" left="10" top="31" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
              <Static id="sta11" taborder="19" left="104" top="2" height="30" cssclass="sta_WF_tablebg" text="" right="10"/>
              <Static id="sta12" taborder="20" left="104" top="31" height="30" cssclass="sta_WF_tablebg" right="10"/>
              <Static id="staTY_SALEBUY" taborder="21" text="거래구분" left="10" top="60" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
              <Static id="sta03" taborder="22" left="104" top="60" height="30" cssclass="sta_WF_tablebg" right="10"/>
              <Static id="staTY_VATPROOF" taborder="23" text="증빙선택" left="10" top="89" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
              <Static id="sta07" taborder="24" left="104" top="89" height="30" cssclass="sta_WF_tablebg" right="10"/>
              <Static id="sta08" taborder="25" left="104" top="176" height="30" cssclass="sta_WF_tablebg" right="10"/>
              <Static id="staDT_PROOF" taborder="26" text="증빙일자" left="10" top="176" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
              <Static id="staAM_SUPPLY" taborder="27" text="공급가액" left="10" top="205" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
              <Static id="sta13" taborder="28" left="104" top="205" height="30" cssclass="sta_WF_tablebg" right="10"/>
              <Static id="staAM_VAT" taborder="29" text="부가세액" left="10" top="234" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
              <Static id="sta15" taborder="30" left="104" top="234" height="30" cssclass="sta_WF_tablebg" right="10"/>
              <Static id="staDS_REM" taborder="31" text="적요" left="10" top="292" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
              <Static id="sta17" taborder="32" left="104" top="292" height="30" cssclass="sta_WF_tablebg" right="10"/>
              <Static id="sta20" taborder="33" left="104" top="321" height="30" cssclass="sta_WF_tablebg" right="10"/>
              <Static id="staVENDOR" taborder="34" text="거래처" left="10" top="321" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
              <Static id="sta22" taborder="35" left="104" top="350" height="30" cssclass="sta_WF_tablebg" right="10"/>
              <Static id="staNO_SJC" taborder="36" text="사업자번호" left="10" top="350" width="95" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="staNO_CREDIT" taborder="37" text="카드번호" left="10" top="379" width="95" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="sta25" taborder="38" left="104" top="379" height="30" cssclass="sta_WF_tablebg" right="10"/>
              <Static id="sta27" taborder="39" text="본사매출여부" left="364" top="60" width="96" height="30" cssclass="sta_WF_tablelabel" visible="false"/>
              <Static id="staTY_ISSUE" taborder="40" text="발행구분" left="10" top="118" width="95" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="sta29" taborder="41" left="104" top="118" height="30" cssclass="sta_WF_tablebg" right="10"/>
              <Div id="ccfCD_DEPT" CDTextWidth="70" taborder="1" left="110" top="7" width="329" height="20" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Div id="ccfCD_ACNT" CDTextWidth="70" taborder="2" left="110" top="36" width="329" height="20" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Radio id="rdoTY_SALEBUY" taborder="3" left="110" top="64" width="239" height="20" innerdataset="innerdataset" codecolumn="codecolumn" datacolumn="datacolumn" direction="vertical" onitemchanged="divData_rdoTY_SALEBUY_onitemchanged">
                <Dataset id="innerdataset">
                  <ColumnInfo>
                    <Column id="codecolumn" size="256"/>
                    <Column id="datacolumn" size="256"/>
                  </ColumnInfo>
                  <Rows>
                    <Row>
                      <Col id="datacolumn">매입</Col>
                      <Col id="codecolumn">I</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">O</Col>
                      <Col id="datacolumn">매출</Col>
                    </Row>
                  </Rows>
                </Dataset>
              </Radio>
              <Calendar id="calDT_PROOF" taborder="8" left="111" top="181" width="105" height="20" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" enable="true"/>
              <Calendar id="calDT_ACCOUNT" taborder="9" left="calDT_PROOF:10" top="181" width="105" height="20" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" enable="true" visible="false"/>
              <MaskEdit id="mskAM_SUPPLY" taborder="10" left="111" top="210" width="148" height="20" limitbymask="both" format="###,###,###,###,###,###"/>
              <MaskEdit id="mskAM_VAT" taborder="11" left="111" top="239" width="148" height="20" limitbymask="both" format="###,###,###,###,###,###"/>
              <Edit id="txtDS_REM" taborder="13" left="110" top="297" height="20" maxlength="50" right="17"/>
              <Combo id="ccboTY_VENDOR" taborder="14" left="111" top="326" width="100" height="20" innerdataset="dsTY_VENDOR" datacolumn="DS_CODE" codecolumn="CD_CODE" value="" index="-1" text="" onitemchanged="divData_ccboTY_VENDOR_onitemchanged" enable="false"/>
              <Div id="ccfCD_VENDOR" CDTextWidth="70" taborder="15" left="214" top="326" height="20" url="cmm::cmmCodeFind.xfdl" text="" right="17"/>
              <Edit id="txtNO_SJC" taborder="42" left="111" top="355" width="148" height="20" maxlength="7" enable="false"/>
              <Div id="ccfNO_CREDIT" CDTextWidth="148" taborder="17" left="111" top="384" width="329" height="20" url="cmm::cmmCodeFind.xfdl" text=""/>
              <CheckBox id="chkCK_BONSA" taborder="4" left="466" top="63" width="62" height="24" falsevalue="N" truevalue="Y" visible="false"/>
              <Radio id="rdoTY_ISSUE" taborder="6" left="110" top="123" width="239" height="20" innerdataset="innerdataset" codecolumn="codecolumn" datacolumn="datacolumn" direction="vertical" onitemchanged="divData_rdoTY_ISSUE_onitemchanged" enable="true" readonly="false">
                <Dataset id="innerdataset">
                  <ColumnInfo>
                    <Column id="codecolumn" size="256"/>
                    <Column id="datacolumn" size="256"/>
                  </ColumnInfo>
                  <Rows>
                    <Row>
                      <Col id="codecolumn">E</Col>
                      <Col id="datacolumn">전자발행</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">P</Col>
                      <Col id="datacolumn">일반발행</Col>
                    </Row>
                  </Rows>
                </Dataset>
              </Radio>
              <Static id="staTY_VATBGJE" taborder="43" text="불공제사유" left="10" top="147" width="95" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="sta31" taborder="44" left="104" top="147" height="30" cssclass="sta_WF_tablebg" right="10"/>
              <Combo id="ccboTY_VATBGJE" taborder="7" left="111" top="152" width="328" height="20" innerdataset="dsTY_VATBGJE" datacolumn="DS_CODE" codecolumn="CD_CODE" value="" index="-1" text=""/>
              <Static id="staAM_SERVICE" taborder="45" text="봉사료" left="10" top="263" width="95" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="sta33" taborder="46" left="104" top="263" height="30" cssclass="sta_WF_tablebg" right="10"/>
              <MaskEdit id="mskAM_SERVICE" taborder="12" left="111" top="268" width="148" height="20" limitbymask="both" format="###,###,###,###,###,###"/>
              <Div id="ccfCD_PROOF" CDTextWidth="70" taborder="5" left="110" top="94" width="329" height="20" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Edit id="txtNO_CREDIT" taborder="16" left="111" top="384" width="148" height="20" maxlength="20" visible="false"/>
              <Static id="sta00" taborder="47" text="첨부파일" left="10" top="408" width="95" height="30" cssclass="sta_WF_tablelabel" visible="false"/>
              <Static id="sta01" taborder="48" left="104" top="408" height="30" cssclass="sta_WF_tablebg" right="10" visible="false"/>
              <Edit id="txtFILE" taborder="49" left="110" top="412" width="148" height="21" readonly="true" visible="false"/>
              <Button id="btnFile" taborder="50" text="첨부" left="262" top="413" width="50" height="20" onclick="btnFile_onclick" enable="false" visible="false"/>
            </Layout>
          </Layouts>
        </Div>
        <Static id="staTitle" taborder="1" text="증빙정보 입력" left="0" top="10" height="22" cssclass="sta_TITLE_Bg" right="0"/>
        <Button id="btnConf" taborder="2" text="확인" left="158" width="69" height="27" onclick="btnConf_onclick" bottom="19"/>
        <Button id="btnCancel" taborder="3" text="닫기" left="310" width="69" height="27" onclick="btnCancel_onclick" bottom="19"/>
        <Button id="btnDel" taborder="4" text="삭제" left="234" width="69" height="27" bottom="19" onclick="btnDel_onclick"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	this.fnSetCombo();
	
	this.CD_SLIP   = this.getOwnerFrame().P_CD_SLIP;
	this.NO_VAT    = this.getOwnerFrame().P_NO_VAT;
	this.IUD_FLAG  = this.getOwnerFrame().P_IUD_FLAG;
	this.GUBUN     = this.getOwnerFrame().P_GUBUN;
	this.YN_VAT    = this.getOwnerFrame().P_YN_VAT;
	this.YN_APPR   = this.getOwnerFrame().P_YN_APPR;

	trace("넘어온 부가세번호 NO_VAT :: "+this.NO_VAT);
	trace("넘어온 구분 GUBUN :: "+this.GUBUN);
	trace("넘어온 구분 IUD_FLAG :: "+this.IUD_FLAG);
	trace("넘어온 승인여부 YN_APPR :: "+this.YN_APPR);
	trace("넘어온 파일구분 FILE_DIR :: "+this.getOwnerFrame().P_FILE_DIR);
	trace("넘어온 귀속부서 P_CD_DEPT :: "+this.getOwnerFrame().P_CD_DEPT);
	trace("넘어온 귀속부서 P_DS_DEPT :: "+this.getOwnerFrame().P_DS_DEPT);
	
	trace("넘어온 증빙코드 P_CD_PROOF :: "+this.getOwnerFrame().P_CD_PROOF);
	
	trace("넘어온 매입귀속부서 CD_DEPT_BUY :: "+this.getOwnerFrame().CD_DEPT_BUY);
	trace("넘어온 매입귀속부서 DS_DEPT_BUY :: "+this.getOwnerFrame().DS_DEPT_BUY);
	
	trace("넘어온 본사귀속부서 CD_DEPT_ACNT_BON :: "+this.getOwnerFrame().CD_DEPT_ACNT_BON);
	trace("넘어온 본사귀속부서 DS_DEPT_ACNT_BON :: "+this.getOwnerFrame().DS_DEPT_ACNT_BON);
	
	//trace("넘어온 결재상태 코드 CD_APP :: "+this.getOwnerFrame().P_CD_APP);	// 결재코드(구버젼 사용안함)
	trace("넘어온 결재상태 코드 ST_APRV :: "+this.getOwnerFrame().P_ST_APRV);	// 결재코드
	
	trace("넘어온 카드번호 NO_CREDIT :: "+this.getOwnerFrame().NO_CREDIT);
	
	trace("넘어온 차대변구분 TY_CRDR :: "+this.getOwnerFrame().TY_CRDR);
	trace("넘어온 회계일자 DT_ACCOUNT :: "+this.getOwnerFrame().DT_ACCOUNT);
	
	trace("넘어온 계정코드 CD_ACCOUNT :: "+this.getOwnerFrame().CD_ACCOUNT);

	trace("넘어온 집행통화 CD_EXEC_CURR :: "+this.getOwnerFrame().CD_EXEC_CURR);
	trace("넘어온 로컬통화 CD_LOCAL_CURR :: "+this.getOwnerFrame().CD_LOCAL_CURR);
	
	this.calDT_ACCOUNT.set_value( this.getOwnerFrame().DT_ACCOUNT);
	

	// 발행구분 전자발행 기본값
	this.rdoTY_ISSUE.set_index(0);

	//부가관리에서 호출시 조회 처리
	if(this.GUBUN == "VATCONTROL"){
		this.fnSelect();
		
		this.btnConf.set_visible(false);	//확인버튼 숨기기
		this.btnDel.set_visible(false);		//삭제버튼 숨기기
		this.btnCancel.set_left(235);		//취소버튼 가운데
		this.btnCancel.set_text("닫기");
	}else{	//전표발행
		//승인된 전표 또는 조회일 경우
		if(this.IUD_FLAG == "A" || this.IUD_FLAG == "S"){
			this.fnSelect();
			
			this.btnConf.set_visible(false);	//확인버튼 숨기기
			this.btnDel.set_visible(false);		//삭제버튼 숨기기
			this.btnCancel.set_left(235);		//닫기버튼 가운데

			this.btnCancel.set_text("닫기");

		}else{
			if(this.gfnIsNull(this.getOwnerFrame().CD_PROOF)){
				this.btnDel.set_visible(false);		//삭제버튼 숨기기
				this.btnConf.set_left(190);			//확인버튼
				this.btnCancel.set_left(265);		//닫기버튼 
			}
			
			//파라미터 데이터 셋팅
			this.fnSetParamData();
		}
	}

	//파일 조회
	this.fnFileSelect();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {

}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {

};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {	

	this.ccfCD_DEPT = this.divData.form.ccfCD_DEPT;
	this.ccfCD_ACNT = this.divData.form.ccfCD_ACNT;
	this.ccfCD_VENDOR = this.divData.form.ccfCD_VENDOR;
	this.ccfCD_PROOF =  this.divData.form.ccfCD_PROOF;	//증빙선택
	this.rdoTY_SALEBUY  =  this.divData.form.rdoTY_SALEBUY;
	
	this.ccboTY_VATBGJE =  this.divData.form.ccboTY_VATBGJE;	//불공제 사유
	
	this.calDT_PROOF =  this.divData.form.calDT_PROOF;			//증빙일자
	this.calDT_ACCOUNT =  this.divData.form.calDT_ACCOUNT;		//회계일자
	
	this.mskAM_SUPPLY =  this.divData.form.mskAM_SUPPLY;		//공급가액
	this.mskAM_VAT =  this.divData.form.mskAM_VAT;				//부가세
	this.mskAM_SERVICE =  this.divData.form.mskAM_SERVICE;		//봉사료
	
	this.txtDS_REM =  this.divData.form.txtDS_REM;				//적요
	this.ccboTY_VENDOR =  this.divData.form.ccboTY_VENDOR;		//거래처구분
	this.txtNO_SJC =  this.divData.form.txtNO_SJC;				//사업자번호
	
	this.ccfNO_CREDIT =  this.divData.form.ccfNO_CREDIT;		//신용카드
	//this.chkCK_OMIT =  this.divData.form.chkCK_OMIT;			//체크필드(누락여부)
	this.chkCK_BONSA =  this.divData.form.chkCK_BONSA;			//본사매출여부
	this.rdoTY_ISSUE =  this.divData.form.rdoTY_ISSUE;			//발행구분
	
	this.staNO_CREDIT = this.divData.form.staNO_CREDIT;		//카드번호 라벨
	this.txtNO_CREDIT = this.divData.form.txtNO_CREDIT;		//카드번호(현금영수증)
	
	this.btnFile = this.divData.form.btnFile;
	this.txtFILE = this.divData.form.txtFILE;		//파일
	
	this.vDeleteFlag = false;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {

	//발의부서
 	this.ccfCD_DEPT.CodeFindName = "DHX_CFACNTUNIT";
 	this.ccfCD_DEPT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	//계정코드
 	this.ccfCD_ACNT.CodeFindName = "DHX_CFACCOUNT";
 	this.ccfCD_ACNT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";

	//증빙선택
 	//this.ccfCD_PROOF.CodeFindName = "CF_CODE_DH_V10";
	this.ccfCD_PROOF.CodeFindName = "DHX_COMMON_CODEFIND_SELECT";
 	this.ccfCD_PROOF.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_PROOF.AfterCDTextChanged = "fnAfterCDTextChanged";
	
	//거래처
 	this.ccfCD_VENDOR.CodeFindName = "DHX_CFETC_CODEFIND";
 	this.ccfCD_VENDOR.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_VENDOR.AfterCDTextChanged = "fnAfterCDTextChanged";
	
	//신용카드
 	this.ccfNO_CREDIT.CodeFindName = "DFX_CFCARD_CODEFIND";
 	this.ccfNO_CREDIT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	this.dsList.addEventHandler("oncolumnchanged", this.dsList_ColumnChanged, this);

};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("NO_VAT", "string");

	//데이터셋 컬럼 셋팅
	this.dsList.addColumn("IN_CD_SLIP", "string");	
 	this.dsList.addColumn("NO_VAT", "string");	
 	this.dsList.addColumn("CD_DEPT_ACNT", "string");
	this.dsList.addColumn("DS_DEPT_ACNT", "string");
	this.dsList.addColumn("TY_SALEBUY", "string");
	this.dsList.addColumn("CD_PROOF", "string");
	this.dsList.addColumn("DS_PROOF", "string");
	this.dsList.addColumn("TY_VATBGJE", "string");
	this.dsList.addColumn("CD_ACCOUNT", "string");
	this.dsList.addColumn("DS_ACCOUNT", "string");
	this.dsList.addColumn("TY_VENDOR", "string");
	this.dsList.addColumn("CD_VENDOR", "string");
	this.dsList.addColumn("DS_VENDOR", "string");
	this.dsList.addColumn("AM_SUPPLY", "BIGDECIMAL");
	this.dsList.addColumn("AM_VAT", "BIGDECIMAL");
	this.dsList.addColumn("AM_SERVICE", "BIGDECIMAL");
	this.dsList.addColumn("NO_CREDIT", "string");
	this.dsList.addColumn("DS_CREDIT", "string");
	this.dsList.addColumn("DT_PROOF", "string");
	this.dsList.addColumn("DS_REM", "string");
	this.dsList.addColumn("CK_OMIT", "string");
	this.dsList.addColumn("NO_SJC", "string");
	this.dsList.addColumn("TY_ISSUE", "string");
	this.dsList.addColumn("VAT_RATE", "BIGDECIMAL");
	this.dsList.addColumn("YN_VATBGJE", "string");
	this.dsList.addColumn("FILE_DIR", "string");
	this.dsList.addColumn("CD_DEPT_ACNT_BON", "string");
	this.dsList.addColumn("DS_DEPT_ACNT_BON", "string");
	this.dsList.addColumn("CK_BONSA", "string");
	
	this.dsResult = new Dataset();	//리턴용 데이터셋	
	this.dsResult.addColumn("CD_VATDEPT_ACNT", "string");	//발의부서
	this.dsResult.addColumn("CD_VATACCOUNT", "string");		//계정
	this.dsResult.addColumn("TY_SALEBUY", "string");		//거래구분
	this.dsResult.addColumn("CD_PROOF", "string");			//증빙코드	
	this.dsResult.addColumn("DS_PROOF", "string");			//증빙코드명
	this.dsResult.addColumn("TY_VATBGJE", "string");		//불공제사유
	this.dsResult.addColumn("CD_VATVENDOR", "string");		//거래처코드
	this.dsResult.addColumn("DS_VATVENDOR", "string");		//거래처명
	this.dsResult.addColumn("TY_VATVENDOR", "string");		//거래처구분	
	this.dsResult.addColumn("AM_SUPPLY", "BIGDECIMAL");		//공급가액
	this.dsResult.addColumn("AM_VAT", "BIGDECIMAL");		//부가세
	this.dsResult.addColumn("AM_SERVICE", "BIGDECIMAL");	//봉사료
	this.dsResult.addColumn("DT_PROOF", "string");			//증빙일자
	this.dsResult.addColumn("NO_CREDIT", "string");			//카드번호
	this.dsResult.addColumn("DS_VATREM", "string");			//적요
	this.dsResult.addColumn("CK_OMIT", "string");			//누락여부
	this.dsResult.addColumn("TY_ISSUE", "string");			//발행구분
	this.dsResult.addColumn("NO_VIEW", "string");			//부가세 발행하는 전표의 항번
	
	this.dsResult.addColumn("VAT_RATE", "BIGDECIMAL");		//부가세율
	this.dsResult.addColumn("YN_VATBGJE", "string");		//부가세여부
	this.dsResult.addColumn("NO_VAT", "string");			//부가세번호
	this.dsResult.addColumn("FILE_DIR", "string");			//첨부파일 경로
	
	this.dsDeleteList = new Dataset();	//파일삭제용 데이터셋	
	this.dsDeleteList.addColumn("filepath", "string");
	this.dsDeleteList.addColumn("filename", "string");
	
	this.dsFileSave = new Dataset();	//파일삭제용 데이터셋	
	this.dsFileSave.addColumn("TY_SAVE", "string");
	this.dsFileSave.addColumn("CD_GUBUN", "string");
	this.dsFileSave.addColumn("NO_SEQ", "string");
	this.dsFileSave.addColumn("CD_REF1", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {

	this.dsList.clearData();
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "NO_VAT", this.NO_VAT);     // 부가세번호	
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
	
}

 /*
 *	입력 버튼
 */
this.fnAdd = function() {
	

}

 /*
 *	저장 버튼
 */
this.fnSave = function() {
	
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	//this.gfnGridDel(this.dxGrid);
}


/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	//this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}
/************************************************************************
 * Validate
 ************************************************************************/
this.fnSelectValidate = function() {
	var validate = true;

	return validate;
};
/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
*/
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		if(this.dsList.rowcount > 0){
			
			var cdProof = this.dsList.getColumn(0, "CD_PROOF");
			
			if(cdProof == "16" || cdProof == "17" || cdProof == "18" || cdProof == "19"){	//신용카드(개인제외)
				this.ccfNO_CREDIT.set_visible(true);
				this.txtNO_CREDIT.set_visible(false);
			}else if(cdProof == "22"){	//현금영수증
				this.ccfNO_CREDIT.set_visible(false);
				this.txtNO_CREDIT.set_visible(true);
			}
		}
		//enable 처리
		this.fnEnableComp();
	}else if(svcID == "combo"){
		if(this.dsTY_VATBGJE.rowcount > 0){
			var nRow = this.dsTY_VATBGJE.insertRow(0);
			this.dsTY_VATBGJE.setColumn(nRow, "CD_CODE", "");
			this.dsTY_VATBGJE.setColumn(nRow, "DS_CODE", "선택");
		}
	}else if(svcID == "fileSelect"){	
		//trace("saveXML :: "+this.dsFileList.saveXML());	
		
		if(this.dsFileList.rowcount > 0){
			if(this.vDeleteFlag){
				this.fnFileDelete();
			}else{
				this.txtFILE.set_value(this.dsFileList.rowcount + " 건");
			}
		}
	}
	
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
 this.fnAfterCDTextChanged = function(id, codeFindData) {
	var arrData = codeFindData;
	
	switch(id) {
		case "ccfCD_VENDOR":	//거래처코드
			if (arrData.length > 0) {
				this.dsList.setColumn(this.dsList.rowposition, "NO_SJC", arrData[0]["NO_SJC"]);
			}
		break;
		case "ccfCD_PROOF":	//증빙선택
			if (arrData.length > 0) {

				if(this.getOwnerFrame().CD_EXEC_CURR != "KRW"){
					var tySaleBuy = this.dsList.getColumn(this.dsList.rowposition, "TY_SALEBUY");	//거래구분
					var chkCdProof = (tySaleBuy == "I") ? "24" : "59";
					var chkdsProof = (tySaleBuy == "I") ? "기타(24)" : "영수증(59)";
					/*
					if(arrData[0]["CD_CODE"] != chkCdProof){
						alert("집행화 화폐단위 KRW가 아닌경우 "+chkdsProof+" 증빙코드를 선택하세요");
						this.dsList.setColumn(this.dsList.rowposition, "CD_PROOF", "");
						this.dsList.setColumn(this.dsList.rowposition, "DS_PROOF", "");
	
						return;
					}
					*/
				}

				var vatRate   = arrData[0]["DS_ETC2"];	//부가세율
				var ynVatBgje = arrData[0]["DS_ETC3"];	//불공제여부
				
				//부가세율
				this.dsList.setColumn(this.dsList.rowposition, "VAT_RATE", vatRate);
				//불공제 여부
				this.dsList.setColumn(this.dsList.rowposition, "YN_VATBGJE", ynVatBgje);
				
				//if(vatRate == "0"){
				if(vatRate == "0" || (this.getOwnerFrame().CD_EXEC_CURR != "KRW" )){
					this.mskAM_VAT.set_enable(false);
				}else{
					this.mskAM_VAT.set_enable(true);
				}

				//전자세금계산서일 경우
				if(!this.gfnIsNull(this.getOwnerFrame().P_ISSUE_ID)){
					this.mskAM_VAT.set_enable(false);	//부가세수정불가
				}

				this.ccboTY_VATBGJE.set_enable(false);
				//불공제 사유
				this.dsList.setColumn(this.dsList.rowposition, "TY_VATBGJE", "");
				if(ynVatBgje == "Y"){	//세금계산서(매입세액불공제), 신용카드(매입세액불공제)
					this.ccboTY_VATBGJE.set_enable(true);
					this.ccboTY_VATBGJE.set_index(0);
				}
				
				//전자세금계산서가 아닐경우
				if(this.gfnIsNull(this.getOwnerFrame().P_ISSUE_ID)){
					//부가세 계산
					this.fnVatCal(nexacro.toNumber(this.dsList.getColumn(this.dsList.rowposition, "AM_SUPPLY"),0));
				}
				
				this.txtNO_CREDIT.set_value("");
				//코드파인더 클리어
				this.ccfNO_CREDIT.form.fnCodeFindClear();
				//카드 셋팅
				this.fnCreditSetting();

			}
		break;
	}
}

this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {

	switch(id) {
		case "ccfCD_ACNT":	//계정코드
			dsUserParam.setColumn(nrow, "YN_SLIP", "Y");
		break;
		case "ccfCD_DEPT":		//귀속부서

			dsUserParam.setColumn(nrow, "CD_DEPT_UPPER"	, "");			//상위부서
			dsUserParam.setColumn(nrow, "YN_SLIPACCEPT"	, "");			//전표발행여부
			dsUserParam.setColumn(nrow, "CD_CORP"		, this.getOwnerFrame().CD_CORP);		//법인코드
			dsUserParam.setColumn(nrow, "YN_USE"		, "Y");			//사용여부
			dsUserParam.setColumn(nrow, "GR_DEPT_ACNT"	, "");			//현장/본사여부

		break;
		/*
		case "CF_CODE_DH_V10":		//증빙선택 - 사용안함
			var tySaleBuy = this.dsList.getColumn(this.dsList.rowposition, "TY_SALEBUY");	//거래구분
			
			trace("## tySaleBuy :: "+tySaleBuy);
			
			var cdType = "V10";	//매입
			if(tySaleBuy == "O"){
				cdType = "V11";	//매입
			}else if(tySaleBuy == "Z"){
				cdType = "V12";	//매입
			}
		
			dsUserParam.setColumn(nrow, "CD_SYSTEM"	, "DH");						//시스템코드
			dsUserParam.setColumn(nrow, "CD_TYPE"	, cdType);						//공통분류코드	
		break;	
		*/

		case "ccfCD_PROOF" :
			var tySaleBuy = this.dsList.getColumn(this.dsList.rowposition, "TY_SALEBUY");	//거래구분
			
			trace("## 코드파인더 tySaleBuy :: "+tySaleBuy);
			
			dsUserParam.setColumn(nrow, "DS_ETC1" , (tySaleBuy == "I" ? "VAT" : ""));
			dsUserParam.setColumn(nrow, "CD_SYSTEM"	, "DH");						//시스템코드
			dsUserParam.setColumn(nrow, "CD_TYPE"	, (tySaleBuy == "I" ? "V10" : "V11"));		//공통분류코드
		break;
		
		case "ccfCD_VENDOR":	//거래처
			dsUserParam.setColumn(nrow, "TY_VENDOR"   , this.ccboTY_VENDOR.value);
			dsUserParam.setColumn(nrow, "CD_VENDOR"   , "");
			dsUserParam.setColumn(nrow, "CD_CORP" 	  , this.getOwnerFrame().CD_CORP);
			
		break;
		case "ccfNO_CREDIT":	//신용카드
			dsUserParam.setColumn(nrow, "CD_DEPT"     , "");
			dsUserParam.setColumn(nrow, "CD_SUABUN"   , "");
			dsUserParam.setColumn(nrow, "CD_CORP" 	  , this.getOwnerFrame().CD_CORP);
		break;
	}
	
	return true;
};

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 //그리드 값변경 이벤트
this.dsList_ColumnChanged = function(obj:nexacro.NormalDataset, e:nexacro.DSColChangeEventInfo)
{
	trace("그리드 값변경 이벤트 columnid :: " +e.columnid + " / newvalue :: "+e.newvalue);

	if(e.columnid == "TY_SALEBUY"){	//거래구분
		
		//증빙선택 코드파인더 셋팅
		//this.fnSetCodeFind(e.newvalue);
		
		//코드파인더 클리어
		this.ccfCD_PROOF.form.fnCodeFindClear();
		
		//불공제사유 초기화
		obj.setColumn(e.row, "TY_VATBGJE", "");
		
		if(e.newvalue == "I"){	//매입
			this.chkCK_BONSA.set_enable(false);
			obj.setColumn(e.row, "CK_BONSA", "N");	//본사매출여부 초기화
		}else{	//매출
			this.chkCK_BONSA.set_enable(true);
		}

		if(e.newvalue == "I"){	//매입
			if(!this.gfnIsNull(this.getOwnerFrame().CD_DEPT_BUY)){
				this.ccfCD_DEPT.form.CDTextBox.set_value(this.getOwnerFrame().CD_DEPT_BUY);
				this.ccfCD_DEPT.form.DSTextBox.set_value(this.getOwnerFrame().DS_DEPT_BUY);
			}else{
				this.ccfCD_DEPT.form.CDTextBox.set_value(this.getOwnerFrame().P_CD_DEPT);
				this.ccfCD_DEPT.form.DSTextBox.set_value(this.getOwnerFrame().P_DS_DEPT);
			}
		}else{
			if(obj.getColumn(e.row, "CK_BONSA") == "Y"){
				this.ccfCD_DEPT.form.CDTextBox.set_value(this.getOwnerFrame().CD_DEPT_ACNT_BON);
				this.ccfCD_DEPT.form.DSTextBox.set_value(this.getOwnerFrame().DS_DEPT_ACNT_BON);
			}else{
				this.ccfCD_DEPT.form.CDTextBox.set_value(this.getOwnerFrame().P_CD_DEPT);
				this.ccfCD_DEPT.form.DSTextBox.set_value(this.getOwnerFrame().P_DS_DEPT);
			}
			obj.setColumn(e.row, "TY_ISSUE", "E");	// 발행구분 대변일때 E전자발행, 수정불가
		}
					  
		this.rdoTY_ISSUE.set_enable((e.newvalue == "I")?true:false);			//발행구분		
	}
	
	if(e.columnid == "AM_SUPPLY"){	//공급가
		this.fnVatCal(nexacro.toNumber(e.newvalue, 0));
	}
	
	if(e.columnid == "CK_BONSA"){	//본사매출여부
		if(obj.getColumn(e.row, "TY_SALEBUY") == "O"){	//거래구분이 매출일 경우
			if(e.newvalue == "Y"){	//체크할경우
				this.ccfCD_DEPT.form.CDTextBox.set_value(this.getOwnerFrame().CD_DEPT_ACNT_BON);
				this.ccfCD_DEPT.form.DSTextBox.set_value(this.getOwnerFrame().DS_DEPT_ACNT_BON);
			}else{
				this.ccfCD_DEPT.form.CDTextBox.set_value(this.getOwnerFrame().P_CD_DEPT);
				this.ccfCD_DEPT.form.DSTextBox.set_value(this.getOwnerFrame().P_DS_DEPT);
			}
		}
	}
	
	if(e.columnid == "DT_PROOF"){	//증빙일자
		if(e.newvalue != e.oldvalue && !this.gfnIsNull(e.oldvalue)){
			var DT_PROOF = e.newvalue;
			var DT_ACCOUNT = this.calDT_ACCOUNT.value;
			var DS_ALERT_MSG = (DT_ACCOUNT.substring(0, 6) != DT_PROOF.substring(0, 6)) ? "[증빙월차이] " : "";
			var DS_REM = this.dsList.getColumn(this.dsList.rowposition, "DS_REM");			
			if(DS_REM.substring(0, 8) == "[증빙월차이] "){
				DS_REM = DS_REM.substring(8, DS_REM.toString().length);
			}
			this.dsList.setColumn(this.dsList.rowposition, "DS_REM", DS_ALERT_MSG + DS_REM);
		}
	}
}

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
//취소버튼 클릭
this.btnCancel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//임시파일 업로드 여부 체크
/*	if(this.fnFileCheck()){
		this.vDeleteFlag = true;
		this.fnFileSelect();	//첨부파일 조회해서 삭제 처리
		return false;
	}*/

	this.getParentContext().close();
};

//확인버튼 클릭
this.btnConf_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if(!this.fnCheckResultData()) return;
	
	var rPos = this.dsList.rowposition;
	
	this.dsResult.clearData();
	
	var nRow = this.dsResult.addRow();
	
	this.dsResult.set_enableevent(false);

	var tySaleBuy  = this.dsList.getColumn(rPos, "TY_SALEBUY");		//거래구분
	var cdProof    = this.dsList.getColumn(rPos, "CD_PROOF");		//증빙선택
	
	var noCredit = "";
	//거래구분이 매입일경우
	if(tySaleBuy == "I"){
		if(cdProof == "16" || cdProof == "17" || cdProof == "18" || cdProof == "19"){	//신용카드(개인제외)
			noCredit = this.ccfNO_CREDIT.form.CDTextBox.value;
		}else if(cdProof == "22"){	//현금영수증
			noCredit = this.txtNO_CREDIT.value;
		}
	}

	this.dsResult.setColumn(nRow, "NO_CREDIT", noCredit);	//카드번호
	
	var cdDeptAcnt = this.ccfCD_DEPT.form.CDTextBox.value + "|" + this.ccfCD_DEPT.form.DSTextBox.value;
	this.dsResult.setColumn(nRow, "CD_VATDEPT_ACNT", cdDeptAcnt);	//발의부서
	
	var cdAccount = this.ccfCD_ACNT.form.CDTextBox.value + "|" + this.ccfCD_ACNT.form.DSTextBox.value;
	this.dsResult.setColumn(nRow, "CD_VATACCOUNT", cdAccount);	//계정코드
	
	var cdVendor = this.ccfCD_VENDOR.form.CDTextBox.value;
	var dsVendor = this.ccfCD_VENDOR.form.DSTextBox.value;
	var tyVendor = this.dsList.getColumn(rPos, "TY_VENDOR");
	this.dsResult.setColumn(nRow, "CD_VATVENDOR", cdVendor);	//거래처코드
	this.dsResult.setColumn(nRow, "DS_VATVENDOR", dsVendor);	//거래처명
	this.dsResult.setColumn(nRow, "TY_VATVENDOR", tyVendor);	//거래처구분
	
	this.dsResult.setColumn(nRow, "TY_SALEBUY"	, tySaleBuy);	//거래구분
	this.dsResult.setColumn(nRow, "CD_PROOF"	, this.dsList.getColumn(rPos, "CD_PROOF"));		//증빙코드
	this.dsResult.setColumn(nRow, "DS_PROOF"	, this.dsList.getColumn(rPos, "DS_PROOF"));		//증빙코드명
	this.dsResult.setColumn(nRow, "TY_VATBGJE"	, this.dsList.getColumn(rPos, "TY_VATBGJE"));	//불공제사유
	this.dsResult.setColumn(nRow, "AM_SUPPLY"	, this.dsList.getColumn(rPos, "AM_SUPPLY"));	//공급가액
	this.dsResult.setColumn(nRow, "AM_VAT"   	, this.dsList.getColumn(rPos, "AM_VAT"));		//부가세액
	this.dsResult.setColumn(nRow, "AM_SERVICE"  , this.dsList.getColumn(rPos, "AM_SERVICE"));	//봉사료
	this.dsResult.setColumn(nRow, "DT_PROOF"    , this.dsList.getColumn(rPos, "DT_PROOF"));		//증빙일자
	this.dsResult.setColumn(nRow, "DS_VATREM"   , this.dsList.getColumn(rPos, "DS_REM"));		//비고
	this.dsResult.setColumn(nRow, "CK_OMIT"     , this.dsList.getColumn(rPos, "CK_OMIT"));		//누락여부
	this.dsResult.setColumn(nRow, "TY_ISSUE"    , this.dsList.getColumn(rPos, "TY_ISSUE"));		//발행구분	
	
	this.dsResult.setColumn(nRow, "VAT_RATE"    , this.dsList.getColumn(rPos, "VAT_RATE"));		//부가세율
	this.dsResult.setColumn(nRow, "YN_VATBGJE"  , this.dsList.getColumn(rPos, "YN_VATBGJE"));	//불공제여부
	
	this.dsResult.setColumn(nRow, "NO_VIEW"     , this.getOwnerFrame().P_NO_VIEW);		//발행하는 전표의 항번
	
	this.dsResult.setColumn(nRow, "NO_VAT"     , this.NO_VAT);
	this.dsResult.setColumn(nRow, "FILE_DIR"   , this.dsList.getColumn(rPos, "FILE_DIR"));	//첨부파일경로

	
	trace("########### 확인버튼 P_NO_VIEW :: "+this.getOwnerFrame().P_NO_VIEW);
	
	this.dsResult.set_enableevent(true);
	
	//팝업 닫기 처리
	this.getParentContext().close(this.dsResult.saveXML());
};


//검색조건 변경 이벤트
this.dsSearch_Valuechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{	
	if(e.oldvalue != e.newvalue) {
		this.gfnGridClear(this.dxGrid);	
	}
};

//거래구분 변경
// this.fnChangeTY_SALEBUY = function(val)
// {	
// 	var cdProof = this.dsList.getColumn(this.dsList.rowposition, "CD_PROOF");
// 
// 	this.fnSetCodeFind(val);
// }

this.fnSetCombo = function() {
	
	this.dsCombo = new Dataset();
	this.dsCombo.addColumn("CD_SYSTEM", "string");
	this.dsCombo.addColumn("CD_TYPE"  , "string");
	
	this.dsCombo2 = new Dataset();
	this.dsCombo2.addColumn("CD_SYSTEM", "string");
	this.dsCombo2.addColumn("CD_TYPE", "string");
	
	this.dsCombo.addRow();
	this.dsCombo.setColumn(0, "CD_SYSTEM", "DH");
	this.dsCombo.setColumn(0, "CD_TYPE"  , "V01");

	this.dsCombo2.addRow();
	this.dsCombo2.setColumn(0, "CD_SYSTEM", "DH");
	this.dsCombo2.setColumn(0, "CD_TYPE", "A02");
	
	var strSvcId    = "combo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "combo=dsCombo combo2=dsCombo2";
	var outData     = "dsTY_VATBGJE=combo0 dsTY_VENDOR=combo20";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc,
						false); // 통신방법 정의 [생략가능]
};

//파라미터 데이터 셋팅
this.fnSetParamData = function ()
{
	trace("IUD_FLAG ::: "+this.IUD_FLAG);
	
	//전표발행에서 호출했을 경우
	if(this.GUBUN == "SLIP"){
		
		var nRow = this.dsList.addRow();

		//귀속부서
		//this.ccfCD_DEPT.form.CDTextBox.set_value(this.getOwnerFrame().CD_DEPT);
		//this.ccfCD_DEPT.form.DSTextBox.set_value(this.getOwnerFrame().DS_DEPT);
		
		//계정코드
		this.ccfCD_ACNT.form.CDTextBox.set_value(this.getOwnerFrame().CD_ACCOUNT);
		this.ccfCD_ACNT.form.DSTextBox.set_value(this.getOwnerFrame().DS_ACCOUNT);
		
		//거래처
		this.ccfCD_VENDOR.form.CDTextBox.set_value(this.getOwnerFrame().CD_VENDOR);
		this.ccfCD_VENDOR.form.DSTextBox.set_value(this.getOwnerFrame().DS_VENDOR);
		
		trace(" 부가세 팝업 파라미터 TY_SALEBUY :: "+this.getOwnerFrame().TY_SALEBUY);
		
		this.dsList.setColumn(nRow, "TY_SALEBUY", this.getOwnerFrame().TY_SALEBUY);	//거래구분
		this.dsList.setColumn(nRow, "DS_REM"	, this.getOwnerFrame().DS_REM);			//비고
		this.dsList.setColumn(nRow, "DT_PROOF"	, this.getOwnerFrame().DT_PROOF);		//회계일자(증빙일자)
		this.dsList.setColumn(nRow, "DT_ACCOUNT", this.getOwnerFrame().DT_ACCOUNT);	//회계일자
		this.dsList.setColumn(nRow, "TY_VENDOR"	, this.getOwnerFrame().TY_VENDOR);		//거래처구분
		this.dsList.setColumn(nRow, "NO_SJC"	, this.getOwnerFrame().NO_SJC);			//사업자번호
		this.dsList.setColumn(nRow, "AM_SUPPLY"	, this.getOwnerFrame().AM_SUPPLY);		//금액

		if(this.getOwnerFrame().TY_SALEBUY == "O"){	//거래구분이 매출일 경우
			if(this.getOwnerFrame().CD_DEPT_ACNT_BON == this.getOwnerFrame().CD_DEPT){	//본사귀속부서코드,귀속부서 코드가 같을경우
				this.dsList.setColumn(nRow, "CK_BONSA"	, "Y");
			}
		}else{
			//귀속부서
			this.ccfCD_DEPT.form.CDTextBox.set_value(this.getOwnerFrame().CD_DEPT);
			this.ccfCD_DEPT.form.DSTextBox.set_value(this.getOwnerFrame().DS_DEPT);
		}
		
		var amVat = 0;
		if(this.gfnIsNull(this.getOwnerFrame().TY_SALEBUY)){	//처음 부가세 팝업 띄었을 경우 기본 10프로
			var amSupply = nexacro.toNumber(this.getOwnerFrame().AM_SUPPLY,0);
			amVat = nexacro.round(amSupply / 10, 0);
		}else{
			amVat = this.getOwnerFrame().AM_VAT;
		}
		
		trace("### 부가세팝업 부가세금액 :: "+this.getOwnerFrame().AM_VAT);
		trace("### 부가세팝업 부가세율 :: "+this.getOwnerFrame().VAT_RATE);
		trace("### 부가세팝업 amVat :: "+amVat);

		var sSaleBuy = (this.getOwnerFrame().TY_CRDR == "C") ? "O" : "I";// (대변->매출)
		trace("TY_SALEBUY 수정 함 대변이면 매출->" + sSaleBuy);
		this.dsList.setColumn(nRow, "TY_SALEBUY"	, sSaleBuy);
		
		var tyIssue = this.getOwnerFrame().TY_ISSUE;
		var ckOmit  = this.getOwnerFrame().CK_OMIT;
		this.dsList.setColumn(nRow, "AM_VAT"	, amVat);										//부가세	
		//this.dsList.setColumn(nRow, "TY_ISSUE"	, (this.gfnIsNull(tyIssue) ? "P" : tyIssue));	//발행구분(E:전자발행|P:일반발행)
		this.dsList.setColumn(nRow, "TY_ISSUE"	, (this.getOwnerFrame().TY_CRDR == "C") ? "E" : (this.gfnIsNull(tyIssue) ? "P" : tyIssue));	//발행구분(E:전자발행|P:일반발행)
		this.dsList.setColumn(nRow, "CK_OMIT"	, (this.gfnIsNull(ckOmit)  ? "N" : ckOmit));	//누락여부
		this.dsList.setColumn(nRow, "VAT_RATE"	, this.getOwnerFrame().VAT_RATE);				//부가세율

		var fileDir = "";
		if(this.gfnIsNull(this.CD_SLIP)){
			fileDir = this.getOwnerFrame().P_FILE_DIR;
		}else{
			fileDir = this.CD_SLIP;
		}
		this.dsList.setColumn(nRow, "FILE_DIR"	, fileDir);				//첨부파일 경로
		
		//컴포넌트 셋팅
		this.fnCompSetting();
		
		trace("@@@ 증빙선택 코드 :: "+this.getOwnerFrame().CD_PROOF);
		trace("@@@ 증빙선택 명 :: "+this.getOwnerFrame().DS_PROOF);
		
		if(!this.gfnIsNull(this.getOwnerFrame().CD_PROOF)){
			//증빙선택
			this.ccfCD_PROOF.form.CDTextBox.set_value(this.getOwnerFrame().CD_PROOF);
			this.ccfCD_PROOF.form.DSTextBox.set_value(this.getOwnerFrame().DS_PROOF);
			
			if(this.getOwnerFrame().YN_VATBGJE == "Y"){	//세금계산서(매입세액불공제), 신용카드(매입세액불공제)
				this.ccboTY_VATBGJE.set_enable(true);
			}else{
				this.ccboTY_VATBGJE.set_enable(false);
			}
		}
		
		//카드셋팅
		this.fnCreditSetting();
		
		//불공제사유
		this.ccboTY_VATBGJE.set_value(this.getOwnerFrame().TY_VATBGJE);
		
		if(!this.gfnIsNull(this.getOwnerFrame().NO_CREDIT)){
			//신용카드일때
			if(this.getOwnerFrame().CD_PROOF == "16" || this.getOwnerFrame().CD_PROOF == "17" || this.getOwnerFrame().CD_PROOF == "18" || this.getOwnerFrame().CD_PROOF == "19"){
				this.ccfNO_CREDIT.form.CDTextBox.set_value(this.getOwnerFrame().NO_CREDIT);
				//카드번호 코드파인더 실행
				this.ccfNO_CREDIT.form.CDTextBox_onchanged(this.ccfNO_CREDIT.form.CDTextBox, nexacro.ChangeEventInfo);
			}
			
			//현금영수증일때
			if(this.getOwnerFrame().CD_PROOF == "22"){
				this.txtNO_CREDIT.set_value(this.getOwnerFrame().NO_CREDIT);
			}
		}		
		
		//enable 처리
		this.fnEnableComp();
	}
};

//증빙선택 코드파인더 셋팅
this.fnSetCodeFind = function (tySaleBuy)
{
	var cdType = "V10";	//매입
	if(tySaleBuy == "O"){
		cdType = "V11";	//매입
	}
	
	this.ccfCD_PROOF.CodeFindName = "CF_CODE_DH_"+cdType;
};

//컴포넌트 셋팅
this.fnCompSetting = function ()
{
	var tySaleBuy = this.dsList.getColumn(this.dsList.rowposition, "TY_SALEBUY");	//거래구분
	
	//증빙선택 코드파인더 셋팅
	//this.fnSetCodeFind(tySaleBuy);
	
	var ynVatBgje = this.dsList.getColumn(this.dsList.rowposition, "YN_VATBGJE");
	
	this.ccboTY_VATBGJE.set_enable(false);
	if(ynVatBgje == "Y"){
		this.ccboTY_VATBGJE.set_enable(true);
	}

};

//데이터 체크 
this.fnCheckResultData = function ()
{
	var rPos = this.dsList.rowposition;
	if(this.gfnIsNull(this.dsList.getColumn(rPos, "CD_DEPT_ACNT"))){
		this.gfnAlert("발의부서를 입력하세요.");
		this.ccfCD_DEPT.form.CDTextBox.setFocus();
		return false;
	}
	
	if(this.gfnIsNull(this.dsList.getColumn(rPos, "CD_ACCOUNT"))){
		this.gfnAlert("계정코드를 입력하세요.");
		this.ccfCD_ACNT.form.CDTextBox.setFocus();
		return false;
	}
	
	if(this.gfnIsNull(this.dsList.getColumn(rPos, "CD_PROOF"))){
		this.gfnAlert("증빙선택을 입력하세요.");
		this.ccfCD_PROOF.form.CDTextBox.setFocus();
		return false;
	}
	
	var cdProof = this.dsList.getColumn(rPos, "CD_PROOF");

	if(cdProof == "13" || cdProof == "19"){
		if(this.gfnIsNull(this.dsList.getColumn(rPos, "TY_VATBGJE"))){
			this.gfnAlert("불공제사유를 선택하세요.");
			this.ccboTY_VATBGJE.setFocus();
			return false;
		}
	}
	
	if(this.gfnIsNull(this.dsList.getColumn(rPos, "DT_PROOF"))){
		this.gfnAlert("증빙일자을 입력하세요.");
		this.calDT_PROOF.setFocus();
		return false;
	}

	if(nexacro.toNumber(this.dsList.getColumn(rPos, "AM_SUPPLY"), 0) == 0){
		this.gfnAlert("공급가액을 입력하세요.");
		this.mskAM_SUPPLY.setFocus();
		return false;
	}
	
	var tySaleBuy  = this.dsList.getColumn(rPos, "TY_SALEBUY");		//거래구분
	var cdProof = this.dsList.getColumn(rPos, "CD_PROOF");	//증빙선택
	
		
	if(!this.gfnIsNull(this.getOwnerFrame().P_ISSUE_ID)){
		if(cdProof == "16" || cdProof == "17" || cdProof == "18" || cdProof == "19" ||
		   cdProof == "20" || cdProof == "21" || cdProof == "22" || cdProof == "23" || cdProof == "24" || cdProof == "25"){
		   this.gfnAlert("전자세금계산서는 세금계산서 증빙코드를 선택해야 합니다.");
			this.ccfCD_PROOF.form.CDTextBox.setFocus();
			return false;
		}	
	}
	
	var vatRate = nexacro.toNumber(this.dsList.getColumn(rPos, "VAT_RATE") ,0);
	if(vatRate > 0){
		if(nexacro.toNumber(this.dsList.getColumn(rPos, "AM_VAT"), 0) == 0){
			if (!confirm("선택된 증빙이 부가세액 입력항목입니다.\n\n부가세를 \"0\"으로 처리하시겠습니까 ?")) {
				this.mskAM_VAT.setFocus();
				return false;
			}		
		}
	}
	
	if(this.gfnIsNull(this.dsList.getColumn(rPos, "DS_REM"))){
		this.gfnAlert("적요를 입력하세요.");
		this.txtDS_REM.setFocus();
		return false;
	}
	
	return true;	
};

//거래처구분 변경 이벤트
this.divData_ccboTY_VENDOR_onitemchanged = function(obj:nexacro.Combo,e:nexacro.ItemChangeEventInfo)
{
	//거래처 코드파인더 클리어
	this.ccfCD_VENDOR.form.fnCodeFindClear();
	this.dsList.setColumn(this.dsList.rowposition, "NO_SJC", "");	//사업자번호 초기화
	
};

this.fnEnableComp = function()
{
	this.ccfCD_DEPT.form.set_readonly(true);	//발의부서
	this.ccfCD_ACNT.form.set_readonly(true);	//계정
	this.ccfCD_VENDOR.form.set_readonly(true);	//거래처
	
	if(this.GUBUN == "SLIP" && (this.IUD_FLAG == "I" || this.IUD_FLAG == "U")){
		
		this.mskAM_SERVICE.set_enable(false);		//봉사료
		this.btnFile.set_enable(true);				//첨부 버튼
		
		if(!this.gfnIsNull(this.dsList.getColumn(this.dsList.rowposition, "CD_PROOF"))){
			var vatRate = nexacro.toNumber(this.dsList.getColumn(this.dsList.rowposition, "VAT_RATE") ,0);	//부가세율
			if(vatRate == 0){
				this.mskAM_VAT.set_enable(false);			//부가세
			}else{
				this.mskAM_VAT.set_enable(true);			//부가세
			}
		}else{
			this.mskAM_VAT.set_enable(false);			//부가세
		}
	}
	
	
	// 집행통화 KRW 일때만 공급가액 수정가능
	if(this.getOwnerFrame().CD_EXEC_CURR != "KRW"){
		this.mskAM_SUPPLY.set_enable(false);
	}else{
		this.mskAM_SUPPLY.set_enable(true);
	}

	//전자세금계산서일경우
	if(!this.gfnIsNull(this.getOwnerFrame().P_ISSUE_ID)){
		//this.ccfCD_ACNT.form.set_readonly(false);	//계정	
		this.rdoTY_SALEBUY.set_enable(false);		//거래구분
		this.rdoTY_ISSUE.set_enable(false);			//발행구분
		this.calDT_PROOF.set_enable(false);			//증빙일자
		this.mskAM_SUPPLY.set_enable(false);		//공급가액
		this.mskAM_VAT.set_enable(false);			//부가세
		this.btnFile.set_enable(true);				//첨부 버튼
	}
	
	//전표발행에서 호출(전체 비활성 처리)
	if(this.GUBUN == "SLIP" && (this.IUD_FLAG == "A" || this.IUD_FLAG == "S")){
		this.gfnSetAllEnable(this.divData.form, false);	
		
// 		var cdApp = this.getOwnerFrame().P_CD_APP;
// 		if(!this.gfnIsNull(cdApp)){
	
		// 상신상태ST_APRV 공통코드 DZ - DZ_APRV
		// 1임시저장	2결재상신	3결재중	4결재완료	5반려	6상신취소	7작성취소
 		var stAprv = this.getOwnerFrame().P_ST_APRV;
 		if(!this.gfnIsNull(stAprv)){
			if(stAprv == "4"){	//결재상태가 결재완료가 아닐경우
				this.btnFile.set_enable(false);
			}else{
				this.btnFile.set_enable(true);
			}
		}else{
			this.btnFile.set_enable(true);
		}
		
		//자동전표일 경우
		if(!this.gfnIsNull(this.getOwnerFrame().P_CD_AUTOSLIP)){
			this.btnFile.set_enable(false);
		}
	}

	//부과세관리에서 호출(전체 비활성 처리)
	if(this.GUBUN == "VATCONTROL"){
		this.gfnSetAllEnable(this.divData.form, false);
	}
	
	//데이터가 없을경우
	if(this.dsList.rowcount == 0){
		this.btnFile.set_enable(false);
	}
}

//부가세 계산
this.fnVatCal = function (amSupply)
{
	trace("부가세 계산 들어온다");

	var tySaleBuy = this.dsList.getColumn(this.dsList.rowposition, "TY_SALEBUY");	//거래구분
	var cdProof   = this.dsList.getColumn(this.dsList.rowposition, "CD_PROOF");	//증빙선택
	//var amSupply  = nexacro.toNumber(this.getOwnerFrame().AM_SUPPLY, 0);	//공급가액
	var vatRate   = nexacro.toNumber(this.dsList.getColumn(this.dsList.rowposition, "VAT_RATE") ,0);	//부가세율
	var ynVatBgje = this.dsList.getColumn(this.dsList.rowposition, "YN_VATBGJE");	//불공제여부
	
// 	if(ynVatBgje == "Y"){
// 		var calAmSupply = nexacro.round(amSupply / vatRate, 0); 
// 		var amVat = nexacro.floor(amSupply - calAmSupply, 0); 
// 		
// 		trace("## 불공제 calAmSupply :: "+calAmSupply);
// 		trace("## 불공제 amVat :: "+amVat);
// 		
// 		this.dsList.setColumn(this.dsList.rowposition, "AM_SUPPLY", calAmSupply);
// 		this.dsList.setColumn(this.dsList.rowposition, "AM_VAT", amVat);
// 	}else {
		var amVat = (vatRate == 0 ? 0 : this.fnGetTrunc(amSupply / vatRate,1));
		trace("## else amVat :: "+amVat);
		
		this.dsList.setColumn(this.dsList.rowposition, "AM_SUPPLY", amSupply);
		this.dsList.setColumn(this.dsList.rowposition, "AM_VAT", amVat);
	//}

};

//카드 셋팅
this.fnCreditSetting = function ()
{
	var tySaleBuy = this.dsList.getColumn(this.dsList.rowposition, "TY_SALEBUY");	//거래구분
	var cdProof   = this.dsList.getColumn(this.dsList.rowposition, "CD_PROOF");	//증빙선택
	
	trace("카드셋팅 들어옴!!! ");
	
	trace("카드셋팅 tySaleBuy :: "+tySaleBuy);
	trace("카드셋팅 cdProof :: "+cdProof);
	
	if(tySaleBuy == "I"){
		if(cdProof == "16" || cdProof == "17" || cdProof == "18" || cdProof == "19"){	//신용카드(개인제외)
			this.staNO_CREDIT.set_text("카드번호");
			this.ccfNO_CREDIT.set_visible(true);
			this.txtNO_CREDIT.set_visible(false);
			this.ccfNO_CREDIT.form.set_readonly(false);
			
			trace("카드 코드파인드 리드온리 false !!");
		}else if(cdProof == "22"){	//현금영수증
			this.staNO_CREDIT.set_text("현금영수증");
			this.ccfNO_CREDIT.set_visible(false);
			this.txtNO_CREDIT.set_visible(true);
		}else{
			this.staNO_CREDIT.set_text("카드번호");
			this.ccfNO_CREDIT.set_visible(true);
			this.ccfNO_CREDIT.form.set_readonly(true);
			this.txtNO_CREDIT.set_visible(false);
			
			trace("카드 코드파인드 리드온리 true !!");
		}
	}else{
		this.staNO_CREDIT.set_text("카드번호");
		this.ccfNO_CREDIT.set_visible(true);
		this.ccfNO_CREDIT.form.set_readonly(true);
		this.txtNO_CREDIT.set_visible(false);
		
		trace("카드 코드파인드 리드온리 true2 !!");
	}
};

this.btnFile_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if(!this.gfnIsNull(this.CD_SLIP)){
		cdDir = this.CD_SLIP;
	}else{
		if(this.gfnIsNull(this.dsList.getColumn(this.dsList.rowposition, "FILE_DIR"))){
			cdDir = "TEMP_"+this.gfnGetDate("milli");
		}else{
			cdDir = this.dsList.getColumn(this.dsList.rowposition, "FILE_DIR");
		}
	}
	
	trace("## gfnGetDate :: "+this.gfnGetDate("milli"));
	
	trace("## cdDir :: "+cdDir);

	FileManager = {};
	FileManager.CD_GUBUN = "DH03";
	FileManager.CD_DIR = [cdDir];
	FileManager.IS_READONLY = false;
	this.gfnFileManager(FileManager, "fnFileCallback");
};


this.fnFileCallback = function(strID, val) {
	// val.IsChange : 변경여부, val.Cnt : 파일개수
	
	trace("## val :: "+val);
		
	// 파일개수를 다시 셋팅
	//this.dsList.set_enableevent(false);
	if(val.Cnt == 0) {
		this.dsList.setColumn(this.dsList.rowposition, "FILE_DIR", "");
	} else {
		if(this.gfnIsNull(this.CD_SLIP)){
			this.dsList.setColumn(this.dsList.rowposition, "FILE_DIR", FileManager.CD_DIR);
		}
	}
	
	trace("## 첨부파일 건수 :: "+val.Cnt);
	trace("## FILE_DIR :: "+this.dsList.getColumn(this.dsList.rowposition, "FILE_DIR"));
	
	if(val.IsChange){
		this.txtFILE.set_value(val.Cnt + " 건");
	}
	//this.dsList.setColumn(this.dsList.rowposition, "URL_PROOF", "첨부(" + val.Cnt + ")");
	//this.dsList.set_enableevent(true);
};

this.fnClose = function ()
{
	//임시파일 업로드 여부 체크
/*	if(this.fnFileCheck()){
		this.vDeleteFlag = true;
		this.fnFileSelect();	//첨부파일 조회해서 삭제 처리
		return false;
	}*/
};

//임시파일 업로드 여부 체크
this.fnFileCheck = function ()
{
	var mFileDir = this.getOwnerFrame().P_FILE_DIR;
	if(this.gfnIsNull(mFileDir)){
		var fileDir = this.dsList.getColumn(this.dsList.rowposition, "FILE_DIR");
		
		if(!this.gfnIsNull(fileDir) && fileDir.indexOf("TEMP") > -1){			
			return true;
		}	
	}
	return false;
};

//파일 조회
this.fnFileSelect = function ()
{	
	this.dsFileSelect = new Dataset();
	this.dsFileSelect.addColumn("CD_GUBUN", "string");
	this.dsFileSelect.addColumn("CD_REF1", "string");

	this.dsFileSelect.clearData();
	this.dsFileSelect.addRow();
	this.dsFileSelect.setColumn(0, "CD_GUBUN", "DH03");     // 첨부파일 구분
	
	if(this.gfnIsNull(this.dsList.getColumn(this.dsList.rowposition, "FILE_DIR"))){
		if(this.GUBUN == "VATCONTROL"){
			this.dsFileSelect.setColumn(0, "CD_REF1", this.CD_SLIP);
		}else{
			if(this.IUD_FLAG == "I" || this.IUD_FLAG == "U"){
				this.dsFileSelect.setColumn(0, "CD_REF1", "ZZZ");		//파일경로 구분
			}else{
				this.dsFileSelect.setColumn(0, "CD_REF1", this.CD_SLIP);
			}
		}
	}else{
		this.dsFileSelect.setColumn(0, "CD_REF1", this.dsList.getColumn(this.dsList.rowposition, "FILE_DIR"));		//파일경로 구분
	}
	
	var strSvcId    = "fileSelect";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "fileSelect=dsFileSelect";
	var outData     = "dsFileList=fileSelect0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};

//파일삭제
this.fnFileDelete = function ()
{
	this.dsDeleteList.clearData();
	
	// 체크된 내역에 대해서만 삭제
	for( var i=0; i<this.dsFileList.rowcount;i++)
	{		
		var nrow = this.dsDeleteList.addRow();	
		this.dsDeleteList.setColumn(nrow, "filepath", this.dsFileList.getColumn(i, "DS_PATH"));
		this.dsDeleteList.setColumn(nrow, "filename", this.dsFileList.getColumn(i, "NM_FILE"));
	}
	
	var strSvcId    = "deletefile";
	var strSvcType  = "file/deleteFile";	//
	var inProc		= "";
	var inData      = "input=dsDeleteList";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnDeleteCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};

this.fnDeleteCallback = function(svcID, errorCode, errorMsg) {
	if(svcID == "deletefile") {
		if (errorCode == 0) {
			this.fnDelete();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	else if(svcID == "fileDelete") {
	
		this.getParentContext().close();
	}
}

this.fnDelete = function() {
	
	this.dsFileSave.clearData();

	var nrow = this.dsFileSave.addRow();	
	this.dsFileSave.setColumn(nrow, "TY_SAVE" , "D");
	this.dsFileSave.setColumn(nrow, "NO_SEQ"  , "0");
	this.dsFileSave.setColumn(nrow, "CD_GUBUN", "DH03");
	this.dsFileSave.setColumn(nrow, "CD_REF1" , this.dsList.getColumn(this.dsList.rowposition, "FILE_DIR"));	
	
	if (this.dsFileSave.rowcount == 0) return;
		
	var strSvcId    = "fileDelete";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "fileDelete=dsFileSave";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnDeleteCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};

this.btnDel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.getParentContext().close("DEL");
};
// 원단위 절사
this.fnGetTrunc = function(amVal, vCnt){
	var returnVal = this.gfnNvl(amVal, 0);
	if(returnVal > 0){
		returnVal = Math.floor(amVal/vCnt) * vCnt;
	}else{
		returnVal = Math.ceil(amVal/vCnt) * vCnt;
	}
	return returnVal;
}]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DHVPR_VAT_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo</Col>
            <Col id="SP">DZXPR_COMBO_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo2</Col>
            <Col id="SP">DZXPR_COMBO_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">fileInfo</Col>
            <Col id="SP">DZUPR_FILEMANAGER_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">fileSelect</Col>
            <Col id="SP">DZZPR_FILEMANAGER_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">fileDelete</Col>
            <Col id="SP">DZZPR_FILEMANAGER_SAVE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_VATBGJE"/>
      <Dataset id="dsTY_VENDOR"/>
      <Dataset id="dsFileList"/>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divData.form.ccfCD_DEPT.form.CDTextBox" propid="value" datasetid="dsList" columnid="CD_DEPT_ACNT"/>
      <BindItem id="item1" compid="divData.form.ccfCD_ACNT.form.CDTextBox" propid="value" datasetid="dsList" columnid="CD_ACCOUNT"/>
      <BindItem id="item2" compid="divData.form.rdoTY_SALEBUY" propid="value" datasetid="dsList" columnid="TY_SALEBUY"/>
      <BindItem id="item5" compid="divData.form.mskAM_SUPPLY" propid="value" datasetid="dsList" columnid="AM_SUPPLY"/>
      <BindItem id="item6" compid="divData.form.mskAM_VAT" propid="value" datasetid="dsList" columnid="AM_VAT"/>
      <BindItem id="item7" compid="divData.form.txtDS_REM" propid="value" datasetid="dsList" columnid="DS_REM"/>
      <BindItem id="item9" compid="divData.form.ccboTY_VENDOR" propid="value" datasetid="dsList" columnid="TY_VENDOR"/>
      <BindItem id="item10" compid="divData.form.ccfCD_VENDOR.form.CDTextBox" propid="value" datasetid="dsList" columnid="CD_VENDOR"/>
      <BindItem id="item11" compid="divData.form.txtNO_SJC" propid="value" datasetid="dsList" columnid="NO_SJC"/>
      <BindItem id="item12" compid="divData.form.ccfNO_CREDIT.form.CDTextBox" propid="value" datasetid="dsList" columnid="NO_CREDIT"/>
      <BindItem id="item13" compid="divData.form.chkCK_BONSA" propid="value" datasetid="dsList" columnid="CK_BONSA"/>
      <BindItem id="item14" compid="divData.form.rdoTY_ISSUE" propid="value" datasetid="dsList" columnid="TY_ISSUE"/>
      <BindItem id="item15" compid="divData.form.ccboTY_VATBGJE" propid="value" datasetid="dsList" columnid="TY_VATBGJE"/>
      <BindItem id="item16" compid="divData.form.mskAM_SERVICE" propid="value" datasetid="dsList" columnid="AM_SERVICE"/>
      <BindItem id="item17" compid="divData.form.calDT_PROOF" propid="value" datasetid="dsList" columnid="DT_PROOF"/>
      <BindItem id="item4" compid="divData.form.ccfCD_PROOF.form.CDTextBox" propid="value" datasetid="dsList" columnid="CD_PROOF"/>
      <BindItem id="item3" compid="divData.form.ccfCD_DEPT.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_DEPT_ACNT"/>
      <BindItem id="item8" compid="divData.form.ccfCD_ACNT.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_ACCOUNT"/>
      <BindItem id="item18" compid="divData.form.ccfCD_VENDOR.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_VENDOR"/>
      <BindItem id="item19" compid="divData.form.ccfCD_PROOF.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_PROOF"/>
      <BindItem id="item20" compid="divData.form.txtNO_CREDIT" propid="value" datasetid="dsList" columnid="NO_CREDIT"/>
      <BindItem id="item21" compid="divData.form.ccfNO_CREDIT.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_CREDIT"/>
    </Bind>
  </Form>
</FDL>
