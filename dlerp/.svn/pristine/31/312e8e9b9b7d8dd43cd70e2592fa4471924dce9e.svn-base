<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="300" height="220" titletext="New Form" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divData" taborder="0" left="0" top="0" bottom="0" right="0" cssclass="div_DATA_Bg" text="">
          <Layouts>
            <Layout>
              <Static id="staTITLE" taborder="0" text="SAP거래처코드 생성" left="0" top="0" width="100.00%" height="30" cssclass="sta_TITLE_Bg" textAlign="left"/>
              <Static id="staSN_ID" taborder="1" text="SN_ID" left="0" top="40" width="87" height="30" cssclass="sta_WF_tablelabel" textAlign="right"/>
              <Static id="staIN_STCD2" taborder="2" text="사업자번호" left="0" top="69" width="87" height="30" cssclass="sta_WF_tablelabel" textAlign="right"/>
              <Static id="staIN_NAME1" taborder="3" text="거래처명" left="0" top="98" width="87" height="30" cssclass="sta_WF_tablelabel" textAlign="right"/>
              <Static id="staBg1" taborder="4" left="86" top="40" right="0.00%" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staBg2" taborder="5" left="86" top="69" right="0.00%" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staBg3" taborder="6" left="86" top="98" right="0.00%" height="30" cssclass="sta_WF_tablebg"/>
              <Edit id="edtSN_ID" taborder="7" left="95" top="45" right="10" height="20" readonly="true"/>
              <Edit id="edtIN_STCD2" taborder="8" left="95" top="74" right="10" height="20" readonly="true"/>
              <Edit id="edtIN_NAME1" taborder="8" left="95" top="103" right="10" height="20" readonly="true"/>
              <Button id="btnOk" taborder="9" text="확인" left="23.33%" top="156" width="60" height="20" onclick="divData_btnOk_onclick"/>
              <Button id="btnCancel" taborder="10" text="취소" left="53.33%" top="156" width="60" height="20" onclick="divData_btnCancel_onclick"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();

	// 이전 화면에서 데이터 받기.
	this.dsList.setColumn(0, "SN_ID", this.getOwnerFrame().SN_ID);
	this.dsList.setColumn(0, "IN_STCD2", this.getOwnerFrame().IN_STCD2);
	this.dsList.setColumn(0, "IN_NAME1", this.getOwnerFrame().IN_NAME1);

	this.fnSelect();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	this.FormBtns.Select.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {

};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {	
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("SN_ID", "string");

	this.dsExec = new Dataset();
	this.dsExec.addColumn("SN_ID", "string");
	this.dsExec.addColumn("RTNCD", "string");
	this.dsExec.addColumn("RTNMSG", "string");
	this.dsExec.addColumn("RTNCD1", "string");

}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
  /*
  *	조회 버튼
  */
this.fnSelect = function() {
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
      
	this.dsSelect.setColumn(0, "SN_ID", this.dsList.getColumn(0, "SN_ID"));

	// SAP 호출
	var strSvcId    = "select";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList1=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}
/************************************************************************
 * Validate
 ************************************************************************/

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if(svcID == "select"){
	}
	else if (svcID == "sap") {
		if(this.dsExport.rowcount > 0) {
			this.fnExec();
		}else
		{
			this.gfnAlert(errorMsg);
		}
		
	}	
	else if (svcID == "exec") {
		if(errorCode == 0) {
			this.getParentContext().close(true);
		}else
		{
			this.gfnAlert(errorMsg);
		}		
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
 
this.fnSap = function() {

	this._dsProcSap.clearData();
	var nrow = this._dsProcSap.addRow();
	this._dsProcSap.setColumn(nrow, "TARGET", "select");
	this._dsProcSap.setColumn(nrow, "SP", "ZVENDOR02_0012");
	
	this.dsSelectSap.clearData();
	nrow = this.dsSelectSap.addRow();
	
	// IN 파라미터 셋팅
	this.dsSelectSap.setColumn(nrow, "IN_AKONT", this.dsList1.getColumn(0, "IN_AKONT"));
	this.dsSelectSap.setColumn(nrow, "IN_CJKTW", this.dsList1.getColumn(0, "IN_CJKTW"));
	this.dsSelectSap.setColumn(nrow, "IN_EKGRP", this.dsList1.getColumn(0, "IN_EKGRP"));
	this.dsSelectSap.setColumn(nrow, "IN_FDGRV", this.dsList1.getColumn(0, "IN_FDGRV"));
	this.dsSelectSap.setColumn(nrow, "IN_FITYP", this.dsList1.getColumn(0, "IN_FITYP"));
	this.dsSelectSap.setColumn(nrow, "IN_INTAD", this.dsList1.getColumn(0, "IN_INTAD"));
	this.dsSelectSap.setColumn(nrow, "IN_J_1KFREPRE", this.dsList1.getColumn(0, "IN_J_1KFREPRE"));
	this.dsSelectSap.setColumn(nrow, "IN_J_1KFTBUS", this.dsList1.getColumn(0, "IN_J_1KFTBUS"));
	this.dsSelectSap.setColumn(nrow, "IN_J_1KFTIND", this.dsList1.getColumn(0, "IN_J_1KFTIND"));
	this.dsSelectSap.setColumn(nrow, "IN_KTOKK", this.dsList1.getColumn(0, "IN_KTOKK"));
	this.dsSelectSap.setColumn(nrow, "IN_LFURL", this.dsList1.getColumn(0, "IN_LFURL"));
	this.dsSelectSap.setColumn(nrow, "IN_NAME1", this.dsList1.getColumn(0, "IN_NAME1"));
	this.dsSelectSap.setColumn(nrow, "IN_ORT01", this.dsList1.getColumn(0, "IN_ORT01"));
	this.dsSelectSap.setColumn(nrow, "IN_PSTLZ", this.dsList1.getColumn(0, "IN_PSTLZ"));
	this.dsSelectSap.setColumn(nrow, "IN_REGIO", this.dsList1.getColumn(0, "IN_REGIO"));
	this.dsSelectSap.setColumn(nrow, "IN_SORTL", this.dsList1.getColumn(0, "IN_SORTL"));
	this.dsSelectSap.setColumn(nrow, "IN_STCD1", this.dsList1.getColumn(0, "IN_STCD1"));
	this.dsSelectSap.setColumn(nrow, "IN_STCD2", this.dsList1.getColumn(0, "IN_STCD2"));
	this.dsSelectSap.setColumn(nrow, "IN_STRAS", this.dsList1.getColumn(0, "IN_STRAS"));
	this.dsSelectSap.setColumn(nrow, "IN_TELF1", this.dsList1.getColumn(0, "IN_TELF1"));
	this.dsSelectSap.setColumn(nrow, "IN_TELF2", this.dsList1.getColumn(0, "IN_TELF2"));
	this.dsSelectSap.setColumn(nrow, "IN_TLFNS", this.dsList1.getColumn(0, "IN_TLFNS"));
	this.dsSelectSap.setColumn(nrow, "IN_TLFXS", this.dsList1.getColumn(0, "IN_TLFXS"));
	this.dsSelectSap.setColumn(nrow, "IN_ZTERM", this.dsList1.getColumn(0, "IN_ZTERM"));

	// SAP 호출
	var strSvcId    = "sap";
	var strSvcType  = "sap";
	var inProc		= "_dsProcSap";
	var inData      = "select=dsSelectSap";
	var outData     = "dsExport=export";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}


this.fnExec = function() {

	this.dsExec.clearData();
	this.dsExec.addRow();
	
	this.dsExec.setColumn(0, "SN_ID", this.dsList.getColumn(this.dsList.rowposition, "SN_ID"));
	this.dsExec.setColumn(0, "RTNCD", this.dsExport.getColumn(0, "RTNCD"));
	this.dsExec.setColumn(0, "RTNMSG", this.dsExport.getColumn(0, "RTNMSG"));
	this.dsExec.setColumn(0, "RTNCD1", this.dsExport.getColumn(0, "RTNCD1"));
	
	if (this.dsExec.rowcount == 0) return;
	
	var strSvcId    = "exec";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "exec=dsExec";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}


// 확인 버튼 클릭
this.divData_btnOk_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if(this.dsList1.rowcount > 0) {
		this.fnSap();
	}
	
};

// 취소 버튼 클릭
this.divData_btnCancel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	// this.close()가 작동하지 않았고, 
	// 부모의 callback 함수로 데이터를 넘겨주기 위해 작성되었습니다.
	this.getParentContext().close(false);
};
]]></Script>
    <Objects>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">exec</Col>
            <Col id="SP">DQDPR_VENDOR_IF_RETURN_UPDATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DQDPR_VENDOR_IF_SELECT_ID</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsList">
        <ColumnInfo>
          <Column id="SN_ID" type="STRING" size="256"/>
          <Column id="IN_STCD2" type="STRING" size="256"/>
          <Column id="IN_NAME1" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="SN_ID"/>
            <Col id="IN_STCD2"/>
            <Col id="IN_NAME1"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="_dsProcSap">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsExport"/>
      <Dataset id="dsList1"/>
      <Dataset id="dsSelectSap">
        <ColumnInfo>
          <Column id="IN_AKONT" type="STRING" size="256"/>
          <Column id="IN_CJKTW" type="STRING" size="256"/>
          <Column id="IN_EKGRP" type="STRING" size="256"/>
          <Column id="IN_FDGRV" type="STRING" size="256"/>
          <Column id="IN_FITYP" type="STRING" size="256"/>
          <Column id="IN_INTAD" type="STRING" size="256"/>
          <Column id="IN_J_1KFREPRE" type="STRING" size="256"/>
          <Column id="IN_J_1KFTBUS" type="STRING" size="256"/>
          <Column id="IN_J_1KFTIND" type="STRING" size="256"/>
          <Column id="IN_KTOKK" type="STRING" size="256"/>
          <Column id="IN_LFURL" type="STRING" size="256"/>
          <Column id="IN_NAME1" type="STRING" size="256"/>
          <Column id="IN_ORT01" type="STRING" size="256"/>
          <Column id="IN_PSTLZ" type="STRING" size="256"/>
          <Column id="IN_REGIO" type="STRING" size="256"/>
          <Column id="IN_SORTL" type="STRING" size="256"/>
          <Column id="IN_STCD1" type="STRING" size="256"/>
          <Column id="IN_STCD2" type="STRING" size="256"/>
          <Column id="IN_STRAS" type="STRING" size="256"/>
          <Column id="IN_TELF1" type="STRING" size="256"/>
          <Column id="IN_TELF2" type="STRING" size="256"/>
          <Column id="IN_TLFNS" type="STRING" size="256"/>
          <Column id="IN_TLFXS" type="STRING" size="256"/>
          <Column id="IN_ZTERM" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divData.form.edtSN_ID" propid="value" datasetid="dsList" columnid="SN_ID"/>
      <BindItem id="item1" compid="divData.form.edtIN_STCD2" propid="value" datasetid="dsList" columnid="IN_STCD2"/>
      <BindItem id="item2" compid="divData.form.edtIN_NAME1" propid="value" datasetid="dsList" columnid="IN_NAME1"/>
    </Bind>
  </Form>
</FDL>
