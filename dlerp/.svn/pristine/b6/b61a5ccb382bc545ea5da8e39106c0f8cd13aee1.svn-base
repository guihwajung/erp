<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="410" height="270" maxwidth="410" maxheight="360" titletext="기성청구내역(변경사유)" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divData" taborder="0" left="0" top="0" bottom="0" right="0" cssclass="div_DATA_Bg" text="">
          <Layouts>
            <Layout>
              <Static id="staTITLE" taborder="0" text="기성확정사유" left="0" top="0" width="100%" height="30" cssclass="sta_TITLE_Bg" textAlign="center"/>
              <Static id="staCD_SITE" taborder="1" text="현장코드" left="0" top="staTITLE:10" width="87" height="30" cssclass="sta_WF_tablelabel" textAlign="right"/>
              <Static id="staYM_WORK" taborder="2" text="기성년월" left="0" top="staCD_SITE:-1" width="87" height="30" cssclass="sta_WF_tablelabel" textAlign="right"/>
              <Static id="staNO_HADOCONT" taborder="3" text="계약번호" left="0" top="staYM_WORK:-1" width="87" height="30" cssclass="sta_WF_tablelabel" textAlign="right"/>
              <Static id="staCD_VENDOR" taborder="4" text="업체코드" left="0" top="staNO_HADOCONT:-1" width="87" height="30" cssclass="sta_WF_tablelabel" textAlign="right"/>
              <Static id="staRM_RSTOR" taborder="5" text="차이발생사유" left="0" top="staCD_VENDOR:-1" width="87" height="70" cssclass="sta_WF_tablelabel" textAlign="right"/>
              <Static id="staBg1" taborder="6" left="staCD_SITE:-1" top="staTITLE:10" right="0%" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staBg2" taborder="7" left="staYM_WORK:-1" top="staBg1:-1" right="0%" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staBg3" taborder="8" left="staNO_HADOCONT:-1" top="staBg2:-1" right="0%" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staBg4" taborder="9" left="staCD_VENDOR:-1" top="staBg3:-1" right="0%" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staBg5" taborder="10" left="staRM_RSTOR:-1" top="staBg4:-1" right="0%" height="70" cssclass="sta_WF_tablebg"/>
              <Edit id="edtCD_SITE" taborder="11" left="staCD_SITE:5" top="staTITLE:15" width="90" height="20" readonly="true"/>
              <Edit id="edtDS_SITE" taborder="12" left="edtCD_SITE:3" top="staTITLE:15" right="5" height="20" readonly="true"/>
              <Div id="ctclYM_WORK" taborder="13" left="staYM_WORK:5" top="edtCD_SITE:9" width="90" height="20" url="cmm::cmmCalMM.xfdl" enable="false"/>
              <Combo id="ccboNO_DGR" taborder="14" left="ctclYM_WORK:3" top="edtCD_SITE:9" width="90" height="20" innerdataset="dsNO_DGR" codecolumn="NO_DGR" datacolumn="DS_DGR" readonly="true"/>
              <Edit id="edtCD_HADOCONT" taborder="15" left="staNO_HADOCONT:5" top="ctclYM_WORK:9" width="90" height="20" readonly="true"/>
              <Edit id="edtDS_HADOCONT" taborder="16" left="edtCD_HADOCONT:3" top="ctclYM_WORK:9" right="5" height="20" readonly="true"/>
              <Edit id="edtNO_VENDOR" taborder="17" left="staCD_VENDOR:5" top="edtCD_HADOCONT:9" width="90" height="20" readonly="true"/>
              <Edit id="edtDS_VENDOR" taborder="18" left="edtNO_VENDOR:3" top="edtCD_HADOCONT:9" right="5" height="20" readonly="true"/>
              <TextArea id="ctxtRM_RSTOR" taborder="19" left="staRM_RSTOR:5" top="edtNO_VENDOR:9" right="5" height="60" value=""/>
              <Button id="btnOk" taborder="15" text="확인" left="35%" top="staRM_RSTOR:20" width="60" height="20" onclick="divData_btnOk_onclick" cssclass="btnExt"/>
              <Button id="btnCancel" taborder="16" text="취소" left="55%" top="staRM_RSTOR:20" width="60" height="20" onclick="divData_btnCancel_onclick" cssclass="btnExt"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	// 이전 화면에서 데이터 받기.
	this.dsData.setColumn(0, "CD_SITE", this.getOwnerFrame().CD_SITE);
	this.dsData.setColumn(0, "DS_SITE", this.getOwnerFrame().DS_SITE);
	this.dsData.setColumn(0, "YM_WORK", this.getOwnerFrame().YM_WORK);
	this.dsData.setColumn(0, "NO_HADOCONT", this.getOwnerFrame().NO_HADOCONT);
	this.dsData.setColumn(0, "DS_HADOCONT", this.getOwnerFrame().DS_HADOCONT);
	this.dsData.setColumn(0, "CD_VENDOR",  this.getOwnerFrame().CD_VENDOR);
	this.dsData.setColumn(0, "DS_VENDOR", this.getOwnerFrame().DS_VENDOR);
	this.dsData.setColumn(0, "DS_CONTMETHOD", this.getOwnerFrame().DS_CONTMETHOD);
	
	this.dsData.setColumn(0, "CHG_RSN", this.getOwnerFrame().CHG_RSN);
	
	this.fnSetCombo();
	
	if(this.gfnGetConfig("DW", "YN_DGR") != "Y")
	{
		this.divData.form.ccboNO_DGR.set_visible(false);
	}
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	this.FormBtns.Select.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {

};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {	
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsExecute = new Dataset();
	this.dsExecute.addColumn("TY_WRK", "string");
	this.dsExecute.addColumn("ID_USER", "string");
	this.dsExecute.addColumn("CD_SITE", "string");
	this.dsExecute.addColumn("YM_WORK", "string");
	this.dsExecute.addColumn("NO_DGR", "string");
	this.dsExecute.addColumn("NO_HADOCONT", "string");
	this.dsExecute.addColumn("CD_VENDOR", "string");
	this.dsExecute.addColumn("RM_RSTOR", "string");
	this.dsExecute.addColumn("CHG_RSN", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 
 /************************************************************************
 * 콤보 이벤트
 ************************************************************************/
 this.fnSetCombo = function()
 {
	this.dsCombo = new Dataset();
	this.dsCombo.addColumn("CD_SITE", "string");
	this.dsCombo.addColumn("YM_WORK", "string");
	this.dsCombo.addColumn("DS_CONTMETHOD", "string");
	
	this.dsCombo.addRow();	
	this.dsCombo.setColumn(0, "CD_SITE", this.dsData.getColumn(0, "CD_SITE"));
	this.dsCombo.setColumn(0, "YM_WORK", this.dsData.getColumn(0, "YM_WORK"));
	this.dsCombo.setColumn(0, "DS_CONTMETHOD", this.dsData.getColumn(0, "DS_CONTMETHOD"));	
	
	var strSvcId    = "combo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "combo=dsCombo";
	var outData     = "dsNO_DGR=combo0";	
	var strArg      = "";
	var callBackFnc = "fnCallbackCombo";

	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
 }
 
this.fnCallbackCombo = function(svcID, errorCode, errorMsg)
{
	if(svcID == "combo") {
 		//this.divData.form.ccboNO_DGR.set_index(0);
		this.dsData.setColumn(0, "NO_DGR", this.getOwnerFrame().NO_DGR);
	}
};
 
/************************************************************************
 * Validate
 ************************************************************************/
this.fnApproveValidate = function() {
	var validate = true;
	
	if (this.gfnIsNull(this.dsData.getColumn(0, "RM_RSTOR"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.divData.form.ctxtRM_RSTOR.setFocus();
		}
		this.gfnAlert("차이발생사유를 입력하세요.", "fnVaidateCallback");
	}
	
	return validate;
}
/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "approve") {
		if(errorCode == 0)
		{
			// this.close()가 작동하지 않았고, 
			// 부모의 callback 함수로 데이터를 넘겨주기 위해 작성되었습니다.
			
			this.fnApprove_callback = function()
			{
				this.getParentContext().close(true);
			}
			
			this.gfnAlert("기성청구변경가 정상 처리되었습니다.", "fnApprove_callback");
		}else
		{
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/

 
// 확인 버튼 클릭
this.divData_btnOk_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//if(!this.fnApproveValidate()) return;

	this.dsExecute.clearData();
	var nrow = this.dsExecute.addRow();
	
	this.dsExecute.setColumn(nrow, "TY_WRK", "CHG");
	this.dsExecute.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
	this.dsExecute.setColumn(nrow, "CD_SITE", this.dsData.getColumn(0, "CD_SITE"));
	this.dsExecute.setColumn(nrow, "YM_WORK", this.dsData.getColumn(0, "YM_WORK"));
	this.dsExecute.setColumn(nrow, "NO_DGR", this.dsData.getColumn(0, "NO_DGR"));
	this.dsExecute.setColumn(nrow, "NO_HADOCONT", this.dsData.getColumn(0, "NO_HADOCONT"));
	this.dsExecute.setColumn(nrow, "CD_VENDOR", this.dsData.getColumn(0, "CD_VENDOR"));
	this.dsExecute.setColumn(nrow, "RM_RSTOR", this.dsData.getColumn(0, "RM_RSTOR"));
	this.dsExecute.setColumn(nrow, "CHG_RSN", this.dsData.getColumn(0, "CHG_RSN"));
				
	var strSvcId    = "approve";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "approve_ok=dsExecute";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
	
	
};

// 취소 버튼 클릭
this.divData_btnCancel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	// this.close()가 작동하지 않았고, 
	// 부모의 callback 함수로 데이터를 넘겨주기 위해 작성되었습니다.
	//this.getParentContext().close(false);
	this.getParentContext().close(false);
};
]]></Script>
    <Objects>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">approve_ok</Col>
            <Col id="SP">DWBPR_HDGISUNG_EXECUTE</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo</Col>
            <Col id="SP">DWBPR_HDGISUNGMONTH_MAX_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsData" onvaluechanged="dsData_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="DS_SITE" type="STRING" size="256"/>
          <Column id="YM_WORK" type="STRING" size="256"/>
          <Column id="NO_DGR" type="STRING" size="256"/>
          <Column id="NO_HADOCONT" type="STRING" size="256"/>
          <Column id="CD_VENDOR" type="STRING" size="256"/>
          <Column id="RM_RSTOR" type="STRING" size="256"/>
          <Column id="DS_HADOCONT" type="STRING" size="256"/>
          <Column id="DS_VENDOR" type="STRING" size="256"/>
          <Column id="CHG_RSN" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsNO_DGR">
        <ColumnInfo>
          <Column id="NO_DGR" type="STRING" size="256"/>
          <Column id="DS_DGR" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divData.form.edtCD_SITE" propid="value" datasetid="dsData" columnid="CD_SITE"/>
      <BindItem id="item1" compid="divData.form.edtDS_SITE" propid="value" datasetid="dsData" columnid="DS_SITE"/>
      <BindItem id="item2" compid="divData.form.ctclYM_WORK.form.TextBox" propid="value" datasetid="dsData" columnid="YM_WORK"/>
      <BindItem id="item3" compid="divData.form.ccboNO_DGR" propid="value" datasetid="dsData" columnid="NO_DGR"/>
      <BindItem id="item4" compid="divData.form.edtCD_HADOCONT" propid="value" datasetid="dsData" columnid="NO_HADOCONT"/>
      <BindItem id="item5" compid="divData.form.edtDS_HADOCONT" propid="value" datasetid="dsData" columnid="DS_HADOCONT"/>
      <BindItem id="item6" compid="divData.form.edtNO_VENDOR" propid="value" datasetid="dsData" columnid="CD_VENDOR"/>
      <BindItem id="item7" compid="divData.form.edtDS_VENDOR" propid="value" datasetid="dsData" columnid="DS_VENDOR"/>
      <BindItem id="item8" compid="divData.form.ctxtRM_RSTOR" propid="value" datasetid="dsData" columnid="CHG_RSN"/>
    </Bind>
  </Form>
</FDL>
