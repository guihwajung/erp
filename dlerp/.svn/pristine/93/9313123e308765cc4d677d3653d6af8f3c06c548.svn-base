<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1430" height="720" titletext="유가증권 약정 등록" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="78.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="sta03" taborder="4" text="완료여부" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Combo id="cboYN_CLOSE" taborder="3" text="진행중" left="sta03:0.0" top="sta03:10.0" width="91" height="24.0" codecolumn="CD_CODE" datacolumn="DS_CODE" value="N" index="-1" onitemchanged="fnSearchInit" innerdataset="dsYN_CLOSE"/>
              <Static id="sta04" taborder="5" text="법인코드" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="cfCD_CORP" CDTextWidth="80" taborder="0" left="sta04:0.0" top="10.0" width="269" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Div id="cfCD_YUGA" CDTextWidth="70" taborder="1" left="cfCD_CORP:0.0" top="10.0" width="269" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="sta01" taborder="6" text="유가증권" left="cfCD_YUGA:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="cfNO_YUGA" CDTextWidth="80" taborder="2" left="0.0" top="sta03:10.0" width="269" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="sta00" taborder="7" text="관리번호" left="cfNO_YUGA:0.0" top="sta03:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="1" left="0" top="70" bottom="0" right="0" cssclass="div_DATA_Bg" ondragmove="divData_ondragmove">
          <Layouts>
            <Layout>
              <Div id="divSplitter" taborder="2" top="0" width="5" background="skyblue" cursor="ew-resize" bottom="0" ondrag="divData_divSplitter_ondrag" left="21.88%"/>
              <Div id="divDataRight" taborder="1" left="divSplitter:5" top="0" bottom="0" right="0" text="">
                <Layouts>
                  <Layout>
                    <Static id="sta00" taborder="23" text="기본정보" left="0" top="0" height="22" cssclass="sta_TITLE_Bg" right="0"/>
                    <Static id="sta11" taborder="25" left="74" top="28" height="30" cssclass="sta_WF_tablebg" text="" right="0"/>
                    <Static id="sta03" taborder="26" left="74" top="57" height="30" cssclass="sta_WF_tablebg" onclick="divData_divDataRight_sta03_onclick" right="0"/>
                    <Static id="sta05" taborder="27" text="법인코드" left="318" top="28" width="83" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Div id="ccfCD_CORP2" CDTextWidth="50" taborder="1" left="406" top="33" width="240" height="20" url="cmm::cmmCodeFind.xfdl" enable="true"/>
                    <Static id="sta06" taborder="28" left="74" top="86" height="30" cssclass="sta_WF_tablebg" right="0"/>
                    <Static id="sta28" taborder="31" text="이자수취조건" left="0" top="167" height="22" cssclass="sta_TITLE_Bg" right="0"/>
                    <Static id="sta29" taborder="32" text="종류" left="651" top="28" width="108" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta33" taborder="33" left="74" top="194" height="30" cssclass="sta_WF_tablebg" right="0"/>
                    <Static id="sta34" taborder="34" text="유형" left="248" top="194" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta36" taborder="35" text="이율(%)" left="498" top="194" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta45" taborder="37" text="진행정보" left="0" top="310" height="22" cssclass="sta_TITLE_Bg" right="0"/>
                    <Static id="sta01" taborder="24" text="관리번호" left="0" top="28" width="85" height="30" cssclass="sta_WF_tablelabel"/>
                    <Edit id="txtNO_YUGA" taborder="0" left="91" top="33" width="222" height="20" maxlength="20" enable="false"/>
                    <Static id="sta21" taborder="29" text="매입기관" left="651" top="57" width="108" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta26" taborder="30" text="기간" left="651" top="86" width="108" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta10" taborder="38" text="매입일자" left="0" top="57" width="85" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta12" taborder="39" text="귀속부서" left="0" top="86" width="85" height="30" cssclass="sta_WF_tablelabelE"/>
                    <MaskEdit id="mskRT_EZA" taborder="13" left="599" top="199" width="125" height="20" format="###,##0.####" limitbymask="integer"/>
                    <Static id="sta07" taborder="40" left="94" top="339" height="30" cssclass="sta_WF_tablebg" text="" right="0"/>
                    <Static id="sta08" taborder="41" text="액면가액" left="0" top="339" width="115" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta09" taborder="42" text="취득수량" left="302" top="339" width="115" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta38" taborder="43" text="매입금액" left="594" top="339" width="115" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta04" taborder="44" text="장단기/대체" left="318" top="57" width="83" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Div id="cfCD_YUGA2" CDTextWidth="50" taborder="2" left="765" top="33" width="251" height="20" url="cmm::cmmCodeFind.xfdl" enable="true"/>
                    <Div id="cfCD_VENDOR" CDTextWidth="50" taborder="5" left="765" top="62" width="251" height="20" url="cmm::cmmCodeFind.xfdl" enable="true"/>
                    <Div id="cfCD_DEPT_ACNT" CDTextWidth="80" taborder="6" left="91" top="91" width="222" height="20" url="cmm::cmmCodeFind.xfdl" enable="true"/>
                    <Calendar id="calDT_START" taborder="8" left="765" top="91" width="115" height="20" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" value=""/>
                    <Static id="staCD_TILDE01" taborder="45" text="~" left="886" top="91" width="10" height="20"/>
                    <Calendar id="calDT_END" taborder="9" left="902" top="91" width="115" height="20" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" value=""/>
                    <Static id="sta15" taborder="46" text="보관처" left="318" top="86" width="83" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Div id="cfCD_REPOSIT" CDTextWidth="80" taborder="7" left="406" top="91" width="240" height="20" url="cmm::cmmCodeFind.xfdl" enable="true"/>
                    <Combo id="cboTY_EZA" taborder="12" left="349" top="199" width="125" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="LOAN" index="0" text="LOAN" innerdataset="dsTY_EZA"/>
                    <Static id="sta16" taborder="48" left="74" top="223" height="30" cssclass="sta_WF_tablebg" right="0"/>
                    <Static id="sta17" taborder="49" text="주기(개월)" left="248" top="223" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
                    <MaskEdit id="mskTR_INTTERM" taborder="15" left="349" top="228" width="125" height="20" format="#0" limitbymask="integer"/>
                    <Calendar id="calDT_BUY" taborder="3" left="91" top="62" width="115" height="20" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" value=""/>
                    <Static id="sta13" taborder="54" left="74" top="115" height="30" cssclass="sta_WF_tablebg" right="0"/>
                    <Static id="sta02" taborder="53" text="대체계좌" left="0" top="115" width="85" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Div id="cfNO_ACCOUNT" CDTextWidth="80" taborder="10" left="91" top="120" width="222" height="20" url="cmm::cmmCodeFind.xfdl" enable="true"/>
                    <Div id="div00" taborder="55" text="div00" left="0" top="396" right="0" bottom="0">
                      <Layouts>
                        <Layout>
                          <Static id="sta41" taborder="0" left="94" top="30" height="30" cssclass="sta_WF_tablebg" text="" right="0"/>
                          <Static id="sta42" taborder="1" text="평가금액" left="0" top="30" width="115" height="30" cssclass="sta_WF_tablelabel"/>
                          <Static id="sta44" taborder="2" left="302" top="30" width="115" height="30" cssclass="sta_WF_tablelabel" text="계획생성"/>
                          <Static id="sta49" taborder="3" text="완료여부" left="594" top="30" width="115" height="30" cssclass="sta_WF_tablelabelE"/>
                          <Static id="sta52" taborder="4" text="담보" left="0" top="82" height="22" cssclass="sta_TITLE_Bg" right="490"/>
                          <Static id="sta53" taborder="5" left="74" top="111" height="30" cssclass="sta_WF_tablebg" text="" right="0"/>
                          <Static id="sta55" taborder="6" text="금액" left="538" top="111" width="115" height="30" cssclass="sta_WF_tablelabelE"/>
                          <Static id="sta56" taborder="7" left="74" top="140" cssclass="sta_WF_tablebg" right="0" bottom="0"/>
                          <Static id="sta59" taborder="8" text="여부" left="0" top="111" width="115" height="30" cssclass="sta_WF_tablelabelE"/>
                          <Static id="sta61" taborder="9" text="내용" left="800" top="111" width="115" height="30" cssclass="sta_WF_tablelabel"/>
                          <Static id="sta64" taborder="10" left="0" top="140" width="115" cssclass="sta_WF_tablelabel" text="비고" bottom="0"/>
                          <TextArea id="TeaRM_BIGO" taborder="19" left="121" top="147" maxlength="200" right="6" bottom="7"/>
                          <Edit id="txtDS_DAMBO" taborder="17" left="921" top="116" width="135" height="20" maxlength="100" enable="true"/>
                          <Combo id="cboYN_PLAN" taborder="11" left="423" top="35" width="165" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="LOAN" index="0" text="" enable="false" innerdataset=""/>
                          <Combo id="cboYN_CLOSE2" taborder="12" left="715" top="35" width="165" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="LOAN" index="0" text="" innerdataset="dsYN_CLOSE2"/>
                          <MaskEdit id="mskAM_DAMBO" taborder="15" left="659" top="116" width="135" height="20" format="#,###,###,###,###,###,##0"/>
                          <MaskEdit id="mskAM_EST" taborder="16" left="121" top="35" width="175" height="20" format="#,###,###,##0" enable="false"/>
                          <Combo id="cboYN_DAMBO" taborder="13" left="121" top="116" width="145" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="LOAN" index="0" text="" innerdataset="dsYN_DAMBO"/>
                          <Static id="sta00" taborder="18" text="수량" left="274" top="111" width="115" height="30" cssclass="sta_WF_tablelabelE"/>
                          <MaskEdit id="mskQN_DAMBO" taborder="14" left="395" top="116" width="135" height="20" format="#,###,###,###,###,###,##0"/>
                        </Layout>
                      </Layouts>
                    </Div>
                    <Static id="sta907" taborder="56" left="94" top="368" height="30" cssclass="sta_WF_tablebg" text="" right="0"/>
                    <Static id="sta901" taborder="57" text="원화금액" left="594" top="368" width="115" height="30" cssclass="sta_WF_tablelabel"/>
                    <Static id="sta908" taborder="58" left="94" top="397" height="30" cssclass="sta_WF_tablebg" text="" right="0"/>
                    <Static id="sta904" taborder="59" text="수리신고번호" left="0" top="397" width="115" height="30" cssclass="sta_WF_tablelabel"/>
                    <Static id="sta902" taborder="60" text="화폐단위" left="0" top="368" width="115" height="30" cssclass="sta_WF_tablelabel"/>
                    <Static id="sta903" taborder="61" text="환율" left="302" top="368" width="115" height="30" cssclass="sta_WF_tablelabel"/>
                    <Static id="sta905" taborder="62" text="사후신고마감일" left="302" top="397" width="115" height="30" cssclass="sta_WF_tablelabel"/>
                    <Static id="sta906" taborder="63" text="사후신고일" left="594" top="397" width="115" height="30" cssclass="sta_WF_tablelabel"/>
                    <MaskEdit id="mskAM_KOR" taborder="64" left="715" top="373" width="165" height="20" format="#,###" onchanged="fnCalAmLoan" enable="false"/>
                    <Combo id="cboCD_CURRENCY" taborder="65" left="121" top="373" width="175" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="LOAN" index="0" text="LOAN" innerdataset="dsCD_CURRENCY"/>
                    <MaskEdit id="mskRT_CURRENCY" taborder="66" left="423" top="373" width="165" height="20" format="##,###,###,###,###,##0.##" onchanged="fnCalAmLoan"/>
                    <Edit id="txtNO_AFTER" taborder="67" left="121" top="402" width="175" height="20" maxlength="100" enable="true"/>
                    <Calendar id="calDT_AFTER1" taborder="68" left="423" top="402" width="165" height="20" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" value=""/>
                    <Calendar id="calDT_AFTER2" taborder="69" left="715" top="402" width="165" height="20" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" value=""/>
                    <Static id="sta14" taborder="70" left="74" top="252" height="30" cssclass="sta_WF_tablebg" right="0"/>
                    <Static id="sta18" taborder="50" text="기준" left="0" top="252" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="staChitPubPnt02" taborder="51" text="계산방식" left="248" top="252" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="staChitPubPnt03" taborder="52" text="일수계산" left="498" top="252" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Combo id="cboTY_SUNHOO" taborder="17" left="101" top="257" width="125" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="LOAN" index="0" text="LOAN" innerdataset="dsTY_SUNHOO"/>
                    <Combo id="cboTY_EZACAL" taborder="18" left="349" top="257" width="125" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="LOAN" index="0" text="LOAN" innerdataset="dsTY_EZACAL"/>
                    <Combo id="cboTY_YANGDAN" taborder="19" left="599" top="257" width="125" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="LOAN" index="0" text="LOAN" innerdataset="dsTY_YANGDAN"/>
                    <Static id="staChitPubPnt" taborder="36" text="방식" left="0" top="223" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Combo id="cboTY_DANBOK" taborder="14" left="101" top="228" width="125" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="LOAN" index="0" text="LOAN" innerdataset="dsTY_DANBOK"/>
                    <Static id="staChitPubPnt01" taborder="47" text="수취일" left="498" top="223" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
                    <MaskEdit id="mskTR_EZASTD" taborder="16" left="599" top="228" width="125" height="20" format="#0" limitbymask="integer"/>
                    <Static id="sta19" taborder="71" text="방법" left="0" top="194" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Combo id="cboTY_SANG" taborder="11" left="101" top="199" width="125" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="LOAN" index="0" text="LOAN" innerdataset="dsTY_SANG"/>
                    <MaskEdit id="mskAM_FACE" taborder="20" left="121" top="344" width="175" height="20" format="#,###,###,###,###,###,##0"/>
                    <MaskEdit id="mskQN_BUY" taborder="21" left="423" top="344" width="165" height="20" format="#,###,###,##0"/>
                    <MaskEdit id="mskAM_BUY" taborder="22" left="715" top="344" width="165" height="20" format="#,###,###,###,###,###,##0" autoselect="false" enable="true"/>
                    <Static id="sta20" taborder="72" left="318" top="115" width="83" height="30" text="유가증권명" cssclass="sta_WF_tablelabelE"/>
                    <Combo id="cboTY_CMS" taborder="73" left="765" top="120" width="85" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="LOAN" index="0" text="LOAN" innerdataset="dsTY_CMS"/>
                    <Static id="sta22" taborder="74" text="브렌치전송/계좌" left="651" top="115" width="108" height="30" cssclass="sta_WF_tablelabel"/>
                    <Div id="cfNO_ACCOUNT_TRAN" CDTextWidth="50" taborder="75" left="853" top="120" width="230" height="20" url="cmm::cmmCodeFind.xfdl" enable="true"/>
                    <Edit id="txtNM_YUGA" taborder="4" left="406" top="120" width="240" height="20" maxlength="50" enable="true"/>
                    <Combo id="cboTY_TERM" taborder="76" text="" left="406" top="62" width="110" height="20" innerdataset="dsTY_TERM" codecolumn="CD_CODE" datacolumn="DS_CODE" value="A" index="0"/>
                    <Combo id="cboYN_JANGDAN" taborder="77" left="523" top="62" width="123" height="20" value="Y" index="0" text="Y" codecolumn="CODE" datacolumn="NAME" innerdataset="dsYN_JANGDAN"/>
                  </Layout>
                </Layouts>
              </Div>
              <Div id="divDataLeft" taborder="0" left="0" top="0" bottom="0" right="divSplitter:5">
                <Layouts>
                  <Layout>
                    <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0">
                      <Formats>
                        <Format id="default"/>
                      </Formats>
                    </Grid>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	this.fnSetCombo();
	
	if ( !this.gfnIsNull(this.getOwnerFrame().CD_CORP) ) {
		this.dsSearch.set_enableevent(false);
		
		this.dsSearch.setColumn(0, "CD_CORP", this.getOwnerFrame().CD_CORP);	// 법인코드
		this.cfCD_CORP.form.DSTextBox.set_value(this.getOwnerFrame().DS_CORP);	// 법인명
		this.dsSearch.setColumn(0, "NO_YUGA", this.getOwnerFrame().NO_YUGA);	// 관리번호
		this.cfNO_YUGA.form.DSTextBox.set_value(this.getOwnerFrame().NM_YUGA);	// 관리명칭
		
		this.dsSearch.set_enableevent(true);
		
		this.FormBtns.Select.click();
	}	

};
 
/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	 this.btnPlanCreat = this.gfnFormButtonAdd("btnPlanCreat", "fnPlanCreat", "계획생성");
	 this.btnPlanPerform = this.gfnFormButtonAdd("btnPlanPerform", "fnPlanPerform", "계획/실적");
	 this.btnFileUpload = this.gfnFormButtonAdd("btnFileUpload", "fnFileUpload", " 첨부파일 ");
	 //this.btnYugaEval = this.gfnFormButtonAdd("btnYugaEval", "fnYugaEval", "유가증권평가");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {

	// 조회조건
	this.cfCD_CORP  = this.divSearch.form.cfCD_CORP;				// 법인코드
	this.cfCD_YUGA = this.divSearch.form.cfCD_YUGA;					// 유가종류
	this.cfNO_YUGA = this.divSearch.form.cfNO_YUGA;					// 관리번호
	this.cboYN_CLOSE = this.divSearch.form.cboYN_CLOSE;				// 완료여부
	
	this.dxGrid = this.divData.form.divDataLeft.form.objGrid;		// 그리드
	this.grSearch = this.FormInfo.GR_SEARCH;						// 권한?
	this.cdGroup = this.gfnIsNull(this.AuthClient.CD_GROUP) ? "" : this.AuthClient.CD_GROUP;						// 그룹코드	
	
	// 기본정보
	this.txtNO_YUGA = this.divData.form.divDataRight.form.txtNO_YUGA;				// 관리번호
	this.ccfCD_CORP2 = this.divData.form.divDataRight.form.ccfCD_CORP2;				// 법인코드
	this.cfCD_YUGA2 = this.divData.form.divDataRight.form.cfCD_YUGA2;				// 종류
	this.txtNM_YUGA = this.divData.form.divDataRight.form.txtNM_YUGA;				// 유가증권명
	this.calDT_BUY = this.divData.form.divDataRight.form.calDT_BUY;					// 매입일자
	this.cfCD_VENDOR = this.divData.form.divDataRight.form.cfCD_VENDOR;				// 금융기관
	this.cfCD_DEPT_ACNT = this.divData.form.divDataRight.form.cfCD_DEPT_ACNT;		// 귀속부서
	this.cfCD_REPOSIT = this.divData.form.divDataRight.form.cfCD_REPOSIT; 			// 보관처
	this.calDT_START = this.divData.form.divDataRight.form.calDT_START; 			// 가입기간(FROM)
	this.calDT_END = this.divData.form.divDataRight.form.calDT_END; 				// 가입기간(TO)
	this.cfNO_ACCOUNT = this.divData.form.divDataRight.form.cfNO_ACCOUNT; 			// 계좌
	this.cboTY_CMS = this.divData.form.divDataRight.form.cboTY_CMS; 				// 브랜치전송
	this.cfNO_ACCOUNT_TRAN = this.divData.form.divDataRight.form.cfNO_ACCOUNT_TRAN;	// 전송계좌	
	
	// 이자수취조건
	this.cboTY_SANG = this.divData.form.divDataRight.form.cboTY_SANG;				// 방법
	this.cboTY_EZA = this.divData.form.divDataRight.form.cboTY_EZA;					// 유형
	this.mskRT_EZA = this.divData.form.divDataRight.form.mskRT_EZA;					// 이율(%)
	this.cboTY_DANBOK = this.divData.form.divDataRight.form.cboTY_DANBOK;			// 방식
	this.mskTR_EZASTD = this.divData.form.divDataRight.form.mskTR_EZASTD;			// 수취일
	this.mskTR_INTTERM = this.divData.form.divDataRight.form.mskTR_INTTERM;			// 주기(개월)
	this.cboTY_SUNHOO = this.divData.form.divDataRight.form.cboTY_SUNHOO;			// 기준
	this.cboTY_EZACAL = this.divData.form.divDataRight.form.cboTY_EZACAL;			// 계산방식
	this.cboTY_YANGDAN = this.divData.form.divDataRight.form.cboTY_YANGDAN;			// 일수계산
	
	// 진행정보
	this.mskAM_FACE = this.divData.form.divDataRight.form.mskAM_FACE;				// 액면가액
	this.mskQN_BUY = this.divData.form.divDataRight.form.mskQN_BUY;					// 취득수량
	this.mskAM_BUY = this.divData.form.divDataRight.form.mskAM_BUY;					// 매입금액
	this.mskAM_EST = this.divData.form.divDataRight.form.div00.form.mskAM_EST;				// 평가금액
	this.cboYN_PLAN = this.divData.form.divDataRight.form.div00.form.cboYN_PLAN;			// 계획생성
	this.cboYN_CLOSE2 = this.divData.form.divDataRight.form.div00.form.cboYN_CLOSE2;		// 완료여부

	// 담보
	this.cboYN_DAMBO = this.divData.form.divDataRight.form.div00.form.cboYN_DAMBO;			// 여부
	this.mskAM_DAMBO = this.divData.form.divDataRight.form.div00.form.mskAM_DAMBO;			// 금액
	this.txtDS_DAMBO = this.divData.form.divDataRight.form.div00.form.txtDS_DAMBO;			// 내용
	this.TeaRM_BIGO = this.divData.form.divDataRight.form.div00.form.TeaRM_BIGO;			// 비고
	
	this.cboCD_CURRENCY = this.divData.form.divDataRight.form.cboCD_CURRENCY;	// 화폐단위
	this.mskRT_CURRENCY = this.divData.form.divDataRight.form.mskRT_CURRENCY;	// 환율
	this.mskAM_KOR = this.divData.form.divDataRight.form.mskAM_KOR;				// 원화금액
	this.txtNO_AFTER = this.divData.form.divDataRight.form.txtNO_AFTER;			// 신고수리번호
	this.calDT_AFTER1 = this.divData.form.divDataRight.form.calDT_AFTER1;		// 사후신고마감일
	this.calDT_AFTER2 = this.divData.form.divDataRight.form.calDT_AFTER2;		// 사후신고일	
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {	
	this.cfCD_CORP.CodeFindName = "DZX_CFCORP";					// 법인코드(조회조건)
	this.cfCD_YUGA.CodeFindName = "DFX_CFYUGAKIND";				// 유가증권(조회조건)
	this.cfNO_YUGA.CodeFindName = "DFX_CFNO_YUGA";				// 관리번호(조회조건)
	
	this.ccfCD_CORP2.CodeFindName = "DZX_CFCORP"; 				// 법인코드
	this.cfCD_YUGA2.CodeFindName = "DFX_CFYUGAKIND";			// 종류
	this.cfCD_VENDOR.CodeFindName = "DFX_CFVENDOR";				// 매입기관
	this.cfCD_DEPT_ACNT.CodeFindName = "DFX_CFACNTUNIT";		// 귀속부서
	this.cfCD_REPOSIT.CodeFindName = "DFX_CFVENDOR";			// 보관처	
	this.cfNO_ACCOUNT.CodeFindName = "DFX_CFACCOUNTNO_SUJI";	// 계좌	
	this.cfNO_ACCOUNT_TRAN.CodeFindName = "DFX_CFACCOUNTMATCH";	// 전송계좌	
	
	this.cfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.cfCD_YUGA.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.cfNO_YUGA.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	this.ccfCD_CORP2.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.cfCD_YUGA2.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.cfCD_VENDOR.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.cfCD_DEPT_ACNT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.cfCD_REPOSIT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.cfNO_ACCOUNT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.cfNO_ACCOUNT_TRAN.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	this.cfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.cfCD_YUGA.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.cfNO_YUGA.AfterCDTextChanged = "fnAfterCDTextChanged";
	
	this.ccfCD_CORP2.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.cfCD_YUGA2.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.cfCD_VENDOR.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.cfCD_DEPT_ACNT.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.cfCD_REPOSIT.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.cfNO_ACCOUNT.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.cfNO_ACCOUNT_TRAN.AfterCDTextChanged = "fnAfterCDTextChanged";
	
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DF", "DFE_YUGAREG");
	this.dxGrid.addEventHandler("onselectchanged", this.fnGrid_RowCellChanged, this);
// 	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
// 	this.dxGrid.AfterCDTextChanged = "fnGrid_AfterCDTextChanged";	
	
	if (this.gfnIsNull(this.cfCD_CORP.form.CDTextBox.value)) {
		this.cfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP); 
		this.cfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);	
	}
	
	
	// 법인코드 포커스추가
	this.cfCD_CORP.form.CDTextBox.setFocus();
	
	// 권한체크 - 해당부서내역만 조회가능
	if (nexacro.toNumber(this.grSearch) >= 2) {
		this.cfCD_CORP.set_enable(false);
	}
	
	this.fnVisibleComp(false);
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("CD_YUGA", "string");
	this.dsSelect.addColumn("NO_YUGA", "string");
	this.dsSelect.addColumn("YN_CLOSE", "string");
	this.dsSelect.addColumn("ID_USER", "string");

	this.dsInsert = new Dataset();
	this.dsInsert.addColumn("CD_CORP", "string");
	this.dsInsert.addColumn("CD_YUGA", "string");
	this.dsInsert.addColumn("NM_YUGA", "string");
	this.dsInsert.addColumn("DT_BUY", "string");
	this.dsInsert.addColumn("CD_VENDOR", "string");
	this.dsInsert.addColumn("CD_DEPT_ACNT", "string");
	this.dsInsert.addColumn("CD_REPOSIT", "string");
	this.dsInsert.addColumn("DT_START", "string");
	this.dsInsert.addColumn("DT_END", "string");
	this.dsInsert.addColumn("TY_SANG", "string");
	this.dsInsert.addColumn("TY_EZA", "string");
	this.dsInsert.addColumn("RT_EZA", "bigdecimal");
	this.dsInsert.addColumn("TY_DANBOK", "string");
	this.dsInsert.addColumn("TR_EZASTD", "bigdecimal");
	this.dsInsert.addColumn("TR_INTTERM", "bigdecimal");
	this.dsInsert.addColumn("TY_SUNHOO", "string");
	this.dsInsert.addColumn("TY_EZACAL", "string");
	this.dsInsert.addColumn("TY_YANGDAN", "string");
	this.dsInsert.addColumn("AM_FACE", "bigdecimal");
	this.dsInsert.addColumn("QN_BUY", "bigdecimal");
	this.dsInsert.addColumn("AM_BUY", "bigdecimal");
	this.dsInsert.addColumn("YN_CLOSE", "string");
	this.dsInsert.addColumn("YN_DAMBO", "string");
	this.dsInsert.addColumn("AM_DAMBO", "bigdecimal");
	this.dsInsert.addColumn("DS_DAMBO", "string");
	this.dsInsert.addColumn("NO_ACCOUNT", "string");
	this.dsInsert.addColumn("TY_GUBUN", "string");
	this.dsInsert.addColumn("CD_BANK", "string");	
	this.dsInsert.addColumn("RM_BIGO", "string");
	this.dsInsert.addColumn("CD_CURRENCY", "string");
	this.dsInsert.addColumn("RT_CURRENCY", "bigdecimal");
	this.dsInsert.addColumn("NO_AFTER", "string");
	this.dsInsert.addColumn("DT_AFTER1", "string");
	this.dsInsert.addColumn("DT_AFTER2", "string");		
	this.dsInsert.addColumn("QN_DAMBO", "bigdecimal");
	this.dsInsert.addColumn("TY_CMS", "string");
	this.dsInsert.addColumn("NO_ACCOUNT_TRAN", "string");
	this.dsInsert.addColumn("ID_USER", "string");
	this.dsInsert.addColumn("TY_TERM", "string");
	this.dsInsert.addColumn("YN_JANGDAN", "string");

	this.dsUpdate = new Dataset();
	this.dsUpdate.addColumn("CD_CORP", "string");
	this.dsUpdate.addColumn("CD_YUGA", "string");
	this.dsUpdate.addColumn("NM_YUGA", "string");
	this.dsUpdate.addColumn("DT_BUY", "string");
	this.dsUpdate.addColumn("CD_VENDOR", "string");
	this.dsUpdate.addColumn("CD_DEPT_ACNT", "string");
	this.dsUpdate.addColumn("CD_REPOSIT", "string");
	this.dsUpdate.addColumn("DT_START", "string");
	this.dsUpdate.addColumn("DT_END", "string");
	this.dsUpdate.addColumn("TY_SANG", "string");
	this.dsUpdate.addColumn("TY_EZA", "string");
	this.dsUpdate.addColumn("RT_EZA", "bigdecimal");
	this.dsUpdate.addColumn("TY_DANBOK", "string");
	this.dsUpdate.addColumn("TR_EZASTD", "bigdecimal");
	this.dsUpdate.addColumn("TR_INTTERM", "bigdecimal");
	this.dsUpdate.addColumn("TY_SUNHOO", "string");
	this.dsUpdate.addColumn("TY_EZACAL", "string");
	this.dsUpdate.addColumn("TY_YANGDAN", "string");
	this.dsUpdate.addColumn("AM_FACE", "bigdecimal");
	this.dsUpdate.addColumn("QN_BUY", "bigdecimal");
	this.dsUpdate.addColumn("AM_BUY", "bigdecimal");
	this.dsUpdate.addColumn("YN_CLOSE", "string");
	this.dsUpdate.addColumn("YN_DAMBO", "string");
	this.dsUpdate.addColumn("AM_DAMBO", "bigdecimal");
	this.dsUpdate.addColumn("DS_DAMBO", "string");
	this.dsUpdate.addColumn("RM_BIGO", "string");
	this.dsUpdate.addColumn("NO_ACCOUNT", "string");
	this.dsUpdate.addColumn("TY_GUBUN", "string");
	this.dsUpdate.addColumn("CD_BANK", "string");	
	this.dsUpdate.addColumn("CD_CURRENCY", "string");
	this.dsUpdate.addColumn("RT_CURRENCY", "bigdecimal");
	this.dsUpdate.addColumn("NO_AFTER", "string");
	this.dsUpdate.addColumn("DT_AFTER1", "string");
	this.dsUpdate.addColumn("DT_AFTER2", "string");	
	this.dsUpdate.addColumn("NO_YUGA", "string");
	this.dsUpdate.addColumn("QN_DAMBO", "bigdecimal");
	this.dsUpdate.addColumn("TY_CMS", "string");
	this.dsUpdate.addColumn("NO_ACCOUNT_TRAN", "string");
	this.dsUpdate.addColumn("ID_USER", "string");
	this.dsUpdate.addColumn("TY_TERM", "string");
	this.dsUpdate.addColumn("YN_JANGDAN", "string");

	this.dsDelete = new Dataset();
	this.dsDelete.addColumn("NO_YUGA", "string");
	
	this.dsExcute = new Dataset();
	this.dsExcute.addColumn("NO_YUGA", "string");
	this.dsExcute.addColumn("DT_DATE", "string");
	this.dsExcute.addColumn("YN_FIRST", "string");
	this.dsExcute.addColumn("ID_USER", "string");	
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	//this.fnSelectEnable();
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();

	this.dsSelect.setColumn(0, "CD_YUGA", this.dsSearch.getColumn(0, "CD_YUGA"));
	this.dsSelect.setColumn(0, "NO_YUGA", this.dsSearch.getColumn(0, "NO_YUGA"));
	this.dsSelect.setColumn(0, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));
	this.dsSelect.setColumn(0, "YN_CLOSE", this.dsSearch.getColumn(0, "YN_CLOSE"));
	this.dsSelect.setColumn(0, "ID_USER", this.AuthClient.ID_USER);
	
	//trace(this.dsSelect.saveXML());
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
// 	if(this.dsList.findRow(this.ucFlag, "I") > -1){
// 		this.gfnAlert("신규 추가된 데이터가 이미 있습니다.");
// 		return;
// 	}
	
	var nrow = this.gfnGridAdd(this.dxGrid);
	this.dsList.set_enableevent(false);
	
	this.dsList.setColumn(nrow, "CD_CORP", this.cfCD_CORP.form.CDTextBox.value);
	this.dsList.setColumn(nrow, "DS_CORP", this.cfCD_CORP.form.DSTextBox.value);
	this.dsList.setColumn(nrow, "TY_CMS", "오프라인");
	
	
	//this.dsList.setColumn(nrow, "CD_YUGA", this.dsList.getColumn(i, "CD_YUGA"));
	//this.dsList.setColumn(nrow, "NM_YUGA", this.dsList.getColumn(i, "NM_YUGA"));
	//this.dsList.setColumn(nrow, "DT_BUY", this.dsList.getColumn(i, "DT_BUY"));
	//this.dsList.setColumn(nrow, "CD_VENDOR", this.dsList.getColumn(i, "CD_VENDOR"));
	//this.dsList.setColumn(nrow, "CD_DEPT_ACNT", this.dsList.getColumn(i, "CD_DEPT_ACNT"));
	//this.dsList.setColumn(nrow, "CD_REPOSIT", this.dsList.getColumn(i, "CD_REPOSIT"));
	//this.dsList.setColumn(nrow, "DT_START", this.dsList.getColumn(i, "DT_START"));
	//this.dsList.setColumn(nrow, "DT_END", this.dsList.getColumn(i, "DT_END"));
	this.dsList.setColumn(nrow, "TY_SANG", "만기");			// 방법
	this.dsList.setColumn(nrow, "TY_EZA", "고정");			// 유형
	this.dsList.setColumn(nrow, "RT_EZA", 0);				// 이율
	this.dsList.setColumn(nrow, "TY_DANBOK", "단리");		// 방식
	this.dsList.setColumn(nrow, "TR_EZASTD", 0);			// 수취일
	this.dsList.setColumn(nrow, "TR_INTTERM", 0);			// 주기
	this.dsList.setColumn(nrow, "TY_SUNHOO", "후취");		// 기준
	this.dsList.setColumn(nrow, "TY_EZACAL", "월수");		// 계산방식
	this.dsList.setColumn(nrow, "TY_YANGDAN", "말일산입");	// 일수계산
	this.dsList.setColumn(nrow, "AM_FACE", 0);				// 액면가액
	this.dsList.setColumn(nrow, "QN_BUY", 0);				// 취득수량
	this.dsList.setColumn(nrow, "AM_BUY", 0);				// 매입금액
	this.dsList.setColumn(nrow, "AM_EST", 0);				// 평가금액
	this.dsList.setColumn(nrow, "YN_PLAN", "N");			// 계획생성
	this.dsList.setColumn(nrow, "YN_CLOSE", "N");			// 완료여부
	this.dsList.setColumn(nrow, "YN_DAMBO", "N");			// 여부
	this.dsList.setColumn(nrow, "AM_DAMBO", 0);				// 금액
	this.dsList.setColumn(nrow, "QN_DAMBO", 0);				// 수량
	this.dsList.setColumn(nrow, "TY_TERM", 0);				// 장단기
	this.dsList.setColumn(nrow, "YN_JANGDAN", "N");				// 대체
	this.dsList.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
	
	this.dsList.set_enableevent(true);
	
	this.dsList.set_rowposition(nrow);
	this.dxGrid.setCellPos(1);
	
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	//if (!this.gfnGridValidate(this.dxGrid)) return;
	
	// 해당펑션은 입력, 수정대상으로 체크하는게 아니라서 사용 어려움...
	//if (!this.gfnDataValidate(this.dsList, this.dsRequired)) return;
	if (!this.fnDataValidate()) return;
	
	this.dxGrid.updateToDataset();
	
	this.dsInsert.clearData();
	this.dsUpdate.clearData();
	this.dsDelete.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
				var nrow = this.dsInsert.addRow();
				this.dsInsert.setColumn(nrow, "CD_CORP", this.dsList.getColumn(i, "CD_CORP"));
				this.dsInsert.setColumn(nrow, "CD_YUGA", this.dsList.getColumn(i, "CD_YUGA"));
				this.dsInsert.setColumn(nrow, "NM_YUGA", this.dsList.getColumn(i, "NM_YUGA"));
				this.dsInsert.setColumn(nrow, "DT_BUY", this.dsList.getColumn(i, "DT_BUY"));
				this.dsInsert.setColumn(nrow, "CD_VENDOR", this.dsList.getColumn(i, "CD_VENDOR"));
				this.dsInsert.setColumn(nrow, "CD_DEPT_ACNT", this.dsList.getColumn(i, "CD_DEPT_ACNT"));
				this.dsInsert.setColumn(nrow, "CD_REPOSIT", this.dsList.getColumn(i, "CD_REPOSIT"));
				this.dsInsert.setColumn(nrow, "DT_START", this.dsList.getColumn(i, "DT_START"));
				this.dsInsert.setColumn(nrow, "DT_END", this.dsList.getColumn(i, "DT_END"));
				this.dsInsert.setColumn(nrow, "TY_SANG", this.dsList.getColumn(i, "TY_SANG"));
				this.dsInsert.setColumn(nrow, "TY_EZA", this.dsList.getColumn(i, "TY_EZA"));
				this.dsInsert.setColumn(nrow, "RT_EZA", this.dsList.getColumn(i, "RT_EZA"));
				this.dsInsert.setColumn(nrow, "TY_DANBOK", this.dsList.getColumn(i, "TY_DANBOK"));
				this.dsInsert.setColumn(nrow, "TR_EZASTD", this.dsList.getColumn(i, "TR_EZASTD"));
				this.dsInsert.setColumn(nrow, "TR_INTTERM", this.dsList.getColumn(i, "TR_INTTERM"));
				this.dsInsert.setColumn(nrow, "TY_SUNHOO", this.dsList.getColumn(i, "TY_SUNHOO"));
				this.dsInsert.setColumn(nrow, "TY_EZACAL", this.dsList.getColumn(i, "TY_EZACAL"));
				this.dsInsert.setColumn(nrow, "TY_YANGDAN", this.dsList.getColumn(i, "TY_YANGDAN"));
				this.dsInsert.setColumn(nrow, "AM_FACE", this.dsList.getColumn(i, "AM_FACE"));
				this.dsInsert.setColumn(nrow, "QN_BUY", this.dsList.getColumn(i, "QN_BUY"));
				this.dsInsert.setColumn(nrow, "AM_BUY", this.dsList.getColumn(i, "AM_BUY"));
				this.dsInsert.setColumn(nrow, "YN_CLOSE", this.dsList.getColumn(i, "YN_CLOSE"));
				this.dsInsert.setColumn(nrow, "YN_DAMBO", this.dsList.getColumn(i, "YN_DAMBO"));
				this.dsInsert.setColumn(nrow, "AM_DAMBO", this.dsList.getColumn(i, "AM_DAMBO"));
				this.dsInsert.setColumn(nrow, "DS_DAMBO", this.dsList.getColumn(i, "DS_DAMBO"));
				this.dsInsert.setColumn(nrow, "NO_ACCOUNT", this.dsList.getColumn(i, "NO_ACCOUNT"));
				this.dsInsert.setColumn(nrow, "TY_GUBUN", this.dsList.getColumn(i, "TY_GUBUN"));
				this.dsInsert.setColumn(nrow, "CD_BANK", this.dsList.getColumn(i, "CD_BANK"));				
				this.dsInsert.setColumn(nrow, "RM_BIGO", this.dsList.getColumn(i, "RM_BIGO"));
				this.dsInsert.setColumn(nrow, "CD_CURRENCY", this.dsList.getColumn(i, "CD_CURRENCY"));
				this.dsInsert.setColumn(nrow, "RT_CURRENCY", this.dsList.getColumn(i, "RT_CURRENCY"));
				this.dsInsert.setColumn(nrow, "NO_AFTER", this.dsList.getColumn(i, "NO_AFTER"));
				this.dsInsert.setColumn(nrow, "DT_AFTER1", this.dsList.getColumn(i, "DT_AFTER1"));
				this.dsInsert.setColumn(nrow, "DT_AFTER2", this.dsList.getColumn(i, "DT_AFTER2"));				
				this.dsInsert.setColumn(nrow, "QN_DAMBO", this.dsList.getColumn(i, "QN_DAMBO"));
				this.dsInsert.setColumn(nrow, "TY_CMS", this.dsList.getColumn(i, "TY_CMS"));
				this.dsInsert.setColumn(nrow, "NO_ACCOUNT_TRAN", this.dsList.getColumn(i, "NO_ACCOUNT_TRAN"));
				this.dsInsert.setColumn(nrow, "ID_USER", this.dsList.getColumn(i, "ID_USER"));
				this.dsInsert.setColumn(nrow, "TY_TERM", this.dsList.getColumn(i, "TY_TERM"));
				this.dsInsert.setColumn(nrow, "YN_JANGDAN", this.dsList.getColumn(i, "YN_JANGDAN"));
				break;
				
			case "U":
				var nrow = this.dsUpdate.addRow();
				this.dsUpdate.setColumn(nrow, "CD_CORP", this.dsList.getColumn(i, "CD_CORP"));
				this.dsUpdate.setColumn(nrow, "CD_YUGA", this.dsList.getColumn(i, "CD_YUGA"));
				this.dsUpdate.setColumn(nrow, "NM_YUGA", this.dsList.getColumn(i, "NM_YUGA"));
				this.dsUpdate.setColumn(nrow, "DT_BUY", this.dsList.getColumn(i, "DT_BUY"));
				this.dsUpdate.setColumn(nrow, "CD_VENDOR", this.dsList.getColumn(i, "CD_VENDOR"));
				this.dsUpdate.setColumn(nrow, "CD_DEPT_ACNT", this.dsList.getColumn(i, "CD_DEPT_ACNT"));
				this.dsUpdate.setColumn(nrow, "CD_REPOSIT", this.dsList.getColumn(i, "CD_REPOSIT"));
				this.dsUpdate.setColumn(nrow, "DT_START", this.dsList.getColumn(i, "DT_START"));
				this.dsUpdate.setColumn(nrow, "DT_END", this.dsList.getColumn(i, "DT_END"));
				this.dsUpdate.setColumn(nrow, "TY_SANG", this.dsList.getColumn(i, "TY_SANG"));
				this.dsUpdate.setColumn(nrow, "TY_EZA", this.dsList.getColumn(i, "TY_EZA"));
				this.dsUpdate.setColumn(nrow, "RT_EZA", this.dsList.getColumn(i, "RT_EZA"));
				this.dsUpdate.setColumn(nrow, "TY_DANBOK", this.dsList.getColumn(i, "TY_DANBOK"));
				this.dsUpdate.setColumn(nrow, "TR_EZASTD", this.dsList.getColumn(i, "TR_EZASTD"));
				this.dsUpdate.setColumn(nrow, "TR_INTTERM", this.dsList.getColumn(i, "TR_INTTERM"));
				this.dsUpdate.setColumn(nrow, "TY_SUNHOO", this.dsList.getColumn(i, "TY_SUNHOO"));
				this.dsUpdate.setColumn(nrow, "TY_EZACAL", this.dsList.getColumn(i, "TY_EZACAL"));
				this.dsUpdate.setColumn(nrow, "TY_YANGDAN", this.dsList.getColumn(i, "TY_YANGDAN"));
				this.dsUpdate.setColumn(nrow, "AM_FACE", this.dsList.getColumn(i, "AM_FACE"));
				this.dsUpdate.setColumn(nrow, "QN_BUY", this.dsList.getColumn(i, "QN_BUY"));
				this.dsUpdate.setColumn(nrow, "AM_BUY", this.dsList.getColumn(i, "AM_BUY"));
				this.dsUpdate.setColumn(nrow, "YN_CLOSE", this.dsList.getColumn(i, "YN_CLOSE"));
				this.dsUpdate.setColumn(nrow, "YN_DAMBO", this.dsList.getColumn(i, "YN_DAMBO"));
				this.dsUpdate.setColumn(nrow, "AM_DAMBO", this.dsList.getColumn(i, "AM_DAMBO"));
				this.dsUpdate.setColumn(nrow, "DS_DAMBO", this.dsList.getColumn(i, "DS_DAMBO"));
				this.dsUpdate.setColumn(nrow, "RM_BIGO", this.dsList.getColumn(i, "RM_BIGO"));
				this.dsUpdate.setColumn(nrow, "NO_ACCOUNT", this.dsList.getColumn(i, "NO_ACCOUNT"));
				this.dsUpdate.setColumn(nrow, "TY_GUBUN", this.dsList.getColumn(i, "TY_GUBUN"));
				this.dsUpdate.setColumn(nrow, "CD_BANK", this.dsList.getColumn(i, "CD_BANK"));		
				this.dsUpdate.setColumn(nrow, "CD_CURRENCY", this.dsList.getColumn(i, "CD_CURRENCY"));
				this.dsUpdate.setColumn(nrow, "RT_CURRENCY", this.dsList.getColumn(i, "RT_CURRENCY"));
				this.dsUpdate.setColumn(nrow, "NO_AFTER", this.dsList.getColumn(i, "NO_AFTER"));
				this.dsUpdate.setColumn(nrow, "DT_AFTER1", this.dsList.getColumn(i, "DT_AFTER1"));
				this.dsUpdate.setColumn(nrow, "DT_AFTER2", this.dsList.getColumn(i, "DT_AFTER2"));				
				this.dsUpdate.setColumn(nrow, "NO_YUGA", this.dsList.getColumn(i, "NO_YUGA"));
				this.dsUpdate.setColumn(nrow, "QN_DAMBO", this.dsList.getColumn(i, "QN_DAMBO"));
				this.dsUpdate.setColumn(nrow, "TY_CMS", this.dsList.getColumn(i, "TY_CMS"));
				this.dsUpdate.setColumn(nrow, "NO_ACCOUNT_TRAN", this.dsList.getColumn(i, "NO_ACCOUNT_TRAN"));
				this.dsUpdate.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
				this.dsUpdate.setColumn(nrow, "TY_TERM", this.dsList.getColumn(i, "TY_TERM"));
				this.dsUpdate.setColumn(nrow, "YN_JANGDAN", this.dsList.getColumn(i, "YN_JANGDAN"));
				break;
			case "D":
				var nrow = this.dsDelete.addRow();
				this.dsDelete.setColumn(nrow, "NO_YUGA", this.dsList.getColumn(i, "NO_YUGA"));
				break;
		}
	}
	
	if (this.dsInsert.rowcount == 0 && this.dsUpdate.rowcount == 0 && this.dsDelete.rowcount == 0) return;
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "insert=dsInsert update=dsUpdate delete=dsDelete";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
			
		// YN_VIEW then Y 보이기
		if (this.dsList.rowcount > 0 && this.dsList.getColumn(this.dsList.rowposition, "YN_VIEW") == "Y") {
			this.fnVisibleComp(true);
		}		
		
	} else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}else if(svcID == "combo"){
	
		//  조회조건(완료여부)
		var iRow = this.dsYN_CLOSE.insertRow(0);
		this.dsYN_CLOSE.setColumn(iRow, "CD_CODE", "");
		this.dsYN_CLOSE.setColumn(iRow, "DS_CODE", "전체");
		this.cboYN_CLOSE.set_index(2);
		
		// 타화면에서 호출 및 파라미터 존재시 자동 조회
		if(!this.gfnIsNull(this.getOwnerFrame().NO_YUGA)) {
			this.divSearch.form.cfNO_YUGA.form.CDTextBox.set_value(this.getOwnerFrame().NO_YUGA); 
			this.divSearch.form.cfNO_YUGA.form.DSTextBox.set_value(this.getOwnerFrame().NM_YUGA); 
			this.divSearch.form.cfCD_YUGA.form.CDTextBox.set_value(this.getOwnerFrame().CD_YUGA); 
			this.divSearch.form.cfCD_YUGA.form.DSTextBox.set_value(this.getOwnerFrame().DS_YUGA); 	
			this.cfCD_CORP.form.CDTextBox.set_value(this.getOwnerFrame().CD_CORP);
			this.cfCD_CORP.form.DSTextBox.set_value(this.getOwnerFrame().DS_CORP);
			this.FormBtns.Select.click();
		}	
	} else if(svcID == "e_create") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {

	var cdCorp = this.cfCD_CORP.form.CDTextBox.value;
	var cdCorp2 = this.dsList.getColumn(this.dsList.rowposition, "CD_CORP");
	
	switch(id) {
	
	// 법인코드(조회조건)
	case "cfCD_CORP": 	
		dsUserParam.setColumn(nrow, "CD_GROUP", this.gfnIsNull(this.cdGroup) ? "" : this.cdGroup);	
		break;
		
	// 유가증권(조회조건)
	case "cfCD_YUGA":	
		dsUserParam.setColumn(nrow, "YN_USE", "Y");	
		dsUserParam.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
		break;		
		
	// 관리번호(조회조건)	
	case "cfNO_YUGA": 
		dsUserParam.setColumn(nrow, "CD_CORP", this.gfnIsNull(cdCorp) ? "" : cdCorp);
		dsUserParam.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
		break;

	// 법인코드
	case "ccfCD_CORP2":
		dsUserParam.setColumn(nrow, "CD_GROUP", this.gfnIsNull(this.cdGroup) ? "" : this.cdGroup);	
		break;
		
	// 유가증권종류
	case "cfCD_YUGA2": 
		dsUserParam.setColumn(nrow, "YN_USE", "Y");	
		dsUserParam.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
		break;
		
	// 매입기관
	case "cfCD_VENDOR": 
		dsUserParam.setColumn(nrow, "TY_VENDOR1", "전체");
		dsUserParam.setColumn(nrow, "CD_CORP", this.gfnIsNull(cdCorp2) ? "" : cdCorp2);			
		break;
		
	// 귀속부서	
	case "cfCD_DEPT_ACNT": 
		dsUserParam.setColumn(nrow, "CD_GROUP", this.gfnIsNull(this.cdGroup) ? "" : this.cdGroup);
		dsUserParam.setColumn(nrow, "CD_CORP", this.gfnIsNull(cdCorp2) ? "" : cdCorp2);
		break;
		
	// 보관처	
	case "cfCD_REPOSIT": 
		dsUserParam.setColumn(nrow, "TY_VENDOR1", "전체");
		dsUserParam.setColumn(nrow, "CD_CORP", this.gfnIsNull(cdCorp2) ? "" : cdCorp2);	
		break;		

	// 계좌	
	case "cfNO_ACCOUNT": 
		dsUserParam.setColumn(nrow, "CD_CORP", this.gfnIsNull(cdCorp2) ? "" : cdCorp2);	
		break;
		
	// 전송계좌	
	case "cfNO_ACCOUNT_TRAN": 
		dsUserParam.setColumn(nrow, "TY_VENDOR", "");	
		dsUserParam.setColumn(nrow, "CD_PAY", this.gfnNvl(this.dsList.getColumn(this.dsList.rowposition,"CD_VENDOR"),""));	// 매입기관
		dsUserParam.setColumn(nrow, "TY_CASH", "");	
		dsUserParam.setColumn(nrow, "CD_CORP", "");	
		break;		
		
	default:
	}	
	return true;
};

this.fnAfterCDTextChanged = function(id, codeFindData) {
	var arr = codeFindData;
	
	switch(id) {
	
	// 법인코드(조회조건)
	case "cfCD_CORP": 	
		break;
		
	// 유가증권(조회조건)
	case "cfCD_YUGA":	
		break;		
		
	// 관리번호(조회조건)	
	case "cfNO_YUGA": 
		break;

	// 법인코드
	case "ccfCD_CORP2":
		break;
		
	// 유가증권종류
	case "cfCD_YUGA2": 
		// 핸재로우가 입력 상태이고 해외여부(YN_FOREIGN) Y이면 visible 처리
		if (arr.length > 0 && this.gfnGetFlag(this.dsList, this.dsList.rowposition) == "I") {
			//trace("YN_FOREIGN :: " + arr[0]["YN_FOREIGN"]);
			if ( arr[0]["YN_FOREIGN"] == "Y" ) {
				this.fnVisibleComp(true);
			} else {
				this.fnVisibleComp(false);
			}
		}
		break;
		
	// 매입기관
	case "cfCD_VENDOR": 
		break;
		
	// 귀속부서	
	case "cfCD_DEPT_ACNT": 
		break;
		
	// 보관처	
	case "cfCD_REPOSIT": 
		break;		
		
	// 계좌	
	case "cfNO_ACCOUNT": 
		if(arr.length > 0) {
			this.dsList.setColumn(this.dsList.rowposition, "TY_GUBUN", arr[0]["TY_GUBUN"]);
			this.dsList.setColumn(this.dsList.rowposition, "CD_BANK", arr[0]["CD_BANK"]);
		}
		break;	
		
	// 전송계좌	
	case "cfNO_ACCOUNT_TRAN": 
		if(arr.length > 0) {
			this.dsList.setColumn(this.dsList.rowposition, "NO_ACCOUNT_TRAN", arr[0]["NO_ACCOUNT"]);
			this.dsList.setColumn(this.dsList.rowposition, "DS_BANK_TRAN", arr[0]["DS_BANK"]);
		}
		break;	
		
	default:
	}	
};
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGrid_RowCellChanged = function(obj:nexacro.Grid,e:nexacro.GridSelectEventInfo){
    if (e.row != -1) {
		var URL_PROOF = this.gfnNvl(this.dsList.getColumn(e.row, "URL_PROOF"), "첨부파일");
		this.btnFileUpload.set_text(URL_PROOF);
	}
};

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {

	if(e == null || (e.pretext != e.posttext)) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);
	}
};


this.fnDataValidate = function(){

	var msg = "은(는) 필수입력 입니다.";
	
	for (var i=0; i < this.dsList.rowcount; i++) {
		if (this.dsList.getColumn(i, "nx_flag") == "I" || this.dsList.getColumn(i, "nx_flag") == "U") {
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "CD_CORP")))){
				this.gfnAlert("법인코드" + msg);
				this.dsList.set_rowposition(i);
				this.ccfCD_CORP2.form.CDTextBox.setFocus();
				return false;
			}
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "CD_YUGA")))){
				this.gfnAlert("종류" + msg);
				this.dsList.set_rowposition(i);
				this.cfCD_YUGA2.form.CDTextBox.setFocus();
				return false;
			}					
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "NM_YUGA")))){
				this.gfnAlert("유가증권명" + msg);
				this.dsList.set_rowposition(i);
				this.txtNM_YUGA.setFocus();
				return false;
			}	
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "DT_BUY")))){
				this.gfnAlert("매입일자" + msg);
				this.dsList.set_rowposition(i);
				this.calDT_BUY.setFocus();
				return false;
			}							
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "CD_VENDOR")))){
				this.gfnAlert("매입기관" + msg);
				this.dsList.set_rowposition(i);
				this.cfCD_VENDOR.form.CDTextBox.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "CD_DEPT_ACNT")))){
				this.gfnAlert("귀속부서" + msg);
				this.dsList.set_rowposition(i);
				this.cfCD_DEPT_ACNT.form.CDTextBox.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "CD_REPOSIT")))){
				this.gfnAlert("보관처" + msg);
				this.dsList.set_rowposition(i);
				this.cfCD_REPOSIT.form.CDTextBox.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "DT_START")))){
				this.gfnAlert("기간(from)" + msg);
				this.dsList.set_rowposition(i);
				this.calDT_START.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.dsList.getColumn(i, "DT_END"))){
				this.gfnAlert("기간(to)" + msg);
				this.dsList.set_rowposition(i);
				this.calDT_END.setFocus();
				return false;
			}
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "NO_ACCOUNT")))){
				this.gfnAlert("대체계좌" + msg);
				this.dsList.set_rowposition(i);
				this.cfNO_ACCOUNT.form.CDTextBox.setFocus();
				return false;
			}			
			
			if ( !this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "DT_START"))) && !this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "DT_END"))) ) {
				if ( this.gfnTrim(this.dsList.getColumn(i, "DT_START")) > this.gfnTrim(this.dsList.getColumn(i, "DT_END")) ) {
					this.gfnAlert("기간이 잘못 입력 되었습니다.");
					this.dsList.set_rowposition(i);
					this.calDT_START.setFocus();
					return false;
				}
			}			

			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "TY_SANG")))){
				this.gfnAlert("방법" + msg);
				this.dsList.set_rowposition(i);
				this.cboTY_SANG.setFocus();
				return false;
			}

			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "TY_EZA")))){
				this.gfnAlert("유형" + msg);
				this.dsList.set_rowposition(i);
				this.cboTY_EZA.setFocus();
				return false;
			}
			
			if(this.gfnIsNull(this.dsList.getColumn(i, "RT_EZA"))){
				this.gfnAlert("이율" + msg);
				this.dsList.set_rowposition(i);
				this.mskRT_EZA.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "TY_DANBOK")))){
				this.gfnAlert("방식" + msg);
				this.dsList.set_rowposition(i);
				this.cboTY_DANBOK.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.dsList.getColumn(i, "TR_EZASTD"))){
				this.gfnAlert("수취일" + msg);
				this.dsList.set_rowposition(i);
				this.mskTR_EZASTD.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.dsList.getColumn(i, "TR_INTTERM"))){
				this.gfnAlert("주기(개월)" + msg);
				this.dsList.set_rowposition(i);
				this.mskTR_INTTERM.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.dsList.getColumn(i, "TY_SUNHOO"))){
				this.gfnAlert("기준" + msg);
				this.dsList.set_rowposition(i);
				this.cboTY_SUNHOO.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.dsList.getColumn(i, "TY_EZACAL"))){
				this.gfnAlert("계산방식" + msg);
				this.dsList.set_rowposition(i);
				this.cboTY_EZACAL.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.dsList.getColumn(i, "TY_YANGDAN"))){
				this.gfnAlert("일수계산" + msg);
				this.dsList.set_rowposition(i);
				this.cboTY_YANGDAN.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.dsList.getColumn(i, "AM_FACE"))){
				this.gfnAlert("액면가액" + msg);
				this.dsList.set_rowposition(i);
				this.mskAM_FACE.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.dsList.getColumn(i, "QN_BUY"))){
				this.gfnAlert("취득수량" + msg);
				this.dsList.set_rowposition(i);
				this.mskQN_BUY.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.dsList.getColumn(i, "AM_BUY"))){
				this.gfnAlert("매입금액" + msg);
				this.dsList.set_rowposition(i);
				this.mskAM_BUY.setFocus();
				return false;
			}			
			
			
			
// 			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "YN_PLAN")))){
// 				this.gfnAlert("계획생성" + msg);
// 				this.dsList.set_rowposition(i);
// 				this.cboYN_PLAN.setFocus();
// 				return false;
// 			}
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "YN_CLOSE")))){
				this.gfnAlert("완료여부" + msg);
				this.dsList.set_rowposition(i);
				this.cboYN_CLOSE2.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "YN_DAMBO")))){
				this.gfnAlert("담보여부" + msg);
				this.dsList.set_rowposition(i);
				this.cboYN_DAMBO.setFocus();
				return false;
			}				
			
			if(this.gfnIsNull(this.dsList.getColumn(i, "QN_DAMBO"))){
				this.gfnAlert("수량" + msg);
				this.dsList.set_rowposition(i);
				this.mskQN_DAMBO.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.dsList.getColumn(i, "AM_DAMBO"))){
				this.gfnAlert("금액" + msg);
				this.dsList.set_rowposition(i);
				this.mskAM_DAMBO.setFocus();
				return false;
			}			
		}
	}
	return true;
}

this.fnSetCombo = function() {
	
	// 완료여부
	this.dsCombo = new Dataset();
	this.dsCombo.addColumn("CD_SYSTEM", "string");
	this.dsCombo.addColumn("CD_TYPE", "string");
	this.dsCombo.addRow();
	this.dsCombo.setColumn(0, "CD_SYSTEM", "DF");
	this.dsCombo.setColumn(0, "CD_TYPE", "E9");
	
	// 방법
	this.dsCombo2 = new Dataset();
	this.dsCombo2.addColumn("CD_SYSTEM", "string");
	this.dsCombo2.addColumn("CD_TYPE", "string");	
	this.dsCombo2.addRow();
	this.dsCombo2.setColumn(0, "CD_SYSTEM", "DF");
	this.dsCombo2.setColumn(0, "CD_TYPE", "E3");

	// 방식
	this.dsCombo3 = new Dataset();
	this.dsCombo3.addColumn("CD_SYSTEM", "string");
	this.dsCombo3.addColumn("CD_TYPE", "string");	
	this.dsCombo3.addRow();
	this.dsCombo3.setColumn(0, "CD_SYSTEM", "DF");
	this.dsCombo3.setColumn(0, "CD_TYPE", "E0");

	// 기준
	this.dsCombo4 = new Dataset();
	this.dsCombo4.addColumn("CD_SYSTEM", "string");
	this.dsCombo4.addColumn("CD_TYPE", "string");	
	this.dsCombo4.addRow();
	this.dsCombo4.setColumn(0, "CD_SYSTEM", "DF");
	this.dsCombo4.setColumn(0, "CD_TYPE", "E5");	

	// 계산방식
	this.dsCombo5 = new Dataset();
	this.dsCombo5.addColumn("CD_SYSTEM", "string");
	this.dsCombo5.addColumn("CD_TYPE", "string");		
	this.dsCombo5.addRow();
	this.dsCombo5.setColumn(0, "CD_SYSTEM", "DF");
	this.dsCombo5.setColumn(0, "CD_TYPE", "E6");	

	// 일수계산
	this.dsCombo6 = new Dataset();
	this.dsCombo6.addColumn("CD_SYSTEM", "string");
	this.dsCombo6.addColumn("CD_TYPE", "string");		
	this.dsCombo6.addRow();
	this.dsCombo6.setColumn(0, "CD_SYSTEM", "DF");
	this.dsCombo6.setColumn(0, "CD_TYPE", "E7");	
	
	// 화폐단위
	this.dsCombo7 = new Dataset();
	this.dsCombo7.addColumn("CD_SYSTEM", "string");
	this.dsCombo7.addColumn("CD_TYPE", "string");		
	this.dsCombo7.addRow();
	this.dsCombo7.setColumn(0, "CD_SYSTEM", "DF");
	this.dsCombo7.setColumn(0, "CD_TYPE", "40");	
	
	// 수취방법
	this.dsCombo8 = new Dataset();
	this.dsCombo8.addColumn("CD_SYSTEM", "string");
	this.dsCombo8.addColumn("CD_TYPE", "string");		
	this.dsCombo8.addRow();
	this.dsCombo8.setColumn(0, "CD_SYSTEM", "DF");
	this.dsCombo8.setColumn(0, "CD_TYPE", "E2");
	
	// 브랜치전송
	this.dsCombo9 = new Dataset();
	this.dsCombo9.addColumn("CD_SYSTEM", "string");
	this.dsCombo9.addColumn("CD_TYPE", "string");		
	this.dsCombo9.addRow();
	this.dsCombo9.setColumn(0, "CD_SYSTEM", "DF");
	this.dsCombo9.setColumn(0, "CD_TYPE", "ZZ");
	
	this.dsCombo10 = new Dataset();
	this.dsCombo10.addColumn("CD_SYSTEM", "string");
	this.dsCombo10.addColumn("CD_TYPE", "string");		
	this.dsCombo10.addRow();
	this.dsCombo10.setColumn(0, "CD_SYSTEM", "DF");
	this.dsCombo10.setColumn(0, "CD_TYPE", "E8");
	
	var strSvcId    = "combo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "combo=dsCombo combo2=dsCombo2 combo3=dsCombo3 combo4=dsCombo4 combo5=dsCombo5 combo6=dsCombo6 combo7=dsCombo combo8=dsCombo7 combo9=dsCombo8 combo10=dsCombo10";
	var outData     = "dsYN_CLOSE=combo0 dsTY_EZA=combo20 dsTY_DANBOK=combo30 dsTY_SUNHOO=combo40 dsTY_EZACAL=combo50 dsTY_YANGDAN=combo60 dsYN_CLOSE2=combo70 dsCD_CURRENCY=combo80 dsTY_SANG=combo90 dsTY_TERM=combo100";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
};

this.divData_divSplitter_ondrag = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
	e.set_userdata("splitter");
	return true;
};

this.divData_ondragmove = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
	if(e.userdata == "splitter") {
		this.divData.form.divSplitter.set_left(e.clientx);
		this.divData.form.resetScroll();
	}
};

//검색어 키다운 이벤트
this.divSearch_txtSEARCH_onkeydown = function(obj:nexacro.Edit,e:nexacro.KeyEventInfo)
{
	if(e.keycode == 13){
		this.fnSelect();
	}
};

// 계획생성
this.fnPlanCreat = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if(!this.gfnGridIsRow(this.dxGrid)) return;
	this.gfnConfirm("유가증권 계획생성 합니다.", "fnPlanCreatCallback");
}

// 계획생성 Callback
this.fnPlanCreatCallback = function(strId, val) {

	if(val == false) return;
	
	this.dsExcute.clearData();
	this.dsExcute.addRow();
	
	this.dsExcute.setColumn(0, "NO_YUGA", this.dsList.getColumn(this.dsList.rowposition,"NO_YUGA"));
	this.dsExcute.setColumn(0, "DT_DATE", this.dsList.getColumn(this.dsList.rowposition,"DT_BUY"));
	this.dsExcute.setColumn(0, "YN_FIRST", "Y");
	this.dsExcute.setColumn(0, "ID_USER", this.AuthClient.ID_USER);
	
	var strSvcId    = "e_create";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "e_create=dsExcute"; 
	var outData     = "dsResult=e_create0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]

}

// 계획/실적
this.fnPlanPerform = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	var param = {};
	param.OWNER_ID = "DFE_YUGA_REGISTRATION";
	
	param.CD_CORP = this.dsList.getColumn(this.dsList.rowposition, "CD_CORP");
	param.DS_CORP = this.dsList.getColumn(this.dsList.rowposition, "DS_CORP");
	param.DT_FROM = this.dsList.getColumn(this.dsList.rowposition, "DT_BUY");
	param.DT_TO =  this.gfnAddMonth(this.dsList.getColumn(this.dsList.rowposition, "DT_END"), 1);	
	param.NO_YUGA = this.dsList.getColumn(this.dsList.rowposition, "NO_YUGA");	
	param.NM_YUGA = this.dsList.getColumn(this.dsList.rowposition, "NM_YUGA");
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DFE_YUGA_PLAN", "", param);
}

// 유가증권평가
this.fnYugaEval = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	// TODO 유가증권평가 기능 추가
	this.gfnAlert("todo 유가증권평가");
}


this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if ( e.oldvalue != e.newvalue ) {
		this.gfnSetFormStatus(this);
		this.gfnGridClear(this.dxGrid);
	}
};


// 조회결과에 따른 외화금액/화폐단위/환율/수리신고번호/사후신고마감일/사후신고일 visible 처리
this.fnVisibleComp = function(visible) {
	
	this.divData.form.divDataRight.form.sta901.set_visible(visible);
	this.divData.form.divDataRight.form.sta902.set_visible(visible);
	this.divData.form.divDataRight.form.sta903.set_visible(visible);
	this.divData.form.divDataRight.form.sta904.set_visible(visible);
	this.divData.form.divDataRight.form.sta905.set_visible(visible);
	this.divData.form.divDataRight.form.sta906.set_visible(visible);
	this.divData.form.divDataRight.form.sta907.set_visible(visible);
	this.divData.form.divDataRight.form.sta908.set_visible(visible);
	
	this.divData.form.divDataRight.form.mskAM_KOR.set_visible(visible);
	this.divData.form.divDataRight.form.cboCD_CURRENCY.set_visible(visible);
	this.divData.form.divDataRight.form.mskRT_CURRENCY.set_visible(visible);
	this.divData.form.divDataRight.form.txtNO_AFTER.set_visible(visible);
	this.divData.form.divDataRight.form.calDT_AFTER1.set_visible(visible);
	this.divData.form.divDataRight.form.calDT_AFTER2.set_visible(visible);
	
	if (visible) {
		this.divData.form.divDataRight.form.div00.set_top(396);
	} else {
		this.divData.form.divDataRight.form.div00.set_top(338);
	}
}

this.dsList_onrowposchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSRowPosChangeEventInfo)
{
	
	var ynView = obj.getColumn(e.newrow, "YN_VIEW");
	//trace("ynView :: " + ynView);
	
	if (ynView == "Y") {
		this.fnVisibleComp(true);
	} else {
		this.fnVisibleComp(false);
	}
};
this.dsList_oncolumnchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if (this.gfnGetFlag(this.dsList, e.row) == "#")
		return;

	// 매입입자 및 유가증권종류명 수정시 유가증권명칭 자동 변경
	if (e.columnid == "DT_BUY" || e.columnid == "DS_YUGA") {
	
		if (e.oldvalue != e.newvalue) {
			var dsYuga = this.gfnIsNull(obj.getColumn(e.row, "DS_YUGA")) ? "" : obj.getColumn(e.row, "DS_YUGA");
			var dtBuy = this.gfnIsNull(obj.getColumn(e.row, "DT_BUY")) ? "" : obj.getColumn(e.row, "DT_BUY");
			var nmYuga = "";
			if (this.gfnIsNull(dsYuga)) {
				nmYuga = dtBuy.substr(0,6);
			}  else {
				nmYuga = dsYuga + "_" + dtBuy.substr(0,6);
			}
			
			obj.setColumn(e.row, "NM_YUGA", nmYuga);
		}
	}
};

// 첨부파일
this.fnFileUpload = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	//trace("this.btnFileUpload.text :: " + this.btnFileUpload.text);
	if (this.dsList.rowcount <= 0) {
		return false;
	}
	//var colnm = this.gfnGridGetBindColumnNameByIndex(obj, e.cell);
	
	//if(colnm == "URL_PROOF") {
		// 최초 작성시엔 NO_SEQ가 없기 때문에 저장 후에 파일 첨부를 진행하여야 함.
		// CD_DIR에 넣어줄 값이 없기에 저장 후 진행!
		if(this.gfnGetFlag(this.dsList, this.dsList.rowposition) == "I"){
			this.gfnAlert("저장 후 파일첨부 진행.");
			return false;
		}

		var cdGubun = "DF04";
		var cdDir = "NO_YUGA";
				
		var fileManager = {};
		fileManager.CD_GUBUN = cdGubun;
		fileManager.CD_DIR = [this.dsList.getColumn(this.dsList.rowposition, cdDir)];
		fileManager.IS_READONLY = false;
		
// 		trace("VcboAccntGb :: " + VcboAccntGb);
// 		trace("fileManager.CD_GUBUN :: " + fileManager.CD_GUBUN);
// 		trace("fileManager.CD_DIR :: " + fileManager.CD_DIR);
// 		trace("fileManager.IS_READONLY :: " + fileManager.IS_READONLY);
		
		this.gfnFileManager(fileManager, "fnFileCallback");
	//}	
}

this.fnFileCallback = function(strID, val) {
	// val.IsChange : 변경여부, val.Cnt : 파일개수
		
	// 파일개수를 다시 셋팅
	this.dsList.set_enableevent(false);
	if(val.Cnt == 0) {
		this.btnFileUpload.set_text("첨부(0)");
	} else {
		this.btnFileUpload.set_text("첨부(" + val.Cnt + ")");
	}
	this.dsList.setColumn(this.dsList.rowposition, "URL_PROOF", "첨부(" + val.Cnt + ")");
	this.dsList.set_enableevent(true);
};]]></Script>
    <Objects>
      <Dataset id="dsList" onrowposchanged="dsList_onrowposchanged" oncolumnchanged="dsList_oncolumnchanged"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DFEPR_YUGAREG_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">insert</Col>
            <Col id="SP">DFEPR_YUGAREG_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">update</Col>
            <Col id="SP">DFEPR_YUGAREG_UPDATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">delete</Col>
            <Col id="SP">DFEPR_YUGAREG_DELETE</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo</Col>
            <Col id="SP">DZXPR_COMBO_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo2</Col>
            <Col id="SP">DZXPR_COMBO_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo3</Col>
            <Col id="SP">DZXPR_COMBO_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo4</Col>
            <Col id="SP">DZXPR_COMBO_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo5</Col>
            <Col id="SP">DZXPR_COMBO_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo6</Col>
            <Col id="SP">DZXPR_COMBO_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo7</Col>
            <Col id="SP">DZXPR_COMBO_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo8</Col>
            <Col id="SP">DZXPR_COMBO_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo9</Col>
            <Col id="SP">DZXPR_COMBO_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo10</Col>
            <Col id="SP">DZXPR_COMBO_SELECT</Col>
          </Row>
          <Row>
            <Col id="SP">DFEPR_YUGAPLAN_CREATE</Col>
            <Col id="TARGET">e_create</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="CD_YUGA" type="STRING" size="256"/>
          <Column id="NO_YUGA" type="STRING" size="256"/>
          <Column id="YN_CLOSE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsYN_PLAN">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">Y</Col>
            <Col id="DS_CODE">Y</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">N</Col>
            <Col id="DS_CODE">N</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsYN_DAMBO">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">Y</Col>
            <Col id="DS_CODE">Y</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">N</Col>
            <Col id="DS_CODE">N</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsYN_CLOSE"/>
      <Dataset id="dsYN_CLOSE2"/>
      <Dataset id="dsTY_EZA"/>
      <Dataset id="dsTY_SUNHOO"/>
      <Dataset id="dsTY_EZACAL"/>
      <Dataset id="dsTY_YANGDAN"/>
      <Dataset id="dsTY_DANBOK"/>
      <Dataset id="dsCD_CURRENCY"/>
      <Dataset id="dsTY_SANG"/>
      <Dataset id="dsTY_CMS"/>
      <Dataset id="dsYN_JANGDAN">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="NAME" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">Y</Col>
            <Col id="NAME">Y</Col>
          </Row>
          <Row>
            <Col id="CODE">N</Col>
            <Col id="NAME">N</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_TERM"/>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.cfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item1" compid="divSearch.form.cfCD_YUGA.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_YUGA"/>
      <BindItem id="item2" compid="divSearch.form.cfNO_YUGA.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="NO_YUGA"/>
      <BindItem id="item3" compid="divSearch.form.cboYN_CLOSE" propid="value" datasetid="dsSearch" columnid="YN_CLOSE"/>
      <BindItem id="item4" compid="divData.form.divDataRight.form.txtNO_YUGA" propid="value" datasetid="dsList" columnid="NO_YUGA"/>
      <BindItem id="item5" compid="divData.form.divDataRight.form.ccfCD_CORP2.form.CDTextBox" propid="value" datasetid="dsList" columnid="CD_CORP"/>
      <BindItem id="item6" compid="divData.form.divDataRight.form.ccfCD_CORP2.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_CORP"/>
      <BindItem id="item7" compid="divData.form.divDataRight.form.cfCD_YUGA2.form.CDTextBox" propid="value" datasetid="dsList" columnid="CD_YUGA"/>
      <BindItem id="item8" compid="divData.form.divDataRight.form.cfCD_YUGA2.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_YUGA"/>
      <BindItem id="item9" compid="divData.form.divDataRight.form.txtNM_YUGA" propid="value" datasetid="dsList" columnid="NM_YUGA"/>
      <BindItem id="item10" compid="divData.form.divDataRight.form.calDT_BUY" propid="value" datasetid="dsList" columnid="DT_BUY"/>
      <BindItem id="item11" compid="divData.form.divDataRight.form.cfCD_VENDOR.form.CDTextBox" propid="value" datasetid="dsList" columnid="CD_VENDOR"/>
      <BindItem id="item12" compid="divData.form.divDataRight.form.cfCD_VENDOR.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_VENDOR"/>
      <BindItem id="item13" compid="divData.form.divDataRight.form.cfCD_DEPT_ACNT.form.CDTextBox" propid="value" datasetid="dsList" columnid="CD_DEPT_ACNT"/>
      <BindItem id="item14" compid="divData.form.divDataRight.form.cfCD_DEPT_ACNT.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_DEPT_ACNT"/>
      <BindItem id="item15" compid="divData.form.divDataRight.form.cfCD_REPOSIT.form.CDTextBox" propid="value" datasetid="dsList" columnid="CD_REPOSIT"/>
      <BindItem id="item16" compid="divData.form.divDataRight.form.cfCD_REPOSIT.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_REPOSIT"/>
      <BindItem id="item17" compid="divData.form.divDataRight.form.calDT_START" propid="value" datasetid="dsList" columnid="DT_START"/>
      <BindItem id="item18" compid="divData.form.divDataRight.form.calDT_END" propid="value" datasetid="dsList" columnid="DT_END"/>
      <BindItem id="item19" compid="divData.form.divDataRight.form.cboTY_EZA" propid="value" datasetid="dsList" columnid="TY_EZA"/>
      <BindItem id="item20" compid="divData.form.divDataRight.form.mskRT_EZA" propid="value" datasetid="dsList" columnid="RT_EZA"/>
      <BindItem id="item21" compid="divData.form.divDataRight.form.cboTY_DANBOK" propid="value" datasetid="dsList" columnid="TY_DANBOK"/>
      <BindItem id="item22" compid="divData.form.divDataRight.form.mskTR_EZASTD" propid="value" datasetid="dsList" columnid="TR_EZASTD"/>
      <BindItem id="item23" compid="divData.form.divDataRight.form.mskTR_INTTERM" propid="value" datasetid="dsList" columnid="TR_INTTERM"/>
      <BindItem id="item24" compid="divData.form.divDataRight.form.cboTY_SUNHOO" propid="value" datasetid="dsList" columnid="TY_SUNHOO"/>
      <BindItem id="item25" compid="divData.form.divDataRight.form.cboTY_EZACAL" propid="value" datasetid="dsList" columnid="TY_EZACAL"/>
      <BindItem id="item26" compid="divData.form.divDataRight.form.cboTY_YANGDAN" propid="value" datasetid="dsList" columnid="TY_YANGDAN"/>
      <BindItem id="item27" compid="divData.form.divDataRight.form.mskAM_FACE" propid="value" datasetid="dsList" columnid="AM_FACE"/>
      <BindItem id="item28" compid="divData.form.divDataRight.form.mskQN_BUY" propid="value" datasetid="dsList" columnid="QN_BUY"/>
      <BindItem id="item29" compid="divData.form.divDataRight.form.mskAM_BUY" propid="value" datasetid="dsList" columnid="AM_BUY"/>
      <BindItem id="item37" compid="divData.form.divDataRight.form.cfNO_ACCOUNT.form.CDTextBox" propid="value" datasetid="dsList" columnid="NO_ACCOUNT"/>
      <BindItem id="item38" compid="divData.form.divDataRight.form.cfNO_ACCOUNT.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_BANK"/>
      <BindItem id="item30" compid="divData.form.divDataRight.form.div00.form.mskAM_LOANMAX" propid="value" datasetid="dsList" columnid="AM_LOANMAX"/>
      <BindItem id="item31" compid="divData.form.divDataRight.form.div00.form.TeaRM_BIGO" propid="value" datasetid="dsList" columnid="RM_BIGO"/>
      <BindItem id="item32" compid="divData.form.divDataRight.form.div00.form.txtDS_DAMBO" propid="value" datasetid="dsList" columnid="DS_DAMBO"/>
      <BindItem id="item33" compid="divData.form.divDataRight.form.div00.form.cboYN_PLAN" propid="value" datasetid="dsList" columnid="YN_PLAN"/>
      <BindItem id="item34" compid="divData.form.divDataRight.form.div00.form.cboYN_CLOSE2" propid="value" datasetid="dsList" columnid="YN_CLOSE"/>
      <BindItem id="item35" compid="divData.form.divDataRight.form.div00.form.mskAM_DAMBO" propid="value" datasetid="dsList" columnid="AM_DAMBO"/>
      <BindItem id="item36" compid="divData.form.divDataRight.form.div00.form.mskAM_EST" propid="value" datasetid="dsList" columnid="AM_ASSESS"/>
      <BindItem id="item39" compid="divData.form.divDataRight.form.div00.form.cboYN_DAMBO" propid="value" datasetid="dsList" columnid="YN_DAMBO"/>
      <BindItem id="item40" compid="divData.form.divDataRight.form.mskAM_KOR" propid="value" datasetid="dsList" columnid="AM_KOR"/>
      <BindItem id="item41" compid="divData.form.divDataRight.form.cboCD_CURRENCY" propid="value" datasetid="dsList" columnid="CD_CURRENCY"/>
      <BindItem id="item42" compid="divData.form.divDataRight.form.mskRT_CURRENCY" propid="value" datasetid="dsList" columnid="RT_CURRENCY"/>
      <BindItem id="item43" compid="divData.form.divDataRight.form.txtNO_AFTER" propid="value" datasetid="dsList" columnid="NO_AFTER"/>
      <BindItem id="item44" compid="divData.form.divDataRight.form.calDT_AFTER1" propid="value" datasetid="dsList" columnid="DT_AFTER1"/>
      <BindItem id="item45" compid="divData.form.divDataRight.form.calDT_AFTER2" propid="value" datasetid="dsList" columnid="DT_AFTER2"/>
      <BindItem id="item46" compid="divData.form.divDataRight.form.div00.form.mskQN_DAMBO" propid="value" datasetid="dsList" columnid="QN_DAMBO"/>
      <BindItem id="item47" compid="divData.form.divDataRight.form.cboTY_SANG" propid="value" datasetid="dsList" columnid="TY_SANG"/>
      <BindItem id="item48" compid="divData.form.divDataRight.form.cboTY_CMS" propid="value" datasetid="dsList" columnid="TY_CMS"/>
      <BindItem id="item49" compid="divData.form.divDataRight.form.cfNO_ACCOUNT_TRAN.form.CDTextBox" propid="value" datasetid="dsList" columnid="NO_ACCOUNT_TRAN"/>
      <BindItem id="item50" compid="divData.form.divDataRight.form.cfNO_ACCOUNT_TRAN.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_BANK_TRAN"/>
      <BindItem id="item51" compid="divData.form.divDataRight.form.cboTY_TERM" propid="value" datasetid="dsList" columnid="TY_TERM"/>
      <BindItem id="item52" compid="divData.form.divDataRight.form.cboYN_JANGDAN" propid="value" datasetid="dsList" columnid="YN_JANGDAN"/>
    </Bind>
  </Form>
</FDL>
