<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1200" height="700" maxwidth="1200" maxheight="700" titletext="전자결재상신" onload="form_onload" onclick="form_onclick">
    <Layouts>
      <Layout>
        <Div id="divData1" taborder="0" left="0" top="0" bottom="0" right="0" cssclass="div_DATA_Bg" text="">
          <Layouts>
            <Layout>
              <Div id="divDataApprTitle" taborder="0" left="0" top="0" background="" height="40" right="0">
                <Layouts>
                  <Layout>
                    <Static id="staApprNm" taborder="0" text="전자결재 SAMPLE" left="0" top="0" right="0" bottom="0" font="normal 20pt/normal &quot;Arial&quot;" textAlign="center" cssclass="sta_WF_tablelabelE"/>
                  </Layout>
                </Layouts>
              </Div>
              <Div id="divDataApprLine" taborder="1" top="divDataApprTitle:10" height="80" left="0" right="0">
                <Layouts>
                  <Layout>
                    <Static id="sta01" taborder="0" text="결재" left="0" width="50" bottom="0" cssclass="sta_WF_tablelabel" top="0" textAlign="center"/>
                    <Grid id="objGridAppr1" taborder="1" left="sta01:-1" top="0" bottom="0" right="50.5%"/>
                    <Static id="sta02" taborder="2" text="합의" left="objGridAppr1:10" width="50" bottom="0" cssclass="sta_WF_tablelabel" top="0" textAlign="center"/>
                    <Grid id="objGridAppr2" taborder="3" left="sta02:-1" top="0" bottom="0" right="0"/>
                  </Layout>
                </Layouts>
              </Div>
              <Div id="divDataMaster" taborder="2" left="0" top="divDataApprLine:10" height="60" right="0" text="">
                <Layouts>
                  <Layout>
                    <Static id="sta01" taborder="0" text="기안자" left="0" width="150" height="30" cssclass="sta_WF_tablelabel" top="0" textAlign="center"/>
                    <Static id="sta02" taborder="1" width="270" height="30" cssclass="sta_WF_tablebg" left="sta01:-1" top="0"/>
                    <Static id="sta00" taborder="2" text="기안부서" left="sta02:-1" width="150" height="30" cssclass="sta_WF_tablelabel" top="0" textAlign="center"/>
                    <Static id="sta03" taborder="3" width="270" height="30" cssclass="sta_WF_tablebg" left="sta00:-1" top="0"/>
                    <Static id="sta04" taborder="4" text="기안일자" left="sta03:-1" height="30" cssclass="sta_WF_tablelabel" top="0" width="150" textAlign="center"/>
                    <Static id="sta05" taborder="5" height="30" cssclass="sta_WF_tablebg" left="sta04:-1" top="0" right="0"/>
                    <Static id="sta06" taborder="6" text="제목" left="0" width="150" height="30" cssclass="sta_WF_tablelabel" top="sta01:-1" textAlign="center"/>
                    <Static id="sta07" taborder="7" width="688" height="30" cssclass="sta_WF_tablebg" left="sta06:-1" top="sta02:-1"/>
                    <Static id="sta08" taborder="8" text="문서번호" left="sta07:-1" height="30" cssclass="sta_WF_tablelabel" top="sta04:-1" width="150" textAlign="center"/>
                    <Static id="sta09" taborder="9" height="30" cssclass="sta_WF_tablebg" left="sta08:-1" top="sta05:-1" right="0"/>
                    <Edit id="txtDS_ETITLE" taborder="10" left="sta06:0" top="sta07:-25" width="671" height="20" readonly="true" border="0px none" background="#ffffff"/>
                  </Layout>
                </Layouts>
              </Div>
              <Div id="divDataBottom" taborder="0" left="0" top="divDataMaster:10" bottom="0" right="0">
                <Layouts>
                  <Layout>
                    <Tab id="tabData" taborder="0" tabindex="0" left="0" top="0" bottom="0" onchanged="divData1_divDataBottom_tabData_onchanged" minwidth="" right="0">
                      <Tabpages>
                        <Tabpage id="tab1" text="예금간대체계획" formscrolltype="none">
                          <Layouts>
                            <Layout>
                              <Grid id="objGridSub1" sub="true" taborder="1" left="0" top="0" right="0" height="150"/>
                              <Grid id="objGridSub2" sub="true" taborder="1" left="0" top="objGridSub1:10" width="1198" bottom="0"/>
                            </Layout>
                          </Layouts>
                        </Tabpage>
                        <Tabpage id="tab2" text="지급계획">
                          <Layouts>
                            <Layout>
                              <Grid id="objGridSub3" sub="true" taborder="1" left="0" top="0" right="0" height="150"/>
                              <Grid id="objGridSub4" sub="true" taborder="1" left="0" top="objGridSub3:10" right="0" bottom="0" oncellclick="divData1_divDataBottom_tabData_tab2_objGridSub4_oncellclick"/>
                            </Layout>
                          </Layouts>
                        </Tabpage>
                      </Tabpages>
                    </Tab>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.ID_AP_TYPE = "DF02";	//	예금간대체및지급계획

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//

 	this.fnSetButton();
 	this.fnSetExtendButton();
 	this.fnSetVariable();
 	this.fnSetEvent();
 	this.fnSetParameter();
	
	// 기본 버튼(입력,저장 등..) 숨김처리
	this.divTopBtn.form.fnSetVisibleButton(false);
	
	this.dsSearch.setColumn(0, "V1", this.gfnIsNull(this.getOwnerFrame().V1) ? "" : this.getOwnerFrame().V1);
	this.dsSearch.setColumn(0, "V2", this.gfnIsNull(this.getOwnerFrame().V2) ? "" : this.getOwnerFrame().V2);
	this.dsSearch.setColumn(0, "V3", this.gfnIsNull(this.getOwnerFrame().V3) ? "" : this.getOwnerFrame().V3);
	this.dsSearch.setColumn(0, "V4", this.gfnIsNull(this.getOwnerFrame().V4) ? "" : this.getOwnerFrame().V4);
	this.dsSearch.setColumn(0, "DS_ETITLE", this.getOwnerFrame().DS_ETITLE);
	
 	if(this.gfnIsNull(this.getOwnerFrame().ID_AP)) {
 		//채번 후 조회
 		this.fnInit();
 	}
 	else {
 		//조회
 		this.dsSearch.setColumn(0, "ID_AP", this.getOwnerFrame().ID_AP);
 		this.fnSelectMaster();
 	}
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btn1 = this.gfnFormButtonAdd("btn1", "fnAppr");	//승인
	this.btn2 = this.gfnFormButtonAdd("btn2", "fnAppr");	//반려
	this.btn3 = this.gfnFormButtonAdd("btn3", "fnBtn3");	//결재정보
	this.btn4 = this.gfnFormButtonAdd("btn4", "fnAppr");	//상신
	this.btn5 = this.gfnFormButtonAdd("btn5", "fnAppr");	//상신취소
	this.btn6 = this.gfnFormButtonAdd("btn6", "fnBtn6");	//파일첨부
	this.btn7 = this.gfnFormButtonAdd("btn7", "fnAppr");	//재기안
	this.btn8 = this.gfnFormButtonAdd("btn8", "fnAppr");	//수신접수
	this.btn9 = this.gfnFormButtonAdd("btn9", "fnAppr");	//삭제
	this.btn10 = this.gfnFormButtonAdd("btn10", "fnBtn10");	//결재선
	this.btn11 = this.gfnFormButtonAdd("btn11", "fnAppr");	//임시저장
	
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	//Title
	this.staApprNm = this.divData1.form.divDataApprTitle.form.staApprNm;
	//제목
	this.txtDS_ETITLE = this.divData1.form.divDataMaster.form.txtDS_ETITLE;
	
	// 결재선
	this.dxGridAppr1 = this.divData1.form.divDataApprLine.form.objGridAppr1;
	this.dxGridAppr2 = this.divData1.form.divDataApprLine.form.objGridAppr2;
	
	//this.dxGrid = this.divData1.form.objGrid;
	
	this.tabData = this.divData1.form.divDataBottom.form.tabData;
	
	// tab 1 예금간대체계획
	var tab1form = this.divData1.form.divDataBottom.form.tabData.tab1.form;
	this.dxGridSub1 = tab1form.objGridSub1;
	this.dxGridSub2 = tab1form.objGridSub2;
	
	// tab 2 지급계획
	var tab2form = this.divData1.form.divDataBottom.form.tabData.tab2.form;
	this.dxGridSub3 = tab2form.objGridSub3;
	this.dxGridSub4 = tab2form.objGridSub4;

	// BUTTON, BUTTON-IN 처리
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	//결재선 그리드 세팅
	this.gfnGridInit(this.dxGridAppr1, this.dsApprLines1, "DZ", "DZR_APLINES_01");
	this.gfnGridInit(this.dxGridAppr2, this.dsApprLines2, "DZ", "DZR_APLINES_01");

	this.dxGridAppr1.set_extendsizetype("none");
	this.dxGridAppr1.set_scrollbartype("none none");	// 가로 스크롤이 생기지 않게 세팅
	this.dxGridAppr2.set_extendsizetype("none");
	this.dxGridAppr2.set_scrollbartype("none none");	// 가로 스크롤이 생기지 않게 세팅


	//결재본문 그리드 세팅
	this.gfnGridInit(this.dxGridSub1, this.dsListPlanApp1, "DF", "DFB_PLAN_APP1");
	this.gfnGridInit(this.dxGridSub2, this.dsListPlanApp2, "DF", "DFB_PLAN_APP2");
	this.gfnGridInit(this.dxGridSub3, this.dsListPlanApp3, "DF", "DFB_PLAN_APP3");
	this.gfnGridInit(this.dxGridSub4, this.dsListPlanApp4, "DF", "DFB_PLAN_APP4");

	// 결재본문 그리드 세팅
	this.fnSetGridSubCellProperty(this.dxGridSub1);
	this.fnSetGridSubCellProperty(this.dxGridSub2);
	this.fnSetGridSubCellProperty(this.dxGridSub3);
	this.fnSetGridSubCellProperty(this.dxGridSub4);
	
// 	//가로 스크롤이 생기지 않게 세팅
// 	this.dxGrid.set_scrollbartype("none default");
// 	
// 	//그리드 헤더 색상 변경
// 	this.dxGrid.set_enableredraw(false);
// 	for(var i = 0; i < this.dxGrid.getCellCount("head"); i++) {
//  		this.dxGrid.setCellProperty("head",i,"background","#EDECEF");
//  		this.dxGrid.setCellProperty("head",i,"color","#4b5055");
// 		this.dxGrid.setCellProperty("head",i,"border","none, 1px solid #C4C2CD, 1px solid #C4C2CD, none");
// 	}
// 	this.dxGrid.set_enableredraw(true);

}

// 결재본문 그리드 세팅
this.fnSetGridSubCellProperty = function(objGrid) {
	//가로 스크롤이 생기지 않게 세팅
	objGrid.set_scrollbartype("none default");
	
	//그리드 헤더 색상 변경
	objGrid.set_enableredraw(false);
	for(var i = 0; i < objGrid.getCellCount("head"); i++) {
 		objGrid.setCellProperty("head",i,"background","#EDECEF");
 		objGrid.setCellProperty("head",i,"color","#4b5055");
		objGrid.setCellProperty("head",i,"border","none, 1px solid #C4C2CD, 1px solid #C4C2CD, none");
	}
	objGrid.set_enableredraw(true);
}
/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsApprInit = new Dataset();
	this.dsApprInit.addColumn("ID_AP_OUT", "string");
	this.dsApprInit.addColumn("ID_AP_TYPE", "string");
	this.dsApprInit.addColumn("PARAM01", "string");
	this.dsApprInit.addColumn("PARAM02", "string");
	this.dsApprInit.addColumn("PARAM03", "string");
	this.dsApprInit.addColumn("PARAM04", "string");
	this.dsApprInit.addColumn("DS_TITLE", "string");
	this.dsApprInit.addColumn("ID_USER", "string");

	this.dsLine1 = new Dataset();
	this.dsLine1.addColumn("ID_AP", "string");
	this.dsLine1.addColumn("TY_GUBUN", "string");
	
	this.dsLine2 = new Dataset();
	this.dsLine2.addColumn("ID_AP", "string");
	this.dsLine2.addColumn("TY_GUBUN", "string");
	
	this.dsMaster = new Dataset();
	this.dsMaster.addColumn("ID_AP", "string");
	this.dsMaster.addColumn("ID_USER", "string");
	
	this.dsExec = new Dataset();
	this.dsExec.addColumn("ID_AP", "string");
	this.dsExec.addColumn("ST_APPR", "string");
	this.dsExec.addColumn("ID_USER", "string");
	
	this.dsSaveMaster = new Dataset();
	this.dsSaveMaster.addColumn("ID_AP", "string");
	this.dsSaveMaster.addColumn("DS_ETITLE", "string");
	this.dsSaveMaster.addColumn("ID_USER", "string");
	
	/*************************************************************************************************
	* 결재본분 관련 Parameter
	**************************************************************************************************/
	this.dsSelectPlanApp1 = new Dataset();
	this.dsSelectPlanApp1.addColumn("DT_PLAN", "string");
	this.dsSelectPlanApp1.addColumn("CD_CORP", "string");
	
	this.dsSelectPlanApp2 = new Dataset();
	this.dsSelectPlanApp2.addColumn("DT_PLAN", "string");
	this.dsSelectPlanApp2.addColumn("CD_CORP", "string");

	this.dsSelectPlanApp3 = new Dataset();
	this.dsSelectPlanApp3.addColumn("DT_PLAN", "string");
	this.dsSelectPlanApp3.addColumn("CD_CORP", "string");

	this.dsSelectPlanApp4 = new Dataset();
	this.dsSelectPlanApp4.addColumn("DT_PLAN", "string");
	this.dsSelectPlanApp4.addColumn("CD_CORP", "string");
}

/************************************************************************
 * 버튼 이벤트
 ************************************************************************/
//결재정보 / 결재선 조회
this.fnSelectMaster = function() {
	//if (!this.fnSelectValidate()) return false;
	
	this.dsLine1.clearData();
	this.dsLine1.addRow();
	this.dsLine1.setColumn(0, "ID_AP", this.dsSearch.getColumn(0, "ID_AP"));
	this.dsLine1.setColumn(0, "TY_GUBUN", "결재");

	this.dsLine2.clearData();
	this.dsLine2.addRow();
	this.dsLine2.setColumn(0, "ID_AP", this.dsSearch.getColumn(0, "ID_AP"));
	this.dsLine2.setColumn(0, "TY_GUBUN", "합의");

	this.dsMaster.clearData();
	this.dsMaster.addRow();
	this.dsMaster.setColumn(0, "ID_AP", this.dsSearch.getColumn(0, "ID_AP"));
	this.dsMaster.setColumn(0, "ID_USER", this.AuthClient.ID_USER);


	var strSvcId    = "master";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
 	var inData      = "line1=dsLine1 line2=dsLine2 selectmaster=dsMaster";
 	var outData     = "dsApprLines1=line10 dsApprLines2=line20 dsListMaster=selectmaster0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

// 결재선 조회
this.fnSelectLines = function() {
	this.dsLine1.clearData();
	this.dsLine1.addRow();
	this.dsLine1.setColumn(0, "ID_AP", this.dsSearch.getColumn(0, "ID_AP"));
	this.dsLine1.setColumn(0, "TY_GUBUN", "결재");

	this.dsLine2.clearData();
	this.dsLine2.addRow();
	this.dsLine2.setColumn(0, "ID_AP", this.dsSearch.getColumn(0, "ID_AP"));
	this.dsLine2.setColumn(0, "TY_GUBUN", "합의");

	var strSvcId    = "lines";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
 	var inData      = "line1=dsLine1 line2=dsLine2";
 	var outData     = "dsApprLines1=line10 dsApprLines2=line20";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*************************************************************************************************
* 결재본분 조회
* ------------------------------------------------------------------------------------------------
* 결재본분 문서 내용 조회시 필요한 sp 호출
**************************************************************************************************/
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
 	var inData      = "selectPlanApp1=dsSelectPlanApp1 selectPlanApp2=dsSelectPlanApp2";
 	var outData     = "dsListPlanApp1=selectPlanApp10 dsListPlanApp2=selectPlanApp20";
	var dtPlan = this.dsListMaster.getColumn(0, "V_PARAM01");	// 작성년월
	var cdCorp = this.dsListMaster.getColumn(0, "V_PARAM02");	// 법인코드
	
	var nTabindex = this.tabData.tabindex;
	if(nTabindex == 0){
		this.dsSelectPlanApp1.clearData();
		this.dsSelectPlanApp1.addRow();	
		this.dsSelectPlanApp1.setColumn(0, "DT_PLAN", dtPlan);
		this.dsSelectPlanApp1.setColumn(0, "CD_CORP", cdCorp);
		
		this.dsSelectPlanApp2.clearData();
		this.dsSelectPlanApp2.addRow();	
		this.dsSelectPlanApp2.setColumn(0, "DT_PLAN", dtPlan);
		this.dsSelectPlanApp2.setColumn(0, "CD_CORP", cdCorp);
	}else{
		this.dsSelectPlanApp3.clearData();
		this.dsSelectPlanApp3.addRow();	
		this.dsSelectPlanApp3.setColumn(0, "DT_PLAN", dtPlan);
		this.dsSelectPlanApp3.setColumn(0, "CD_CORP", cdCorp);

		this.dsSelectPlanApp4.clearData();
		this.dsSelectPlanApp4.addRow();	
		this.dsSelectPlanApp4.setColumn(0, "DT_PLAN", dtPlan);
		this.dsSelectPlanApp4.setColumn(0, "CD_CORP", cdCorp);
		
		inData = "selectPlanApp3=dsSelectPlanApp3 selectPlanApp4=dsSelectPlanApp4";
		outData = "dsListPlanApp3=selectPlanApp30 dsListPlanApp4=selectPlanApp40";
	}

	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
 	//var inData      = "select=dsSelect";	// select1=dsSelect1
 	//var outData     = "dsList=select0";		// dsList1=select10
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*************************************************************************************************
* 결재본분 문서 저장 / 상신 호출
* ------------------------------------------------------------------------------------------------
* 결재본분 문서 저장이 필요할 경우 
* this.fnExec(status); 부분 주석 처리 후 아래 저장 부분 주석 풀고 내용 입력
*  - strSvcId = "save" 그대로 사용 (fnCallback 함수에서 상신 처리)
* 결재본분 문서 저장이 필요없는 경우 그대로 상신 처리 사용
**************************************************************************************************/
this.fnSave = function(status) {
	this.fnExec(status);	//상신 or 임시저장

// 	this.dsSave.clearData();
// 	this.dsSave.addRow();
// 	
// 	this.dsSave.setColumn(0, "ID_AP", this.dsSearch.getColumn(0, "ID_AP"));
// 	this.dsSave.setColumn(0, "ID_USER", this.AuthClient.ID_USER);
// 
// 	var strSvcId    = "save";
// 	var strSvcType  = "save";
// 	var inProc		= "_dsProc";
// 	var inData      = "save=dsSave";
// 	var outData     = "";
// 	var strArg      = "";
// 	var callBackFnc = "fnCallback";
// 	
// 	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
// 						strSvcType , 	// transaction을 요청할 구분
// 						inProc,			// Procedure 정보 Dataset 이름
// 						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
// 						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
// 						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
// 						callBackFnc); // 통신방법 정의 [생략가능]
}


/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {	
	var validate = true;
	
	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg, strArg) {
	if (svcID == "init") {
		if (this.dsInit.rowcount > 0) {
			//채번 후 결재선/결재정보 조회
			this.dsSearch.setColumn(0, "ID_AP", this.dsInit.getColumn(0, "ID_AP_OUT"));
			
			this.fnSelectMaster();
		}
	}
	else if (svcID == "master" || svcID == "lines") {
	
		//결재선 Height 설정
		if(this.dsApprLines1.rowcount > 0) {
			this.dxGridAppr1.setRealRowSize(0, 24);
			this.dxGridAppr1.setRealRowSize(1, 26);
		}
		if(this.dsApprLines2.rowcount > 0) {
			this.dxGridAppr2.setRealRowSize(0, 24);
			this.dxGridAppr2.setRealRowSize(1, 26);
		}
		
		if (this.dsListMaster.rowcount > 0) {
			this.btn1.set_visible(this.dsListMaster.getColumn(0, "BTNAPPR") != "H");
			this.btn2.set_visible(this.dsListMaster.getColumn(0, "BTNREJECT") != "H");
			this.btn3.set_visible(this.dsListMaster.getColumn(0, "BTNINFO") != "H");
			this.btn4.set_visible(this.dsListMaster.getColumn(0, "BTNISSUE") != "H");
			this.btn5.set_visible(this.dsListMaster.getColumn(0, "BTNCANCEL") != "H");
			this.btn6.set_visible(this.dsListMaster.getColumn(0, "BTNFILE") != "H");
			this.btn7.set_visible(this.dsListMaster.getColumn(0, "BTNRE") != "H");
			this.btn8.set_visible(this.dsListMaster.getColumn(0, "BTNAC") != "H");
			this.btn9.set_visible(this.dsListMaster.getColumn(0, "BTNDE") != "H");
			this.btn10.set_visible(this.dsListMaster.getColumn(0, "BTNLINES") != "H");
			this.btn11.set_visible(this.dsListMaster.getColumn(0, "BTNSAVE") != "H");
			
			// 확장버튼 숨김 처리 후 위치조정
			var arrBtns = [];
			for (var i = this.BtnsInfo.length - 1; i >= 0; i--) {
				if (this.BtnsInfo[i].COMP_BUTTON.visible)
					arrBtns.push(this.BtnsInfo[i].COMP_BUTTON);
			}
			
			var r = 0;
			for(var i = 0; i <= arrBtns.length - 1; i++) {
				var btn = arrBtns[i];
				if (i == 0)
					btn.set_right(0);
				else {
					btn.set_right(r + 2);
				}
				
				r = btn.right + btn.width;
			}
			
			this.btn1.set_enable(this.dsListMaster.getColumn(0, "BTNAPPR") == "Y");
			this.btn2.set_enable(this.dsListMaster.getColumn(0, "BTNREJECT") == "Y");
			this.btn3.set_enable(this.dsListMaster.getColumn(0, "BTNINFO") == "Y");
			this.btn4.set_enable(this.dsListMaster.getColumn(0, "BTNISSUE") == "Y");
			this.btn5.set_enable(this.dsListMaster.getColumn(0, "BTNCANCEL") == "Y");
			this.btn6.set_enable(this.dsListMaster.getColumn(0, "BTNFILE") == "Y");
			this.btn7.set_enable(this.dsListMaster.getColumn(0, "BTNRE") == "Y");
			this.btn8.set_enable(this.dsListMaster.getColumn(0, "BTNAC") == "Y");
			this.btn9.set_enable(this.dsListMaster.getColumn(0, "BTNDE") == "Y");
			this.btn10.set_enable(this.dsListMaster.getColumn(0, "BTNLINES") == "Y");
			this.btn11.set_enable(this.dsListMaster.getColumn(0, "BTNSAVE") == "Y");
			
			// 상태값이 00 이면 제목 활성화
			if (this.dsListMaster.getColumn(0, "ST_APPR") == "00")
				this.txtDS_ETITLE.set_readonly(false);
			else
				this.txtDS_ETITLE.set_readonly(true);
			
			
			// 결재정보 조회후 결재본문 내역 조회
			this.fnSelect();
		}
	}
	else if(svcID == "savemaster") {
		if (errorCode == 0) {
			var json = this.gfnArgsToJson(strArg);
			var status = json.status;
			//this.fnExec("01");
			this.fnSave(status);
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.fnExec("01");	//상신
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	else if(svcID == "exec") {
		if (errorCode == 0) {
			var json = this.gfnArgsToJson(strArg);
			var status = json.status;
			if (status == "DE") {
				this.getParentContext().close(true);
			}
			else {
				this.fnSelectMaster();
			}
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	else if(svcID == "select") {
		if (errorCode == 0) {
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 확장버튼 이벤트
 ************************************************************************/
 // 승인/반려/상신/상신취소/재기안/수신접수/삭제 처리
this.fnAppr = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	var status = "";
	switch (obj.name) {
		case "btnExt_btn1":	//승인
			status = "03";
			break;
		case "btnExt_btn2":	//반려
			status = "04";
			break;
		case "btnExt_btn4":	//상신
			status = "01";
			break;
		case "btnExt_btn5":	//상신취소
			status = "05";
			break;
		case "btnExt_btn7":	//재기안
			status = "RE";
			break;
		case "btnExt_btn8":	//수신접수
			status = "AC";
			break;
		case "btnExt_btn9":	//삭제
			status = "DE";
			break;
		case "btnExt_btn11"://임시저장
			status = "00";
			break;
	}
	
	if (status == "01" || status == "00") {
		this.fnSaveMaster(status);
	}
	else {
		this.fnExec(status);
	}
}

// 확장버튼 sp 호출 (DZRPR_APPROVAL_EXECUTE)
this.fnExec = function(status) {
	this.dsExec.clearData();
	this.dsExec.addRow();
	
	this.dsExec.setColumn(0, "ID_AP", this.dsSearch.getColumn(0, "ID_AP"));
	this.dsExec.setColumn(0, "ST_APPR", status);
	this.dsExec.setColumn(0, "ID_USER", this.AuthClient.ID_USER);

	var strSvcId    = "exec";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "exec=dsExec";
	var outData     = "";
	var strArg      = "status=" + status;
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

// 상신전에 저장 sp 호출 (DZRPR_APPROVAL_MASTER_SAVE)
this.fnSaveMaster = function(status) {
	this.dsSaveMaster.clearData();
	this.dsSaveMaster.addRow();
	
	this.dsSaveMaster.setColumn(0, "ID_AP", this.dsSearch.getColumn(0, "ID_AP"));
	this.dsSaveMaster.setColumn(0, "DS_ETITLE", this.dsListMaster.getColumn(0, "DS_ETITLE"));
	this.dsSaveMaster.setColumn(0, "ID_USER", this.AuthClient.ID_USER);

	var strSvcId    = "savemaster";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "savemaster=dsSaveMaster";
	var outData     = "";
	var strArg      = "status=" + status;
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

//결재정보
this.fnBtn3 = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	var param = {};
	param.ID_AP = this.dsSearch.getColumn(0, "ID_AP");

	this.gfnFormOpenNonAuth("DZR", "DZR_APLINES", "", param, 1000, 420);
};

//파일첨부
this.fnBtn6 = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
   var fileManager = {};
   fileManager.CD_GUBUN = "DZAP";
   fileManager.CD_DIR = [ this.dsSearch.getColumn(0, "ID_AP") ];
   
	// IS_READONLY = false가 수정가능상태 BTNFILE Y는 수정가능
	var bReadOnly = (this.dsListMaster.getColumn(0, "BTNFILE") == "Y")?false:true;
	fileManager.IS_READONLY = bReadOnly;
	//fileManager.IS_READONLY = (this.dsListMaster.getColumn(0, "BTNFILE") == "Y");
   
   this.gfnFileManager(fileManager, "");
};

this.fnFileCallback = function(strID, val) {
	// val.IsChange : 변경여부, val.Cnt : 파일개수
	// 파일개수를 다시 셋팅
	this.dsList.set_enableevent(false);
	if(val.Cnt == 0) {
		//this.dsList.setColumn(this.dsList.rowposition, "URL_PROOF", "첨부");
	}
	this.dsList.setColumn(this.dsList.rowposition, "CT_PROOF", "첨부(" + val.Cnt + ")");
	this.dsList.set_enableevent(true);
};

//결재선
this.fnBtn10 = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	var param = {};
	param.ID_AP = this.dsSearch.getColumn(0, "ID_AP");
// 	param.ID_AP_TYPE = this.ID_AP_TYPE;
// 	param.PARAM01 = this.dsSearch.getColumn(0, "V1");
// 	param.PARAM02 = this.dsSearch.getColumn(0, "V2");
// 	param.PARAM03 = this.dsSearch.getColumn(0, "V3");
// 	param.PARAM04 = this.dsSearch.getColumn(0, "V4");
// 	param.DS_TITLE = this.dsSearch.getColumn(0, "DS_ETITLE");

	this.gfnFormOpen("DZR", "DZR_AP_REQUEST", "fnBtn10_callback", param, 930, 680);
};

this.fnBtn10_callback = function(svcID, val) {
	this.fnSelectLines();
}

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
//결재번호 채번
this.fnInit = function() {	
	this.dsApprInit.clearData();
	this.dsApprInit.addRow();	
	
	this.dsApprInit.setColumn(0, "ID_AP_OUT", "");
	this.dsApprInit.setColumn(0, "ID_AP_TYPE", this.ID_AP_TYPE);
	this.dsApprInit.setColumn(0, "PARAM01", this.dsSearch.getColumn(0, "V1"));
	this.dsApprInit.setColumn(0, "PARAM02", this.dsSearch.getColumn(0, "V2"));
	this.dsApprInit.setColumn(0, "PARAM03", this.dsSearch.getColumn(0, "V3"));
	this.dsApprInit.setColumn(0, "PARAM04", this.dsSearch.getColumn(0, "V4"));
	this.dsApprInit.setColumn(0, "DS_TITLE", this.dsSearch.getColumn(0, "DS_ETITLE"));
	this.dsApprInit.setColumn(0, "ID_USER", this.AuthClient.ID_USER);

	var strSvcId    = "init";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "init=dsApprInit";
	var outData     = "dsInit=init";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

this.divData1_divDataBottom_tabData_onchanged = function(obj:nexacro.Tab,e:nexacro.TabIndexChangeEventInfo)
{
	//결재본문 조회
	this.fnSelect();
};

this.divData1_divDataBottom_tabData_tab2_objGridSub4_oncellclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	if(!this.gfnGridIsRow(this.dxGridSub4)) return;
	
	var colnm = this.gfnGridGetBindColumnNameByIndex(obj, e.cell);
	//trace(" colnm ->" + colnm + "\n e.cell ->" + e.cell + "\n e.col ->" + e.col);

	var cdSlip = this.dsListPlanApp4.getColumn(e.row, "NO_SLIP");	
	if(colnm == "NO_SLIP") {
		var NO_SLIP = this.dsListPlanApp4.getColumn(this.dsListPlanApp4.rowposition, "NO_SLIP");
		if ( this.gfnIsNull(NO_SLIP) ) {
			this.gfnAlert("발행된 전표가 없습니다.");
			return false;
		}
		var param = {};
		param.CD_TRADE = NO_SLIP;
		param.IUD_FLAG = "S";
		param.strYN_JUNDO_START = "";
		
		this.gfnFormOpen("DHA", "DHA_ISSUESLIP", "fnPopCallBack", param);
	}
};

this.fnPopCallBack = function(svcID, val) {
	if (val != false) {
// 		if (svcID.indexOf("DFB_MODIFY_DT_REQUEST_DLG") > -1) {
// 			var json = JSON.parse(val);
// 			dtReq = json.DT_REQ;			
// 			this.fnAssign("N", dtReq);
// 		}// end_if
	}
}
]]></Script>
    <Objects>
      <Dataset id="dsListMaster">
        <ColumnInfo>
          <Column id="ST_APPR" type="STRING" size="256"/>
          <Column id="DS_TITLE" type="STRING" size="256"/>
          <Column id="DS_ETITLE" type="STRING" size="256"/>
          <Column id="DS_HNAME" type="STRING" size="256"/>
          <Column id="DS_DEPT" type="STRING" size="256"/>
          <Column id="DT_START" type="STRING" size="256"/>
          <Column id="NO_DOC" type="STRING" size="256"/>
          <Column id="V_PARAM01" type="STRING" size="256"/>
          <Column id="V_PARAM02" type="STRING" size="256"/>
          <Column id="V_PARAM03" type="STRING" size="256"/>
          <Column id="V_PARAM04" type="STRING" size="256"/>
          <Column id="BTNAPPR" type="STRING" size="256"/>
          <Column id="BTNREJECT" type="STRING" size="256"/>
          <Column id="BTNLINES" type="STRING" size="256"/>
          <Column id="BTNISSUE" type="STRING" size="256"/>
          <Column id="BTNCANCEL" type="STRING" size="256"/>
          <Column id="BTNFILE" type="STRING" size="256"/>
          <Column id="BTNDE" type="STRING" size="256"/>
          <Column id="BTNRE" type="STRING" size="256"/>
          <Column id="BTNAC" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">init</Col>
            <Col id="SP">DZRPR_APPROVAL_INIT</Col>
          </Row>
          <Row>
            <Col id="TARGET">selectmaster</Col>
            <Col id="SP">DZRPR_APPROVAL_MASTER_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">savemaster</Col>
            <Col id="SP">DZRPR_APPROVAL_MASTER_SAVE</Col>
          </Row>
          <Row>
            <Col id="TARGET">line1</Col>
            <Col id="SP">DZRPR_APPROVAL_LINE_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">line2</Col>
            <Col id="SP">DZRPR_APPROVAL_LINE_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">exec</Col>
            <Col id="SP">DZRPR_APPROVAL_EXECUTE</Col>
          </Row>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DFAPR_PLANS_APP_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">select1</Col>
            <Col id="SP">DWAPR_RISKDTLS_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">selectPlanApp1</Col>
            <Col id="SP">DFBPR_PLAN_APP1_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">selectPlanApp2</Col>
            <Col id="SP">DFBPR_PLAN_APP2_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">selectPlanApp3</Col>
            <Col id="SP">DFBPR_PLAN_APP3_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">selectPlanApp4</Col>
            <Col id="SP">DFBPR_PLAN_APP4_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch">
        <ColumnInfo>
          <Column id="ID_AP" type="STRING" size="256"/>
          <Column id="ID_AP_TYPE" type="STRING" size="256"/>
          <Column id="V1" type="STRING" size="256"/>
          <Column id="V2" type="STRING" size="256"/>
          <Column id="V3" type="STRING" size="256"/>
          <Column id="V4" type="STRING" size="256"/>
          <Column id="DS_ETITLE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="ID_AP"/>
            <Col id="ID_AP_TYPE"/>
            <Col id="V1"/>
            <Col id="V2"/>
            <Col id="V3"/>
            <Col id="V4"/>
            <Col id="DS_ETITLE"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsApprLines1" useclientlayout="false"/>
      <Dataset id="dsApprLines2" useclientlayout="false"/>
      <Dataset id="dsInit"/>
      <Dataset id="dsList"/>
      <Dataset id="dsListPlanApp1"/>
      <Dataset id="dsListPlanApp2"/>
      <Dataset id="dsListPlanApp3"/>
      <Dataset id="dsListPlanApp4"/>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divData1.form.divDataMaster.form.sta02" propid="text" datasetid="dsListMaster" columnid="DS_HNAME"/>
      <BindItem id="item1" compid="divData1.form.divDataMaster.form.sta03" propid="text" datasetid="dsListMaster" columnid="DS_DEPT"/>
      <BindItem id="item2" compid="divData1.form.divDataMaster.form.sta05" propid="text" datasetid="dsListMaster" columnid="DT_START"/>
      <BindItem id="item4" compid="divData1.form.divDataMaster.form.sta09" propid="text" datasetid="dsListMaster" columnid="NO_DOC"/>
      <BindItem id="item5" compid="divData1.form.divDataApprTitle.form.staApprNm" propid="text" datasetid="dsListMaster" columnid="DS_TITLE"/>
      <BindItem id="item6" compid="divData1.form.divDataMaster.form.txtDS_ETITLE" propid="value" datasetid="dsListMaster" columnid="DS_ETITLE"/>
    </Bind>
  </Form>
</FDL>
