<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1400" height="720" titletext="자동전표 코드등록" onload="form_onload">
    <Layouts>
      <Layout stepcount="0">
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none" text="">
          <Layouts>
            <Layout>
              <Static id="sta00" taborder="0" text="사업지코드" left="0.0" top="10.0" width="105.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_ACNTUNIT" CodeFindName="DLX_CFLEASESITE_CODEFIND" CDTextWidth="70" taborder="2" left="sta00:0.0" top="10.0" width="350" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="sta01" taborder="1" text="작업년월" left="ccfCD_ACNTUNIT:0.0" top="10.0" height="24.0" width="105.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYM_IMPOSE" taborder="3" left="sta01:0.0" top="10.0" width="105" height="24.0" url="cmm::cmmCalMM.xfdl"/>
              <Static id="staTY_INOUT" taborder="2" text="임대료" left="ctclYM_IMPOSE:0.0" top="10.0" width="105.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Combo id="ccboTY_TYPE" taborder="3" left="staTY_INOUT:0.0" top="10.0" width="70" height="24.0" innerdataset="dsTY_TYPE" datacolumn="DS_CODE" codecolumn="CD_CODE" value="" onitemchanged="fnSearchInit" text="전체" index="0"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="30" bottom="40" right="0" cssclass="div_DATA_Bg" text="">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="15" right="0" bottom="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	this.fnSetCombo();
	
	this.dsSearch.setColumn(0, "YM_IMPOSE", this.gfnGetDate().substr(0,6));
	this.ccfCD_ACNTUNIT.form.CDTextBox.setFocus();
};

this.fnSetButton = function() {
};

this.fnSetExtendButton = function() {
};

this.fnSetVariable = function() {
	this.ccfCD_ACNTUNIT = this.divSearch.form.ccfCD_ACNTUNIT;
	this.ctclYM_IMPOSE = this.divSearch.form.ctclYM_IMPOSE;
	this.ccboTY_TYPE = this.divSearch.form.ccboTY_TYPE; // 임대료 구분 콤보
	this.dxGrid = this.divData.form.objGrid;
};

this.fnSetEvent = function() {
	this.gfnGridInit(this.dxGrid, this.dsList, "DL", "DLC_IMPOSE_MONTH");	
	this.ccfCD_ACNTUNIT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";		
	this.dxGrid.AfterEdit = "fnGrid_AfterEdit";
};

this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_ACNTUNIT", "string");
	this.dsSelect.addColumn("TY_GUBUN", "string");
	this.dsSelect.addColumn("NO_CHASU", "string");
	this.dsSelect.addColumn("YM_IMPOSE", "string");
	this.dsSelect.addColumn("TY_TYPE", "string");
}

/************************************************************************
* 컨트롤 이벤트
************************************************************************/
this.fnSelect = function() {
	if (!this.fnSelectValidation()) return;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "CD_ACNTUNIT", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0, 6));
	this.dsSelect.setColumn(0, "TY_GUBUN", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6, 1));
	this.dsSelect.setColumn(0, "NO_CHASU", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7, 2));
	this.dsSelect.setColumn(0, "YM_IMPOSE", this.dsSearch.getColumn(0, "YM_IMPOSE"));
	this.dsSelect.setColumn(0, "TY_TYPE", this.dsSearch.getColumn(0, "TY_TYPE"));
		
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect"; 
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
		strSvcType , 	// transaction을 요청할 구분
		inProc,			// Procedure 정보 Dataset 이름
		inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
		outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
		strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
		callBackFnc); // 통신방법 정의 [생략가능]
}

this.fnAdd = function() {
}

this.fnDel = function() {
}

this.fnSave = function() {
// 	if (!this.gfnGridValidate(this.dxGrid)) return;	
// 	this.dxGrid.updateToDataset();
// 	this.dsSave.clearData();
// 	
// 	for (var i = 0; i < this.dsList.rowcount; i++) {
// 		var flag = this.gfnGetFlag(this.dsList, i);
// 		switch(flag) {
// 		case "I":
// 		case "U":
// 			var nrow = this.dsSave.addRow();
// 				this.dsSave.setColumn(nrow, "CD_ACNTUNIT", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0, 6));
// 				this.dsSave.setColumn(nrow, "TY_GUBUN", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6, 1));
// 				this.dsSave.setColumn(nrow, "NO_CHASU", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7, 2));
// 				this.dsSave.setColumn(nrow, "NO_DONG", this.dsList.getColumn(i, "NO_DONG"));
// 				this.dsSave.setColumn(nrow, "NO_FLOOR", this.dsList.getColumn(i, "NO_FLOOR"));
// 				this.dsSave.setColumn(nrow, "NO_HO", this.dsList.getColumn(i, "NO_HO"));
// 				this.dsSave.setColumn(nrow, "YM_MANAGEMENT", this.dsSearch.getColumn(0, "YM_MANAGEMENT"));
// 				this.dsSave.setColumn(nrow, "AM_LEASE", this.dsList.getColumn(i, "AM_LEASE"));
// 				this.dsSave.setColumn(nrow, "AM_MANAGEMENT", this.dsList.getColumn(i, "AM_MANAGEMENT"));
// 				this.dsSave.setColumn(nrow, "AM_PARKING", this.dsList.getColumn(i, "AM_PARKING"));
// 				this.dsSave.setColumn(nrow, "AM_PARKING2", this.dsList.getColumn(i, "AM_PARKING2"));
// 				this.dsSave.setColumn(nrow, "AM_ELEC", this.dsList.getColumn(i, "AM_ELEC"));
// 				this.dsSave.setColumn(nrow, "AM_WATER", this.dsList.getColumn(i, "AM_WATER"));
// 				this.dsSave.setColumn(nrow, "AM_HEAT", this.dsList.getColumn(i, "AM_HEAT"));
// 				this.dsSave.setColumn(nrow, "AM_GAS", this.dsList.getColumn(i, "AM_GAS"));
// 				this.dsSave.setColumn(nrow, "AM_SUPPLY", this.dsList.getColumn(i, "AM_SUPPLY"));
// 				this.dsSave.setColumn(nrow, "AM_VAT", this.dsList.getColumn(i, "AM_VAT"));
// 				this.dsSave.setColumn(nrow, "AM_TOTAL", this.dsList.getColumn(i, "AM_TOTAL"));
// 				this.dsSave.setColumn(nrow, "ID_UPDATE", this.AuthClient.ID_USER);
// 				break;
// 		case "D":
// 			
// 		}
// 	}
// 	
// 	if (this.dsSave.rowcount == 0) return;
// 	
// 	var strSvcId    = "save";
// 	var strSvcType  = "save";
// 	var inProc		= "_dsProc";
// 	var inData      = "save=dsSave";
// 	var outData     = "dsList=save";
// 	var strArg      = "";
// 	var callBackFnc = "fnCallback";
// 	
// 	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
// 		strSvcType , 	// transaction을 요청할 구분
// 		inProc,			// Procedure 정보 Dataset 이름
// 		inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
// 		outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
// 		strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
// 		callBackFnc); // 통신방법 정의 [생략가능]
}

this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

this.fnPrint = function() {
}

/************************************************************************
* Validate
************************************************************************/
this.fnSelectValidation = function() {
	var validate = true;
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "CD_ACNTUNIT"))) {
		this.fnVaidateCallback = function() {
			this.ccfCD_ACNTUNIT.form.CDTextBox.setFocus();
		}
		this.gfnAlert("사업지코드가 입력되지 않았습니다.", "fnVaidateCallback");
		return false;
	}
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "YM_IMPOSE"))) {
		this.fnVaidateCallback = function() {
			this.ctclYM_IMPOSE.setFocus();
		}
		this.gfnAlert("작업년월이 입력되지 않았습니다.", "fnVaidateCallback");
		return false;
	}
	return validate;
}

/************************************************************************
* 콜백 이벤트
************************************************************************/
this.fnCallback = function(svcID, errorCode, errorMsg) {
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);		
 	}
	else if(svcID == "save") {
// 		if (errorCode == 0) {
// 			this.FormBtns.Select.click();
// 		} else {
// 			this.gfnAlert(errorMsg);
// 		}
	} else if (svcID == "combo") {
		
		var iRow = this.dsTY_TYPE.insertRow(0);
		this.dsTY_TYPE.setColumn(iRow, "CD_CODE", "");
		this.dsTY_TYPE.setColumn(iRow, "DS_CODE", "전체");
		this.divSearch.form.ccboTY_TYPE.set_index(0);	
	}
}

/************************************************************************
* 코드파인드 이벤트
************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if (id == "ccfCD_ACNTUNIT") {
		dsUserParam.setColumn(nrow, "FLAG", "A");
		dsUserParam.setColumn(nrow, "CD_DEPT", this.AuthClient.CD_DEPT);
		dsUserParam.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
		dsUserParam.setColumn(nrow, "ID_GROUP", this.FormInfo.ID_GROUP);
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "YN_TOTALCHASU", "");
	}
	
	return true;
};


/************************************************************************
* 그리드 이벤트
************************************************************************/

/************************************************************************
* 기타 이벤트
************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo) {
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);
	}
};

// this.fnGrid_AfterEdit = function(obj:nexacro.NormalDataset, e:nexacro.DSColChangeEventInfo)
// {
// 	if(e.columnid == "AM_MANAGEMENT" || e.columnid == "AM_ELEC" || e.columnid == "AM_WATER" || e.columnid == "AM_HEAT" || e.columnid == "AM_GAS" ||
// 	e.columnid == "AM_PARKING" || e.columnid == "AM_PARKING2" )	{
// 		if(e.oldvalue != e.newvalue)
// 		{
// 				var am_mlease = nexacro.toNumber(this.dsList.getColumn(this.dsList.rowposition, "AM_MLEASE"));
// 				var am_management = nexacro.toNumber(this.dsList.getColumn(this.dsList.rowposition, "AM_MANAGEMENT"));
// 				var am_elec = nexacro.toNumber(this.dsList.getColumn(this.dsList.rowposition, "AM_ELEC"));
// 				var am_heat = nexacro.toNumber(this.dsList.getColumn(this.dsList.rowposition, "AM_HEAT"));
// 				var am_water = nexacro.toNumber(this.dsList.getColumn(this.dsList.rowposition, "AM_WATER"));
// 				var am_gas = nexacro.toNumber(this.dsList.getColumn(this.dsList.rowposition, "AM_GAS"));
// 				var am_parking = nexacro.toNumber(this.dsList.getColumn(this.dsList.rowposition, "AM_PARKING"));
// 				var am_parking2 = nexacro.toNumber(this.dsList.getColumn(this.dsList.rowposition, "AM_PARKING2"));
// 		 		
// 				var am_supply = am_mlease + am_management + am_elec + am_water + am_heat + am_gas + am_parking + am_parking2;
// 		 		var am_supply4vat = am_mlease + am_management + am_elec + am_heat + am_gas + am_parking + am_parking2;
// 		 		var am_vat = am_supply4vat * 0.1;
// 		 		var am_total = am_supply + am_vat;
// 				
// 				this.dsList.setColumn(this.dsList.rowposition, "AM_SUPPLY", am_supply);
// 				this.dsList.setColumn(this.dsList.rowposition, "AM_VAT", am_vat);
// 				this.dsList.setColumn(this.dsList.rowposition, "AM_TOTAL", am_total);
// 		}
// 	}
// }

// 공통코드콤보
this.fnSetCombo = function() {
	
	this.dsCombo = new Dataset();
	this.dsCombo.addColumn("CD_SYSTEM", "string");
	this.dsCombo.addColumn("CD_TYPE", "string");
	this.dsCombo.addRow();
	this.dsCombo.setColumn(0, "CD_SYSTEM", "DL");
	this.dsCombo.setColumn(0, "CD_TYPE", "C1");	
	
	var strSvcId    = "combo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "combo=dsCombo";
	var outData     = "dsTY_TYPE=combo0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
};
]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DLCPR_IMPOSE_MONTH_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo</Col>
            <Col id="SP">DZXPR_COMBO_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_ACNTUNIT" type="STRING" size="256"/>
          <Column id="DS_ACNTUNIT" type="STRING" size="256"/>
          <Column id="YM_IMPOSE" type="STRING" size="256"/>
          <Column id="TY_TYPE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_ACNTUNIT"/>
            <Col id="DS_ACNTUNIT"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_TYPE">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_ACNTUNIT.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_ACNTUNIT"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_ACNTUNIT.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_ACNTUNIT"/>
      <BindItem id="item2" compid="divSearch.form.ctclYM_IMPOSE.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_IMPOSE"/>
      <BindItem id="item3" compid="divSearch.form.ccboTY_TYPE" propid="value" datasetid="dsSearch" columnid="TY_TYPE"/>
    </Bind>
  </Form>
</FDL>
