<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="마감현황관리" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="staYM_WORK" taborder="6" text="기성년월" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYM_WORK" taborder="1" left="staYM_WORK:0.0" top="10.0" width="80" height="24.0" url="cmm::cmmCalMM.xfdl"/>
              <Static id="staCOLUMN" taborder="6" text="조회구분" left="ctclYM_WORK:0.0" top="10.0" width="92.0" height="24.0" visible="false" cssclass="sta_WF_SchLabel"/>
              <Radio id="crdoCOLUMN" taborder="1" left="staCOLUMN:0.0" top="10.0" height="24.0" innerdataset="dsCOLUMN" direction="vertical" fittocontents="width" width="150" codecolumn="CODE" datacolumn="VALUE" onitemchanged="divSearch_crdoCOLUMN_onitemchanged" visible="false"/>
              <Static id="staCD_SITE" taborder="6" text="현장코드" left="crdoCOLUMN:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_SITE" CodeFindName="DZX_CFSITE" CDTextWidth="80" taborder="0" left="staCD_SITE:0.0" top="10.0" width="200" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staYN_USE" taborder="6" text="관리대상" left="ccfCD_SITE:0.0" top="10.0" width="92.0" height="24.0" visible="false" cssclass="sta_WF_SchLabel"/>
              <Combo id="ccboYN_USE" taborder="1" left="staYN_USE:0.0" top="10.0" width="70" height="24.0" innerdataset="dsYN_USE" codecolumn="CD_CODE" datacolumn="DS_CODE" visible="false"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	this.fnSetCombo();
	this.fnSetColumnView();

	var today = this.gfnGetDate();
	if(!this.gfnIsNull(this.getOwnerFrame().CD_SITE))
	{
		this.dsSearch.setColumn(0, "CD_SITE", this.getOwnerFrame().CD_SITE);
		this.divSearch.form.ccfCD_SITE.form.DSTextBox.set_value(this.getOwnerFrame().DS_SITE);
		/*this.dsSearch.setColumn(0, "YEAR", this.getOwnerFrame().YM_WORK.substr(0,4));*/
		this.dsSearch.setColumn(0, "YEAR", "");
		this.divSearch.form.ctclYM_WORK.form.TextBox.setFocus();
		this.divSearch.form.ctclYM_WORK.form.TextBox.set_value(this.getOwnerFrame().YM_WORK);
		this.divSearch.form.ctclYM_WORK.form.TextBox.TextBox_canchange();
		
	}else{
		this.dsSearch.setColumn(0, "YEAR", "");
		this.divSearch.form.ctclYM_WORK.form.TextBox.setFocus();
		this.divSearch.form.ctclYM_WORK.form.TextBox.set_value(this.gfnGetDate().substr(0,6));
		this.divSearch.form.ctclYM_WORK.form.TextBox.TextBox_canchange();
	} 
	this.FormBtns.Select.click();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnSetDate = this.gfnFormButtonAdd("btnSetDate", "fnSetDate");			//통제일자 일괄변경
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {	
	this.ctclYM_WORK = this.divSearch.form.ctclYM_WORK;
	this.crdoCOLUMN = this.divSearch.form.crdoCOLUMN;

	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DW", "DWD_MAGAMLIST");
	
	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("YM_WORK", "string");
	this.dsSelect.addColumn("CD_SITE", "string");
	this.dsSelect.addColumn("CD_BUMUN", "string");
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("YN_USE", "string");
	
	this.dsSelect.addColumn("GR_SEARCH", "string");
	this.dsSelect.addColumn("CD_DEPT", "string");
	
	this.dsSelectDeadline = new Dataset();
	this.dsSelectDeadline.addColumn("YM_WORK", "string");

	this.dsSave = new Dataset();
	this.dsSave.addColumn("TY_WRK", "string");
	this.dsSave.addColumn("ID_USER", "string");
	this.dsSave.addColumn("YM_WORK", "string");
	this.dsSave.addColumn("CD_SITE", "string");
	this.dsSave.addColumn("DT_DEADLINE", "string");
	this.dsSave.addColumn("DT_DEADLINE_SAP", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	// 혹시 모르니 체크. (년월 달력인데 년월일까지 가는 경우가 존재)
	var ym_work = this.dsSearch.getColumn(0, "YM_WORK");
	ym_work = ym_work.substring(0,6);

	this.dsSelect.setColumn(0, "YM_WORK", ym_work);
	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsSelect.setColumn(0, "CD_BUMUN", "");
	this.dsSelect.setColumn(0, "CD_CORP", this.AuthClient.CD_CORP);
	this.dsSelect.setColumn(0, "YN_USE", this.dsSearch.getColumn(0, "YN_USE"));
	
	this.dsSelect.setColumn(0, "GR_SEARCH", this.FormInfo.GR_SEARCH);
	
	var AuthClient = this.gfnDataSetToJson(this.objApp.gdsUserInfo, this.objApp.gdsUserInfo.rowposition);
	this.dsSelect.setColumn(0, "CD_DEPT", AuthClient.CD_DEPT);
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

this.fnSelectDeadline =  function()
{
	this.dsSelectDeadline.clearData();
	this.dsSelectDeadline.addRow();
	
	// 혹시 모르니 체크. (년월 달력인데 년월일까지 가는 경우가 존재)
	var ym_work = this.dsSearch.getColumn(0, "YM_WORK");
	ym_work = ym_work.substring(0,6);

	this.dsSelectDeadline.setColumn(0, "YM_WORK", ym_work);
	
	var strSvcId    = "selectDeadline";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "selectDeadline=dsSelectDeadline";
	var outData     = "dsDeadline=selectDeadline0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	this.fnSelectDeadline();
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	// 그리드 필수항목 체크
	if (!this.gfnGridValidate(this.dxGrid)) return;	

	this.dxGrid.updateToDataset();

	// save SP 한개로 사용하는 경우
	this.dsSave.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
			case "U":
			case "D":
				var nrow = this.dsSave.addRow();
				this.dsSave.setColumn(nrow, "TY_WRK", flag);
				this.dsSave.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
				this.dsSave.setColumn(nrow, "YM_WORK", this.dsSearch.getColumn(0, "YM_WORK"));
				this.dsSave.setColumn(nrow, "CD_SITE", this.dsList.getColumn(i, "CD_SITE"));
				this.dsSave.setColumn(nrow, "DT_DEADLINE", this.dsList.getColumn(i, "DT_DEADLINE"));
				this.dsSave.setColumn(nrow, "DT_DEADLINE_SAP", this.dsList.getColumn(i, "DT_DEADLINE_SAP"));
				break;
		}
	}
		
	if (this.dsSave.rowcount == 0) return;
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;
	
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "YM_WORK"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.ctclYM_WORK.setFocus();
		}
		this.gfnAlert("기성년월을 입력하세요.", "fnVaidateCallback");
	}
	
	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg, nrow)
{
	if (errorCode == 0) {
		if (svcID == "select") {
			this.gfnGridAfterSelect(this.dxGrid);	
		}
		else if(svcID == "selectDeadline")
		{
			var nrow = this.gfnGridAdd(this.dxGrid); // top (default), bottom, current

			this.dsList.setColumn(nrow, "DT_DEADLINE", this.dsDeadline.getColumn(0, "DT_DEADLINE"));
			this.dsList.setColumn(nrow, "DT_DEADLINE_SAP", this.dsDeadline.getColumn(0, "DT_DEADLINE"));
		}
		else if(svcID == "selectColumn")
		{
			// 최초 Radio 값에 따른 그리드 컬럼 사이즈 조정을 위해 강제 호출.
			/*this.divSearch_crdoCOLUMN_onitemchanged(this.crdoCOLUMN, {postvalue:"DT_COLUMN"});*/
		}
		else if(svcID == "save") {
			this.FormBtns.Select.click();
		}
	}
	else {
		this.gfnAlert(errorMsg);
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 this.fnGrid_BeforeUserDataSetParam = function(id, dsUserParam, nrow)
 {
	if(id == "DWX_CFSITE_02")
	{
		dsUserParam.setColumn(nrow, "CD_CORP", this.AuthClient.CD_CORP);
		dsUserParam.setColumn(nrow, "CD_SAUPCENTER", "");
	}
	
	return true;
 }
 
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};

this.fnSetCombo = function() {
	this.dsCombo = new Dataset();
	this.dsCombo.addColumn("CD_SYSTEM", "string");
	this.dsCombo.addColumn("CD_TYPE", "string");
	this.dsCombo.addColumn("YN_USE", "string");
	this.dsCombo.addColumn("YN_ALL", "string");
	
	this.dsCombo.addRow();
	this.dsCombo.setColumn(0, "CD_SYSTEM", "DW");
	this.dsCombo.setColumn(0, "CD_TYPE", "90");
	this.dsCombo.setColumn(0, "YN_USE", "Y");
	this.dsCombo.setColumn(0, "YN_ALL", "Y");
	
	var strSvcId    = "combo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "combo=dsCombo";
	var outData     = "dsYN_USE=combo0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};

this.fnSetColumnView = function()
{	
	this.dsTemp = new Dataset();
	this.dsTemp.addColumn("YM_WORK", "string");
	this.dsTemp.addRow();
	this.dsTemp.setColumn(0, "YM_WORK", "000000");

	var strSvcId    = "selectColumn";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "selectColumn=dsTemp";
	var outData     = "dsColumnView=selectColumn0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}
// this.divSearch_crdoCOLUMN_onitemchanged = function(obj:nexacro.Radio,e:nexacro.ItemChangeEventInfo)
// {
// 	var temp = this.dsColumnView.getColumn(0, e.postvalue);
// 	var columnNames = temp.split('|');
// 
// 	// 그리드 초기화 진행함으로써 기존 컬럼 포맷 유지 가능. (길이)
// 	this.gfnGridInit(this.dxGrid, this.dsList, "DW", "DWD_MAGAMLIST");
// 
// 	for(var k=0; k<this.dxGrid.getFormatColCount(); k++){
//       var ds_field = this.dxGrid.getCellProperty("body", k, "text");
//       if(ds_field.indexOf("bind:") > -1) {
//          ds_field = ds_field.replace("bind:", "");
// 
// 		 var check = false;
// 		 
// 		 for(var i=0; i < columnNames.length; i++)
// 		 {
// 			 if(ds_field == columnNames[i])
// 			 {
// 				check = true;
// 				break;
// 			 }
// 		 }
// 		 
// 		 if(check == false)
// 		 {
// 			this.dxGrid.setFormatColProperty(k, "size", 0);
// 		 }
//       }
//    }
// };


this.fnSetDate = function(){
	var param = {};
// 	param.CD_SITE = this.dsSearch.getColumn(0, "CD_SITE");
// 	param.CD_HADO = this.dsListSub1.getColumn(this.dsListSub1.rowposition, "CD_HADO");
// 	param.DS_HADOCONT = this.dsListSub1.getColumn(this.dsListSub1.rowposition, "DS_HADOCONT");

	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DWB_SET_DAY", "fnSetDate_Callback", param, 430, 260);
	
}



this.fnSetDate_Callback = function(svcID, val) {
	var bUpdate = false;
	// 리턴값
	if(val != false){
	
		var json = JSON.parse(val);
		trace(this.dsList.rowcount);
		var rows = this.dxGrid.getSelectedDatasetRows();	
		
		this.dsList.set_enableevent(false);
		for(var i = 0; i < rows.length; i++) {
			this.dsList.setColumn(rows[i], "nx_flag", "U");
			this.dsList.setColumn(rows[i],"DT_DEADLINE", json.DT_EXPLAIN);
			bUpdate = true;
		}
		this.dsList.set_enableevent(true);		
		if(bUpdate) {
			this.gfnSetFormStatus(this, "U");
		}
	}
}
]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DWDPR_MAGAMLIST_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DWDPR_MAGAMLIST_SAVE</Col>
          </Row>
          <Row>
            <Col id="TARGET">selectDeadline</Col>
            <Col id="SP">DWDPR_DEADLINEDAY_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">selectColumn</Col>
            <Col id="SP">DWDPR_MAGAMLIST_COLUMN_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo</Col>
            <Col id="SP">DZXPR_COMBO_COMMON_SELECT_01</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="YM_WORK" type="STRING" size="256"/>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="YN_USE" type="STRING" size="256"/>
          <Column id="COLUMN" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="YN_USE"/>
            <Col id="COLUMN">DT_COLUMN</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsCOLUMN">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="VALUE">마감일자</Col>
            <Col id="CODE">DT_COLUMN</Col>
          </Row>
          <Row>
            <Col id="VALUE">마감금액</Col>
            <Col id="CODE">AM_COLUMN</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsYN_USE">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsDeadline"/>
      <Dataset id="dsColumnView"/>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ctclYM_WORK.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_WORK"/>
      <BindItem id="item1" compid="divSearch.form.crdoCOLUMN" propid="value" datasetid="dsSearch" columnid="COLUMN"/>
      <BindItem id="item2" compid="divSearch.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item3" compid="divSearch.form.ccboYN_USE" propid="value" datasetid="dsSearch" columnid="YN_USE"/>
    </Bind>
  </Form>
</FDL>
