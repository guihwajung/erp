<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1400" height="720" titletext="결산기수" onload="form_onload">
    <Layouts>
      <Layout stepcount="0">
        <Div id="divSearch" taborder="1" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none" text="">
          <Layouts>
            <Layout>
              <Static id="staCD_CORP" taborder="1" text="사업지코드" left="0.0" top="10.0" width="105.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_ACNTUNIT" CodeFindName="DRX_CFACNTUNIT_OPT" CDTextWidth="70" taborder="0" left="staCD_CORP:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" onclick="Common_onclick" text=""/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="60" bottom="0" right="0" cssclass="div_DATA_Bg" text="">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="32" right="0" bottom="0"/>
              <Static id="staTopTitle" taborder="1" text="실코드는 두자리입니다." left="0" top="0" width="91.43%" height="22" cssclass="sta_TITLE_Bg"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetVariable();
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetParameter();
	this.fnSetEvent();  
	
	// 타화면에서 오픈시 넘어오는 파라미터 처리
	if(!this.gfnIsNull(this.getOwnerFrame().CD_ACNTUNIT)) {	
		this.dsSearch.setColumn(0, "CD_ACNTUNIT", this.getOwnerFrame().CD_ACNTUNIT);
		this.divSearch.form.ccfCD_ACNTUNIT.form.DSTextBox.set_value(this.getOwnerFrame().DS_ACNTUNIT);		
		
		this.FormBtns.Select.click();
	}
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_ACNTUNIT = this.divSearch.form.ccfCD_ACNTUNIT;
	
	this.dxGrid = this.divData.form.objGrid;
};

this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
}

this.fnSetExtendButton = function() {
	this.btnItemCd = this.gfnFormButtonAdd("btnItemCd", "fnItemCd");  
};


this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_ACNTUNIT", "string");
	this.dsSelect.addColumn("TY_GUBUN", "string");
	this.dsSelect.addColumn("NO_CHASU", "string");
	this.dsSelect.addColumn("CD_LCODE", "string");
	this.dsSelect.addColumn("CD_RCODE", "string");

	this.dsInsert = new Dataset();
	this.dsInsert.addColumn("CD_ACNTUNIT", "string");
	this.dsInsert.addColumn("TY_GUBUN", "string");
	this.dsInsert.addColumn("NO_CHASU", "string");
	this.dsInsert.addColumn("CD_LCODE", "string");
	this.dsInsert.addColumn("CD_RCODE", "string");
	this.dsInsert.addColumn("DS_RCODE", "string");
	this.dsInsert.addColumn("DS_REMARK", "string");
	this.dsInsert.addColumn("ID_INSERT", "string");

	this.dsUpdate = new Dataset();
	this.dsUpdate.addColumn("CD_ACNTUNIT", "string");
	this.dsUpdate.addColumn("TY_GUBUN", "string");
	this.dsUpdate.addColumn("NO_CHASU", "string");
	this.dsUpdate.addColumn("CD_LCODE", "string");
	this.dsUpdate.addColumn("CD_RCODE", "string");
	this.dsUpdate.addColumn("DS_RCODE", "string");
	this.dsUpdate.addColumn("DS_REMARK", "string");
	this.dsUpdate.addColumn("ID_UPDATE", "string");

	this.dsDelete = new Dataset();
	this.dsDelete.addColumn("CD_ACNTUNIT", "string");
	this.dsDelete.addColumn("TY_GUBUN", "string");
	this.dsDelete.addColumn("NO_CHASU", "string");
	this.dsDelete.addColumn("CD_LCODE", "string");
	this.dsDelete.addColumn("CD_RCODE", "string");

}

this.fnSetEvent = function() {
	
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DL", "DLF_ROOM_CODE");

	this.ccfCD_ACNTUNIT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	//this.ccfCD_ACNTUNIT.AfterCDTextChanged = "fnAfterCDTextChanged";
	
	this.dxGrid.set_selecttype("cell");	
}

this.fnCallback = function(svcID, errorCode, errorMsg) {
	if(svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);					
	} else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
		
	}
	
}

this.fnSelectValidation = function() {
	
	var validate = true;
	/*
	if (this.gfnIsNull(this.dsSearch.getColumn(0,"CD_ACNTUNIT"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.ccfCD_ACNTUNIT.form.CDTextBox.setFocus();
		}
		this.gfnAlert("사업지코드는 반드시 입력 하셔야 합니다.", "fnVaidateCallback");
	}
	*/
	
	return validate;
}

this.fnSelect = function() {

	if (!this.fnSelectValidation()) return;
	
	this.gfnGridBeforeSelect(this.dxGrid);

	this.dsSelect.clearData();
	this.dsSelect.addRow(); 
	
	this.dsSelect.setColumn(0, "CD_ACNTUNIT", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0, 6));
	this.dsSelect.setColumn(0, "TY_GUBUN", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6, 1));
	this.dsSelect.setColumn(0, "NO_CHASU", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7, 2));
	this.dsSelect.setColumn(0, "CD_LCODE", "");
	this.dsSelect.setColumn(0, "CD_RCODE", "");
		
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect"; 
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

this.fnAdd = function() {
	var nrow = this.gfnGridAdd(this.dxGrid);		
}

this.fnDel = function() {	
	this.gfnGridDel(this.dxGrid);

}

this.fnSave = function() {
	if (!this.gfnGridValidate(this.dxGrid)) return;

	this.dxGrid.updateToDataset();
	
	this.dsInsert.clearData();
	this.dsUpdate.clearData();
	this.dsDelete.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		if(this.dsList.getColumn(i, "CD_RCODE").length != 2){
			this.gfnAlert("실코드는 반드시 두자리로 입력하셔야 합니다.");
			return;
		}
		
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
				var nrow = this.dsInsert.addRow();
				this.dsInsert.setColumn(nrow, "CD_ACNTUNIT", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0, 6));
				this.dsInsert.setColumn(nrow, "TY_GUBUN", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6, 1));
				this.dsInsert.setColumn(nrow, "NO_CHASU", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7, 2));
				this.dsInsert.setColumn(nrow, "CD_LCODE", "");
				this.dsInsert.setColumn(nrow, "CD_RCODE", this.dsList.getColumn(i, "CD_RCODE"));
				this.dsInsert.setColumn(nrow, "DS_RCODE", this.dsList.getColumn(i, "DS_RCODE"));
				this.dsInsert.setColumn(nrow, "DS_REMARK", this.dsList.getColumn(i, "DS_REMARK"));
				this.dsInsert.setColumn(nrow, "ID_INSERT", this.AuthClient.ID_USER);
				break;
				
			case "U":
				var nrow = this.dsUpdate.addRow();
				this.dsUpdate.setColumn(nrow, "CD_ACNTUNIT", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0, 6));
				this.dsUpdate.setColumn(nrow, "TY_GUBUN", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6, 1));
				this.dsUpdate.setColumn(nrow, "NO_CHASU", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7, 2));
				this.dsUpdate.setColumn(nrow, "CD_LCODE", "");
				this.dsUpdate.setColumn(nrow, "CD_RCODE", this.dsList.getColumn(i, "CD_RCODE"));
				this.dsUpdate.setColumn(nrow, "DS_RCODE", this.dsList.getColumn(i, "DS_RCODE"));
				this.dsUpdate.setColumn(nrow, "DS_REMARK", this.dsList.getColumn(i, "DS_REMARK"));
				this.dsUpdate.setColumn(nrow, "ID_UPDATE", this.AuthClient.ID_USER);
				break;
				
			case "D":
				var nrow = this.dsDelete.addRow();
				this.dsDelete.setColumn(nrow, "CD_ACNTUNIT", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0, 6));
				this.dsDelete.setColumn(nrow, "TY_GUBUN", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6, 1));
				this.dsDelete.setColumn(nrow, "NO_CHASU", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7, 2));
				this.dsDelete.setColumn(nrow, "CD_LCODE", "");
				this.dsDelete.setColumn(nrow, "CD_RCODE", this.dsList.getColumn(i, "CD_RCODE"));
				break;
		}
	}
	
	if (this.dsInsert.rowcount == 0 && this.dsUpdate.rowcount == 0 && this.dsDelete.rowcount == 0) return;
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "insert=dsInsert update=dsUpdate delete=dsDelete";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
						
}

this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

this.fnPrint = function() {

}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	
	if(id == "ccfCD_ACNTUNIT") { 
		dsUserParam.setColumn(nrow, "CD_DEPT", this.AuthClient.CD_DEPT);
		dsUserParam.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
		dsUserParam.setColumn(nrow, "ID_GROUP", this.FormInfo.ID_GROUP);
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
	}
		
	return true;
};

this.fnAfterCDTextChanged = function(id, codeFindData) {

	if(id == "ccfCD_ACNTUNIT") {
		//this.gfnSetFormStatus(this, "I");
	}
}

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo) {
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};


 // 품목코드 버튼 클릭시 팝업화면 호출
 this.fnItemCd = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	// 선택된 row가 있을 경우에만 팝업을 띄움
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	var param = {};
	param.CD_ACNTUNIT = this.dsSearch.getColumn(0, "CD_ACNTUNIT");
	param.DS_ACNTUNIT = this.ccfCD_ACNTUNIT.form.DSTextBox.value;
    param.CD_LCODE = "";
	param.DS_LCODE = "";
	param.CD_RCODE = this.dsList.getColumn(this.dsList.rowposition, "CD_RCODE");
	param.DS_RCODE = this.dsList.getColumn(this.dsList.rowposition, "DS_RCODE");

	// 화면 오픈. 
	// CD_MODULE은 보통 같은 모듈에서 호출하는 경우가 많으니 this.FormInfo.CD_MODULE 사용
	// 타 모듈 화면 호출시 지정할것.
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DLF_ITEM_CODE", "fnItemCdCallback", param);
}

this.fnItemCdCallback =  function(svcID, val) {
	this.FormBtns.Select.click();
};
]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DRFPR_RCODE_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">insert</Col>
            <Col id="SP">DRFPR_RCODE_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">update</Col>
            <Col id="SP">DRFPR_RCODE_UPDATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">delete</Col>
            <Col id="SP">DRFPR_RCODE_DELETE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_ACNTUNIT" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_ACNTUNIT"/>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_ACNTUNIT.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_ACNTUNIT"/>
    </Bind>
  </Form>
</FDL>
