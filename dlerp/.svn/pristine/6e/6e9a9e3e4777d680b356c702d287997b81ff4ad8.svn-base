<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="DAU_INITSUBST_DLG" width="348" height="235" maxwidth="390" maxheight="315" titletext="공제생성" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divData" taborder="0" left="0" top="0" bottom="0" right="0" cssclass="div_DATA_Bg" text="">
          <Layouts>
            <Layout>
              <Static id="staTITLE" taborder="0" text="급여 공제정보 생성" left="2" top="-7" width="344" height="30" cssclass="sta_TITLE_Bg" textAlign="left"/>
              <!-- 지급년월 -->
              <Static id="staYM_SALARY" taborder="1" text="지급년월" left="0" top="staTITLE:0" width="87" height="30" visible="true" cssclass="sta_WF_tablelabelE"/>
              <Static id="staYM_SALARY_bg" taborder="2" left="staYM_SALARY:-1" top="staYM_SALARY:-30" width="262" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Div id="ctclYM_SALARY" taborder="3" left="staYM_SALARY:5" top="staYM_SALARY:-25" width="80" height="20" url="cmm::cmmCalMM.xfdl"/>
              <!-- 지급구분 -->
              <Static id="staTY_SALARY" taborder="4" text="지급구분" left="0" top="staYM_SALARY:-1" width="87" height="30" visible="true" cssclass="sta_WF_tablelabelE"/>
              <Static id="staTY_SALARY_bg" taborder="5" left="staTY_SALARY:-1" top="staTY_SALARY:-30" width="262" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Combo id="cboTY_SALARY" taborder="6" left="staTY_SALARY:5" top="staTY_SALARY:-25" width="70" height="20" innerdataset="dsTY_SALARY" datacolumn="DS_CODE" codecolumn="CD_CODE" index="-1" value="1" onitemchanged="fnSearchInit" readonly="false"/>
              <Combo id="cboSN_SALARY" taborder="7" left="cboTY_SALARY:5" top="staTY_SALARY:-25" width="50" height="20" innerdataset="dsSN_SALARY" datacolumn="VALUE" codecolumn="CODE" index="-1" value="1" onitemchanged="fnSearchInit" readonly="false"/>
              <!-- 법인 -->
              <Static id="staCD_CORP" taborder="8" text="법인" left="0" top="staTY_SALARY:-1" width="87" height="30" visible="true" cssclass="sta_WF_tablelabelE"/>
              <Static id="staCD_CORP_bg" taborder="9" left="staCD_CORP:-1" top="staCD_CORP:-30" width="262" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Div id="ccfCD_CORP" CodeFindName="DAX_CFCORP_CODEFIND" CDTextWidth="50" taborder="10" left="staCD_CORP:5" top="staCD_CORP:-25" width="250" height="20" url="cmm::cmmCodeFind.xfdl" text="" visible="true" BeforeUserDataSetParam="fnBeforeUserDataSetParam" AfterCDTextChanged="fnAfterCDTextChanged"/>
              <!-- 작업대상 -->
              <Static id="staTY_WORK" taborder="11" text="작업대상" left="0" top="staCD_CORP:-1" width="87" height="30" visible="true" cssclass="sta_WF_tablelabelE"/>
              <Static id="staTY_WORK_bg" taborder="12" left="staTY_WORK:-1" top="staTY_WORK:-30" width="262" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Radio id="rdoTY_WORK" taborder="13" left="staTY_WORK:5" top="staTY_WORK:-27" width="239" height="24" innerdataset="innerdataset" codecolumn="codecolumn" datacolumn="datacolumn" direction="vertical" value="1" text="특정사번" index="0" onitemchanged="rdoTY_WORK_onitemchanged">
                <Dataset id="innerdataset">
                  <ColumnInfo>
                    <Column id="codecolumn" size="256"/>
                    <Column id="datacolumn" size="256"/>
                  </ColumnInfo>
                  <Rows>
                    <Row>
                      <Col id="codecolumn">S</Col>
                      <Col id="datacolumn">특정사번</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">D</Col>
                      <Col id="datacolumn">특정부서</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">%</Col>
                      <Col id="datacolumn">전체</Col>
                    </Row>
                  </Rows>
                </Dataset>
              </Radio>
              <!-- 성명 -->
              <Static id="staID_SABUN" taborder="14" text="성명" left="0" top="staTY_WORK:-1" width="87" height="30" cssclass="sta_WF_tablelabelE"/>
              <Static id="staID_SABUN_bg" taborder="15" left="staID_SABUN:-1" top="staID_SABUN:-30" width="262" height="30" cssclass="sta_WF_tablebg" text=""/>
              <Div id="ccfID_SABUN" CDTextWidth="90" taborder="16" left="staID_SABUN:5" top="staID_SABUN:-25" width="250" height="20" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DAX_CFBASEINFO_ALL"/>
              <!-- 부서 -->
              <Static id="staCD_DEPT" taborder="14" text="부서" left="0" top="staID_SABUN:-1" width="87" height="30" cssclass="sta_WF_tablelabelE"/>
              <Static id="staCD_DEPT_bg" taborder="15" left="staCD_DEPT:-1" top="staCD_DEPT:-30" width="262" height="30" cssclass="sta_WF_tablebg" text=""/>
              <Div id="ccfCD_DEPT" CDTextWidth="80" taborder="18" left="staCD_DEPT:5" top="staCD_DEPT:-25" width="250" height="20" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DAX_CFDEPT"/>
              <Div id="divBtns" left="110" top="staCD_DEPT:10" width="130" height="27" taborder="17">
                <Layouts>
                  <Layout>
                    <Button id="btnOK" taborder="1" text="확인" left="0" top="0" width="60" height="27" onclick="btnOK_onclick"/>
                    <Button id="btnCANCLE" taborder="0" text="취소" left="btnOK:10" top="0" width="60" height="27" onclick="btnCANCLE_onclick"/>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form, e:nexacro.LoadEventInfo) {
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);
	this.gfnFormInfo(this);
	// ---------------------------//

	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	this.fnSetCombo();
	this.fnInit();
}

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	
}

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ctclYM_SALARY = this.divData.form.ctclYM_SALARY;		// 지급년월
	this.cboTY_SALARY   = this.divData.form.cboTY_SALARY;		// 지급구분
	this.cboSN_SALARY   = this.divData.form.cboSN_SALARY;		// 지급차수
	this.ccfCD_CORP     = this.divData.form.ccfCD_CORP;			// 법인
	this.rdoTY_WORK     = this.divData.form.rdoTY_WORK;			// 작업대상
	this.ccfID_SABUN    = this.divData.form.ccfID_SABUN;		// 성명
	this.ccfCD_DEPT     = this.divData.form.ccfCD_DEPT;			// 부서
}

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.ccfCD_CORP.BeforeUserDataSetParam  = "fnBeforeUserDataSetParam";	// 법인
	this.ccfCD_CORP.AfterCDTextChanged      = "fnAfterCDTextChanged";
	this.ccfID_SABUN.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";	// 성명
	this.ccfID_SABUN.AfterCDTextChanged     = "fnAfterCDTextChanged";
	this.ccfCD_DEPT.BeforeUserDataSetParam  = "fnBeforeUserDataSetParam";	// 부서
	this.ccfCD_DEPT.AfterCDTextChanged      = "fnAfterCDTextChanged";
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsExecute = new Dataset();
	this.dsExecute.addColumn("YM_SALARY", "string");
	this.dsExecute.addColumn("TY_SALARY", "string");
	this.dsExecute.addColumn("SN_SALARY", "int");
	this.dsExecute.addColumn("CD_CORP", "string");
	this.dsExecute.addColumn("TY_WORK", "string");
	this.dsExecute.addColumn("ID_SABUN", "string");
	this.dsExecute.addColumn("CD_DEPT", "string");
	this.dsExecute.addColumn("ID_USER", "string");
	this.dsExecute.addColumn("GR_SEARCH", "string");
	this.dsExecute.addColumn("GR_CORP", "string");
}

/************************************************************************
 * 콤보 설정
 ************************************************************************/
this.fnSetCombo = function() {
   this.dsCombo = new Dataset();
   this.dsCombo.addColumn("TY_SEL", "string");
   this.dsCombo.addColumn("CD_PREFIX", "string");
   this.dsCombo.addColumn("CD_UPPREFIX", "string");
   
   this.dsCombo.addRow();
   this.dsCombo.setColumn(0, "TY_SEL"     , "P");
   this.dsCombo.setColumn(0, "CD_PREFIX"  , "GS");
   this.dsCombo.setColumn(0, "CD_UPPREFIX", "");

	var strSvcId    = "combo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "combo=dsCombo";
	var outData     = "dsTY_SALARY=combo0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction(strSvcId,		// transaction을 구분하기 위한 svc id값
						strSvcType, 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData, 		// 입력값으로 보낼 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						outData, 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc);	// 통신방법 정의 [생략가능]
}

/************************************************************************
 * 화면 및 검색영역 초기화
 ************************************************************************/
this.fnInit = function() {
	var frame = this.getOwnerFrame();
	console.log("frame", frame);
	this.dsList.setColumn(0, "YM_SALARY", frame.YM_SALARY);	// 지급년월
	this.dsList.setColumn(0, "TY_SALARY", frame.TY_SALARY);		// 지급구분
	this.dsList.setColumn(0, "SN_SALARY", frame.SN_SALARY);		// 지급차수
	this.dsList.setColumn(0, "CD_CORP", frame.CD_CORP);			// 법인
	this.dsList.setColumn(0, "DS_CORP", frame.DS_CORP);
	this.dsList.setColumn(0, "TY_WORK", "%");					// 작업대상
	this.ccfID_SABUN.set_enable(false);
	this.ccfCD_DEPT.set_enable(false);
	
	// 사번, 성명이 있으면 특정사번으로 바인딩
	if (!this.gfnIsNull(frame.ID_SABUN) && !this.gfnIsNull(frame.DS_HNAME)) {
		this.dsList.setColumn(0, "ID_SABUN", frame.ID_SABUN);
		this.dsList.setColumn(0, "DS_HNAME", frame.DS_HNAME);
		// 작업대상
		this.dsList.setColumn(0, "TY_WORK", "S");
		this.ccfID_SABUN.set_enable(true);
	}
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
/*
 * 조회 버튼
 */
this.fnSelect = function() {
	
}

/*
 * 입력 버튼
 */
this.fnAdd = function() {
	
}

/*
 * 삭제 버튼
 */
this.fnDel = function() {
	
}

/*
 * 저장 버튼
 */
this.fnSave = function() {
	
}

/*
 * 엑셀 버튼
 */
this.fnExcel = function() {
	
}

/*
 * 출력 버튼
 */
this.fnPrint = function() {
	return true;
}

/************************************************************************
 * Validate
 ************************************************************************/
this.fnSelectValidate = function() {
 	var validate = true;
	
	// 지급년월
	if (this.gfnIsNull(this.dsList.getColumn(0, "YM_SALARY"))) {
		validate = false;
		this.fnVaidateCallback = function() {
			this.ctclYM_SALARY.form.TextBox.setFocus();
		}
		this.gfnAlert("지급년월을 입력하세요.");
		return validate;
	}
	
	// 법인
	if (this.gfnIsNull(this.dsList.getColumn(0, "CD_CORP"))) {
		validate = false;
		this.fnVaidateCallback = function() {
			this.ccfCD_CORP.form.CDTextBox.setFocus();
		}
		this.gfnAlert("법인코드를 입력하세요.", "fnVaidateCallback");
		return validate;
	}
	
	// 작업대상 사번일때 - 코드는 개발시 변경
	if (this.rdoTY_WORK.value == "S" && this.gfnIsNull(this.dsList.getColumn(0, "ID_SABUN"))) {
		validate = false;
		this.fnVaidateCallback = function() {
			this.ccfID_SABUN.form.TextBox.setFocus();
		}
		this.gfnAlert("사번을 입력하세요.");
		return false;
	}
	
	// 작업대상 부서일때 - 코드는 개발시 변경
	if (this.rdoTY_WORK.value == "D" && this.gfnIsNull(this.dsList.getColumn(0, "CD_DEPT"))) {
		validate = false;
		this.fnVaidateCallback = function() {
			this.ccfCD_DEPT.from.CDTextBox.setFocus();
		}
		this.gfnAlert("부서를 입력하세요.");
		return validate;
	}
	
 	return validate;
}

/************************************************************************
 * 확장버튼 이벤트
 ************************************************************************/
this.btnOK_onclick = function(obj:nexacro.Button, e:nexacro.ClickEventInfo) {
	if (!this.fnSelectValidate()) return false;
	
	this.dsExecute.clearData();
	var nrow = this.dsExecute.addRow();
	this.dsExecute.setColumn(nrow, "YM_SALARY", this.dsList.getColumn(0, "YM_SALARY"));
	this.dsExecute.setColumn(nrow, "TY_SALARY", this.dsList.getColumn(0, "TY_SALARY"));
	this.dsExecute.setColumn(nrow, "SN_SALARY", this.dsList.getColumn(0, "SN_SALARY"));
	this.dsExecute.setColumn(nrow, "CD_CORP"  , this.dsList.getColumn(0, "CD_CORP"));
	this.dsExecute.setColumn(nrow, "TY_WORK"  , this.dsList.getColumn(0, "TY_WORK"));
	this.dsExecute.setColumn(nrow, "ID_SABUN" , this.dsList.getColumn(0, "ID_SABUN"));
	this.dsExecute.setColumn(nrow, "CD_DEPT"  , this.dsList.getColumn(0, "CD_DEPT"));
	this.dsExecute.setColumn(nrow, "ID_USER"  , this.AuthClient.ID_USER);
	this.dsExecute.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
	this.dsExecute.setColumn(nrow, "GR_CORP"  , this.AuthClient.CD_CORP);

	var strSvcId    = "execute";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "execute=dsExecute";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction(strSvcId,		// transaction을 구분하기 위한 svc id값
						strSvcType, 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData, 		// 입력값으로 보낼 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						outData, 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc);	// 통신방법 정의 [생략가능]
}

this.btnCANCLE_onclick = function(obj:nexacro.Button, e:nexacro.ClickEventInfo) {
	this.getParentContext().close(false);
}

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 * 기본 콜백
 */
this.fnCallback = function(svcID, errorCode, errorMsg) {
	if (svcID == "select") {
		
	} else if(svcID == "execute") {
		if (errorCode == 0) {
			this.fnClose = function() {
				this.getParentContext().close(true);
			}
			this.gfnAlert("급여공제자료 생성이 완료되었습니다.", "fnClose");
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
 	switch(id) {
	case "ccfCD_CORP":	// 법인코드
		dsUserParam.setColumn(nrow, "CD_CORP"  , this.AuthClient.CD_CORP);
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "ID_USER"  , this.AuthClient.ID_USER);
		break;

	case "ccfCD_DEPT":	// 부서코드
		if (this.gfnIsNull(this.dsList.getColumn(0, "CD_CORP"))) {
			this.fnBeforeUserCallback = function() {
					this.ccfCD_CORP.form.CDTextBox.setFocus();
				}
				this.gfnAlert("법인코드를 입력하세요.", "fnBeforeUserCallback");
				return false;
		}
		dsUserParam.setColumn(nrow, "GR_SEARCH" , this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "CD_DEPT"   , this.AuthClient.CD_DEPT);
		dsUserParam.setColumn(nrow, "CD_CORP"   , this.dsList.getColumn(0, "CD_CORP"));
		dsUserParam.setColumn(nrow, "YN_CURRENT", "");	
		break;

	case "ccfID_SABUN": // 사번 
		if (this.gfnIsNull(this.dsList.getColumn(0, "CD_CORP"))) {
			this.fnBeforeUserCallback = function() {
					this.ccfCD_CORP.form.CDTextBox.setFocus();
				}
				this.gfnAlert("법인코드를 입력하세요.", "fnBeforeUserCallback");
				return false;
		}
		dsUserParam.setColumn(nrow, "CD_CORP"  , this.dsList.getColumn(0, "CD_CORP"));
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "CD_DEPT"  , this.dsList.getColumn(0, "CD_DEPT"));
		dsUserParam.setColumn(nrow, "YN_CORP"  , "N");
		dsUserParam.setColumn(nrow, "TY_RETIRE", "%");	// 재직구분
		break;
 	}
 	return true;  
}

this.fnAfterCDTextChanged = function(id, codeFindData) {
	var arr = codeFindData;
	switch (id) {
	case "ccfCD_CORP":	// 법인코드
		this.dsList.setColumn(0, "CD_DEPT", "");
		this.dsList.setColumn(0, "DS_DEPT", "");
		this.dsList.setColumn(0, "ID_SABUN", "");
		this.dsList.setColumn(0, "DS_HNAME", "");
		break;

	case "ccfCD_DEPT":	//부서
		this.dsList.setColumn(0, "ID_SABUN", "");
		this.dsList.setColumn(0, "DS_HNAME", "");
		break;	

	case "ccfID_SABUN": // 성명
		break;
	}
}

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGridBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	return true;
}

this.fnGridAfterCDTextChanged = function(id, codeFindData) {
	
}

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
// 작업대상 변경시
this.rdoTY_WORK_onitemchanged = function(obj:nexacro.Radio,e:nexacro.ItemChangeEventInfo) {
	var TY_WORK = this.dsList.getColumn(0, "TY_WORK");
	if (TY_WORK == "%") {
		this.ccfID_SABUN.set_enable(false);
		this.ccfCD_DEPT.set_enable(false);
	} else if (TY_WORK == "S") {
		this.ccfID_SABUN.set_enable(true);
		this.ccfCD_DEPT.set_enable(false);
	} else if (TY_WORK == "D") {
		this.ccfID_SABUN.set_enable(false);
		this.ccfCD_DEPT.set_enable(true);
	}
	
	this.dsList.setColumn(0, "ID_SABUN", "");
	this.dsList.setColumn(0, "DS_HNAME", "");
	this.dsList.setColumn(0, "CD_DEPT", "");
	this.dsList.setColumn(0, "DS_DEPT", "");
}
]]></Script>
    <Dataset id="dsList"/>
    <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
      <ColumnInfo>
        <Column id="DT_PROVATION_FROM" type="STRING" size="256"/>
      </ColumnInfo>
      <Rows>
        <Row>
          <Col id="DT_PROVATION_FROM"/>
        </Row>
      </Rows>
    </Dataset>
    <Objects>
      <Dataset id="dsList">
        <ColumnInfo>
          <Column id="YM_SALARY" type="STRING" size="256"/>
          <Column id="TY_SALARY" type="STRING" size="256"/>
          <Column id="SN_SALARY" type="STRING" size="256"/>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="DS_CORP" type="STRING" size="256"/>
          <Column id="TY_WORK" type="STRING" size="256"/>
          <Column id="ID_SABUN" type="STRING" size="256"/>
          <Column id="DS_HNAME" type="STRING" size="256"/>
          <Column id="CD_DEPT" type="STRING" size="256"/>
          <Column id="DS_DEPT" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">execute</Col>
            <Col id="SP">DAUPR_MONTHLYSUBST_CREATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo</Col>
            <Col id="SP">DAZPR_COMMONCODE_COMBO</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_SALARY">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsSN_SALARY">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">1</Col>
            <Col id="VALUE">1</Col>
          </Row>
          <Row>
            <Col id="VALUE">2</Col>
            <Col id="CODE">2</Col>
          </Row>
          <Row>
            <Col id="CODE">3</Col>
            <Col id="VALUE">3</Col>
          </Row>
          <Row>
            <Col id="CODE">4</Col>
            <Col id="VALUE">4</Col>
          </Row>
          <Row>
            <Col id="CODE">5</Col>
            <Col id="VALUE">5</Col>
          </Row>
          <Row>
            <Col id="CODE">6</Col>
            <Col id="VALUE">6</Col>
          </Row>
          <Row>
            <Col id="CODE">7</Col>
            <Col id="VALUE">7</Col>
          </Row>
          <Row>
            <Col id="CODE">8</Col>
            <Col id="VALUE">8</Col>
          </Row>
          <Row>
            <Col id="CODE">9</Col>
            <Col id="VALUE">9</Col>
          </Row>
          <Row>
            <Col id="CODE">10</Col>
            <Col id="VALUE">10</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divData.form.ctclYM_SALARY.form.TextBox" propid="value" datasetid="dsList" columnid="YM_SALARY"/>
      <BindItem id="item1" compid="divData.form.cboTY_SALARY" propid="value" datasetid="dsList" columnid="TY_SALARY"/>
      <BindItem id="item2" compid="divData.form.cboSN_SALARY" propid="value" datasetid="dsList" columnid="SN_SALARY"/>
      <BindItem id="item3" compid="divData.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsList" columnid="CD_CORP"/>
      <BindItem id="item4" compid="divData.form.ccfCD_CORP.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_CORP"/>
      <BindItem id="item5" compid="divData.form.rdoTY_WORK" propid="value" datasetid="dsList" columnid="TY_WORK"/>
      <BindItem id="item6" compid="divData.form.ccfID_SABUN.form.CDTextBox" propid="value" datasetid="dsList" columnid="ID_SABUN"/>
      <BindItem id="item7" compid="divData.form.ccfID_SABUN.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_HNAME"/>
      <BindItem id="item8" compid="divData.form.ccfCD_DEPT.form.CDTextBox" propid="value" datasetid="dsList" columnid="CD_DEPT"/>
      <BindItem id="item9" compid="divData.form.ccfCD_DEPT.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_DEPT"/>
    </Bind>
  </Form>
</FDL>
