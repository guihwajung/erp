<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="수주현장총괄표" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="78.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Div id="ccfCD_PROJ" CodeFindName="DOXPR_PROJ_CODEFIND" CDTextWidth="65" taborder="0" top="10.0" width="400" height="24.0" left="0.0" enable="true" url="cmm::cmmCodeFind.xfdl" enableevent="true"/>
              <Static id="staCD_PROJ" taborder="1" text="프로젝트코드" left="ccfCD_PROJ:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Static id="sta00" taborder="2" text="(단위 : 천원)" top="ccfCD_PROJ:10.0" height="24.0" right="5" width="92.0" cssclass="sta_WF_SchLabel"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
    this.btnCard = this.gfnFormButtonAdd("btnCard", "fnCard");        //수주현장별진행사항표
	this.btnCreate = this.gfnFormButtonAdd("btnCreate", "fnCreate");  //자료생성
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {	
	this.dxGrid = this.divData.form.objGrid;
	this.ccfCD_PROJ = this.divSearch.form.ccfCD_PROJ;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
    
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DO", "DOT_TOT");
	this.dxGrid.setFormatRowProperty( 1,"size", 60);
	this.ccfCD_PROJ.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	//그리드 코드파인드
	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";	
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_PROJ", "string");
	
	this.dsCreate = new Dataset();
	this.dsCreate.addColumn("CD_PROJ", "string");
	this.dsCreate.addColumn("ID_USER", "string");

// 	this.dsInsert = new Dataset();
// 	this.dsInsert.addColumn("CD_PROJ", "string");
// 	this.dsInsert.addColumn("DS_COMPANY", "string");
// 	this.dsInsert.addColumn("DS_ADDR", "string");
// 	this.dsInsert.addColumn("DS_DEPT", "string");
// 	this.dsInsert.addColumn("DS_NAME", "string");
// 	this.dsInsert.addColumn("DS_TITLE", "string");
// 	this.dsInsert.addColumn("DS_PHONE", "string");
// 	this.dsInsert.addColumn("DS_MOBILE", "string");
// 	this.dsInsert.addColumn("DS_FAX", "string");
// 	this.dsInsert.addColumn("DS_EMAIL", "string");
// 	this.dsInsert.addColumn("RM_BIGO", "string");
// 	this.dsInsert.addColumn("ID_USER", "string");
// 
// 	this.dsUpdate = new Dataset();
// 	this.dsUpdate.addColumn("CD_PROJ", "string");
// 	this.dsUpdate.addColumn("NO_SEQ", "int");
// 	this.dsUpdate.addColumn("DS_COMPANY", "string");
// 	this.dsUpdate.addColumn("DS_ADDR", "string");
// 	this.dsUpdate.addColumn("DS_DEPT", "string");
// 	this.dsUpdate.addColumn("DS_NAME", "string");
// 	this.dsUpdate.addColumn("DS_TITLE", "string");
// 	this.dsUpdate.addColumn("DS_PHONE", "string");
// 	this.dsUpdate.addColumn("DS_MOBILE", "string");
// 	this.dsUpdate.addColumn("DS_FAX", "string");
// 	this.dsUpdate.addColumn("DS_EMAIL", "string");
// 	this.dsUpdate.addColumn("RM_BIGO", "string");
// 	this.dsUpdate.addColumn("ID_USER", "string");
// 
// 	this.dsDelete = new Dataset();
// 	this.dsDelete.addColumn("CD_PROJ", "string");
// 	this.dsDelete.addColumn("NO_SEQ", "int");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "CD_PROJ", this.dsSearch.getColumn(0, "CD_PROJ"));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	var nrow = this.gfnGridAdd(this.dxGrid); // top (default), bottom, current
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	생성 버튼
 */
this.fnCreate = function() {

	// 그리드 필수항목 체크
 	if (!this.gfnGridValidate(this.dxGrid)) return;	
	
	this.dsCreate.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "U":
				var nrow = this.dsCreate.addRow();
				this.dsCreate.setColumn(nrow, "CD_PROJ", this.dsList.getColumn(i, "CD_PROJ"));
				this.dsCreate.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
				break;
		}
	}
	
	if (this.dsCreate.rowcount == 0) return;
	
	var strSvcId    = "create";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "create=dsCreate";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;

// 	if (this.gfnIsNull(this.dsSearch.getColumn(0,"CD_PROJ"))) {
// 		validate = false;
// 		// Alert후 실행할 처리
// 		this.fnVaidateCallback = function() {
// 			this.ccfCD_PROJ.form.CDTextBox.setFocus();
// 		}
// 		this.gfnAlert("프로젝트코드를 입력하세요.", "fnVaidateCallback");
// 	}

	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	} else if(svcID == "create") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	} 
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) 
 {
	if(id == "ccfCD_PROJ")
	{
		dsUserParam.setColumn(nrow, "TY_PROJ", this.getOwnerFrame().TY_PROJ);
	}
	return true;
 }
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 this.fnGrid_BeforeUserDataSetParam = function(id, dsUserParam, nrow) {	
	// 그리드에서 코드파인드 id는 그리드셋팅의 코드파인드 식별ID
	switch(id) {
		case "DOXPR_PROJ_CODEFIND":	
 			dsUserParam.setColumn(nrow, "TY_PROJ", "%");
		break;		
	}

	return true;
}
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};

this.fnCard = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var param = {};
	param.CD_PROJ = this.dsList.getColumn(this.dsList.rowposition, "CD_PROJ");
	param.DS_PROJ = this.dsList.getColumn(this.dsList.rowposition, "DS_PROJ");
	
	this.gfnFormOpen("DOT", "DOT_CARD", "", param, 1650, 850);
};

this.dsList_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.columnid == "CHK") {
		this.dsList.set_enableevent(false);
		if(this.dsList.getColumn(e.row, e.columnid) != 0){
			this.dsList.setColumn(e.row, this.ucFlag, "U");
		}
		else{
			this.dsList.setColumn(e.row, this.ucFlag, "");
		}
		this.dsList.set_enableevent(true);
	}
};]]></Script>
    <Objects>
      <Dataset id="dsList" onvaluechanged="dsList_onvaluechanged"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DOTPR_TOT_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">create</Col>
            <Col id="SP">DOTPR_CARD_CREATE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_PROJ" type="STRING" size="256"/>
          <Column id="DS_PROJ" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_PROJ.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_PROJ"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_PROJ.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_PROJ"/>
    </Bind>
  </Form>
</FDL>
