<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="1500" height="820" titletext="예적금 약정 등록" onload="form_onload">
    <Layouts>
      <Layout stepcount="0">
        <Div id="divSearch" taborder="0" left="0" top="10.0" height="78" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="sta00" taborder="7" text="관리번호" left="0" top="44" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Static id="sta03" taborder="4" text="완료여부" left="sta00:300" top="44" width="92.0" height="24" cssclass="sta_WF_SchLabelE"/>
              <Combo id="cboTY_EXPIRY" taborder="3" text="진행중" left="482" top="44" width="91" height="24.0" codecolumn="CD_CODE" datacolumn="DS_CODE" value="N" index="-1" innerdataset="dsTY_EXPIRY" onitemchanged="fnSearchInit"/>
              <Static id="sta04" taborder="5" text="법인코드" left="0" top="10" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="cfCD_CORP" CDTextWidth="70" taborder="0" left="sta04:0.0" top="10.0" width="270" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Div id="cfCD_BANKITEM" CDTextWidth="70" taborder="1" left="cfCD_CORP:120" top="10.0" width="269" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="sta01" taborder="6" text="금융상품" left="cfCD_CORP:30" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="cfNO_YEJUKUM" CDTextWidth="90" taborder="2" left="92" top="44" width="270" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="1" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg" ondragmove="divData_ondragmove">
          <Layouts>
            <Layout>
              <Div id="divSplitter" taborder="2" top="0" width="5" cursor="ew-resize" bottom="0" ondrag="divData_divSplitter_ondrag" left="21.88%" cssclass="div_Splitter"/>
              <Div id="divDataRight" taborder="1" left="divSplitter:5" top="3" bottom="0" right="0" text="">
                <Layouts>
                  <Layout>
                    <Static id="sta22" taborder="87" left="74" top="436" height="30" cssclass="sta_WF_tablebg" text="" right="22"/>
                    <Static id="sta06_00" taborder="89" left="74" top="115" height="30" cssclass="sta_WF_tablebg" right="22"/>
                    <Static id="sta00" taborder="42" text="기본정보" left="0" top="0" height="22" cssclass="sta_TITLE_Bg" right="0"/>
                    <Static id="sta11" taborder="44" left="74" top="28" height="30" cssclass="sta_WF_tablebg" text="" right="22"/>
                    <Static id="sta03" taborder="45" left="74" top="57" height="30" cssclass="sta_WF_tablebg" onclick="divData_divDataRight_sta03_onclick" right="22"/>
                    <Static id="sta05" taborder="46" text="예적금명" left="343" top="28" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Div id="ccfCD_CORP" CDTextWidth="70" taborder="35" left="404" top="3" width="240" height="20" url="cmm::cmmCodeFind.xfdl" enable="true" visible="false" tabstop="false"/>
                    <Static id="sta06" taborder="47" left="74" top="86" height="30" cssclass="sta_WF_tablebg" right="22"/>
                    <Static id="sta28" taborder="50" text="납입조건" left="0" top="155" height="22" cssclass="sta_TITLE_Bg" right="-1"/>
                    <Static id="sta29" taborder="51" text="금융상품종류" left="701" top="28" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta33" taborder="52" left="74" top="182" height="36" cssclass="sta_WF_tablebg" right="22"/>
                    <Static id="sta34" taborder="53" text="불입액&#13;&#10;(가입통화)" left="0" top="182" width="100" height="36" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta36" taborder="54" text="불입주기" left="481" top="182" width="100" height="36" cssclass="sta_WF_tablelabelE"/>
                    <Static id="staChitPubPnt" taborder="55" text="회전주기(월)" left="923" top="182" width="90" height="36" cssclass="sta_WF_tablelabel" visible="false"/>
                    <Static id="sta45" taborder="56" text="진행정보 및 질권" left="0" top="320" height="22" cssclass="sta_TITLE_Bg" right="-1"/>
                    <Static id="sta01" taborder="43" text="관리번호" left="0" top="28" width="100" height="30" cssclass="sta_WF_tablelabel"/>
                    <Edit id="txtNO_YEJUKUM" taborder="33" left="104" top="33" width="232" height="20" maxlength="20" enable="false" tabstop="false"/>
                    <Static id="sta21" taborder="48" text="금융기관" left="701" top="57" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta26" taborder="49" text="가입금액(원화)" left="701" top="86" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta10" taborder="57" text="예적금계좌" left="0" top="57" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta12" taborder="58" text="가입통화/금액" left="343" top="86" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
                    <MaskEdit id="mskTR_INCOME" taborder="16" left="634" top="190" width="70" height="20" format="#0" limitbymask="integer"/>
                    <Static id="sta07" taborder="59" left="94" top="349" height="30" cssclass="sta_WF_tablebg" text="" right="22"/>
                    <MaskEdit id="mskAM_CONT" taborder="8" left="523" top="91" width="164" height="20" format="#,###,###,###,###,###,##0.##"/>
                    <MaskEdit id="mskCT_TINCOM" taborder="36" left="348" top="324" width="165" height="20" format="#,###,###,##0" enable="false" onchanged="divData_divDataRight_mskCT_TINCOM_onchanged" visible="false"/>
                    <Static id="sta38" taborder="60" text="불입액" left="0" top="349" width="115" height="30" cssclass="sta_WF_tablelabel"/>
                    <MaskEdit id="mskAM_INTOT" taborder="37" left="121" top="354" width="175" height="20" format="#,###,###,###,###,###,##0" autoselect="false" enable="false"/>
                    <Static id="sta41" taborder="61" left="94" top="378" height="30" cssclass="sta_WF_tablebg" text="" right="22"/>
                    <Static id="sta42" taborder="62" text="현불입횟수" left="334" top="349" width="115" height="30" cssclass="sta_WF_tablelabel"/>
                    <Static id="sta43" taborder="63" text="잔액" left="660" top="349" width="115" height="30" cssclass="sta_WF_tablelabel"/>
                    <Static id="sta49" taborder="64" text="완료여부" left="334" top="378" width="115" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta51" taborder="65" text="해지여부/일자" left="0" top="378" width="115" height="30" cssclass="sta_WF_tablelabel"/>
                    <Combo id="cboYN_CANCEL" taborder="26" left="120" top="383" width="65" height="20" codecolumn="CODE" datacolumn="NAME" value="LOAN" index="0" text="LOAN" innerdataset="dsYN_CANCEL"/>
                    <Static id="sta53" taborder="66" left="74" top="407" height="30" cssclass="sta_WF_tablebg" text="" right="22"/>
                    <Static id="sta55" taborder="67" text="질권금액" left="334" top="407" width="115" height="30" cssclass="sta_WF_tablelabel"/>
                    <Static id="sta56" taborder="68" left="74" top="465" cssclass="sta_WF_tablebg" right="22" height="127"/>
                    <Static id="sta59" taborder="69" text="질권설정여부" left="0" top="407" width="115" height="30" cssclass="sta_WF_tablelabel"/>
                    <Static id="sta64" taborder="71" left="0" top="465" width="115" cssclass="sta_WF_tablelabel" text="비고" height="127"/>
                    <TextArea id="TeaRM_BIGO" taborder="32" left="121" top="472" width="837" maxlength="200" height="110"/>
                    <Edit id="txtDS_LIMIT" taborder="31" left="782" top="413" width="207" height="20" maxlength="100" enable="true"/>
                    <Static id="sta04" taborder="72" text="귀속부서" left="343" top="57" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Div id="cfCD_BANKITEM2" CDTextWidth="70" taborder="2" left="805" top="33" width="251" height="20" url="cmm::cmmCodeFind.xfdl" enable="true"/>
                    <Edit id="txtNM_YEJUKUM" taborder="1" left="447" top="33" width="240" height="20" maxlength="50" enable="true"/>
                    <Div id="cfNO_ACCOUNT" CDTextWidth="110" taborder="0" left="104" top="62" width="232" height="20" url="cmm::cmmCodeFind.xfdl" enable="true"/>
                    <Div id="cfCD_VENDOR" CDTextWidth="70" taborder="4" left="805" top="62" width="251" height="20" url="cmm::cmmCodeFind.xfdl" enable="true"/>
                    <Div id="cfCD_DEPT_ACNT" CDTextWidth="70" taborder="3" left="447" top="63" width="240" height="20" url="cmm::cmmCodeFind.xfdl" enable="true"/>
                    <Calendar id="calDT_CONT" taborder="5" left="104" top="91" width="105" height="20" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" value=""/>
                    <Static id="staCD_TILDE01" taborder="73" text="~" left="215" top="91" width="10" height="20"/>
                    <Calendar id="calDT_FINISH" taborder="6" left="231" top="91" width="105" height="20" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" value=""/>
                    <MaskEdit id="mskAM_INCOME" taborder="13" left="104" top="190" width="125" height="20" format="#,###,###,###,###,###,##0.##"/>
                    <Static id="sta02" taborder="74" text="이자수취조건" left="0" top="226" height="22" cssclass="sta_TITLE_Bg" right="-1"/>
                    <Static id="sta13" taborder="75" left="74" top="253" height="30" cssclass="sta_WF_tablebg" right="22"/>
                    <Static id="sta14" taborder="76" text="이율(%)" left="0" top="253" width="100" height="30" cssclass="sta_WF_tablelabel"/>
                    <Static id="sta27" taborder="77" text="방식" left="233" top="253" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="staChitPubPnt00" taborder="78" text="계산방식" left="731" top="253" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta32" taborder="79" text="유형" left="481" top="253" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
                    <MaskEdit id="mskRT_EZA" taborder="18" left="104" top="258" width="105" height="20" format="###,##0.####"/>
                    <Combo id="cboTY_DANBOK" taborder="19" left="337" top="258" width="125" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="LOAN" index="0" text="LOAN" innerdataset="dsTY_DANBOK"/>
                    <Combo id="cboTY_EZA" taborder="20" left="585" top="258" width="125" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="LOAN" index="0" text="" innerdataset="dsTY_EZA"/>
                    <Combo id="cboTY_EZACAL" taborder="21" left="835" top="258" width="125" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="LOAN" index="0" text="" innerdataset="dsTY_EZACAL"/>
                    <Combo id="cboYN_PLAN" taborder="40" left="782" top="383" width="165" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="LOAN" index="0" text="" innerdataset="dsYN_PLAN" enable="false"/>
                    <Combo id="cboTY_EXPIRY2" taborder="28" left="453" top="383" width="165" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="LOAN" index="0" text="" innerdataset="dsTY_EXPIRY2"/>
                    <Calendar id="calDT_CANCEL" taborder="27" left="188" top="383" width="110" height="20" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" value=""/>
                    <MaskEdit id="mskAM_LIMIT" taborder="30" left="453" top="412" width="165" height="20" format="#,###,###,###,###,###,##0" enableevent="true"/>
                    <MaskEdit id="mskQN_IN" taborder="38" left="453" top="354" width="165" height="20" format="#,###,###,##0" enable="false" visible="true" tabstop="true"/>
                    <MaskEdit id="mskAM_JAN" taborder="39" left="781" top="353" width="165" height="20" format="#,###,###,###,###,###,##0" enable="false"/>
                    <Static id="sta15" taborder="80" left="74" top="282" height="30" cssclass="sta_WF_tablebg" right="22"/>
                    <Static id="sta16" taborder="81" text="수취일" left="0" top="282" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta17" taborder="82" text="주기(개월)" left="233" top="282" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="staChitPubPnt01" taborder="83" text="일수계산" left="731" top="282" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta18" taborder="84" text="수취기준" left="481" top="282" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
                    <MaskEdit id="mskTR_EZASTD" taborder="22" left="104" top="287" width="105" height="20" format="#,###,###,##0"/>
                    <Combo id="cboTY_SUNHOO" taborder="24" left="585" top="287" width="125" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="LOAN" index="0" text="" innerdataset="dsTY_SUNHOO"/>
                    <Combo id="cboTY_YANGDAN" taborder="25" left="835" top="287" width="125" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="LOAN" index="0" text="" innerdataset="dsTY_YANGDAN"/>
                    <MaskEdit id="mskTR_INTTERM" taborder="23" left="337" top="287" width="125" height="20" format="#,###,###,##0"/>
                    <Static id="sta19" taborder="85" text="가입기간" left="0" top="86" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Div id="cfNO_ACCOUNT_DCHE" CDTextWidth="110" taborder="10" left="104" top="120" width="232" height="20" url="cmm::cmmCodeFind.xfdl" enable="true"/>
                    <Static id="sta20" taborder="86" text="불입일" left="731" top="182" width="100" height="36" cssclass="sta_WF_tablelabelE"/>
                    <MaskEdit id="mskTR_TURN" taborder="34" left="1017" top="190" width="70" height="20" format="#0" limitbymask="integer" visible="false"/>
                    <Static id="sta61" taborder="70" text="실가용금액" left="0" top="436" width="115" height="30" cssclass="sta_WF_tablelabel"/>
                    <MaskEdit id="mskAM_SIL" taborder="41" left="121" top="441" width="175" height="20" format="#,###,###,###,###,###,##0" enable="false"/>
                    <Combo id="cboTY_CMS" taborder="11" left="447" top="120" width="165" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="LOAN" index="0" text="LOAN" innerdataset="dsTY_CMS"/>
                    <Static id="sta19_00" taborder="88" text="출금계좌" left="0" top="115" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Combo id="cboCD_CURR" taborder="7" left="447" top="91" width="73" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="LOAN" index="0" text="LOAN" innerdataset="dsCD_CURR"/>
                    <MaskEdit id="mskAM_CONT_KRW" taborder="9" left="806" top="91" width="164" height="20" format="#,###,###,###,###,###,##0" limitbymask="integer"/>
                    <Static id="sta23_00" taborder="90" text="CMS전송" left="343" top="115" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Combo id="cboTY_INCOME" taborder="15" left="586" top="190" width="45" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="월" index="1" text="월" onitemchanged="divData_onitemchanged" innerdataset="dsTY_INCOME">
                      <Dataset id="innerdataset">
                        <ColumnInfo>
                          <Column id="codecolumn" size="256"/>
                          <Column id="datacolumn" size="256"/>
                        </ColumnInfo>
                        <Rows>
                          <Row>
                            <Col id="codecolumn">월</Col>
                            <Col id="datacolumn">월</Col>
                          </Row>
                          <Row>
                            <Col id="codecolumn">주</Col>
                            <Col id="datacolumn">주</Col>
                          </Row>
                        </Rows>
                      </Dataset>
                    </Combo>
                    <Static id="sta34_00" taborder="91" text="불입액(원화)" left="233" top="182" width="100" height="36" cssclass="sta_WF_tablelabelE"/>
                    <MaskEdit id="mskAM_INCOME_KRW" taborder="14" left="338" top="190" width="125" height="20" format="#,###,###,###,###,###,##0" limitbymask="integer"/>
                    <Static id="sta44_00" taborder="92" left="660" top="378" width="115" height="30" text="계획생성" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta23_00_00" taborder="93" text="장단기대체" left="701" top="115" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Combo id="cboYN_RETURN" taborder="12" left="805" top="121" width="165" height="20" codecolumn="CODE" datacolumn="NAME" value="N" index="1" text="N" innerdataset="dsYN_CANCEL"/>
                    <MaskEdit id="mskRT_EXCH" taborder="94" left="973" top="91" width="83" height="20" format="#,##0.###" enable="false"/>
                    <Combo id="cboDT_INCOME" taborder="95" left="837" top="190" width="69" height="20" codecolumn="codecolumn" datacolumn="datacolumn" value="LOAN" index="0" text="LOAN" innerdataset="innerdataset" visible="false">
                      <Dataset id="innerdataset">
                        <ColumnInfo>
                          <Column id="codecolumn" size="256"/>
                          <Column id="datacolumn" size="256"/>
                        </ColumnInfo>
                        <Rows>
                          <Row>
                            <Col id="codecolumn">2</Col>
                            <Col id="datacolumn">월</Col>
                          </Row>
                          <Row>
                            <Col id="codecolumn">3</Col>
                            <Col id="datacolumn">화</Col>
                          </Row>
                          <Row>
                            <Col id="codecolumn">4</Col>
                            <Col id="datacolumn">수</Col>
                          </Row>
                          <Row>
                            <Col id="codecolumn">5</Col>
                            <Col id="datacolumn">목</Col>
                          </Row>
                          <Row>
                            <Col id="codecolumn">6</Col>
                            <Col id="datacolumn">금</Col>
                          </Row>
                          <Row>
                            <Col id="codecolumn">7</Col>
                            <Col id="datacolumn">토</Col>
                          </Row>
                          <Row>
                            <Col id="codecolumn">1</Col>
                            <Col id="datacolumn">일</Col>
                          </Row>
                        </Rows>
                      </Dataset>
                    </Combo>
                    <Edit id="txtDT_INCOME" taborder="17" left="837" top="190" width="69" height="20" maxlength="100" enable="true" value="0" text="0" visible="true" textAlign="right"/>
                    <Static id="sta55_00" taborder="96" text="질권내용" left="660" top="407" width="115" height="30" cssclass="sta_WF_tablelabel"/>
                    <Combo id="cboYN_LIMIT" taborder="29" left="120" top="413" width="175" height="20" codecolumn="CODE" datacolumn="NAME" value="LOAN" index="0" text="LOAN" innerdataset="dsYN_CANCEL"/>
                  </Layout>
                </Layouts>
              </Div>
              <Div id="divDataLeft" taborder="0" left="0" top="0" bottom="0" right="divSplitter:5">
                <Layouts>
                  <Layout>
                    <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0">
                      <Formats>
                        <Format id="default"/>
                      </Formats>
                    </Grid>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	
	this.fnSetParameter();
	this.fnSetCombo();
	
	
	// 타화면에서 호출 및 파라미터 존재시 자동 조회
// 	if(!this.gfnIsNull(this.getOwnerFrame().NO_YEJUKUM)) {
// 		this.dsSearch.setColumn(0, "NO_YEJUKUM", this.getOwnerFrame().NO_YEJUKUM);
// 		this.dsSearch.setColumn(0, "NM_YEJUKUM", this.getOwnerFrame().NM_YEJUKUM);
// 		this.dsSearch.setColumn(0, "CD_CORP", this.getOwnerFrame().CD_CORP);
// 		this.dsSearch.setColumn(0, "DS_CORP", this.getOwnerFrame().DS_CORP);
// 		this.dsSearch.setColumn(0, "TY_EXPIRY", "");
// 	}
	//this.cboDT_INCOME.set_visible(false);
};
 
/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	 this.btnPlanCreat = this.gfnFormButtonAdd("btnPlanCreat", "fnPlanCreat")//, "계획생성");
	 this.btnPlanPerform = this.gfnFormButtonAdd("btnPlanPerform", "fnPlanPerform")//, "계획/실적");	 
	 this.btnChngInfoInsert = this.gfnFormButtonAdd("btnChngInfoInsert", "fnChngInfoInsert")//, "변동정보등록");
	 this.btnFileUpload = this.gfnFormButtonAdd("btnFileUpload", "fnFileUpload")//, " 첨부파일 ");
	 this.btnAccount = this.gfnFormButtonAdd("btnAccount", "fnAccount")//, " 계좌관리 ");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {

	// 조회조건
	this.cfCD_CORP  = this.divSearch.form.cfCD_CORP;				// 법인코드
	this.cfCD_BANKITEM = this.divSearch.form.cfCD_BANKITEM;			// 금융상품
	this.cfNO_YEJUKUM = this.divSearch.form.cfNO_YEJUKUM;			// 관리번호
	this.cboTY_EXPIRY = this.divSearch.form.cboTY_EXPIRY;			// 완료여부
	
	this.dxGrid = this.divData.form.divDataLeft.form.objGrid;		// 그리드
	this.grSearch = this.FormInfo.GR_SEARCH;						// 권한?
	this.cdGroup = this.gfnIsNull(this.AuthClient.CD_GROUP) ? "" : this.AuthClient.CD_GROUP;						// 그룹코드	
	
	// 기본정보
	this.txtNO_YEJUKUM = this.divData.form.divDataRight.form.txtNO_YEJUKUM;			// 관리번호
	this.ccfCD_CORP = this.divData.form.divDataRight.form.ccfCD_CORP;				// 법인코드
	this.cfCD_BANKITEM2 = this.divData.form.divDataRight.form.cfCD_BANKITEM2;		// 금융상품
	this.txtNM_YEJUKUM = this.divData.form.divDataRight.form.txtNM_YEJUKUM;			// 예적금명
	this.cfNO_ACCOUNT = this.divData.form.divDataRight.form.cfNO_ACCOUNT;			// 계좌
	this.cfCD_VENDOR = this.divData.form.divDataRight.form.cfCD_VENDOR;				// 금융기관
	this.cfCD_DEPT_ACNT = this.divData.form.divDataRight.form.cfCD_DEPT_ACNT;		// 귀속부서
	this.cfNO_ACCOUNT_DCHE = this.divData.form.divDataRight.form.cfNO_ACCOUNT_DCHE;	// 대체계좌
	
	this.calDT_CONT = this.divData.form.divDataRight.form.calDT_CONT; 				// 가입기간(from)
	this.calDT_FINISH = this.divData.form.divDataRight.form.calDT_FINISH; 			// 가입기간(to)
	this.cboCD_CURR = this.divData.form.divDataRight.form.cboCD_CURR; 				// 통화 
	this.mskAM_CONT_KRW = this.divData.form.divDataRight.form.mskAM_CONT_KRW;		// 가입금액(원화)
	this.cboYN_RETURN = this.divData.form.divDataRight.form.cboYN_RETURN;			// 장단기대체 	
	
	// 납입조건
	this.txtDT_INCOME = this.divData.form.divDataRight.form.txtDT_INCOME;		// 불입일
	this.mskTR_INCOME = this.divData.form.divDataRight.form.mskTR_INCOME;		// 불입주기
	this.mskTR_TURN = this.divData.form.divDataRight.form.mskTR_TURN;			// 회전주기
	this.mskAM_INCOME = this.divData.form.divDataRight.form.mskAM_INCOME;		// 불입액
	this.mskAM_INCOME_KRW = this.divData.form.divDataRight.form.mskAM_INCOME_KRW;	// 불입금액(원화)
	this.cboTY_INCOME = this.divData.form.divDataRight.form.cboTY_INCOME;			// 불입주기(주, 월)
	this.cboDT_INCOME = this.divData.form.divDataRight.form.cboDT_INCOME;       //불입일(주일때) 
	
	// 이자지급조건
	this.mskRT_EZA = this.divData.form.divDataRight.form.mskRT_EZA;				// 이율(%)
	this.cboTY_DANBOK = this.divData.form.divDataRight.form.cboTY_DANBOK;				// 방식
	this.cboTY_EZA = this.divData.form.divDataRight.form.cboTY_EZA;				// 지급방식
	this.cboTY_EZACAL = this.divData.form.divDataRight.form.cboTY_EZACAL;			// 계산방식
	
	// 진행정보	
	this.mskAM_CONT = this.divData.form.divDataRight.form.mskAM_CONT;			// 계약금액
	this.mskCT_TINCOM = this.divData.form.divDataRight.form.mskCT_TINCOM;		// 총불입횟수
	this.mskAM_INTOT = this.divData.form.divDataRight.form.mskAM_INTOT;			// 불입액
	this.mskQN_IN = this.divData.form.divDataRight.form.mskQN_IN;				// 현불입횟수
	this.mskAM_JAN = this.divData.form.divDataRight.form.mskAM_JAN;				// 잔액
	this.cboYN_PLAN = this.divData.form.divDataRight.form.cboYN_PLAN;			// 계획생성
	this.cboYN_CANCEL = this.divData.form.divDataRight.form.cboYN_CANCEL;		// 해지여부
	this.calDT_CANCEL = this.divData.form.divDataRight.form.calDT_CANCEL;		// 해지일자
	this.cboTY_EXPIRY2 = this.divData.form.divDataRight.form.cboTY_EXPIRY2;		// 완료여부
	
	// 담보/제한 및 비고	
	this.mskAM_LIMIT = this.divData.form.divDataRight.form.mskAM_LIMIT;			// 금액
	this.txtDS_LIMIT = this.divData.form.divDataRight.form.txtDS_LIMIT;			// 종류
	this.mskAM_SIL = this.divData.form.divDataRight.form.mskAM_SIL;				// 실가용금액
	this.cboTY_CMS = this.divData.form.divDataRight.form.cboTY_CMS;				// 브랜치전송
	
	this.TeaRM_BIGO = this.divData.form.divDataRight.form.TeaRM_BIGO;			// 비고
	
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {	
	this.cfCD_CORP.CodeFindName = "DZX_CFCORP";						// 법인코드(조회조건)
	this.cfCD_BANKITEM.CodeFindName = "DFX_CFBANKITEM";				// 금융상품(조회조건)
	this.cfNO_YEJUKUM.CodeFindName = "DFX_CFNO_YEJUKUM";			// 관리번호(조회조건)
	
	this.ccfCD_CORP.CodeFindName = "DZX_CFCORP"; 					// 법인코드
	this.cfCD_BANKITEM2.CodeFindName = "DFX_CFBANKITEM";			// 금융상품
	this.cfNO_ACCOUNT.CodeFindName = "DFX_CFNO_ACCOUNT";			// 계좌
	this.cfCD_VENDOR.CodeFindName = "DFX_CFVENDOR";					// 금융기관	
	this.cfCD_DEPT_ACNT.CodeFindName = "DFX_CFACNTUNIT";			// 귀속부서	
	this.cfNO_ACCOUNT_DCHE.CodeFindName = "DFX_CFACCOUNTNO_SUJI";	// 대체계좌
	
	this.cfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.cfCD_BANKITEM.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.cfNO_YEJUKUM.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.cfCD_BANKITEM2.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.cfNO_ACCOUNT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.cfCD_VENDOR.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.cfCD_DEPT_ACNT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.cfNO_ACCOUNT_DCHE.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	this.cfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.cfCD_BANKITEM.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.cfNO_YEJUKUM.AfterCDTextChanged = "fnAfterCDTextChanged";
	
	this.ccfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.cfCD_BANKITEM2.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.cfNO_ACCOUNT.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.cfCD_VENDOR.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.cfCD_DEPT_ACNT.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.cfNO_ACCOUNT_DCHE.AfterCDTextChanged = "fnAfterCDTextChanged";
	
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DF", "DFF_DEPOSIT_REG");	
	this.dxGrid.addEventHandler("onselectchanged", this.fnGrid_RowCellChanged, this);
	this.dsList.addEventHandler("oncolumnchanged", this.dsList_ColumnChanged, this);
// 	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforuserDataSetParam";
// 	this.dxGrid.AfterCDTextChanged = "fnGrid_AfterCDTextChanged";	
	
	if (this.gfnIsNull(this.cfCD_CORP.form.CDTextBox.value)) {
		this.cfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP); 
		this.cfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);	
	}	
	
	// 법인코드 포커스추가
	//this.cfCD_CORP.form.CDTextBox.setFocus();
	
	// 권한체크 - 해당부서내역만 조회가능
	if (nexacro.toNumber(this.grSearch) >= 2) {
		this.cfCD_CORP.set_enable(false);
	}
	
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	//검색조건 데이터셋
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_BANKITEM", "string");
	this.dsSelect.addColumn("NO_YEJUKUM", "string");
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("TY_EXPIRY", "string");

	this.dsInsert = new Dataset();
	this.dsInsert.addColumn("CD_CORP", "string");
	this.dsInsert.addColumn("CD_BANKITEM", "string");
	this.dsInsert.addColumn("NM_YEJUKUM", "string");
	this.dsInsert.addColumn("NO_ACCOUNT", "string");
	this.dsInsert.addColumn("TY_GUBUN", "string");
	this.dsInsert.addColumn("CD_BANK", "string");
	this.dsInsert.addColumn("NO_ACCOUNT_DCHE", "string");
	this.dsInsert.addColumn("TY_GUBUN_DCHE", "string");
	this.dsInsert.addColumn("CD_BANK_DCHE", "string");	
	this.dsInsert.addColumn("CD_VENDOR", "string");
	this.dsInsert.addColumn("CD_DEPT", "string");
	this.dsInsert.addColumn("DT_CONT", "string");
	this.dsInsert.addColumn("DT_FINISH", "string");
	this.dsInsert.addColumn("DT_INCOME", "string");
	this.dsInsert.addColumn("TR_INCOME", "bigdecimal");
	this.dsInsert.addColumn("TR_TURN", "bigdecimal");
	this.dsInsert.addColumn("AM_INCOME", "bigdecimal");
	this.dsInsert.addColumn("RT_EZA", "bigdecimal");
	this.dsInsert.addColumn("TY_EZA", "string");
	this.dsInsert.addColumn("TY_DANBOK", "string");
	this.dsInsert.addColumn("TR_EZASTD", "bigdecimal");
	this.dsInsert.addColumn("TR_INTTERM", "bigdecimal");
	this.dsInsert.addColumn("TY_SUNHOO", "string");
	this.dsInsert.addColumn("TY_EZACAL", "string");
	this.dsInsert.addColumn("TY_YANGDAN", "string");
	this.dsInsert.addColumn("AM_CONT", "bigdecimal");
	this.dsInsert.addColumn("CT_TINCOM", "bigdecimal");
	this.dsInsert.addColumn("YN_CANCEL", "string");
	this.dsInsert.addColumn("DT_CANCEL", "string");
	this.dsInsert.addColumn("TY_EXPIRY", "string");
	this.dsInsert.addColumn("AM_LIMIT", "bigdecimal");
	this.dsInsert.addColumn("DS_LIMIT", "string");
	this.dsInsert.addColumn("TY_CMS", "string");
	this.dsInsert.addColumn("RM_BIGO", "string");
	this.dsInsert.addColumn("ID_USER", "string");
	this.dsInsert.addColumn("CD_CURR", "string");
	this.dsInsert.addColumn("AM_CONT_KRW", "bigdecimal");
	this.dsInsert.addColumn("AM_INCOME_KRW", "bigdecimal");
	this.dsInsert.addColumn("YN_RETURN", "string");
	this.dsInsert.addColumn("TY_INCOME", "string");
	this.dsInsert.addColumn("YN_LIMIT", "string");

	this.dsUpdate = new Dataset();
	this.dsUpdate.addColumn("CD_CORP", "string");
	this.dsUpdate.addColumn("CD_BANKITEM", "string");
	this.dsUpdate.addColumn("NM_YEJUKUM", "string");
	this.dsUpdate.addColumn("NO_ACCOUNT", "string");
	this.dsUpdate.addColumn("TY_GUBUN", "string");
	this.dsUpdate.addColumn("CD_BANK", "string");
	this.dsUpdate.addColumn("NO_ACCOUNT_DCHE", "string");
	this.dsUpdate.addColumn("TY_GUBUN_DCHE", "string");
	this.dsUpdate.addColumn("CD_BANK_DCHE", "string");	
	this.dsUpdate.addColumn("CD_VENDOR", "string");
	this.dsUpdate.addColumn("CD_DEPT", "string");
	this.dsUpdate.addColumn("DT_CONT", "string");
	this.dsUpdate.addColumn("DT_FINISH", "string");
	this.dsUpdate.addColumn("DT_INCOME", "string");
	this.dsUpdate.addColumn("TR_INCOME", "bigdecimal");
	this.dsUpdate.addColumn("TR_TURN", "bigdecimal");
	this.dsUpdate.addColumn("AM_INCOME", "bigdecimal");
	this.dsUpdate.addColumn("RT_EZA", "bigdecimal");
	this.dsUpdate.addColumn("TY_EZA", "string");
	this.dsUpdate.addColumn("TY_DANBOK", "string");
	this.dsUpdate.addColumn("TR_EZASTD", "bigdecimal");
	this.dsUpdate.addColumn("TR_INTTERM", "bigdecimal");
	this.dsUpdate.addColumn("TY_SUNHOO", "string");
	this.dsUpdate.addColumn("TY_EZACAL", "string");
	this.dsUpdate.addColumn("TY_YANGDAN", "string");
	this.dsUpdate.addColumn("AM_CONT", "bigdecimal");
	this.dsUpdate.addColumn("CT_TINCOM", "bigdecimal");
	this.dsUpdate.addColumn("YN_CANCEL", "string");
	this.dsUpdate.addColumn("DT_CANCEL", "string");
	this.dsUpdate.addColumn("TY_EXPIRY", "string");
	this.dsUpdate.addColumn("AM_LIMIT", "bigdecimal");
	this.dsUpdate.addColumn("DS_LIMIT", "string");
	this.dsUpdate.addColumn("TY_CMS", "string");
	this.dsUpdate.addColumn("RM_BIGO", "string");
	this.dsUpdate.addColumn("NO_YEJUKUM", "string");
	this.dsUpdate.addColumn("ID_USER", "string");
	this.dsUpdate.addColumn("CD_CURR", "string");
	this.dsUpdate.addColumn("AM_CONT_KRW", "bigdecimal");
	this.dsUpdate.addColumn("AM_INCOME_KRW", "bigdecimal");
	this.dsUpdate.addColumn("YN_RETURN", "string");
	this.dsUpdate.addColumn("TY_INCOME", "string");
	this.dsUpdate.addColumn("YN_LIMIT", "string");

	this.dsDelete = new Dataset();
	this.dsDelete.addColumn("NO_YEJUKUM", "string");
	
	this.dsExcute = new Dataset();
	this.dsExcute.addColumn("NO_YEJUKUM", "string");
	this.dsExcute.addColumn("DT_DATE", "string");
	this.dsExcute.addColumn("YN_FIRST", "string");
	this.dsExcute.addColumn("ID_USER", "string");	
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();

	this.dsSelect.setColumn(0, "CD_BANKITEM", this.dsSearch.getColumn(0, "CD_BANKITEM"));
	this.dsSelect.setColumn(0, "NO_YEJUKUM", this.dsSearch.getColumn(0, "NO_YEJUKUM"));
	this.dsSelect.setColumn(0, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));
	this.dsSelect.setColumn(0, "TY_EXPIRY", this.dsSearch.getColumn(0, "TY_EXPIRY"));
	
	//trace(this.dsSelect.saveXML());
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	
	// 컴포넌트 enable/disable처리
	this.fnSetComponent(true);
	
	var nrow = this.gfnGridAdd(this.dxGrid);
	this.dsList.set_enableevent(false);
	
	this.dsList.setColumn(nrow, "CD_CORP", this.cfCD_CORP.form.CDTextBox.value);			// 법인코드
	this.dsList.setColumn(nrow, "DS_CORP", this.cfCD_CORP.form.DSTextBox.value);			// 법인명	
	
	this.dsList.setColumn(nrow, "DT_INCOME", 0);       					// 불입일
	this.dsList.setColumn(nrow, "TR_INCOME", 0);       					// 불입주기
	this.dsList.setColumn(nrow, "TR_TURN", 0);       					// 회전주기
	this.dsList.setColumn(nrow, "AM_INCOME", 0);       					// 불입액
	this.dsList.setColumn(nrow, "RT_EZA", 0);          					// 이율(%)
	this.dsList.setColumn(nrow, "TY_DANBOK", "단리");    				// 이자방식
	this.dsList.setColumn(nrow, "TY_EZA", "고정금리");    				// 이자유형
	this.dsList.setColumn(nrow, "TY_EZACAL", "일수(365)");   				// 이자계산방식
	
	this.dsList.setColumn(nrow, "TR_EZASTD", 0);       					// 수취일
	this.dsList.setColumn(nrow, "TR_INTTERM", 0);       				// 주기(개월)
	this.dsList.setColumn(nrow, "TY_SUNHOO", "후취");    				// 수취기준
	this.dsList.setColumn(nrow, "TY_YANGDAN", "초일산입");   			// 일수계산
	
	this.dsList.setColumn(nrow, "AM_CONT", 0);         					// 계약금액
	this.dsList.setColumn(nrow, "CT_TINCOM", 0);       					// 총불입횟수
	this.dsList.setColumn(nrow, "YN_PLAN", "N");       					// 계획생성
	this.dsList.setColumn(nrow, "YN_CANCEL", "N");     					// 해지여부
	this.dsList.setColumn(nrow, "TY_EXPIRY", "N");     					// 완료여부
	this.dsList.setColumn(nrow, "YN_LIMIT", "N");						// 질권설정여부 
	this.dsList.setColumn(nrow, "AM_LIMIT", 0);        					// 담보/제한금액
	this.dsList.setColumn(nrow, "TY_CMS", "오프라인");					// 브랜치전송
	this.dsList.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);    // 사용자
	this.dsList.setColumn(nrow, "CD_CURR", "KRW");					    // 가입통화
	this.dsList.setColumn(nrow, "TY_INCOME", "월");					    // 불입주기(월)
	this.dsList.setColumn(nrow, "YN_RETURN", "N");						// 장단기대체(월)
	
	this.dsList.set_enableevent(true);
	
	this.dsList.set_rowposition(nrow);
	this.dxGrid.setCellPos(1);
	
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	//if (!this.gfnGridValidate(this.dxGrid)) return;
	
	// 해당펑션은 입력, 수정대상으로 체크하는게 아니라서 사용 어려움...
	//if (!this.gfnDataValidate(this.dsList, this.dsRequired)) return;
	if (!this.fnDataValidate()) return;
	
	this.dxGrid.updateToDataset();
	
	this.dsInsert.clearData();
	this.dsUpdate.clearData();
	this.dsDelete.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
				var nrow = this.dsInsert.addRow();
				this.dsInsert.setColumn(nrow, "CD_CORP", this.dsList.getColumn(i, "CD_CORP"));
				this.dsInsert.setColumn(nrow, "CD_BANKITEM", this.dsList.getColumn(i, "CD_BANKITEM"));
				this.dsInsert.setColumn(nrow, "NM_YEJUKUM", this.dsList.getColumn(i, "NM_YEJUKUM"));
				this.dsInsert.setColumn(nrow, "NO_ACCOUNT", this.dsList.getColumn(i, "NO_ACCOUNT"));
				this.dsInsert.setColumn(nrow, "TY_GUBUN", this.dsList.getColumn(i, "TY_GUBUN"));
				this.dsInsert.setColumn(nrow, "CD_BANK", this.dsList.getColumn(i, "CD_BANK"));
				this.dsInsert.setColumn(nrow, "NO_ACCOUNT_DCHE", this.dsList.getColumn(i, "NO_ACCOUNT_DCHE"));
				this.dsInsert.setColumn(nrow, "TY_GUBUN_DCHE", this.dsList.getColumn(i, "TY_GUBUN_DCHE"));
				this.dsInsert.setColumn(nrow, "CD_BANK_DCHE", this.dsList.getColumn(i, "CD_BANK_DCHE"));				
				this.dsInsert.setColumn(nrow, "CD_VENDOR", this.dsList.getColumn(i, "CD_VENDOR"));
				this.dsInsert.setColumn(nrow, "CD_DEPT", this.dsList.getColumn(i, "CD_DEPT_ACNT"));
				this.dsInsert.setColumn(nrow, "DT_CONT", this.dsList.getColumn(i, "DT_CONT"));
				this.dsInsert.setColumn(nrow, "DT_FINISH", this.dsList.getColumn(i, "DT_FINISH"));
				this.dsInsert.setColumn(nrow, "DT_INCOME", this.dsList.getColumn(i, "DT_INCOME"));
				this.dsInsert.setColumn(nrow, "TR_INCOME", this.dsList.getColumn(i, "TR_INCOME"));
				this.dsInsert.setColumn(nrow, "TR_TURN", this.dsList.getColumn(i, "TR_TURN"));
				this.dsInsert.setColumn(nrow, "AM_INCOME", this.dsList.getColumn(i, "AM_INCOME"));
				this.dsInsert.setColumn(nrow, "RT_EZA", this.dsList.getColumn(i, "RT_EZA"));
				this.dsInsert.setColumn(nrow, "TY_EZA", this.dsList.getColumn(i, "TY_EZA"));
				this.dsInsert.setColumn(nrow, "TY_DANBOK", this.dsList.getColumn(i, "TY_DANBOK"));
				this.dsInsert.setColumn(nrow, "TR_EZASTD", this.dsList.getColumn(i, "TR_EZASTD"));
				this.dsInsert.setColumn(nrow, "TR_INTTERM", this.dsList.getColumn(i, "TR_INTTERM"));
				this.dsInsert.setColumn(nrow, "TY_SUNHOO", this.dsList.getColumn(i, "TY_SUNHOO"));
				this.dsInsert.setColumn(nrow, "TY_EZACAL", this.dsList.getColumn(i, "TY_EZACAL"));
				this.dsInsert.setColumn(nrow, "TY_YANGDAN", this.dsList.getColumn(i, "TY_YANGDAN"));
				this.dsInsert.setColumn(nrow, "AM_CONT", this.dsList.getColumn(i, "AM_CONT"));
				this.dsInsert.setColumn(nrow, "CT_TINCOM", this.dsList.getColumn(i, "CT_TINCOM"));
				this.dsInsert.setColumn(nrow, "YN_CANCEL", this.dsList.getColumn(i, "YN_CANCEL"));
				this.dsInsert.setColumn(nrow, "DT_CANCEL", this.dsList.getColumn(i, "DT_CANCEL"));
				this.dsInsert.setColumn(nrow, "TY_EXPIRY", this.dsList.getColumn(i, "TY_EXPIRY"));
				this.dsInsert.setColumn(nrow, "AM_LIMIT", this.dsList.getColumn(i, "AM_LIMIT"));
				this.dsInsert.setColumn(nrow, "DS_LIMIT", this.dsList.getColumn(i, "DS_LIMIT"));
				this.dsInsert.setColumn(nrow, "TY_CMS", this.dsList.getColumn(i, "TY_CMS"));
				this.dsInsert.setColumn(nrow, "RM_BIGO", this.dsList.getColumn(i, "RM_BIGO"));
				this.dsInsert.setColumn(nrow, "ID_USER", this.dsList.getColumn(i, "ID_USER"));
				this.dsInsert.setColumn(nrow, "CD_CURR", this.dsList.getColumn(i, "CD_CURR"));
				this.dsInsert.setColumn(nrow, "AM_CONT_KRW", this.dsList.getColumn(i, "AM_CONT_KRW"));
				this.dsInsert.setColumn(nrow, "YN_RETURN", this.dsList.getColumn(i, "YN_RETURN"));
				this.dsInsert.setColumn(nrow, "TY_INCOME", this.dsList.getColumn(i, "TY_INCOME"));
				this.dsInsert.setColumn(nrow, "AM_INCOME_KRW", this.dsList.getColumn(i, "AM_INCOME_KRW"));
				this.dsInsert.setColumn(nrow, "YN_LIMIT", this.dsList.getColumn(i, "YN_LIMIT"));
				break;
				
			case "U":
				var nrow = this.dsUpdate.addRow();
				this.dsUpdate.setColumn(nrow, "CD_CORP", this.dsList.getColumn(i, "CD_CORP"));
				this.dsUpdate.setColumn(nrow, "CD_BANKITEM", this.dsList.getColumn(i, "CD_BANKITEM"));
				this.dsUpdate.setColumn(nrow, "NM_YEJUKUM", this.dsList.getColumn(i, "NM_YEJUKUM"));
				this.dsUpdate.setColumn(nrow, "NO_ACCOUNT", this.dsList.getColumn(i, "NO_ACCOUNT"));
				this.dsUpdate.setColumn(nrow, "TY_GUBUN", this.dsList.getColumn(i, "TY_GUBUN"));
				this.dsUpdate.setColumn(nrow, "CD_BANK", this.dsList.getColumn(i, "CD_BANK"));
				this.dsUpdate.setColumn(nrow, "NO_ACCOUNT_DCHE", this.dsList.getColumn(i, "NO_ACCOUNT_DCHE"));
				this.dsUpdate.setColumn(nrow, "TY_GUBUN_DCHE", this.dsList.getColumn(i, "TY_GUBUN_DCHE"));
				this.dsUpdate.setColumn(nrow, "CD_BANK_DCHE", this.dsList.getColumn(i, "CD_BANK_DCHE"));				
				this.dsUpdate.setColumn(nrow, "CD_VENDOR", this.dsList.getColumn(i, "CD_VENDOR"));
				this.dsUpdate.setColumn(nrow, "CD_DEPT", this.dsList.getColumn(i, "CD_DEPT_ACNT"));
				this.dsUpdate.setColumn(nrow, "DT_CONT", this.dsList.getColumn(i, "DT_CONT"));
				this.dsUpdate.setColumn(nrow, "DT_FINISH", this.dsList.getColumn(i, "DT_FINISH"));
				this.dsUpdate.setColumn(nrow, "DT_INCOME", this.dsList.getColumn(i, "DT_INCOME"));
				this.dsUpdate.setColumn(nrow, "TR_INCOME", this.dsList.getColumn(i, "TR_INCOME"));
				this.dsUpdate.setColumn(nrow, "TR_TURN", this.dsList.getColumn(i, "TR_TURN"));
				this.dsUpdate.setColumn(nrow, "AM_INCOME", this.dsList.getColumn(i, "AM_INCOME"));
				this.dsUpdate.setColumn(nrow, "RT_EZA", this.dsList.getColumn(i, "RT_EZA"));
				this.dsUpdate.setColumn(nrow, "TY_EZA", this.dsList.getColumn(i, "TY_EZA"));
				this.dsUpdate.setColumn(nrow, "TY_DANBOK", this.dsList.getColumn(i, "TY_DANBOK"));
				this.dsUpdate.setColumn(nrow, "TR_EZASTD", this.dsList.getColumn(i, "TR_EZASTD"));
				this.dsUpdate.setColumn(nrow, "TR_INTTERM", this.dsList.getColumn(i, "TR_INTTERM"));
				this.dsUpdate.setColumn(nrow, "TY_SUNHOO", this.dsList.getColumn(i, "TY_SUNHOO"));
				this.dsUpdate.setColumn(nrow, "TY_EZACAL", this.dsList.getColumn(i, "TY_EZACAL"));
				this.dsUpdate.setColumn(nrow, "TY_YANGDAN", this.dsList.getColumn(i, "TY_YANGDAN"));
				this.dsUpdate.setColumn(nrow, "AM_CONT", this.dsList.getColumn(i, "AM_CONT"));
				this.dsUpdate.setColumn(nrow, "CT_TINCOM", this.dsList.getColumn(i, "CT_TINCOM"));
				this.dsUpdate.setColumn(nrow, "YN_CANCEL", this.dsList.getColumn(i, "YN_CANCEL"));
				this.dsUpdate.setColumn(nrow, "DT_CANCEL", this.dsList.getColumn(i, "DT_CANCEL"));
				this.dsUpdate.setColumn(nrow, "TY_EXPIRY", this.dsList.getColumn(i, "TY_EXPIRY"));
				this.dsUpdate.setColumn(nrow, "AM_LIMIT", this.dsList.getColumn(i, "AM_LIMIT"));
				this.dsUpdate.setColumn(nrow, "DS_LIMIT", this.dsList.getColumn(i, "DS_LIMIT"));
				this.dsUpdate.setColumn(nrow, "TY_CMS", this.dsList.getColumn(i, "TY_CMS"));
				this.dsUpdate.setColumn(nrow, "RM_BIGO", this.dsList.getColumn(i, "RM_BIGO"));
				this.dsUpdate.setColumn(nrow, "NO_YEJUKUM", this.dsList.getColumn(i, "NO_YEJUKUM"));
				this.dsUpdate.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
				this.dsUpdate.setColumn(nrow, "CD_CURR", this.dsList.getColumn(i, "CD_CURR"));
				this.dsUpdate.setColumn(nrow, "AM_CONT_KRW", this.dsList.getColumn(i, "AM_CONT_KRW"));
				this.dsUpdate.setColumn(nrow, "YN_RETURN", this.dsList.getColumn(i, "YN_RETURN"));
				this.dsUpdate.setColumn(nrow, "TY_INCOME", this.dsList.getColumn(i, "TY_INCOME"));
				this.dsUpdate.setColumn(nrow, "AM_INCOME_KRW", this.dsList.getColumn(i, "AM_INCOME_KRW"));
				this.dsUpdate.setColumn(nrow, "YN_LIMIT", this.dsList.getColumn(i, "YN_LIMIT"));
				break;
			case "D":
				var nrow = this.dsDelete.addRow();
				this.dsDelete.setColumn(nrow, "NO_YEJUKUM", this.dsList.getColumn(i, "NO_YEJUKUM"));
				break;
		}
	}
	
	if (this.dsInsert.rowcount == 0 && this.dsUpdate.rowcount == 0 && this.dsDelete.rowcount == 0) return;
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "insert=dsInsert update=dsUpdate delete=dsDelete";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
		
	} else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}else if(svcID == "combo"){
	
		//  조회조건(완료여부)
		var iRow = this.dsTY_EXPIRY.insertRow(0);
		this.dsTY_EXPIRY.setColumn(iRow, "CD_CODE", "");
		this.dsTY_EXPIRY.setColumn(iRow, "DS_CODE", "전체");
		this.cboTY_EXPIRY.set_index(2);
		
		if ( !this.gfnIsNull(this.getOwnerFrame().NO_YEJUKUM) ) {
			
			// from 예적금약정현황조회 or 예적금거래현황조회
			this.cfCD_CORP.form.CDTextBox.set_value(this.getOwnerFrame().CD_CORP);
			this.cfCD_CORP.form.DSTextBox.set_value(this.getOwnerFrame().DS_CORP);
			this.cfNO_YEJUKUM.form.CDTextBox.set_value(this.getOwnerFrame().NO_YEJUKUM);
			this.cfNO_YEJUKUM.form.DSTextBox.set_value(this.getOwnerFrame().NM_YEJUKUM);	
// 			this.cfCD_BANKITEM.form.CDTextBox.set_value(this.getOwnerFrame().CD_BANKITEM);
// 			this.cfCD_BANKITEM.form.DSTextBox.set_value(this.getOwnerFrame().DS_BANKITEM);			
			this.cboTY_EXPIRY.set_index(0);
			this.FormBtns.Select.click();
		}			
		
	}else if(svcID == "e_create") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}else if(svcID == "selectExc") {
		if (errorCode == 0) {
			if (this.dsRtEx.rowcount > 0)
			{
				this.dsList.setColumn(this.dsList.rowposition , "RT_EXCH", this.dsRtEx.getColumn(0, "RT_KRW_EXCH"));
			}
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {

	var cdCorp = this.cfCD_CORP.form.CDTextBox.value;
	var cdCorp2 = this.dsList.getColumn(this.dsList.rowposition, "CD_CORP");
	
	
	switch(id) {
	
	// 법인코드(조회조건)
	case "cfCD_CORP": 	
		dsUserParam.setColumn(nrow, "CD_GROUP", this.gfnIsNull(this.cdGroup) ? "" : this.cdGroup);	
		break;
		
	// 금융상품(조회조건)
	case "cfCD_BANKITEM":	
		dsUserParam.setColumn(nrow, "YN_USE", "");	
		break;		
		
	// 관리번호(조회조건)	
	case "cfNO_YEJUKUM": 
		dsUserParam.setColumn(nrow, "CD_CORP", this.gfnIsNull(cdCorp) ? "" : cdCorp);
		break;

	// 법인코드
	case "ccfCD_CORP":
		dsUserParam.setColumn(nrow, "CD_GROUP", this.gfnIsNull(this.cdGroup) ? "" : this.cdGroup);	
		break;
		
	// 금융상품
	case "cfCD_BANKITEM2": 
		dsUserParam.setColumn(nrow, "YN_USE", "Y");	
		break;
		
	// 계좌
	case "cfNO_ACCOUNT": 
		dsUserParam.setColumn(nrow, "GUBUN", "DFF");
		dsUserParam.setColumn(nrow, "CD_CORP", this.gfnIsNull(cdCorp2) ? "" : cdCorp2);			
		break;
		
	// 금융기관	
	case "cfCD_VENDOR": 
		dsUserParam.setColumn(nrow, "TY_VENDOR1", "전체");
		dsUserParam.setColumn(nrow, "CD_CORP", cdCorp);				
		break;
		
	// 귀속부서
	case "cfCD_DEPT_ACNT": 
		dsUserParam.setColumn(nrow, "CD_GROUP", this.gfnIsNull(this.cdGroup) ? "" : this.cdGroup);
		dsUserParam.setColumn(nrow, "CD_CORP", this.gfnIsNull(cdCorp2) ? "" : cdCorp2);
		break;
		
	// 대체계좌
	case "cfNO_ACCOUNT_DCHE": 
		dsUserParam.setColumn(nrow, "CD_CORP", this.gfnIsNull(cdCorp2) ? "" : cdCorp2);
		break;		
		
	default:
	}	
	//trace("dsUserParam :: " + dsUserParam.saveXML());
	return true;
};

this.fnAfterCDTextChanged = function(id, codeFindData) {
	var arr = codeFindData;
	trace("fnAfterCDTextChanged :: " + id);
	
	// 법인코드(조회조건)
	if (id == "cfCD_CORP") {
	}
	
	// 금융상품(조회조건)
	if (id == "cfCD_BANKITEM") {	
			
	}
	
	// 관리번호(조회조건)	
	if (id == "cfNO_YEJUKUM") {
	}
	
	// 법인코드
	if (id == "ccfCD_CORP") {
	}
	
	// 금융상품
	if (id == "cfCD_BANKITEM2") {
	    if(arr.length > 0) {
		   if ( arr[0]["CD_BANKITEM"] < "15000" || (arr[0]["CD_BANKITEM"] > "20000" && arr[0]["CD_BANKITEM"] < "25000")) {
			 this.cboCD_CURR.set_value("KRW");
			 this.fnSetComponent(false);
		   } else {
			 this.fnSetComponent(true);
		   }
		}	
	}
	
	// 계좌
	if (id == "cfNO_ACCOUNT") {
		if(arr.length > 0) {
			this.dsList.setColumn(this.dsList.rowposition, "TY_GUBUN", arr[0]["TY_GUBUN"]);
			this.dsList.setColumn(this.dsList.rowposition, "CD_BANK", arr[0]["CD_BANK"]);
			this.dsList.setColumn(this.dsList.rowposition, "DS_BANK", arr[0]["DS_BANK"]);			
			this.dsList.setColumn(this.dsList.rowposition, "CD_VENDOR", arr[0]["CD_MANAGEBANK"]);
			this.dsList.setColumn(this.dsList.rowposition, "DS_VENDOR", arr[0]["DS_MANAGEBANK"]);						
			this.dsList.setColumn(this.dsList.rowposition, "CD_DEPT_ACNT", arr[0]["CD_DEPT_ACNT"]);
			this.dsList.setColumn(this.dsList.rowposition, "DS_DEPT_ACNT", arr[0]["DS_DEPT_ACNT"]);						
			
			this.dsList.setColumn(this.dsList.rowposition, "RT_EZA", arr[0]["RT_EZA"]);						
			this.dsList.setColumn(this.dsList.rowposition, "DT_CONT", arr[0]["DT_START"]);
			this.dsList.setColumn(this.dsList.rowposition, "DT_FINISH", arr[0]["DT_EXPIRY"]);					
			this.dsList.setColumn(this.dsList.rowposition, "NM_YEJUKUM", arr[0]["NM_ACCOUNT"]);
		}	
	}
	
	// 금융기관
	if (id == "cfCD_VENDOR") {
	}
	
	// 귀속부서
	if (id == "cfCD_DEPT_ACNT") {
	}	
	
	// 대체계좌
	if (id == "cfNO_ACCOUNT_DCHE") {
		if(arr.length > 0) {
			this.dsList.setColumn(this.dsList.rowposition, "TY_GUBUN_DCHE", arr[0]["TY_GUBUN"]);
			this.dsList.setColumn(this.dsList.rowposition, "CD_BANK_DCHE", arr[0]["CD_BANK"]);
		}	
	}			
};

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGrid_RowCellChanged = function(obj:nexacro.Grid,e:nexacro.GridSelectEventInfo){
	
    if (e.row != -1) {
		var URL_PROOF = this.gfnNvl(this.dsList.getColumn(e.row, "URL_PROOF"), "첨부파일");
		this.btnFileUpload.set_text(URL_PROOF);
	}
	
	trace(" fnGrid_RowCellChanged=>" + e.row);
	//
	//this.fnSetDtIncomeVisible(e.row, ""); 
};


//그리드 값변경 이벤트
this.dsList_ColumnChanged = function(obj:nexacro.NormalDataset, e:nexacro.DSColChangeEventInfo)
{
	trace("그리드 값변경 이벤트 " + e.columnid + "/" + e.newvalue)

	if(e.columnid == "CD_CURR" || e.columnid == "DT_CONT"){
		if(e.newvalue != e.oldvalue){
			if ( !this.gfnIsNull(this.dsList.getColumn(e.row , "CD_CURR")) && !this.gfnIsNull(this.dsList.getColumn(e.row , "DT_CONT")) )
			{
				this.fnSetRtExchange(); 				
			} 			
		}		
	}else if(e.columnid == "RT_EXCH")
	{	
		if (this.dsList.getColumn(e.row , "AM_CONT") > 0)
		{
			this.fnSetRtExchangeCallback(e.row, "AM_CONT");
		}
		if (this.dsList.getColumn(e.row , "AM_INCOME") > 0)
		{
			this.fnSetRtExchangeCallback(e.row, "AM_INCOME");
		}	
	}else if(e.columnid == "AM_CONT" || e.columnid == "AM_INCOME")
	{
		if(e.newvalue != e.oldvalue){
			this.fnSetRtExchangeCallback(e.row, e.columnid);
		}
	}else if(e.columnid == "TY_INCOME")
	{	
		//this.fnSetDtIncomeVisible(e.row , e.newvalue);
	}
	
}

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {

	if(e == null || (e.pretext != e.posttext)) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);
	}
};

/*
 * 컴포넌트 enable/disable처리
 */
this.fnSetComponent = function(flag) {
this.cboCD_CURR.set_enable(flag);		    //  화폐	
//	this.txtNO_CHAIP.set_enable(flag);		//  차입번호(관리번호)
// 	this.StxtAccntNo.set_enable(flag);		//  계좌번호
// 	this.ccfAccntOwner.set_enable(flag);	//  계좌소유주
}


this.fnDataValidate = function(){

	var msg = "은(는) 필수입력 입니다.";
	
	for (var i=0; i < this.dsList.rowcount; i++) {
		if (this.dsList.getColumn(i, "nx_flag") == "I" || this.dsList.getColumn(i, "nx_flag") == "U") {
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "CD_CORP")))){
				this.gfnAlert("법인코드" + msg);
				this.dsList.set_rowposition(i);
				this.ccfCD_CORP.form.CDTextBox.setFocus();
				return false;
			}
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "CD_BANKITEM")))){
				this.gfnAlert("금융상품" + msg);
				this.dsList.set_rowposition(i);
				this.cfCD_BANKITEM2.setFocus();
				return false;
			}					
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "NM_YEJUKUM")))){
				this.gfnAlert("예적금명" + msg);
				this.dsList.set_rowposition(i);
				this.txtNM_YEJUKUM.setFocus();
				return false;
			}	
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "NO_ACCOUNT")))){
				this.gfnAlert("예적금계좌" + msg);
				this.dsList.set_rowposition(i);
				this.cfNO_ACCOUNT.setFocus();
				return false;
			}							
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "CD_VENDOR")))){
				this.gfnAlert("금융기관" + msg);
				this.dsList.set_rowposition(i);
				this.cfCD_VENDOR.form.CDTextBox.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "CD_DEPT_ACNT")))){
				this.gfnAlert("귀속부서" + msg);
				this.dsList.set_rowposition(i);
				this.cfCD_DEPT_ACNT.form.CDTextBox.setFocus();
				return false;
			}	
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "NO_ACCOUNT_DCHE")))){
				this.gfnAlert("대체계좌" + msg);
				this.dsList.set_rowposition(i);
				this.cfNO_ACCOUNT_DCHE.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "DT_CONT")))){
				this.gfnAlert("가입기간(from)" + msg);
				this.dsList.set_rowposition(i);
				this.calDT_CONT.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.dsList.getColumn(i, "DT_FINISH"))){
				this.gfnAlert("가입기간(to)" + msg);
				this.dsList.set_rowposition(i);
				this.calDT_FINISH.setFocus();
				return false;
			}	
						
			if ( !this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "DT_CONT"))) && !this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "DT_FINISH"))) ) {
				if ( this.gfnTrim(this.dsList.getColumn(i, "DT_CONT")) > this.gfnTrim(this.dsList.getColumn(i, "DT_FINISH")) ) {
					this.gfnAlert("가입기간이 잘못 입력 되었습니다.");
					this.dsList.set_rowposition(i);
					this.calDT_CONT.setFocus();
					return false;
				}
			}
			
// 			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "DT_INCOME")))){
// 				this.gfnAlert("불입일" + msg);
// 				this.dsList.set_rowposition(i);
// 				this.txtDT_INCOME.setFocus();
// 				return false;
// 			}			
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "TY_DANBOK")))){
				this.gfnAlert("방식" + msg);
				this.dsList.set_rowposition(i);
				this.cboTY_DANBOK.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.dsList.getColumn(i, "TY_EZA"))){
				this.gfnAlert("유형" + msg);
				this.dsList.set_rowposition(i);
				this.cboTY_EZA.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.dsList.getColumn(i, "TY_EZACAL"))){
				this.gfnAlert("계산방식" + msg);
				this.dsList.set_rowposition(i);
				this.cboTY_EZACAL.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.dsList.getColumn(i, "TY_SUNHOO"))){
				this.gfnAlert("수취기준" + msg);
				this.dsList.set_rowposition(i);
				this.cboTY_SUNHOO.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.dsList.getColumn(i, "TY_YANGDAN"))){
				this.gfnAlert("일수계산" + msg);
				this.dsList.set_rowposition(i);
				this.cboTY_YANGDAN.setFocus();
				return false;
			}				
			
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "YN_PLAN")))){
				this.gfnAlert("계획생성" + msg);
				this.dsList.set_rowposition(i);
				this.cboYN_PLAN.setFocus();
				return false;
			}
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "YN_CANCEL")))){
				this.gfnAlert("해지여부" + msg);
				this.dsList.set_rowposition(i);
				this.cboYN_CANCEL.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "TY_EXPIRY")))){
				this.gfnAlert("완료여부" + msg);
				this.dsList.set_rowposition(i);
				this.cboTY_EXPIRY2.setFocus();
				return false;
			}		
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "TY_CMS")))){
				this.gfnAlert("ECMS전송" + msg);
				this.dsList.set_rowposition(i);
				this.cboTY_CMS.setFocus();
				return false;
			}					
		}
	}
	return true;
}

this.fnSetCombo = function() {
	
	this.dsCombo = new Dataset();
	this.dsCombo.addColumn("CD_SYSTEM", "string");
	this.dsCombo.addColumn("CD_TYPE", "string");
	
	this.dsCombo.addRow();
	this.dsCombo.setColumn(0, "CD_SYSTEM", "DF");
	this.dsCombo.setColumn(0, "CD_TYPE", "F0");
	
	this.dsCombo.addRow();
	this.dsCombo.setColumn(1, "CD_SYSTEM", "DF");
	this.dsCombo.setColumn(1, "CD_TYPE", "F3");
	
	this.dsCombo.addRow();
	this.dsCombo.setColumn(2, "CD_SYSTEM", "DF");
	this.dsCombo.setColumn(2, "CD_TYPE", "F6");	

	this.dsCombo.addRow();
	this.dsCombo.setColumn(3, "CD_SYSTEM", "DF");
	this.dsCombo.setColumn(3, "CD_TYPE", "F9");	
	
	this.dsCombo.addRow();
	this.dsCombo.setColumn(4, "CD_SYSTEM", "DF");
	this.dsCombo.setColumn(4, "CD_TYPE", "F5");	
		
	this.dsCombo.addRow();
	this.dsCombo.setColumn(5, "CD_SYSTEM", "DF");
	this.dsCombo.setColumn(5, "CD_TYPE", "F7");		
		
	this.dsCombo.addRow();
	this.dsCombo.setColumn(6, "CD_SYSTEM", "DF");
	this.dsCombo.setColumn(6, "CD_TYPE", "ZZ");	
	
	this.dsCombo.addRow();
	this.dsCombo.setColumn(7, "CD_SYSTEM", "DF");
	this.dsCombo.setColumn(7, "CD_TYPE", "40");	
	
	this.dsCombo.addRow();
	this.dsCombo.setColumn(8, "CD_SYSTEM", "DF");
	this.dsCombo.setColumn(8, "CD_TYPE", "FD");	
	
	var strSvcId    = "combo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "combo=dsCombo";
	var outData     = "dsTY_DANBOK=combo0 dsTY_EZA=combo1 dsTY_EZACAL=combo2 dsTY_EXPIRY=combo3 dsTY_EXPIRY2=combo3 dsTY_SUNHOO=combo4 dsTY_YANGDAN=combo5 dsTY_CMS=combo6 dsCD_CURR=combo7 dsTY_INCOME=combo8";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
};

// 환율 가져오기 
this.fnSetRtExchange = function ()
{
	this.dsExchange = new Dataset();
	this.dsExchange.addColumn("TY_GUBUN", "string");
	this.dsExchange.addColumn("CN_ROW", "int");
	this.dsExchange.addColumn("VALUE", "string");
	this.dsExchange.addColumn("MIN_VALUE", "string");
	this.dsExchange.addColumn("DT_BASE", "string");
	this.dsExchange.addColumn("CD_LOCAL_CURR", "string");
	this.dsExchange.addColumn("CD_EXEC_CURR", "string");
	
	this.dsExchange.addRow();
	this.dsExchange.setColumn(0, "TY_GUBUN", "");
	this.dsExchange.setColumn(0, "CN_ROW", 0);
	this.dsExchange.setColumn(0, "VALUE", "");
	this.dsExchange.setColumn(0, "MIN_VALUE", "");
	this.dsExchange.setColumn(0, "DT_BASE", this.dsList.getColumn(this.dsList.rowposition, "DT_CONT"));
	this.dsExchange.setColumn(0, "CD_LOCAL_CURR", "KRW");
	this.dsExchange.setColumn(0, "CD_EXEC_CURR", this.dsList.getColumn(this.dsList.rowposition, "CD_CURR"));
	
	var strSvcId    = "selectExc";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "selectExc=dsExchange";
	var outData     = "dsRtEx=selectExc0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
						
	
};

//환율 계산 처리 
this.fnSetRtExchangeCallback = function(row , column)
{    
	var rtExchange = this.dsList.getColumn(row, "RT_EXCH");
	
	trace("fnSetRtExchangeCallback rtExchage=>" + rtExchange);
	
	var amContKrw = nexacro.toNumber(this.dsList.getColumn(row, column )) * rtExchange;
	
	this.dsList.setColumn(row, column+"_KRW", this.fnGetTrunc(amContKrw, 1));
	
};

this.divData_divSplitter_ondrag = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
	e.set_userdata("splitter");
	return true;
};

this.divData_ondragmove = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
	if(e.userdata == "splitter") {
		this.divData.form.divSplitter.set_left(e.clientx);
		this.divData.form.resetScroll();
	}
};

//검색어 키다운 이벤트
this.divSearch_txtSEARCH_onkeydown = function(obj:nexacro.Edit,e:nexacro.KeyEventInfo)
{
	if(e.keycode == 13){
		this.fnSelect();
	}
};

this.divData_onitemchanged = function(obj:nexacro.Combo,e:nexacro.ItemChangeEventInfo)
{
    trace(" divData_onitemchanged =>" + obj.text);
	if (obj.text == "월") {
		this.cboDT_INCOME.set_visible(false);
		this.txtDT_INCOME.set_visible(true);
	}else{
		this.cboDT_INCOME.set_visible(true);
		this.txtDT_INCOME.set_visible(false);
	}
};

this.fnSetDtIncomeVisible = function(nRow, vIncome)
{
   
    if (vIncome == "" ) { vIncome = this.dsList.getColumn(nRow, "TY_INCOME")}
	 trace(" fnSetDtIncomeVisible =>" + vIncome);
	if (vIncome == "주") {
		this.cboDT_INCOME.set_visible(true);
		this.txtDT_INCOME.set_visible(false);
	}else{
		this.cboDT_INCOME.set_visible(false);
		this.txtDT_INCOME.set_visible(true);		
	}
};

// 계획생성
this.fnPlanCreat = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if(!this.gfnGridIsRow(this.dxGrid)) return;
	this.gfnConfirm("예적금 계획자료를 생성 하시겠습니까?.", "fnPlanCreatCallback");
}

// 계획생성 Callback
this.fnPlanCreatCallback = function(strId, val) {

	if(val == false) return;
	
	this.dsExcute.clearData();
	this.dsExcute.addRow();
	
	this.dsExcute.setColumn(0, "NO_YEJUKUM", this.dsList.getColumn(this.dsList.rowposition,"NO_YEJUKUM"));
	this.dsExcute.setColumn(0, "DT_DATE", this.dsList.getColumn(this.dsList.rowposition,"DT_CONT"));
	this.dsExcute.setColumn(0, "YN_FIRST", "Y");
	this.dsExcute.setColumn(0, "ID_USER", this.AuthClient.ID_USER);
	
	var strSvcId    = "e_create";
	var strSvcType  = "savesel";
	var inProc		= "_dsProc";
	var inData      = "e_create=dsExcute"; 
	var outData     = "dsResult=e_create0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc);   // 통신방법 정의 [생략가능]

}

// 계획/실적
this.fnPlanPerform = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	var param = {};
	param.OWNER_ID = "DFF_DEPOSIT_REG";
	
	param.CD_CORP = this.dsList.getColumn(this.dsList.rowposition, "CD_CORP");
	param.DS_CORP = this.dsList.getColumn(this.dsList.rowposition, "DS_CORP");
	param.DT_FROM = this.dsList.getColumn(this.dsList.rowposition, "DT_CONT");
	param.DT_TO =  this.gfnGetLastDate(this.dsList.getColumn(this.dsList.rowposition, "DT_FINISH"));	
	param.NO_YEJUKUM = this.dsList.getColumn(this.dsList.rowposition, "NO_YEJUKUM");	
	param.NM_YEJUKUM = this.dsList.getColumn(this.dsList.rowposition, "NM_YEJUKUM");
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DFF_PLANSILJUK", "", param);
}

// 예적금변동정보등록
this.fnChngInfoInsert = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if(!this.gfnGridIsRow(this.dxGrid)) return;
	var param = {};	

	param.CD_CORP = this.dsList.getColumn(this.dsList.rowposition, "CD_CORP");
	param.DS_CORP = this.dsList.getColumn(this.dsList.rowposition, "DS_CORP");	
	param.DT_FROM = this.dsList.getColumn(this.dsList.rowposition, "DT_CONT");
	param.NO_YEJUKUM = this.dsList.getColumn(this.dsList.rowposition,"NO_YEJUKUM");
	param.NM_YEJUKUM = this.dsList.getColumn(this.dsList.rowposition,"NM_YEJUKUM");
	this.gfnFormOpen("DFF", "DFF_DEPOSIT_CHG", "fnPopCallBack", param, this.getOffsetWidth(), this.getOffsetHeight());
}


this.fnAccount = function ()
{
	var param = {};	
	param.OWNER_ID = "DFF_DEPOSIT_REG";
	
	this.gfnFormOpen("DFB", "DFL_FBSACCOUNT", "", param);
	
};

this.fnPopCallBack = function(svcID, val) {

	if (svcID.indexOf("DFF_DEPOSIT_CHG") > -1) {
		this.FormBtns.Select.click();
	}	
}


this.dsList_onrowposchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSRowPosChangeEventInfo)
{
	var vRowStatus = obj.getColumn(e.newrow, "nx_flag");
	
	// 입력시에는 키컴포넌트는 enable(true) else enable(false)
	if (vRowStatus == "I") {
		// 컴포넌트 enable/disable처리
		if (this.dsList.getColumn(this.dsList.rowposition, "CD_BANKITEM") < "15000" ||(this.dsList.getColumn(this.dsList.rowposition, "CD_BANKITEM") > "20000" && this.dsList.getColumn(this.dsList.rowposition, "CD_BANKITEM") < "25000")) {
			this.fnSetComponent(false);
		}else {
			this.fnSetComponent(true);
		}
	} else {
		// 컴포넌트 enable/disable처리
		if (this.dsList.getColumn(this.dsList.rowposition, "CD_BANKITEM") < "15000" ||(this.dsList.getColumn(this.dsList.rowposition, "CD_BANKITEM") > "20000" && this.dsList.getColumn(this.dsList.rowposition, "CD_BANKITEM") < "25000")) {
			this.fnSetComponent(false);
		}else {
			this.fnSetComponent(true);
		}
	}
};

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if ( e.oldvalue != e.newvalue ) {
		this.gfnSetFormStatus(this);
		this.gfnGridClear(this.dxGrid);
	}
};


// 첨부파일
this.fnFileUpload = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	//trace("this.btnFileUpload.text :: " + this.btnFileUpload.text);
	if (this.dsList.rowcount <= 0) {
		return false;
	}
	//var colnm = this.gfnGridGetBindColumnNameByIndex(obj, e.cell);
	
	//if(colnm == "URL_PROOF") {
		// 최초 작성시엔 NO_SEQ가 없기 때문에 저장 후에 파일 첨부를 진행하여야 함.
		// CD_DIR에 넣어줄 값이 없기에 저장 후 진행!
		if(this.gfnGetFlag(this.dsList, this.dsList.rowposition) == "I"){
			this.gfnAlert("저장 후 파일첨부 진행.");
			return false;
		}

		var cdGubun = "DF04";
		//var cdDir = "NO_YUGA";
		var cdDir = "NO_YEJUKUM";		
				
		var fileManager = {};
		fileManager.CD_GUBUN = cdGubun;
		fileManager.CD_DIR = [this.dsList.getColumn(this.dsList.rowposition, cdDir)];
		fileManager.IS_READONLY = false;
		
// 		trace("VcboAccntGb :: " + VcboAccntGb);
// 		trace("fileManager.CD_GUBUN :: " + fileManager.CD_GUBUN);
 		trace("fileManager.CD_DIR :: " + fileManager.CD_DIR);
// 		trace("fileManager.IS_READONLY :: " + fileManager.IS_READONLY);
		
		this.gfnFileManager(fileManager, "fnFileCallback");
	//}	
}

this.fnFileCallback = function(strID, val) {
	// val.IsChange : 변경여부, val.Cnt : 파일개수
		
	// 파일개수를 다시 셋팅
	this.dsList.set_enableevent(false);
	if(val.Cnt == 0) {
		this.btnFileUpload.set_text("첨부(0)");
	} else {
		this.btnFileUpload.set_text("첨부(" + val.Cnt + ")");
	}
	this.dsList.setColumn(this.dsList.rowposition, "URL_PROOF", "첨부(" + val.Cnt + ")");
	this.dsList.set_enableevent(true);
};

// 원단위 절사
this.fnGetTrunc = function(amVal, vCnt){
	var returnVal = this.gfnNvl(amVal, 0);
	if(returnVal > 0){
		returnVal = Math.floor(amVal/vCnt) * vCnt;
	}
	return returnVal;
}]]></Script>
    <Objects>
      <Dataset id="dsList" onrowposchanged="dsList_onrowposchanged"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DFFPR_YEJUKUMREG_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">insert</Col>
            <Col id="SP">DFFPR_YEJUKUMREG_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">update</Col>
            <Col id="SP">DFFPR_YEJUKUMREG_UPDATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">delete</Col>
            <Col id="SP">DFFPR_YEJUKUMREG_DELETE</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo</Col>
            <Col id="SP">DZXPR_COMBO_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">e_create</Col>
            <Col id="SP">DFFPR_YEJUKUMPLAN_CREATE_NEW</Col>
          </Row>
          <Row>
            <Col id="SP">DHXPR_CURRENCY_EXCHAGE</Col>
            <Col id="TARGET">selectExc</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsYN_PLAN">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">Y</Col>
            <Col id="DS_CODE">Y</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">N</Col>
            <Col id="DS_CODE">N</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsYN_CANCEL">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="NAME" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">Y</Col>
            <Col id="NAME">Y</Col>
          </Row>
          <Row>
            <Col id="CODE">N</Col>
            <Col id="NAME">N</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_DANBOK"/>
      <Dataset id="dsTY_EZA"/>
      <Dataset id="dsTY_EZACAL"/>
      <Dataset id="dsTY_EXPIRY"/>
      <Dataset id="dsTY_EXPIRY2"/>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="CD_BANKITEM" type="STRING" size="256"/>
          <Column id="NO_YEJUKUM" type="STRING" size="256"/>
          <Column id="TY_EXPIRY" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_SUNHOO"/>
      <Dataset id="dsTY_YANGDAN"/>
      <Dataset id="dsTY_CMS"/>
      <Dataset id="dsCD_CURR">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsRtEx">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">Y</Col>
            <Col id="DS_CODE">Y</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">N</Col>
            <Col id="DS_CODE">N</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_INCOME">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.cfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item1" compid="divSearch.form.cfCD_BANKITEM.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_BANKITEM"/>
      <BindItem id="item2" compid="divSearch.form.cfNO_YEJUKUM.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="NO_YEJUKUM"/>
      <BindItem id="item3" compid="divSearch.form.cboTY_EXPIRY" propid="value" datasetid="dsSearch" columnid="TY_EXPIRY"/>
      <BindItem id="item6" compid="divData.form.divDataRight.form.txtNO_YEJUKUM" propid="value" datasetid="dsList" columnid="NO_YEJUKUM"/>
      <BindItem id="item7" compid="divData.form.divDataRight.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsList" columnid="CD_CORP"/>
      <BindItem id="item8" compid="divData.form.divDataRight.form.ccfCD_CORP.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_CORP"/>
      <BindItem id="item9" compid="divData.form.divDataRight.form.cfCD_BANKITEM2.form.CDTextBox" propid="value" datasetid="dsList" columnid="CD_BANKITEM"/>
      <BindItem id="item10" compid="divData.form.divDataRight.form.cfCD_BANKITEM2.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_BANKITEM"/>
      <BindItem id="item11" compid="divData.form.divDataRight.form.txtNM_YEJUKUM" propid="value" datasetid="dsList" columnid="NM_YEJUKUM"/>
      <BindItem id="item12" compid="divData.form.divDataRight.form.cfNO_ACCOUNT.form.CDTextBox" propid="value" datasetid="dsList" columnid="NO_ACCOUNT"/>
      <BindItem id="item13" compid="divData.form.divDataRight.form.cfNO_ACCOUNT.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_BANK"/>
      <BindItem id="item14" compid="divData.form.divDataRight.form.cfCD_VENDOR.form.CDTextBox" propid="value" datasetid="dsList" columnid="CD_VENDOR"/>
      <BindItem id="item15" compid="divData.form.divDataRight.form.cfCD_VENDOR.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_VENDOR"/>
      <BindItem id="item16" compid="divData.form.divDataRight.form.cfCD_DEPT_ACNT.form.CDTextBox" propid="value" datasetid="dsList" columnid="CD_DEPT_ACNT"/>
      <BindItem id="item17" compid="divData.form.divDataRight.form.cfCD_DEPT_ACNT.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_DEPT_ACNT"/>
      <BindItem id="item18" compid="divData.form.divDataRight.form.calDT_CONT" propid="value" datasetid="dsList" columnid="DT_CONT"/>
      <BindItem id="item19" compid="divData.form.divDataRight.form.calDT_FINISH" propid="value" datasetid="dsList" columnid="DT_FINISH"/>
      <BindItem id="item21" compid="divData.form.divDataRight.form.mskTR_INCOME" propid="value" datasetid="dsList" columnid="TR_INCOME"/>
      <BindItem id="item23" compid="divData.form.divDataRight.form.mskRT_EZA" propid="value" datasetid="dsList" columnid="RT_EZA"/>
      <BindItem id="item24" compid="divData.form.divDataRight.form.cboTY_DANBOK" propid="value" datasetid="dsList" columnid="TY_DANBOK"/>
      <BindItem id="item25" compid="divData.form.divDataRight.form.cboTY_EZA" propid="value" datasetid="dsList" columnid="TY_EZA"/>
      <BindItem id="item26" compid="divData.form.divDataRight.form.cboTY_EZACAL" propid="value" datasetid="dsList" columnid="TY_EZACAL"/>
      <BindItem id="item28" compid="divData.form.divDataRight.form.mskCT_TINCOM" propid="value" datasetid="dsList" columnid="CT_TINCOM"/>
      <BindItem id="item30" compid="divData.form.divDataRight.form.mskQN_IN" propid="value" datasetid="dsList" columnid="QN_IN"/>
      <BindItem id="item32" compid="divData.form.divDataRight.form.cboYN_PLAN" propid="value" datasetid="dsList" columnid="YN_PLAN"/>
      <BindItem id="item33" compid="divData.form.divDataRight.form.cboYN_CANCEL" propid="value" datasetid="dsList" columnid="YN_CANCEL"/>
      <BindItem id="item34" compid="divData.form.divDataRight.form.calDT_CANCEL" propid="value" datasetid="dsList" columnid="DT_CANCEL"/>
      <BindItem id="item35" compid="divData.form.divDataRight.form.cboTY_EXPIRY2" propid="value" datasetid="dsList" columnid="TY_EXPIRY"/>
      <BindItem id="item37" compid="divData.form.divDataRight.form.txtDS_LIMIT" propid="value" datasetid="dsList" columnid="DS_LIMIT"/>
      <BindItem id="item39" compid="divData.form.divDataRight.form.TeaRM_BIGO" propid="value" datasetid="dsList" columnid="RM_BIGO"/>
      <BindItem id="item4" compid="divData.form.divDataRight.form.mskTR_EZASTD" propid="value" datasetid="dsList" columnid="TR_EZASTD"/>
      <BindItem id="item40" compid="divData.form.divDataRight.form.cboTY_SUNHOO" propid="value" datasetid="dsList" columnid="TY_SUNHOO"/>
      <BindItem id="item41" compid="divData.form.divDataRight.form.cboTY_YANGDAN" propid="value" datasetid="dsList" columnid="TY_YANGDAN"/>
      <BindItem id="item5" compid="divData.form.divDataRight.form.mskTR_INTTERM" propid="value" datasetid="dsList" columnid="TR_INTTERM"/>
      <BindItem id="item42" compid="divData.form.divDataRight.form.cfNO_ACCOUNT_DCHE.form.CDTextBox" propid="value" datasetid="dsList" columnid="NO_ACCOUNT_DCHE"/>
      <BindItem id="item43" compid="divData.form.divDataRight.form.cfNO_ACCOUNT_DCHE.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_BANK_DCHE"/>
      <BindItem id="item44" compid="divData.form.divDataRight.form.mskTR_TURN" propid="value" datasetid="dsList" columnid="TR_TURN"/>
      <BindItem id="item45" compid="divData.form.divDataRight.form.cboTY_CMS" propid="value" datasetid="dsList" columnid="TY_CMS"/>
      <BindItem id="item29" compid="divData.form.divDataRight.form.mskAM_CONT" propid="value" datasetid="dsList" columnid="AM_CONT"/>
      <BindItem id="item31" compid="divData.form.divDataRight.form.mskAM_CONT_KRW" propid="value" datasetid="dsList" columnid="AM_CONT_KRW"/>
      <BindItem id="item36" compid="divData.form.divDataRight.form.mskAM_INCOME_KRW" propid="value" datasetid="dsList" columnid="AM_INCOME_KRW"/>
      <BindItem id="item38" compid="divData.form.divDataRight.form.mskAM_INCOME" propid="value" datasetid="dsList" columnid="AM_INCOME"/>
      <BindItem id="item22" compid="divData.form.divDataRight.form.mskAM_JAN" propid="value" datasetid="dsList" columnid="AM_JAN"/>
      <BindItem id="item46" compid="divData.form.divDataRight.form.cboYN_RETURN" propid="value" datasetid="dsList" columnid="YN_RETURN"/>
      <BindItem id="item47" compid="divData.form.divDataRight.form.cboTY_INCOME" propid="value" datasetid="dsList" columnid="TY_INCOME"/>
      <BindItem id="item48" compid="divData.form.divDataRight.form.mskAM_LIMIT" propid="value" datasetid="dsList" columnid="AM_LIMIT"/>
      <BindItem id="item49" compid="divData.form.divDataRight.form.cboCD_CURR" propid="value" datasetid="dsList" columnid="CD_CURR"/>
      <BindItem id="item27" compid="divData.form.divDataRight.form.mskRT_EXCH" propid="value" datasetid="dsList" columnid="RT_EXCH"/>
      <BindItem id="item50" compid="divData.form.divDataRight.form.cboDT_INCOME" propid="value" datasetid="dsList" columnid="DT_INCOME"/>
      <BindItem id="item20" compid="divData.form.divDataRight.form.txtDT_INCOME" propid="value" datasetid="dsList" columnid="DT_INCOME"/>
      <BindItem id="item51" compid="divData.form.divDataRight.form.mskAM_INTOT" propid="value" datasetid="dsList" columnid="AM_INTOT"/>
      <BindItem id="item52" compid="divData.form.divDataRight.form.cboYN_LIMIT" propid="value" datasetid="dsList" columnid="YN_LIMIT"/>
    </Bind>
  </Form>
</FDL>
