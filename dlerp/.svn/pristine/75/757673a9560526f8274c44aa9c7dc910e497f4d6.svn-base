<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="400" height="310" maxwidth="460" maxheight="370" titletext="신규부서추가" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divData" taborder="0" left="0" top="0" bottom="0" right="0" cssclass="div_DATA_Bg" text="">
          <Layouts>
            <Layout>
              <Static id="staTITLE" taborder="0" text="신규부서 추가" left="0" top="0" width="100%" height="30" cssclass="sta_TITLE_Bg" textAlign="left"/>
              <Static id="staDS_SITE" taborder="1" text="생성일" left="0" top="65" width="112" height="30" textAlign="left" onclick="divData_staDS_SITE_onclick" cssclass="sta_WF_tablelabelE"/>
              <Static id="staDS_SILHENG" taborder="2" text="구분/형태" left="0" top="staDS_SITE:-1" width="112" height="30" textAlign="left" cssclass="sta_WF_tablelabelE"/>
              <Static id="staTY_APPROVAL" taborder="3" text="레벨" left="0" top="123" width="112" height="30" textAlign="left" cssclass="sta_WF_tablelabelE"/>
              <Static id="staDT_CONFIRM" taborder="4" text="귀속부서" left="0" top="staTY_APPROVAL:-1" width="112" height="30" cssclass="sta_WF_tablelabel" textAlign="left" textDecoration="none"/>
              <Static id="staBg1" taborder="5" left="staDS_SITE:-1" top="65" height="30" cssclass="sta_WF_tablebg" width="289"/>
              <Static id="staBg2" taborder="6" left="staDS_SILHENG:-1" top="94" height="30" cssclass="sta_WF_tablebg" width="289" text=""/>
              <Static id="staBg3" taborder="7" left="staTY_APPROVAL:-1" top="123" height="30" cssclass="sta_WF_tablebg" width="289"/>
              <Static id="staBg4" taborder="8" left="staDT_CONFIRM:-1" top="staBg3:-1" height="30" cssclass="sta_WF_tablebg" width="289"/>
              <Button id="btnOk" taborder="9" text="확인" left="32.50%" top="266" width="60" height="20" onclick="divData_btnOk_onclick"/>
              <Button id="btnCancel" taborder="10" text="취소" left="52.50%" top="266" width="60" height="20" onclick="divData_btnCancel_onclick"/>
              <Static id="staBg00" taborder="12" left="111" top="36" height="30" cssclass="sta_WF_tablebg" width="289"/>
              <Static id="staDS_SITE00" taborder="13" text="상위부서" left="0" top="36" width="112" height="30" textAlign="left" onclick="divData_staDS_SITE_onclick" cssclass="sta_WF_tablelabelE"/>
              <Static id="staBg01" taborder="14" left="111" top="181" height="30" cssclass="sta_WF_tablebg" width="289"/>
              <Div id="cfCD_DEPT_ACNT" CDTextWidth="80" taborder="15" left="116" top="157" width="280" height="20" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staTY_APPROVAL00" taborder="16" text="코드" left="0" top="181" width="112" height="30" textAlign="left" cssclass="sta_WF_tablelabelE"/>
              <Static id="staBg02" taborder="17" left="111" top="210" height="30" cssclass="sta_WF_tablebg" width="289"/>
              <Static id="staTY_APPROVAL01" taborder="18" text="명칭" left="0" top="210" width="112" height="30" textAlign="left" cssclass="sta_WF_tablelabelE"/>
              <Div id="cfCD_UPDEPT" CDTextWidth="80" taborder="11" left="116" top="41" width="280" height="20" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Calendar id="calDT_EST" taborder="19" left="116" top="70" width="104" height="20" dateformat="yyyy-MM-dd"/>
              <Combo id="cboTY_DEPT" taborder="20" left="116" top="99" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" width="105" innerdataset="dsTY_DEPT"/>
              <Edit id="edtNO_LEVEL" taborder="21" left="116" top="128" width="140" height="20"/>
              <Edit id="edtCD_DEPT" taborder="22" left="116" top="186" width="140" height="20"/>
              <Edit id="edtDS_DEPT" taborder="23" left="116" top="215" width="140" height="20"/>
              <Combo id="cboTY_GUBUN" taborder="24" left="226" top="99" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" width="105" innerdataset="dsTY_GUBUN"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();	
	this.fnSetCombo();
	this.fnSetComboGubun();
	
	var today = this.gfnGetDate();	
	this.dsData.setColumn(0, "DT_EST", today);
	this.divData.form.cboTY_GUBUN.set_index(0);
	
	if(!this.gfnIsNull(this.getOwnerFrame().CD_CORP)) {	
		this.dsData.setColumn(0, "CD_CORP", this.getOwnerFrame().CD_CORP);
		this.dsData.setColumn(0, "CD_UPDEPT", this.getOwnerFrame().CD_UPDEPT);
		this.cfCD_UPDEPT.form.DSTextBox.set_value(this.getOwnerFrame().DS_UPDEPT);	
		
		var sNO_LEVEL = this.getOwnerFrame().NO_LEVEL;
		this.divData.form.edtNO_LEVEL.set_value(nexacro.toNumber(sNO_LEVEL) + 1);
	}

	// 차수 비활성화 처리
	//this.cfNO_NAPCHA.form.CDTextBox.set_readonly(true);
	 
	//this.fnSelectDept();
};

// 콤보 조회
this.fnSetCombo = function() {

   this.dsCombo = new Dataset();
   this.dsCombo.addColumn("TY_SEL", "string");
   this.dsCombo.addColumn("CD_PREFIX", "string");
   this.dsCombo.addColumn("CD_UPPREFIX", "string");
   
   this.dsCombo.addRow();
   this.dsCombo.setColumn(0, "TY_SEL", "P");
   this.dsCombo.setColumn(0, "CD_PREFIX", "DA");
   this.dsCombo.setColumn(0, "CD_UPPREFIX", "");

	var strSvcId    = "combo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "combo=dsCombo";
	var outData     = "dsTY_DEPT=combo0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};

this.fnSetComboGubun = function() {
   
   this.dsCombo = new Dataset();
   this.dsCombo.addColumn("TY_SEL", "string");
   this.dsCombo.addColumn("CD_PREFIX", "string");
   this.dsCombo.addColumn("CD_UPPREFIX", "string");
   
   this.dsCombo.addRow();
   this.dsCombo.setColumn(0, "TY_SEL", "P");
   this.dsCombo.setColumn(0, "CD_PREFIX", "DB");
   this.dsCombo.setColumn(0, "CD_UPPREFIX", "");

	var strSvcId    = "combo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "combo=dsCombo";
	var outData     = "dsTY_GUBUN=combo0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};

this.fnSelectDept = function() {
trace("fnSelectDept>>>");

	//if (!this.fnSelectValidate()) return false;
	//this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelectDept.clearData();
	this.dsSelectDept.addRow();
	
	this.dsSelectDept.setColumn(0, "CD_CORP", this.dsData.getColumn(0, "CD_CORP"));
	this.dsSelectDept.setColumn(0, "DT_EST", this.dsData.getColumn(0, "DT_EST"));
	this.dsSelectDept.setColumn(0, "TY_GUBUN", this.dsData.getColumn(0, "TY_GUBUN"));
	this.dsSelectDept.setColumn(0, "TY_DEPT", this.dsData.getColumn(0, "TY_DEPT"));
	
trace(this.dsSelectDept.saveXML());	
	
	var strSvcId    = "selectDept";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "selectDept=dsSelectDept";
	var outData     = "dsDept=selectDept0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}


/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {	
	this.cfCD_UPDEPT = this.divData.form.cfCD_UPDEPT;
	this.calDT_EST = this.divData.form.calDT_EST;	
	this.cboTY_DEPT = this.divData.form.cboTY_DEPT;
	this.cboTY_GUBUN = this.divData.form.cboTY_GUBUN;
	this.edtNO_LEVEL = this.divData.form.edtNO_LEVEL;
	this.cfCD_DEPT_ACNT = this.divData.form.cfCD_DEPT_ACNT;
	this.edtCD_DEPT = this.divData.form.edtCD_DEPT;
	this.edtDS_DEPT = this.divData.form.edtDS_DEPT;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.cfCD_UPDEPT.CodeFindName = "DAX_CFUPDEPT_CODE";
	this.cfCD_UPDEPT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.cfCD_UPDEPT.AfterCDTextChanged = "fnAfterCDTextChanged";
	
	this.cfCD_DEPT_ACNT.CodeFindName = "DHX_CFACNTUNIT";
	this.cfCD_DEPT_ACNT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.cfCD_DEPT_ACNT.AfterCDTextChanged = "fnAfterCDTextChanged";
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {	
	this.dsSave = new Dataset();
	this.dsSave.addColumn("TY_SAVE", "string");
	this.dsSave.addColumn("TY_PLAN", "string");
	this.dsSave.addColumn("TY_GUBUN", "string");
	this.dsSave.addColumn("YR_BASE", "string");
	this.dsSave.addColumn("YM_BASE", "string");
	this.dsSave.addColumn("CD_CORP", "string");
	this.dsSave.addColumn("TY_TARGET", "string");
	this.dsSave.addColumn("CD_DEPT", "string");
	this.dsSave.addColumn("ID_SABUN", "string");
	this.dsSave.addColumn("ID_USER", "string");
	this.dsSave.addColumn("IP_ADDR", "string");
	this.dsSave.addColumn("GR_SEARCH", "string");
	this.dsSave.addColumn("GR_CORP", "string");
	
	this.dsSelectDept = new Dataset();
	this.dsSelectDept.addColumn("CD_CORP", "string");
	this.dsSelectDept.addColumn("DT_EST", "string");
	this.dsSelectDept.addColumn("TY_GUBUN", "string");
	this.dsSelectDept.addColumn("TY_DEPT", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 
/************************************************************************
 * Validate
 ************************************************************************/

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if(svcID == "combo") {
		this.divData.form.cboTY_DEPT.set_index(0);	// 본사 선택
	}
	else if(svcID == "selectDept"){
		if(this.dsDept.rowcount >0){
			var sDept = this.gfnNvl(this.dsDept.getColumn(0, "CD_DEPT"),"");
			this.dsData.setColumn(0, "CD_DEPT", sDept);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	
	if(id == "cfCD_UPDEPT") { 
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "CD_DEPT", "%");
		dsUserParam.setColumn(nrow, "CD_CORP", this.dsData.getColumn(0, "CD_CORP")); 
	}
	if(id == "cfCD_DEPT_ACNT") {
 		dsUserParam.setColumn(nrow, "YN_SLIPACCEPT"	, "Y");						//전표발행여부
		dsUserParam.setColumn(nrow, "CD_CORP"		, this.dsData.getColumn(0, "CD_CORP"));					//법인코드
		dsUserParam.setColumn(nrow, "YN_USE"		, "Y");						//사용여부
		dsUserParam.setColumn(nrow, "GR_DEPT_ACNT"	, "%");						//현장/본사여부		
		dsUserParam.setColumn(nrow, "ID_USER"	, this.AuthClient.ID_USER);						
		dsUserParam.setColumn(nrow, "GR_SEARCH"	, this.FormInfo.GR_SEARCH);						
		dsUserParam.setColumn(nrow, "CD_DEPT"	, this.AuthClient.CD_DEPT);		
	}
	
	return true;
};


this.fnAfterCDTextChanged = function(id, codeFindData) {
	var arr = codeFindData; 
	
	if(id == "cfCD_UPDEPT"){
	}else if(id == "cfCD_DEPT_ACNT" ){
	}
};
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
// 확인 버튼 클릭
this.divData_btnOk_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if (!this.fnSaveValidate()) return false;
	
	// 확인
	var json = {};
	
	json.CD_UPDEPT = this.dsData.getColumn(0, "CD_UPDEPT");		
	json.DS_UPDEPT = this.cfCD_UPDEPT.form.DSTextBox.value;
	json.DT_EST = this.dsData.getColumn(0, "DT_EST");		
	json.TY_DEPT = this.dsData.getColumn(0, "TY_DEPT");		
	json.NO_LEVEL = this.dsData.getColumn(0, "NO_LEVEL");		
	json.CD_DEPT_ACNT = this.dsData.getColumn(0, "CD_DEPT_ACNT");		
	json.DS_DEPT_ACNT = this.cfCD_DEPT_ACNT.form.DSTextBox.value;
	json.CD_DEPT = this.dsData.getColumn(0, "CD_DEPT");		
	json.DS_DEPT = this.dsData.getColumn(0, "DS_DEPT");		
	json.TY_GUBUN = this.dsData.getColumn(0, "TY_GUBUN");	

	this.getParentContext().close(JSON.stringify(json));	
};

// 취소 버튼 클릭
this.divData_btnCancel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	// this.close()가 작동하지 않았고, 
	// 부모의 callback 함수로 데이터를 넘겨주기 위해 작성되었습니다.
	this.getParentContext().close(false);
};


this.fnSaveValidate = function() {	

	if (this.gfnIsNull(this.dsData.getColumn(0,"CD_UPDEPT"))) {
		this.fnValidCallback = function() {
			this.cfCD_UPDEPT.form.CDTextBox.setFocus();
		}
		this.gfnAlert("상위부서는 반드시 입력 하셔야 합니다.", "fnValidCallback");
		return false;
	}else if (this.gfnIsNull(this.dsData.getColumn(0,"DT_EST"))) {
		this.fnValidCallback = function() {
			this.calDT_EST.setFocus();
		}
		this.gfnAlert("생성일은 반드시 입력 하셔야 합니다.", "fnValidCallback");
		return false;
	}else if (this.gfnIsNull(this.dsData.getColumn(0,"NO_LEVEL"))) {
		this.fnValidCallback = function() {
			this.edtNO_LEVEL.setFocus();
		}
		this.gfnAlert("레벨은 반드시 입력 하셔야 합니다.", "fnValidCallback");
		return false;
//	}	
// 	else if (this.gfnIsNull(this.dsData.getColumn(0,"CD_DEPT_ACNT"))) {
// 		this.fnValidCallback = function() {
// 			this.cfCD_DEPT_ACNT.form.CDTextBox.setFocus();
// 		}
// 		this.gfnAlert("귀속부서는 반드시 입력 하셔야 합니다.", "fnValidCallback");
// 		return false;
	}else if (this.gfnIsNull(this.dsData.getColumn(0,"CD_DEPT"))) {
		this.fnValidCallback = function() {
			this.edtCD_DEPT.setFocus();
		}
		this.gfnAlert("코드는 반드시 입력 하셔야 합니다.", "fnValidCallback");
		return false;
	}else if (this.gfnIsNull(this.dsData.getColumn(0,"DS_DEPT"))) {
		this.fnValidCallback = function() {
			this.edtDS_DEPT.setFocus();
		}
		this.gfnAlert("명칭은 반드시 입력 하셔야 합니다.", "fnValidCallback");
		return false;
	}	
	
	return true;	
}



this.dsData_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo){
	if(e.newvalue != e.oldvalue){
		if(e.columnid == "TY_GUBUN"){
			this.fnSelectDept();
		} else if(e.columnid == "TY_DEPT"){
			this.fnSelectDept();
		}
	}
};
]]></Script>
    <Objects>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DACPR_YEARLYPLAN_CREATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo</Col>
            <Col id="SP">DAZPR_COMMONCODE_COMBO</Col>
          </Row>
          <Row>
            <Col id="TARGET">selectDept</Col>
            <Col id="SP">DAZPR_DEPT_NEW</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsData" onvaluechanged="dsData_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_UPDEPT" type="STRING" size="256"/>
          <Column id="DT_EST" type="STRING" size="256"/>
          <Column id="TY_DEPT" type="STRING" size="256"/>
          <Column id="NO_LEVEL" type="STRING" size="256"/>
          <Column id="CD_DEPT_ACNT" type="STRING" size="256"/>
          <Column id="CD_DEPT" type="STRING" size="256"/>
          <Column id="DS_DEPT" type="STRING" size="256"/>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="TY_GUBUN" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_UPDEPT"/>
            <Col id="DT_EST"/>
            <Col id="TY_DEPT"/>
            <Col id="NO_LEVEL"/>
            <Col id="CD_DEPT_ACNT"/>
            <Col id="CD_DEPT"/>
            <Col id="DS_DEPT"/>
            <Col id="CD_CORP"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_DEPT">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsDept">
        <ColumnInfo>
          <Column id="CD_DEPT" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsTY_GUBUN">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <!--
        <Rows>
          <Row>
            <Col id="CD_CODE">F</Col>
            <Col id="DS_CODE">임원</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">J</Col>
            <Col id="DS_CODE">일반조직</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">A</Col>
            <Col id="DS_CODE">건축</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">C</Col>
            <Col id="DS_CODE">토목</Col>
          </Row>
        </Rows>
-->
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item3" compid="divData.form.cfCD_UPDEPT.form.CDTextBox" propid="value" datasetid="dsData" columnid="CD_UPDEPT"/>
      <BindItem id="item2" compid="divData.form.cfCD_DEPT_ACNT.form.CDTextBox" propid="value" datasetid="dsData" columnid="CD_DEPT_ACNT"/>
      <BindItem id="item0" compid="divData.form.calDT_EST" propid="value" datasetid="dsData" columnid="DT_EST"/>
      <BindItem id="item1" compid="divData.form.cboTY_DEPT" propid="value" datasetid="dsData" columnid="TY_DEPT"/>
      <BindItem id="item7" compid="divData.form.edtNO_LEVEL" propid="value" datasetid="dsData" columnid="NO_LEVEL"/>
      <BindItem id="item5" compid="divData.form.edtCD_DEPT" propid="value" datasetid="dsData" columnid="CD_DEPT"/>
      <BindItem id="item4" compid="divData.form.edtDS_DEPT" propid="value" datasetid="dsData" columnid="DS_DEPT"/>
      <BindItem id="item6" compid="divData.form.cboTY_GUBUN" propid="value" datasetid="dsData" columnid="TY_GUBUN"/>
    </Bind>
  </Form>
</FDL>
