(function()
{
    return function()
    {
        if (!this._is_form)
            return;
        
        var obj = null;
        
        this.on_create = function()
        {
            this.set_name("form");
            this.set_titletext("계정별거래처잔액관리");
            if (Form == this.constructor)
            {
                this._setFormPosition(1280,720);
            }
            
            // Object(Dataset, ExcelExportObject) Initialize
            obj = new Dataset("dsList", this);
            obj._setContents("");
            this.addChild(obj.name, obj);


            obj = new Dataset("_dsProc", this);
            obj._setContents("<ColumnInfo><Column id=\"TARGET\" type=\"STRING\" size=\"256\"/><Column id=\"SP\" type=\"STRING\" size=\"256\"/></ColumnInfo><Rows><Row><Col id=\"TARGET\">select</Col><Col id=\"SP\">DHEPR_ACCOUNTVENDOR_SELECT_DSMEC</Col></Row><Row><Col id=\"TARGET\">selectDept</Col><Col id=\"SP\">DHEPR_ACCOUNTVENDOR_SELECT_ADDDEPT_DSMEC</Col></Row></Rows>");
            this.addChild(obj.name, obj);


            obj = new Dataset("dsSearch", this);
            obj._setContents("<ColumnInfo><Column id=\"CD_CORP\" type=\"STRING\" size=\"256\"/><Column id=\"CD_DEPT_ACNT\" type=\"STRING\" size=\"256\"/><Column id=\"DT_FROM\" type=\"STRING\" size=\"256\"/><Column id=\"DT_TO\" type=\"STRING\" size=\"256\"/><Column id=\"CD_ACNT\" type=\"STRING\" size=\"256\"/><Column id=\"TYPE\" type=\"STRING\" size=\"256\"/><Column id=\"CD_CON\" type=\"STRING\" size=\"256\"/><Column id=\"CD_ACCOUNT\" type=\"STRING\" size=\"256\"/><Column id=\"CD_VENDOR\" type=\"STRING\" size=\"256\"/><Column id=\"DS_CORP\" type=\"STRING\" size=\"256\"/><Column id=\"DS_DEPT_ACNT\" type=\"STRING\" size=\"256\"/><Column id=\"DS_ACCOUNT\" type=\"STRING\" size=\"256\"/><Column id=\"DS_VENDOR\" type=\"STRING\" size=\"256\"/></ColumnInfo><Rows><Row/></Rows>");
            this.addChild(obj.name, obj);
            
            // UI Components Initialize
            obj = new Div("divSearch","0.0","10.0",null,"78.0","0",null,null,null,null,null,this);
            obj.set_taborder("1");
            obj.set_cssclass("div_SEARCH_Bg");
            obj.set_text("");
            this.addChild(obj.name, obj);

            obj = new Static("staCD_CORP","0","10.0","92","24.0",null,null,null,null,null,null,this.divSearch.form);
            obj.set_taborder("0");
            obj.set_text("법인코드");
            obj.set_cssclass("sta_WF_SchLabelE");
            this.divSearch.addChild(obj.name, obj);

            obj = new Div("ccfCD_CORP","staCD_CORP:0.0","10.0","278","24.0",null,null,null,null,null,null,this.divSearch.form);
            obj.getSetter("CodeFindName").set("DHX_CFCORP");
            obj.getSetter("CDTextWidth").set("50");
            obj.set_taborder("1");
            obj.set_url("cmm::cmmCodeFind.xfdl");
            this.divSearch.addChild(obj.name, obj);

            obj = new Static("staCD_DEPT_ACNT","ccfCD_CORP:0.0","10.0","105.0","24.0",null,null,null,null,null,null,this.divSearch.form);
            obj.set_taborder("2");
            obj.set_text("귀속부서");
            obj.set_cssclass("sta_WF_SchLabelE");
            this.divSearch.addChild(obj.name, obj);

            obj = new Div("ccfCD_DEPT_ACNT","staCD_DEPT_ACNT:0.0","10.0","280","24.0",null,null,null,null,null,null,this.divSearch.form);
            obj.getSetter("CDTextWidth").set("70");
            obj.set_taborder("3");
            obj.set_url("cmm::cmmCodeFind.xfdl");
            this.divSearch.addChild(obj.name, obj);

            obj = new Static("staDT_FROM","ccfCD_DEPT_ACNT:0.0","10.0","92","24.0",null,null,null,null,null,null,this.divSearch.form);
            obj.set_taborder("4");
            obj.set_text("회계일자");
            obj.set_cssclass("sta_WF_SchLabel");
            this.divSearch.addChild(obj.name, obj);

            obj = new Calendar("ctclDT_FROM","staDT_FROM:0.0","10.0","105","24.0",null,null,null,null,null,null,this.divSearch.form);
            obj.set_taborder("5");
            obj.set_dateformat("yyyy-MM-dd");
            obj.set_editformat("yyyyMMdd");
            obj.set_autoselect("true");
            this.divSearch.addChild(obj.name, obj);

            obj = new Static("staDT_TO","ctclDT_FROM:0.0","10.0","30.0","24.0",null,null,null,null,null,null,this.divSearch.form);
            obj.set_taborder("6");
            obj.set_text("~");
            obj.set_cssclass("sta_WF_AC");
            this.divSearch.addChild(obj.name, obj);

            obj = new Calendar("ctclDT_TO","staDT_TO:0.0","10.0","105","24.0",null,null,null,null,null,null,this.divSearch.form);
            obj.set_taborder("7");
            obj.set_dateformat("yyyy-MM-dd");
            obj.set_editformat("yyyyMMdd");
            obj.set_autoselect("true");
            this.divSearch.addChild(obj.name, obj);

            obj = new Static("staCD_ACNT","0","staCD_CORP:10.0","92","24.0",null,null,null,null,null,null,this.divSearch.form);
            obj.set_taborder("8");
            obj.set_text("계정코드");
            obj.set_cssclass("sta_WF_SchLabelE");
            this.divSearch.addChild(obj.name, obj);

            obj = new Div("ccfCD_ACNT","staCD_ACNT:0.0","staCD_CORP:10.0","277","24.0",null,null,null,null,null,null,this.divSearch.form);
            obj.getSetter("CDTextWidth").set("70");
            obj.set_taborder("9");
            obj.set_url("cmm::cmmCodeFind.xfdl");
            this.divSearch.addChild(obj.name, obj);

            obj = new Static("staCD_VENDOR","ccfCD_ACNT:0.0","staCD_CORP:10.0","105.0","24.0",null,null,null,null,null,null,this.divSearch.form);
            obj.set_taborder("10");
            obj.set_text("거래처코드");
            obj.set_textDecoration("none");
            obj.set_cssclass("sta_WF_SchLabel");
            this.divSearch.addChild(obj.name, obj);

            obj = new Div("ccfCD_VENDOR","staCD_VENDOR:0.0","staCD_CORP:10.0","280","24.0",null,null,null,null,null,null,this.divSearch.form);
            obj.getSetter("CDTextWidth").set("70");
            obj.set_taborder("11");
            obj.set_url("cmm::cmmCodeFind.xfdl");
            obj.set_text("");
            this.divSearch.addChild(obj.name, obj);

            obj = new CheckBox("chkYN_DEPT","ccfCD_VENDOR:30","staCD_CORP:10.0","140","24.0",null,null,null,null,null,null,this.divSearch.form);
            obj.set_taborder("12");
            obj.set_text("부서별");
            obj.set_falsevalue("N");
            obj.set_truevalue("Y");
            obj.set_value("N");
            this.divSearch.addChild(obj.name, obj);

            obj = new Div("divData","0","divSearch:10",null,null,"0","0",null,null,null,null,this);
            obj.set_taborder("0");
            obj.set_cssclass("div_DATA_Bg");
            this.addChild(obj.name, obj);

            obj = new Grid("objGrid","0","0",null,null,"0","0",null,null,null,null,this.divData.form);
            obj.set_taborder("0");
            obj._setContents("");
            this.divData.addChild(obj.name, obj);
            // Layout Functions
            //-- Default Layout : this
            obj = new Layout("default","",this._adjust_width,this._adjust_height,this,function(p){});
            this.addLayout(obj.name, obj);
            
            // BindItem Information
            obj = new BindItem("item0","divSearch.form.ccfCD_CORP.form.CDTextBox","value","dsSearch","CD_CORP");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item1","divSearch.form.ccfCD_CORP.form.DSTextBox","value","dsSearch","DS_CORP");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item2","divSearch.form.ccfCD_DEPT_ACNT.form.CDTextBox","value","dsSearch","CD_DEPT_ACNT");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item3","divSearch.form.ccfCD_DEPT_ACNT.form.DSTextBox","value","dsSearch","DS_DEPT_ACNT");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item4","divSearch.form.ctclDT_FROM","value","dsSearch","DT_FROM");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item6","divSearch.form.ccfCD_ACNT.form.CDTextBox","value","dsSearch","CD_ACCOUNT");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item7","divSearch.form.ccfCD_ACNT.form.DSTextBox","value","dsSearch","DS_ACCOUNT");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item8","divSearch.form.ccfCD_VENDOR.form.CDTextBox","value","dsSearch","CD_VENDOR");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item9","divSearch.form.ccfCD_VENDOR.form.DSTextBox","value","dsSearch","DS_VENDOR");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item5","divSearch.form.ctclDT_TO","value","dsSearch","DT_TO");
            this.addChild(obj.name, obj);
            obj.bind();
            
            // TriggerItem Information

        };
        
        this.loadPreloadList = function()
        {
            this._addPreloadList("fdl","cmm::cmmCodeFind.xfdl");
        };
        
        // User Script
        this.registerScript("DHE_ACCOUNTVENDORSELECT.xfdl", function() {
        this.objApp = this.gfnGetApplication();

        this.form_onload = function(obj,e)
        {
        	// -- 필수 -------------------//
        	this.gfnFormOnLoad(this);
        	this.gfnFormInfo(this);
        	// ---------------------------//

        	this.fnSetButton();
        	this.fnSetExtendButton();
        	this.fnSetVariable();
        	this.fnSetEvent();
        	this.fnSetParameter();


        	this.dsSearch.setColumn(0, "CD_CORP", this.AuthClient.CD_CORP);
        	this.dsSearch.setColumn(0, "DS_CORP", this.AuthClient.DS_CORP);

        	//this.dsSearch.setColumn(0, "DT_FROM", this.gfnGetFirstDate(this.gfnGetDate()));
        	//this.dsSearch.setColumn(0, "DT_TO", this.gfnGetDate());
        // 	this.ctclDT_FROM.set_value(this.gfnGetFirstDate(this.gfnGetDate()));
        // 	this.ctclDT_TO.set_value(this.gfnGetDate());
        	var sCurrentDate = this.gfnGetDate();
        	this.ctclDT_FROM.set_value((sCurrentDate.substr(0,4)+"0101"));
        	this.ctclDT_TO.set_value(sCurrentDate);

        	this.dsSearch.setColumn(0, "CD_DEPT_ACNT", this.AuthClient.LEVCD_DEPT_UPPER);
        	this.ccfCD_DEPT_ACNT.form.fnCodeFindLoad();


        	this.chkYN_DEPT.set_value("Y");
        	this.ccfCD_CORP.form.CDTextBox.setFocus();

        };

        /************************************************************************
         * 버튼 설정 : 화면(Tab) 전환시 마다 호출
         ************************************************************************/
        this.fnSetButton = function() {
         	this.FormBtns.Add.set_enable(false);
         	this.FormBtns.Save.set_enable(false);
         	this.FormBtns.Del.set_enable(false);
        }

        /************************************************************************
         * 확장 버튼 : 화면별 버튼 설정 ID, function 연결
         ************************************************************************/
        this.fnSetExtendButton = function() {
        	this.btnFormButtonGe = this.gfnFormButtonAdd("tbbHistory", "fnTbbHistory", "계정코드별명세서");
        };

        /************************************************************************
         * 변수 선언
         ************************************************************************/
        this.fnSetVariable = function() {
        	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;
        	this.ccfCD_DEPT_ACNT = this.divSearch.form.ccfCD_DEPT_ACNT;
        	this.ccfCD_ACNT = this.divSearch.form.ccfCD_ACNT;
        	this.ccfCD_VENDOR = this.divSearch.form.ccfCD_VENDOR;

        	this.ctclDT_FROM = this.divSearch.form.ctclDT_FROM;
        	this.ctclDT_TO = this.divSearch.form.ctclDT_TO;
        	this.chkYN_DEPT = this.divSearch.form.chkYN_DEPT;

        	this.dxGrid = this.divData.form.objGrid;
        };

        /************************************************************************
         * 이벤트 설정
         ************************************************************************/
        this.fnSetEvent = function() {
        	this.gfnGridInit(this.dxGrid, this.dsList, "DH", "DHE_ACCOUNTVENDORSELECT");

        	this.dxGrid.addEventHandler("oncelldblclick", this.fnGrid_Celldblclick, this);
        	this.dxGrid.addEventHandler("onselectchanged", this.fnGrid_RowCellChanged, this);

        	this.ccfCD_DEPT_ACNT.CodeFindName = "DHX_CFACNTUNIT";
        	this.ccfCD_VENDOR.CodeFindName = "DHX_CFALLVENDOR_CODEFIND";
        	//this.ccfCD_ACNT.CodeFindName = "DHX_CFACNT_SLIP_AND_TRIAL";	// DHX_CFACNT_YNVENDOR
        	this.ccfCD_ACNT.CodeFindName = "DHX_CFACNT_SLIP_AND_TRIAL_MULTI";	// 계정멀티

        	this.ccfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";
        	this.ccfCD_DEPT_ACNT.AfterCDTextChanged = "fnAfterCDTextChanged";
        	this.ccfCD_ACNT.AfterCDTextChanged = "fnAfterCDTextChanged";
        	this.ccfCD_VENDOR.AfterCDTextChanged = "fnAfterCDTextChanged";

        	this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
        	this.ccfCD_DEPT_ACNT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
        	this.ccfCD_ACNT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
        	this.ccfCD_VENDOR.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
        }

        /************************************************************************
         * 파라미터 설정
         ************************************************************************/
        this.fnSetParameter = function() {

        	this.dsSelect = new Dataset();
        	this.dsSelect.addColumn("CD_CORP", "string");
        	this.dsSelect.addColumn("CD_DEPT_ACNT", "string");
        	this.dsSelect.addColumn("DT_FR", "string");
        	this.dsSelect.addColumn("DT_TO", "string");
        	this.dsSelect.addColumn("CD_ACCOUNT", "string");
        	this.dsSelect.addColumn("CD_VENDOR", "string");
        }

        /************************************************************************
         * 버튼 이벤트
         ************************************************************************/
         /*
          *	조회 버튼
          */
        this.fnSelect = function() {
        	if (!this.fnSelectValidate()) return false;

        	this.gfnGridBeforeSelect(this.dxGrid);

        	this.dsSelect.clearData();
        	var nRow = this.dsSelect.addRow();


        	this.dsSelect.setColumn(nRow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
        	this.dsSelect.setColumn(nRow, "CD_DEPT_ACNT", this.ccfCD_DEPT_ACNT.form.CDTextBox.value);
        	this.dsSelect.setColumn(nRow, "DT_FR", this.ctclDT_FROM.value);
        	this.dsSelect.setColumn(nRow, "DT_TO", this.ctclDT_TO.value);
        	this.dsSelect.setColumn(nRow, "CD_ACCOUNT", this.ccfCD_ACNT.form.CDTextBox.value);
        	this.dsSelect.setColumn(nRow, "CD_VENDOR", this.ccfCD_VENDOR.form.CDTextBox.value);

        	var command     = (this.chkYN_DEPT.value == "Y") ? "selectDept" : "select";
        	var strSvcId    = "select";
        	var strSvcType  = "grid";
        	var inProc		= "_dsProc";
        	var inData      = command + "=dsSelect";
        	var outData     = "dsList=" + command + "0";
        	var strArg      = "";
        	var callBackFnc = "fnCallback";

        	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
        						strSvcType , 	// transaction을 요청할 구분
        						inProc,			// Procedure 정보 Dataset 이름
        						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
        						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
        						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
        						callBackFnc); // 통신방법 정의 [생략가능]

        }

        /*
         *	입력 버튼
         */
        this.fnAdd = function() {
        }

        /*
         *	삭제 버튼
         */
        this.fnDel = function() {
        }

        /*
         *	저장 버튼
         */
        this.fnSave = function() {
        }

        /*
         *	엑셀 버튼
         */
        this.fnExcel = function() {
        	this.gfnExcelExport(this.dxGrid);
        }

        /*
         *	출력 버튼
         */
        this.fnPrint = function() {

        	if (!this.fnSelectValidate()) return false;

        	this.dsReportParam = new Dataset();
        	this.dsReportParam.addColumn("CD_CORP", "string");
        	this.dsReportParam.addColumn("DS_CORP", "string");
        	this.dsReportParam.addColumn("DT_FROM", "string");
        	this.dsReportParam.addColumn("DT_TO", "string");
        	this.dsReportParam.addColumn("CD_VENDOR", "string");
        	this.dsReportParam.addColumn("DS_VENDOR", "string");
        	this.dsReportParam.addColumn("CD_ACCOUNT", "string");
        	this.dsReportParam.addColumn("DS_ACCOUNT", "string");
        	this.dsReportParam.addColumn("CD_DEPT_ACNT", "string");
        	this.dsReportParam.addColumn("DS_DEPT_ACNT", "string");
        	this.dsReportParam.addColumn("DT_TERM", "string");

        	this.dsReportParam.clearData();
        	this.dsReportParam.addRow();

        	var CD_CORP = this.dsSearch.getColumn(0, "CD_CORP");
        	var DS_CORP = this.dsSearch.getColumn(0, "DS_CORP");
        	var DT_FROM = this.dsSearch.getColumn(0, "DT_FROM");
        	var DT_TO = this.dsSearch.getColumn(0, "DT_TO");
        	var CD_ACCOUNT = this.dsSearch.getColumn(0, "CD_ACCOUNT");
        	var DS_ACCOUNT = this.dsSearch.getColumn(0, "DS_ACCOUNT");
        	var CD_VENDOR = this.dsSearch.getColumn(0, "CD_VENDOR");
        	var DS_VENDOR = this.dsSearch.getColumn(0, "DS_VENDOR");

        	var DT_FR_FROMAT = DT_FROM.substr(0,4) + "년 " + DT_FROM.substr(4,2)+"월 " + DT_FROM.substr(6,2) +"일";
        	var DT_TO_FROMAT = DT_TO.substr(0,4) + "년 " + DT_TO.substr(4,2)+"월 " + DT_TO.substr(6,2) +"일";
        	var CD_DEPT_ACNT = this.dsSearch.getColumn(0, "CD_DEPT_ACNT");
        	var DS_DEPT_ACNT = this.dsSearch.getColumn(0, "DS_DEPT_ACNT");

        	this.dsReportParam.setColumn(0, "CD_CORP", CD_CORP);
        	this.dsReportParam.setColumn(0, "DS_CORP", DS_CORP);
        	this.dsReportParam.setColumn(0, "CD_ACCOUNT", CD_ACCOUNT);
        	this.dsReportParam.setColumn(0, "DS_ACCOUNT", DS_ACCOUNT);
        	this.dsReportParam.setColumn(0, "CD_VENDOR", CD_VENDOR);
        	this.dsReportParam.setColumn(0, "DS_VENDOR", DS_VENDOR);
        	this.dsReportParam.setColumn(0, "DT_FROM", DT_FROM);
        	this.dsReportParam.setColumn(0, "DT_TO", DT_TO);
        	this.dsReportParam.setColumn(0, "DT_TERM", ("기 간 : " + DT_FR_FROMAT + " ~ " + DT_TO_FROMAT));
        	this.dsReportParam.setColumn(0, "CD_DEPT_ACNT", CD_DEPT_ACNT);
        	this.dsReportParam.setColumn(0, "DS_DEPT_ACNT", DS_DEPT_ACNT);

        	this.dsSelect.clearData();
        	var nRow = this.dsSelect.addRow();

        	this.dsSelect.setColumn(nRow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
        	this.dsSelect.setColumn(nRow, "CD_DEPT_ACNT", this.ccfCD_DEPT_ACNT.form.CDTextBox.value);
        	this.dsSelect.setColumn(nRow, "DT_FR", this.ctclDT_FROM.value);
        	this.dsSelect.setColumn(nRow, "DT_TO", this.ctclDT_TO.value);
        	this.dsSelect.setColumn(nRow, "CD_ACCOUNT", this.ccfCD_ACNT.form.CDTextBox.value);
        	this.dsSelect.setColumn(nRow, "CD_VENDOR", this.ccfCD_VENDOR.form.CDTextBox.value);

        	var command     = (this.chkYN_DEPT.value == "Y") ? "selectDept" : "select";


        	var inProc		= "_dsProc";
        	var inParam 	= "params=dsReportParam";
        	var inData      = command + "=dsSelect";
        	var reportpath  = "/dh/dhe/DHE_ACCOUNTVENDORSELECT.ozr";

        	gfnOpenReport(this, reportpath, inProc, inParam, inData);
        	return false;
        }

        /************************************************************************
         * Validate
         ************************************************************************/
        /*
         *	조회 Validate
         */
        this.fnSelectValidate = function() {

        	if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.text))
        	{
        		this.gfnAlert("법인코드를 입력 하세요.");
        		this.ccfCD_CORP.form.CDTextBox.setFocus();
        		return false;
        	}

        	if (this.gfnIsNull(this.ccfCD_DEPT_ACNT.form.CDTextBox.text))
        	{
        		this.gfnAlert("귀속부서를 입력 하세요.");
        		this.ccfCD_DEPT_ACNT.form.CDTextBox.setFocus();
        		return false;
        	}

        	if (this.gfnIsNull(this.ccfCD_ACNT.form.CDTextBox.text))
        	{
        		this.gfnAlert("계정코드를 입력 하세요.");
        		this.ccfCD_ACNT.form.CDTextBox.setFocus();
        		return false;
        	}

        	if (this.gfnIsNull(this.ctclDT_FROM.value) || this.gfnIsNull(this.ctclDT_TO.value) )
        	{
        // 		this.gfnAlert("기간을 입력 하세요.");
        // 		this.ctclDT_FROM.setFocus();
        // 		return false;
        	}
        	else if ( this.gfnGetDiffDate(this.ctclDT_FROM.value, this.ctclDT_TO.value) < 0 )
        	{
        		this.gfnAlert("일자가 잘못 입력 되었습니다.");
        		this.ctclDT_TO.setFocus();
        		return false;
        	}

        	return true;
        };
        /************************************************************************
         * 콜백 이벤트
         ************************************************************************/
        /*
         *	콜백 처리
         */
        this.fnCallback = function(svcID, errorCode, errorMsg)
        {
        	if (svcID == "select") {
        		this.fnSetButton();
        		this.gfnGridAfterSelect(this.dxGrid);
        	}
        }

        /************************************************************************
         * 코드파인드 이벤트
         ************************************************************************/
        this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
        	var cdCorp = this.ccfCD_CORP.form.CDTextBox.value;
        	if (id == "ccfCD_CORP")
        	{
        		//dsUserParam.setColumn(nrow, "LEVLV_DEPT", this.UserInfo.LEVLV_DEPT_ACNT);
        		//dsUserParam.setColumn(nrow, "LEVCD_DEPT", this.UserInfo.LEVCD_DEPT_ACNT);
        		dsUserParam.setColumn(nrow, "ID_SABUN", this.AuthClient.ID_USER);
        	}
        	else if (id == "ccfCD_DEPT_ACNT")
        	{
        			if(this.gfnIsNull(cdCorp)){
        				this.gfnAlert("법인코드를 선택하세요.");
        				return false;
        			}

        			dsUserParam.setColumn(nrow, "CD_DEPT_UPPER"	, "");						//상위부서
        			dsUserParam.setColumn(nrow, "YN_SLIPACCEPT"	, "");						//전표발행여부
        			dsUserParam.setColumn(nrow, "CD_CORP"		, cdCorp);					//법인코드
        			dsUserParam.setColumn(nrow, "YN_USE"		, "");						//사용여부
        			dsUserParam.setColumn(nrow, "GR_DEPT_ACNT"	, "");						//현장/본사여부
        			dsUserParam.setColumn(nrow, "LEVCD_DEPT_UPPER", this.AuthClient.LEVCD_DEPT_UPPER);
        			//dsUserParam.setColumn(nrow, "ID_USER"	    , this.AuthClient.ID_USER);
        			//dsUserParam.setColumn(nrow, "GR_SEARCH"     , this.FormInfo.GR_SEARCH);
        			//dsUserParam.setColumn(nrow, "CD_DEPT"	    , this.AuthClient.CD_DEPT);
        // 		dsUserParam.setColumn(nrow, "LEVEL"		, this.UserInfo.LV_3);	//법인코드
        // 		dsUserParam.setColumn(nrow, "ACNTUNIT"		, this.UserInfo.LEVCD_DEPT_ACNT);	//법인코드
        // 		dsUserParam.setColumn(nrow, "CD_CORP"		, this.ccfCD_CORP.form.CDTextBox.value);	//법인코드
        	}else if (id == "ccfCD_ACNT") {
        		if(this.gfnIsNull(cdCorp)){
        			this.gfnAlert("법인코드를 선택하세요.");
        			return false;
        		}
        		dsUserParam.setColumn(nrow, "CD_CORP", cdCorp);
        	}
        	else if (id == "ccfCD_CON")
        	{
        		if (!this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value))
        		{
        			dsUserParam.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
        		}
        		else
        		{
        			this.gfnAlert("법인코드는 필수입력 값입니다.");
        			return false;
        		}
        	}
        	return true;

        };

        this.fnAfterCDTextChanged = function(id, codeFindData)
        {
        	var arr = codeFindData;
        	this.fnSearchInit();

        	if(id == "ccfCD_CORP")
        	{
        		this.ccfCD_DEPT_ACNT.form.fnCodeFindClear();
        	}

        	if(id == "ccfCD_ACNT") {
        		trace("계정");
        		var strCdAcnt = "";
        		var strDsAcnt = "";
        		if (arr.length > 0) {
        			for(var r = 0; r < arr.length; r++) {
        				strCdAcnt += arr[r]["CD_ACCOUNT"]+",";
        				strDsAcnt += arr[r]["DS_ACCOUNT"]+",";
        			}

        			this.ccfCD_ACNT.form.CDTextBox.set_value(strCdAcnt.substr(0,strCdAcnt.length-1));
        			this.ccfCD_ACNT.form.DSTextBox.set_value(strDsAcnt.substr(0,strDsAcnt.length-1));
        		}
        	}
        }

        /************************************************************************
         * 그리드 이벤트
         ************************************************************************/
        this.fnGrid_RowCellChanged = function(obj,e)
        {
        //     if ((obj.oldrow > -1 && obj.oldrow == e.row)
        // 		|| (obj.oldrow == -1 && e.oldrow != e.row)) {
        // 		this.FormBtns.SubSelect.click();
        // 		obj.oldrow = -1;
        // 	}
        };

        this.fnGrid_RowCellChanged = function(obj,e)
        {
        	var colnm = this.gfnGridGetBindColumnNameByIndex(obj, e.cell);
        	var objDs = obj.getBindDataset();
        	var rows = obj.getSelectedDatasetRows();
        	var sum = 0;
        	var bRet = true;

        	// 공통 > Setting > 그리드정보 에서 셋팅한 내용대로
        	var nGrdSpcRow = this.dsGridSpec.findRow( "DS_FIELD", colnm);
        	var TY_CELLTYPE = this.dsGridSpec.getColumn(nGrdSpcRow, "TY_CELLTYPE");
        	if(TY_CELLTYPE != "TEXT"){
        		for(var i = 0; i < rows.length; i++) {
        			var am = objDs.getColumn(rows[i], colnm);

        			bRet = isNaN(am); // 문자:true, 숫자:false

        			if(bRet == true){
        				break;
        			}

        			if(!this.gfnIsNull(am)) {
        				sum += nexacro.toNumber(am, 0);
        			}
        		}
        	}

        	// 숫자면 합계표시, 문자면 null
        	var textSummary = (bRet && TY_CELLTYPE == "TEXT") ? "" : this.gfnAppendComma(sum);
        	var colDSummary = obj.getBindCellIndex("body", "CD_ACCOUNT");
        	obj.setCellProperty("summ", colDSummary, "text", textSummary);
        }


        this.fnGrid_Celldblclick = function(obj,e)
        {
        	// 선택된 row가 있을 경우에만 팝업을 띄움
        	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
        	this.fnOpenPopAccountSelectPw();
        };

        /************************************************************************
         * 확장버튼 이벤트
         ************************************************************************/
        this.fnTbbHistory = function(obj,e) {
        	// 선택된 row가 있을 경우에만 팝업을 띄움
        	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }

        	this.fnOpenPopAccountSelectPw();
        }

        this.fnOpenPopAccountSelectPw = function(){
        	// 선택된 row가 있을 경우에만 팝업을 띄움
        	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }


        	var param = {};

        	var cd_corp = this.ccfCD_CORP.form.CDTextBox.value;
        	var cd_account = this.dsList.getColumn(this.dsList.rowposition, "CD_ACCOUNT");
        	var dt_magam = this.ctclDT_FROM.value;
        	var dt_magam2 = this.ctclDT_TO.value;

        	if(this.gfnIsNull(cd_corp) || this.gfnIsNull(cd_account) || this.gfnIsNull(dt_magam) || this.gfnIsNull(dt_magam2))
        	{
        		this.gfnAlert("이관자료는 조회할 수 없습니다.");
        		return false;
        	}

        	var sCdDept = this.ccfCD_DEPT_ACNT.form.CDTextBox.value;
        	var sDsept = this.ccfCD_DEPT_ACNT.form.DSTextBox.value;
        	if(this.chkYN_DEPT.value == "Y"){
        		sCdDept = this.dsList.getColumn(this.dsList.rowposition, "CD_DEPT_ACNT");
        		sDsept = this.dsList.getColumn(this.dsList.rowposition, "DS_DEPT_ACNT");
        	}

        	param.CD_CORP_REC = cd_corp;
        	param.DS_CORP_REC = this.ccfCD_CORP.form.DSTextBox.value;
        	param.CD_DEPT_ACNT = sCdDept;
        	param.DS_DEPT_ACNT = sDsept;
        	param.CD_ACCOUNT = cd_account;
        	param.DS_ACCOUNT = this.dsList.getColumn(this.dsList.rowposition, "DS_ACCOUNT");
        	param.DT_MAGAM = dt_magam;
        	param.DT_MAGAM2 = dt_magam2;
        	param.TY_VENDOR = "VENDOR";
        	param.CD_VENDOR = this.dsList.getColumn(this.dsList.rowposition, "CD_VENDOR");
        	param.DS_VENDOR = this.dsList.getColumn(this.dsList.rowposition, "DS_VENDOR");

        	this.gfnFormOpen("DHE", "DHE_ACCOUNTSELECT_PW", "", param);
        }

        /************************************************************************
         * 기타 이벤트
         ************************************************************************/
        this.fnSearchInit = function(obj,e) {
        	if(e == null || (e.pretext != e.posttext)) {
        		this.gfnSetFormStatus(this);
        		this.gfnGridClear(this.dxGrid);
        	}
        }

        this.divSearch_ctclDT_FROM_onchanged = function(obj,e)
        {
        	this.fnSearchInit();
        };

        this.divSearch_ctclDT_TO_onchanged = function(obj,e)
        {
        	this.fnSearchInit();
        };

        this.divSearch_chkYN_DEPT_onchanged = function(obj,e)
        {
        	this.fnSearchInit();

        	var CD_DEPT_ACNT_SIZE = 100;
        	var DS_DEPT_ACNT_SIZE = 150;

        	if (!obj.isChecked())
        	{
        		CD_DEPT_ACNT_SIZE = 0;
        		DS_DEPT_ACNT_SIZE = 0;
        	}

        	this.dxGrid.setFormatColProperty(this.dxGrid.getBindCellIndex("body", "CD_DEPT_ACNT"), "size", CD_DEPT_ACNT_SIZE);
        	this.dxGrid.setFormatColProperty(this.dxGrid.getBindCellIndex("body", "DS_DEPT_ACNT"), "size", CD_DEPT_ACNT_SIZE);
        };

        });
        
        // Regist UI Components Event
        this.on_initEvent = function()
        {
            this.addEventHandler("onload",this.form_onload,this);
            this.divSearch.form.ctclDT_FROM.addEventHandler("onchanged",this.divSearch_ctclDT_FROM_onchanged,this);
            this.divSearch.form.ctclDT_TO.addEventHandler("onchanged",this.divSearch_ctclDT_TO_onchanged,this);
            this.divSearch.form.chkYN_DEPT.addEventHandler("onchanged",this.divSearch_chkYN_DEPT_onchanged,this);
        };
        this.loadIncludeScript("DHE_ACCOUNTVENDORSELECT.xfdl");
        this.loadPreloadList();
        
        // Remove Reference
        obj = null;
    };
}
)();
