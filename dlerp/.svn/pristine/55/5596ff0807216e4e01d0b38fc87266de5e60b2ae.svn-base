<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="New Form" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="1" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="sta00" taborder="0" text="현장/부서 코드" left="0.0" top="10.0" width="144.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_SITE" CodeFindName="DZX_CFDEPTCORP" CDTextWidth="80" taborder="1" left="sta00:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staCD_PERIOD" taborder="2" text="년월" left="ccfCD_SITE:0.0" top="10.0" width="144.0" height="24.0" onclick="divSearch_staCD_PERIOD_onclick" cssclass="sta_WF_SchLabelE"/>
              <Div id="tclDT_WORK" taborder="6" left="staCD_PERIOD:0.0" top="10.0" width="90" height="24.0" url="cmm::cmmCalMM.xfdl"/>
              <Static id="staCD_HADO" taborder="5" text="작업반" left="tclDT_WORK:0.0" top="10.0" width="144.0" height="24.0" textDecoration="none" onclick="divSearch_staCD_PERIOD_onclick" cssclass="sta_WF_SchLabel"/>
              <Div id="cfCD_HADO" CDTextWidth="80" taborder="3" left="staCD_HADO:0.0" top="10.0" width="200" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staCD_COST" taborder="7" text="공종" left="cfCD_HADO:0.0" top="10.0" width="144.0" height="24.0" onclick="divSearch_staCD_PERIOD_onclick" cssclass="sta_WF_SchLabel"/>
              <Div id="cfCD_COST" CDTextWidth="100" taborder="4" left="staCD_COST:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
// 	var cd_dept = this.objApp.gdsDeptInfo.getColumn(this.objApp.gdsDeptInfo.rowposition, "CD_DEPT");
// 	var ds_dept = this.objApp.gdsDeptInfo.getColumn(this.objApp.gdsDeptInfo.rowposition, "DS_DEPT");
// 	var cd_site = this.gfnNvl(nexacro.getEnvironmentVariable("DW_SPACE98"), cd_dept);
// 	var ds_site = this.gfnNvl(nexacro.getEnvironmentVariable("DW_SPACE99"), ds_dept);

	this.dsSearch.setColumn(0, "DT_WORK",  this.gfnGetDate().substr(0,6));	// 일자 현재일로 셋팅	
// 	this.dsSearch.setColumn(0, "CD_SITE",  cd_site);
// 	this.dsSearch.setColumn(0, "DS_SITE",  ds_site);
	//this.fnSelect();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
	//this.FormBtns.Select.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnExcelUpload = this.gfnFormButtonAdd("ExcelUpload", "fnExcelUpload");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_SITE = this.divSearch.form.ccfCD_SITE;
	this.ctclDT_WORK = this.divSearch.form.ctclDT_WORK;
	this.cfCD_HADO = this.divSearch.form.cfCD_HADO ;
	this.cfCD_COST = this.divSearch.form.cfCD_COST;
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	
	this.cfCD_HADO.CodeFindName = "DWX_CFHADO_JIK";	// 계약번호
//	this.cfCD_COST.CodeFindName = "DWX_CFCOST_ADJUST";	// 기본편성 Activity(상세)
	this.cfCD_COST.CodeFindName = "DWX_CFCOST_BATSEL";	// 기본편성 Activity(상세)
	
	this.ccfCD_SITE.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.cfCD_HADO.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";	
	this.cfCD_COST.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.cfCD_COST.AfterCDTextChanged = "cfCD_COST_AfterCDTextChanged";		
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DS", "DSB_MONTH_PERSON");
	
	// 그리드 코드파인드 설정
	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
	
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_SITE", "string");
	this.dsSelect.addColumn("DT_WORK", "string");
	this.dsSelect.addColumn("CD_HADO", "string");
	
	this.dsSave = new Dataset();
	this.dsSave.addColumn("CD_SITE", "string");
	this.dsSave.addColumn("YM_WORK", "string");
	this.dsSave.addColumn("NO_ID", "string");
	this.dsSave.addColumn("TY_GUBUN", "string");
	this.dsSave.addColumn("CD_COST", "string");
	this.dsSave.addColumn("D01", "bigdecimal");
	this.dsSave.addColumn("D02", "bigdecimal");
	this.dsSave.addColumn("D03", "bigdecimal");
	this.dsSave.addColumn("D04", "bigdecimal");
	this.dsSave.addColumn("D05", "bigdecimal");
	this.dsSave.addColumn("D06", "bigdecimal");
	this.dsSave.addColumn("D07", "bigdecimal");
	this.dsSave.addColumn("D08", "bigdecimal");
	this.dsSave.addColumn("D09", "bigdecimal");
	this.dsSave.addColumn("D10", "bigdecimal");
	this.dsSave.addColumn("D11", "bigdecimal");
	this.dsSave.addColumn("D12", "bigdecimal");
	this.dsSave.addColumn("D13", "bigdecimal");
	this.dsSave.addColumn("D14", "bigdecimal");
	this.dsSave.addColumn("D15", "bigdecimal");
	this.dsSave.addColumn("D16", "bigdecimal");
	this.dsSave.addColumn("D17", "bigdecimal");
	this.dsSave.addColumn("D18", "bigdecimal");
	this.dsSave.addColumn("D19", "bigdecimal");
	this.dsSave.addColumn("D20", "bigdecimal");
	this.dsSave.addColumn("D21", "bigdecimal");
	this.dsSave.addColumn("D22", "bigdecimal");
	this.dsSave.addColumn("D23", "bigdecimal");
	this.dsSave.addColumn("D24", "bigdecimal");
	this.dsSave.addColumn("D25", "bigdecimal");
	this.dsSave.addColumn("D26", "bigdecimal");
	this.dsSave.addColumn("D27", "bigdecimal");
	this.dsSave.addColumn("D28", "bigdecimal");
	this.dsSave.addColumn("D29", "bigdecimal");
	this.dsSave.addColumn("D30", "bigdecimal");
	this.dsSave.addColumn("D31", "bigdecimal");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;

	//this.gfnGridInit(this.dxGrid, this.dsList, "DS", "DSB_MONTH_PERSON");

	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsSelect.setColumn(0, "DT_WORK", this.dsSearch.getColumn(0, "DT_WORK"));
	this.dsSelect.setColumn(0, "CD_HADO", this.dsSearch.getColumn(0, "CD_HADO"));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	var nrow = this.gfnGridAdd(this.dxGrid, "bottom"); // top (default), bottom, current
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	
	if(this.gfnIsNull(this.cfCD_COST.form.CDTextBox.value)) {
		this.gfnAlert("공종을 입력하세요.");
		return;		
	}	
	
	// 그리드 필수항목 체크
	if (!this.gfnGridValidate(this.dxGrid)) return;	
	
	this.gfnConfirm("데이터가 많을시 속도가 느려질 수 있습니다." + "\r\n" + "저장 하시겠습니까?", "fnSave_callback");
}



this.fnSave_callback = function() {
	this.dxGrid.updateToDataset();
	
	this.dsSave.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
			case "U":
			case "D":
				var TY_GUBUN = this.dsList.getColumn(i, "TY_GUBUN");
				if(TY_GUBUN == "TM_RW" || TY_GUBUN == "TM_OT" || TY_GUBUN == "TM_NW"){
					var nrow = this.dsSave.addRow();
					this.dsSave.setColumn(nrow, "CD_SITE", this.dsList.getColumn(i, "CD_SITE"));
					this.dsSave.setColumn(nrow, "YM_WORK", this.dsSearch.getColumn(0, "DT_WORK"));
					this.dsSave.setColumn(nrow, "NO_ID", this.dsList.getColumn(i, "NO_SABUN"));
					this.dsSave.setColumn(nrow, "TY_GUBUN", this.dsList.getColumn(i, "TY_GUBUN"));
					this.dsSave.setColumn(nrow, "CD_COST", this.cfCD_COST.form.CDTextBox.value);				
					this.dsSave.setColumn(nrow, "D01", this.dsList.getColumn(i, "D01"));
					this.dsSave.setColumn(nrow, "D02", this.dsList.getColumn(i, "D02"));
					this.dsSave.setColumn(nrow, "D03", this.dsList.getColumn(i, "D03"));
					this.dsSave.setColumn(nrow, "D04", this.dsList.getColumn(i, "D04"));
					this.dsSave.setColumn(nrow, "D05", this.dsList.getColumn(i, "D05"));
					this.dsSave.setColumn(nrow, "D06", this.dsList.getColumn(i, "D06"));
					this.dsSave.setColumn(nrow, "D07", this.dsList.getColumn(i, "D07"));
					this.dsSave.setColumn(nrow, "D08", this.dsList.getColumn(i, "D08"));
					this.dsSave.setColumn(nrow, "D09", this.dsList.getColumn(i, "D09"));
					this.dsSave.setColumn(nrow, "D10", this.dsList.getColumn(i, "D10"));
					this.dsSave.setColumn(nrow, "D11", this.dsList.getColumn(i, "D11"));
					this.dsSave.setColumn(nrow, "D12", this.dsList.getColumn(i, "D12"));
					this.dsSave.setColumn(nrow, "D13", this.dsList.getColumn(i, "D13"));
					this.dsSave.setColumn(nrow, "D14", this.dsList.getColumn(i, "D14"));
					this.dsSave.setColumn(nrow, "D15", this.dsList.getColumn(i, "D15"));
					this.dsSave.setColumn(nrow, "D16", this.dsList.getColumn(i, "D16"));
					this.dsSave.setColumn(nrow, "D17", this.dsList.getColumn(i, "D17"));
					this.dsSave.setColumn(nrow, "D18", this.dsList.getColumn(i, "D18"));
					this.dsSave.setColumn(nrow, "D19", this.dsList.getColumn(i, "D19"));
					this.dsSave.setColumn(nrow, "D20", this.dsList.getColumn(i, "D20"));
					this.dsSave.setColumn(nrow, "D21", this.dsList.getColumn(i, "D21"));
					this.dsSave.setColumn(nrow, "D22", this.dsList.getColumn(i, "D22"));
					this.dsSave.setColumn(nrow, "D23", this.dsList.getColumn(i, "D23"));
					this.dsSave.setColumn(nrow, "D24", this.dsList.getColumn(i, "D24"));
					this.dsSave.setColumn(nrow, "D25", this.dsList.getColumn(i, "D25"));
					this.dsSave.setColumn(nrow, "D26", this.dsList.getColumn(i, "D26"));
					this.dsSave.setColumn(nrow, "D27", this.dsList.getColumn(i, "D27"));
					this.dsSave.setColumn(nrow, "D28", this.dsList.getColumn(i, "D28"));
					this.dsSave.setColumn(nrow, "D29", this.dsList.getColumn(i, "D29"));
					this.dsSave.setColumn(nrow, "D30", this.dsList.getColumn(i, "D30"));
					this.dsSave.setColumn(nrow, "D31", this.dsList.getColumn(i, "D31"));				
				}
				break;						
		}
	}
	
	if (this.dsSave.rowcount == 0) return;
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}
/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	엑셀업로드
 */ 
this.fnExcelUpload = function() {
	// this.gfnExcelImport("적용할Dataset명","sheet명","데이터시작좌표","콜백함수명","구분ID",현재폼); 
	// sheet명 없으면 첫번째 sheet
	this.gfnExcelImport("dsList","","A2","fnExcelImportCallback","import",this);
	//this.gfnExcelImport("dsListSub","sheet1","A2","fnExcelImportCallback","import",this);
}

this.fnExcelImportCallback = function(sImportId, dsOut, dsSheet) {
	// 다중 시트 처리시 양식의 해당 시트여부를 체크하고자 할땐 dsSheet 시트명 체크
// 	if (dsSheet.rowcount > 1) {
// 		trace(dsSheet.getColumn(1, "sheetname"));
// 	}
	
	// 엑셀 양식과 그리드 컬럼이 그대로 일치 하는경우 아래와 같이 처리.
	// 아닌경우는 이부분 주석처리	
	this.dsList.clearData();
	//for (var i=0; i< this.dsList.getColCount()+10; i++)
	for (var i=0; i< dsOut.getColCount(); i++)
	{
		sColumnId = "Column"+i;
		var sColumnNm = this.gfnGridGetBindColumnNameByIndex(this.dxGrid, i);
		if (sColumnNm != "" && sColumnId != sColumnNm)
		{
			dsOut.updateColID(sColumnId, sColumnNm);
		}
	}
	// 양식이 일치하고 엑셀내역을 기존데이터에 Insert하지 않고
	// 엑셀내역 그대로 그리드 반영할 시 copyData
	//this.dsList.copyData(dsOut);
	
	this.dsList.set_enableevent(false);
	for (var i=0; i<dsOut.rowcount; i++) {
		var nrow = this.dsList.addRow();
		this.dsList.setColumn(nrow, this.ucFlag, "U");
		
		// 양식이 일치하는 경우 copyRow
		//if(!this.gfnIsNull(dsOut.getColumn(i, "DS_GUBUN"))){
			this.dsList.copyRow(nrow, dsOut, i);
		//}
		
		// 양식과 일치하지 않는 경우 아래와 같이 컬럼별로 처리.
// 		this.dsListSub.setColumn(nrow, "CD_SYSTEM", dsOut.getColumn(i, "Column1"));
// 		this.dsListSub.setColumn(nrow, "CD_TYPE", dsOut.getColumn(i, "Column2"));
	}
	this.dsList.set_enableevent(true);
	this.gfnSetFormStatus(this, "I");	
	
	this.fnExcelUpLoadEventSetting();
	//this.fnGridEventSetting();
};

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {	
	var validate = true;
	
	if (this.gfnIsNull(this.dsSearch.getColumn(0,"CD_SITE"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.ccfCD_SITE.form.CDTextBox.setFocus();
		}
		this.gfnAlert("현장코드는 반드시 입력 하셔야 합니다.", "fnVaidateCallback");
	}else if (this.gfnIsNull(this.dsSearch.getColumn(0,"DT_WORK"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.ctclDT_WORK.setFocus();
		}
		this.gfnAlert("일자는 반드시 입력 하셔야 합니다.", "fnVaidateCallback");
	}
// 	else if (this.gfnIsNull(this.dsSearch.getColumn(0,"CD_HADO"))) {
// 		validate = false;
// 		// Alert후 실행할 처리
// 		this.fnVaidateCallback = function() {
// 			this.cfCD_HADO.setFocus();
// 		}
// 		this.gfnAlert("작업반은 반드시 입력 하셔야 합니다.", "fnVaidateCallback");
// 	}
	
	return validate;
	
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
		this.fnGridEventSetting();
	}	
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.gfnAlert("저장 되었습니다.");
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
//코드파인드의 파라미터 값을 넘겨줄때 사용하는 함수
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
		
	if (id == "ccfCD_SITE") {  
		dsUserParam.setColumn(nrow, "CD_CORP", this.objApp.gdsUserInfo.getColumn(0, "CD_CORP"));	
 	} 
	else if (id == "cfCD_HADO") 
	{  
		dsUserParam.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));	
 	}
	else if (id == "cfCD_COST") 
	{  
		if(this.gfnIsNull(this.dsSearch.getColumn(0, "CD_HADO"))){
			this.gfnAlert("작업반을 선택후 공종 선택이 가능합니다.");
			return false;
		}
		dsUserParam.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
		dsUserParam.setColumn(nrow, "NO_HADOCONT", this.dsSearch.getColumn(0, "CD_HADO"));
 	} 
	return true;
}
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGrid_BeforeUserDataSetParam = function(id, dsUserParam, nrow) {	
	// 그리드에서 코드파인드 id는 그리드셋팅의 코드파인드 식별ID
 	//그리드 발주처 코드파인드
	if (id == "DWX_CFCOST_TREE_01") {
		
		var cd_site = this.dsSearch.getColumn(0, "CD_SITE");
		if(this.gfnIsNull(cd_site)) {
			this.gfnAlert("현장코드를 먼저 입력하세요.");
			return false;
		}		
		
		dsUserParam.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
		dsUserParam.setColumn(nrow, "CD_GBIMOK", "");
		dsUserParam.setColumn(nrow, "CD_STDAGG", "");		
 	}
	return true;
}
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	

	}
};

this.fnGridEventSetting = function(){

	var maxDayMonth = this.gfnGetLastDate(this.dsSearch.getColumn(0, "DT_WORK")).substring(6,8);
	//20200309 이진형 토요일과 일요일은 배경을 변경한다
	for(var i = 10; i < this.dxGrid.getCellCount("head")-7; i++){
		if(i -9 > Number(maxDayMonth)){
			this.dxGrid.setRealColSize("head", i, 0);
			//continue;
		}else{
			this.dxGrid.setRealColSize("head", i, 40);
		}
		
		var etcCssclass = "DS_GUBUN == '주휴' || DS_GUBUN == '연차' ? 'BACK_ReadOnly' : DS_GUBUN == '*기본' || DS_GUBUN == '연장' || DS_GUBUN == '야간' ? '' : 'subtotal'";		
		var workDay = this.dxGrid.getCellProperty("head",  i, "text" ).replace("일","");
				
		// 1차 근무기간 readonly세팅.
		this.dxGrid.setCellProperty("body", i, "edittype", "expr:nexacro.toNumber('" + workDay + "') < nexacro.toNumber(DT_IPSA1) ? 'none' : 'mask'");
		this.dxGrid.setCellProperty("body", i, "edittype", "expr:nexacro.toNumber('" + workDay + "') >= nexacro.toNumber(DT_IPSA1) ? nexacro.toNumber('" + workDay + "') > nexacro.toNumber(DT_TOIJIK1) ? 'none' : 'mask' : " + this.dxGrid.getCellProperty("body", i, "edittype").replace("expr:", ""));
		
		//2차 근무기간 readonly세팅.
		var beforeEdittype = this.dxGrid.getCellProperty("body", i, "edittype").replace("expr:", "");
		this.dxGrid.setCellProperty("body", i, "edittype", "expr:DT_IPSA2 == '00' ? " + beforeEdittype + " : nexacro.toNumber('" + workDay + "') > nexacro.toNumber(DT_TOIJIK1) ? nexacro.toNumber('" + workDay + "') < nexacro.toNumber(DT_IPSA2) ? 'none' : 'mask' : " + this.dxGrid.getCellProperty("body", i, "edittype").replace("expr:", ""));
		this.dxGrid.setCellProperty("body", i, "edittype", "expr:DT_TOIJIK2 == '00' ? " + beforeEdittype + " : nexacro.toNumber('" + workDay + "') >= nexacro.toNumber(DT_IPSA2) ? nexacro.toNumber('" + workDay + "') > nexacro.toNumber(DT_TOIJIK2) ? 'none' : 'mask' : " + this.dxGrid.getCellProperty("body", i, "edittype").replace("expr:", ""));

		//3차 근무기간 readonly세팅.				
		var beforeEdittype1 = this.dxGrid.getCellProperty("body", i, "edittype").replace("expr:", "");
		this.dxGrid.setCellProperty("body", i, "edittype", "expr:DT_IPSA3 == '00' ? " + beforeEdittype1 + " : nexacro.toNumber('" + workDay + "') > nexacro.toNumber(DT_TOIJIK2) ? nexacro.toNumber('" + workDay + "') < nexacro.toNumber(DT_IPSA3) ? 'none' : 'mask' : " + this.dxGrid.getCellProperty("body", i, "edittype").replace("expr:", ""));
		this.dxGrid.setCellProperty("body", i, "edittype", "expr:DT_TOIJIK3 == '00' ? " + beforeEdittype1 + " : nexacro.toNumber('" + workDay + "') >= nexacro.toNumber(DT_IPSA3) ? nexacro.toNumber('" + workDay + "') > nexacro.toNumber(DT_TOIJIK3) ? 'none' : 'mask' : " + this.dxGrid.getCellProperty("body", i, "edittype").replace("expr:", ""));
		
		// 1차 근무기간 cssclass세팅.
		this.dxGrid.setCellProperty("body", i, "cssclass", "expr:nexacro.toNumber('" + workDay + "') < nexacro.toNumber(DT_IPSA1) ? 'BACK_ReadOnly' : " + etcCssclass);
		this.dxGrid.setCellProperty("body", i, "cssclass", "expr:nexacro.toNumber('" + workDay + "') >= nexacro.toNumber(DT_IPSA1) ? nexacro.toNumber('" + workDay + "') > nexacro.toNumber(DT_TOIJIK1) ? 'BACK_ReadOnly' : " + etcCssclass + " : " + this.dxGrid.getCellProperty("body", i, "cssclass").replace("expr:", ""));
		
		// 2차 근무기간 cssclass세팅.
		var beforeCssclass = this.dxGrid.getCellProperty("body", i, "cssclass").replace("expr:", "");
		this.dxGrid.setCellProperty("body", i, "cssclass", "expr:DT_IPSA2 == '00' ? " + beforeCssclass + " : nexacro.toNumber('" + workDay + "') > nexacro.toNumber(DT_TOIJIK1) ? nexacro.toNumber('" + workDay + "') < nexacro.toNumber(DT_IPSA2) ? 'BACK_ReadOnly' : " + etcCssclass + " : " + this.dxGrid.getCellProperty("body", i, "cssclass").replace("expr:", ""));
		this.dxGrid.setCellProperty("body", i, "cssclass", "expr:DT_TOIJIK2 == '00' ? " + beforeCssclass + " : nexacro.toNumber('" + workDay + "') >= nexacro.toNumber(DT_IPSA2) ? nexacro.toNumber('" + workDay + "') > nexacro.toNumber(DT_TOIJIK2) ? 'BACK_ReadOnly' : " + etcCssclass + " : " + this.dxGrid.getCellProperty("body", i, "cssclass").replace("expr:", ""));
		
		// 3차 근무기간 cssclass세팅.
		var beforeCssclass1 = this.dxGrid.getCellProperty("body", i, "cssclass").replace("expr:", "");
		this.dxGrid.setCellProperty("body", i, "cssclass", "expr:DT_IPSA3 == '00' ? " + beforeCssclass1 + " : nexacro.toNumber('" + workDay + "') > nexacro.toNumber(DT_TOIJIK2) ? nexacro.toNumber('" + workDay + "') < nexacro.toNumber(DT_IPSA3) ? 'BACK_ReadOnly' : " + etcCssclass + " : " + this.dxGrid.getCellProperty("body", i, "cssclass").replace("expr:", ""));
		this.dxGrid.setCellProperty("body", i, "cssclass", "expr:DT_TOIJIK3 == '00' ? " + beforeCssclass1 + " : nexacro.toNumber('" + workDay + "') >= nexacro.toNumber(DT_IPSA3) ? nexacro.toNumber('" + workDay + "') > nexacro.toNumber(DT_TOIJIK3) ? 'BACK_ReadOnly' : " + etcCssclass + " : " + this.dxGrid.getCellProperty("body", i, "cssclass").replace("expr:", ""));
		
		//this.gfnAlert (i+"");
		var yyyymmdd = this.dxGrid.getCellProperty("head",  i, "text" );
		yyyymmdd = this.dsSearch.getColumn(0, "DT_WORK") + yyyymmdd.replace("일","");
		//console.log(yyyymmdd);
		
		var yyyy = parseInt( yyyymmdd.substring( 0, 4 ), 10 );
		var mm  = ( parseInt( yyyymmdd.substring( 4, 6 ), 10 ) - 1 );
		var dd  = parseInt( yyyymmdd.substring( 6, 8 ), 10 );
		var date = new Date( yyyy, mm, dd ); //Date 개체를 만듭니다.
		if (date.getDay() == 6) {
			this.gfnGridColumnColor(this.dxGrid,'D' + this.dxGrid.getCellProperty("head",  i, "text" ).replace("일",""),  "BACK_Fixed", "DS_GUBUN != '주휴' && DS_GUBUN != '연차' && DS_GUBUN != ''"); 
		}else if (date.getDay() == 0 ) {
			this.gfnGridColumnColor(this.dxGrid,'D' + this.dxGrid.getCellProperty("head",  i, "text" ).replace("일",""),  "BACK_Sum", "DS_GUBUN != '주휴' && DS_GUBUN != '연차' && DS_GUBUN != ''"); 
		}
	}
}

this.fnExcelUpLoadEventSetting = function(){
	var maxDayMonth = this.gfnGetLastDate(this.dsSearch.getColumn(0, "DT_WORK")).substring(6,8);
	//20200309 이진형 토요일과 일요일은 배경을 변경한다
	for(var i = 10; i < this.dxGrid.getCellCount("head")-7; i++){
		if(i -9 > Number(maxDayMonth)){
			this.dxGrid.setRealColSize("head", i, 0);
			//continue;
		}else{
			this.dxGrid.setRealColSize("head", i, 40);
		}
		
		var etcCssclass = "DS_GUBUN == '주휴' || DS_GUBUN == '연차' ? 'BACK_ReadOnly' : DS_GUBUN == '*기본' || DS_GUBUN == '연장' || DS_GUBUN == '야간' ? '' : 'subtotal'";	
		var etcEdittype = "DS_GUBUN == '*기본' || DS_GUBUN == '연장' || DS_GUBUN == '야간' ? 'mask' : 'none'";			
		var weekendCssclass = "";
		
		var yyyymmdd = this.dxGrid.getCellProperty("head",  i, "text" );
		yyyymmdd = this.dsSearch.getColumn(0, "DT_WORK") + yyyymmdd.replace("일","");
		
		var yyyy = parseInt( yyyymmdd.substring( 0, 4 ), 10 );
		var mm  = ( parseInt( yyyymmdd.substring( 4, 6 ), 10 ) - 1 );
		var dd  = parseInt( yyyymmdd.substring( 6, 8 ), 10 );
		var date = new Date( yyyy, mm, dd ); //Date 개체를 만듭니다.
		if (date.getDay() == 6) {
			weekendCssclass = "DS_GUBUN == '*기본' || DS_GUBUN == '연장' || DS_GUBUN == '야간' ? 'BACK_Fixed' : ";
		}else if (date.getDay() == 0 ) {
			weekendCssclass = "DS_GUBUN == '*기본' || DS_GUBUN == '연장' || DS_GUBUN == '야간' ? 'BACK_Sum' : ";
		}
		
		var workDay = this.dxGrid.getCellProperty("head",  i, "text" ).replace("일","");
				
		// 1차 근무기간 readonly세팅.
		this.dxGrid.setCellProperty("body", i, "edittype", "expr:nexacro.toNumber('" + workDay + "') < nexacro.toNumber(DT_IPSA1) ? 'none' : " + etcEdittype);
		this.dxGrid.setCellProperty("body", i, "edittype", "expr:nexacro.toNumber('" + workDay + "') >= nexacro.toNumber(DT_IPSA1) ? nexacro.toNumber('" + workDay + "') > nexacro.toNumber(DT_TOIJIK1) ? 'none' : " + etcEdittype + " : " + this.dxGrid.getCellProperty("body", i, "edittype").replace("expr:", ""));
		
		// 2차 근무기간 readonly세팅.
		var beforeEdittype = this.dxGrid.getCellProperty("body", i, "edittype").replace("expr:", "");
		this.dxGrid.setCellProperty("body", i, "edittype", "expr:DT_IPSA2 == '00' ? " + beforeEdittype + " : nexacro.toNumber('" + workDay + "') > nexacro.toNumber(DT_TOIJIK1) ? nexacro.toNumber('" + workDay + "') < nexacro.toNumber(DT_IPSA2) ? 'none' : " + etcEdittype + " : " + this.dxGrid.getCellProperty("body", i, "edittype").replace("expr:", ""));
		this.dxGrid.setCellProperty("body", i, "edittype", "expr:DT_TOIJIK2 == '00' ? " + beforeEdittype + " : nexacro.toNumber('" + workDay + "') >= nexacro.toNumber(DT_IPSA2) ? nexacro.toNumber('" + workDay + "') > nexacro.toNumber(DT_TOIJIK2) ? 'none' : " + etcEdittype + " : " + this.dxGrid.getCellProperty("body", i, "edittype").replace("expr:", ""));

		// 3차 근무기간 readonly세팅.				
		var beforeEdittype1 = this.dxGrid.getCellProperty("body", i, "edittype").replace("expr:", "");
		this.dxGrid.setCellProperty("body", i, "edittype", "expr:DT_IPSA3 == '00' ? " + beforeEdittype1 + " : nexacro.toNumber('" + workDay + "') > nexacro.toNumber(DT_TOIJIK2) ? nexacro.toNumber('" + workDay + "') < nexacro.toNumber(DT_IPSA3) ? 'none' : " + etcEdittype + " : " + this.dxGrid.getCellProperty("body", i, "edittype").replace("expr:", ""));
		this.dxGrid.setCellProperty("body", i, "edittype", "expr:DT_TOIJIK3 == '00' ? " + beforeEdittype1 + " : nexacro.toNumber('" + workDay + "') >= nexacro.toNumber(DT_IPSA3) ? nexacro.toNumber('" + workDay + "') > nexacro.toNumber(DT_TOIJIK3) ? 'none' : " + etcEdittype + " : " + this.dxGrid.getCellProperty("body", i, "edittype").replace("expr:", ""));		
		
		// 1차 근무기간 cssclass세팅.
		this.dxGrid.setCellProperty("body", i, "cssclass", "expr:nexacro.toNumber('" + workDay + "') < nexacro.toNumber(DT_IPSA1) ?  " + weekendCssclass + "'BACK_ReadOnly' : " + weekendCssclass + etcCssclass);
		this.dxGrid.setCellProperty("body", i, "cssclass", "expr:nexacro.toNumber('" + workDay + "') >= nexacro.toNumber(DT_IPSA1) ? nexacro.toNumber('" + workDay + "') > nexacro.toNumber(DT_TOIJIK1) ? " + weekendCssclass + "'BACK_ReadOnly' : " + weekendCssclass + etcCssclass + " : " + this.dxGrid.getCellProperty("body", i, "cssclass").replace("expr:", ""));
		
		// 2차 근무기간 cssclass세팅.
		var beforeCssclass = this.dxGrid.getCellProperty("body", i, "cssclass").replace("expr:", "");
		this.dxGrid.setCellProperty("body", i, "cssclass", "expr:DT_IPSA2 == '00' ? " + beforeCssclass + " : nexacro.toNumber('" + workDay + "') > nexacro.toNumber(DT_TOIJIK1) ? nexacro.toNumber('" + workDay + "') < nexacro.toNumber(DT_IPSA2) ?  " + weekendCssclass + "'BACK_ReadOnly' : " + weekendCssclass + etcCssclass + " : " + this.dxGrid.getCellProperty("body", i, "cssclass").replace("expr:", ""));
		this.dxGrid.setCellProperty("body", i, "cssclass", "expr:DT_TOIJIK2 == '00' ? " + beforeCssclass + " : nexacro.toNumber('" + workDay + "') >= nexacro.toNumber(DT_IPSA2) ? nexacro.toNumber('" + workDay + "') > nexacro.toNumber(DT_TOIJIK2) ?  " + weekendCssclass + "'BACK_ReadOnly' : " + weekendCssclass + etcCssclass + " : " + this.dxGrid.getCellProperty("body", i, "cssclass").replace("expr:", ""));
		
		// 3차 근무기간 cssclass세팅.
		var beforeCssclass1 = this.dxGrid.getCellProperty("body", i, "cssclass").replace("expr:", "");
		this.dxGrid.setCellProperty("body", i, "cssclass", "expr:DT_IPSA3 == '00' ? " + beforeCssclass1 + " : nexacro.toNumber('" + workDay + "') > nexacro.toNumber(DT_TOIJIK2) ? nexacro.toNumber('" + workDay + "') < nexacro.toNumber(DT_IPSA3) ?  " + weekendCssclass + "'BACK_ReadOnly' : " + weekendCssclass + etcCssclass + " : " + this.dxGrid.getCellProperty("body", i, "cssclass").replace("expr:", ""));
		this.dxGrid.setCellProperty("body", i, "cssclass", "expr:DT_TOIJIK3 == '00' ? " + beforeCssclass1 + " : nexacro.toNumber('" + workDay + "') >= nexacro.toNumber(DT_IPSA3) ? nexacro.toNumber('" + workDay + "') > nexacro.toNumber(DT_TOIJIK3) ?  " + weekendCssclass + "'BACK_ReadOnly' : " + weekendCssclass + etcCssclass + " : " + this.dxGrid.getCellProperty("body", i, "cssclass").replace("expr:", ""));
	}
}
]]></Script>
    <Objects>
      <Dataset id="dsList" useclientlayout="true">
        <ColumnInfo>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="NO_SABUN" type="STRING" size="256"/>
          <Column id="NO_EMP" type="STRING" size="256"/>
          <Column id="DS_NAME" type="STRING" size="256"/>
          <Column id="AM_SIGUB" type="BIGDECIMAL" size="256"/>
          <Column id="TY_GUBUN" type="STRING" size="256"/>
          <Column id="DS_GUBUN" type="STRING" size="256"/>
          <Column id="NO_SORT" type="STRING" size="256"/>
          <Column id="TT_WORK" type="BIGDECIMAL" size="256"/>
          <Column id="TT_WORKCONVERT" type="BIGDECIMAL" size="256"/>
          <Column id="TT_MONTHCHAR" type="BIGDECIMAL" size="256"/>
          <Column id="D01" type="BIGDECIMAL" size="256"/>
          <Column id="D02" type="BIGDECIMAL" size="256"/>
          <Column id="D03" type="BIGDECIMAL" size="256"/>
          <Column id="D04" type="BIGDECIMAL" size="256"/>
          <Column id="D05" type="BIGDECIMAL" size="256"/>
          <Column id="D06" type="BIGDECIMAL" size="256"/>
          <Column id="D07" type="BIGDECIMAL" size="256"/>
          <Column id="D08" type="BIGDECIMAL" size="256"/>
          <Column id="D09" type="BIGDECIMAL" size="256"/>
          <Column id="D10" type="BIGDECIMAL" size="256"/>
          <Column id="D11" type="BIGDECIMAL" size="256"/>
          <Column id="D12" type="BIGDECIMAL" size="256"/>
          <Column id="D13" type="BIGDECIMAL" size="256"/>
          <Column id="D14" type="BIGDECIMAL" size="256"/>
          <Column id="D15" type="BIGDECIMAL" size="256"/>
          <Column id="D16" type="BIGDECIMAL" size="256"/>
          <Column id="D17" type="BIGDECIMAL" size="256"/>
          <Column id="D18" type="BIGDECIMAL" size="256"/>
          <Column id="D19" type="BIGDECIMAL" size="256"/>
          <Column id="D20" type="BIGDECIMAL" size="256"/>
          <Column id="D21" type="BIGDECIMAL" size="256"/>
          <Column id="D22" type="BIGDECIMAL" size="256"/>
          <Column id="D23" type="BIGDECIMAL" size="256"/>
          <Column id="D24" type="BIGDECIMAL" size="256"/>
          <Column id="D25" type="BIGDECIMAL" size="256"/>
          <Column id="D26" type="BIGDECIMAL" size="256"/>
          <Column id="D27" type="BIGDECIMAL" size="256"/>
          <Column id="D28" type="BIGDECIMAL" size="256"/>
          <Column id="D29" type="BIGDECIMAL" size="256"/>
          <Column id="D30" type="BIGDECIMAL" size="256"/>
          <Column id="D31" type="BIGDECIMAL" size="256"/>
          <Column id="NO_ID" type="STRING" size="256"/>
          <Column id="DT_IPSA1" type="STRING" size="256"/>
          <Column id="DT_TOIJIK1" type="STRING" size="256"/>
          <Column id="DT_IPSA2" type="STRING" size="256"/>
          <Column id="DT_TOIJIK2" type="STRING" size="256"/>
          <Column id="DT_IPSA3" type="STRING" size="256"/>
          <Column id="DT_TOIJIK3" type="STRING" size="256"/>
          <Column id="nx_flag" type="STRING" size="256"/>
          <Column id="nx_sort" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DSBPR_PERSON_MONTH_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DSBPR_PERSONS_MONTH_INSERT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="DT_WORK" type="STRING" size="256"/>
          <Column id="DS_SITE" type="STRING" size="256"/>
          <Column id="CD_HADO" type="STRING" size="256"/>
          <Column id="DS_HADO" type="STRING" size="256"/>
          <Column id="CD_COST" type="STRING" size="256"/>
          <Column id="DS_COST" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_SITE"/>
            <Col id="DT_WORK"/>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item2" compid="divSearch.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_SITE.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_SITE"/>
      <BindItem id="item3" compid="divSearch.form.cfCD_HADO.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_HADO"/>
      <BindItem id="item4" compid="divSearch.form.cfCD_HADO.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_HADO"/>
      <BindItem id="item0" compid="divSearch.form.tclDT_WORK.form.TextBox" propid="value" datasetid="dsSearch" columnid="DT_WORK"/>
    </Bind>
  </Form>
</FDL>
