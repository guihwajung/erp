<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="DHZ_GYUMJIK" width="1280" height="720" titletext="겸직등록" onload="DWA_SILHENG_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="1" left="0" top="10" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrollbartype="auto auto">
          <Layouts>
            <Layout>
              <Static id="staYR_BUDGET" taborder="1" left="0.0" top="10.0" width="92.0" height="24.0" text="예산년도" cssclass="sta_WF_SchLabelE"/>
              <Div id="cctclYR_BUDGET" taborder="2" left="staYR_BUDGET:0.0" top="10.0" width="60" height="24.0" url="cmm::cmmCalYY.xfdl" text=""/>
              <Static id="staID_USER" taborder="3" left="cctclYR_BUDGET:0.0" top="10.0" width="92.0" height="24.0" text="사용자" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfUser" CodeFindName="DHX_CFIDSABUN" CDTextWidth="80" taborder="4" FitToContents="true" left="staID_USER:0.0" top="10.0" width="200" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Div id="divDataLeft" taborder="0" left="0" top="0" bottom="0" width="75%">
                <Layouts>
                  <Layout>
                    <Static id="sta01" taborder="0" text="귀속부서" left="0" top="0" width="100%" height="20" cssclass="sta_TITLE_Bg"/>
                    <Grid id="objGridMaster" taborder="0" left="0" top="sta01:5" bottom="0" right="0"/>
                  </Layout>
                </Layouts>
              </Div>
              <Div id="divSplitter" taborder="0" left="divDataLeft:5" top="0" width="40" bottom="0">
                <Layouts>
                  <Layout>
                    <Button id="btnMove" taborder="1" text="&gt;" left="0" top="50%" right="0" height="25" onclick="divData_divSplitter_btnMove_onclick"/>
                    <Button id="btnMoveAll" taborder="0" text="&gt;&gt;" left="0" top="btnMove:5" right="0" height="25" onclick="divData_divSplitter_btnMoveAll_onclick" visible="false"/>
                  </Layout>
                </Layouts>
              </Div>
              <Div id="divDataRight" taborder="0" left="divSplitter:5" top="0" bottom="0" right="0">
                <Layouts>
                  <Layout>
                    <Static id="sta02" taborder="0" text="겸직귀속부서" left="0" top="0" width="100%" height="20" cssclass="sta_TITLE_Bg"/>
                    <Grid id="objGrid" taborder="0" left="0" top="sta02:5" bottom="0" right="0"/>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DIQPR_GYUMJIK_SELECT</Col>
          </Row>
          <Row>
            <Col id="SP">DIQPR_GYUMJIK_INSERT</Col>
            <Col id="TARGET">insert</Col>
          </Row>
          <Row>
            <Col id="TARGET">delete</Col>
            <Col id="SP">DIQPR_GYUMJIK_DELETE</Col>
          </Row>
          <Row>
            <Col id="TARGET">selectDept</Col>
            <Col id="SP">DIQPR_ACNTUNIT_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="YR_BUDGET" type="STRING" size="256"/>
          <Column id="ID_USER" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CORP"/>
            <Col id="ID_USER"/>
            <Col id="YR_BUDGET"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsListDept"/>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.DWA_SILHENG_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();	
	
	//this.ccfCorp.form.DSTextBox.set_value(this.AuthClient.DS_CORP); 
	//this.ccfCorp.form.CDTextBox.set_value(this.AuthClient.CD_CORP);
	
	var today = this.gfnGetDate().substr(0,4);
	this.dsSearch.setColumn(0, "YR_BUDGET", today);
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
// 	this.FormBtns.Add.set_enable(false);
// 	this.FormBtns.Del.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	//this.btn1 = this.gfnFormButtonAdd("Detail", "fnDetail1");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	//this.ccfCorp = this.divSearch.form.ccfCorp;
	this.ccfUser = this.divSearch.form.ccfUser;
	//this.dxGrid = this.divData.form.objGrid;
	this.dxGrid = this.divData.form.divDataRight.form.objGrid;
	this.dxGridDept = this.divData.form.divDataLeft.form.objGridMaster;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {

	this.ccfUser.CodeFindName = "DZX_CFUSERBYCORP";

	this.ccfUser.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	this.gfnGridInit(this.dxGrid, this.dsList, "DI", "DIQ_GYUMJIK");
	
	// 그리드 초기화
	this.gfnGridInit(this.dxGridDept, this.dsListDept, "DI", "DIQ_GYUMJIK1", "CD_DEPT_ACNT", "LV_DEPT_ACNT");
	this.dsListDept.addEventHandler("oncolumnchanged", this.fnGridDept_ColumnChanged, this);
	this.dxGridDept.sort="false";
	
	//this.dxGridDept.set_selecttype("cell");
	
	//this.dxGrid.setCellProperty("body", this.dxGrid.getBindCellIndex("body", "CD_ROLE"), "expandshow", "hide");		
	//this.dxGrid.setCellProperty("body", this.dxGrid.getBindCellIndex("body", "CD_ROLE"), "edittype"  , "none");
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("ID_USER", "string");
	this.dsSelect.addColumn("YR_BUDGET", "string");

	this.dsInsert = new Dataset();
	this.dsInsert.addColumn("YR_BUDGET", "string");
	this.dsInsert.addColumn("CD_CORP", "string");
	this.dsInsert.addColumn("ID_USER", "string");
	this.dsInsert.addColumn("CD_DEPT", "string");
	this.dsInsert.addColumn("CD_ROLE", "string");
	this.dsInsert.addColumn("DT_EXPIRY", "string");
	this.dsInsert.addColumn("ID_INSERT", "string");

	this.dsDelete = new Dataset();
	this.dsDelete.addColumn("ID_USER", "string");
	this.dsDelete.addColumn("CD_DEPT", "string");
	this.dsDelete.addColumn("CD_CORP", "string");
	
	this.dsSelectDept = new Dataset();
	this.dsSelectDept.addColumn("YR_BUDGET", "string");
	this.dsSelectDept.addColumn("YN_USE", "string");

}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect2 = function() {
	if(!this.fnValidate()) return;

	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "ID_USER", this.dsSearch.getColumn(0, "ID_USER"));
	this.dsSelect.setColumn(0, "YR_BUDGET", this.dsSearch.getColumn(0, "YR_BUDGET"));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
  *	부서 조회 버튼
  */
this.fnSelect = function() {
//this.fnSelectDept = function() {
	//if (!this.fnSelectValidate()) return false;
	if(!this.fnValidate()) return;

	this.gfnGridBeforeSelect(this.dxGridDept);
	
	this.dsSelectDept.clearData();
	this.dsSelectDept.addRow();

// 	this.dsSelectDept.setColumn(0, "CD_DEPT_ACNT", this.dsSearch.getColumn(0, "CD_DEPT_ACNT"));
// 	this.dsSelectDept.setColumn(0, "TY_USE", this.dsSearch.getColumn(0, "TY_USE"));
 	
	this.dsSelectDept.setColumn(0, "YR_BUDGET", this.dsSearch.getColumn(0, "YR_BUDGET"));
	this.dsSelectDept.setColumn(0, "YN_USE", "");

	var strSvcId    = "selectDept";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "selectDept=dsSelectDept";
	var outData     = "dsListDept=selectDept0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	var nRow = this.gfnGridAdd(this.dxGrid);
	
	//this.dsList.set_enableevent(false);
	this.dsList.setColumn(nRow, "CD_ROLE", "R00"); //기본권한 기본
	
	//this.dsList.set_enableevent(true);
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	if(!this.gfnGridIsRow(this.dxGrid)){
		this.gfnAlert("데이터를 선택하세요.");
		return;
	}
	
	//기본권한이 아닐경우
	/*
	if(this.dsList.getColumn(this.dsList.rowposition, "CD_ROLE") != "R00"){
		this.gfnAlert("기본권한(R00)만 삭제 가능합니다.");
		return;
	}
	*/

	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
		// 그리드 필수항목 체크
	if (!this.gfnGridValidate(this.dxGrid)) return;	

	this.dxGrid.updateToDataset();
	
	this.dsInsert.clearData();
	this.dsDelete.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		
		switch(flag) {
			case "I":
				
				var nrow = this.dsInsert.addRow();
				this.dsInsert.setColumn(nrow, "CD_CORP", "01");
				this.dsInsert.setColumn(nrow, "YR_BUDGET", this.dsSearch.getColumn(0, "YR_BUDGET"));
				this.dsInsert.setColumn(nrow, "ID_USER", this.dsSearch.getColumn(0, "ID_USER"));
				this.dsInsert.setColumn(nrow, "CD_DEPT", this.dsList.getColumn(i, "CD_DEPT"));
				this.dsInsert.setColumn(nrow, "CD_ROLE", this.dsList.getColumn(i, "CD_ROLE"));				
				this.dsInsert.setColumn(nrow, "DT_EXPIRY", this.dsList.getColumn(i, "DT_EXPIRY"));
				this.dsInsert.setColumn(nrow, "ID_INSERT", this.AuthClient.ID_USER);
				
			break;
			
			case "D":
			
				var nrow = this.dsDelete.addRow();
				
				this.dsDelete.setColumn(nrow, "ID_USER", this.ccfUser.form.CDTextBox.value);
				this.dsDelete.setColumn(nrow, "CD_DEPT", this.dsList.getColumn(i, "CD_DEPT"));
				this.dsDelete.setColumn(nrow, "CD_CORP", "01");
			
			break;
		}
	}

	if (this.dsInsert.rowcount == 0 && this.dsDelete.rowcount == 0) return;
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "insert=dsInsert delete=dsDelete";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
	
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnValidate = function() {

	if (this.gfnIsNull(this.dsSearch.getColumn(0,"YR_BUDGET"))) {
	
		this.gfnAlert("예산년도를 입력하세요.");
		return false;
	}

	if (this.gfnIsNull(this.ccfUser.form.CDTextBox.value)) {
		this.fnVaidateCallback = function() {
			this.ccfUser.form.CDTextBox.setFocus();
		}
		this.gfnAlert("사용자를 입력하세요.");
		return false;
	}
	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
	}

	if (svcID == "selectDept") {
		this.fnSelect2();
		this.gfnGridAfterSelect(this.dxGridDept);
	}
	
	if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
};

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if(id == "ccfUser"){
		dsUserParam.setColumn(nrow, "CD_CORP", "");
	}
	return true;
};



this.fnGrid_BeforuserDataSetParam=function(id, dsUserParam, nrow){

}
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
 
 //그리드 값변경 이벤트
this.fnGridDept_ColumnChanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
 	if(e.columnid == 'CHK'){
		this.fnSetCheckedUpperDept(obj, e.row, e.newvalue);
// 		if(!this.gfnIsNull(e.newvalue) && e.newvalue != e.oldvalue){
// 			obj.setColumn(e.row, "CD_DEPT_UPPER", "");		//상위귀속부서코드
// 			obj.setColumn(e.row, "DS_DEPT_ACNT_UPPER", "");	//상위귀속부서명
// 			obj.setColumn(e.row, "CD_DEPT_SELFACNT", "");	//세무단위코드
// 			obj.setColumn(e.row, "DS_DEPT_SELFACNT", "");	//세무단위명
// 		}
 	}
};

this.fnSetCheckedUpperDept = function(objDs, nRow, newValue) {
	var CD_DEPT_UPPER = objDs.getColumn(nRow, "CD_DEPT_UPPER");
	var CD_DEPT_ACNT = objDs.getColumn(nRow, "CD_DEPT_ACNT");
	var DS_DEPT_ACNT = objDs.getColumn(nRow, "DS_DEPT_ACNT");
	var LV_DEPT_ACNT = objDs.getColumn(nRow, "LV_DEPT_ACNT");
	var findRow = objDs.findRowExpr("!dataset.parent.gfnIsNull(CD_DEPT_UPPER) && CD_DEPT_UPPER =='"+CD_DEPT_ACNT+"' && nx_flag != '#'");
	var arrRows = objDs.extractRowsNF("!dataset.parent.gfnIsNull(CD_DEPT_UPPER) && CD_DEPT_UPPER =='"+CD_DEPT_ACNT+"' && nx_flag != '#'");
	//trace("fnSetCheckedUpperDept 호출" + nRow +  " LV_DEPT_ACNT->" + LV_DEPT_ACNT + "/ CD_DEPT_ACNT->" + CD_DEPT_ACNT + "/ DS_DEPT_ACNT->" + DS_DEPT_ACNT + "/ CD_DEPT_UPPER->" + CD_DEPT_UPPER + "\n" + 
	//"findRow->" + findRow+ "\n" + 	"arrRows->" + arrRows )
	
	// 하위부서 있는지 확인
	if(findRow > -1){
		objDs.set_enableevent(false);
		for (i = 0; i < arrRows.length; i++) {
			var deptRows1 = arrRows[i];
			objDs.setColumn(deptRows1, "CHK", newValue);
			//this.fnSetCheckedUpperDept(objDs, deptRows, newValue);
			//trace(deptRows + " " + objDs.getColumn(deptRows, "LV_DEPT_ACNT") + " / " + objDs.getColumn(deptRows, "CD_DEPT_ACNT") + " / " + objDs.getColumn(deptRows, "DS_DEPT_ACNT"));
			
			var arrRowsLower2 = objDs.extractRowsNF("!dataset.parent.gfnIsNull(CD_DEPT_UPPER) && CD_DEPT_UPPER =='"+objDs.getColumn(deptRows1, "CD_DEPT_ACNT")+"' && nx_flag != '#'");
			for (k = 0; k < arrRowsLower2.length; k++) {
				var deptRows2 = arrRowsLower2[k];
				objDs.setColumn(deptRows2, "CHK", newValue);

				var arrRowsLower3 = objDs.extractRowsNF("!dataset.parent.gfnIsNull(CD_DEPT_UPPER) && CD_DEPT_UPPER =='"+objDs.getColumn(deptRows2, "CD_DEPT_ACNT")+"' && nx_flag != '#'");
				for (j = 0; j < arrRowsLower3.length; j++) {
					var deptRows3 = arrRowsLower3[j];
					objDs.setColumn(deptRows3, "CHK", newValue);
					//trace(deptRows2 + " 하위부서->" + objDs.getColumn(deptRows2, "LV_DEPT_ACNT") + " / " + objDs.getColumn(deptRows2, "CD_DEPT_ACNT") + " / " + objDs.getColumn(deptRows2, "DS_DEPT_ACNT"));
						
						var arrRowsLower4 = objDs.extractRowsNF("!dataset.parent.gfnIsNull(CD_DEPT_UPPER) && CD_DEPT_UPPER =='"+objDs.getColumn(deptRows3, "CD_DEPT_ACNT")+"' && nx_flag != '#'");
						for (t = 0; t < arrRowsLower4.length; t++) {
							var deptRows4 = arrRowsLower4[t];
							objDs.setColumn(deptRows4, "CHK", newValue);
							//trace(deptRows3 + " 하위부서->" + objDs.getColumn(deptRows3, "LV_DEPT_ACNT") + " / " + objDs.getColumn(deptRows3, "CD_DEPT_ACNT") + " / " + objDs.getColumn(deptRows3, "DS_DEPT_ACNT"));
				
	
					}
				}
			}
		}
		objDs.set_enableevent(true);
		
	}else{
		return;
	}
}


this.fnsetCheckBox = function(objDs, deptRows, newValue) {
	var arrRowsLower2 = objDs.extractRowsNF("!dataset.parent.gfnIsNull(CD_DEPT_UPPER) && CD_DEPT_UPPER =='"+objDs.getColumn(deptRows, "CD_DEPT_ACNT")+"' && nx_flag != '#'");
	for (k = 0; k < arrRowsLower2.length; k++) {
		var deptRows2 = arrRowsLower2[k];
		objDs.setColumn(deptRows2, "CHK", newValue);
		trace(deptRows2 + " 하위부서->" + objDs.getColumn(deptRows2, "LV_DEPT_ACNT") + " / " + objDs.getColumn(deptRows2, "CD_DEPT_ACNT") + " / " + objDs.getColumn(deptRows2, "DS_DEPT_ACNT"));
	}
}

/************************************************************************
 * 기타 이벤트
 ************************************************************************/				


this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
		this.gfnGridClear(this.dxGridDept);	
	}
};

this.divData_divSplitter_btnMove_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{	
	if(!this.fnValidate()) return;

	if (this.dxGridDept.rowcount == 0) return false;
	//if(this.dsListDept.getColumn(this.dsListDept.rowposition, this.ucFlag) == "#") return false;
													//	YN_SLIPACCEPT =='Y'		
	var nChkRow = this.dsListDept.findRowExpr("CHK == 1 && nx_flag != '#'");
	if(nChkRow == -1){
		this.gfnAlert("귀속부서를 선택하세요");		
		return;
	}	
	var nAddRow;
	this.dsList.set_enableevent(false);
	for(var i=0; i<this.dsListDept.rowcount; i++){
		if(this.dsListDept.getColumn(i, "CHK") == 1  && this.dsListDept.getColumn(i, this.ucFlag) != "#"){
			var CD_DEPT_ACNT = this.dsListDept.getColumn(i, "CD_DEPT_ACNT");
			var DS_DEPT_ACNT = this.dsListDept.getColumn(i, "DS_DEPT_ACNT");
			var nExsitsRow = this.dsList.findRowExpr("CD_DEPT =='"+ this.dsListDept.getColumn(i, "CD_DEPT_ACNT") +"'");
			if(nExsitsRow == -1){
 				//nAddRow = this.gfnGridAdd(this.dxGrid);	
				var nAddRow = this.dsList.addRow();
 				this.dsList.setColumn(nAddRow, "CD_DEPT", this.dsListDept.getColumn(i, "CD_DEPT_ACNT"));	// 겸직부서코드
 				this.dsList.setColumn(nAddRow, "DS_DEPT", this.dsListDept.getColumn(i, "DS_DEPT_ACNT"));	// 겸직부서명
 				this.dsList.setColumn(nAddRow, "CD_ROLE", "R00");	// Role코드
 				this.dsList.setColumn(nAddRow, "NM_ROLE", "기본권한");	// Role명
				this.dsList.setColumn(nAddRow, this.ucFlag, "I");
			}			
		}
	}
	this.dsList.set_enableevent(true);
	this.gfnSetFormStatus(this, "I");

	this.dxGrid.setFocus();
};
this.divSearch_stabu_onclick = function(obj:nexacro.Static,e:nexacro.ClickEventInfo)
{
	
};
]]></Script>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfUser.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="ID_USER"/>
      <BindItem id="item1" compid="divSearch.form.cctclYR_BUDGET.form.TextBox" propid="value" datasetid="dsSearch" columnid="YR_BUDGET"/>
    </Bind>
  </Form>
</FDL>
