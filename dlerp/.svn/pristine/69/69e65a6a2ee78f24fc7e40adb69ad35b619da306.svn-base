<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="거래처삭제정보" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="sta01" taborder="4" text="조회조건" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Radio id="ccboTY_TYPE" taborder="2" left="sta01:0.0" top="10.0" width="100" height="24.0" innerdataset="dsTY_TYPE" datacolumn="DS_CODE" codecolumn="CD_CODE" direction="vertical"/>
              <Combo id="ccboVENDOR_TYPE" taborder="9" left="ccboTY_TYPE:0.0" top="10.0" width="120" height="24.0" innerdataset="dsVENDOR_TYPE" datacolumn="VALUE" codecolumn="CODE" value="0" onitemchanged="fnSearchInit" index="0" text=""/>
              <Edit id="txtSEARCH" taborder="1" left="ccboVENDOR_TYPE:0.0" top="10.0" width="120" height="24.0" onkeydown="divSearch_txtSEARCH_onkeydown"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Div id="divDataLeft" taborder="0" left="0" top="0" bottom="0" width="560">
                <Layouts>
                  <Layout>
                    <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
                  </Layout>
                </Layouts>
              </Div>
              <Div id="divDataRight" taborder="0" left="divDataLeft:10" top="0" bottom="0" right="0" text="">
                <Layouts>
                  <Layout>
                    <Static id="sta00" taborder="0" text="상세정보" left="0" top="0" width="100%" height="22" cssclass="sta_TITLE_Bg"/>
                    <Static id="sta01" taborder="1" text="거래처코드" left="0" top="30" width="100" height="30" cssclass="sta_WF_tablelabel"/>
                    <Static id="sta02" taborder="2" text="거래처명칭" left="0" top="sta01:-1" width="100" height="30" cssclass="sta_WF_tablelabel"/>
                    <Static id="sta03" taborder="3" text="사업자등록번호" left="0" top="sta02:-1" width="100" height="30" cssclass="sta_WF_tablelabel"/>
                    <Static id="sta04" taborder="4" text="대표자명" left="0" top="sta03:-1" width="100" height="30" cssclass="sta_WF_tablelabel"/>
                    <Static id="sta05" taborder="5" text="우편번호" left="0" top="sta04:-1" width="100" height="30" cssclass="sta_WF_tablelabel"/>
                    <Static id="sta06" taborder="6" text="주소" left="0" top="sta05:-1" width="100" height="30" cssclass="sta_WF_tablelabel"/>
                    <Static id="sta07" taborder="7" text="전화번호" left="0" top="sta06:-1" width="100" height="30" cssclass="sta_WF_tablelabel"/>
                    <Static id="sta08" taborder="7" text="핸드폰번호" left="0" top="sta07:-1" width="100" height="30" cssclass="sta_WF_tablelabel"/>
                    <Static id="sta09" taborder="7" text="업종" left="0" top="sta08:-1" width="100" height="30" cssclass="sta_WF_tablelabel"/>
                    <Static id="sta10" taborder="7" text="업태" left="0" top="sta09:-1" width="100" height="30" cssclass="sta_WF_tablelabel"/>
                    <Static id="sta11" taborder="7" text="비고" left="0" top="sta10:-1" width="100" height="30" cssclass="sta_WF_tablelabel"/>
                    <Static id="sta12" taborder="14" left="sta01:-1" top="30" width="600" height="30" cssclass="sta_WF_tablebg"/>
                    <Static id="sta13" taborder="15" left="sta02:-1" top="sta12:-1" width="600" height="30" cssclass="sta_WF_tablebg"/>
                    <Static id="sta14" taborder="16" left="sta03:-1" top="sta13:-1" width="600" height="30" cssclass="sta_WF_tablebg"/>
                    <Static id="sta15" taborder="17" left="sta04:-1" top="sta14:-1" width="600" height="30" cssclass="sta_WF_tablebg"/>
                    <Static id="sta16" taborder="18" left="sta05:-1" top="sta15:-1" width="600" height="30" cssclass="sta_WF_tablebg"/>
                    <Static id="sta17" taborder="19" left="sta06:-1" top="sta16:-1" width="600" height="30" cssclass="sta_WF_tablebg"/>
                    <Static id="sta18" taborder="20" left="sta07:-1" top="sta17:-1" width="600" height="30" cssclass="sta_WF_tablebg"/>
                    <Static id="sta19" taborder="20" left="sta08:-1" top="sta18:-1" width="600" height="30" cssclass="sta_WF_tablebg"/>
                    <Static id="sta20" taborder="20" left="sta09:-1" top="sta19:-1" width="600" height="30" cssclass="sta_WF_tablebg"/>
                    <Static id="sta21" taborder="20" left="sta10:-1" top="sta20:-1" width="600" height="30" cssclass="sta_WF_tablebg"/>
                    <Static id="sta22" taborder="20" left="sta11:-1" top="sta21:-1" width="600" height="30" cssclass="sta_WF_tablebg"/>
                    <Edit id="edt00" taborder="28" left="sta01:5" top="35" width="350" height="20"/>
                    <Edit id="edt01" taborder="28" left="sta02:5" top="edt00:9" width="350" height="20"/>
                    <Edit id="edt02" taborder="28" left="sta03:5" top="edt01:9" width="350" height="20"/>
                    <Edit id="edt03" taborder="28" left="sta04:5" top="edt02:9" width="350" height="20"/>
                    <Edit id="edt04" taborder="28" left="sta05:5" top="edt03:9" width="350" height="20"/>
                    <Edit id="edt05" taborder="28" left="sta06:5" top="edt04:9" width="350" height="20"/>
                    <Edit id="edt06" taborder="28" left="sta07:5" top="edt05:9" width="350" height="20"/>
                    <Edit id="edt07" taborder="28" left="sta08:5" top="edt06:9" width="350" height="20"/>
                    <Edit id="edt08" taborder="28" left="sta09:5" top="edt07:9" width="350" height="20"/>
                    <Edit id="edt09" taborder="28" left="sta10:5" top="edt08:9" width="350" height="20"/>
                    <Edit id="edt10" taborder="28" left="sta11:5" top="edt09:9" width="350" height="20"/>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
	//this.FormBtns.Select.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnRestore = this.gfnFormButtonAdd("Restore", "fnRestore");
	this.btnDelete = this.gfnFormButtonAdd("Delete", "fnDelete");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccboTY_TYPE = this.divSearch.form.ccboTY_TYPE;
	this.ccboVENDOR_TYPE = this.divSearch.form.ccboVENDOR_TYPE;
	this.txtSEARCH = this.divSearch.form.txtSEARCH;
	this.dxGrid = this.divData.form.divDataLeft.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DH", "DHZ_UNUSEVENDOR");
	
	// 셀 수정가능 여부
	this.dxGrid.EnterCell = "fnGrid_EnterCell";
	
	// 셀 변경 후 이벤트
	this.dxGrid.AfterEdit = "fnGrid_AfterEdit";
	
	// 그리드 코드파인드 설정
	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
	
	// 전체체크박스 체크/해제 이벤트
	this.dxGrid.AfterAllCheck = "fnGrid_AfterAllCheck";
	
	// BUTTON, BUTTON-IN 처리
	this.dxGrid.addEventHandler("onexpandup", this.fnGrid_ExpandUp, this);
	
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("TYPE_SELECT", "string");
	this.dsSelect.addColumn("CD_VENDOR", "string");

	this.dsUpdate = new Dataset();
	this.dsUpdate.addColumn("CD_VENDOR", "string");
	
	this.dsDelete = new Dataset();
	this.dsDelete.addColumn("CD_VENDOR", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "TYPE_SELECT", this.dsSearch.getColumn(0, "TY_TYPE"));
	this.dsSelect.setColumn(0, "CD_VENDOR", this.dsSearch.getColumn(0, "VENDOR_TYPE"));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;	
	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGrid_EnterCell = function(obj:nexacro.Grid, row, cell) {
	var colnm = this.gfnGridGetBindColumnNameByIndex(obj, cell);
	return true;
}

this.fnGrid_AfterEdit = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo) {
}

this.fnGrid_BeforeUserDataSetParam = function(id, dsUserParam, nrow) {	
}

this.fnGrid_AfterAllCheck = function(obj:nexacro.Grid, cell, check) {
	var colnm = this.gfnGridGetBindColumnNameByIndex(obj, cell);
	if(colnm == "CHK") {
		trace("fnGrid_AfterAllCheck] " + col + "," + check);
	}
}
 
this.fnGrid_ExpandUp = function(obj:nexacro.Grid,e:nexacro.GridMouseEventInfo) {
	var colnm = this.gfnGridGetBindColumnNameByIndex(obj, e.cell);
	if(colnm == "BUTTON") {
		this.gfnAlert("BUTTON 처리");
	}
	else if (colnm == "BUTTON_IN") {
		this.gfnAlert("BUTTON-IN 처리");
	}
}
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);
	}
};

this.fnRestore = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }	
	this.gfnConfirm("복원하시겠습니까?", "fnRestore_callback");
}

this.fnRestore_callback = function(strId, val) 
{
	if(val == true) {
	if (!this.gfnGridValidate(this.dxGrid)) return;
	
	this.dxGrid.updateToDataset();	
	this.dsDelete.clearData();	

	var nrow = this.dsUpdate.addRow();
	this.dsUpdate.setColumn(nrow, "CD_VENDOR", this.dsList.getColumn(this.dsList.rowposition, "CD_VENDOR"));
	
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "update=dsUpdate";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
	}	
}

this.fnDelete = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }	
	this.gfnConfirm("DB에서 영구 삭제되어 복구할 수 없습니다! 그래도 삭제 하시겠습니까?", "fnDelete_callback");
}
this.fnDelete_callback = function(strId, val) 
{
	if(val == true) {
	if (!this.gfnGridValidate(this.dxGrid)) return;
	
	this.dxGrid.updateToDataset();	
	this.dsDelete.clearData();	

	var nrow = this.dsDelete.addRow();
	this.dsDelete.setColumn(nrow, "CD_VENDOR", this.dsList.getColumn(this.dsList.rowposition, "CD_VENDOR"));
	
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "delete=dsDelete";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
	}	
}
]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DHZPR_UNUSEVENDOR_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">update</Col>
            <Col id="SP">DHZPR_VENDOR_RESTORE</Col>
          </Row>
          <Row>
            <Col id="TARGET">delete</Col>
            <Col id="SP">DHZPR_VENDOR_PERM_DELETE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_TYPE" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">C</Col>
            <Col id="DS_CODE">코드</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">N</Col>
            <Col id="DS_CODE">명칭</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsVENDOR_TYPE">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">A</Col>
            <Col id="VALUE">전체</Col>
          </Row>
          <Row>
            <Col id="CODE">F</Col>
            <Col id="VALUE">일반</Col>
          </Row>
          <Row>
            <Col id="CODE">B</Col>
            <Col id="VALUE">금융</Col>
          </Row>
          <Row>
            <Col id="CODE">P</Col>
            <Col id="VALUE">개인</Col>
          </Row>
          <Row>
            <Col id="CODE">X</Col>
            <Col id="VALUE">기타</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch">
        <ColumnInfo>
          <Column id="TY_TYPE" type="STRING" size="256"/>
          <Column id="VENDOR_TYPE" type="STRING" size="256"/>
          <Column id="CD_VENDOR" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TY_TYPE">N</Col>
            <Col id="VENDOR_TYPE">A</Col>
            <Col id="CD_VENDOR"/>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccboTY_TYPE" propid="value" datasetid="dsSearch" columnid="TY_TYPE"/>
      <BindItem id="item1" compid="divSearch.form.ccboVENDOR_TYPE" propid="value" datasetid="dsSearch" columnid="VENDOR_TYPE"/>
      <BindItem id="item2" compid="divSearch.form.txtSEARCH" propid="value" datasetid="dsSearch" columnid="CD_VENDOR"/>
    </Bind>
  </Form>
</FDL>
