<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="380" height="180" maxwidth="430" maxheight="220" titletext="평가항목복사" onload="form_onload">
    <Layouts>
      <Layout>
        <Static id="staTITLE" taborder="0" text="평가항목복사" left="0" top="0" width="100.00%" height="30" cssclass="sta_TITLE_Bg"/>
        <Static id="staTERM_EVAL_FROM1" taborder="1" text="대상기수" top="40" width="60" height="20" left="20" cssclass="sta_WF_tablelabelE"/>
        <Static id="staTERM_EVAL_TO1" taborder="2" text="생성기수" top="70" width="60" height="20" left="20" cssclass="sta_WF_tablelabelE"/>
        <Combo id="cboTERM_EVAL_FROM" taborder="8" left="81" top="40" width="100" height="20" datacolumn="DS_CODE" codecolumn="CD_CODE" value="%" onitemchanged="fnSearchInit" text="" index="0" innerdataset="dsTERM_EVAL"/>
        <Combo id="cboTERM_EVAL_TO" taborder="6" left="81" top="70" width="100" height="20" datacolumn="DS_CODE" codecolumn="CD_CODE" value="%" onitemchanged="fnSearchInit" text="" index="0" innerdataset="dsTERM_EVAL"/>
        <Static id="staTERM_EVAL_FROM2" taborder="6" text="의 모든 평가항목 가중치 데이터를" top="40" width="190" height="20" left="190"/>
        <Static id="staTERM_EVAL_TO2" taborder="7" text="(으)로 복사합니다." top="70" width="190" height="20" left="188"/>
        <Div id="divBtns" left="128" top="117" width="200" height="40">
          <Layouts>
            <Layout>
              <Button id="btnOK" taborder="12" text="복사" left="0" top="10" width="60" height="27" onclick="btnOK_onclick"/>
              <Button id="btnCANCLE" taborder="13" text="취소" left="btnOK:30" top="10" width="60" height="27" onclick="btnCANCLE_onclick"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);
	// ---------------------------//
	
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	this.fnSetCombo();
};

/************************************************************************
 * 변수 선언  
 ************************************************************************/
this.fnSetVariable = function() {
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

}

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	
	var P_GUBUN = this.getOwnerFrame().P_GUBUN;	// ITEM(항목) / WEIGH(가중치)
	var P_TERM_EVAL = this.getOwnerFrame().P_TERM_EVAL;
	
	var strTitle = (P_GUBUN == "WEIGH") ? "평가가중치복사 " : "평가항목복사";
	this.staTITLE.set_text(strTitle) // set  

	var strText = (P_GUBUN == "WEIGH") ? "가중치 " : "";
	strText = "의 모든 평가항목 " + strText + "데이터를";
	this.staTERM_EVAL_FROM2.set_text(strText) // set  
	//trace("P_GUBUN->" + P_GUBUN + " / P_TERM_EVAL->" + P_TERM_EVAL);
};

// 확인
this.btnOK_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if (!this.fnDataValidate()) return;

	var cboTERM_EVAL_FROM = this.cboTERM_EVAL_FROM.value;
	var cboTERM_EVAL_TO = this.cboTERM_EVAL_TO.value;	
	this.gfnConfirm("대상기수 " + cboTERM_EVAL_FROM +" 데이터를 " + cboTERM_EVAL_TO + " 으로 복사 하시겠습니까?", "fnCopyCallback");
};

this.btnCANCLE_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	// 취소
	this.getParentContext().close(false);
};

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
 this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	return true;
} 


/************************************************************************
 * Validate
 ************************************************************************/
this.fnDataValidate = function(){
	var msg = "은(는) 필수입력 입니다.";

	var cboTERM_EVAL_FROM = this.cboTERM_EVAL_FROM.value;
	var cboTERM_EVAL_TO = this.cboTERM_EVAL_TO.value;
	
	if(this.gfnIsNull(this.gfnTrim(cboTERM_EVAL_FROM))){
		this.gfnAlert("대상기수" + msg);
		this.cboTERM_EVAL_FROM.setFocus();
		return false;
	}
	
	if(this.gfnIsNull(this.gfnTrim(cboTERM_EVAL_TO))){
		this.gfnAlert("생성기수" + msg);
		this.cboTERM_EVAL_TO.setFocus();
		return false;
	}
	
	if (cboTERM_EVAL_FROM == cboTERM_EVAL_TO) {
		this.gfnAlert("같은 평가 기수끼리로의 복사는 불가능합니다.");
		return false; 
	}
	return true;
}

this.fnAfterCDTextChanged = function(id, codeFindData) {
}

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (errorCode != 0) {
		this.gfnAlert(errorMsg);
		return;
	}

	switch(svcID) {
		case "combo":
			if (!this.gfnIsNull(this.getOwnerFrame().P_TERM_EVAL)) {
				this.cboTERM_EVAL_FROM.set_value(this.getOwnerFrame().P_TERM_EVAL);
			}
		
			//this.cboTERM_EVAL_FROM.set_index(0);
			this.cboTERM_EVAL_TO.set_index(0);
		break;
		case "save":	// 평가항목 / 평가가중치 복사
			if (errorCode != 0) {
				this.gfnAlert(errorMsg);
				return;
			} else {
				this.getParentContext().close(true);
			}
		break;

		default:
	}
}

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
// 데이터 복사
this.fnCopyCallback = function(strId, val)  {
	if(val == false) return;
	
	this.dsSave.setColumn(0, "SABUN", this.AuthClient.ID_USER);

	if (this.dsSave.rowcount == 0) return;

	trace(this.dsSave.saveXML());

	var P_GUBUN = this.getOwnerFrame().P_GUBUN;	// ITEM(항목) / WEIGH(가중치)
	var sInData = (P_GUBUN == "ITEM") ? "copyItem=dsSave" : "copyWeight=dsSave";

	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	//var inData      = "copyItem=dsSave";
	var inData      = sInData;
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";

	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

//평가기수 콤보 조회
this.fnSetCombo = function() {

	this.dsCombo = new Dataset();
	this.dsCombo.addColumn("TY_SEL", "string");
	this.dsCombo.addColumn("YEAR_EVAL", "string");
	
	this.dsCombo.addRow();
	this.dsCombo.setColumn(0, "TY_SEL", "P");	// A: 전체 P: 필수
	this.dsCombo.setColumn(0, "YEAR_EVAL", "");

	var strSvcId    = "combo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "combo=dsCombo";
	var outData     = "dsTERM_EVAL=combo0";
	var strArg      = "";
	var callBackFnc = "fnCallback";

	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};]]></Script>
    <Objects>
      <Dataset id="dsList">
        <ColumnInfo>
          <Column id="STATE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">combo</Col>
            <Col id="SP">DAXPR_EVAL_TERMS_COMBO</Col>
          </Row>
          <Row>
            <Col id="TARGET">copyItem</Col>
            <Col id="SP">DAJPR_EVAL_ITEMS_COPY</Col>
          </Row>
          <Row>
            <Col id="TARGET">copyWeight</Col>
            <Col id="SP">DAJPR_EVAL_WEIGHTS_COPY</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTERM_EVAL">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsSave" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="TERM_EVAL_FROM" type="STRING" size="256" description="대상기수"/>
          <Column id="TERM_EVAL_TO" type="STRING" size="256" description="생성기수"/>
          <Column id="SABUN" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="cboTERM_EVAL_FROM" propid="value" datasetid="dsSave" columnid="TERM_EVAL_FROM"/>
      <BindItem id="item1" compid="cboTERM_EVAL_TO" propid="value" datasetid="dsSave" columnid="TERM_EVAL_TO"/>
    </Bind>
  </Form>
</FDL>
