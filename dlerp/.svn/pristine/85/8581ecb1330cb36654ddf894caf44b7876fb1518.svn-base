<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="New Form" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="staCD_ACNTUNIT" taborder="0" text="사업지코드" left="0.0" top="10.0" width="105.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Edit id="ctxtCD_ACNTUNIT" taborder="1" left="staCD_ACNTUNIT:0.0" top="10.0" width="120" height="24.0" value="" readonly="true"/>
              <Edit id="ctxtDS_ACNTUNIT" taborder="2" left="ctxtCD_ACNTUNIT:0.0" top="10.0" width="200" height="24.0" value="" readonly="true"/>
              <Static id="staNO_DONG" taborder="3" text="동층호" left="ctxtDS_ACNTUNIT:0.0" top="10.0" width="105.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Edit id="ctxtNO_DONG" taborder="4" left="staNO_DONG:0.0" top="10.0" width="80" height="24.0" value=""/>
              <Edit id="ctxtNO_FLOOR" taborder="5" left="ctxtNO_DONG:0.0" top="10.0" width="60" height="24.0" value=""/>
              <Edit id="ctxtNO_HO" taborder="6" left="ctxtNO_FLOOR:0.0" top="10.0" width="80" height="24.0" value=""/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg" ondragmove="divData_ondragmove">
          <Layouts>
            <Layout>
              <Div id="divSplitter" taborder="1" left="0" top="59%" width="100%" height="5" background="skyblue" cursor="ns-resize" ondrag="divData_divSplitter_ondrag"/>
              <Div id="divDataTop" taborder="0" left="0" top="0" bottom="divSplitter:5" right="0" text="">
                <Layouts>
                  <Layout>
                    <Static id="staTopTitle" taborder="0" text="기본정보" left="0" top="0" width="100%" height="22" cssclass="sta_TITLE_Bg"/>
                    <Static id="staNO_SIZE" taborder="1" text="평형" left="0" width="100" height="30" cssclass="sta_WF_tablelabel" top="staTopTitle:10" textAlign="center"/>
                    <Static id="staBgNO_SIZE" taborder="2" width="519" height="30" cssclass="sta_WF_tablebg" left="staNO_SIZE:-1" top="staTopTitle:10"/>
                    <Static id="staNO_CONTRACT" taborder="3" text="계약서번호" left="staBgNO_SIZE:-1" width="125" height="30" cssclass="sta_WF_tablelabel" top="staTopTitle:10" textAlign="center"/>
                    <Static id="staBgNO_CONTRACT" taborder="4" height="30" cssclass="sta_WF_tablebg" left="staNO_CONTRACT:-1" top="staTopTitle:10" minwidth="190" maxwidth="" right="0"/>
                    <Static id="staTY_STATE" taborder="5" text="분양상태" left="0" width="100" height="30" cssclass="sta_WF_tablelabel" top="staNO_SIZE:-1" textAlign="center"/>
                    <Static id="staBgTY_STATE" taborder="6" width="246" height="30" cssclass="sta_WF_tablebg" left="staTY_STATE:-1" top="staBgNO_SIZE:-1"/>
                    <Static id="staTY_BUNYANG" taborder="7" text="분양구분" left="staBgTY_STATE:-1" width="125" height="30" cssclass="sta_WF_tablelabel" top="staBgNO_SIZE:-1" textAlign="center"/>
                    <Static id="staBgTY_BUNYANG" taborder="8" width="150" height="30" cssclass="sta_WF_tablebg" left="staTY_BUNYANG:-1" top="staBgNO_SIZE:-1"/>
                    <Static id="staTY_CONTRACTOR" taborder="9" text="계약구분" left="staBgTY_BUNYANG:-1" width="125" height="30" cssclass="sta_WF_tablelabel" top="staNO_CONTRACT:-1" textAlign="center"/>
                    <Static id="staBgTY_CONTRACTOR" taborder="10" height="30" cssclass="sta_WF_tablebg" left="staTY_CONTRACTOR:-1" top="staBgNO_CONTRACT:-1" right="0" minwidth="190" maxwidth=""/>
                    <Static id="staDT_CONTRACT" taborder="11" text="계약일자" left="0" width="100" height="30" cssclass="sta_WF_tablelabel" top="staTY_STATE:-1" textAlign="center"/>
                    <Static id="staBgDT_CONTRACT" taborder="12" width="246" height="30" cssclass="sta_WF_tablebg" left="staDT_CONTRACT:-1" top="staBgTY_STATE:-1"/>
                    <Static id="staDS_CONTRACTOR" taborder="13" text="계약자명" left="staBgDT_CONTRACT:-1" width="125" height="30" cssclass="sta_WF_tablelabel" top="staTY_BUNYANG:-1" textAlign="center"/>
                    <Static id="staBgDS_CONTRACTOR" taborder="14" width="150" height="30" cssclass="sta_WF_tablebg" left="staDS_CONTRACTOR:-1" top="staBgTY_BUNYANG:-1"/>
                    <Static id="staNO_JUMIN" taborder="15" text="주민등록번호" left="staBgDS_CONTRACTOR:-1" width="125" height="30" cssclass="sta_WF_tablelabel" top="staTY_CONTRACTOR:-1" textAlign="center"/>
                    <Static id="staBgNO_JUMIN" taborder="16" height="30" cssclass="sta_WF_tablebg" left="staNO_JUMIN:-1" top="staBgTY_CONTRACTOR:-1" right="0" minwidth="190" maxwidth=""/>
                    <Static id="staNO_TEL" taborder="17" text="☎(자택)" left="0" width="100" height="30" cssclass="sta_WF_tablelabel" top="staDT_CONTRACT:-1" textAlign="center"/>
                    <Static id="staBgNO_TEL" taborder="18" width="246" height="30" cssclass="sta_WF_tablebg" left="staNO_TEL:-1" top="staBgDT_CONTRACT:-1"/>
                    <Static id="staNO_OFFICETEL" taborder="19" text="☎(직장)" left="staBgNO_TEL:-1" width="125" height="30" cssclass="sta_WF_tablelabel" top="staDS_CONTRACTOR:-1" textAlign="center"/>
                    <Static id="staBgNO_OFFICETEL" taborder="20" width="150" height="30" cssclass="sta_WF_tablebg" left="staNO_OFFICETEL:-1" top="staBgDS_CONTRACTOR:-1"/>
                    <Static id="staNO_MOBILE" taborder="21" text="휴대폰" left="staBgNO_OFFICETEL:-1" width="125" height="30" cssclass="sta_WF_tablelabel" top="staNO_JUMIN:-1" textAlign="center"/>
                    <Static id="staBgNO_MOBILE" taborder="22" height="30" cssclass="sta_WF_tablebg" left="staNO_MOBILE:-1" top="staBgNO_JUMIN:-1" right="0" minwidth="190" maxwidth=""/>
                    <Static id="staNO_RECPOST" taborder="23" text="주민등록주소" left="0" width="100" height="30" cssclass="sta_WF_tablelabel" top="staNO_TEL:-1" textAlign="center"/>
                    <Static id="staBgNO_RECPOST" taborder="24" height="30" cssclass="sta_WF_tablebg" left="staNO_RECPOST:-1" top="staBgNO_TEL:-1" minwidth="832" maxwidth="" right="0"/>
                    <Static id="staNO_POST" taborder="25" text="현주소" left="0" width="100" height="30" cssclass="sta_WF_tablelabel" top="staNO_RECPOST:-1" textAlign="center"/>
                    <Static id="staBgNO_POST" taborder="26" height="30" cssclass="sta_WF_tablebg" left="staNO_POST:-1" top="staBgNO_RECPOST:-1" right="0" minwidth="832" maxwidth=""/>
                    <Static id="staCD_VENDOR" taborder="27" text="사업자번호" left="0" width="100" height="30" cssclass="sta_WF_tablelabel" top="staNO_POST:-1" textAlign="center"/>
                    <Static id="staBgCD_VENDOR" taborder="28" width="246" height="30" cssclass="sta_WF_tablebg" left="staCD_VENDOR:-1" top="staBgNO_POST:-1"/>
                    <Static id="staDS_UPTAE" taborder="29" text="업태" left="staBgCD_VENDOR:-1" width="125" height="30" cssclass="sta_WF_tablelabel" top="staBgNO_POST:-1" textAlign="center"/>
                    <Static id="staBgDS_UPTAE" taborder="30" width="150" height="30" cssclass="sta_WF_tablebg" left="staDS_UPTAE:-1" top="staBgNO_POST:-1"/>
                    <Static id="staDS_UPJONG" taborder="31" text="업종" left="staBgDS_UPTAE:-1" width="125" height="30" cssclass="sta_WF_tablelabel" top="staBgNO_POST:-1" textAlign="center"/>
                    <Static id="staBgDS_UPJONG" taborder="32" height="30" cssclass="sta_WF_tablebg" left="staDS_UPJONG:-1" top="staBgNO_POST:-1" right="0" minwidth="190" maxwidth=""/>
                    <Static id="staDS_VENDOR" taborder="33" text="상호" left="0" width="100" height="30" cssclass="sta_WF_tablelabel" top="staCD_VENDOR:-1" textAlign="center"/>
                    <Static id="staBgDS_VENDOR" taborder="34" width="246" height="30" cssclass="sta_WF_tablebg" left="staDS_VENDOR:-1" top="staBgCD_VENDOR:-1"/>
                    <Static id="staTY_EBILL" taborder="35" text="세금계산서발급구분" left="staBgDS_VENDOR:-1" width="125" height="30" cssclass="sta_WF_tablelabel" top="staDS_UPTAE:-1" textAlign="center"/>
                    <Static id="staBgTY_EBILL" taborder="36" width="150" height="30" cssclass="sta_WF_tablebg" left="staTY_EBILL:-1" top="staBgDS_UPTAE:-1"/>
                    <Static id="staNO_GUJA" taborder="31" text="가상계좌" left="staBgTY_EBILL:-1" width="125" height="30" cssclass="sta_WF_tablelabel" top="staDS_UPJONG:-1" textAlign="center"/>
                    <Static id="staBgNO_GUJA" taborder="32" height="30" cssclass="sta_WF_tablebg" left="staNO_GUJA:-1" top="staBgDS_UPJONG:-1" right="0" minwidth="190" maxwidth=""/>
                    <Static id="staDS_EMAIL" taborder="39" text="e-Mail" left="0" width="100" height="30" cssclass="sta_WF_tablelabel" top="staDS_VENDOR:-1" textAlign="center"/>
                    <Static id="staBgDS_EMAIL" taborder="40" height="30" cssclass="sta_WF_tablebg" left="staDS_EMAIL:-1" top="staBgDS_VENDOR:-1" width="246"/>
                    <Static id="staYN_JOINT" taborder="37" text="공동명의계약자여부" left="staBgDS_EMAIL:-1" width="125" height="30" cssclass="sta_WF_tablelabel" top="staTY_EBILL:-1" textAlign="center"/>
                    <Static id="staBgYN_JOINT" taborder="38" height="30" cssclass="sta_WF_tablebg" left="staYN_JOINT:-1" top="staTY_EBILL:-1" width="150"/>
                    <Static id="staYN_BUNYANG" taborder="31" text="분양구분" left="staBgYN_JOINT:-1" width="125" height="30" cssclass="sta_WF_tablelabel" top="staNO_GUJA:-1" textAlign="center"/>
                    <Static id="staBgYN_BUNYANG" taborder="32" height="30" cssclass="sta_WF_tablebg" left="staYN_BUNYANG:-1" top="staBgNO_GUJA:-1" right="0" minwidth="190" maxwidth=""/>
                    <Static id="staDS_REMARK" taborder="41" text="특이사항" left="0" width="100" height="50" cssclass="sta_WF_tablelabel" top="staDS_EMAIL:-1" textAlign="center"/>
                    <Static id="staBgDS_REMARK" taborder="42" height="50" cssclass="sta_WF_tablebg" left="staDS_REMARK:-1" top="staBgDS_EMAIL:-1" right="0" minwidth="832" maxwidth=""/>
                    <Static id="staSumTitle" taborder="0" text="분양가" left="0" top="staDS_REMARK:1" width="100%" height="22" cssclass="sta_TITLE_Bg"/>
                    <Static id="staAM_LAND" taborder="41" text="토지가" left="0" width="80" height="30" cssclass="sta_WF_tablelabel" top="staSumTitle:9" textAlign="center"/>
                    <Static id="staBgAM_LAND" taborder="42" height="30" cssclass="sta_WF_tablebg" left="staAM_LAND:-1" top="staSumTitle:9" minwidth="110" right="80%"/>
                    <Static id="staAM_BUILDING" taborder="41" text="건물가" left="staBgAM_LAND:-1" width="80" height="30" cssclass="sta_WF_tablelabel" top="staSumTitle:9" textAlign="center"/>
                    <Static id="staBgAM_BUILDING" taborder="42" height="30" cssclass="sta_WF_tablebg" left="staAM_BUILDING:-1" top="staSumTitle:9" minwidth="110" right="60%"/>
                    <Static id="staAM_VAT" taborder="41" text="부가세" left="staBgAM_BUILDING:-1" width="80" height="30" cssclass="sta_WF_tablelabel" top="staSumTitle:9" textAlign="center"/>
                    <Static id="staBgAM_VAT" taborder="42" height="30" cssclass="sta_WF_tablebg" left="staAM_VAT:-1" top="staSumTitle:9" minwidth="110" right="40%"/>
                    <Static id="staAM_SELLING" taborder="41" text="분양가" left="staBgAM_VAT:-1" width="80" height="30" cssclass="sta_WF_tablelabel" top="staSumTitle:9" textAlign="center"/>
                    <Static id="staBgAM_SELLING" taborder="42" height="30" cssclass="sta_WF_tablebg" left="staAM_SELLING:-1" top="staSumTitle:9" minwidth="110" right="20%"/>
                    <Static id="staRT_LANDRATE" taborder="41" text="토지비율" left="staBgAM_SELLING:-1" width="80" height="30" cssclass="sta_WF_tablelabel" top="staSumTitle:9" textAlign="center"/>
                    <Static id="staBgRT_LANDRATE" taborder="42" height="30" cssclass="sta_WF_tablebg" left="staRT_LANDRATE:-1" top="staSumTitle:9" minwidth="110" right="0"/>
                    <MaskEdit id="txtNO_SIZE" taborder="43" left="staNO_SIZE:5" top="37" width="80" height="20" value="" format="#,##0.000" readonly="true" textAlign="left"/>
                    <Static id="sta53" taborder="44" text="면적" left="txtNO_SIZE:5" top="37" width="30" height="20"/>
                    <Edit id="txtTY_TYPE" taborder="45" left="sta53:5" top="37" width="40" height="20" readonly="true"/>
                    <Static id="sta43" taborder="46" text="형" left="txtTY_TYPE:5" top="37" width="20" height="20"/>
                    <Edit id="txtNO_CONTRACT" taborder="47" left="staNO_CONTRACT:5" top="37" width="120" height="20"/>
                    <Edit id="txtTY_STATE" taborder="48" left="staTY_STATE:5" top="staBgNO_SIZE:4" width="90" height="20" readonly="true" textAlign="left"/>
                    <Edit id="txtTY_BUNYANG" taborder="49" left="474" top="staBgNO_SIZE:4" width="120" height="20" readonly="true"/>
                    <Radio id="rdoTY_CONTRACTOR" taborder="50" left="staTY_CONTRACTOR:5" top="staBgNO_CONTRACT:4" height="20" direction="vertical" fittocontents="width" width="187" codecolumn="CD_CODE" datacolumn="DS_CODE" innerdataset="dsTY_CONTRACTOR" requiredYN="Y" requiredMsg="계약구분"/>
                    <Edit id="txtDT_CONTRACT" taborder="51" left="staDT_CONTRACT:5" top="staBgTY_STATE:4" width="100" height="20" readonly="true"/>
                    <Edit id="txtDS_CONTRACTOR" taborder="52" left="staDS_CONTRACTOR:5" top="staBgTY_BUNYANG:4" width="120" height="20" readonly="true"/>
                    <Edit id="txtNO_JUMIN" taborder="53" left="staNO_JUMIN:5" top="staBgTY_CONTRACTOR:4" width="120" height="20" readonly="true"/>
                    <Edit id="txtNO_TEL" taborder="54" left="staNO_TEL:5" top="staBgDT_CONTRACT:4" width="120" height="20"/>
                    <Edit id="txtNO_MOBILE" taborder="55" left="staNO_MOBILE:5" top="staBgNO_JUMIN:4" width="120" height="20" onkeyup="divData_divDataRight_divDataTop_txtNO_MOBILE_onkeyup"/>
                    <Edit id="txtNO_OFFICETEL" taborder="56" left="staNO_OFFICETEL:5" top="staBgDS_CONTRACTOR:4" width="120" height="20"/>
                    <Div id="cfNO_RECPOST" CodeFindName="DZX_CFZIP_STREET" CDTextWidth="100" taborder="57" left="staNO_RECPOST:5" top="staBgNO_TEL:4" width="400" height="20" url="cmm::cmmCodeFind.xfdl" enable="true" requiredYN="Y" requiredMsg="주소"/>
                    <Edit id="txtDS_RECADDR2" taborder="58" left="cfNO_RECPOST:5" top="staBgNO_TEL:4" width="410" height="20" onkillfocus="divData_divDataRight_divDataTop_txtDS_RECADDR2_onkillfocus"/>
                    <Div id="cfNO_POST" CodeFindName="DZX_CFZIP_STREET" CDTextWidth="100" taborder="59" left="staNO_POST:5" top="staBgNO_RECPOST:4" width="400" height="20" url="cmm::cmmCodeFind.xfdl" enable="true" requiredYN="Y" requiredMsg="주소"/>
                    <Edit id="txtDS_ADDR2" taborder="60" left="cfNO_POST:5" top="staBgNO_RECPOST:4" width="410" height="20"/>
                    <Edit id="txtCD_VENDOR" taborder="61" left="staCD_VENDOR:5" top="staBgNO_POST:4" width="200" height="20"/>
                    <Edit id="txtDS_UPTAE" taborder="62" left="staDS_UPTAE:5" top="staBgNO_POST:4" width="120" height="20"/>
                    <Edit id="txtDS_UPJONG" taborder="63" left="staDS_UPJONG:5" top="staBgNO_POST:4" width="120" height="20"/>
                    <Edit id="txtDS_VENDOR" taborder="64" left="staDS_VENDOR:5" top="staBgCD_VENDOR:4" width="120" height="20"/>
                    <Radio id="rdoTY_EBILL" taborder="65" left="staTY_EBILL:5" top="staBgDS_UPTAE:4" height="20" direction="vertical" fittocontents="width" width="133" codecolumn="CD_CODE" datacolumn="DS_CODE" innerdataset="dsTY_EBILL" requiredYN="Y" requiredMsg="계약구분" enable="false"/>
                    <Edit id="ctxtNO_GUJA" taborder="1" left="staNO_GUJA:5" top="txtDS_UPJONG:9" width="120" height="20" value="" readonly="true"/>
                    <Edit id="txtDS_EMAIL" taborder="67" left="staDS_EMAIL:5" top="staBgDS_VENDOR:4" width="200" height="20"/>
                    <Radio id="rdoYN_JOINT" taborder="66" left="staYN_JOINT:5" top="staTY_EBILL:4" height="20" direction="vertical" fittocontents="width" width="133" codecolumn="CD_CODE" datacolumn="DS_CODE" innerdataset="dsYN_JOINT" requiredYN="Y" requiredMsg="계약구분"/>
                    <Radio id="rdoYN_BUNYANG" taborder="66" left="staYN_BUNYANG:5" top="ctxtNO_GUJA:9" height="20" direction="vertical" fittocontents="width" width="133" codecolumn="CD_CODE" datacolumn="DS_CODE" innerdataset="dsYN_BUNYANG" requiredYN="Y" requiredMsg="계약구분" enable="false"/>
                    <TextArea id="txtDS_REMARK" taborder="68" left="staDS_REMARK:5" top="staBgDS_EMAIL:4" height="40" width="810"/>
                    <MaskEdit id="txtAM_LAND" taborder="43" left="staAM_LAND:5" top="staSumTitle:14" right="staAM_BUILDING:5" minwidth="100" height="20" value="" format="#,###" textAlign="right" readonly="true"/>
                    <MaskEdit id="txtAM_BUILDING" taborder="43" left="staAM_BUILDING:5" top="staSumTitle:14" right="staAM_VAT:5" minwidth="100" height="20" value="" format="#,###" textAlign="right" readonly="true"/>
                    <MaskEdit id="txtAM_VAT" taborder="43" left="staAM_VAT:5" top="staSumTitle:14" right="staAM_SELLING:5" minwidth="100" height="20" value="" format="#,###" textAlign="right" readonly="true"/>
                    <MaskEdit id="txtAM_SELLING" taborder="43" left="staAM_SELLING:5" top="staSumTitle:14" right="staRT_LANDRATE:5" minwidth="100" height="20" value="" format="#,###" textAlign="right" readonly="true"/>
                    <MaskEdit id="txtRT_LANDRATE" taborder="43" left="staRT_LANDRATE:5" top="staSumTitle:14" right="5" minwidth="100" height="20" value="" format="0.#########0" textAlign="right" readonly="true"/>
                  </Layout>
                </Layouts>
              </Div>
              <Div id="divDataBottom" taborder="0" left="0" top="divSplitter:5" bottom="0" right="0">
                <Layouts>
                  <Layout>
                    <Tab id="tabData" taborder="1" tabindex="0" left="0" top="0" bottom="0" right="0" onchanged="divData_tabData_onchanged">
                      <Tabpages>
                        <Tabpage id="tab1" text="약정정보">
                          <Layouts>
                            <Layout>
                              <Button id="btnDivCopy" taborder="1" text="안분내역복사" top="5" width="70" height="20" right="10" onclick="divData_divDataRight_divDataBottom_tabData_tab1_btnDivCopy_onclick"/>
                              <Static id="staSumTitle" taborder="0" text="분양가" left="0" bottom="40" width="100%" height="22" cssclass="sta_TITLE_Bg"/>
                              <Static id="staAM_LAND" taborder="41" text="토지가" left="0" width="80" height="30" cssclass="sta_WF_tablelabel" top="staSumTitle:9" textAlign="center"/>
                              <Static id="staBgAM_LAND" taborder="42" height="30" cssclass="sta_WF_tablebg" left="staAM_LAND:-1" top="staSumTitle:9" minwidth="110" right="75%"/>
                              <Static id="staAM_BUILDING" taborder="41" text="건물가" left="staBgAM_LAND:-1" width="80" height="30" cssclass="sta_WF_tablelabel" top="staSumTitle:9" textAlign="center"/>
                              <Static id="staBgAM_BUILDING" taborder="42" height="30" cssclass="sta_WF_tablebg" left="staAM_BUILDING:-1" top="staSumTitle:9" minwidth="110" right="50%"/>
                              <Static id="staAM_VAT" taborder="41" text="부가세" left="staBgAM_BUILDING:-1" width="80" height="30" cssclass="sta_WF_tablelabel" top="staSumTitle:9" textAlign="center"/>
                              <Static id="staBgAM_VAT" taborder="42" height="30" cssclass="sta_WF_tablebg" left="staAM_VAT:-1" top="staSumTitle:9" minwidth="110" right="25%"/>
                              <Static id="staAM_SELLING" taborder="41" text="분양가" left="staBgAM_VAT:-1" width="80" height="30" cssclass="sta_WF_tablelabel" top="staSumTitle:9" textAlign="center"/>
                              <Static id="staBgAM_SELLING" taborder="42" height="30" cssclass="sta_WF_tablebg" left="staAM_SELLING:-1" top="staSumTitle:9" minwidth="110" right="5"/>
                              <MaskEdit id="txtAM_LAND" taborder="43" left="staAM_LAND:5" top="staSumTitle:14" right="staAM_BUILDING:5" minwidth="100" height="20" value="" format="#,###" textAlign="right" readonly="true"/>
                              <MaskEdit id="txtAM_BUILDING" taborder="43" left="staAM_BUILDING:5" top="staSumTitle:14" right="staAM_VAT:5" minwidth="100" height="20" value="" format="#,###" textAlign="right" readonly="true"/>
                              <MaskEdit id="txtAM_VAT" taborder="43" left="staAM_VAT:5" top="staSumTitle:14" right="staAM_SELLING:5" minwidth="100" height="20" value="" format="#,###" textAlign="right" readonly="true"/>
                              <MaskEdit id="txtAM_SELLING" taborder="43" left="staAM_SELLING:5" top="staSumTitle:14" right="10" minwidth="100" height="20" value="" format="#,###" textAlign="right" readonly="true"/>
                              <Grid id="objGrid1" taborder="1" left="5" top="btnDivCopy:1" bottom="staSumTitle:1" right="5"/>
                            </Layout>
                          </Layouts>
                        </Tabpage>
                        <Tabpage id="tab2" text="수납정보">
                          <Layouts>
                            <Layout>
                              <Grid id="objGrid2" taborder="1" left="5" top="5" bottom="5" right="5"/>
                            </Layout>
                          </Layouts>
                        </Tabpage>
                      </Tabpages>
                    </Tab>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	this.dsSearch.setColumn(0, "CD_ACNTUNIT", this.getOwnerFrame().CD_ACNTUNIT);
	this.dsSearch.setColumn(0, "DS_ACNTUNIT", this.getOwnerFrame().DS_ACNTUNIT);
	this.dsSearch.setColumn(0, "NO_DONG", this.getOwnerFrame().DONG);
	this.dsSearch.setColumn(0, "NO_FLOOR", this.getOwnerFrame().FLOOR);
	this.dsSearch.setColumn(0, "NO_HO", this.getOwnerFrame().HO);
	
	this.FormBtns.Select.click();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnConform = this.gfnFormButtonAdd("btnConform", "fnConform");		
	this.btnCancel = this.gfnFormButtonAdd("btnCancel", "fnCancel");	
	this.btnJoint = this.gfnFormButtonAdd("btnJoint", "fnJoint");
	this.btnAgreeCopy = this.gfnFormButtonAdd("btnAgreeCopy", "fnAgreeCopy");
	this.btnAgreeDelete = this.gfnFormButtonAdd("btnAgreeDelete", "fnAgreeDeleteChk");
	this.btnItemContract = this.gfnFormButtonAdd("btnItemContract", "fnItemContract");
	this.btnContractSetting = this.gfnFormButtonAdd("btnContractSetting", "fnContractSetting");
	this.btnPreview2 = this.gfnFormButtonAdd("btnPreview2", "fnPreview2");
	this.btnPayment = this.gfnFormButtonAdd("btnPayment", "fnPayment");
	this.btnDrcReceipt = this.gfnFormButtonAdd("btnDrcReceipt", "fnDrcReceipt");
	this.btnDrfReceipt = this.gfnFormButtonAdd("btnDrfReceipt", "fnDrfReceipt");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {	
	this.tabData = this.divData.form.divDataBottom.form.tabData;
	
	this.dxGrid1 = this.tabData.tab1.form.objGrid1;
	this.dxGrid2 = this.tabData.tab2.form.objGrid2;
	
	this.ctxtCD_ACNTUNIT = this.divSearch.form.ctxtCD_ACNTUNIT;
	this.ctxtDS_ACNTUNIT = this.divSearch.form.ctxtDS_ACNTUNIT;
	this.ctxtNO_DONG = this.divSearch.form.ctxtNO_DONG;
	this.ctxtNO_FLOOR = this.divSearch.form.ctxtNO_FLOOR;
	this.ctxtNO_HO = this.divSearch.form.ctxtNO_HO;
	
	this.txtNO_SIZE      = this.divData.form.divDataTop.form.txtNO_SIZE;
	this.txtTY_TYPE      = this.divData.form.divDataTop.form.txtTY_TYPE;
	this.txtNO_CONTRACT  = this.divData.form.divDataTop.form.txtNO_CONTRACT;
	this.txtTY_STATE     = this.divData.form.divDataTop.form.txtTY_STATE;
	this.txtTY_BUNYANG   = this.divData.form.divDataTop.form.txtTY_BUNYANG;
	this.rdoTY_CONTRACTOR= this.divData.form.divDataTop.form.rdoTY_CONTRACTOR;
	this.txtDT_CONTRACT  = this.divData.form.divDataTop.form.txtDT_CONTRACT;
	this.txtDS_CONTRACTOR= this.divData.form.divDataTop.form.txtDS_CONTRACTOR;
	this.txtNO_JUMIN     = this.divData.form.divDataTop.form.txtNO_JUMIN;
	this.txtNO_TEL       = this.divData.form.divDataTop.form.txtNO_TEL;
	this.txtNO_MOBILE    = this.divData.form.divDataTop.form.txtNO_MOBILE;
	this.txtNO_OFFICETEL = this.divData.form.divDataTop.form.txtNO_OFFICETEL;
	this.cfNO_RECPOST    = this.divData.form.divDataTop.form.cfNO_RECPOST;
	this.txtDS_RECADDR2  = this.divData.form.divDataTop.form.txtDS_RECADDR2;
	this.cfNO_POST       = this.divData.form.divDataTop.form.cfNO_POST;
	this.txtDS_ADDR2     = this.divData.form.divDataTop.form.txtDS_ADDR2;
	this.txtCD_VENDOR    = this.divData.form.divDataTop.form.txtCD_VENDOR;
	this.txtDS_UPTAE     = this.divData.form.divDataTop.form.txtDS_UPTAE;
	this.txtDS_UPJONG    = this.divData.form.divDataTop.form.txtDS_UPJONG;
	this.txtDS_VENDOR    = this.divData.form.divDataTop.form.txtDS_VENDOR;
	this.rdoTY_EBILL     = this.divData.form.divDataTop.form.rdoTY_EBILL;
	this.ctxtNO_GUJA     = this.divData.form.divDataTop.form.ctxtNO_GUJA;
	this.txtDS_EMAIL     = this.divData.form.divDataTop.form.txtDS_EMAIL;
	this.rdoYN_JOINT     = this.divData.form.divDataTop.form.rdoYN_JOINT;
	this.rdoYN_BUNYANG   = this.divData.form.divDataTop.form.rdoYN_BUNYANG;
	this.txtDS_REMARK    = this.divData.form.divDataTop.form.txtDS_REMARK;
	
	// 분양가
	this.txtAM_LAND      = this.divData.form.divDataTop.form.txtAM_LAND;
	this.txtAM_BUILDING  = this.divData.form.divDataTop.form.txtAM_BUILDING;
	this.txtAM_VAT       = this.divData.form.divDataTop.form.txtAM_VAT;
	this.txtAM_SELLING   = this.divData.form.divDataTop.form.txtAM_SELLING;
	this.txtRT_LANDRATE  = this.divData.form.divDataTop.form.txtRT_LANDRATE;

	this.btnDivCopy 	 = this.divData.form.divDataBottom.form.tabData.tab1.form.btnDivCopy;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid1, this.dsList1, "DR", "DRB_CONTRACTDETAIL_AGREE");
	this.gfnGridInit(this.dxGrid2, this.dsList2, "DR", "DRB_CONTRACTDETAIL_RECEIVED");
	
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	// 조회시에 파라미터가 같아서 같이 쓰는 중.
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_ACNTUNIT", "string");
	this.dsSelect.addColumn("TY_GUBUN", "string");
	this.dsSelect.addColumn("NO_CHASU", "string");
	this.dsSelect.addColumn("NO_DONG", "string");
	this.dsSelect.addColumn("NO_FLOOR", "string");
	this.dsSelect.addColumn("NO_HO", "string");
	this.dsSelect.addColumn("NO_UNIONMEMBER", "string");
	
	this.dsUpdate = new Dataset();
	this.dsUpdate.addColumn("CD_ACNTUNIT", "string");
	this.dsUpdate.addColumn("TY_GUBUN", "string");
	this.dsUpdate.addColumn("NO_CHASU", "string");
	this.dsUpdate.addColumn("NO_DONG", "string");
	this.dsUpdate.addColumn("NO_FLOOR", "string");
	this.dsUpdate.addColumn("NO_HO", "string");
	this.dsUpdate.addColumn("NO_UNIONMEMBER", "string");
	this.dsUpdate.addColumn("TY_DISTRICT", "string");
	this.dsUpdate.addColumn("RT_OPTION", "string");
	this.dsUpdate.addColumn("DT_CONTRACT", "string");
	this.dsUpdate.addColumn("TY_CONTRACTOR", "string");
	this.dsUpdate.addColumn("DS_CONTRACTOR", "string");
	this.dsUpdate.addColumn("NO_JUMIN", "string");
	this.dsUpdate.addColumn("NO_TEL", "string");
	this.dsUpdate.addColumn("NO_OFFICETEL", "string");
	this.dsUpdate.addColumn("NO_MOBILE", "string");
	this.dsUpdate.addColumn("NO_POST", "string");
	this.dsUpdate.addColumn("DS_ADDR2", "string");
	this.dsUpdate.addColumn("DS_ADDR3", "string");
	this.dsUpdate.addColumn("NO_RECPOST", "string");
	this.dsUpdate.addColumn("DS_RECADDR2", "string");
	this.dsUpdate.addColumn("DS_RECADDR3", "string");
	this.dsUpdate.addColumn("DS_EMAIL", "string");
	this.dsUpdate.addColumn("CD_VENDOR", "string");
	this.dsUpdate.addColumn("DS_VENDOR", "string");
	this.dsUpdate.addColumn("DS_UPTAE", "string");
	this.dsUpdate.addColumn("DS_UPJONG", "string");
	this.dsUpdate.addColumn("DS_REMARK", "string");
	this.dsUpdate.addColumn("YN_EBILL", "string");
	this.dsUpdate.addColumn("YN_JOINT", "string");
	this.dsUpdate.addColumn("AM_MLEASE", "bigdecimal");
	this.dsUpdate.addColumn("ID_UPDATE", "string");
	this.dsUpdate.addColumn("YN_SMS", "string");
	this.dsUpdate.addColumn("YN_SUNSU", "string");
	this.dsUpdate.addColumn("AM_SUNSU", "bigdecimal");
	this.dsUpdate.addColumn("YN_RETURN", "string");
	this.dsUpdate.addColumn("DT_RETURN", "string");
	this.dsUpdate.addColumn("AM_REFUND", "bigdecimal");
	this.dsUpdate.addColumn("DT_REFUND", "string");
	this.dsUpdate.addColumn("NO_CONTRACT", "string");
	
	// 기본정보의 분양가
	this.dsSelectSum = new Dataset();
	this.dsSelectSum.addColumn("CD_ACNTUNIT", "string");
	this.dsSelectSum.addColumn("TY_GUBUN", "string");
	this.dsSelectSum.addColumn("NO_CHASU", "string");
	this.dsSelectSum.addColumn("NO_SIZE", "bigdecimal");
	this.dsSelectSum.addColumn("TY_TYPE", "string");
	this.dsSelectSum.addColumn("TY_DISTRICT", "string");
	this.dsSelectSum.addColumn("RT_OPTION", "string");
	
	// 약정정보 탭의 그리드
	this.dsInsert1 = new Dataset();
	this.dsInsert1.addColumn("CD_ACNTUNIT", "string");
	this.dsInsert1.addColumn("TY_GUBUN", "string");
	this.dsInsert1.addColumn("NO_CHASU", "string");
	this.dsInsert1.addColumn("NO_DONG", "string");
	this.dsInsert1.addColumn("NO_FLOOR", "string");
	this.dsInsert1.addColumn("NO_HO", "string");
	this.dsInsert1.addColumn("NO_UNIONMEMBER", "string");
	this.dsInsert1.addColumn("NO_SIZE", "bigdecimal");
	this.dsInsert1.addColumn("TY_TYPE", "string");
	this.dsInsert1.addColumn("TY_DISTRICT", "string");
	this.dsInsert1.addColumn("RT_OPTION", "string");
	this.dsInsert1.addColumn("TY_NAPIP", "string");
	this.dsInsert1.addColumn("NO_NAPCHA", "string");
	this.dsInsert1.addColumn("DT_STARTAGREE", "string");
	this.dsInsert1.addColumn("DT_ENDAGREE", "string");
	this.dsInsert1.addColumn("AM_SELLING_HANDLE", "bigdecimal");
	this.dsInsert1.addColumn("AM_LAND", "bigdecimal");
	this.dsInsert1.addColumn("AM_BUILDING", "bigdecimal");
	this.dsInsert1.addColumn("AM_VAT", "bigdecimal");
	this.dsInsert1.addColumn("AM_SELLING", "bigdecimal");
	this.dsInsert1.addColumn("ID_INSERT", "string");

	this.dsUpdate1 = new Dataset();
	this.dsUpdate1.addColumn("CD_ACNTUNIT", "string");
	this.dsUpdate1.addColumn("TY_GUBUN", "string");
	this.dsUpdate1.addColumn("NO_CHASU", "string");
	this.dsUpdate1.addColumn("NO_DONG", "string");
	this.dsUpdate1.addColumn("NO_FLOOR", "string");
	this.dsUpdate1.addColumn("NO_HO", "string");
	this.dsUpdate1.addColumn("NO_UNIONMEMBER", "string");
	this.dsUpdate1.addColumn("NO_SIZE", "bigdecimal");
	this.dsUpdate1.addColumn("TY_TYPE", "string");
	this.dsUpdate1.addColumn("TY_DISTRICT", "string");
	this.dsUpdate1.addColumn("RT_OPTION", "string");
	this.dsUpdate1.addColumn("TY_NAPIP", "string");
	this.dsUpdate1.addColumn("NO_NAPCHA", "string");
	this.dsUpdate1.addColumn("DT_STARTAGREE", "string");
	this.dsUpdate1.addColumn("DT_ENDAGREE", "string");
	this.dsUpdate1.addColumn("AM_SELLING_HANDLE", "bigdecimal");
	this.dsUpdate1.addColumn("AM_LAND", "bigdecimal");
	this.dsUpdate1.addColumn("AM_BUILDING", "bigdecimal");
	this.dsUpdate1.addColumn("AM_VAT", "bigdecimal");
	this.dsUpdate1.addColumn("AM_SELLING", "bigdecimal");
	this.dsUpdate1.addColumn("ID_UPDATE", "string");

	this.dsDelete1 = new Dataset();
	this.dsDelete1.addColumn("CD_ACNTUNIT", "string");
	this.dsDelete1.addColumn("TY_GUBUN", "string");
	this.dsDelete1.addColumn("NO_CHASU", "string");
	this.dsDelete1.addColumn("NO_DONG", "string");
	this.dsDelete1.addColumn("NO_FLOOR", "string");
	this.dsDelete1.addColumn("NO_HO", "string");
	this.dsDelete1.addColumn("NO_UNIONMEMBER", "string");
	this.dsDelete1.addColumn("TY_NAPIP", "string");
	this.dsDelete1.addColumn("NO_NAPCHA", "string");
	
	// 약정 삭제/복사
	this.dsAgree = new Dataset();
	this.dsAgree.addColumn("CD_ACNTUNIT", "string");
	this.dsAgree.addColumn("TY_GUBUN", "string");
	this.dsAgree.addColumn("NO_CHASU", "string");
	this.dsAgree.addColumn("NO_DONG", "string");
	this.dsAgree.addColumn("NO_FLOOR", "string");
	this.dsAgree.addColumn("NO_HO", "string");
	this.dsAgree.addColumn("NO_UNIONMEMBER", "string");
	
	this.dsUpdateCont = new Dataset();
	this.dsUpdateCont.addColumn("CD_ACNTUNIT", "string");
	this.dsUpdateCont.addColumn("TY_GUBUN", "string");
	this.dsUpdateCont.addColumn("NO_CHASU", "string");
	this.dsUpdateCont.addColumn("NO_DONG", "string");
	this.dsUpdateCont.addColumn("NO_FLOOR", "string");
	this.dsUpdateCont.addColumn("NO_HO", "string");
	this.dsUpdateCont.addColumn("ID_UPDATE", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "CD_ACNTUNIT", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0, 6));
	this.dsSelect.setColumn(0, "TY_GUBUN", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6, 1));
	this.dsSelect.setColumn(0, "NO_CHASU", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7, 2));
	this.dsSelect.setColumn(0, "NO_DONG", this.dsSearch.getColumn(0, "NO_DONG"));
	this.dsSelect.setColumn(0, "NO_FLOOR", this.dsSearch.getColumn(0, "NO_FLOOR"));
	this.dsSelect.setColumn(0, "NO_HO", this.dsSearch.getColumn(0, "NO_HO"));
	this.dsSelect.setColumn(0, "NO_UNIONMEMBER", "");

	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
 	var inData      = "select=dsSelect";
 	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}


this.fnSelectSum = function() {
	this.dsSelectSum.clearData();
	this.dsSelectSum.addRow();
	this.dsSelectSum.setColumn(0, "CD_ACNTUNIT", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0, 6));
	this.dsSelectSum.setColumn(0, "TY_GUBUN", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6, 1));
	this.dsSelectSum.setColumn(0, "NO_CHASU", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7, 2));
	this.dsSelectSum.setColumn(0, "NO_SIZE", this.dsList.getColumn(0, "NO_SIZE"));
	this.dsSelectSum.setColumn(0, "TY_TYPE", this.dsList.getColumn(0, "TY_TYPE"));
	this.dsSelectSum.setColumn(0, "TY_DISTRICT", this.dsList.getColumn(0, "TY_DISTRICT"));
	this.dsSelectSum.setColumn(0, "RT_OPTION", this.dsList.getColumn(0, "RT_OPTION"));

	var strSvcId    = "select_sum";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
 	var inData      = "select_sum=dsSelectSum";
 	var outData     = "dsListSum=select_sum0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

this.fnSelectTabData = function()
{
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "CD_ACNTUNIT", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0, 6));
	this.dsSelect.setColumn(0, "TY_GUBUN", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6, 1));
	this.dsSelect.setColumn(0, "NO_CHASU", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7, 2));
	this.dsSelect.setColumn(0, "NO_DONG", this.dsSearch.getColumn(0, "NO_DONG"));
	this.dsSelect.setColumn(0, "NO_FLOOR", this.dsSearch.getColumn(0, "NO_FLOOR"));
	this.dsSelect.setColumn(0, "NO_HO", this.dsSearch.getColumn(0, "NO_HO"));
	this.dsSelect.setColumn(0, "NO_UNIONMEMBER", "");

	var index = this.fnGetTabIndex();

	var strSvcId    = "selecttab";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
 	var inData      = "select" + index + "=dsSelect";
 	var outData     = "dsList" + index + "=select" + index + "0";
	var strArg      = "tabindex=" + index;
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	if (this.tabData.tabindex == 0)
	{
		this.gfnGridAdd(this.dxGrid1);
	}
}

/*
 *	삭제 버튼
 */ 
this.fnDel = function() {
	if (this.tabData.tabindex == 0)
	{
		this.gfnGridDel(this.dxGrid1);
	}
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	if (!this.fnSaveValidate()) return;
	
	// Detail
	this.dsUpdate.clearData();
	var nrow = this.dsUpdate.addRow();
	this.dsUpdate.setColumn(nrow, "CD_ACNTUNIT", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0, 6));
	this.dsUpdate.setColumn(nrow, "TY_GUBUN", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6, 1));
	this.dsUpdate.setColumn(nrow, "NO_CHASU", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7, 2));
	this.dsUpdate.setColumn(nrow, "NO_DONG", this.dsSearch.getColumn(0, "NO_DONG"));
	this.dsUpdate.setColumn(nrow, "NO_FLOOR", this.dsSearch.getColumn(0, "NO_FLOOR"));
	this.dsUpdate.setColumn(nrow, "NO_HO", this.dsSearch.getColumn(0, "NO_HO"));
	this.dsUpdate.setColumn(nrow, "NO_UNIONMEMBER", "");
	this.dsUpdate.setColumn(nrow, "TY_DISTRICT", this.dsList.getColumn(0, "TY_DISTRICT"));
	this.dsUpdate.setColumn(nrow, "RT_OPTION", this.dsList.getColumn(0, "RT_OPTION"));
	this.dsUpdate.setColumn(nrow, "DT_CONTRACT", this.gfnNvl(this.dsList.getColumn(0, "DT_CONTRACT"),"").replace("-",""));
	this.dsUpdate.setColumn(nrow, "TY_CONTRACTOR", this.dsList.getColumn(0, "TY_CONTRACTOR"));
	this.dsUpdate.setColumn(nrow, "DS_CONTRACTOR", this.dsList.getColumn(0, "DS_CONTRACTOR"));
	this.dsUpdate.setColumn(nrow, "NO_JUMIN", this.gfnNvl(this.dsList.getColumn(0, "NO_JUMIN"),"").replace("-",""));
	this.dsUpdate.setColumn(nrow, "NO_TEL", this.dsList.getColumn(0, "NO_TEL"));
	this.dsUpdate.setColumn(nrow, "NO_OFFICETEL", this.dsList.getColumn(0, "NO_OFFICETEL"));
	this.dsUpdate.setColumn(nrow, "NO_MOBILE", this.gfnNvl(this.dsList.getColumn(0, "NO_MOBILE"),"").replace("-",""));
	this.dsUpdate.setColumn(nrow, "NO_POST", this.gfnNvl(this.dsList.getColumn(0, "NO_POST"),"").replace("-",""));
	this.dsUpdate.setColumn(nrow, "DS_ADDR2", this.dsList.getColumn(0, "DS_ADDR2"));
	this.dsUpdate.setColumn(nrow, "DS_ADDR3", this.dsList.getColumn(0, "DS_ADDR3"));
	this.dsUpdate.setColumn(nrow, "NO_RECPOST", this.gfnNvl(this.dsList.getColumn(0, "NO_RECPOST"),"").replace("-",""));
	this.dsUpdate.setColumn(nrow, "DS_RECADDR2", this.dsList.getColumn(0, "DS_RECADDR2"));
	this.dsUpdate.setColumn(nrow, "DS_RECADDR3", this.dsList.getColumn(0, "DS_RECADDR3"));
	this.dsUpdate.setColumn(nrow, "DS_EMAIL", this.dsList.getColumn(0, "DS_EMAIL"));
	this.dsUpdate.setColumn(nrow, "CD_VENDOR", this.dsList.getColumn(0, "CD_VENDOR"));
	this.dsUpdate.setColumn(nrow, "DS_VENDOR", this.dsList.getColumn(0, "DS_VENDOR"));
	this.dsUpdate.setColumn(nrow, "DS_UPTAE", this.dsList.getColumn(0, "DS_UPTAE"));
	this.dsUpdate.setColumn(nrow, "DS_UPJONG", this.dsList.getColumn(0, "DS_UPJONG"));
	this.dsUpdate.setColumn(nrow, "DS_REMARK", this.dsList.getColumn(0, "DS_REMARK"));
	this.dsUpdate.setColumn(nrow, "YN_EBILL", this.dsList.getColumn(0, "YN_EBILL"));
	this.dsUpdate.setColumn(nrow, "YN_JOINT", this.dsList.getColumn(0, "YN_JOINT"));
	this.dsUpdate.setColumn(nrow, "AM_MLEASE", this.dsList.getColumn(0, "AM_MLEASE"));
	this.dsUpdate.setColumn(nrow, "ID_UPDATE", this.AuthClient.ID_USER);
	this.dsUpdate.setColumn(nrow, "YN_SMS", this.dsList.getColumn(0, "YN_SMS"));
	this.dsUpdate.setColumn(nrow, "YN_SUNSU", this.dsList.getColumn(0, "YN_SUNSU"));
	this.dsUpdate.setColumn(nrow, "AM_SUNSU", this.dsList.getColumn(0, "AM_SUNSU"));
	this.dsUpdate.setColumn(nrow, "YN_RETURN", this.dsList.getColumn(0, "YN_RETURN"));
	this.dsUpdate.setColumn(nrow, "DT_RETURN", this.gfnNvl(this.dsList.getColumn(0, "DT_RETURN"),"").replace("-",""));
	this.dsUpdate.setColumn(nrow, "AM_REFUND", this.dsList.getColumn(0, "AM_REFUND"));
	this.dsUpdate.setColumn(nrow, "DT_REFUND", this.gfnNvl(this.dsList.getColumn(0, "DT_REFUND"),"").replace("-",""));
	this.dsUpdate.setColumn(nrow, "NO_CONTRACT", this.dsList.getColumn(0, "NO_CONTRACT"));
	
	var strInData = "update=dsUpdate";

	switch(this.fnGetTabIndex())
	{
		case 1 : 
			if (!this.gfnGridValidate(this.dxGrid1)) return;	
			this.dsInsert1.clearData();
			this.dsUpdate1.clearData();
			this.dsDelete1.clearData();
			for (var i = 0; i < this.dsList1.rowcount; i++) {
				var flag = this.gfnGetFlag(this.dsList1, i);
				switch(flag) {
					case "I":
						var nrow = this.dsInsert1.addRow();
						this.dsInsert1.setColumn(nrow, "CD_ACNTUNIT", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0,6));
						this.dsInsert1.setColumn(nrow, "TY_GUBUN", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6,1));
						this.dsInsert1.setColumn(nrow, "NO_CHASU", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7,2));
						this.dsInsert1.setColumn(nrow, "NO_DONG", this.dsSearch.getColumn(0, "NO_DONG"));
						this.dsInsert1.setColumn(nrow, "NO_FLOOR", this.dsSearch.getColumn(0, "FLOOR"));
						this.dsInsert1.setColumn(nrow, "NO_HO", this.dsSearch.getColumn(0, "NO_HO"));
						this.dsInsert1.setColumn(nrow, "NO_UNIONMEMBER", "");
						this.dsInsert1.setColumn(nrow, "NO_SIZE", this.dsList.getColumn(0, "NO_SIZE"));
						this.dsInsert1.setColumn(nrow, "TY_TYPE", this.dsList.getColumn(0, "TY_TYPE"));
						this.dsInsert1.setColumn(nrow, "TY_DISTRICT", this.dsList.getColumn(0, "TY_DISTRICT"));
						this.dsInsert1.setColumn(nrow, "RT_OPTION", this.dsList.getColumn(0, "RT_OPTION"));
						this.dsInsert1.setColumn(nrow, "TY_NAPIP", this.dsList1.getColumn(i, "TY_NAPIP"));
						this.dsInsert1.setColumn(nrow, "NO_NAPCHA", this.dsList1.getColumn(i, "NO_NAPCHA"));
						this.dsInsert1.setColumn(nrow, "DT_STARTAGREE", this.gfnNvl(this.dsList1.getColumn(i, "DT_STARTAGREE"),"").replace("-",""));
						this.dsInsert1.setColumn(nrow, "DT_ENDAGREE", this.gfnNvl(this.dsList1.getColumn(i, "DT_ENDAGREE"),"").replace("-",""));
						this.dsInsert1.setColumn(nrow, "AM_SELLING_HANDLE", this.dsList1.getColumn(i, "처리금액"));
						this.dsInsert1.setColumn(nrow, "AM_LAND", this.dsList1.getColumn(i, "AM_LAND"));
						this.dsInsert1.setColumn(nrow, "AM_BUILDING", this.dsList1.getColumn(i, "AM_BUILDING"));
						this.dsInsert1.setColumn(nrow, "AM_VAT", this.dsList1.getColumn(i, "AM_VAT"));
						this.dsInsert1.setColumn(nrow, "AM_SELLING", this.dsList1.getColumn(i, "AM_SELLING"));
						this.dsInsert1.setColumn(nrow, "ID_INSERT", this.AuthClient.ID_USER);
						break;
					case "U":
						var nrow = this.dsUpdate1.addRow();
						this.dsUpdate1.setColumn(nrow, "CD_ACNTUNIT", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0,6));
						this.dsUpdate1.setColumn(nrow, "TY_GUBUN", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6,1));
						this.dsUpdate1.setColumn(nrow, "NO_CHASU", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7,2));
						this.dsUpdate1.setColumn(nrow, "NO_DONG", this.dsSearch.getColumn(0, "NO_DONG"));
						this.dsUpdate1.setColumn(nrow, "NO_FLOOR", this.dsSearch.getColumn(0, "NO_FLOOR"));
						this.dsUpdate1.setColumn(nrow, "NO_HO", this.dsSearch.getColumn(0, "NO_HO"));
						this.dsUpdate1.setColumn(nrow, "NO_UNIONMEMBER", "");
						this.dsUpdate1.setColumn(nrow, "NO_SIZE", this.dsList.getColumn(0, "NO_SIZE"));
						this.dsUpdate1.setColumn(nrow, "TY_TYPE", this.dsList.getColumn(0, "TY_TYPE"));
						this.dsUpdate1.setColumn(nrow, "TY_DISTRICT", this.dsList.getColumn(0, "TY_DISTRICT"));
						this.dsUpdate1.setColumn(nrow, "RT_OPTION", this.dsList.getColumn(0, "RT_OPTION"));
						this.dsUpdate1.setColumn(nrow, "TY_NAPIP", this.dsList1.getColumn(i, "TY_NAPIP"));
						this.dsUpdate1.setColumn(nrow, "NO_NAPCHA", this.dsList1.getColumn(i, "NO_NAPCHA"));
						this.dsUpdate1.setColumn(nrow, "DT_STARTAGREE", this.gfnNvl(this.dsList1.getColumn(i, "DT_STARTAGREE"),"").replace("-",""));
						this.dsUpdate1.setColumn(nrow, "DT_ENDAGREE", this.gfnNvl(this.dsList1.getColumn(i, "DT_ENDAGREE"),"").replace("-",""));
						this.dsUpdate1.setColumn(nrow, "AM_SELLING_HANDLE", this.dsList1.getColumn(i, "처리금액"));
						this.dsUpdate1.setColumn(nrow, "AM_LAND", this.dsList1.getColumn(i, "AM_LAND"));
						this.dsUpdate1.setColumn(nrow, "AM_BUILDING", this.dsList1.getColumn(i, "AM_BUILDING"));
						this.dsUpdate1.setColumn(nrow, "AM_VAT", this.dsList1.getColumn(i, "AM_VAT"));
						this.dsUpdate1.setColumn(nrow, "AM_SELLING", this.dsList1.getColumn(i, "AM_SELLING"));
						this.dsUpdate1.setColumn(nrow, "ID_INSERT", this.AuthClient.ID_USER);
					break;
					case "D":
						var nrow = this.dsDelete1.addRow();
						this.dsDelete1.setColumn(nrow, "CD_ACNTUNIT", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0,6));
						this.dsDelete1.setColumn(nrow, "TY_GUBUN", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6,1));
						this.dsDelete1.setColumn(nrow, "NO_CHASU", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7,2));
						this.dsDelete1.setColumn(nrow, "NO_DONG", this.dsSearch.getColumn(0, "NO_DONG"));
						this.dsDelete1.setColumn(nrow, "NO_FLOOR", this.dsSearch.getColumn(0, "NO_FLOOR"));
						this.dsDelete1.setColumn(nrow, "NO_HO", this.dsSearch.getColumn(0, "NO_HO"));
						this.dsDelete1.setColumn(nrow, "NO_UNIONMEMBER", "");
						this.dsDelete1.setColumn(nrow, "TY_NAPIP", this.dsList1.getColumn(i, "TY_NAPIP"));
						this.dsDelete1.setColumn(nrow, "NO_NAPCHA", this.dsList1.getColumn(i, "NO_NAPCHA"));
					break;
				}
			}
			if(this.dsInsert1.rowcount > 0) strInData+= " insert1=dsInsert1";
			if(this.dsUpdate1.rowcount > 0) strInData+= " update1=dsUpdate1";
			if(this.dsDelete1.rowcount > 0) strInData+= " delete1=dsDelete1";
			break;
	}
	
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = strInData;
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid1);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "NO_DONG"))) {
		this.fnVaidateCallback = function() {
			this.divSearch.form.ctxtNO_DONG.setFocus();
		}
		validate = false;
		this.gfnAlert("동층호를 입력하세요!", "fnVaidateCallback");
		
	}
	else if (this.gfnIsNull(this.dsSearch.getColumn(0, "NO_FLOOR"))) {
		this.fnVaidateCallback = function() {
			this.divSearch.form.ctxtNO_FLOOR.setFocus();
		}
		validate = false;
		this.gfnAlert("동층호를 입력하세요!", "fnVaidateCallback");
	}
	else if (this.gfnIsNull(this.dsSearch.getColumn(0, "NO_HO"))) {
		this.fnVaidateCallback = function() {
			this.divSearch.form.ctxtNO_HO.setFocus();
		}
		validate = false;
		this.gfnAlert("동층호를 입력하세요!", "fnVaidateCallback");
	}
	return validate;
};

/*
 *	저장 Validate
 */
this.fnSaveValidate = function() {
	var strMsg = "";
	var validate = true;
	
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "CD_ACNTUNIT"))) {
		strMsg += "사업지코드는 반드시 입력 하셔야 합니다.\n";
		validate = false;
	}
	
	if(this.gfnTrim(this.dsList.getColumn(0, "TY_STATE")) == "계약")
	{
		if (this.gfnTrim(this.dsSearch.getColumn(0, "NO_DONG")) == "") {
			strMsg += "동은 반드시 입력 하셔야 합니다.\n";
			validate = false;
		}
		
		if (this.gfnTrim(this.dsSearch.getColumn(0, "NO_FLOOR")) == "") {
			strMsg += "층은 반드시 입력 하셔야 합니다.\n";
			validate = false;
		}
		
		if (this.gfnTrim(this.dsSearch.getColumn(0, "NO_HO")) == "") {
			strMsg += "호는 반드시 입력 하셔야 합니다.\n";
			validate = false;
		}
		
		if (this.gfnTrim(this.dsList.getColumn(0, "DS_CONTRACTOR")) == "") {
			strMsg += "계약자성명을 입력하지 않았습니다.\n";
			validate = false;
		}
		
		if ((this.dsList.getColumn(0, "TY_CONTRACTOR") == "P" || this.dsList.getColumn(0, "TY_CONTRACTOR") == "A") 
		&& this.gfnTrim(this.dsList.getColumn(0, "NO_JUMIN")) == "") {
			strMsg += "주민등록번호를 입력하지 않았습니다.\n";
			validate = false;
		}
		
		if ((this.dsList.getColumn(0, "TY_CONTRACTOR") == "C" || this.dsList.getColumn(0, "TY_CONTRACTOR") == "A")
		&& this.gfnTrim(this.dsList.getColumn(0, "CD_VENDOR")) == "") {
			strMsg += "사업자등록번호를 입력하지 않았습니다.\n";
			validate = false;
		}
		
		if ((this.dsList.getColumn(0, "TY_CONTRACTOR") == "C" || this.dsList.getColumn(0, "TY_CONTRACTOR") == "A") 
		&& this.gfnTrim(this.dsList.getColumn(0, "DS_VENDOR")) == "") {
			strMsg += "상호를 입력하지 않았습니다.\n";
			validate = false;
		}
		
		if (this.gfnTrim(this.dsList.getColumn(0, "NO_TEL")) == "" && this.gfnTrim(this.dsList.getColumn(0, "NO_OFFICETELTEL")) == "" && this.gfnTrim(this.dsList.getColumn(0, "NO_MOBILE")) == "") {
			strMsg += "전화번호를 입력하지 않았습니다.\n";
			validate = false;
		}
		
		if (this.gfnTrim(this.dsList.getColumn(0, "NO_TEL")) != "") {
			if (!nexacro.isNumeric(nexacro.replaceAll(nexacro.replaceAll(this.dsList.getColumn(0, "NO_TEL"), "-", ""), ")", ""))) {
				strMsg += "자택 전화번호가 정확하지 않습니다.\n";
				validate = false;
			}
		}
		
		if (this.gfnTrim(this.dsList.getColumn(0, "NO_OFFICETELTEL")) != "") {
			if (!nexacro.isNumeric(nexacro.replaceAll(nexacro.replaceAll(this.dsList.getColumn(0, "NO_OFFICETELTEL"), "-", ""), ")", ""))) {
				strMsg += "직장 전화번호가 정확하지 않습니다.\n";
				validate = false;
			}
		}
		
		if (this.gfnTrim(this.dsList.getColumn(0, "NO_MOBILE")) != "") {
			if (!nexacro.isNumeric(nexacro.replaceAll(nexacro.replaceAll(this.dsList.getColumn(0, "NO_MOBILE"), "-", ""), ")", ""))) {
				strMsg += "휴대폰 번호가 정확하지 않습니다.\n";
				validate = false;
			}
		}
		
		if (this.gfnTrim(this.dsList.getColumn(0, "NO_RECPOST")) == "") {
			strMsg += "현주소를 입력하지 않았습니다.\n";
			validate = false;
		}
	}
	
	if (!validate) {
		this.gfnAlert(strMsg);
		return false;
	}
	return true;
}

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg, strArg)
{
	if(svcID == "select") {
		if(this.dsList.rowcount > 0)
		{
			this.dsList_onvaluechanged(this.dsList, {columnid : "TY_CONTRACTOR", newvalue : this.dsList.getColumn(0, "TY_CONTRACTOR")});
			this.fnInit();
			this.fnSelectSum();
			this.fnSelectTabData();
			var mobileNum = this.dsList.getColumn(0, "NO_MOBILE");
			this.dsList.setColumn(0, "NO_MOBILE", this.fnConvertMobileNumber(mobileNum));
		}
	}
	else if(svcID == "selecttab") {
		var json = this.gfnArgsToJson(strArg);
		if(json.tabindex == "1")
		{
			this.fnGrid1Sum();
		}
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	else if(svcID == "delete_agree") {
		if (errorCode == 0) {
			var json = this.gfnArgsToJson(strArg);
			if(json.copy == "copy")
			{
				this.fnAgreeOpen();
			}
			else
			{
				this.FormBtns.Select.click();
			}
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	else if(svcID == "select_agree") {
		if (errorCode == 0) {
			for(var i = 0; i < this.dsList1.rowcount; i++)
			{
				this.dsList1setColumn(i, this.ucFlag, "I");
			}
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	else if(svcID == "update_cont") {
		if (errorCode == 0) {
			this.fnCallback_callback = function()
			{
				this.FormBtns.Select.click();
			}
			this.gfnAlert("변경처리가 완료되었습니다.", "fnCallback_callback");
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};

this.divData_ondragmove = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
	if(e.userdata == "splitter") {
		this.divData.form.divSplitter.set_top(e.clienty);
		this.divData.form.resetScroll();	
	}
};

this.divData_divSplitter_ondrag = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
	e.set_userdata("splitter");
	return true;
};


this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo) {
	if (e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);
		this.gfnGridClear(this.dxGrid1);
		this.gfnGridClear(this.dxGrid2);
		this.dsList.clearData();
	}
}


this.divData_tabData_onchanged = function(obj:nexacro.Tab,e:nexacro.TabIndexChangeEventInfo)
{
	if (e.preindex == e.postindex) return;
	
	this.fnSelectTabData();
};


this.dsList_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue)
	{
		if(e.columnid == "TY_CONTRACTOR")
		{
			if(e.newvalue == "P")
			{
				this.txtCD_VENDOR.set_readonly(true);
                this.txtDS_VENDOR.set_readonly(true);
                this.txtDS_UPJONG.set_readonly(true);
                this.txtDS_UPTAE.set_readonly(true);
				
				this.dsList.setColumn(0, "CD_VENDOR", "");
				this.dsList.setColumn(0, "DS_VENDOR", "");
				this.dsList.setColumn(0, "DS_UPJONG", "");
				this.dsList.setColumn(0, "DS_UPTAE", "");
				
				this.divData.form.divDataTop.form.staCD_VENDOR.set_textDecoration("none");
				this.divData.form.divDataTop.form.staDS_VENDOR.set_textDecoration("none");
			
			}
			else
			{
				this.txtCD_VENDOR.set_readonly(false);
                this.txtDS_VENDOR.set_readonly(false);
                this.txtDS_UPJONG.set_readonly(false);
                this.txtDS_UPTAE.set_readonly(false);
				
				this.divData.form.divDataTop.form.staCD_VENDOR.set_textDecoration("underline");
				this.divData.form.divDataTop.form.staDS_VENDOR.set_textDecoration("underline");
			}
		}
	}
};


this.fnInit = function() {
	if(this.dsList.getColumn(0, "TY_STATE") == "미계약" && this.gfnIsNull(this.dsList.getColumn(0, "DS_CONTRACTOR")))
	{
		this.rdoTY_CONTRACTOR.set_enable(false);
		this.cfNO_POST.set_enable(false);
		this.cfNO_RECPOST.set_enable(false);
		this.rdoTY_EBILL.set_enable(false);
		this.rdoYN_JOINT.set_enable(false);
		this.rdoYN_BUNYANG.set_enable(false);
		
		this.txtNO_TEL.set_readonly(true); 
		this.txtNO_MOBILE.set_readonly(true);   
		this.txtNO_OFFICETEL.set_readonly(true);
		this.txtDS_ADDR2.set_readonly(true);
		this.txtDS_RECADDR2.set_readonly(true);
		this.txtDS_EMAIL.set_readonly(true);
		this.txtDS_UPTAE.set_readonly(true);
		this.txtDS_UPJONG.set_readonly(true);
		this.txtDS_VENDOR.set_readonly(true);
		this.txtDS_REMARK.set_readonly(true);
		this.txtNO_CONTRACT.set_readonly(true);
	}
	else
	{
		this.rdoTY_CONTRACTOR.set_enable(true);
		this.cfNO_POST.set_enable(true);
		this.cfNO_RECPOST.set_enable(true);
		this.rdoYN_JOINT.set_enable(true);
		
		this.txtNO_TEL.set_readonly(false); 
		this.txtNO_MOBILE.set_readonly(false);   
		this.txtNO_OFFICETEL.set_readonly(false);
		this.txtDS_ADDR2.set_readonly(false);
		this.txtDS_RECADDR2.set_readonly(false);
		this.txtDS_EMAIL.set_readonly(false);
		this.txtDS_REMARK.set_readonly(false);
		this.txtNO_CONTRACT.set_readonly(false);
	}
	
	if(this.dsList.getColumn(0, "YN_READONLY") == "Y")
	{
		this.fnDataReadOnly();
	}
	
	if(this.gfnNvl(this.dsList.getColumn(0, "TY_STATE"),"").trim() == "계약")
	{
		this.divData.form.divDataTop.form.staYN_JOINT.set_visible(false);
		this.divData.form.divDataTop.form.rdoYN_JOINT.set_visible(false);
	}
	else
	{
		this.divData.form.divDataTop.form.staYN_JOINT.set_visible(true);
		this.divData.form.divDataTop.form.rdoYN_JOINT.set_visible(true);
	}
	
	 if (this.FormInfo.TY_AUTH != "R")
	{
		if (this.dsList.getColumn(0, "TY_STATE") == "미계약")
		{
			this.btnConform.set_enable(true); //계약체결
			this.btnCancel.set_enable(false); //계약취소
			this.btnJoint.set_enable(false); //공동명의계약자
			this.btnItemContract.set_enable(false); //별도계약
			this.btnContractSetting.set_enable(false);
			this.btnPreview2.set_enable(false); //도로점용 권리ㆍ의무 양도 및 인수 계약서
			this.btnPayment.set_enable(false); //대납확인서
			//tbbPartSunapMemoset_enable(false); //분할납부각서

			if (this.FormInfo.ID_GROUP == "H" || this.FormInfo.ID_GROUP == "0")
			{ this.btnContractSetting.set_enable(true); }

			if (this.dsSearch.getColumn(0, "YN_CONTRACT") == "계약가능")
			{ this.btnConform.set_enable(true); }    //계약체결 
			else
			{ this.btnConform.set_enable(false); }    //계약체결 

		}
		else
		{
			this.btnConform.set_enable(false); //계약체결
			this.btnCancel.set_enable(true); //계약취소
			this.btnItemContract.set_enable(true); //별도계약
			this.btnPreview2.set_enable(true); //도로점용 권리ㆍ의무 양도 및 인수 계약서
			this.btnPayment.set_enable(true); //대납확인서

			if (this.dsList.getColumn(0, "YN_JOINT") == "Y")
			{
				this.btnJoint.set_enable(true); //공동명의계약자
			}

			this.btnContractSetting.set_enable(false);
		}
		this.btnDivCopy.set_enable(true); // 안분내역복사
	}
	else
	{
		this.btnConform.set_enable(false); //계약체결
		this.btnCancel.set_enable(false); //계약취소
		this.btnJoint.set_enable(false); //공동명의계약자
		this.btnContractSetting.set_enable(false);
		this.btnPreview2.set_enable(false); //계약취소
		this.btnPayment.set_enable(false); //대납확인서
		this.btnDivCopy.set_enable(false); // 안분내역복사

	}
}

this.fnDataReadOnly = function()
{
	this.rdoTY_CONTRACTOR.set_enable(false);
	this.cfNO_POST.set_enable(false);
	this.cfNO_RECPOST.set_enable(false);
	this.rdoYN_JOINT.set_enable(false);
	
	this.txtNO_TEL.set_readonly(true); 
	this.txtNO_MOBILE.set_readonly(true);   
	this.txtNO_OFFICETEL.set_readonly(true);
	this.txtDS_ADDR2.set_readonly(true);
	this.txtDS_RECADDR2.set_readonly(true);
	this.txtDS_EMAIL.set_readonly(true);
	this.txtDS_UPTAE.set_readonly(true);
	this.txtDS_UPJONG.set_readonly(true);
	this.txtDS_VENDOR.set_readonly(true);
	this.txtDS_REMARK.set_readonly(true);
	this.txtNO_CONTRACT.set_readonly(true);
}

// 약정정보 변경 이벤트
this.dsList1_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.newvalue != e.oldvalue)
	{
		if(e.columnid == "처리금액" && nexacro.toNumber(e.newvalue,0) > 0)
		{
			var gap_land = 0;
			var gap_building = 0;
			var gap_vat = 0;
			var am_totalLand = 0;
			var am_totalBuilding = 0;
			var am_totalVat = 0;

			var am_land = 0;
			var am_building = 0;
			var am_vat = 0;
			var am_selling = 0;
			var rt_division = 0;
			
			
			if(this.dsList1.getColumn(this.dsList1.rowposition, "TY_NAPIP") != "R")
			{
				rt_division = this.dsListSum.getColumn(0, "AM_SELLING") / nexacro.toNumber(e.newvalue,0);
				
				am_land = nexacro.floor(this.dsListSum.getColumn(0, "AM_LAND") / rt_division);
				am_building = nexacro.floor(this.dsListSum.getColumn(0, "AM_BUILDING") / rt_division);
				am_vat = nexacro.floor(this.dsListSum.getColumn(0, "AM_VAT") / rt_division);
				
				am_selling = am_land + am_building + am_vat;
				
				var mod = nexacro.toNumber(e.newvalue,0) - am_selling;
				
				if(this.gfnNvl(this.dsList.getColumn(0, "AM_VAT"),0) == 0)
				{
					switch(mod)
					{
						case 1 : am_building++; break;
						case 2 : am_building++; am_land++; break;
					}
				}
				else
				{
					switch(mod)
					{
						
						case 1 : am_vat++; break;
						case 2 : am_vat++; am_building++; break;
						case 3 : am_vat++; am_building++; am_land++; break;
					}
				}
			}
			// 잔금이 맞다면.
			else
			{
				for (var i = 0; i < this.dsList1.rowcount; i++)
				{
					am_totalLand += Math.abs(this.dsList1.getColumn(i, "AM_LAND"));
					am_totalBuilding += Math.abs(this.dsList1.getColumn(i, "AM_BUILDING"));
					am_totalVat += Math.abs(this.dsList1.getColumn(i, "AM_VAT"));
				}

				gap_land = nexacro.toNumber(this.dsListSum.getColumn(0, "AM_LAND"),0) - am_totalLand;
				gap_building = nexacro.toNumber(this.dsListSum.getColumn(0, "AM_BUILDING"),0) - am_totalBuilding;
				gap_vat = nexacro.toNumber(this.dsListSum.getColumn(0, "AM_VAT"),0) - am_totalVat;

				am_land = am_land + gap_land;
				am_building = am_building + gap_building;
				am_vat = am_vat + gap_vat;
			}
			
			am_selling = am_land + am_building + am_vat;
			
			this.dsList1.set_enableevent(false);
			this.dsList1.setColumn(this.dsList1.rowposition, "AM_LAND", am_land);
			this.dsList1.setColumn(this.dsList1.rowposition, "AM_BUILDING", am_building);
			this.dsList1.setColumn(this.dsList1.rowposition, "AM_VAT", am_vat);
			this.dsList1.setColumn(this.dsList1.rowposition, "AM_SELLING", am_selling);
			this.fnGrid1Sum();
			this.dsList1.set_enableevent(true);
		}
	}
};

this.fnGrid1Sum = function()
{
	if(this.dsList1.rowcount > 0)
	{	
		this.dsListSum1.clearData();
		var am_land = 0;
		var am_building = 0;
		var am_vat = 0;
		var am_selling = 0;
		
		for(var i = 0; i < this.dsList1.rowcount; i++)
		{
			am_land += this.gfnNvl(this.dsList1.getColumn(i, "AM_LAND"),0);
			am_building += this.gfnNvl(this.dsList1.getColumn(i, "AM_BUILDING"),0);
			am_vat += this.gfnNvl(this.dsList1.getColumn(i, "AM_VAT"),0);
			am_selling += this.gfnNvl(this.dsList1.getColumn(i, "AM_SELLING"),0);
		}
		
		this.dsListSum1.addRow();
		
		this.dsListSum1.setColumn(0, "AM_LAND", am_land);
		this.dsListSum1.setColumn(0, "AM_BUILDING", am_building);
		this.dsListSum1.setColumn(0, "AM_VAT", am_vat);
		this.dsListSum1.setColumn(0, "AM_SELLING", am_selling);
	}
}

// 탭 관련 관리함수
this.fnGetTabIndex = function()
{
	var index = -1;

	var text = this.divData.form.divDataBottom.form.tabData.tabpages[this.divData.form.divDataBottom.form.tabData.tabindex].text;
	
	switch(text)
	{
		case "약정정보" : index = 1;
			break;
		case "수납정보" : index = 2;
			break;
	}
	
	return index;
}

this.fnConvertMobileNumber = function(number)
{
	var reno = this.gfnNvl(number,"").trim();
	number = reno.replaceAll("-","");
	
	switch(number.length)
	{
		case 3 : reno = number + "-"; break;
		case 6 : reno = number.substr(0,3) + "-" + number.substr(3,3) + "-"; break;
		case 7 : reno = number.substr(0,3) + "-" + number.substr(3,4) + "-"; break;
		case 10 : reno = number.substr(0,3) + "-" + number.substr(3,3) + "-" + number.substr(6); break; 
		case 11 : reno = number.substr(0,3) + "-" + number.substr(3,4) + "-" + number.substr(7); break; 
	}
	
	return reno;
}

this.divData_divDataRight_divDataTop_txtNO_MOBILE_onkeyup = function(obj:nexacro.Edit,e:nexacro.KeyEventInfo)
{
	if((e.keycode >= 48 && e.keycode <= 57) || (e.keycode >= 96 && e.keycode <= 105))
	{
		obj.set_value(this.fnConvertMobileNumber(obj.value));
	}
};


this.divData_divDataRight_divDataBottom_tabData_tab1_btnDivCopy_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	// 약정정보 탭이라면.
	if(this.fnGetTabIndex() == 1)
	{
		var nrow = this.gfnGridAdd(this.dxGrid1, "bottom");
		this.dsList1.setColumn(nrow, "TY_NAPIP" , this.dsList1.getColumn(nrow-1, "TY_NAPIP"));
		this.dsList1.setColumn(nrow, "NO_NAPCHA" , this.dsList1.getColumn(nrow-1, "NO_NAPCHA"));
		this.dsList1.setColumn(nrow, "DT_STARTAGREE" , this.dsList1.getColumn(nrow-1, "DT_STARTAGREE"));
		this.dsList1.setColumn(nrow, "DT_ENDAGREE" , this.dsList1.getColumn(nrow-1, "DT_ENDAGREE"));
		this.dsList1.setColumn(nrow, "처리금액" , this.dsList1.getColumn(nrow-1, "처리금액"));
		this.dsList1.setColumn(nrow, "AM_LAND" , this.dsList1.getColumn(nrow-1, "AM_LAND"));
		this.dsList1.setColumn(nrow, "AM_BUILDING" , this.dsList1.getColumn(nrow-1, "AM_BUILDING"));
		this.dsList1.setColumn(nrow, "AM_VAT" , this.dsList1.getColumn(nrow-1, "AM_VAT" ));
		this.dsList1.setColumn(nrow, "AM_SELLING" , this.dsList1.getColumn(nrow-1, "AM_SELLING"));
	}
};


/************************************************************************
 * 확장 버튼 실행
 ************************************************************************/
this.fnConform = function()
{
	if(this.dsList1.rowcount == 0)
	{
		this.gfnAlert("약정정보가 없습니다. 약정정보를 입력해주십시오.");
		return false;
	}
	
	var param = {};
	param.CD_ACNTUNIT = this.dsSearch.getColumn(0, "CD_ACNTUNIT");
	param.DS_ACNTUNIT = this.dsSearch.getColumn(0, "DS_ACNTUNIT");;
	param.DONG		  = this.dsSearch.getColumn(0, "NO_DONG");
	param.FLOOR		  = this.dsSearch.getColumn(0, "NO_FLOOR");
	param.HO 		  = this.dsSearch.getColumn(0, "NO_HO");
	param.UNIONMEMBER = this.dsSearch.getColumn(0, "NO_UNIONMEMBER");
	param.NO_SIZE 	  = this.dsList.getColumn(0, "NO_SIZE");
	param.TY_TYPE 	  = this.dsList.getColumn(0, "TY_TYPE");
	param.TY_DISTRIC  = this.dsList.getColumn(0, "TY_DISTRICT");
	param.RT_OPTION   = this.dsList.getColumn(0, "RT_OPTION");
	param.DS_OPTION   = this.dsList.getColumn(0, "DS_OPTION");
	param.AM_RECEIVED = this.dsList1.getColumn(0, "AM_SELLING");
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DRB_DLGCONTRACT", "fnDLGCONTRACT_callback", param);	
}

this.fnDLGCONTRACT_callback = function(strID, val)
{
	if(val == true)
	{
		this.FormBtns.Select.click();
	}
}

this.fnCancel = function()
{
	var param = {};
	param.CD_ACNTUNIT 	= this.dsSearch.getColumn(0, "CD_ACNTUNIT");
	param.DS_ACNTUNIT 	= this.dsSearch.getColumn(0, "DS_ACNTUNIT");;
	param.DONG		  	= this.dsSearch.getColumn(0, "NO_DONG");
	param.FLOOR		  	= this.dsSearch.getColumn(0, "NO_FLOOR");
	param.HO 		  	= this.dsSearch.getColumn(0, "NO_HO");
	param.UNIONMEMBER 	= this.dsSearch.getColumn(0, "NO_UNIONMEMBER");
	param.NO_SIZE 	  	= this.dsList.getColumn(0, "NO_SIZE");
	param.TY_TYPE 	  	= this.dsList.getColumn(0, "TY_TYPE");
	param.TY_DISTRIC  	= this.dsList.getColumn(0, "TY_DISTRICT");
	param.RT_OPTION   	= this.dsList.getColumn(0, "RT_OPTION");
	param.DS_OPTION   	= this.dsList.getColumn(0, "DS_OPTION");
	param.DT_CONTRACT   = this.dsList.getColumn(0, "DT_CONTRACT");
	param.DS_CONTRACTOR = this.dsList.getColumn(0, "DS_CONTRACTOR");
	param.NO_JUMIN      = this.dsList.getColumn(0, "NO_JUMIN");
	param.NO_OFFICETEL  = this.dsList.getColumn(0, "NO_OFFICETEL");
	param.NO_TEL        = this.dsList.getColumn(0, "NO_TEL");
	param.NO_MOBILE     = this.dsList.getColumn(0, "NO_MOBILE");
	param.CD_VENDOR     = this.dsList.getColumn(0, "CD_VENDOR");
	param.DS_VENDOR     = this.dsList.getColumn(0, "DS_VENDOR");
	param.DS_UPTAE      = this.dsList.getColumn(0, "DS_UPTAE");
	param.DS_UPJONG     = this.dsList.getColumn(0, "DS_UPJONG");
	param.DS_EMAIL      = this.dsList.getColumn(0, "DS_EMAIL");
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DRB_DLGCONTRACTRETRACT", "fnDLGCONTRACTRETRACT_callback", param);	
}

this.fnDLGCONTRACTRETRACT_callback = function(strID, val)
{
	if(val == true)
	{
		this.FormBtns.Select.click();
	}
}

this.fnJoint = function()
{
	var param = {};
	param.CD_ACNTUNIT 	= this.dsSearch.getColumn(0, "CD_ACNTUNIT");
	param.DS_ACNTUNIT 	= this.dsSearch.getColumn(0, "DS_ACNTUNIT");;
	param.DONG		  	= this.dsSearch.getColumn(0, "NO_DONG");
	param.FLOOR		  	= this.dsSearch.getColumn(0, "NO_FLOOR");
	param.HO 		  	= this.dsSearch.getColumn(0, "NO_HO");
	param.UNIONMEMBER 	= this.dsSearch.getColumn(0, "NO_UNIONMEMBER");
	param.NO_SIZE 	  	= this.dsList.getColumn(0, "NO_SIZE");
	param.TY_TYPE 	  	= this.dsList.getColumn(0, "TY_TYPE");
	param.TY_DISTRIC  	= this.dsList.getColumn(0, "TY_DISTRICT");
	param.RT_OPTION   	= this.dsList.getColumn(0, "RT_OPTION");
	param.DS_OPTION   	= this.dsList.getColumn(0, "DS_OPTION");
	param.AM_RECEIVED   = this.dsListSum1.getColumn(0, "AM_SELLING");
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DRB_JOINTCONTRACTOR", "fnJOINTCONTRACTOR_callback", param);
}

this.fnJOINTCONTRACTOR_callback = function(strID, val)
{
	if(val == true)
	{
		this.FormBtns.Select.click();
	}
}

this.fnAgreeCopy = function()
{
	var msg = "타 동층호의 약정을 복사하기 위해서는 현재의 약정 정보를\r\n삭제해야 합니다. 삭제 하시겠습니까?";
	this.gfnConfirm(msg , "fnAgreeCopy_callback");
}

this.fnAgreeCopy_callback = function(strID, val)
{
	if(val == true)
	{
		this.fnAgreeDelete("copy");
	}
}

this.fnAgreeOpen = function()
{
	var param = {};
	param.CD_ACNTUNIT 	= this.dsSearch.getColumn(0, "CD_ACNTUNIT");
	param.DS_ACNTUNIT 	= this.dsSearch.getColumn(0, "DS_ACNTUNIT");;
	param.DONG		  	= this.dsSearch.getColumn(0, "NO_DONG");
	param.FLOOR		  	= this.dsSearch.getColumn(0, "NO_FLOOR");
	param.HO 		  	= this.dsSearch.getColumn(0, "NO_HO");
	param.UNIONMEMBER 	= this.dsSearch.getColumn(0, "NO_UNIONMEMBER");
	param.NO_SIZE 	  	= this.dsList.getColumn(0, "NO_SIZE");
	param.TY_TYPE 	  	= this.dsList.getColumn(0, "TY_TYPE");
	param.TY_DISTRIC  	= this.dsList.getColumn(0, "TY_DISTRICT");
	param.RT_OPTION   	= this.dsList.getColumn(0, "RT_OPTION");
	param.DS_OPTION   	= this.dsList.getColumn(0, "DS_OPTION");
	param.AM_RECEIVED   = this.dsListSum1.getColumn(0, "AM_SELLING");
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DRB_DLGAGREEMENTCOPY", "fnAgreeOpen_callback", param);	
}

this.fnAgreeOpen_callback = function(strID, val)
{
	if(!this.gfnIsNull(val))
	{
		this.fnAgreeSelect(val.COPY_DONG, val.COPY_FLOOR, val.COPY_HO, val.DONG_CD_ACNTUNIT);
	}
}

this.fnAgreeDeleteChk = function()
{
	var msg = "기존 해당 동층호의 약정정보를 삭제하시겠습니까";
	this.gfnConfirm(msg, "fnAgreeDeleteChk_callback");
}

this.fnAgreeDeleteChk_callback = function(strID, val)
{
	if(val == true)
	{
		this.fnAgreeDelete("del");
	}
}

// 약정 삭제.
this.fnAgreeDelete = function(val)
{
	this.dsAgree.clearData();
	var nrow = this.dsAgree.addRow();
	
	this.dsAgree.setColumn(nrow, "CD_ACNTUNIT", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0,6));
	this.dsAgree.setColumn(nrow, "TY_GUBUN", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6,1));
	this.dsAgree.setColumn(nrow, "NO_CHASU", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7,2));
	this.dsAgree.setColumn(nrow, "NO_DONG", this.dsSearch.getColumn(0, "NO_DONG"));
	this.dsAgree.setColumn(nrow, "NO_FLOOR", this.dsSearch.getColumn(0, "NO_FLOOR"));
	this.dsAgree.setColumn(nrow, "NO_HO", this.dsSearch.getColumn(0, "NO_HO"));
	this.dsAgree.setColumn(nrow, "NO_UNIONMEMBER", this.dsSearch.getColumn(0, "NO_UNIONMEMBER"));

	var strSvcId    = "delete_agree";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "delete_agree=dsAgree";
	var outData     = "";
	var strArg      = "copy=" + val;
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

// 약정 복사.
this.fnAgreeSelect = function(dong, floor, ho, cd_acntunit)
{
	this.dsAgree.clearData();
	this.dsAgree.addRow();
	this.dsAgree.setColumn(0, "CD_ACNTUNIT", this.gfnNvl(cd_acntunit,"").substr(0,6));
	this.dsAgree.setColumn(0, "TY_GUBUN", this.gfnNvl(cd_acntunit,"").substr(6,1));
	this.dsAgree.setColumn(0, "NO_CHASU",this.gfnNvl(cd_acntunit,"").substr(7,2));
	this.dsAgree.setColumn(0, "NO_DONG", dong);
	this.dsAgree.setColumn(0, "NO_FLOOR", floor);
	this.dsAgree.setColumn(0, "NO_HO", ho);
	this.dsAgree.setColumn(0, "NO_UNIONMEMBER", this.dsSearch.getColumn(0, "NO_UNIONMEMBER"));

	var strSvcId    = "select_agree";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
 	var inData      = "select1=dsSelect";
 	var outData     = "dsList1=select10";
	var strArg      = "" ;
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

this.fnItemContract = function()
{
	var param = {};
	
	param.CD_ACNTUNIT 	= this.dsSearch.getColumn(0, "CD_ACNTUNIT");
	param.DS_ACNTUNIT 	= this.dsSearch.getColumn(0, "DS_ACNTUNIT");;
	param.NO_DONG		= this.dsSearch.getColumn(0, "NO_DONG");
	param.NO_FLOOR		= this.dsSearch.getColumn(0, "NO_FLOOR");
	param.NO_HO 		= this.dsSearch.getColumn(0, "NO_HO");
	param.NO_UNIONMEMBER= "";
	param.NO_CONTRACT	= "";
	param.NO_SIZE 	  	= this.dsList.getColumn(0, "NO_SIZE");
	param.TY_TYPE 	  	= this.dsList.getColumn(0, "TY_TYPE");
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DRF_ITEMCONTRACT", "", param);	
}

this.fnContractSetting = function()
{
	var msg = "해당 세대의 계약처리여부 상태값을 변경합니다.\r\n계약불가->계약가능 / 계약가능->계약불가.\r\n처리 하시겠습니까?";
	this.gfnConfirm(msg,"fnContractSetting_callback");
}

this.fnContractSetting_callback = function(strID, val)
{
	if(val == true)
	{
		this.dsUpdateCont.clearData();
		var nrow = this.dsUpdateCont.addRow();
		this.dsUpdateCont.setColumn(nrow, "CD_ACNTUNIT", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0,6));
		this.dsUpdateCont.setColumn(nrow, "TY_GUBUN", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6,1));
		this.dsUpdateCont.setColumn(nrow, "NO_CHASU", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7,2));
		this.dsUpdateCont.setColumn(nrow, "NO_DONG", this.dsSearch.getColumn(0, "NO_DONG"));
		this.dsUpdateCont.setColumn(nrow, "NO_FLOOR", this.dsSearch.getColumn(0, "NO_FLOOR"));
		this.dsUpdateCont.setColumn(nrow, "NO_HO", this.dsSearch.getColumn(0, "NO_HO"));
		this.dsUpdateCont.setColumn(nrow, "ID_UPDATE", this.AuthClient.ID_USER);
	
		var strSvcId    = "update_cont";
		var strSvcType  = "save";
		var inProc		= "_dsProc";
		var inData      = "update_cont=dsUpdateCont";
		var outData     = "";
		var strArg      = "";
		var callBackFnc = "fnCallback";
		
		this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
							strSvcType , 	// transaction을 요청할 구분
							inProc,			// Procedure 정보 Dataset 이름
							inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
							outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
							strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
							callBackFnc); // 통신방법 정의 [생략가능]
	
	}
}

this.fnPreview2 = function()
{
	this.gfnAlert("Drb_ContractDetailPreview2 호출");
}

this.fnPayment = function()
{
	var param = {};
	
	param.CD_ACNTUNIT 	= this.dsSearch.getColumn(0, "CD_ACNTUNIT");
	param.DS_ACNTUNIT 	= this.dsSearch.getColumn(0, "DS_ACNTUNIT");;
	param.NO_DONG		= this.dsSearch.getColumn(0, "NO_DONG");
	param.NO_FLOOR		= this.dsSearch.getColumn(0, "NO_FLOOR");
	param.NO_HO 		= this.dsSearch.getColumn(0, "NO_HO");
	param.NO_UNIONMEMBER= "";
	param.TY_TYPE 	  	= this.dsList.getColumn(0, "TY_TYPE");
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DRB_CONTRACTDETAIL_DLG", "fnPayment_callback", param);	
	
}

this.fnPayment_callback = function(strID, val)
{
	if(val == true)
	{	
		this.gfnAlert("Drb_ContractDetailPreview4 호출");
	}
}

this.fnDrcReceipt = function()
{
	var param = {};
	
	param.CD_ACNTUNIT 	= this.dsSearch.getColumn(0, "CD_ACNTUNIT");
	param.DS_ACNTUNIT 	= this.dsSearch.getColumn(0, "DS_ACNTUNIT");;
	param.NO_DONG		= this.dsSearch.getColumn(0, "NO_DONG");
	param.NO_FLOOR		= this.dsSearch.getColumn(0, "NO_FLOOR");
	param.NO_HO 		= this.dsSearch.getColumn(0, "NO_HO");
	param.NO_UNIONMEMBER= "";
	param.DS_CONTRACTOR = this.dsList.getColumn(0, "DS_CONTRACTOR");
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DRC_RECEIPTDETAIL", "fnDrcReceipt_callback", param);	
}

this.fnDrcReceipt_callback = function(strID, val)
{
	if(val == true)
	{
		this.FormBtns.Select.click();
	}
}

this.fnDrfReceipt = function()
{
	var param = {};
	
	param.CD_ACNTUNIT 	= this.dsSearch.getColumn(0, "CD_ACNTUNIT");
	param.DS_ACNTUNIT 	= this.dsSearch.getColumn(0, "DS_ACNTUNIT");;
	param.NO_DONG		= this.dsSearch.getColumn(0, "NO_DONG");
	param.NO_FLOOR		= this.dsSearch.getColumn(0, "NO_FLOOR");
	param.NO_HO 		= this.dsSearch.getColumn(0, "NO_HO");
	param.NO_UNIONMEMBER= "";
	param.DS_CONTRACTOR = this.dsList.getColumn(0, "DS_CONTRACTOR");
	param.TY_TYPE 		= this.dsList.getColumn(0, "TY_TYPE");
	param.NO_SIZE 		= this.dsList.getColumn(0, "NO_SIZE");
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DRF_RECEIPTDETAIL", "fnDrFReceipt_callback", param);	
}

this.fnDrfReceipt_callback = function(strID, val)
{
	if(val == true)
	{
		this.FormBtns.Select.click();
	}
}

]]></Script>
    <Objects>
      <Dataset id="dsList">
        <ColumnInfo>
          <Column id="NO_SIZE" type="STRING" size="256"/>
          <Column id="TY_TYPE" type="STRING" size="256"/>
          <Column id="NO_CONTRACT" type="STRING" size="256"/>
          <Column id="TY_STATE" type="STRING" size="256"/>
          <Column id="TY_BUNYANG" type="STRING" size="256"/>
          <Column id="TY_CONTRACTOR" type="STRING" size="256"/>
          <Column id="DT_CONTRACT" type="STRING" size="256"/>
          <Column id="DS_CONTRACTOR" type="STRING" size="256"/>
          <Column id="NO_JUMIN" type="STRING" size="256"/>
          <Column id="NO_TEL" type="STRING" size="256"/>
          <Column id="NO_OFFICETEL" type="STRING" size="256"/>
          <Column id="NO_MOBILE" type="STRING" size="256"/>
          <Column id="NO_RECPOST" type="STRING" size="256"/>
          <Column id="DS_RECADDR3" type="STRING" size="256"/>
          <Column id="NO_POST" type="STRING" size="256"/>
          <Column id="DS_ADDR3" type="STRING" size="256"/>
          <Column id="CD_VENDOR" type="STRING" size="256"/>
          <Column id="DS_UPTAE" type="STRING" size="256"/>
          <Column id="DS_UPJONG" type="STRING" size="256"/>
          <Column id="DS_VENDOR1" type="STRING" size="256"/>
          <Column id="YN_EBILL" type="STRING" size="256"/>
          <Column id="NO_GUJA" type="STRING" size="256"/>
          <Column id="DS_EMAIL" type="STRING" size="256"/>
          <Column id="YN_JOINT" type="STRING" size="256"/>
          <Column id="YN_BUNYANG" type="STRING" size="256"/>
          <Column id="DS_REMARK" type="STRING" size="256"/>
          <Column id="RT_OPTION" type="STRING" size="256"/>
          <Column id="DS_OPTION" type="STRING" size="256"/>
          <Column id="TY_DISTRICT" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DRBPR_CONTRACTDETAIL_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">update</Col>
            <Col id="SP">DRBPR_CONTRACTOR_UPDATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">select_sum</Col>
            <Col id="SP">DRAPR_SIZEOPTION_INFO_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">select1</Col>
            <Col id="SP">DRBPR_AGREEMENT_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">insert1</Col>
            <Col id="SP">DRBPR_AGREEMENT_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">update1</Col>
            <Col id="SP">DRBPR_AGREEMENT_UPDATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">delete1</Col>
            <Col id="SP">DRBPR_AGREEMENT_DELETE</Col>
          </Row>
          <Row>
            <Col id="TARGET">select2</Col>
            <Col id="SP">DRBPR_RECEIVED_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">delete_agree</Col>
            <Col id="SP">DRBPR_AGREEMENT_SAEDAE_DELETE</Col>
          </Row>
          <Row>
            <Col id="TARGET">select_agree</Col>
            <Col id="SP">DRBPR_AGREEMENT_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">update_cont</Col>
            <Col id="SP">DRBPR_CONTRACTPOSSILBE_HANDLE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_ACNTUNIT" type="STRING" size="256"/>
          <Column id="DS_ACNTUNIT" type="STRING" size="256"/>
          <Column id="NO_DONG" type="STRING" size="256"/>
          <Column id="NO_FLOOR" type="STRING" size="256"/>
          <Column id="NO_HO" type="STRING" size="256"/>
          <Column id="NO_UNIONMEMBER" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_CONTRACTOR">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">P</Col>
            <Col id="DS_CODE">개인</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">C</Col>
            <Col id="DS_CODE">법인</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">A</Col>
            <Col id="DS_CODE">개인사업자</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_EBILL">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">Y</Col>
            <Col id="DS_CODE">전자</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">N</Col>
            <Col id="DS_CODE">종이</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsYN_JOINT">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">Y</Col>
            <Col id="DS_CODE">있음</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">N</Col>
            <Col id="DS_CODE">없음</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_STATE">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">O</Col>
            <Col id="DS_CODE">전체보기</Col>
          </Row>
          <Row>
            <Col id="DS_CODE">미분양</Col>
            <Col id="CD_CODE">X</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">K</Col>
            <Col id="DS_CODE">분양</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsYN_BUNYANG">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">Y</Col>
            <Col id="DS_CODE">분양</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">N</Col>
            <Col id="DS_CODE">임대</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsList1" onvaluechanged="dsList1_onvaluechanged"/>
      <Dataset id="dsList2"/>
      <Dataset id="dsListSum">
        <ColumnInfo>
          <Column id="AM_LAND" type="BIGDECIMAL" size="256"/>
          <Column id="AM_BUILDING" type="BIGDECIMAL" size="256"/>
          <Column id="AM_VAT" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SELLING" type="BIGDECIMAL" size="256"/>
          <Column id="RT_LANDRATE" type="BIGDECIMAL" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsListSum1">
        <ColumnInfo>
          <Column id="AM_LAND" type="BIGDECIMAL" size="256"/>
          <Column id="AM_BUILDING" type="BIGDECIMAL" size="256"/>
          <Column id="AM_VAT" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SELLING" type="BIGDECIMAL" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ctxtCD_ACNTUNIT" propid="value" datasetid="dsSearch" columnid="CD_ACNTUNIT"/>
      <BindItem id="item1" compid="divSearch.form.ctxtDS_ACNTUNIT" propid="value" datasetid="dsSearch" columnid="DS_ACNTUNIT"/>
      <BindItem id="item2" compid="divSearch.form.ctxtNO_DONG" propid="value" datasetid="dsSearch" columnid="NO_DONG"/>
      <BindItem id="item3" compid="divSearch.form.ctxtNO_FLOOR" propid="value" datasetid="dsSearch" columnid="NO_FLOOR"/>
      <BindItem id="item41" compid="divSearch.form.ctxtNO_HO" propid="value" datasetid="dsSearch" columnid="NO_HO"/>
      <BindItem id="item4" compid="divData.form.divDataTop.form.txtNO_SIZE" propid="value" datasetid="dsList" columnid="NO_SIZE"/>
      <BindItem id="item5" compid="divData.form.divDataTop.form.txtTY_TYPE" propid="value" datasetid="dsList" columnid="TY_TYPE"/>
      <BindItem id="item6" compid="divData.form.divDataTop.form.txtNO_CONTRACT" propid="value" datasetid="dsList" columnid="NO_CONTRACT"/>
      <BindItem id="item7" compid="divData.form.divDataTop.form.txtTY_STATE" propid="value" datasetid="dsList" columnid="TY_STATE"/>
      <BindItem id="item8" compid="divData.form.divDataTop.form.txtTY_BUNYANG" propid="value" datasetid="dsList" columnid="TY_BUNYANG"/>
      <BindItem id="item9" compid="divData.form.divDataTop.form.rdoTY_CONTRACTOR" propid="value" datasetid="dsList" columnid="TY_CONTRACTOR"/>
      <BindItem id="item10" compid="divData.form.divDataTop.form.txtDT_CONTRACT" propid="value" datasetid="dsList" columnid="DT_CONTRACT"/>
      <BindItem id="item11" compid="divData.form.divDataTop.form.txtDS_CONTRACTOR" propid="value" datasetid="dsList" columnid="DS_CONTRACTOR"/>
      <BindItem id="item12" compid="divData.form.divDataTop.form.txtNO_JUMIN" propid="value" datasetid="dsList" columnid="NO_JUMIN"/>
      <BindItem id="item13" compid="divData.form.divDataTop.form.txtNO_TEL" propid="value" datasetid="dsList" columnid="NO_TEL"/>
      <BindItem id="item14" compid="divData.form.divDataTop.form.txtNO_OFFICETEL" propid="value" datasetid="dsList" columnid="NO_OFFICETEL"/>
      <BindItem id="item15" compid="divData.form.divDataTop.form.txtNO_MOBILE" propid="value" datasetid="dsList" columnid="NO_MOBILE"/>
      <BindItem id="item16" compid="divData.form.divDataTop.form.cfNO_RECPOST.form.CDTextBox" propid="value" datasetid="dsList" columnid="NO_RECPOST"/>
      <BindItem id="item17" compid="divData.form.divDataTop.form.cfNO_RECPOST.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_RECADDR2"/>
      <BindItem id="item18" compid="divData.form.divDataTop.form.txtDS_RECADDR2" propid="value" datasetid="dsList" columnid="DS_RECADDR3"/>
      <BindItem id="item19" compid="divData.form.divDataTop.form.cfNO_POST.form.CDTextBox" propid="value" datasetid="dsList" columnid="NO_POST"/>
      <BindItem id="item20" compid="divData.form.divDataTop.form.cfNO_POST.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_ADDR2"/>
      <BindItem id="item21" compid="divData.form.divDataTop.form.txtDS_ADDR2" propid="value" datasetid="dsList" columnid="DS_ADDR3"/>
      <BindItem id="item22" compid="divData.form.divDataTop.form.txtCD_VENDOR" propid="value" datasetid="dsList" columnid="CD_VENDOR"/>
      <BindItem id="item23" compid="divData.form.divDataTop.form.txtDS_VENDOR" propid="value" datasetid="dsList" columnid="DS_VENDOR1"/>
      <BindItem id="item24" compid="divData.form.divDataTop.form.txtDS_UPTAE" propid="value" datasetid="dsList" columnid="DS_UPTAE"/>
      <BindItem id="item25" compid="divData.form.divDataTop.form.txtDS_UPJONG" propid="value" datasetid="dsList" columnid="DS_UPJONG"/>
      <BindItem id="item26" compid="divData.form.divDataTop.form.rdoTY_EBILL" propid="value" datasetid="dsList" columnid="YN_EBILL"/>
      <BindItem id="item27" compid="divData.form.divDataTop.form.ctxtNO_GUJA" propid="value" datasetid="dsList" columnid="NO_GUJA"/>
      <BindItem id="item28" compid="divData.form.divDataTop.form.txtDS_EMAIL" propid="value" datasetid="dsList" columnid="DS_EMAIL"/>
      <BindItem id="item29" compid="divData.form.divDataTop.form.rdoYN_JOINT" propid="value" datasetid="dsList" columnid="YN_JOINT"/>
      <BindItem id="item30" compid="divData.form.divDataTop.form.rdoYN_BUNYANG" propid="value" datasetid="dsList" columnid="YN_BUNYANG"/>
      <BindItem id="item31" compid="divData.form.divDataTop.form.txtDS_REMARK" propid="value" datasetid="dsList" columnid="DS_REMARK"/>
      <BindItem id="item32" compid="divData.form.divDataTop.form.txtAM_LAND" propid="value" datasetid="dsListSum" columnid="AM_LAND"/>
      <BindItem id="item33" compid="divData.form.divDataTop.form.txtAM_BUILDING" propid="value" datasetid="dsListSum" columnid="AM_BUILDING"/>
      <BindItem id="item34" compid="divData.form.divDataTop.form.txtAM_VAT" propid="value" datasetid="dsListSum" columnid="AM_VAT"/>
      <BindItem id="item35" compid="divData.form.divDataTop.form.txtAM_SELLING" propid="value" datasetid="dsListSum" columnid="AM_SELLING"/>
      <BindItem id="item36" compid="divData.form.divDataTop.form.txtRT_LANDRATE" propid="value" datasetid="dsListSum" columnid="RT_LANDRATE"/>
      <BindItem id="item37" compid="divData.form.divDataBottom.form.tabData.tab1.form.txtAM_LAND" propid="value" datasetid="dsListSum1" columnid="AM_LAND"/>
      <BindItem id="item38" compid="divData.form.divDataBottom.form.tabData.tab1.form.txtAM_BUILDING" propid="value" datasetid="dsListSum1" columnid="AM_BUILDING"/>
      <BindItem id="item39" compid="divData.form.divDataBottom.form.tabData.tab1.form.txtAM_VAT" propid="value" datasetid="dsListSum1" columnid="AM_VAT"/>
      <BindItem id="item40" compid="divData.form.divDataBottom.form.tabData.tab1.form.txtAM_SELLING" propid="value" datasetid="dsListSum1" columnid="AM_SELLING"/>
    </Bind>
  </Form>
</FDL>
