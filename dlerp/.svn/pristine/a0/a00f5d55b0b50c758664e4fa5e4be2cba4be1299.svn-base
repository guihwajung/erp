<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="세대정보 현황 조회" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" text="">
          <Layouts>
            <Layout>
              <Static id="staCD_SITE" taborder="3" text="현장코드" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_SITE" CodeFindName="DBX_CFMAINSITE" CDTextWidth="70" taborder="0" left="staCD_SITE:0.0" top="10.0" width="300" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staDS_DONG" taborder="4" text="동" left="ccfCD_SITE:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfDS_DONG" CodeFindName="DBX_CFASDONGHO" CDTextWidth="67" taborder="1" left="staDS_DONG:0.0" top="10.0" width="96" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staDS_HO" taborder="5" text="호" left="ccfDS_DONG:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfDS_HO" CodeFindName="DBX_CFASDONGHO" CDTextWidth="67" taborder="2" left="staDS_HO:0.0" top="10.0" width="96" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="1" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);
	// ---------------------------//
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	if(this.FormInfo.TY_AYTH == "R") {
		this.btnFormButton2.set_enable(false);
	}
	
	if(this.FormInfo.GR_SEARCH >= 7){
		this.dsSearch.setColumn(0, "CD_SITE", this.AuthClient.CD_DEPT);
		this.ccfCD_SITE.form.fnCodeFindLoad();
		this.ccfCD_SITE.set_enable(false);
	}
	
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {};

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnFormButton1 = this.gfnFormButtonAdd("WorkBtn1", "fnWorkBtn");  // 세대주변경
	this.btnFormButton2 = this.gfnFormButtonAdd("WorkBtn2", "fnWorkBtn");  // 세대이력조회
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_SITE = this.divSearch.form.ccfCD_SITE;                        // 단지코드
	this.ccfDS_DONG = this.divSearch.form.ccfDS_DONG;                        // 동코드
	this.ccfDS_HO   = this.divSearch.form.ccfDS_HO;                          // 호코드	
	
	this.dxGrid     = this.divData.form.objGrid;
	
	this.dsSearch.setColumn(0, "CD_SITE", this.gfnNvl(this.UserInfo.DB_SPACE01, ""));
	this.dsSearch.setColumn(0, "DS_SITE", this.gfnNvl(this.UserInfo.DB_SPACE02, ""));
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.ccfCD_SITE.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_SITE.AfterCDTextChanged     = "fnAfterCDTextChanged";
	
	this.ccfDS_DONG.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";       // 동코드 파라미터
	this.ccfDS_DONG.AfterCDTextChanged     = "fnAfterCDTextChanged";

	this.ccfDS_HO.BeforeUserDataSetParam   = "fnBeforeUserDataSetParam";         // 호코드 파라미터
	this.ccfDS_HO.AfterCDTextChanged       = "fnAfterCDTextChanged";
	
	this.gfnGridInit(this.dxGrid, this.dsList, "DB", "DBS_HOUSEINFO");  // pForm.gfnGridInit = function(objGrid, objDs, cd_system, id_grid, tree_column, level_column, is_manual) 
	//this.dxGrid.set_selecttype("row");
	this.dxGrid.BeforeUserDataSetParam     = "fnGridSub_BeforeUserDataSetParam";
	this.dsSearch.addEventHandler("onvaluechanged", this.dsSearch_onvaluechanged, this);
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_SITE"      , "string");           // 단지코드
	this.dsSelect.addColumn("DS_DONG"      , "string");           // 동
	//this.dsSelect.addColumn("DS_CUNG"      , "string");           // 층	
	this.dsSelect.addColumn("DS_HO"        , "string");           // 호	
	
	this.dsUpdate = new Dataset();
	this.dsUpdate.addColumn("CD_SITE"      , "string");           // 단지코드
	this.dsUpdate.addColumn("DS_DONG"      , "string");           // 동
	this.dsUpdate.addColumn("DS_CUNG"      , "string");           // 층	
	this.dsUpdate.addColumn("DS_HO"        , "string");           // 호
	this.dsUpdate.addColumn("PN_SDJ"       , "string");
	this.dsUpdate.addColumn("NO_TEL_H"     , "string");
	this.dsUpdate.addColumn("NO_TEL_M"     , "string");
	this.dsUpdate.addColumn("DS_GUBUN"     , "string");
	this.dsUpdate.addColumn("DT_IJYJIL"    , "string");
	this.dsUpdate.addColumn("DT_JGNBIL"    , "string");
	this.dsUpdate.addColumn("DT_KBCIL"     , "string");
	this.dsUpdate.addColumn("DT_IPJU"      , "string");
	this.dsUpdate.addColumn("YN_WEEK"      , "string");
	this.dsUpdate.addColumn("RM_SPECIAL"   , "string");
	this.dsUpdate.addColumn("DS_REMODEL"   , "string");
	this.dsUpdate.addColumn("TY_TYPE"      , "string");
	this.dsUpdate.addColumn("NO_SIZE"      , "bigdecimal");
	this.dsUpdate.addColumn("NO_PSIZE"     , "bigdecimal");
	this.dsUpdate.addColumn("SZ_EXCLUSIVE" , "bigdecimal");
	this.dsUpdate.addColumn("SZ_PEXCLUSIVE", "bigdecimal");
	this.dsUpdate.addColumn("TY_GUBUN"     , "string");           // 수정자ID
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	var v_dong = "", v_ho = "";
	
// 	if(!this.gfnIsNull(this.dsSearch.getColumn(0, "CD_HO")) && this.dsSearch.getColumn(0, "CD_HO") != "공용") {
// 		v_chun = this.dsSearch.getColumn(0, "CD_HO").substr(0, 2);
// 		v_ho   = "0" + this.dsSearch.getColumn(0, "CD_HO").substr(2, 2);
// 	}
// 	
// 	if(this.dsSearch.getColumn(0, "CD_HO") == "공용") {
// 		v_chun = "000";
// 		v_ho   = "00";
// 	}
	
	if(!this.gfnIsNull(this.dsSearch.getColumn(0, "DS_HO")) && this.dsSearch.getColumn(0, "DS_HO") != "공용") {
		v_dong = this.dsSearch.getColumn(0, "DS_DONG");
		v_ho   = this.dsSearch.getColumn(0, "DS_HO");
	}
	
	if(this.dsSearch.getColumn(0, "DS_HO") == "공용") {
		v_dong = "0000";
		v_ho   = "0000";
	}
	
	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));          // 단지코드	
	this.dsSelect.setColumn(0, "DS_DONG", v_dong);          // 동
	//this.dsSelect.setColumn(0, "DS_CUNG", v_chun);                                         // 층
	this.dsSelect.setColumn(0, "DS_HO"  , v_ho);            // 호
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	저장
 */
this.fnSave = function()
{
	this.dsUpdate.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
	    var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
		    case "U":
			    var v_chun = "", v_ho = "";
	
				if(!this.gfnIsNull(this.dsList.getColumn(i, "DS_HO")) 
				   && this.dsList.getColumn(i, "DS_HO") != "공용") {
					v_chun = this.dsList.getColumn(i, "DS_HO").substr(0, 2);
					v_ho   = 0 + this.dsList.getColumn(i, "DS_HO").substr(2, 2);
				}
				
			    if(this.dsList.getColumn(i, "DS_HO") == "공용") {
					v_chun = "000";
					v_ho   = "00";
				}
				
				var nrow = this.dsUpdate.addRow();
				this.dsUpdate.setColumn(nrow, "CD_SITE"      , this.dsSearch.getColumn(0, "CD_SITE"));
				this.dsUpdate.setColumn(nrow, "DS_DONG"      , this.dsList.getColumn(i, "DS_DONG"));
				this.dsUpdate.setColumn(nrow, "DS_CUNG"      , v_chun);
				this.dsUpdate.setColumn(nrow, "DS_HO"        , v_ho);
				this.dsUpdate.setColumn(nrow, "PN_SDJ"       , this.dsList.getColumn(i, "PN_SDJ"));
				this.dsUpdate.setColumn(nrow, "NO_TEL_H"     , this.dsList.getColumn(i, "NO_TEL_H"));
				this.dsUpdate.setColumn(nrow, "NO_TEL_M"     , this.dsList.getColumn(i, "NO_TEL_M"));
				this.dsUpdate.setColumn(nrow, "DS_GUBUN"     , this.dsList.getColumn(i, "DS_GUBUN"));
				this.dsUpdate.setColumn(nrow, "DT_IJYJIL"    , this.fnReplace(this.dsList.getColumn(i, "DT_IJYJIL"), "-", ""));
				this.dsUpdate.setColumn(nrow, "DT_JGNBIL"    , this.fnReplace(this.dsList.getColumn(i, "DT_JGNBIL"), "-", ""));
				this.dsUpdate.setColumn(nrow, "DT_KBCIL"     , this.fnReplace(this.dsList.getColumn(i, "DT_KBCIL"), "-", ""));
				this.dsUpdate.setColumn(nrow, "DT_IPJU"      , this.fnReplace(this.dsList.getColumn(i, "DT_IPJU"), "-", ""));
				this.dsUpdate.setColumn(nrow, "YN_WEEK"      , this.dsList.getColumn(i, "YN_WEEK"));
				this.dsUpdate.setColumn(nrow, "RM_SPECIAL"   , this.dsList.getColumn(i, "RM_SPECIAL"));
				this.dsUpdate.setColumn(nrow, "DS_REMODEL"   , this.dsList.getColumn(i, "DS_REMODEL"));
				this.dsUpdate.setColumn(nrow, "TY_TYPE"      , this.dsList.getColumn(i, "TY_TYPE"));
				this.dsUpdate.setColumn(nrow, "NO_SIZE"      , this.dsList.getColumn(i, "NO_SIZE"));
				this.dsUpdate.setColumn(nrow, "NO_PSIZE"     , this.dsList.getColumn(i, "NO_PSIZE"));
				this.dsUpdate.setColumn(nrow, "SZ_EXCLUSIVE" , this.dsList.getColumn(i, "SZ_EXCLUSIVE"));
				this.dsUpdate.setColumn(nrow, "SZ_PEXCLUSIVE", this.dsList.getColumn(i, "SZ_PEXCLUSIVE"));
				this.dsUpdate.setColumn(nrow, "TY_GUBUN"     , this.dsList.getColumn(i, "TY_GUBUN"));
				break;
				}
	}
	
	var strSvcId    = "update";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "update=dsUpdate";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	this.gfnGridAdd(this.dxGrid);
};

/*
 *	삭제 버튼
 */
this.fnDel = function() {};


/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "CD_SITE"))) {
		this.gfnAlert("현장코드를 입력 하셔야 합니다.", function() {
			this.ccfCD_SITE.form.CDTextBox.setFocus();
		});
		return false;
	}
	return true;
}
/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if(svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
	} 
	
	if(svcID == "update" ){
		if (errorCode == 0) {
			this.gfnAlert("세대정보 갱신이 완료되었습니다.", "");
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
};

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
/*
 * 코드파인드 변경전
 */
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	
	if (id == "ccfCD_SITE") {
		dsUserParam.setColumn(nrow, "CD_AUTHDEPT", this.AuthClient.CD_DEPT);
	}
	
	if (id == "ccfDS_DONG") {
		if (!this.fnSelectValidate()) return false; 
		
		dsUserParam.setColumn(nrow, "TY_TYPE"    , "DONG");
		dsUserParam.setColumn(nrow, "CD_SITE"    , this.dsSearch.getColumn(0, "CD_SITE"));
		dsUserParam.setColumn(nrow, "VALUE1"     , "");
		dsUserParam.setColumn(nrow, "VALUE2"     , "");
	}
	
	if (id == "ccfDS_HO") {
		if (!this.fnSelectValidate()) return false;
		
		dsUserParam.setColumn(nrow, "TY_TYPE"    , "HO");
		dsUserParam.setColumn(nrow, "CD_SITE"    , this.dsSearch.getColumn(0, "CD_SITE"));
		dsUserParam.setColumn(nrow, "VALUE1"     , this.dsSearch.getColumn(0, "DS_DONG"));
		dsUserParam.setColumn(nrow, "VALUE2"     , "");
	}
	
	return true;
};

this.fnGridSub_BeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	
	if (id == "DBX_CFSIZETYPE") {
 		dsUserParam.setColumn(nrow, "CD_ACNTUNIT", this.dsSearch.getColumn(0, "CD_SITE"));
 	}
	return true;
}

/*
 * 코드파인드 변경후
 */
this.fnAfterCDTextChanged = function(id, codeFindData) {

	var arr = codeFindData; 

	if (id == "ccfCD_SITE") {
		if(arr.length > 0) {
			this.UserInfo.DB_SPACE01 = this.dsSearch.getColumn(0, "CD_SITE");
			this.UserInfo.DB_SPACE02 = this.dsSearch.getColumn(0, "DS_SITE");
		}
	}
};
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/

/************************************************************************
 * 확장버튼 이벤트
 ************************************************************************/
/*
 * 이미지 크기 설정 버튼
 */
this.fnWorkBtn = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if(!this.gfnGridIsRow(this.dxGrid)) return;
	
	// 세대주변경
	if(obj.id == "btnExt_WorkBtn1"){          
		
		var param = {};
		
		param.CD_SITE = this.dsSearch.getColumn(0, "CD_SITE");
		param.CD_CORP = "";
		param.CD_DONG = this.dsList.getColumn(this.dsList.rowposition, "DS_DONG");
		param.CD_CUNG = this.dsList.getColumn(this.dsList.rowposition, "DS_HO").substr(0, 2);
		param.CD_HO   = "0" + this.dsList.getColumn(this.dsList.rowposition, "DS_HO").substr(0, 2);
		
		this.gfnFormOpen(this.FormInfo.CD_MODULE, "DBS_SDJCHANGE", "", param);
		}
	
	// 세대이력조회
	if(obj.id == "btnExt_WorkBtn2"){   
		
		var param = {};
		
		param.CD_SITE = this.dsSearch.getColumn(0, "CD_SITE");
		param.CD_CORP = "";
		param.CD_DONG = this.dsList.getColumn(this.dsList.rowposition, "DS_DONG");
		param.CD_CUNG = this.dsList.getColumn(this.dsList.rowposition, "DS_HO").substr(0, 2);
		param.CD_HO   = "0" + this.dsList.getColumn(this.dsList.rowposition, "DS_HO").substr(2, 2);
		
		this.gfnFormOpen(this.FormInfo.CD_MODULE, "DBS_SDJHISTORY", "", param);
	}
};

this.fnPopCallback = function(id, val){
	if(val){
		this.FormBtns.Select.click();
		}
	
};

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
 /*
 *	조회 조건 변경시 초기화
 */
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.row > -1 && e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);
		
		if( e.columnid == "CD_SITE" ) {
			this.dsSearch.setColumn(0,"DS_DONG","");
			this.dsSearch.setColumn(0,"DS_HO"  ,"");
		}
		
		if( e.columnid == "DS_DONG" ) {
			this.dsSearch.setColumn(0,"DS_HO"  ,"");
		}
	}
};

/*
*	데이터셋 undefined 문제가 있어 데이터 바인딩 문제 처리.(추후 재검토)
*/
this.fnReplace = function($value, $matchedValue, $swapValue) {

	if($value == undefined) return "";
	
	return nexacro.replaceAll($value, $matchedValue, $swapValue);
}]]></Script>
    <Objects>
      <Dataset id="dsList" onvaluechanged="dsList_onvaluechanged"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DBSPR_HOUSEINFO_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">update</Col>
            <Col id="SP">DBSPR_HOUSEINFO_UPDATE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch">
        <ColumnInfo>
          <Column id="CD_SITE" type="STRING" size="256" description="단지코드"/>
          <Column id="DS_SITE" type="STRING" size="256"/>
          <Column id="CD_DONG" type="STRING" size="256"/>
          <Column id="DS_DONG" type="STRING" size="256"/>
          <Column id="DS_CUNG" type="STRING" size="256"/>
          <Column id="CD_HO" type="STRING" size="256"/>
          <Column id="DS_HO" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_SITE.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_SITE"/>

<BindItem id="item3" compid="divSearch.form.ccfDS_DONG.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_DONG"/>
<BindItem id="item4" compid="divSearch.form.ccfDS_HO.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_HO"/>

      <BindItem id="item2" compid="divSearch.form.ccfDS_DONG.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="DS_DONG"/>
      <BindItem id="item3" compid="divSearch.form.ccfDS_HO.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="DS_HO"/>
    </Bind>
  </Form>
</FDL>
