<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="1280" height="720" titletext="예산대비실적조회(비목)" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="1" left="0" top="10" height="46.0" cssclass="div_SEARCH_Bg" formscrolltype="none" text="" right="0">
          <Layouts>
            <Layout>
              <Static id="staYM_BUDGET" text="조회년월" left="0" top="10.0" width="92" height="24.0" taborder="0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYM_BUDGET" taborder="1" left="staYM_BUDGET:0.0" top="10.0" width="80" height="24.0" url="cmm::cmmCalMM.xfdl" text=""/>
              <Static id="staCD_DEPT" text="귀속부서" left="ctclYM_BUDGET:0.0" top="10.0" width="92" height="24.0" taborder="2" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_DEPT" CodeFindName="DIX_ACNTUNIT_AUTH" CDTextWidth="80" left="staCD_DEPT:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" taborder="3"/>
              <Static id="staCD_DEPT00" text="목표선택" left="542" top="10" width="92" height="24.0" taborder="4" cssclass="sta_WF_SchLabel"/>
              <Combo id="ccboTY_GUBUN" taborder="5" left="633" top="10" width="150" height="24.0" innerdataset="dsTY_GUBUN" datacolumn="DS_CODE" codecolumn="CD_CODE" value="N" text="경영계획" index="0" onitemchanged="divSearch_ccboTY_PAY_onitemchanged"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0" oncelldblclick="divData_objGrid_oncelldblclick"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	this.dsSearch.setColumn(0, "YM_BUDGET", this.gfnGetDate().substr(0,6));
	
	var grSearch = nexacro.toNumber(this.FormInfo.GR_SEARCH);
	
	if(grSearch >= 7 ){		    
		this.divSearch.form.staCD_DEPT.set_textDecoration("underline");	
		this.ccfCD_DEPT.form.CDTextBox.set_value(this.AuthClient.CD_DEPT);
		this.ccfCD_DEPT.form.DSTextBox.set_value(this.AuthClient.DS_DEPT);
		this.ccfCD_DEPT.set_enable(false);
	}
// 	else if (grSearch == 3 ) {
// 		this.divSearch.form.staCD_DEPT.set_textDecoration("underline");	
// 		this.ccfCD_DEPT.form.CDTextBox.set_value(this.AuthClient.CD_DEPT);
// 		this.ccfCD_DEPT.form.DSTextBox.set_value(this.AuthClient.DS_DEPT);
// 	}
	this.fnSetCombo();
	var year = this.gfnGetDate().substr(0,4);

}; 

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnSearchSiljuk = this.gfnFormButtonAdd("SearchSiljuk", "fnSearchSiljuk");  // 예산실적조회
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {    
	this.ctclYM_BUDGET = this.divSearch.form.ctclYM_BUDGET;
	
	this.ccfCD_DEPT = this.divSearch.form.ccfCD_DEPT;
	
	this.ccboTY_GUBUN = this.divSearch.form.ccboTY_GUBUN;
	
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DI", "DIQ_BUDGET_DEPT");
	
	//코드파인드	
	this.ccfCD_DEPT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
			
	this.ccfCD_DEPT.AfterCDTextChanged = "fnAfterCDTextChanged";
	
	
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	// SELECT
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("YM_BUDGET", "string");	
	this.dsSelect.addColumn("CD_DEPT", "string");
	this.dsSelect.addColumn("TY_GUBUN", "string");
	this.dsSelect.addColumn("GR_SEARCH", "string");
	
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "YM_BUDGET", this.dsSearch.getColumn(0, "YM_BUDGET"));
	this.dsSelect.setColumn(0, "CD_DEPT", this.dsSearch.getColumn(0, "CD_DEPT"));	
	this.dsSelect.setColumn(0, "TY_GUBUN", this.dsSearch.getColumn(0, "TY_GUBUN"));	
	this.dsSelect.setColumn(0, "GR_SEARCH", this.FormInfo.GR_SEARCH);	
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	
}


/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}


/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;
	
	if (this.gfnIsNull(this.dsSearch.getColumn(0,"YM_BUDGET"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.ctclYM_BUDGET.setFocus();
		}
		this.gfnAlert("조회년월을 입력하세요.", "fnVaidateCallback");
	}

	var grSearch = nexacro.toNumber(this.FormInfo.GR_SEARCH);
	var idGroup = this.FormInfo.ID_GROUP;	// 사용자그룹코드 : 2 부서/현장 3본부 4전사
	//var bGroupChk = (idGroup == 2 || idGroup == 3 || idGroup == 4) ? true : false;
	if(grSearch >= 7 ){
		if(this.gfnIsNull(this.dsSearch.getColumn(0, "CD_DEPT"))){
			this.gfnAlert("부서코드는 필수입력 입니다.", function() {
				this.ccfCD_DEPT.form.CDTextBox.setFocus();
			});
			return false;
		}
	}
	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {

		this.gfnGridAfterSelect(this.dxGrid);	

	}
	if (svcID == "combo") {
     
	 trace(" combo=>" + this.dsTY_GUBUN.saveXML());
	   this.ccboTY_GUBUN.set_index(0);

	}

}


/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	
	if (id == "ccfCD_DEPT") {
		var tyGubun = this.dsSearch.getColumn(0, "TY_GUBUN");
		var id_sabun = this.AuthClient.ID_USER;
		var gr_search = this.FormInfo.GR_SEARCH;
		var cd_dept = this.AuthClient.CD_DEPT;

		dsUserParam.setColumn(nrow, "YR_BUDGET", this.dsSearch.getColumn(0, "YM_BUDGET").substr(0,4));
		dsUserParam.setColumn(nrow, "YN_USE", "Y");
		dsUserParam.setColumn(nrow, "GR_SEARCH", gr_search);
		dsUserParam.setColumn(nrow, "ID_SABUN", id_sabun);
		//dsUserParam.setColumn(nrow, "CD_DEPT", cd_dept);
		dsUserParam.setColumn(nrow, "CD_DEPT", "");
		// TY_GUBUN : B본사 / H현장 / S수주영업비	
		dsUserParam.setColumn(nrow, "TY_DEPTGUBUN", "");
	}
		
	return true;
}

this.fnAfterCDTextChanged = function(id, codeFindData) {
			
	if(id == "ccfCD_DEPT") { 
		this.gfnGridClear(this.dxGrid);	
	}
}

/************************************************************************
 * 확장버튼 이벤트
 ************************************************************************/
 
 // 예산실적조회
this.fnSearchSiljuk = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	var nIndex = this.dxGrid.getCellPos();
	var column = this.gfnGridGetBindColumnNameByIndex(this.dxGrid, nIndex);

	this.fnSiljukPopup(column);


}

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
 
 
//콤보박스 코드 조회
this.fnSetCombo = function() {
	
	this.dsCombo = new Dataset();
	this.dsCombo.addColumn("YR_ACCOUNT", "string");
	
	this.dsCombo.addRow();
	this.dsCombo.setColumn(0, "YR_ACCOUNT", this.dsSearch.getColumn(0, "YM_BUDGET").substr(0,4));
	
	var strSvcId    = "combo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "combo=dsCombo";
	var outData     = "dsTY_GUBUN=combo0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};


this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
		//this.fnBtnEnableEventAll(false);
		if(e.columnid == "YM_BUDGET"){
		   if(e.oldvalue.substr(0,4) != e.newvalue.substr(0,4)){
			this.fnSetCombo();
			}
		}
		if(e.columnid =="TY_GUBUN"){this.fnSetHeadTitle();}
	}
};

this.fnSetHeadTitle = function(){

 	var TY_GUBUN = this.dsSearch.getColumn(0, "TY_GUBUN");
	
	trace(" fnSetHeadTitle TY_GUBUN=>" +TY_GUBUN );
 	var headTitle = "경영계획";

 	if(!this.gfnIsNull(TY_GUBUN)){	
		headTitle = TY_GUBUN == 'N' ? "경영계획" :  TY_GUBUN+ "월 등록 실적목표" ;	
 	}
 	this.dxGrid.setCellProperty("head", 9 , "text", headTitle);
}

this.fnHeadNmCh = function(yr)
{
	// 해당 헤더컬럼 인덱스 구하기
	var idx0 = ""; 
	
	// 해당 컬럼의 인덱스값을 구함
	for(var i=0; i < this.dxGrid.getCellCount("head"); i++) { 
		if(this.dxGrid.getCellText(-1,i) == "01"){ 
			idx0 = i;
		}
	}	
	//this.dxGrid.setCellProperty("head", idx0, "text", yr+"년");
}

this.fnHeadNmSet = function()
{
	// 해당 헤더컬럼 인덱스 구하기
	var idx0 = "6"; 
	this.dxGrid.setCellProperty("head", idx0, "text", "01");
}

this.fnColor = function() 
{
	this.dxGrid.set_enableredraw(false);

	//var expr = "DS_ACTIVE != '소계' && DS_ACCOUNT != '중계 &&' DS_ACCOUNT_M != '합계' && (CD_GUBUN == '계획' || CD_GUBUN == '실적')";
	this.gfnGridColumnColor(this.dxGrid, "", "BACK_ReadOnly", "YN_COLOR == 'Y'", true);
	this.gfnGridColumnColor(this.dxGrid, "", "BACK_KuBun", "DS_ACTIVE == '소계'", true);
	this.gfnGridColumnColor(this.dxGrid, "", "BACK_SoKe", "DS_ACCOUNT == '중계'", true);
	this.gfnGridColumnColor(this.dxGrid, "", "BACK_Sum", "DS_ACCOUNT_M == '합계'", true);
	this.dxGrid.set_enableredraw(true);	
}

// 예산실적조회(더블클릭)
this.divData_objGrid_oncelldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	var column = this.gfnGridGetBindColumnNameByIndex(this.dxGrid, e.cell);	
	
	//if(nexacro.toNumber(this.FormInfo.GR_SEARCH) < 3){		     
		this.fnSiljukPopup(column);
	
};

this.fnSiljukPopup = function(column)
{
	    trace(" column=>" + column );
		var MONTH = this.gfnRight(column, 2);
		var DS_ACTIVE = this.dsList.getColumn(this.dsList.rowposition, "DS_ACTIVE");
		var DS_ACCOUNT = this.dsList.getColumn(this.dsList.rowposition, "DS_ACCOUNT");
		
		var param = {};
		param.CD_DEPT = this.dsList.getColumn(this.dsList.rowposition, "CD_DEPT");
		param.DS_DEPT = this.dsList.getColumn(this.dsList.rowposition, "DS_DEPT");
		param.CD_ACCOUNT = this.dsList.getColumn(this.dsList.rowposition, "CD_ACCOUNT");
		param.DS_ACCOUNT = this.dsList.getColumn(this.dsList.rowposition, "DS_ACCOUNT");
		param.CD_ACTIVE = this.dsList.getColumn(this.dsList.rowposition, "CD_ACTIVE");
		param.DS_ACTIVE = this.dsList.getColumn(this.dsList.rowposition, "DS_ACTIVE");
		
		if(nexacro.toNumber(MONTH) <= 12){
			param.YM_BUDGET = this.gfnLeft(this.dsSearch.getColumn(0, "YM_BUDGET"),4) + MONTH;
			
			this.gfnFormOpen("DHQ", "DIQ_BUDGET_SILJUK_SEARCH", "", param);			
		} else {
			param.YM_BUDGET = this.gfnLeft(this.dsSearch.getColumn(0, "YM_BUDGET"), 4) + "01";		// 회계년도 1월
			param.YM_BUDGET_1 = this.dsSearch.getColumn(0, "YM_BUDGET");
			param.GUBUN = "1";
			this.gfnFormOpen("DHQ", "DIQ_BUDGET_SILJUK_SEARCH", "", param);
		}
			
}]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DIQPR_BUDGET_DEPT_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo</Col>
            <Col id="SP">DIQPR_GUBUN_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="YM_BUDGET" type="STRING" size="256"/>
          <Column id="CD_DEPT" type="STRING" size="256"/>
          <Column id="DS_DEPT" type="STRING" size="256"/>
          <Column id="TY_GUBUN" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="YM_BUDGET"/>
            <Col id="CD_DEPT"/>
            <Col id="DS_DEPT"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_GUBUN">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">N</Col>
            <Col id="DS_CODE">경영계획</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">03</Col>
            <Col id="DS_CODE">3월전망</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">06</Col>
            <Col id="DS_CODE">6월전망</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">09</Col>
            <Col id="DS_CODE">9월전망</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item1" compid="divSearch.form.ctclYM_BUDGET.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_BUDGET"/>
      <BindItem id="item5" compid="divSearch.form.ccfCD_DEPT.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_DEPT"/>
      <BindItem id="item3" compid="divSearch.form.ccfCD_DEPT.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_DEPT"/>
      <BindItem id="item0" compid="divSearch.form.ccboTY_GUBUN" propid="value" datasetid="dsSearch" columnid="TY_GUBUN"/>
    </Bind>
  </Form>
</FDL>
