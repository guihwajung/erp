<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="1100" height="650" maxwidth="1125" maxheight="700" titletext="대출 신청" onload="form_onload" onbeforeclose="form_onbeforeclose">
    <Layouts>
      <Layout>
        <Static id="staTitle1" taborder="1" text="신청자정보" left="0" top="0" width="359" height="35" cssclass="sta_TITLE_Bg" textAlign="left"/>
        <Div id="divData" taborder="0" left="0" top="staTitle1:0" height="133" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Static id="staBg2" taborder="4" left="79" top="29" height="30" cssclass="sta_WF_tablebg" textAlign="right" right="0"/>
              <Static id="staBg" taborder="2" left="79" top="0" height="30" cssclass="sta_WF_tablebgT" textAlign="right" right="0"/>
              <Static id="staIdSabun" taborder="0" left="0" top="0" width="100" height="30" cssclass="sta_WF_tablelabelTE" text="성명"/>
              <Static id="staCdDept" taborder="6" text="부서" left="staIdSabun:210" top="0" width="100" height="30" cssclass="sta_WF_tablelabelT"/>
              <Static id="staAmLoanLimit" taborder="3" text="개인대출한도" left="0" top="29" width="100" height="30" cssclass="sta_WF_tablelabel"/>
              <Div id="cfID_SABUN" CodeFindName="DAX_CFBASEINFO_ALL" CDTextWidth="90" FitToContents="false" taborder="1" left="103" top="5" height="20" url="cmm::cmmCodeFind.xfdl" AutoSet="false" width="200"/>
              <Edit id="txtDS_DEPT" taborder="5" left="staCdDept:4" top="4" height="20" maxlength="25" readonly="true" width="166"/>
              <Static id="staCdPosition" taborder="7" text="직급" left="staCdDept:172" top="0" width="100" height="30" cssclass="sta_WF_tablelabelT"/>
              <Static id="staDtIpsa" taborder="8" text="입사일자" left="staCdPosition:130" top="0" width="90" height="30" cssclass="sta_WF_tablelabelT"/>
              <Static id="staAmJan" taborder="9" text="현대출잔액" left="staAmLoanLimit:210" top="staCdDept:-1" width="100" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="staAmLimit" taborder="10" text="대출가능금액" left="staAmJan:172" top="staCdPosition:-1" width="100" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="staDtGipsa" taborder="11" text="그룹입사일자" left="staAmLimit:130" top="29" width="90" height="30" cssclass="sta_WF_tablelabel"/>
              <Edit id="txtDS_POSITION" taborder="12" left="staCdPosition:4" top="4" height="20" maxlength="25" readonly="true" width="46"/>
              <Edit id="txtAM_HANDO" taborder="13" left="staAmLimit:4" top="33" height="24" maxlength="25" readonly="true" right="260"/>
              <MaskEdit id="mskAM_LIMIT" taborder="19" left="staAmLimit:4" top="33" width="107" height="20" format="#,##0.##" limitbymask="integer" enable="true" readonly="true" textAlign="right"/>
              <Static id="staDesc11" taborder="14" text="원" left="mskAM_LIMIT:4" top="33" width="20" height="20"/>
              <MaskEdit id="mskAM_LOANJAN" taborder="18" left="staAmJan:4" top="33" width="135" height="23" format="#,##0.##" limitbymask="integer" enable="true" readonly="true" textAlign="right"/>
              <Static id="staDesc12" taborder="15" text="원" left="mskAM_LOANJAN:4" top="32" width="20" height="24"/>
              <Static id="staDesc13" taborder="16" text="원" left="242" top="32" width="20" height="20"/>
              <MaskEdit id="mskAM_LOANLIMIT" taborder="17" left="103" top="33" width="135" height="20" format="#,##0.##" limitbymask="integer" enable="true" readonly="true" textAlign="right"/>
              <Calendar id="tclDT_JOIN" taborder="23" left="staDtIpsa:4" top="6" width="100" height="20" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" value="" readonly="true"/>
              <Edit id="txtDS_JOIN" taborder="20" left="tclDT_JOIN:4" top="4" height="20" maxlength="25" readonly="true" width="100"/>
              <Calendar id="tclDT_GROUPJOIN" taborder="24" left="staDtGipsa:4" top="34" width="100" height="20" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" value="" readonly="true"/>
              <Edit id="txtDS_GROUPJOIN" taborder="21" left="tclDT_GROUPJOIN:4" top="33" height="20" maxlength="25" readonly="true" width="100"/>
              <Edit id="txtDS_PAYSTEP" taborder="22" left="737" top="4" height="20" maxlength="25" readonly="true" width="70"/>
              <Edit id="txtDS_APRV" taborder="25" left="1021" top="71" height="20" maxlength="25" readonly="true" visible="true" enable="true" right="0"/>
              <Static id="staDesc3" taborder="26" text="승인상태 :" left="963" top="70" height="24" right="txtDS_APRV:-9"/>
              <Calendar id="tclDT_REQUEST" taborder="28" left="855" top="72" height="20" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" value="" readonly="true" right="staDesc3:9" visible="false" enable="true"/>
              <Static id="staDT_REQUEST" taborder="27" text="신청일자" left="800" top="70" height="24" right="tclDT_REQUEST:-62" visible="false"/>
            </Layout>
          </Layouts>
        </Div>
        <Static id="staTitle2" taborder="2" text="신청정보" left="0" top="divData:-73" width="359" height="35" cssclass="sta_TITLE_Bg" textAlign="left"/>
        <Div id="divDataDetail" taborder="3" left="0" top="staTitle2:0" height="460" right="0" text="">
          <Layouts>
            <Layout>
              <TextArea id="txtDS_REM" taborder="29" left="85" top="204" height="72" right="10" readonly="true" visible="false"/>
              <Static id="staBg10" taborder="31" left="79" top="418" height="30" cssclass="sta_WF_tablebg" textAlign="right" right="0"/>
              <Static id="staBg9" taborder="28" left="79" top="338" height="81" cssclass="sta_WF_tablebg" textAlign="right" right="0" text=""/>
              <Static id="staBg8" taborder="23" left="79" top="154" height="186" cssclass="sta_WF_tablebgT" textAlign="right" right="0" text=""/>
              <Static id="staBg7" taborder="19" left="79" top="87" height="30" cssclass="sta_WF_tablebg" textAlign="right" right="0"/>
              <Static id="staBg6" taborder="8" left="90" top="29" height="30" cssclass="sta_WF_tablebg" textAlign="right" right="0"/>
              <Static id="staBg3" taborder="1" left="79" top="0" height="30" cssclass="sta_WF_tablebgT" textAlign="right" right="0"/>
              <Static id="staCdLoan" taborder="0" left="0" top="0" width="100" height="30" cssclass="sta_WF_tablelabelTE" text="대출종류"/>
              <Div id="cfCD_LOAN" CodeFindName="DAX_LOANRATE" CDTextWidth="50" FitToContents="false" taborder="2" left="staCdLoan:4" top="5" height="20" url="cmm::cmmCodeFind.xfdl" width="199"/>
              <Static id="staAmLoan" taborder="16" text="대출신청금액" left="310" top="29" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
              <MaskEdit id="txtAM_REQUEST" taborder="3" left="staAmLoan:4" top="34" width="116" height="20" format="###,###,###" limitbymask="integer" textAlign="right"/>
              <Static id="staYmLoan" taborder="7" text="상환신청개월" left="582" top="29" width="100" height="34" cssclass="sta_WF_tablelabelE"/>
              <Static id="staDesc1" taborder="9" text="원" left="txtAM_REQUEST:6" top="34" width="20" height="20"/>
              <MaskEdit id="txtYM_REPAYMENT" taborder="4" left="staYmLoan:4" top="34" width="50" height="20" limitbymask="integer" format="#,###"/>
              <Static id="staDesc2" taborder="10" text="개월" left="txtYM_REPAYMENT:4" top="34" height="20" width="30"/>
              <Static id="staBg5" taborder="12" left="79" top="58" height="30" cssclass="sta_WF_tablebg" textAlign="right" right="0" text=""/>
              <Static id="staTyRepayment" taborder="6" text="상환방법" left="0" top="29" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
              <Static id="staDsBank" taborder="11" text="은행명" left="0" top="58" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
              <Static id="staAmLoanMax" taborder="13" left="staCdLoan:210" top="0" width="100" height="30" cssclass="sta_WF_tablelabelT" text="대출한도금액"/>
              <Static id="staYmLoanMax" taborder="14" left="staAmLoanMax:172" top="0" width="100" height="30" cssclass="sta_WF_tablelabelT" text="최장상환개월"/>
              <Static id="staRtRate" taborder="15" left="staYmLoanMax:130" top="0" width="90" height="30" cssclass="sta_WF_tablelabelT" text="이자율"/>
              <Static id="staAmMonth" taborder="17" text="월상환액" left="staYmLoan:130" top="29" width="90" height="30" cssclass="sta_WF_tablelabelE"/>
              <Static id="staDsRemark" taborder="18" text="대출사유" left="0" top="87" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
              <Edit id="txtDS_REMARK" taborder="5" top="92" height="20" readonly="false" right="10" left="staDsRemark:4"/>
              <Static id="staNoAccount" taborder="20" text="계좌번호" left="310" top="58" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
              <Static id="staTitle2" taborder="21" text="구비서류 및 첨부파일" left="0" top="118" width="359" height="35" cssclass="sta_TITLE_Bg" textAlign="left"/>
              <Static id="staDsDocumnet" taborder="22" left="0" top="154" width="80" height="186" cssclass="sta_WF_tablelabelT" text="구비서류"/>
              <Static id="staDs" taborder="24" left="580" top="154" width="76" height="186" cssclass="sta_WF_tablelabelT" text="신청자격 &#13;&#10;    및&#13;&#10;신청요건"/>
              <TextArea id="txtDS_DOCUMENT" taborder="25" left="84" top="161" height="176" width="492" readonly="true"/>
              <TextArea id="txtDS_REQUESTDOC" taborder="26" left="660" top="161" height="176" right="10" readonly="true"/>
              <Static id="staDsEtc" taborder="27" left="0" top="339" width="80" height="81" cssclass="sta_WF_tablelabel" text="기타"/>
              <Button id="btnATTACH" taborder="30" text="파일첨부" top="421" width="74" height="24" right="760" onclick="fnFileUpload"/>
              <Edit id="txtDS_REPAYMENT" taborder="32" left="staTyRepayment:6" top="35" height="20" maxlength="25" readonly="true" width="204"/>
              <Static id="sta00" taborder="43" text="급여계좌:" left="staDsBank:8" top="62" width="51" height="20"/>
              <Edit id="txtDS_BANK" taborder="33" left="sta00:6" top="62" height="20" maxlength="25" readonly="true" width="105"/>
              <Edit id="txtNO_ACCOUNT" taborder="34" left="staNoAccount:6" top="62" height="20" maxlength="25" readonly="true" width="140"/>
              <MaskEdit id="mskAM_TYPELIMIT" taborder="35" left="staAmLoanMax:5" top="5" width="115" height="20" format="#,##0.##" limitbymask="integer" enable="true" readonly="true" textAlign="right"/>
              <MaskEdit id="mskRT_RATE" taborder="36" left="staRtRate:4" top="4" width="105" height="20" format="#,##0.##%" limitbymask="integer" enable="true" readonly="true" textAlign="right"/>
              <MaskEdit id="mskAM_MONTH" taborder="37" left="staAmMonth:4" top="34" width="105" height="20" format="#,##0.##" limitbymask="integer" enable="true" readonly="true" textAlign="right"/>
              <MaskEdit id="mskYM_LIMIT" taborder="38" left="staYmLoanMax:4" top="4" width="49" height="20" format="#,##0.##" limitbymask="integer" enable="true" readonly="true" textAlign="right"/>
              <Static id="staDesc3" taborder="39" text="개월" left="mskYM_LIMIT:5" top="4" height="20" width="30"/>
              <Static id="staDesc4" taborder="40" text="원" left="mskAM_TYPELIMIT:6" top="4" width="20" height="20"/>
              <Static id="staDesc5" taborder="41" text="원" left="mskAM_MONTH:4" top="33" width="20" height="20"/>
              <Static id="staNoAccount00" taborder="42" text="예금주" left="582" top="58" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
              <Edit id="txtCD_BANK" taborder="44" left="238" top="69" height="24" maxlength="25" readonly="true" right="870"/>
              <Edit id="txtDS_ACCOUNT" taborder="45" left="staNoAccount00:5" top="63" height="20" maxlength="25" readonly="true" width="144"/>
              <Static id="staDesc6" taborder="46" text="%" left="mskRT_RATE:5" top="3" width="20" height="20"/>
              <Static id="staFileUpload" taborder="47" text="파일수 :  0 개" left="89" top="423" width="146" height="24" cssclass="sta_WF_notice"/>
              <Static id="staDS_REM" taborder="48" text="1. 원금 및 이자(사내 이자율 기준) 균등상환은 매월 급여일로 함." left="87" top="341" width="750" height="21" onclick="divDataDetail_staDS_REM_onclick"/>
              <Static id="sta01" taborder="49" text="2. 대출 실행 시 서울보증보험 이행증권 제출 必.&#13;&#10;   (개인 신용, 대출 금액/기간 등에 따라 보험료 30~60만원 발생)" left="87" top="staDS_REM:1" width="745" height="32" color="#db040b" font="bold 12px/normal &quot;Malgun Gothic&quot;"/>
              <Static id="staDS_REM00" taborder="50" text="3. 대출자가 퇴직 시에는 대출금 전액을 퇴직 전 일시 상환하며, 미상환 시 회사로부터 지급받을 모든 채권에 대하여 원리금 상환에 충당하는 것에 동의함." left="87" top="sta01:1" width="963" height="21" onclick="divDataDetail_staDS_REM_onclick"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divBtns" width="310" height="26" taborder="4" bottom="0" left="394">
          <Layouts>
            <Layout>
              <Button id="btnCANCEL" taborder="0" text="취소" top="0" width="73" height="26" right="11" onclick="btnCancel_onclick"/>
              <Button id="btnSAVE" taborder="1" text="임시저장" left="60" top="0" width="79" height="26" onclick="divBtns_btnSAVE_onclick"/>
              <Button id="btnOK" taborder="2" text="신청완료" left="145" top="0" width="75" height="26" onclick="btnOk_onclick"/>
            </Layout>
          </Layouts>
        </Div>
        <Static id="staDsFile" taborder="5" text="첨부파일" left="0" top="548" width="80" height="30" cssclass="sta_WF_tablelabelE"/>
        <Button id="btnAGTFILE" taborder="8" text="약정서/보증서첨부" top="7" width="115" height="24" right="125" onclick="btnAGTFILE_onclick"/>
        <Button id="btnAGTPRINT" taborder="7" text="대출약정서출력" top="7" width="115" height="24" right="btnAGTFILE:5" onclick="btnAGTPRINT_onclick"/>
        <Button id="btnSIMULATION" taborder="6" text="대출시뮬레이션" top="7" width="115" height="24" onclick="btnSIMULATION_onclick" right="btnAGTPRINT:5"/>
        <Button id="btnAfterFile" taborder="11" text="사후제출서류첨부" top="7" width="115" height="24" right="5" onclick="btnAfterFile_onclick"/>
        <Edit id="txtNO_LOANREQUEST" taborder="9" left="469" top="4" height="24" maxlength="25" readonly="false" width="130" visible="false" enable="false"/>
        <Static id="staAlter" taborder="10" text="※대출종류를 먼저 선택한 후 대출신청금액과 상환개월을 입력하시기 바랍니다." left="staTitle2:-271" top="103" width="466" height="24" color="#1a1dc0"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();


this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);
	this.gfnFormInfo(this);
	// ---------------------------//

	this.fnSetButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();

	this.fnSetInit();

};

/************************************************************************
 * 버튼 설정 
 * 서브버튼 사용 처리. 공통 및 확장버튼 버튼관리화면에서 셋팅.
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
};

//컨트롤 활성화 처리 
this.fnSetEnable = function ()
{
	this.cfID_SABUN.set_enable(false);
	this.cfCD_LOAN.set_enable(false);
	this.txtAM_REQUEST.set_enable(false);
	this.txtYM_REPAYMENT.set_enable(false);
	this.txtDS_REMARK.set_enable(false);
	
	//this.fileManager.IS_READONLY = false;
	this.btnSAVE.set_enable(false);
	this.btnOK.set_enable(false);
	//this.btnCANCEL.set_enable(false);
	this.btnAGTPRINT.set_enable(false);
	this.btnAGTFILE.set_enable(false);
	this.btnAfterFile.set_enable(false);
	
	this.tclDT_REQUEST.set_visible(false);
	this.staDT_REQUEST.set_visible(false);
	
	trace(" ST_APRV=>" + this.dsList.getColumn(0, "ST_APRV"));
	switch(this.dsList.getColumn(0, "ST_APRV")) {
	case "01":
		this.cfID_SABUN.set_enable(true);
		this.cfCD_LOAN.set_enable(true);
		this.txtAM_REQUEST.set_enable(true);
		this.txtYM_REPAYMENT.set_enable(true);
		this.txtDS_REMARK.set_enable(true);
		
		//this.fileManager.IS_READONLY = false;
		this.btnSAVE.set_enable(true);
		this.btnOK.set_enable(true);
		this.btnCANCEL.set_enable(true);
		this.btnCANCEL.set_text("신청취소");
		//trace(" YM_MAX=>" + this.dsList.getColumn(0, "YM_MAX"));
		if (this.dsList.getColumn(0, "YM_MAX")== 0 )
		{
			 this.txtYM_REPAYMENT.set_enable(false);
		}
		break;
	case "02":
		this.tclDT_REQUEST.set_visible(true);
		this.staDT_REQUEST.set_visible(true);
		break;
	case "":
		this.cfID_SABUN.set_enable(true);
		this.cfCD_LOAN.set_enable(true);
		this.txtAM_REQUEST.set_enable(true);
		this.txtYM_REPAYMENT.set_enable(true);
		this.txtDS_REMARK.set_enable(true);
		
		//this.fileManager.IS_READONLY = false;
		this.btnSAVE.set_enable(true);
		this.btnOK.set_enable(true);
		this.btnCANCEL.set_enable(true);

		break;
	case "03":  // 승인 상태 
		this.btnAGTPRINT.set_enable(true);
		this.btnAGTFILE.set_enable(true);
		this.btnAfterFile.set_enable(true);
		this.tclDT_REQUEST.set_visible(true);
		this.staDT_REQUEST.set_visible(true);
		break;
	case "04":
		this.btnAGTPRINT.set_enable(false);
		this.btnAGTFILE.set_enable(false);
		this.btnAfterFile.set_enable(false);
		this.tclDT_REQUEST.set_visible(true);
		this.staDT_REQUEST.set_visible(true);
		break;
	case "05":
		this.btnAGTPRINT.set_enable(true);
		this.btnAGTFILE.set_enable(true);
		this.btnAfterFile.set_enable(true);
		this.tclDT_REQUEST.set_visible(true);
		this.staDT_REQUEST.set_visible(true);
		break;
	case "06":
		this.btnAGTPRINT.set_enable(true);
		this.btnAGTFILE.set_enable(true);
		this.btnAfterFile.set_enable(true);
		this.tclDT_REQUEST.set_visible(true);
		this.staDT_REQUEST.set_visible(true);
		break;
	default:

	}
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.cfID_SABUN    = this.divData.form.cfID_SABUN;
	this.txtDS_DEPT		= this.divData.form.txtDS_DEPT;
	this.txtDS_POSITION = this.divData.form.txtDS_POSITION;
	this.tclDT_JOIN = this.divData.form.tclDT_JOIN;
	this.tclDT_GROUPJOIN  = this.divData.form.tclDT_GROUPJOIN;
	this.mskAM_LOANLIMIT = this.divData.form.mskAM_LOANLIMIT;
	this.mskAM_LOANJAN = this.divData.form.mskAM_LOANJAN;
	this.mskAM_LIMIT = this.divData.form.mskAM_LIMIT;
	
	this.cfCD_LOAN     = this.divDataDetail.form.cfCD_LOAN;
	this.mskAM_TYPELIMIT = this.divDataDetail.form.mskAM_TYPELIMIT;
	this.mskYM_LIMIT = this.divDataDetail.form.mskYM_LIMIT;
	this.mskRT_RATE = this.divDataDetail.form.mskRT_RATE;
	this.txtDS_REPAYMENT = this.divDataDetail.form.txtDS_REPAYMENT;
	this.txtAM_REQUEST = this.divDataDetail.form.txtAM_REQUEST;
	this.txtYM_REPAYMENT = this.divDataDetail.form.txtYM_REPAYMENT;
	this.mskAM_MONTH = this.divDataDetail.form.mskAM_MONTH;
	this.txtDS_REM = this.divDataDetail.form.txtDS_REM;
	this.txtDS_REMARK = this.divDataDetail.form.txtDS_REMARK;
	
	this.staDT_REQUEST = this.divData.form.staDT_REQUEST;
	this.tclDT_REQUEST = this.divData.form.tclDT_REQUEST;
	this.staFileUpload = this.divDataDetail.form.staFileUpload;
	
	this.btnAGTFILE     = this.btnAGTFILE;
	this.btnAGTPRINT     = this.btnAGTPRINT;
	this.btnSIMULATION     = this.btnSIMULATION;
	
	this.btnATTACH     = this.divDataDetail.form.btnATTACH;
	this.btnSAVE     = this.divBtns.form.btnSAVE;
	this.btnOK     = this.divBtns.form.btnOK;
	this.btnCANCEL     = this.divBtns.form.btnCANCEL;
	
	this.FileManager = {};

	this.FileManager.CD_GUBUN = "DAB1";
	//this.FileManager.CD_DIR = [cdDir];
	this.FileManager.IS_READONLY = false;

};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	//코드파인드
	this.cfID_SABUN.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.cfID_SABUN.AfterCDTextChanged     = "fnAfterCDTextChanged";
	this.cfCD_LOAN.BeforeUserDataSetParam  = "fnBeforeUserDataSetParam";
	this.cfCD_LOAN.AfterCDTextChanged      = "fnAfterCDTextChanged";
};

// 부모창에서 받아온것 셋팅
this.fnSetInit = function() {

	this.cfID_SABUN.form.set_readonly(true);
	var frame = this.getOwnerFrame();
	if(frame.TY_WRK == "I" && frame.GR_SEARCH =="1"){
		this.cfID_SABUN.form.set_readonly(false);
	}

	var dsRem = this.gfnNvl(this.gfnGetConfig("DA" , "DS_LOANREMARK"), "");
	//trace(" dsRem=>" + dsRem);
	this.txtDS_REM.set_value(dsRem);
	
	if( frame.TY_WRK == "U" ){
		this.dsList.clearData();	
		var nRow = this.dsList.addRow();
		this.dsList.set_enableevent(false);		
		this.dsList.setColumn(0, "CD_CORP", frame.CD_CORP);
		this.dsList.setColumn(0, "ID_SABUN", frame.ID_SABUN);
		this.dsList.setColumn(0, "NO_LOANREQUEST", frame.NO_LOANREQUEST);
		this.dsList.set_enableevent(true);
		this.fnSelect();		
	} else {
		
		if(this.dsList.findRow(this.ucFlag, "I") > -1){
			this.gfnAlert("신규 추가된 데이터가 이미 있습니다.");
			return;
		}
	
		this.dsList.clearData();	
		var nRow = this.dsList.addRow();
		this.dsList.setColumn(nRow, this.ucFlag, "I");
		this.dsList.set_enableevent(false);		
		
		this.fnSetSchadule();  // 신규일때 스케쥴 확인해서 신청기간 아니면 닫음.
		
		this.dsList.setColumn(0, "CD_CORP", this.AuthClient.CD_CORP);
		this.dsList.setColumn(0, "DS_CORP", this.AuthClient.DS_CORP);
		this.dsList.setColumn(0, "CD_DEPT", this.AuthClient.CD_DEPT);
		this.dsList.setColumn(0, "DS_DEPT", this.AuthClient.DS_DEPT);
		this.dsList.setColumn(0, "DS_HNAME", this.AuthClient.DS_HNAME);
		this.dsList.setColumn(0, "ID_SABUN", this.AuthClient.ID_SABUN);

		this.dsList.setColumn(0, "AM_REQUEST", "");
		this.dsList.setColumn(0, "NO_LOANREQUEST","");
		this.dsList.setColumn(0, "DS_REMARK", "");
		this.dsList.setColumn(0, "DS_REPAYMENT", "원금균등");
		this.dsList.setColumn(0, "CD_REPAYMENT", "01");
		this.dsList.set_enableevent(true);		
		
		this.gfnSetFormStatus(this, "I");
	}
	
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CORP", "STRING");
	this.dsSelect.addColumn("ID_SABUN", "STRING");
	this.dsSelect.addColumn("NO_LOANREQUEST", "INT");
	
	this.dsSeq = new Dataset();
	this.dsSeq.addColumn("YY_BASE", "STRING");
	this.dsSeq.addColumn("ID_SABUN", "STRING");
	this.dsSeq.addColumn("ID_PERSON", "INT");
	this.dsSeq.addColumn("CD_CORP", "STRING");	
	this.dsSeq.addColumn("ID_LOANSCH", "STRING");	
	
	this.dsSch = new Dataset();
	this.dsSch.addColumn("CD_CORP", "STRING");
	
	this.dsSave = new Dataset();
	this.dsSave.addColumn("CD_CORP", "string");
	this.dsSave.addColumn("ID_SABUN", "string");
	this.dsSave.addColumn("NO_LOANREQUEST", "INT");
	this.dsSave.addColumn("TY_GUBUN", "string");
	this.dsSave.addColumn("CD_LOAN", "string");
	this.dsSave.addColumn("CD_DEPT", "string");
	this.dsSave.addColumn("CD_POSITION", "string");
	this.dsSave.addColumn("CD_PAYSTEP", "string");
	this.dsSave.addColumn("DS_JOIN", "string");
	this.dsSave.addColumn("DS_GROUPJOIN", "string");
	this.dsSave.addColumn("QN_GROUPJOIN",  "int");
	this.dsSave.addColumn("QN_POINT", "int");
	this.dsSave.addColumn("AM_LOANLIMIT", "bigdecimal");
	this.dsSave.addColumn("AM_JAN", "bigdecimal");
	this.dsSave.addColumn("ID_LOANSCH", "string");
// 	this.dsSave.addColumn("NO_LOAN", "int");
// 	this.dsSave.addColumn("DT_REQUEST", "string");
	this.dsSave.addColumn("ST_APRV", "string");
// 	this.dsSave.addColumn("DT_APRV", "string");
// 	this.dsSave.addColumn("DT_LOAN", "string");
	this.dsSave.addColumn("AM_LOAN", "bigdecimal");
	this.dsSave.addColumn("YM_REPAYMENT", "int");
	this.dsSave.addColumn("AM_MONTH", "bigdecimal");
	this.dsSave.addColumn("RT_RATE", "bigdecimal");
	this.dsSave.addColumn("CD_REPAYMENT", "string");
	this.dsSave.addColumn("CD_BANK", "string");
	this.dsSave.addColumn("NO_ACCOUNT", "string");
	this.dsSave.addColumn("DS_ACCOUNT", "string");
	this.dsSave.addColumn("DS_REASON", "string");
// 	this.dsSave.addColumn("AM_REPAYMENT", "bigdecimal");
// 	this.dsSave.addColumn("DT_REPAYMENT", "string");
// 	this.dsSave.addColumn("AM_BEFJAN", "bigdecimal");
// 	this.dsSave.addColumn("DT_FROM", "string");
// 	this.dsSave.addColumn("DT_TO", "string");
// 	this.dsSave.addColumn("AM_INTEREST", "bigdecimal");
// 	this.dsSave.addColumn("YM_REMAIN", "int");
// 	this.dsSave.addColumn("YM_ALLOW", "int");
// 	this.dsSave.addColumn("YM_CHANGE", "int");
// 	this.dsSave.addColumn("AM_CHANGEMONTH", "bigdecimal");
// 	this.dsSave.addColumn("YN_EXCUTE", "string");
// 	this.dsSave.addColumn("DS_RETURN", "string");
	this.dsSave.addColumn("ID_USER", "string");
	
	this.dsDelete = new Dataset();
	this.dsDelete.addColumn("CD_CORP", "string");
	this.dsDelete.addColumn("ID_SABUN", "string");
	this.dsDelete.addColumn("NO_LOANREQUEST", "INT");
};

/************************************************************************
 *  이벤트
 ************************************************************************/
  
//대출신청 일정 가져오기 
this.fnSetSchadule = function ()
{
   this.dsSch.clearData();   
   this.dsSch.addRow();
   this.dsSch.setColumn(0, "CD_CORP"     ,  this.AuthClient.CD_CORP);   
   
    var strSvcId    = "selectSch";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "selectSch=dsSch";
	var outData     = "dsId_Loansch=selectSch0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction(strSvcId,		// transaction을 구분하기 위한 svc id값
						strSvcType, 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData, 		// 입력값으로 보낼 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						outData, 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc);	// 통신방법 정의 [생략가능]
   
};

// 대출번호 생성 
this.fnSetNoRequest = function ()
{
	this.dsSeq.clearData();
	this.dsSeq.addRow();
    this.dsSeq.setColumn(0, "YY_BASE"     ,  this.dsId_Loansch.getColumn(0,"YY_BASE"));   
    this.dsSeq.setColumn(0, "ID_SABUN"    ,  this.gfnIsNull(this.dsList.getColumn(0, "ID_SABUN")) ? this.AuthClient.ID_SABUN : this.dsList.getColumn(0, "ID_SABUN"));  
	this.dsSeq.setColumn(0, "ID_PERSON"   ,  this.gfnIsNull(this.dsList.getColumn(0, "ID_PERSON")) ? this.AuthClient.ID_PERSON : this.dsList.getColumn(0, "ID_PERSON"));
	this.dsSeq.setColumn(0, "CD_CORP"     ,  this.AuthClient.CD_CORP);  	
	this.dsSeq.setColumn(0, "ID_LOANSCH"  ,  this.dsId_Loansch.getColumn(0,"ID_LOANSCH"));  	

    var strSvcId    = "createSeq";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "createSeq=dsSeq";
	var outData     = "dsLoanSeq=createSeq0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction(strSvcId,		// transaction을 구분하기 위한 svc id값
						strSvcType, 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData, 		// 입력값으로 보낼 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						outData, 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc);	// 통신방법 정의 [생략가능]
};

this.fnSelect = function()
{
	//if(!this.fnSelectValidate()) return;
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "CD_CORP", this.dsList.getColumn(0, "CD_CORP"));
	this.dsSelect.setColumn(0, "ID_SABUN", this.dsList.getColumn(0, "ID_SABUN"));
	this.dsSelect.setColumn(0, "NO_LOANREQUEST", this.dsList.getColumn(0, "NO_LOANREQUEST"));
	//trace(" dsSelect=>" + this.dsSelect.saveXML());
	var strSvcId    = "select";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]

}

this.fnSave = function (vType)
{
	//if(!this.gfnDataValidate(this.dsList,this.dsRequired)) return;
	if(!this.fnSaveValidate()) return;
	
	var flag = this.gfnGetFormStatus(this);
	trace("fnSave  flag=>" + flag);
	this.dsSave.clearData();
	if (flag=="I" || flag=="U" || flag =="Q")
	{
		var nrow = this.dsSave.addRow();
		this.dsSave.setColumn(nrow, "CD_CORP", this.dsList.getColumn(0, "CD_CORP"));
		this.dsSave.setColumn(nrow, "ID_SABUN", this.dsList.getColumn(0, "ID_SABUN"));
		this.dsSave.setColumn(nrow, "NO_LOANREQUEST", this.dsList.getColumn(0, "NO_LOANREQUEST"));
		this.dsSave.setColumn(nrow, "TY_GUBUN", "1");
		this.dsSave.setColumn(nrow, "CD_LOAN", this.dsList.getColumn(0, "CD_LOAN"));
		this.dsSave.setColumn(nrow, "CD_DEPT", this.dsList.getColumn(0, "CD_DEPT"));
		this.dsSave.setColumn(nrow, "CD_POSITION", this.dsList.getColumn(0, "CD_POSITION"));
		this.dsSave.setColumn(nrow, "CD_PAYSTEP", this.dsList.getColumn(0, "CD_PAYSTEP"));
		this.dsSave.setColumn(nrow, "DS_JOIN", this.dsList.getColumn(0, "DS_JOIN"));
		this.dsSave.setColumn(nrow, "DS_GROUPJOIN", this.dsList.getColumn(0, "DS_GROUPJOIN"));
		this.dsSave.setColumn(nrow, "QN_GROUPJOIN", this.dsList.getColumn(0, "QN_GROUPJOIN"));
		this.dsSave.setColumn(nrow, "QN_POINT", this.dsList.getColumn(0, "QN_POINT"));
		this.dsSave.setColumn(nrow, "AM_LOANLIMIT", this.dsList.getColumn(0, "AM_LOANLIMIT"));
		this.dsSave.setColumn(nrow, "AM_JAN", this.dsList.getColumn(0, "AM_JAN"));
		this.dsSave.setColumn(nrow, "ID_LOANSCH", this.dsList.getColumn(0, "ID_LOANSCH"));
		//this.dsSave.setColumn(nrow, "NO_LOAN", this.dsList.getColumn(0, "NO_LOAN"));
		//this.dsSave.setColumn(nrow, "DT_REQUEST", this.dsList.getColumn(0, "DT_REQUEST"));
		this.dsSave.setColumn(nrow, "ST_APRV", vType == "Ok" ? "02" : "01" );
		//this.dsSave.setColumn(nrow, "DT_APRV", this.dsList.getColumn(0, "DT_APRV"));
		//this.dsSave.setColumn(nrow, "DT_LOAN", this.dsList.getColumn(0, "DT_LOAN"));
		this.dsSave.setColumn(nrow, "AM_LOAN", this.dsList.getColumn(0, "AM_LOAN"));
		this.dsSave.setColumn(nrow, "YM_REPAYMENT", this.dsList.getColumn(0, "YM_REPAYMENT"));
		this.dsSave.setColumn(nrow, "AM_MONTH", this.dsList.getColumn(0, "AM_MONTH"));
		this.dsSave.setColumn(nrow, "RT_RATE", this.dsList.getColumn(0, "RT_RATE"));
		this.dsSave.setColumn(nrow, "CD_REPAYMENT", this.dsList.getColumn(0, "CD_REPAYMENT"));
		this.dsSave.setColumn(nrow, "CD_BANK", this.dsList.getColumn(0, "CD_BANK"));
		this.dsSave.setColumn(nrow, "NO_ACCOUNT", this.dsList.getColumn(0, "NO_ACCOUNT"));
		this.dsSave.setColumn(nrow, "DS_ACCOUNT", this.dsList.getColumn(0, "DS_ACCOUNT"));
		this.dsSave.setColumn(nrow, "DS_REASON", this.dsList.getColumn(0, "DS_REASON"));
// 		this.dsSave.setColumn(nrow, "AM_REPAYMENT", this.dsList.getColumn(0, "AM_REPAYMENT"));
// 		this.dsSave.setColumn(nrow, "DT_REPAYMENT", this.dsList.getColumn(0, "DT_REPAYMENT"));
// 		this.dsSave.setColumn(nrow, "AM_BEFJAN", this.dsList.getColumn(0, "AM_BEFJAN"));
// 		this.dsSave.setColumn(nrow, "DT_FROM", this.dsList.getColumn(0, "DT_FROM"));
// 		this.dsSave.setColumn(nrow, "DT_TO", this.dsList.getColumn(0, "DT_TO"));
// 		this.dsSave.setColumn(nrow, "AM_INTEREST", this.dsList.getColumn(0, "AM_INTEREST"));
// 		this.dsSave.setColumn(nrow, "YM_REMAIN", this.dsList.getColumn(0, "YM_REMAIN"));
// 		this.dsSave.setColumn(nrow, "YM_ALLOW", this.dsList.getColumn(0, "YM_ALLOW"));
// 		this.dsSave.setColumn(nrow, "YM_CHANGE", this.dsList.getColumn(0, "YM_CHANGE"));
// 		this.dsSave.setColumn(nrow, "AM_CHANGEMONTH", this.dsList.getColumn(0, "AM_CHANGEMONTH"));
		//this.dsSave.setColumn(nrow, "YN_EXCUTE", this.dsList.getColumn(0, "YN_EXCUTE"));
		//this.dsSave.setColumn(nrow, "DS_RETURN", this.dsList.getColumn(0, "DS_RETURN"));
		this.dsSave.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
	}	
	
	if (this.dsSave.rowcount == 0) return;
		
	var strSvcId    = "save"+vType ;
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg,         // 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc);   // 통신방법 정의 [생략가능]
};

this.fnDelete = function ()
{
	//if(!this.fnDelValidate()) return;
	
	var flag = this.gfnGetFormStatus(this);
	
	this.dsDelete.clearData();
	
	if (flag =="D")
	{
		var nrow = this.dsDelete.addRow();
		this.dsDelete.setColumn(nrow, "CD_CORP", this.dsList.getColumn(0, "CD_CORP"));
		this.dsDelete.setColumn(nrow, "ID_SABUN", this.dsList.getColumn(0, "ID_SABUN"));
		this.dsDelete.setColumn(nrow, "NO_LOANREQUEST", this.dsList.getColumn(0, "NO_LOANREQUEST"));
	}	
	
	if (this.dsDelete.rowcount == 0) return;
		
	var strSvcId    = "delete" ;
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "delete=dsDelete";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg,         // 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc);   // 통신방법 정의 [생략가능]
	
};
 /************************************************************************
 * Validate
 ************************************************************************/
this.fnSaveValidate = function() {
	
	var strMsg = "";

	if(this.gfnIsNull(this.dsList.getColumn(0, "ID_SABUN"))) {
		strMsg += "※사번이 입력되지 않았습니다.\n";
	}
	
	if(this.gfnIsNull(this.dsList.getColumn(0, "CD_LOAN"))) {
		strMsg += "※대출구분이 입력되지 않았습니다.\n";
	}
	
	if(this.dsList.getColumn(0, "AM_LOAN")== 0 || this.gfnIsNull(this.dsList.getColumn(0,"AM_LOAN"))) {
		strMsg += "※대출금액이 입력되지 않았습니다.\n";
	}
		
	if(this.dsList.getColumn(0, "YM_REPAYMENT")==0 && this.dsList.getColumn(0, "AM_MONTH")==0) {
		strMsg += "※상환신청개월이 입력되지 않았습니다.\n";
	}	
	trace(" ※상환신청개월이 YM_REPAYMENT=>" + this.dsList.getColumn(0, "YM_REPAYMENT"));
	if((this.dsList.getColumn(0, "YM_REPAYMENT")==0 || this.gfnIsNull(this.dsList.getColumn(0, "YM_REPAYMENT"))) && this.dsList.getColumn(0, "AM_MAX") > 0) {
		strMsg += "※상환신청개월이 입력되지 않았습니다.\n";
	}	
	
	if(this.gfnIsNull(this.dsList.getColumn(0, "AM_MONTH")==0))  {
		strMsg += "※월상환액이 입력되지 않았습니다.\n";
	}
	
	if(this.gfnIsNull(this.dsList.getColumn(0, "DS_REASON")) ) {
		strMsg += "※대출사유가 입력되지 않았습니다.\n";
	}	
	
	if(this.gfnIsNull(this.dsList.getColumn(0, "NO_ACCOUNT")) ) {
		strMsg += "※계좌번호가 입력되지 않았습니다.\n";
	}
	
	if(this.gfnIsNull(this.dsList.getColumn(0, "CD_BANK")) ) {
		strMsg += "※은행코드가 입력되지 않았습니다.\n";
	}
	
	if(this.dsList.getColumn(0, "AM_LOAN") > this.dsList.getColumn(0, "AM_LOANPOSSIBLE")) {
		strMsg += "※대출신청액은 개인대출한도보다 작아야 합니다. 대출신청금액을 확인하세요.\n";
	}
	
	if(this.dsList.getColumn(0, "AM_LOAN") > this.dsList.getColumn(0, "AM_MAXLOAN") ) {
		strMsg += "※대출신청액은 대출한도금액보다 작아야 합니다. 대출신청금액을 확인하세요.\n";
	}
	
	if(this.dsList.getColumn(0, "YM_REPAYMENT") > this.dsList.getColumn(0, "YM_MAX") ) {
		strMsg += "※대출신청기간은 최장상환개월보다 작아야 합니다. 대출신청기간을 확인하세요.\n";
	}
	
	if(strMsg.length > 0) {
		this.gfnAlert(strMsg);
		return false;
	}

	return true;
}

this.fnDelValidate = function ()
{
	var strMsg = "";

	if(!this.gfnIsNull(this.dsList.getColumn(0, "ST_APRV")) && this.dsList.getColumn(0, "ST_APRV") == "01") {
		strMsg += "※신청완료된 자료입니다. 삭제할 수 없습니다.\n";
	}
	
	if(strMsg.length > 0) {
		this.gfnAlert(strMsg);
		return false;
	}
	return true;
};
/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (errorCode != 0) {
		this.gfnAlert(errorMsg);
		return false;
	}
	
	trace(" svcID=>" + svcID);
	switch(svcID) {
		case "select" :
			if(this.dsList.rowcount > 0) {
				this.dsList.set_enableevent(false);
				this.fnSetEnable(); //  활성화 처리 
				this.staFileUpload.set_text("파일수 : " + this.dsList.getColumn(0, "URL_PROOF") + " 개");
				trace("URL_PROOF =>" + this.dsList.getColumn(0, "URL_PROOF"));
				this.gfnSetFormStatus(this, "Q");
				this.dsList.set_enableevent(true);
				//trace(" dsList=>" + this.dsList.saveXML());
			}
			break;
		case "createSeq" :		
			if (this.dsLoanSeq.rowcount != 0) {	
		        //trace(this.dsLoanSeq.saveXML());
				this.dsList.set_enableevent(false);
				this.dsList.setColumn(0,"NO_LOANREQUEST",this.dsLoanSeq.getColumn(0,"NO_LOANREQUEST")); 
				this.dsList.setColumn(0,"ID_SABUN",this.dsLoanSeq.getColumn(0,"ID_SABUN")); 
				this.dsList.setColumn(0,"DS_HNAME",this.dsLoanSeq.getColumn(0,"DS_HNAME")); 
				this.dsList.setColumn(0,"CD_DEPT",this.dsLoanSeq.getColumn(0,"CD_DEPT")); 
				this.dsList.setColumn(0,"DS_DEPT",this.dsLoanSeq.getColumn(0,"DS_DEPT")); 
				this.dsList.setColumn(0,"CD_EMPTYPE",this.dsLoanSeq.getColumn(0,"CD_EMPTYPE")); 
				this.dsList.setColumn(0,"CD_POSITION",this.dsLoanSeq.getColumn(0,"CD_POSITION")); 
				this.dsList.setColumn(0,"DS_POSITION",this.dsLoanSeq.getColumn(0,"DS_POSITION")); 
				this.dsList.setColumn(0,"CD_PAYSTEP",this.dsLoanSeq.getColumn(0,"CD_PAYSTEP")); 
				this.dsList.setColumn(0,"DS_PAYSTEP",this.dsLoanSeq.getColumn(0,"DS_PAYSTEP")); 
				this.dsList.setColumn(0,"DT_JOIN",this.dsLoanSeq.getColumn(0,"DT_JOIN")); 
				this.dsList.setColumn(0,"DT_GROUPJOIN",this.dsLoanSeq.getColumn(0,"DT_GROUPJOIN")); 
				this.dsList.setColumn(0,"DS_GROUPJOIN",this.dsLoanSeq.getColumn(0,"DS_GROUPJOIN")); 
				this.dsList.setColumn(0,"DS_JOIN",this.dsLoanSeq.getColumn(0,"DS_JOIN")); 
				this.dsList.setColumn(0,"AM_LOANLIMIT",this.dsLoanSeq.getColumn(0,"AM_LOANLIMIT")); 
				this.dsList.setColumn(0,"AM_JAN",this.dsLoanSeq.getColumn(0,"AM_JAN")); 
				this.dsList.setColumn(0,"AM_LOANPOSSIBLE",this.dsLoanSeq.getColumn(0,"AM_LOANPOSSIBLE")); 
				this.dsList.setColumn(0,"NO_ACCOUNT",this.dsLoanSeq.getColumn(0,"NO_ACCOUNT")); 
				this.dsList.setColumn(0,"CD_BANK",this.dsLoanSeq.getColumn(0,"CD_BANK")); 
				this.dsList.setColumn(0,"DS_BANK",this.dsLoanSeq.getColumn(0,"DS_BANK")); 
				this.dsList.setColumn(0,"DS_ACCOUNT",this.dsLoanSeq.getColumn(0,"DS_ACCOUNT")); 
				this.dsList.setColumn(0,"QN_GROUPJOIN",this.dsLoanSeq.getColumn(0,"QN_GROUPJOIN")); 
				this.dsList.setColumn(0,"QN_POINT",this.dsLoanSeq.getColumn(0,"QN_POINT")); 
				this.dsList.set_enableevent(true);
				trace(this.dsLoanSeq.getColumn(0,"ID_SABUN") + "||" +this.dsLoanSeq.getColumn(0,"NO_LOANREQUEST"));
				this.btnAfterFile.set_enable(false);
				this.btnAGTFILE.set_enable(false);
				this.btnAGTPRINT.set_enable(false);
			} 
			break;
		case "saveOk":		// 신청완료
				
				this.fnVaidateCallback = function() {
				    trace(" saveOk=>");
					this.getParentContext().close(true);
				}
				this.gfnAlert("사내대출 신청이 완료되었습니다.", "fnVaidateCallback");
			break;
		case "saveAnd":		// 임시저장
					
				this.gfnSetFormStatus(this, "U");
				this.dsList.setColumn(0, this.ucFlag , "U");
				this.fnSelect();
			break;
		case "selectSch":			
				if(this.getOwnerFrame().TY_WRK =="I" || this.getOwnerFrame().TY_WRK =="U"){
					if (this.dsId_Loansch.rowcount == 0) {
						this.gfnAlert("사내대출 신청기간이 아닙니다. 신청기간을 확인하세요!", "fnVaidateCallback");
						trace(" selectSch=>"+ this.getOwnerFrame().TY_WRK);
						
						break;
					} 
					trace(" selectSch TY_WRK=>" + this.getOwnerFrame().TY_WRK);
					if (this.getOwnerFrame().TY_WRK =="I") {
						this.dsList.setColumn(0,"ID_LOANSCH", this.dsId_Loansch.getColumn(0,"ID_LOANSCH"));
						this.fnSetNoRequest();  //대출신청번호 만들기 
					}
				}else{
				  // 임시저장 상태일때 기간이 아니면 빠져나가기 
				}
			break;
		case "delete" :
			trace(" delete=>");
			this.getParentContext().close(true);
			break;
		default:
	}
};

this.fnVaidateCallback =  function (svcId, sRtn) 
{
	this.getParentContext().close(false);
};

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	
	if (id == "cfID_SABUN") {
		dsUserParam.setColumn(nrow, "CD_CORP", this.AuthClient.CD_CORP);
		dsUserParam.setColumn(nrow, "CD_DEPT", "");
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "YN_CORP", "Y");
		dsUserParam.setColumn(nrow, "TY_RETIRE", "01");
	}
	if (id == "cfCD_LOAN") {
		dsUserParam.setColumn(nrow, "DT_BASE", this.dsId_Loansch.getColumn(0, "DT_BASE"));
		dsUserParam.setColumn(nrow, "CD_CORP", this.dsList.getColumn(0, "CD_CORP"));
		dsUserParam.setColumn(nrow, "CD_EMPTYPE", this.dsList.getColumn(0, "CD_EMPTYPE"));
		dsUserParam.setColumn(nrow, "QN_BASEYEAR", this.dsList.getColumn(0, "QN_GROUPJOIN"));
		dsUserParam.setColumn(nrow, "CD_POSITION", this.dsList.getColumn(0, "CD_POSITION"));
	}
	return true;
};

this.fnAfterCDTextChanged = function(id,codeFindData) {
   	var arr = codeFindData;
	if(id == "cfID_SABUN") {		
		if(arr.length > 0) {
			this.dsList.set_enableevent(false);
			this.dsList.setColumn(0,"CD_CORP",arr[0]["CD_CORP"]);
			this.dsList.setColumn(0,"DS_CORP",arr[0]["DS_CORP"]);
			this.dsList.setColumn(0,"CD_DEPT",arr[0]["CD_DEPT"]);
			this.dsList.setColumn(0,"DS_DEPT",arr[0]["DS_DEPT"]);
			this.dsList.setColumn(0,"ID_PERSON",arr[0]["ID_PERSON"]); 
			this.dsList.setColumn(0,"ID_SABUN",arr[0]["ID_SABUN"]); 
			this.dsList.setColumn(0,"ID_DSHNAME",arr[0]["ID_DSHNAME"]); 
			trace(" fnAfterCDTextChanged cfID_SABUN =>" + arr[0]["ID_SABUN"] );
			if (this.getOwnerFrame().TY_WRK =="I")
			{
				this.fnSetNoRequest();
			}
			this.dsList.set_enableevent(true);
		}else{
			this.dsList.set_enableevent(false);
			this.dsList.setColumn(0,"CD_CORP","");
			this.dsList.setColumn(0,"DS_CORP","");
			this.dsList.setColumn(0,"CD_DEPT","");
			this.dsList.setColumn(0,"DS_DEPT","");
			this.dsList.setColumn(0,"ID_PERSON",""); 	
			this.dsList.set_enableevent(true);
		}
	}
	
	if(id=="cfCD_LOAN"){
		if(arr.length > 0) {
		    //trace(arr[0]["AM_MAXLOAN"]);
			this.dsList.set_enableevent(false);
			this.dsList.setColumn(0,"CD_LOAN",	arr[0]["CD_LOAN"]);
			this.dsList.setColumn(0,"DS_LOAN",	arr[0]["DS_LOAN"]);
			this.dsList.setColumn(0,"AM_MAXLOAN",arr[0]["AM_MAXLOAN"]);
			this.dsList.setColumn(0,"RT_RATE",	arr[0]["RT_RATE"]);
			this.dsList.setColumn(0,"YM_MAX",	arr[0]["YM_MAX"]);
			this.dsList.setColumn(0,"AM_MONTHRATE",	arr[0]["AM_MONTH"]);
			this.dsList.setColumn(0,"YY_BASEYEAR",arr[0]["YY_BASEYEAR"]);
			//this.dsList.setColumn(0,"DS_REM",	arr[0]["DS_REM"]);
			this.dsList.setColumn(0,"DS_DOCUMENT",arr[0]["DS_DOCUMENT"]);
			this.dsList.setColumn(0,"DS_REQUESTDOC",arr[0]["DS_REQUESTDOC"]);			
			if (arr[0]["YM_MAX"] == 0) // 현장전세는 신청개월없음. 
			{
				this.dsList.setColumn(0,"AM_MONTH",	arr[0]["AM_MONTH"]);
				this.dsList.setColumn(0,"YM_REPAYMENT",	0);
				this.txtYM_REPAYMENT.set_enable(false);
			}else{
				this.txtYM_REPAYMENT.set_enable(true);
			}
			this.dsList.set_enableevent(true);
		}
	}	
	
	
};
 /************************************************************************
 * 확장버튼 이벤트
 ************************************************************************/
 
this.btnSIMULATION_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var param = {};
	param.CD_CORP   = this.dsList.getColumn(this.dsList.rowposition, "CD_CORP");
	param.ID_SABUN  = this.dsList.getColumn(this.dsList.rowposition, "ID_SABUN");
	param.DS_HNAME  = this.dsList.getColumn(this.dsList.rowposition, "DS_HNAME");
	param.DT_LOAN   = this.dsId_Loansch.getColumn(0, "DT_LOAN");
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DAB_LOANSIMULATION_DLG", "fnPopupCallback", param);
};

  // 임시저장 버튼
 this.divBtns_btnSAVE_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.dsList.setColumn(0, "ST_APRV" , "01");
	this.fnSave("And");
};
 // 신청완료 버튼
this.btnOk_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{

	this.dsList.setColumn(0, "ST_APRV" , "02");
	this.fnSave("Ok");

};

// 취소버튼
this.btnCancel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//this.gfnSetFormStatus(this, "D");
	
	//if(!this.fnDelValidate()) return;
	var flag = this.gfnGetFormStatus(this);
	var StAprv = this.dsList.getColumn(0, "ST_APRV");
	trace("StAprv =>" + StAprv);
	if (StAprv =="01" && (flag == "U" || flag == "Q" ))
	{
		this.gfnConfirm("대출 신청내역이 삭제 됩니다. 삭제하시겠습니까?", "fnDelCallback");
	}else{
		this.getParentContext().close(false);
	}
};

this.fnDelCallback = function (svcId, sRtn)
{
	if (sRtn)
	{
		this.gfnSetFormStatus(this, "D");
		this.dsList.setColumn(0, this.ucFlag , "D");
		this.fnDelete();
		//this.getParentContext().close(true);
	}

};

this.dsList_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{	

	trace(" dsList_onvaluechanged=>" + this.gfnDsIsUpdated(obj));
	
	if(this.gfnDsIsUpdated(obj)){
		var rowType = obj.getRowType(e.row);
		this.gfnSetFormStatus(this, (rowType == 2 ? "I" : "U"));
	}
	if (e.oldvalue != e.newvalue)
	{
		if( e.columnid == "CD_LOAN"){
			this.dsList.set_enableevent(false);
			this.dsList.setColumn(0,"AM_LOAN", 0);
			this.dsList.setColumn(0,"YM_REPAYMENT", 0);
			this.dsList.set_enableevent(true);
		}
		if( e.columnid == "AM_LOAN" || e.columnid == "YM_REPAYMENT" ) {
			this.dsList.set_enableevent(false);
			this.dsList.setColumn(0,"AM_MONTH", this.dsList.getColumn(0, "AM_MONTHRATE"));
// 			trace(" AM_LOAN=>" +this.dsList.getColumn(0, "AM_LOAN") );
// 			trace(" YM_REPAYMENT=>" +this.dsList.getColumn(0, "YM_REPAYMENT") );
			if (!this.gfnIsNull(this.dsList.getColumn(0, "AM_LOAN"))  && this.dsList.getColumn(0,"YM_REPAYMENT") !=0 
			 && !this.gfnIsNull(this.dsList.getColumn(0,"YM_REPAYMENT")) && this.dsList.getColumn(0, "YM_MAX") !=0 )
			{
				var am_month = this.fnGetTrunc(this.dsList.getColumn(0, "AM_LOAN") / this.dsList.getColumn(0,"YM_REPAYMENT"),10);
				trace(" am_month=>" +am_month );
				this.dsList.setColumn(0,"AM_MONTH", am_month);
			}
			this.dsList.set_enableevent(true);
		}	
	}

};

/************************************************************************
 * 기타 이벤트
 ************************************************************************/

// 첨부파일
this.fnFileUpload = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	//trace("this.btnFileUpload.text :: " + this.btnFileUpload.text);
	if (this.dsList.rowcount <= 0) {
		return false;
	}

		var cdGubun = "";
		var cdDir = "";		

		cdGubun = "DAB1";
		var fileManager = {};
		fileManager.CD_GUBUN = cdGubun;
		fileManager.CD_DIR = [this.dsList.getColumn(this.dsList.rowposition, "NO_LOANREQUEST")];
		if(this.dsList.getColumn(0, "ST_APRV")=="01" || this.gfnIsNull(this.dsList.getColumn(0, "ST_APRV"))) {
			fileManager.IS_READONLY = false;
		} else {
			fileManager.IS_READONLY = true;
		}
		
		
		trace("fileManager.CD_GUBUN :: " + fileManager.CD_GUBUN);
		trace("fileManager.CD_DIR :: " + fileManager.CD_DIR);
		trace("fileManager.IS_READONLY :: " + fileManager.IS_READONLY);
		
		this.gfnFileManager(fileManager, "fnFileCallback");

}

this.fnFileCallback = function(strID, val) {
	// val.IsChange : 변경여부, val.Cnt : 파일개수
		
	// 파일개수를 다시 셋팅
	this.dsList.set_enableevent(false);
	if(val.Cnt == 0) {
		this.staFileUpload.set_text("파일수 : 0 개");
	} else {
		this.staFileUpload.set_text("파일수 : " + val.Cnt + " 개");
	}

	//this.dsList.setColumn(this.dsList.rowposition, "URL_PROOF", val.Cnt);
	this.dsList.set_enableevent(true);
};

this.fnGetTrunc = function(amVal, vCnt){
	var returnVal = this.gfnNvl(amVal, 0);
	if(returnVal > 0){
		returnVal = Math.floor(amVal/vCnt) * vCnt;
	}
	return returnVal;
}

//대출약정서/보증서 첨부 
this.btnAGTFILE_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if (this.dsList.rowcount <= 0) {
		return false;
	}
	if (this.dsList.getColumn(0, "ST_APRV")=="04"){
		return false;
	}
	var cdGubun = "";
	var cdDir = "";		

	cdGubun = "DAB2";
	var fileManager = {};
	fileManager.CD_GUBUN = cdGubun;
	fileManager.CD_DIR = [this.dsList.getColumn(this.dsList.rowposition, "NO_LOANREQUEST")];
	trace(" btnAGTFILE_onclick=>" + this.dsList.getColumn(0, "ST_APRV"));
	if(this.dsList.getColumn(0, "ST_APRV") >= "03" ) {
		fileManager.IS_READONLY = false;
	} else {
		fileManager.IS_READONLY = true;
	}
	fileManager.TXT_MESSAGE = "※대출약정서 자필서명후 첨부 , 보증증권 첨부"	
	trace("fileManager.CD_GUBUN :: " + fileManager.CD_GUBUN);
	trace("fileManager.CD_DIR :: " + fileManager.CD_DIR);
	trace("fileManager.IS_READONLY :: " + fileManager.IS_READONLY);
	
	this.gfnFileManager(fileManager, "fnFileCallback2");
};

//사후제출서류 첨부 
this.btnAfterFile_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if (this.dsList.rowcount <= 0) {
		return false;
	}
	if (this.dsList.getColumn(0, "ST_APRV")=="04"){
		return false;
	}
	
	var cdGubun = "";
	var cdDir = "";		

	cdGubun = "DAB3";
	var fileManager = {};
	fileManager.CD_GUBUN = cdGubun;
	fileManager.CD_DIR = [this.dsList.getColumn(this.dsList.rowposition, "NO_LOANREQUEST")];
	trace(" btnAfterFile_onclick=>" + this.dsList.getColumn(0, "ST_APRV"));
	if(this.dsList.getColumn(0, "ST_APRV") == "06" ) {
		fileManager.IS_READONLY = false;
	} else {
		fileManager.IS_READONLY = true;
	}
		
	trace("fileManager.CD_GUBUN :: " + fileManager.CD_GUBUN);
	trace("fileManager.CD_DIR :: " + fileManager.CD_DIR);
	trace("fileManager.IS_READONLY :: " + fileManager.IS_READONLY);
	
	this.gfnFileManager(fileManager, "fnFileCallback2");
};

this.fnFileCallback2 = function(strID, val) {
};

//대출약정서 출력 
this.btnAGTPRINT_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if (this.dsList.rowcount <= 0) {
		return false;
	}
	if (this.dsList.getColumn(0, "ST_APRV")=="04"){
		return false;
	}
	
	this.dsPrint = new Dataset();
	this.dsPrint.addColumn("NO_LOANREQUEST" , "STRING");	
	
	this.dsPrint.clearData();
	this.dsPrint.addRow();
	this.dsPrint.setColumn(0, "NO_LOANREQUEST", this.dsList.getColumn(0, "NO_LOANREQUEST"));
	
	trace(" btnAGTPRINT_onclick=>" + "dsPrint");

	var inProc		= "_dsProc";
 	//var inParam 	= "params=dsList";						// 조회SP이외 사용할 정보
	var inParam 	= "params=dsPrint";						// 조회SP이외 사용할 정보
	var inData      = "print=dsPrint";
 	//var inData      = "line1=dsLine1 line2=dsLine2 selectmaster=dsMaster";	//   select=dsSelect
 	var reportpath  = "/da/dab/DAB_AGREEMENT.ozr";

 	gfnOpenReport(this, reportpath, inProc, inParam, inData);
	
};

]]></Script>
    <Objects>
      <Dataset id="dsLoanSeq"/>
      <Dataset id="dsList" onvaluechanged="dsList_onvaluechanged">
        <ColumnInfo>
          <Column id="NO_LOANREQUEST" type="STRING" size="256"/>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="ID_SABUN" type="STRING" size="256"/>
          <Column id="ID_PERSON" type="INT" size="256"/>
          <Column id="DS_HNAME" type="STRING" size="256"/>
          <Column id="CD_DEPT" type="STRING" size="256"/>
          <Column id="DS_DEPT" type="STRING" size="256"/>
          <Column id="CD_EMPTYPE" type="STRING" size="256"/>
          <Column id="CD_POSITION" type="STRING" size="256"/>
          <Column id="DS_POSITION" type="STRING" size="256"/>
          <Column id="CD_PAYSTEP" type="STRING" size="256"/>
          <Column id="DS_PAYSTEP" type="STRING" size="256"/>
          <Column id="DT_JOIN" type="STRING" size="256"/>
          <Column id="DT_GROUPJOIN" type="STRING" size="256"/>
          <Column id="YM_GROUPJOIN" type="INT" size="256"/>
          <Column id="DS_GROUPJOIN" type="STRING" size="256"/>
          <Column id="DS_JOIN" type="STRING" size="256"/>
          <Column id="AM_LOANLIMIT" type="FLOAT" size="256"/>
          <Column id="AM_JAN" type="FLOAT" size="256"/>
          <Column id="AM_LOANPOSSIBLE" type="FLOAT" size="256"/>
          <Column id="ID_LOANSCH" type="STRING" size="256"/>
          <Column id="NO_LOAN" type="STRING" size="256"/>
          <Column id="DT_REQUEST" type="STRING" size="256"/>
          <Column id="ST_APRV" type="STRING" size="256"/>
          <Column id="DT_APRV" type="STRING" size="256"/>
          <Column id="DT_LOAN" type="STRING" size="256"/>
          <Column id="AM_LOAN" type="FLOAT" size="256"/>
          <Column id="YM_REPAYMENT" type="FLOAT" size="256"/>
          <Column id="AM_MONTH" type="FLOAT" size="256"/>
          <Column id="RT_RATE" type="FLOAT" size="256"/>
          <Column id="CD_REPAYMENT" type="STRING" size="256"/>
          <Column id="DS_REPAYMENT" type="STRING" size="256"/>
          <Column id="CD_LOAN" type="STRING" size="256"/>
          <Column id="DS_LOAN" type="STRING" size="256"/>
          <Column id="AM_MAXLOAN" type="FLOAT" size="256"/>
          <Column id="YM_MAX" type="FLOAT" size="256"/>
          <Column id="AM_MONTHRATE" type="FLOAT" size="256"/>
          <Column id="YY_BASEYEAR" type="INT" size="256"/>
          <Column id="CD_BANK" type="STRING" size="256"/>
          <Column id="DS_BANK" type="STRING" size="256"/>
          <Column id="NO_ACCOUNT" type="STRING" size="256"/>
          <Column id="DS_ACCOUNT" type="STRING" size="256"/>
          <Column id="DS_REASON" type="STRING" size="256"/>
          <Column id="AM_REPAYMENT" type="FLOAT" size="256"/>
          <Column id="DT_REPAYMENT" type="STRING" size="256"/>
          <Column id="AM_BEFJAN" type="FLOAT" size="256"/>
          <Column id="DT_FROM" type="STRING" size="256"/>
          <Column id="DT_TO" type="STRING" size="256"/>
          <Column id="AM_INTEREST" type="FLOAT" size="256"/>
          <Column id="YM_REMAIN" type="FLOAT" size="256"/>
          <Column id="YM_ALLOW" type="FLOAT" size="256"/>
          <Column id="YM_CHANGE" type="FLOAT" size="256"/>
          <Column id="AM_CHANGEMONTH" type="FLOAT" size="256"/>
          <Column id="DS_REM" type="STRING" size="256"/>
          <Column id="DS_DOCUMENT" type="STRING" size="256"/>
          <Column id="DS_REQUESTDOC" type="STRING" size="256"/>
          <Column id="YN_EXCUTE" type="STRING" size="256"/>
          <Column id="DS_RETURN" type="STRING" size="256"/>
          <Column id="QN_POINT" type="STRING" size="256"/>
          <Column id="QN_GROUPJOIN" type="INT" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">createSeq</Col>
            <Col id="SP">DABPR_LOANSEQ_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DABPR_LOANREQUEST_SAVE</Col>
          </Row>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DABPR_LOANREQUEST_DETAILSELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">selectSch</Col>
            <Col id="SP">DABPR_LOANSCH_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">delete</Col>
            <Col id="SP">DABPR_LOANREQUEST_DELETE</Col>
          </Row>
          <Row>
            <Col id="TARGET">print</Col>
            <Col id="SP">DABPR_LOANREQUEST_PRINT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsRequired">
        <ColumnInfo>
          <Column id="CD_FIELD" type="STRING" size="256"/>
          <Column id="DS_FIELD" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_FIELD">CD_CORP</Col>
            <Col id="DS_FIELD">법인</Col>
          </Row>
          <Row>
            <Col id="CD_FIELD">CD_DEPT</Col>
            <Col id="DS_FIELD">부서</Col>
          </Row>
          <Row>
            <Col id="CD_FIELD">ID_SABUN</Col>
            <Col id="DS_FIELD">사번</Col>
          </Row>
          <Row>
            <Col id="CD_FIELD">CD_LOAN</Col>
            <Col id="DS_FIELD">대출유형</Col>
          </Row>
          <Row>
            <Col id="CD_FIELD">AM_REQUEST</Col>
            <Col id="DS_FIELD">대출금액</Col>
          </Row>
          <Row>
            <Col id="CD_FIELD">NO_LOANREQUEST</Col>
            <Col id="DS_FIELD">상환기간</Col>
          </Row>
          <Row>
            <Col id="CD_FIELD">DS_REMARK</Col>
            <Col id="DS_FIELD">대출사유</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsId_Loansch">
        <ColumnInfo>
          <Column id="YY_BASE" type="STRING" size="256"/>
          <Column id="ID_LOANSCH" type="STRING" size="256"/>
          <Column id="DT_BASE" type="STRING" size="256"/>
          <Column id="DT_LOAN" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item4" compid="divData.form.cfID_SABUN.form.CDTextBox" propid="value" datasetid="dsList" columnid="ID_SABUN"/>
      <BindItem id="item5" compid="divData.form.cfID_SABUN.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_HNAME"/>
      <BindItem id="item7" compid="divDataDetail.form.cfCD_LOAN.form.CDTextBox" propid="value" datasetid="dsList" columnid="CD_LOAN"/>
      <BindItem id="item8" compid="divDataDetail.form.cfCD_LOAN.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_LOAN"/>
      <BindItem id="item9" compid="divDataDetail.form.txtAM_REQUEST" propid="value" datasetid="dsList" columnid="AM_LOAN"/>
      <BindItem id="item10" compid="divDataDetail.form.txtYM_REPAYMENT" propid="value" datasetid="dsList" columnid="YM_REPAYMENT"/>
      <BindItem id="item1" compid="divData.form.txtDS_DEPT" propid="value" datasetid="dsList" columnid="DS_DEPT"/>
      <BindItem id="item2" compid="divData.form.txtDS_POSITION" propid="value" datasetid="dsList" columnid="DS_POSITION"/>
      <BindItem id="item0" compid="divDataDetail.form.txtDS_REPAYMENT" propid="value" datasetid="dsList" columnid="DS_REPAYMENT"/>
      <BindItem id="item14" compid="divDataDetail.form.txtDS_BANK" propid="value" datasetid="dsList" columnid="DS_BANK"/>
      <BindItem id="item15" compid="divDataDetail.form.txtNO_ACCOUNT" propid="value" datasetid="dsList" columnid="NO_ACCOUNT"/>
      <BindItem id="item12" compid="divData.form.txtDS_JOIN" propid="value" datasetid="dsList" columnid="DS_JOIN"/>
      <BindItem id="item13" compid="divData.form.txtDS_GROUPJOIN" propid="value" datasetid="dsList" columnid="DS_GROUPJOIN"/>
      <BindItem id="item16" compid="divDataDetail.form.txtDS_DOCUMENT" propid="value" datasetid="dsList" columnid="DS_DOCUMENT"/>
      <BindItem id="item17" compid="divDataDetail.form.txtDS_REQUESTDOC" propid="value" datasetid="dsList" columnid="DS_REQUESTDOC"/>
      <BindItem id="item19" compid="divDataDetail.form.txtCD_BANK" propid="value" datasetid="dsList" columnid="CD_BANK"/>
      <BindItem id="item20" compid="divDataDetail.form.txtDS_ACCOUNT" propid="value" datasetid="dsList" columnid="DS_ACCOUNT"/>
      <BindItem id="item21" compid="divData.form.txtDS_PAYSTEP" propid="value" datasetid="dsList" columnid="DS_PAYSTEP"/>
      <BindItem id="item22" compid="divData.form.mskAM_LOANJAN" propid="value" datasetid="dsList" columnid="AM_JAN"/>
      <BindItem id="item23" compid="divData.form.mskAM_LIMIT" propid="value" datasetid="dsList" columnid="AM_LOANPOSSIBLE"/>
      <BindItem id="item24" compid="divData.form.mskAM_LOANLIMIT" propid="value" datasetid="dsList" columnid="AM_LOANLIMIT"/>
      <BindItem id="item11" compid="divData.form.tclDT_JOIN" propid="value" datasetid="dsList" columnid="DT_JOIN"/>
      <BindItem id="item25" compid="divData.form.tclDT_GROUPJOIN" propid="value" datasetid="dsList" columnid="DT_GROUPJOIN"/>
      <BindItem id="item26" compid="divDataDetail.form.mskAM_TYPELIMIT" propid="value" datasetid="dsList" columnid="AM_MAXLOAN"/>
      <BindItem id="item27" compid="divDataDetail.form.mskYM_LIMIT" propid="value" datasetid="dsList" columnid="YM_MAX"/>
      <BindItem id="item28" compid="divDataDetail.form.mskAM_MONTH" propid="value" datasetid="dsList" columnid="AM_MONTH"/>
      <BindItem id="item29" compid="divDataDetail.form.txtDS_REMARK" propid="value" datasetid="dsList" columnid="DS_REASON"/>
      <BindItem id="item30" compid="divDataDetail.form.mskRT_RATE" propid="value" datasetid="dsList" columnid="RT_RATE"/>
      <BindItem id="item3" compid="txtNO_LOANREQUEST" propid="value" datasetid="dsList" columnid="NO_LOANREQUEST"/>
      <BindItem id="item6" compid="divData.form.txtDS_APRV" propid="value" datasetid="dsList" columnid="DS_APRV"/>
      <BindItem id="item18" compid="divData.form.tclDT_REQUEST" propid="value" datasetid="dsList" columnid="DT_REQUEST"/>
    </Bind>
  </Form>
</FDL>
