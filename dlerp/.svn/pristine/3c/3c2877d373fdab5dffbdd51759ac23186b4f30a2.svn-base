(function()
{
    return function()
    {
        if (!this._is_form)
            return;
        
        var obj = null;
        
        this.on_create = function()
        {
            this.set_name("form");
            this.set_titletext("본사부서추가");
            this.getSetter("maxwidth").set("430");
            this.getSetter("maxheight").set("350");
            if (Form == this.constructor)
            {
                this._setFormPosition(400,310);
            }
            
            // Object(Dataset, ExcelExportObject) Initialize
            obj = new Dataset("_dsProc", this);
            obj._setContents("<ColumnInfo><Column id=\"TARGET\" type=\"STRING\" size=\"256\"/><Column id=\"SP\" type=\"STRING\" size=\"256\"/></ColumnInfo><Rows><Row><Col id=\"TARGET\">save</Col><Col id=\"SP\">DACPR_YEARLYPLAN_CREATE</Col></Row><Row><Col id=\"TARGET\">combo</Col><Col id=\"SP\">DAZPR_COMMONCODE_COMBO</Col></Row><Row><Col id=\"TARGET\">selectDept</Col><Col id=\"SP\">DAZPR_DEPT_NEW</Col></Row></Rows>");
            this.addChild(obj.name, obj);


            obj = new Dataset("dsData", this);
            obj._setContents("<ColumnInfo><Column id=\"CD_UPDEPT\" type=\"STRING\" size=\"256\"/><Column id=\"DT_EST\" type=\"STRING\" size=\"256\"/><Column id=\"TY_DEPT\" type=\"STRING\" size=\"256\"/><Column id=\"NO_LEVEL\" type=\"STRING\" size=\"256\"/><Column id=\"CD_DEPT_ACNT\" type=\"STRING\" size=\"256\"/><Column id=\"CD_DEPT\" type=\"STRING\" size=\"256\"/><Column id=\"DS_DEPT\" type=\"STRING\" size=\"256\"/><Column id=\"CD_CORP\" type=\"STRING\" size=\"256\"/><Column id=\"TY_GUBUN\" type=\"STRING\" size=\"256\"/></ColumnInfo><Rows><Row><Col id=\"CD_UPDEPT\"/><Col id=\"DT_EST\"/><Col id=\"TY_DEPT\"/><Col id=\"NO_LEVEL\"/><Col id=\"CD_DEPT_ACNT\"/><Col id=\"CD_DEPT\"/><Col id=\"DS_DEPT\"/><Col id=\"CD_CORP\"/></Row></Rows>");
            this.addChild(obj.name, obj);


            obj = new Dataset("dsTY_DEPT", this);
            obj._setContents("<ColumnInfo><Column id=\"CD_CODE\" type=\"STRING\" size=\"256\"/><Column id=\"DS_CODE\" type=\"STRING\" size=\"256\"/></ColumnInfo>");
            this.addChild(obj.name, obj);


            obj = new Dataset("dsDept", this);
            obj._setContents("<ColumnInfo><Column id=\"CD_DEPT\" type=\"STRING\" size=\"256\"/></ColumnInfo>");
            this.addChild(obj.name, obj);


            obj = new Dataset("dsTY_GUBUN", this);
            obj._setContents("<ColumnInfo><Column id=\"CD_CODE\" type=\"STRING\" size=\"256\"/><Column id=\"DS_CODE\" type=\"STRING\" size=\"256\"/></ColumnInfo><Rows><Row><Col id=\"CD_CODE\">F</Col><Col id=\"DS_CODE\">임원</Col></Row><Row><Col id=\"CD_CODE\">J</Col><Col id=\"DS_CODE\">일반조직</Col></Row><Row><Col id=\"CD_CODE\">A</Col><Col id=\"DS_CODE\">건축</Col></Row><Row><Col id=\"CD_CODE\">C</Col><Col id=\"DS_CODE\">토목</Col></Row></Rows>");
            this.addChild(obj.name, obj);
            
            // UI Components Initialize
            obj = new Div("divData","0","0",null,null,"0","0",null,null,null,null,this);
            obj.set_taborder("0");
            obj.set_cssclass("div_DATA_Bg");
            obj.set_text("");
            this.addChild(obj.name, obj);

            obj = new Static("staTITLE","0","0","100%","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("0");
            obj.set_text("본사부서 추가");
            obj.set_cssclass("sta_TITLE_Bg");
            obj.set_textAlign("left");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staDS_SITE","0","65","112","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("1");
            obj.set_text("생성일");
            obj.set_textAlign("left");
            obj.set_cssclass("sta_WF_tablelabelE");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staDS_SILHENG","0","staDS_SITE:-1","112","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("2");
            obj.set_text("구분/형태");
            obj.set_textAlign("left");
            obj.set_cssclass("sta_WF_tablelabelE");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staTY_APPROVAL","0","123","112","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("3");
            obj.set_text("레벨");
            obj.set_textAlign("left");
            obj.set_cssclass("sta_WF_tablelabelE");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staDT_CONFIRM","0","staTY_APPROVAL:-1","112","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("4");
            obj.set_text("귀속부서");
            obj.set_cssclass("sta_WF_tablelabel");
            obj.set_textAlign("left");
            obj.set_textDecoration("none");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staBg1","staDS_SITE:-1","65","289","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("5");
            obj.set_cssclass("sta_WF_tablebg");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staBg2","staDS_SILHENG:-1","94","289","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("6");
            obj.set_cssclass("sta_WF_tablebg");
            obj.set_text("");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staBg3","staTY_APPROVAL:-1","123","289","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("7");
            obj.set_cssclass("sta_WF_tablebg");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staBg4","staDT_CONFIRM:-1","staBg3:-1","289","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("8");
            obj.set_cssclass("sta_WF_tablebg");
            this.divData.addChild(obj.name, obj);

            obj = new Button("btnOk","32.50%","266","60","20",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("9");
            obj.set_text("확인");
            this.divData.addChild(obj.name, obj);

            obj = new Button("btnCancel","52.50%","266","60","20",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("10");
            obj.set_text("취소");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staBg00","111","36","289","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("12");
            obj.set_cssclass("sta_WF_tablebg");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staDS_SITE00","0","36","112","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("13");
            obj.set_text("상위부서");
            obj.set_textAlign("left");
            obj.set_cssclass("sta_WF_tablelabelE");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staBg01","111","181","289","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("14");
            obj.set_cssclass("sta_WF_tablebg");
            this.divData.addChild(obj.name, obj);

            obj = new Div("cfCD_DEPT_ACNT","116","157","280","20",null,null,null,null,null,null,this.divData.form);
            obj.getSetter("CDTextWidth").set("80");
            obj.set_taborder("15");
            obj.set_url("cmm::cmmCodeFind.xfdl");
            obj.set_text("");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staTY_APPROVAL00","0","181","112","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("16");
            obj.set_text("코드");
            obj.set_textAlign("left");
            obj.set_cssclass("sta_WF_tablelabelE");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staBg02","111","210","289","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("17");
            obj.set_cssclass("sta_WF_tablebg");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staTY_APPROVAL01","0","210","112","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("18");
            obj.set_text("명칭");
            obj.set_textAlign("left");
            obj.set_cssclass("sta_WF_tablelabelE");
            this.divData.addChild(obj.name, obj);

            obj = new Div("cfCD_UPDEPT","116","41","280","20",null,null,null,null,null,null,this.divData.form);
            obj.getSetter("CDTextWidth").set("80");
            obj.set_taborder("11");
            obj.set_url("cmm::cmmCodeFind.xfdl");
            obj.set_text("");
            this.divData.addChild(obj.name, obj);

            obj = new Calendar("calDT_EST","116","70","104","20",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("19");
            obj.set_dateformat("yyyy-MM-dd");
            this.divData.addChild(obj.name, obj);

            obj = new Combo("cboTY_DEPT","116","99","105","20",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("20");
            obj.set_codecolumn("CD_CODE");
            obj.set_datacolumn("DS_CODE");
            obj.set_innerdataset("dsTY_DEPT");
            this.divData.addChild(obj.name, obj);

            obj = new Edit("edtNO_LEVEL","116","128","140","20",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("21");
            this.divData.addChild(obj.name, obj);

            obj = new Edit("edtCD_DEPT","116","186","140","20",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("22");
            this.divData.addChild(obj.name, obj);

            obj = new Edit("edtDS_DEPT","116","215","140","20",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("23");
            this.divData.addChild(obj.name, obj);

            obj = new Combo("cboTY_GUBUN","226","99","105","20",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("24");
            obj.set_codecolumn("CD_CODE");
            obj.set_datacolumn("DS_CODE");
            obj.set_innerdataset("dsTY_GUBUN");
            this.divData.addChild(obj.name, obj);
            // Layout Functions
            //-- Default Layout : this
            obj = new Layout("default","",this._adjust_width,this._adjust_height,this,function(p){});
            this.addLayout(obj.name, obj);
            
            // BindItem Information
            obj = new BindItem("item3","divData.form.cfCD_UPDEPT.form.CDTextBox","value","dsData","CD_UPDEPT");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item2","divData.form.cfCD_DEPT_ACNT.form.CDTextBox","value","dsData","CD_DEPT_ACNT");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item0","divData.form.calDT_EST","value","dsData","DT_EST");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item1","divData.form.cboTY_DEPT","value","dsData","TY_DEPT");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item7","divData.form.edtNO_LEVEL","value","dsData","NO_LEVEL");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item5","divData.form.edtCD_DEPT","value","dsData","CD_DEPT");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item4","divData.form.edtDS_DEPT","value","dsData","DS_DEPT");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item6","divData.form.cboTY_GUBUN","value","dsData","TY_GUBUN");
            this.addChild(obj.name, obj);
            obj.bind();
            
            // TriggerItem Information

        };
        
        this.loadPreloadList = function()
        {
            this._addPreloadList("fdl","cmm::cmmCodeFind.xfdl");
        };
        
        // User Script
        this.registerScript("DAZ_DEPT_HEAD_ADD.xfdl", function() {
        this.objApp = this.gfnGetApplication();

        this.form_onload = function(obj,e)
        {
        	// -- 필수 -------------------//
        	this.gfnFormOnLoad(this);
        	this.gfnFormInfo(this);
        	// ---------------------------//

        	this.fnSetButton();
        	this.fnSetExtendButton();
        	this.fnSetVariable();
        	this.fnSetEvent();
        	this.fnSetParameter();
        	this.fnSetCombo();

        	var today = this.gfnGetDate();
        	this.dsData.setColumn(0, "DT_EST", today);
        	this.divData.form.cboTY_GUBUN.set_index(0);

        	if(!this.gfnIsNull(this.getOwnerFrame().CD_CORP)) {
        		this.dsData.setColumn(0, "CD_CORP", this.getOwnerFrame().CD_CORP);
        		this.dsData.setColumn(0, "CD_UPDEPT", this.getOwnerFrame().CD_UPDEPT);
        		this.cfCD_UPDEPT.form.DSTextBox.set_value(this.getOwnerFrame().DS_UPDEPT);

        		var sNO_LEVEL = this.getOwnerFrame().NO_LEVEL;
        		this.divData.form.edtNO_LEVEL.set_value(nexacro.toNumber(sNO_LEVEL) + 1);
        	}

        	// 차수 비활성화 처리
        	//this.cfNO_NAPCHA.form.CDTextBox.set_readonly(true);

        	//this.fnSelectDept();
        };

        // 콤보 조회
        this.fnSetCombo = function() {

           this.dsCombo = new Dataset();
           this.dsCombo.addColumn("TY_SEL", "string");
           this.dsCombo.addColumn("CD_PREFIX", "string");
           this.dsCombo.addColumn("CD_UPPREFIX", "string");

           this.dsCombo.addRow();
           this.dsCombo.setColumn(0, "TY_SEL", "P");
           this.dsCombo.setColumn(0, "CD_PREFIX", "DA");
           this.dsCombo.setColumn(0, "CD_UPPREFIX", "");

        	var strSvcId    = "combo";
        	var strSvcType  = "select";
        	var inProc		= "_dsProc";
        	var inData      = "combo=dsCombo";
        	var outData     = "dsTY_DEPT=combo0";
        	var strArg      = "";
        	var callBackFnc = "fnCallback";

        	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
        						strSvcType , 	// transaction을 요청할 구분
        						inProc,			// Procedure 정보 Dataset 이름
        						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
        						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
        						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
        						callBackFnc); // 통신방법 정의 [생략가능]
        };

        this.fnSelectDept = function() {
        trace("fnSelectDept>>>");

        	//if (!this.fnSelectValidate()) return false;
        	//this.gfnGridBeforeSelect(this.dxGrid);

        	this.dsSelectDept.clearData();
        	this.dsSelectDept.addRow();

        	this.dsSelectDept.setColumn(0, "CD_CORP", this.dsData.getColumn(0, "CD_CORP"));
        	this.dsSelectDept.setColumn(0, "DT_EST", this.dsData.getColumn(0, "DT_EST"));
        	this.dsSelectDept.setColumn(0, "TY_GUBUN", this.dsData.getColumn(0, "TY_GUBUN"));

        trace(this.dsSelectDept.saveXML());

        	var strSvcId    = "selectDept";
        	var strSvcType  = "select";
        	var inProc		= "_dsProc";
        	var inData      = "selectDept=dsSelectDept";
        	var outData     = "dsDept=selectDept0";
        	var strArg      = "";
        	var callBackFnc = "fnCallback";

        	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
        						strSvcType , 	// transaction을 요청할 구분
        						inProc,			// Procedure 정보 Dataset 이름
        						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
        						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
        						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
        						callBackFnc); // 통신방법 정의 [생략가능]
        }


        /************************************************************************
         * 버튼 설정 : 화면(Tab) 전환시 마다 호출
         * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
         ************************************************************************/
        this.fnSetButton = function() {
        }

        /************************************************************************
         * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
         ************************************************************************/
        this.fnSetExtendButton = function() {
        };

        /************************************************************************
         * 변수 선언
         ************************************************************************/
        this.fnSetVariable = function() {
        	this.cfCD_UPDEPT = this.divData.form.cfCD_UPDEPT;
        	this.calDT_EST = this.divData.form.calDT_EST;
        	this.cboTY_DEPT = this.divData.form.cboTY_DEPT;
        	this.edtNO_LEVEL = this.divData.form.edtNO_LEVEL;
        	this.cfCD_DEPT_ACNT = this.divData.form.cfCD_DEPT_ACNT;
        	this.edtCD_DEPT = this.divData.form.edtCD_DEPT;
        	this.edtDS_DEPT = this.divData.form.edtDS_DEPT;
        };

        /************************************************************************
         * 이벤트 설정
         ************************************************************************/
        this.fnSetEvent = function() {
        	this.cfCD_UPDEPT.CodeFindName = "DAX_CFUPDEPT_CODE";
        	this.cfCD_UPDEPT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
        	this.cfCD_UPDEPT.AfterCDTextChanged = "fnAfterCDTextChanged";

        	this.cfCD_DEPT_ACNT.CodeFindName = "DHX_CFACNTUNIT";
        	this.cfCD_DEPT_ACNT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
        	this.cfCD_DEPT_ACNT.AfterCDTextChanged = "fnAfterCDTextChanged";
        };

        /************************************************************************
         * 파라미터 설정
         ************************************************************************/
        this.fnSetParameter = function() {
        	this.dsSave = new Dataset();
        	this.dsSave.addColumn("TY_SAVE", "string");
        	this.dsSave.addColumn("TY_PLAN", "string");
        	this.dsSave.addColumn("TY_GUBUN", "string");
        	this.dsSave.addColumn("YR_BASE", "string");
        	this.dsSave.addColumn("YM_BASE", "string");
        	this.dsSave.addColumn("CD_CORP", "string");
        	this.dsSave.addColumn("TY_TARGET", "string");
        	this.dsSave.addColumn("CD_DEPT", "string");
        	this.dsSave.addColumn("ID_SABUN", "string");
        	this.dsSave.addColumn("ID_USER", "string");
        	this.dsSave.addColumn("IP_ADDR", "string");
        	this.dsSave.addColumn("GR_SEARCH", "string");
        	this.dsSave.addColumn("GR_CORP", "string");

        	this.dsSelectDept = new Dataset();
        	this.dsSelectDept.addColumn("CD_CORP", "string");
        	this.dsSelectDept.addColumn("DT_EST", "string");
        	this.dsSelectDept.addColumn("TY_GUBUN", "string");
        }

        /************************************************************************
         * 컨트롤 이벤트
         ************************************************************************/

        /************************************************************************
         * Validate
         ************************************************************************/

        /************************************************************************
         * 콜백 이벤트
         ************************************************************************/
        /*
         *	콜백 처리
         */
        this.fnCallback = function(svcID, errorCode, errorMsg)
        {
        	if(svcID == "combo") {
        		this.divData.form.cboTY_DEPT.set_index(0);	// 본사 선택
        	}
        	else if(svcID == "selectDept"){
        		if(this.dsDept.rowcount >0){
        			var sDept = this.gfnNvl(this.dsDept.getColumn(0, "CD_DEPT"),"");
        			this.dsData.setColumn(0, "CD_DEPT", sDept);
        		}
        	}
        }

        /************************************************************************
         * 코드파인드 이벤트
         ************************************************************************/
        this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {

        	if(id == "cfCD_UPDEPT") {
        		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
        		dsUserParam.setColumn(nrow, "CD_DEPT", "%");
        		dsUserParam.setColumn(nrow, "CD_CORP", this.dsData.getColumn(0, "CD_CORP"));
        	}
        	if(id == "cfCD_DEPT_ACNT") {
         		dsUserParam.setColumn(nrow, "YN_SLIPACCEPT"	, "Y");						//전표발행여부
        		dsUserParam.setColumn(nrow, "CD_CORP"		, this.dsData.getColumn(0, "CD_CORP"));					//법인코드
        		dsUserParam.setColumn(nrow, "YN_USE"		, "Y");						//사용여부
        		dsUserParam.setColumn(nrow, "GR_DEPT_ACNT"	, "%");						//현장/본사여부
        		dsUserParam.setColumn(nrow, "ID_USER"	, this.AuthClient.ID_USER);
        		dsUserParam.setColumn(nrow, "GR_SEARCH"	, this.FormInfo.GR_SEARCH);
        		dsUserParam.setColumn(nrow, "CD_DEPT"	, this.AuthClient.CD_DEPT);
        	}

        	return true;
        };


        this.fnAfterCDTextChanged = function(id, codeFindData) {
        	var arr = codeFindData;

        	if(id == "cfCD_UPDEPT"){
        	}else if(id == "cfCD_DEPT_ACNT" ){
        	}
        };
        /************************************************************************
         * 그리드 이벤트
         ************************************************************************/

        /************************************************************************
         * 기타 이벤트
         ************************************************************************/
        // 확인 버튼 클릭
        this.divData_btnOk_onclick = function(obj,e)
        {
        	if (!this.fnSaveValidate()) return false;

        	// 확인
        	var json = {};

        	json.CD_UPDEPT = this.dsData.getColumn(0, "CD_UPDEPT");
        	json.DS_UPDEPT = this.cfCD_UPDEPT.form.DSTextBox.value;
        	json.DT_EST = this.dsData.getColumn(0, "DT_EST");
        	json.TY_DEPT = this.dsData.getColumn(0, "TY_DEPT");
        	json.NO_LEVEL = this.dsData.getColumn(0, "NO_LEVEL");
        	json.CD_DEPT_ACNT = this.dsData.getColumn(0, "CD_DEPT_ACNT");
        	json.DS_DEPT_ACNT = this.cfCD_DEPT_ACNT.form.DSTextBox.value;
        	json.CD_DEPT = this.dsData.getColumn(0, "CD_DEPT");
        	json.DS_DEPT = this.dsData.getColumn(0, "DS_DEPT");
        	json.TY_GUBUN = this.dsData.getColumn(0, "TY_GUBUN");

        	this.getParentContext().close(JSON.stringify(json));
        };

        // 취소 버튼 클릭
        this.divData_btnCancel_onclick = function(obj,e)
        {
        	// this.close()가 작동하지 않았고,
        	// 부모의 callback 함수로 데이터를 넘겨주기 위해 작성되었습니다.
        	this.getParentContext().close(false);
        };


        this.fnSaveValidate = function() {

        	if (this.gfnIsNull(this.dsData.getColumn(0,"CD_UPDEPT"))) {
        		this.fnValidCallback = function() {
        			this.cfCD_UPDEPT.form.CDTextBox.setFocus();
        		}
        		this.gfnAlert("상위부서는 반드시 입력 하셔야 합니다.", "fnValidCallback");
        		return false;
        	}else if (this.gfnIsNull(this.dsData.getColumn(0,"DT_EST"))) {
        		this.fnValidCallback = function() {
        			this.calDT_EST.setFocus();
        		}
        		this.gfnAlert("생성일은 반드시 입력 하셔야 합니다.", "fnValidCallback");
        		return false;
        	}else if (this.gfnIsNull(this.dsData.getColumn(0,"NO_LEVEL"))) {
        		this.fnValidCallback = function() {
        			this.edtNO_LEVEL.setFocus();
        		}
        		this.gfnAlert("레벨은 반드시 입력 하셔야 합니다.", "fnValidCallback");
        		return false;
        //	}
        // 	else if (this.gfnIsNull(this.dsData.getColumn(0,"CD_DEPT_ACNT"))) {
        // 		this.fnValidCallback = function() {
        // 			this.cfCD_DEPT_ACNT.form.CDTextBox.setFocus();
        // 		}
        // 		this.gfnAlert("귀속부서는 반드시 입력 하셔야 합니다.", "fnValidCallback");
        // 		return false;
        	}else if (this.gfnIsNull(this.dsData.getColumn(0,"CD_DEPT"))) {
        		this.fnValidCallback = function() {
        			this.edtCD_DEPT.setFocus();
        		}
        		this.gfnAlert("코드는 반드시 입력 하셔야 합니다.", "fnValidCallback");
        		return false;
        	}else if (this.gfnIsNull(this.dsData.getColumn(0,"DS_DEPT"))) {
        		this.fnValidCallback = function() {
        			this.edtDS_DEPT.setFocus();
        		}
        		this.gfnAlert("명칭은 반드시 입력 하셔야 합니다.", "fnValidCallback");
        		return false;
        	}

        	return true;
        }



        this.dsData_onvaluechanged = function(obj,e){
        	if(e.newvalue != e.oldvalue){
        		if(e.columnid == "TY_GUBUN"){
        			this.fnSelectDept();
        		}
        	}
        };

        });
        
        // Regist UI Components Event
        this.on_initEvent = function()
        {
            this.addEventHandler("onload",this.form_onload,this);
            this.divData.form.staDS_SITE.addEventHandler("onclick",this.divData_staDS_SITE_onclick,this);
            this.divData.form.btnOk.addEventHandler("onclick",this.divData_btnOk_onclick,this);
            this.divData.form.btnCancel.addEventHandler("onclick",this.divData_btnCancel_onclick,this);
            this.divData.form.staDS_SITE00.addEventHandler("onclick",this.divData_staDS_SITE_onclick,this);
            this.dsData.addEventHandler("onvaluechanged",this.dsData_onvaluechanged,this);
        };
        this.loadIncludeScript("DAZ_DEPT_HEAD_ADD.xfdl");
        this.loadPreloadList();
        
        // Remove Reference
        obj = null;
    };
}
)();
