<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="1280" height="720" titletext="급여특별항목관리" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0" top="0" height="46.0" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <!-- 대상년월 -->
              <Static id="staYM_BASE" taborder="0" text="대상년월" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYM_BASE" taborder="1" left="staYM_BASE:0.0" top="10.0" width="90" height="24.0" url="cmm::cmmCalMM.xfdl"/>
              <!-- 입력구분 -->
              <Static id="staTY_CODE" taborder="3" text="입력구분" left="ctclYM_BASE:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Radio id="rdoTY_CODE" taborder="4" left="staTY_CODE:0.0" top="10.0" height="24.0" innerdataset="dsTY_CODE" codecolumn="CODE" datacolumn="VALUE" direction="vertical" fittocontents="width" width="150" index="0" value="A"/>
              <!-- 항목 -->
              <Static id="staCD_CODE" taborder="2" text="항목" left="rdoTY_CODE:0.0" top="10.0" width="66" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_CODE" CDTextWidth="50" taborder="5" left="staCD_CODE:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DAX_CFSALARY_CODE"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DAUPR_SALARYMASTER_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DAUPR_SALARYMASTER_SAVE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="YM_BASE" type="STRING" size="256"/>
          <Column id="TY_CODE" type="STRING" size="256"/>
          <Column id="CD_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CORP"/>
            <Col id="YM_BASE"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_CODE">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">A</Col>
            <Col id="VALUE">소득항목</Col>
          </Row>
          <Row>
            <Col id="CODE">S</Col>
            <Col id="VALUE">공제항목</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsVacChkResult" cancolumnchange="dsList_cancolumnchange"/>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();	
	
	
	//적용년도 셋팅
	var today = this.gfnGetDate();
	this.divSearch.form.ctclYM_BASE.form.TextBox.set_value(today.substring(0,6));
	this.rdoTY_CODE.set_index(0);
	
	//법인 셋팅
	this.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);
	this.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP);

};   

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;
	this.ctclYM_BASE = this.divSearch.form.ctclYM_BASE;
	this.rdoTY_CODE = this.divSearch.form.rdoTY_CODE;
	this.ccfCD_CODE = this.divSearch.form.ccfCD_CODE;

	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.ccfCD_CODE.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_CODE.AfterCDTextChanged = "fnAfterCDTextChanged";	
	
	this.gfnGridInit(this.dxGrid, this.dsList, "DA", "DAU_SALARYMASTER");
	
	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
	this.dxGrid.AfterCDTextChanged = "fnGrid_AfterCDTextChanged";
	this.dxGrid.AfterEdit = "fnGrid_AfterEdit";	// 셀 변경 후 이벤트
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("YM_BASE", "string");
	this.dsSelect.addColumn("TY_CODE", "string");
	this.dsSelect.addColumn("CD_CODE", "string");
	this.dsSelect.addColumn("GR_SEARCH", "string");
	this.dsSelect.addColumn("ID_USER", "string");
	this.dsSelect.addColumn("TY_AUTH", "string");
	
	this.dsSave = new Dataset();
	this.dsSave.addColumn("TY_SAVE", "string");
	this.dsSave.addColumn("NO_SEQ", "int");
	this.dsSave.addColumn("CD_CORP", "string");
	this.dsSave.addColumn("YM_BASE", "string");
	this.dsSave.addColumn("CD_POSITION", "string");
	this.dsSave.addColumn("TY_DEPT", "string");
	this.dsSave.addColumn("TY_CODE", "string");
	this.dsSave.addColumn("CD_CODE", "string");
	this.dsSave.addColumn("AM_INCOME", "bigdecimal");
	this.dsSave.addColumn("DS_REMARK", "string");
	this.dsSave.addColumn("YN_DAY", "string");
	this.dsSave.addColumn("TY_DAY", "string");
	this.dsSave.addColumn("YN_USE", "string");
	this.dsSave.addColumn("GR_SEARCH", "string");
	this.dsSave.addColumn("GR_CORP", "string");
	this.dsSave.addColumn("GR_DEPT", "string");
	this.dsSave.addColumn("ID_USER", "string");
	
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if(!this.fnSelectValid()) return;
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "YM_BASE", this.gfnNvl(this.dsSearch.getColumn(0, "YM_BASE"), ""));
	this.dsSelect.setColumn(0, "TY_CODE", this.gfnNvl(this.dsSearch.getColumn(0, "TY_CODE"), ""));
	this.dsSelect.setColumn(0, "CD_CODE", this.gfnNvl(this.dsSearch.getColumn(0, "CD_CODE"), ""));
	this.dsSelect.setColumn(0, "GR_SEARCH", this.FormInfo.GR_SEARCH);
	this.dsSelect.setColumn(0, "ID_USER", this.AuthClient.ID_USER);
	this.dsSelect.setColumn(0, "TY_AUTH", this.FormInfo.TY_AUTH);	
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	var nrow = this.gfnGridAdd(this.dxGrid);
	this.dsList.setColumn(nrow, "YN_USE", "Y");
	this.dsList.setColumn(nrow, "YM_BASE", this.divSearch.form.ctclYM_BASE.form.TextBox.value);
	this.dsList.setColumn(nrow, "TY_CODE", this.divSearch.form.rdoTY_CODE.value);
}
/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	// 그리드 필수항목 체크
	if (!this.gfnGridValidate(this.dxGrid)) return;	
	
	this.dxGrid.updateToDataset();

	this.dsSave.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
			case "U":
			case "D":
				var nrow = this.dsSave.addRow();
				this.dsSave.setColumn(nrow, "TY_SAVE", flag);
				this.dsSave.setColumn(nrow, "NO_SEQ", (flag == "I" ? 0 : this.dsList.getColumn(i, "NO_SEQ")));
				this.dsSave.setColumn(nrow, "CD_CORP", this.AuthClient.CD_CORP);
				this.dsSave.setColumn(nrow, "YM_BASE", this.gfnNvl(this.dsList.getColumn(i, "YM_BASE"), ""));
				this.dsSave.setColumn(nrow, "CD_POSITION", this.gfnNvl(this.dsList.getColumn(i, "CD_POSITION"), ""));
				this.dsSave.setColumn(nrow, "TY_DEPT", this.gfnNvl(this.dsList.getColumn(i, "TY_DEPT"), ""));
				this.dsSave.setColumn(nrow, "TY_CODE", this.gfnNvl(this.dsList.getColumn(i, "TY_CODE"), ""));
				this.dsSave.setColumn(nrow, "CD_CODE", this.gfnNvl(this.dsList.getColumn(i, "CD_CODE"), ""));
				this.dsSave.setColumn(nrow, "AM_INCOME", this.gfnNvl(this.dsList.getColumn(i, "AM_INCOME"), 0));
				this.dsSave.setColumn(nrow, "DS_REMARK", this.gfnNvl(this.dsList.getColumn(i, "DS_REMARK"), ""));
				this.dsSave.setColumn(nrow, "YN_DAY", this.gfnNvl(this.dsList.getColumn(i, "YN_DAY"), ""));
				this.dsSave.setColumn(nrow, "TY_DAY", this.gfnNvl(this.dsList.getColumn(i, "TY_DAY"), ""));
				this.dsSave.setColumn(nrow, "YN_USE", this.gfnNvl(this.dsList.getColumn(i, "YN_USE"), ""));
				this.dsSave.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
				this.dsSave.setColumn(nrow, "GR_CORP", this.AuthClient.CD_CORP);
				this.dsSave.setColumn(nrow, "GR_DEPT", this.AuthClient.CD_DEPT);
				this.dsSave.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
				break;
		}
	}
		
	if (this.dsSave.rowcount == 0) return;
	
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}


/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
this.fnSelectValid = function() {
	if (this.gfnIsNull(this.ctclYM_BASE.form.TextBox.value)) {
		this.fnValidCallback = function() {
			this.ctclYM_BASE.form.TextBox.setFocus();
		}
		this.gfnAlert("대상년월을 입력하세요.");
		return false;
	}
	
	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if(id == "ccfCD_CORP") {
		dsUserParam.setColumn(nrow, "CD_CORP", this.AuthClient.CD_CORP);
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
	}
	else if(id == "ccfCD_CODE"){ //항목
		dsUserParam.setColumn(nrow, "CD_GB", this.rdoTY_CODE.value);
	}		
	return true;
}

this.fnAfterCDTextChanged = function(id) {
	
}

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 this.fnGrid_BeforeUserDataSetParam = function(id, dsUserParam, nrow){
	if(id == "CD_POSITION"){ //직위
		dsUserParam.setColumn(nrow, "CD_PREFIX", "ED");
	}
	else if(id == "DAX_CFSALARY_CODE"){ //수당/공제 항목코드
		//|A:소득|S:공제
		//수당/공제 항목코드 DAX_CFSALARY_CODE 소득(A) 일때 >> CD_GB ='A' 공제(S) 일때  >> CD_GB ='S'
		var sTY_CODE = this.dsList.getColumn(this.dsList.rowposition, "TY_CODE");
		
		if(this.gfnIsNull(sTY_CODE)) {
			this.gfnAlert("소득/공제 구분을 먼저 입력하세요.");
			return false;
		}
		dsUserParam.setColumn(nrow, "CD_GB", sTY_CODE); //소득구분
	}
		
	return true;
};

this.fnGrid_AfterCDTextChanged = function(id, codeFindData) {
}
this.fnGrid_AfterEdit = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo) {
	if(e.columnid == "TY_CODE") {
		if(e.oldvalue != e.newvalue) {
			this.dsList.setColumn(this.dsList.rowposition, "CD_CODE" ,"");
			this.dsList.setColumn(this.dsList.rowposition, "DS_CODE" ,"");
			this.dsList.setColumn(this.dsList.rowposition, "AM_INCOME" ,0);
		}
	}
}

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo){
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);
		
		if(e.columnid == "TY_CODE"){
			this.ccfCD_CODE.form.fnCodeFindClear();
		}
	}
};

]]></Script>
    <Bind>
      <BindItem id="item1" compid="divSearch.form.ctclYM_BASE.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_BASE"/>
      <BindItem id="item4" compid="divSearch.form.rdoTY_CODE" propid="value" datasetid="dsSearch" columnid="TY_CODE"/>
      <BindItem id="item2" compid="divSearch.form.ccfCD_CODE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CODE"/>
      <BindItem id="item0" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
    </Bind>
  </Form>
</FDL>
