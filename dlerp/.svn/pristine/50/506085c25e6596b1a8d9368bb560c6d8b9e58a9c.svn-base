(function()
{
    return function()
    {
        if (!this._is_form)
            return;
        
        var obj = null;
        
        this.on_create = function()
        {
            this.set_name("form");
            this.set_titletext("학자금신청등록");
            this.getSetter("maxwidth").set("670");
            this.getSetter("maxheight").set("485");
            if (Form == this.constructor)
            {
                this._setFormPosition(625,410);
            }
            
            // Object(Dataset, ExcelExportObject) Initialize

            
            // UI Components Initialize
            obj = new Div("divSearch","0","0","625","370",null,null,null,null,null,null,this);
            obj.set_taborder("1");
            obj.set_text("");
            this.addChild(obj.name, obj);

            obj = new Static("sta_TITLE_T","0","5","90","18",null,null,null,null,null,null,this.divSearch.form);
            obj.set_taborder("0");
            obj.set_text("출장규정");
            obj.set_cssclass("sta_TITLE_Bg");
            this.divSearch.addChild(obj.name, obj);

            obj = new Static("staBackground","0","33","625","335",null,null,null,null,null,null,this.divSearch.form);
            obj.set_taborder("1");
            obj.set_cssclass("sta_WF_tablebg");
            obj.set_text("");
            this.divSearch.addChild(obj.name, obj);

            obj = new Static("sta01","15","45","600","29",null,null,null,null,null,null,this.divSearch.form);
            obj.set_taborder("2");
            obj.set_text("- 환율 : 출장계획서 작성일 전일(근무일) 기준 최초고시 현금 살 때 기준");
            obj.set_cssclass("");
            obj.set_verticalAlign("middle");
            this.divSearch.addChild(obj.name, obj);

            obj = new Static("sta02","15","sta01:-5","600","29",null,null,null,null,null,null,this.divSearch.form);
            obj.set_taborder("3");
            obj.set_text("- 입출국항공료 : 해외출장의 경우, 항공일정 메일에 알려드린 항공운임을 계획서 기준환율로");
            obj.set_cssclass("");
            obj.set_verticalAlign("middle");
            this.divSearch.addChild(obj.name, obj);

            obj = new Static("sta03","15","sta02:-10","600","29",null,null,null,null,null,null,this.divSearch.form);
            obj.set_taborder("4");
            obj.set_text("  환산하여 USD로 입력");
            obj.set_cssclass("");
            obj.set_verticalAlign("middle");
            this.divSearch.addChild(obj.name, obj);

            obj = new Static("sta04","15","sta03:-5","600","29",null,null,null,null,null,null,this.divSearch.form);
            obj.set_taborder("5");
            obj.set_text("- 교통비 : 항공료 외 국내(공항이동 등) 및 현지 교통비 입력, 렌터카 이용 계획시 결재의견에 사유 기재");
            obj.set_cssclass("");
            obj.set_verticalAlign("middle");
            this.divSearch.addChild(obj.name, obj);

            obj = new Static("sta05","15","sta04:-5","600","29",null,null,null,null,null,null,this.divSearch.form);
            obj.set_taborder("6");
            obj.set_text("- 숙박비 : 실 숙박야수 기재(3박 5일 출장의 경우, 3일), 현장에서 숙비지원 부담일 경우 \"0\"입력");
            obj.set_cssclass("");
            obj.set_verticalAlign("middle");
            this.divSearch.addChild(obj.name, obj);

            obj = new Static("sta06","15","sta05:-10","600","29",null,null,null,null,null,null,this.divSearch.form);
            obj.set_taborder("7");
            obj.set_text("  Booking.com 등 숙박예약 사이트 통해 최저가 예약");
            obj.set_cssclass("");
            obj.set_verticalAlign("middle");
            obj.set_color("red");
            this.divSearch.addChild(obj.name, obj);

            obj = new Static("sta07","15","sta06:-5","600","29",null,null,null,null,null,null,this.divSearch.form);
            obj.set_taborder("8");
            obj.set_text("- 식비 : 출장기간 내 발생 가능한 예상금액 입력, 현장에서 식비지원 부담일 경우 출/도착일 식/음료비 등 입력");
            obj.set_cssclass("");
            obj.set_verticalAlign("middle");
            this.divSearch.addChild(obj.name, obj);

            obj = new Static("sta08","15","sta07:-5","600","29",null,null,null,null,null,null,this.divSearch.form);
            obj.set_taborder("9");
            obj.set_text("- 잡비 : 3박 5일 출장의 경우, 5일X단가(부장이하 40$)");
            obj.set_cssclass("");
            obj.set_verticalAlign("middle");
            this.divSearch.addChild(obj.name, obj);

            obj = new Static("sta09","15","sta08:-5","600","29",null,null,null,null,null,null,this.divSearch.form);
            obj.set_taborder("10");
            obj.set_text("- 가불금신청 : 출장비를 사전 신청하여 수령을 원할 경우");
            obj.set_cssclass("");
            obj.set_verticalAlign("middle");
            this.divSearch.addChild(obj.name, obj);

            obj = new Static("sta10","15","sta09:-10","600","29",null,null,null,null,null,null,this.divSearch.form);
            obj.set_taborder("11");
            obj.set_text("  → 소요예상비용 입력금액 기준 필요한 금액만큼 입력신청");
            obj.set_cssclass("");
            obj.set_verticalAlign("middle");
            this.divSearch.addChild(obj.name, obj);

            obj = new Static("sta11","15","sta10:-10","600","29",null,null,null,null,null,null,this.divSearch.form);
            obj.set_taborder("12");
            obj.set_text("  → 출장완료 후 보고서 정산시 신청금은 가불금으로 표시");
            obj.set_cssclass("");
            obj.set_verticalAlign("middle");
            this.divSearch.addChild(obj.name, obj);

            obj = new Static("sta12","15","sta11:-10","600","29",null,null,null,null,null,null,this.divSearch.form);
            obj.set_taborder("13");
            obj.set_text("  → 미사용 출장비는 보고서 정산 시 회사에 반납 입금하게 되는 번거러움이 발생할 수 있으니");
            obj.set_cssclass("");
            obj.set_verticalAlign("middle");
            this.divSearch.addChild(obj.name, obj);

            obj = new Static("sta13","15","sta12:-10","600","29",null,null,null,null,null,null,this.divSearch.form);
            obj.set_taborder("14");
            obj.set_text("     필요한 만큼만 신청");
            obj.set_cssclass("");
            obj.set_verticalAlign("middle");
            this.divSearch.addChild(obj.name, obj);

            obj = new Static("sta14","16","sta13:-10","600","29",null,null,null,null,null,null,this.divSearch.form);
            obj.set_taborder("15");
            obj.set_text("  → 가불금 입금은 출장계획서 결재완 후 4일후 입금됨");
            obj.set_cssclass("");
            obj.set_verticalAlign("middle");
            this.divSearch.addChild(obj.name, obj);

            obj = new Div("divData","0","divSearch:10","625","27",null,null,null,null,null,null,this);
            obj.set_taborder("3");
            obj.set_text("");
            this.addChild(obj.name, obj);

            obj = new Div("divBtns","247","0","130","27",null,null,null,null,null,null,this.divData.form);
            obj.set_text("");
            this.divData.addChild(obj.name, obj);

            obj = new Button("btnOK","30","0","60","27",null,null,null,null,null,null,this.divData.form.divBtns.form);
            obj.set_taborder("1");
            obj.set_text("닫기");
            this.divData.form.divBtns.addChild(obj.name, obj);
            // Layout Functions
            //-- Default Layout : this
            obj = new Layout("default","",this._adjust_width,this._adjust_height,this,function(p){});
            this.addLayout(obj.name, obj);
            
            // BindItem Information

            
            // TriggerItem Information

        };
        
        this.loadPreloadList = function()
        {

        };
        
        // User Script
        this.registerScript("DAB_BZTP_RULE_DLG.xfdl", function() {
        this.objApp = this.gfnGetApplication();

        this.form_onload = function(obj,e) {
        	// -- 필수 -------------------//
        	this.gfnFormOnLoad(this);
        	this.gfnFormInfo(this);
        	// ---------------------------//

        	this.fnSetButton();
        	this.fnSetExtendButton();
        	this.fnSetVariable();
        	this.fnSetEvent();
        	this.fnSetParameter();
        	this.fnSetCombo();
        	this.fnInit();
        }

        /************************************************************************
         * 버튼 설정 : 화면(Tab) 전환시 마다 호출
         * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
         ************************************************************************/
        this.fnSetButton = function() {

        }

        /************************************************************************
         * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
         ************************************************************************/
        this.fnSetExtendButton = function() {

        }

        /************************************************************************
         * 변수 선언
         ************************************************************************/
        this.fnSetVariable = function() {

        }

        /************************************************************************
         * 이벤트 설정
         ************************************************************************/
        this.fnSetEvent = function() {

        }

        /************************************************************************
         * 파라미터 설정
         ************************************************************************/
        this.fnSetParameter = function() {

        }

        /************************************************************************
         * 콤보 데이터 조회 및 설정
         ************************************************************************/
        this.fnSetCombo = function() {

        }

        /************************************************************************
         * 화면 및 검색영역 초기화
         ************************************************************************/
        this.fnInit = function() {

        }

        /************************************************************************
         * 컨트롤 이벤트
         ************************************************************************/
        /*
         * 조회 버튼
         */
        this.fnSelect = function() {

        }

        /*
         * 추가 버튼
         */
        this.fnAdd = function() {

        }

        /*
         * 삭제 버튼
         */
        this.fnDel = function() {

        }

        /*
         * 저장 버튼
         */
        this.fnSave = function() {

        }

        /*
         * 엑셀 버튼
         */
        this.fnExcel = function() {

        }

        /*
         * 출력 버튼
         */
        this.fnPrint = function() {

        }

        /************************************************************************
         * Validate
         ************************************************************************/
        this.fnSelectValid = function() {
        	return true;
        }

        /************************************************************************
         * 확장버튼 이벤트
         ************************************************************************/
        // 확인버튼
        this.btnOK_onclick = function(obj, e) {
        	this.getParentContext().close(false);
        }

        /************************************************************************
         * 콜백 이벤트
         ************************************************************************/
        /*
         * 기본 콜백
         */
        this.fnCallback = function(svcID, errorCode, errorMsg) {
        	if (errorCode != 0) {
        		this.gfnAlert(errorMsg);
        		return;
        	}

        	if (svcID == "select") {

        	}
        }

        /************************************************************************
         * 코드파인드 이벤트
         ************************************************************************/
        this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
        	return true;
        }

        this.fnAfterCDTextChanged = function(id, codeFindData) {

        }

        /************************************************************************
         * 그리드 이벤트
         ************************************************************************/
        this.fnGridBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
        	return true;
        }

        this.fnGridAfterCDTextChanged = function(id, codeFindData) {

        }

        this.fnGridAfterEdit = function(obj,e) {

        }

        /************************************************************************
         * 기타 이벤트
         ************************************************************************/

        /************************************************************************
         * 기타 함수
         ************************************************************************/
        });
        
        // Regist UI Components Event
        this.on_initEvent = function()
        {
            this.addEventHandler("onload",this.form_onload,this);
            this.divSearch.form.sta01.addEventHandler("onclick",this.divSearch_sta_onclick,this);
            this.divSearch.form.sta02.addEventHandler("onclick",this.divSearch_sta_onclick,this);
            this.divSearch.form.sta03.addEventHandler("onclick",this.divSearch_sta_onclick,this);
            this.divSearch.form.sta04.addEventHandler("onclick",this.divSearch_sta_onclick,this);
            this.divSearch.form.sta05.addEventHandler("onclick",this.divSearch_sta_onclick,this);
            this.divSearch.form.sta06.addEventHandler("onclick",this.divSearch_sta_onclick,this);
            this.divSearch.form.sta07.addEventHandler("onclick",this.divSearch_sta_onclick,this);
            this.divSearch.form.sta08.addEventHandler("onclick",this.divSearch_sta_onclick,this);
            this.divSearch.form.sta09.addEventHandler("onclick",this.divSearch_sta_onclick,this);
            this.divSearch.form.sta10.addEventHandler("onclick",this.divSearch_sta_onclick,this);
            this.divSearch.form.sta11.addEventHandler("onclick",this.divSearch_sta_onclick,this);
            this.divSearch.form.sta12.addEventHandler("onclick",this.divSearch_sta_onclick,this);
            this.divSearch.form.sta13.addEventHandler("onclick",this.divSearch_sta_onclick,this);
            this.divSearch.form.sta14.addEventHandler("onclick",this.divSearch_sta_onclick,this);
            this.divData.form.divBtns.form.btnOK.addEventHandler("onclick",this.btnOK_onclick,this);
        };
        this.loadIncludeScript("DAB_BZTP_RULE_DLG.xfdl");
        this.loadPreloadList();
        
        // Remove Reference
        obj = null;
    };
}
)();
