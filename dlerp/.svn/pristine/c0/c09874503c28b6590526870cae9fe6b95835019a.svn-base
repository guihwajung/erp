(function()
{
    return function()
    {
        if (!this._is_form)
            return;
        
        var obj = null;
        
        this.on_create = function()
        {
            this.set_name("DAC_MGTVACATION");
            this.set_titletext("근태관리(인사)");
            if (Form == this.constructor)
            {
                this._setFormPosition(1400,720);
            }
            
            // Object(Dataset, ExcelExportObject) Initialize
            obj = new Dataset("dsTable", this);
            obj._setContents("");
            this.addChild(obj.name, obj);


            obj = new Dataset("dsList", this);
            obj._setContents("");
            this.addChild(obj.name, obj);


            obj = new Dataset("_dsProc", this);
            obj._setContents("<ColumnInfo><Column id=\"TARGET\" type=\"STRING\" size=\"256\"/><Column id=\"SP\" type=\"STRING\" size=\"256\"/></ColumnInfo><Rows><Row><Col id=\"TARGET\">select</Col><Col id=\"SP\">DACPR_YEARLYVACATION_SELECT</Col></Row><Row><Col id=\"TARGET\">update</Col><Col id=\"SP\">DACPR_YEARLYVACATION_SAVE</Col></Row><Row><Col id=\"TARGET\">delete</Col><Col id=\"SP\">DACPR_YEARLYVACATION_DELETE</Col></Row></Rows>");
            this.addChild(obj.name, obj);


            obj = new Dataset("dsTY_RETIRE", this);
            obj._setContents("<ColumnInfo><Column id=\"CODE\" type=\"STRING\" size=\"256\"/><Column id=\"VALUE\" type=\"STRING\" size=\"256\"/></ColumnInfo><Rows><Row><Col id=\"CODE\"/><Col id=\"VALUE\">전체</Col></Row><Row><Col id=\"CODE\">01</Col><Col id=\"VALUE\">재직자</Col></Row><Row><Col id=\"CODE\">02</Col><Col id=\"VALUE\">휴직자</Col></Row><Row><Col id=\"CODE\">04</Col><Col id=\"VALUE\">퇴직자</Col></Row></Rows>");
            this.addChild(obj.name, obj);


            obj = new Dataset("dsSearch", this);
            obj._setContents("<ColumnInfo><Column id=\"YR_BASE\" type=\"STRING\" size=\"256\"/><Column id=\"CD_CORP\" type=\"STRING\" size=\"256\"/><Column id=\"DS_CORP\" type=\"STRING\" size=\"256\"/><Column id=\"ID_SABUN\" type=\"STRING\" size=\"256\"/><Column id=\"DS_HNAME\" type=\"STRING\" size=\"256\"/><Column id=\"ID_PERSON\" type=\"STRING\" size=\"256\"/><Column id=\"TY_RETIRE\" type=\"STRING\" size=\"256\"/><Column id=\"CD_DEPT\" type=\"STRING\" size=\"256\"/><Column id=\"DS_DEPT\" type=\"STRING\" size=\"256\"/></ColumnInfo><Rows><Row><Col id=\"YR_BASE\"/><Col id=\"ID_SABUN\"/><Col id=\"ID_PERSON\"/><Col id=\"TY_RETIRE\"/><Col id=\"CD_CORP\"/><Col id=\"CD_DEPT\"/></Row></Rows>");
            this.addChild(obj.name, obj);
            
            // UI Components Initialize
            obj = new Div("divSearch","0","0",null,"78","0",null,null,null,null,null,this);
            obj.set_cssclass("div_SEARCH_Bg");
            obj.set_formscrolltype("none");
            obj.set_text("");
            this.addChild(obj.name, obj);

            obj = new Static("staYR_BASE","0","10.0","66","24.0",null,null,null,null,null,null,this.divSearch.form);
            obj.set_text("년도");
            obj.set_taborder("0");
            obj.set_cssclass("sta_WF_SchLabelE");
            this.divSearch.addChild(obj.name, obj);

            obj = new Div("ctclYR_BASE","staYR_BASE:0.0","10.0","60","24.0",null,null,null,null,null,null,this.divSearch.form);
            obj.set_taborder("1");
            obj.set_url("cmm::cmmCalYY.xfdl");
            obj.set_enableevent("true");
            obj.set_text("2019");
            this.divSearch.addChild(obj.name, obj);

            obj = new Static("staCD_CORP","ctclYR_BASE:20","10.0","66","24.0",null,null,null,null,null,null,this.divSearch.form);
            obj.set_taborder("2");
            obj.set_text("법인");
            obj.set_cssclass("sta_WF_SchLabelE");
            this.divSearch.addChild(obj.name, obj);

            obj = new Div("ccfCD_CORP","staCD_CORP:0.0","10.0","200","24.0",null,null,null,null,null,null,this.divSearch.form);
            obj.getSetter("CodeFindName").set("DAX_CFCORP_CODEFIND");
            obj.getSetter("CDTextWidth").set("50");
            obj.set_taborder("3");
            obj.set_url("cmm::cmmCodeFind.xfdl");
            obj.set_text("");
            this.divSearch.addChild(obj.name, obj);

            obj = new Static("staTY_RETIRE","0","staYR_BASE:10.0","66","24.0",null,null,null,null,null,null,this.divSearch.form);
            obj.set_taborder("4");
            obj.set_text("구분");
            obj.set_cssclass("sta_WF_SchLabel");
            this.divSearch.addChild(obj.name, obj);

            obj = new Combo("ccfTY_RETIRE","staTY_RETIRE:0.0","ctclYR_BASE:10.0","70","24.0",null,null,null,null,null,null,this.divSearch.form);
            obj.set_taborder("5");
            obj.set_innerdataset("dsTY_RETIRE");
            obj.set_codecolumn("CODE");
            obj.set_datacolumn("VALUE");
            obj.set_value("");
            obj.set_index("1");
            this.divSearch.addChild(obj.name, obj);

            obj = new Static("staSABUN","ccfTY_RETIRE:10.0","staYR_BASE:10.0","66","24.0",null,null,null,null,null,null,this.divSearch.form);
            obj.set_text("성명");
            obj.set_taborder("6");
            obj.set_cssclass("sta_WF_SchLabel");
            this.divSearch.addChild(obj.name, obj);

            obj = new Div("ccfID_SABUN","staSABUN:0.0","staYR_BASE:10.0","200","24.0",null,null,null,null,null,null,this.divSearch.form);
            obj.getSetter("CodeFindName").set("DAX_CFBASEINFO_ALL");
            obj.getSetter("CDTextWidth").set("90");
            obj.set_taborder("7");
            obj.set_url("cmm::cmmCodeFind.xfdl");
            obj.set_text("");
            this.divSearch.addChild(obj.name, obj);

            obj = new Edit("edtID_PERSON","ccfID_SABUN:10","staYR_BASE:10.0","60","24.0",null,null,null,null,null,null,this.divSearch.form);
            obj.set_taborder("8");
            obj.set_visible("false");
            this.divSearch.addChild(obj.name, obj);

            obj = new Static("staCD_DEPT","ccfID_SABUN:10","staYR_BASE:10.0","66","24.0",null,null,null,null,null,null,this.divSearch.form);
            obj.set_taborder("9");
            obj.set_text("부서");
            obj.set_cssclass("sta_WF_SchLabel");
            this.divSearch.addChild(obj.name, obj);

            obj = new Div("ccfCD_DEPT","staCD_DEPT:0.0","staYR_BASE:10.0","250","24.0",null,null,null,null,null,null,this.divSearch.form);
            obj.getSetter("CodeFindName").set("DAX_CFDEPT");
            obj.getSetter("CDTextWidth").set("80");
            obj.set_taborder("10");
            obj.set_url("cmm::cmmCodeFind.xfdl");
            obj.getSetter("onitemchanged").set("fnSearchInit");
            this.divSearch.addChild(obj.name, obj);

            obj = new Div("divData","0","70",null,null,"0","0",null,null,null,null,this);
            obj.set_taborder("0");
            obj.set_cssclass("div_DATA_Bg");
            obj.set_text("");
            this.addChild(obj.name, obj);

            obj = new Grid("objGrid","0","10",null,null,"0","0",null,null,null,null,this.divData.form);
            obj.set_taborder("0");
            obj._setContents("");
            this.divData.addChild(obj.name, obj);
            // Layout Functions
            //-- Default Layout : this
            obj = new Layout("default","",this._adjust_width,this._adjust_height,this,function(p){});
            this.addLayout(obj.name, obj);
            
            // BindItem Information
            obj = new BindItem("item0","divSearch.form.ctclYR_BASE.form.TextBox","value","dsSearch","YR_BASE");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item1","divSearch.form.ccfCD_CORP.form.CDTextBox","value","dsSearch","CD_CORP");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item2","divSearch.form.ccfCD_CORP.form.DSTextBox","value","dsSearch","DS_CORP");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item3","divSearch.form.ccfID_SABUN.form.CDTextBox","value","dsSearch","ID_SABUN");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item4","divSearch.form.ccfID_SABUN.form.DSTextBox","value","dsSearch","DS_HNAME");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item5","divSearch.form.edtID_PERSON","value","dsSearch","ID_PERSON");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item6","divSearch.form.ccfTY_RETIRE","value","dsSearch","TY_RETIRE");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item7","divSearch.form.ccfCD_DEPT.form.CDTextBox","value","dsSearch","CD_DEPT");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item8","divSearch.form.ccfCD_DEPT.form.DSTextBox","value","dsSearch","DS_DEPT");
            this.addChild(obj.name, obj);
            obj.bind();
            
            // TriggerItem Information

        };
        
        this.loadPreloadList = function()
        {
            this._addPreloadList("fdl","cmm::cmmCalYY.xfdl");
            this._addPreloadList("fdl","cmm::cmmCodeFind.xfdl");
        };
        
        // User Script
        this.registerScript("DAC_YEARLYVACATION.xfdl", function() {
        this.objApp = this.gfnGetApplication();

        this.form_onload = function(obj, e) {
        	// -- 필수 -------------------//
        	this.gfnFormOnLoad(this);
        	this.gfnFormInfo(this);
        	// ---------------------------//

        	this.fnSetButton();
        	this.fnSetExtendButton();
        	this.fnSetVariable();
        	this.fnSetEvent();
        	this.fnSetParameter();
        	this.fnInit();
        }

        /************************************************************************
         * 버튼 설정 : 화면(Tab) 전환시 마다 호출
         * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
         ************************************************************************/
        this.fnSetButton = function() {

        }

        /************************************************************************
         * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
         ************************************************************************/
        this.fnSetExtendButton = function() {
        	if (this.FormInfo.TY_AUTH == "F") {
        		this.btnYear2 = this.gfnFormButtonAdd("Year2", "fnYear2");	// 연차생성
        		this.btnCmmAnnualCreate = this.gfnFormButtonAdd("CmmAnnualCreate", "fnCmmAnnualCreate");//공동연차생성
        		this.btnYear5 = this.gfnFormButtonAdd("Year5", "fnYear5");	// 온보딩휴가
        		this.btnYear3 = this.gfnFormButtonAdd("Year3", "fnYear3");	// 장기근속휴가
        		this.btnYear4 = this.gfnFormButtonAdd("Year4", "fnYear4");	// 연차관리(1년미만자)
        		this.btnYear1 = this.gfnFormButtonAdd("Year1", "fnYear1");	// 연차관리(개인별)
        	} else {
        		this.btnYear1.set_enable(true);
        	}
        }

        /************************************************************************
         * 변수 선언
         ************************************************************************/
        this.fnSetVariable = function() {
        	// 그리드영역
        	this.dxGrid = this.divData.form.objGrid;

        	// 검색영역
        	this.ctclYR_BASE  = this.divSearch.form.ctclYR_BASE;	// 년도
        	this.ccfCD_CORP   = this.divSearch.form.ccfCD_CORP;		// 법인
        	this.ccfID_SABUN  = this.divSearch.form.ccfID_SABUN;	// 성명
        	this.edtID_PERSON = this.divSearch.form.edtID_PERSON;	// ID_PERSON
        	this.ccfTY_RETIRE = this.divSearch.form.ccfTY_RETIRE;	// 구분
        	this.ccfCD_DEPT   = this.divSearch.form.ccfCD_DEPT;		// 부서
        }

        /************************************************************************
         * 이벤트 설정
         ************************************************************************/
        this.fnSetEvent = function() {
        	// 그리드영역
        	this.gfnGridInit(this.dxGrid, this.dsList, "DA", "DAC_YEARLYVACATION");
        	this.dxGrid.addEventHandler("oncelldblclick", this.fnGrid_CellDblclick, this);

        	// 검색영역
        	this.ccfCD_CORP.BeforeUserDataSetParam  = "fnBeforeUserDataSetParam";	// 법인코드
        	this.ccfCD_CORP.AfterCDTextChanged      = "fnAfterCDTextChanged";
        	this.ccfID_SABUN.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";	// 성명
        	this.ccfID_SABUN.AfterCDTextChanged     = "fnAfterCDTextChanged";
        	this.ccfCD_DEPT.BeforeUserDataSetParam  = "fnBeforeUserDataSetParam";	// 부서
        	this.ccfCD_DEPT.AfterCDTextChanged      = "fnAfterCDTextChanged";
        }

        /************************************************************************
         * 파라미터 설정
         ************************************************************************/
        this.fnSetParameter = function() {
        	// 조회
        	this.dsSelect = new Dataset();
        	this.dsSelect.addColumn("YR_BASE", "string");
        	this.dsSelect.addColumn("ID_PERSON", "string");
        	this.dsSelect.addColumn("ID_SABUN", "string");
        	this.dsSelect.addColumn("CD_CORP", "string");
        	this.dsSelect.addColumn("CD_DEPT", "string");
        	this.dsSelect.addColumn("TY_RETIRE", "string");
        	this.dsSelect.addColumn("GR_SEARCH", "string");
        	this.dsSelect.addColumn("GR_CORP", "string");

        	// 업데이트
        	this.dsUpdate = new Dataset();
        	this.dsUpdate.addColumn("ID_PERSON", "int");
        	this.dsUpdate.addColumn("CD_CORP", "string");
        	this.dsUpdate.addColumn("ID_SABUN", "string");
        	this.dsUpdate.addColumn("YR_BASE", "string");
        	this.dsUpdate.addColumn("QN_YEARLYTRANSFER", "bigdecimal");
        	this.dsUpdate.addColumn("GR_SEARCH", "string");
        	this.dsUpdate.addColumn("GR_CORP", "string");
        	this.dsUpdate.addColumn("ID_USER", "string");

        	// 삭제
        	this.dsDelete = new Dataset();
        	this.dsDelete.addColumn("ID_PERSON", "int");
        	this.dsDelete.addColumn("YR_BASE", "string");
        	this.dsDelete.addColumn("CD_CORP", "string");
        	this.dsDelete.addColumn("ID_SABUN", "string");
        }

        /************************************************************************
         * 화면 및 검색영역 초기화
         ************************************************************************/
        this.fnInit = function() {
        	// 년도
         	var year = this.gfnGetDate().substr(0, 4);
        	this.dsSearch.setColumn(0, "YR_BASE", year);

        	// 법인
        	this.fnSetCodeFinder(this.ccfCD_CORP, this.AuthClient.CD_CORP);

        	this.FormBtns.Select.click();
        }

        /************************************************************************
         * 컨트롤 이벤트
         ************************************************************************/
        /*
         * 조회 버튼
         */
        this.fnSelect = function() {
        	if (!this.gfnSearchValidate(this.divSearch, this.dsSearch)) return false;

        	this.gfnGridBeforeSelect(this.dxGrid);

        	this.dsSelect.clearData();
        	this.dsSelect.addRow();
        	this.dsSelect.setColumn(0, "YR_BASE"  , this.dsSearch.getColumn(0, "YR_BASE"));
        	this.dsSelect.setColumn(0, "ID_PERSON", this.dsSearch.getColumn(0, "ID_PERSON"));
        	this.dsSelect.setColumn(0, "ID_SABUN" , this.dsSearch.getColumn(0, "ID_SABUN"));
        	this.dsSelect.setColumn(0, "CD_CORP"  , this.dsSearch.getColumn(0, "CD_CORP"));
        	this.dsSelect.setColumn(0, "CD_DEPT"  , this.dsSearch.getColumn(0, "CD_DEPT"));
        	this.dsSelect.setColumn(0, "TY_RETIRE", this.dsSearch.getColumn(0, "TY_RETIRE"));
        	this.dsSelect.setColumn(0, "GR_SEARCH", this.FormInfo.GR_SEARCH);
        	this.dsSelect.setColumn(0, "GR_CORP"  , this.AuthClient.CD_CORP);

        	var strSvcId    = "select";
        	var strSvcType  = "grid";
        	var inProc		= "_dsProc";
        	var inData      = "select=dsSelect";
        	var outData     = "dsList=select0";
        	var strArg      = "";
        	var callBackFnc = "fnCallback";

        	this.gfnTransaction(strSvcId,		// transaction을 구분하기 위한 svc id값
        						strSvcType, 	// transaction을 요청할 구분
        						inProc,			// Procedure 정보 Dataset 이름
        						inData, 		// 입력값으로 보낼 dataset id, a=b형태로 실제이름과 입력이름을 매칭
        						outData, 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
        						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
        						callBackFnc);	// 통신방법 정의 [생략가능]
        }

        /*
         * 입력 버튼
         */
        this.fnAdd = function() {

        }

        /*
         * 삭제 버튼
         */
        this.fnDel = function() {
        	this.gfnGridDel(this.dxGrid);
        }

        /*
         * 저장 버튼
         */
        this.fnSave = function() {
        	if (!this.gfnGridValidate(this.dxGrid)) return;

        	this.dxGrid.updateToDataset();

        	this.dsUpdate.clearData();
        	for (var i = 0; i < this.dsList.rowcount; i++) {
        		var flag = this.gfnGetFlag(this.dsList, i);
        		switch(flag) {
        		case "U":
        			var nrow = this.dsUpdate.addRow();
        			this.dsUpdate.setColumn(nrow, "ID_PERSON"        , this.dsList.getColumn(i, "ID_PERSON"));
        			this.dsUpdate.setColumn(nrow, "CD_CORP"          , this.dsList.getColumn(i, "CD_CORP"));
        			this.dsUpdate.setColumn(nrow, "ID_SABUN"         , this.dsList.getColumn(i, "ID_SABUN"));
        			this.dsUpdate.setColumn(nrow, "YR_BASE"          , this.dsList.getColumn(i, "YR_BASE"));
        			this.dsUpdate.setColumn(nrow, "QN_YEARLYTRANSFER", this.dsList.getColumn(i, "QN_YEARLYTRANSFER"));
        			this.dsUpdate.setColumn(nrow, "GR_SEARCH"        , this.FormInfo.GR_SEARCH);
        			this.dsUpdate.setColumn(nrow, "GR_CORP"          , this.AuthClient.CD_CORP);
        			this.dsUpdate.setColumn(nrow, "ID_USER"          , this.AuthClient.ID_USER);
        			break;
        		case "D":
        			var nrow = this.dsDelete.addRow();
        			this.dsDelete.setColumn(nrow, "ID_PERSON", this.dsList.getColumn(i, "ID_PERSON"));
        			this.dsDelete.setColumn(nrow, "YR_BASE"  , this.dsList.getColumn(i, "YR_BASE"));
        			this.dsDelete.setColumn(nrow, "CD_CORP"  , this.dsList.getColumn(i, "CD_CORP"));
        			this.dsDelete.setColumn(nrow, "ID_SABUN" , this.dsList.getColumn(i, "ID_SABUN"));
        		}
        	}

        	if (this.dsUpdate.rowcount == 0 && this.dsDelete.rowcount == 0) return;

        	var strSvcId    = "save";
        	var strSvcType  = "save";
        	var inProc		= "_dsProc";
        	var inData      = "update=dsUpdate delete=dsDelete";
        	var outData     = "";
        	var strArg      = "";
        	var callBackFnc = "fnCallback";

        	this.gfnTransaction(strSvcId,		// transaction을 구분하기 위한 svc id값
        						strSvcType, 	// transaction을 요청할 구분
        						inProc,			// Procedure 정보 Dataset 이름
        						inData, 		// 입력값으로 보낼 dataset id, a=b형태로 실제이름과 입력이름을 매칭
        						outData, 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
        						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
        						callBackFnc);	// 통신방법 정의 [생략가능]
        }

        this.fnExcel = function() {
        	this.gfnExcelExport(this.dxGrid);
        }

        this.fnPrint = function() {
        	return true;
        }

        /************************************************************************
         * Validate
         ************************************************************************/
        this.fnSelectValid = function() {
        	return true;
        }

        /************************************************************************
         * 확장버튼 이벤트
         ************************************************************************/
        // 연차생성
        this.fnYear2 = function(obj,e) {
        	var param = {};
        	param.rboYear = true;
        	param.rboMonthEnable = false;
        	param.setItems = "Year";
        	param.idPerson = this.dsList.getColumn(this.dsList.rowposition, "ID_PERSON");
        	param.sabun = this.dsList.getColumn(this.dsList.rowposition, "ID_SABUN");
        	param.hname = this.dsList.getColumn(this.dsList.rowposition, "DS_HNAME");
        	param.cdcorp = this.dsSearch.getColumn(0, "CD_CORP");
        	param.dscorp = this.dsSearch.getColumn(0, "DS_CORP");
        	param.text1 = false;
        	param.text2 = false;
        	param.dateformat = "YYYY";
        	param.textCal = this.dsSearch.getColumn(0, "YR_BASE");
        	param.text1Color = "";
        	param.text2Color = "";

        	this.gfnFormOpen("DAC", "DAC_YEARLYVACATION_DLG", "fnYearCallback", param);
        }

        // 온보딩휴가 관리
        this.fnYear5 = function(obj,e) {
        	if(!this.gfnGridIsRow(this.dxGrid)) {return false;}

        	var param = {};
        	param.ID_PERSON = this.dsList.getColumn(this.dsList.rowposition, "ID_PERSON");
        	param.ID_SABUN = this.dsList.getColumn(this.dsList.rowposition, "ID_SABUN");
        	param.DS_HNAME = this.dsList.getColumn(this.dsList.rowposition, "DS_HNAME");
        	param.CD_CORP = this.dsSearch.getColumn(0, "CD_CORP");
        	param.DS_CORP = this.dsSearch.getColumn(0, "DS_CORP");
        	param.YR_BASE = this.ctclYR_BASE.form.TextBox.value;

        	this.gfnFormOpen("DAC", "DAC_ONBOARDING", "fnYearCallback", param);
        }

        // 장기근속휴가 관리
        this.fnYear3 = function(obj,e) {
        	if(!this.gfnGridIsRow(this.dxGrid)) {return false;}

        	var param = {};
        	param.ID_PERSON = this.dsList.getColumn(this.dsList.rowposition, "ID_PERSON");
        	param.ID_SABUN = this.dsList.getColumn(this.dsList.rowposition, "ID_SABUN");
        	param.DS_HNAME = this.dsList.getColumn(this.dsList.rowposition, "DS_HNAME");
        	param.CD_CORP = this.dsSearch.getColumn(0, "CD_CORP");
        	param.DS_CORP = this.dsSearch.getColumn(0, "DS_CORP");
        	param.YR_BASE = this.ctclYR_BASE.form.TextBox.value;

        	this.gfnFormOpen("DAC", "DAC_LONGSERVICE", "fnYearCallback", param);
        }

        // 연차관리 (1년미만자)
        this.fnYear4 = function(obj,e) {
        	if(!this.gfnGridIsRow(this.dxGrid)) {return false;}

        	var param = {};
        	param.ID_PERSON = this.dsList.getColumn(this.dsList.rowposition, "ID_PERSON");
        	param.ID_SABUN = this.dsList.getColumn(this.dsList.rowposition, "ID_SABUN");
        	param.DS_HNAME = this.dsList.getColumn(this.dsList.rowposition, "DS_HNAME");
        	param.CD_CORP = this.dsSearch.getColumn(0, "CD_CORP");
        	param.DS_CORP = this.dsSearch.getColumn(0, "DS_CORP");
        	param.YY_YEAR = this.ctclYR_BASE.form.TextBox.value;

        	this.gfnFormOpen("DAC", "DAC_MONTHLYVACATION", "fnYearCallback", param);
        }

        // 연차관리
        this.fnYear1 = function(obj,e) {
        	if(!this.gfnGridIsRow(this.dxGrid)) {return false;}

        	var param = {};

        	param.cdcorp = this.dsList.getColumn(this.dsList.rowposition, "CD_CORP"); //this.gfnTrim(this.ccfCD_CORP.form.CDTextBox.value);
        	param.dscorp = this.dsList.getColumn(this.dsList.rowposition, "DS_CORP"); //this.gfnTrim(this.ccfCD_CORP.form.DSTextBox.value);
        	param.idPerson = this.dsList.getColumn(this.dsList.rowposition, "ID_PERSON");
        	param.sabun = this.dsList.getColumn(this.dsList.rowposition, "ID_SABUN");
        	param.hname = this.dsList.getColumn(this.dsList.rowposition, "DS_HNAME");
        	param.textCal = this.ctclYR_BASE.form.TextBox.value;

        	this.gfnFormOpen("DAC", "DAC_PERSONALVOCA", "", param);
        }

        // 공동연차생성
        this.fnCmmAnnualCreate = function(obj,e) {
        	var param = {};
         	param.CD_CORP = this.dsSearch.getColumn(0, "CD_CORP");
        	param.DS_CORP = this.dsSearch.getColumn(0, "DS_CORP");

        	this.gfnFormOpen("DAC", "DAC_ANNUALUPLOAD_DLG", "fnPopCallback", param, 387, 230);
        }

        /************************************************************************
         * 콜백 이벤트
         ************************************************************************/
        /*
         * 기본 콜백
         */
        this.fnCallback = function(svcID, errorCode, errorMsg) {
        	if (svcID == "select") {
        		this.gfnGridAfterSelect(this.dxGrid);
        		this.FormBtns.Add.set_enable(false);
        	} else if (svcID == "save") {
        		if (errorCode == 0) {
        			this.gfnAlert("작업이 완료되었습니다.");
        			this.FormBtns.Select.click();
        		} else {
        			this.gfnAlert(errorMsg);
        		}
        	}
        }

        this.fnYearCallback = function(strId, val) {
        	this.FormBtns.Select.click();
        };

        this.fnPopCallback = function(id, val){
        	if(val){
        		this.FormBtns.Select.click();
        	}
        }
        /************************************************************************
         * 코드파인드 이벤트
         ************************************************************************/
        this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
        	if (id == "ccfID_SABUN") {
         		if (this.gfnIsNull(this.dsSearch.getColumn(0, "CD_CORP"))) {
         			this.ccfCD_CORP.form.CDTextBox.setFocus();
         			this.gfnAlert("법인을 먼저 선택하시기 바랍니다.");
         			return false;
         		}
        		dsUserParam.setColumn(nrow, "CD_CORP"  , this.dsSearch.getColumn(0, "CD_CORP"));
        		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
        		dsUserParam.setColumn(nrow, "CD_DEPT"  , this.AuthClient.CD_DEPT);
        		dsUserParam.setColumn(nrow, "YN_CORP"  , "N");
        		dsUserParam.setColumn(nrow, "TY_RETIRE", "%");   // 재직구분
        	} else if (id == "ccfCD_CORP") {
        		dsUserParam.setColumn(nrow, "CD_CORP"  , this.AuthClient.CD_CORP);
        		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
        		dsUserParam.setColumn(nrow, "ID_USER"  , this.AuthClient.ID_USER);
        	} else if(id == "ccfCD_DEPT") {
        		if (this.gfnIsNull(this.dsSearch.getColumn(0, "CD_CORP"))) {
         			this.ccfCD_CORP.form.CDTextBox.setFocus();
         			this.gfnAlert("법인을 먼저 선택하시기 바랍니다.");
         			return false;
         		}
        		dsUserParam.setColumn(nrow, "GR_SEARCH" ,  this.FormInfo.GR_SEARCH);				// 사용자 권한
        		dsUserParam.setColumn(nrow, "CD_DEPT"   , this.dsSearch.getColumn(0, "CD_DEPT"));	// 로그인부서
        		dsUserParam.setColumn(nrow, "CD_CORP"   , this.dsSearch.getColumn(0, "CD_CORP"));	// 조회조건에 있는 소속법인
        		dsUserParam.setColumn(nrow, "YN_CURRENT",  "Y");
        	}

        	return true;
        }

        this.fnAfterCDTextChanged = function(id, codeFindData) {
        	var arr = codeFindData;
        	if (id == "ccfCD_CORP") {
        		this.fnResetCodeFinder(this.ccfCD_DEPT, this.dsSearch, ["CD_DEPT", "DS_DEPT"]);
        		this.fnResetCodeFinder(this.ccfID_SABUN, this.dsSearch, ["ID_SABUN", "DS_HNAME", "ID_PERSON"]);
        	} else if (id == "ccfCD_DEPT" ) {
        		this.fnResetCodeFinder(this.ccfID_SABUN, this.dsSearch, ["ID_SABUN", "DS_HNAME", "ID_PERSON"]);
        	} else if (id == "ccfID_SABUN") {
        		if (arr.length > 0) {
        			this.fnSetObjectValue(this.edtID_PERSON, arr[0]["ID_PERSON"]);
        		}else{
        			this.fnSetObjectValue(this.edtID_PERSON, "");
        		}
        	}
        }

        /************************************************************************
         * 그리드 이벤트
         ************************************************************************/
        this.fnGridBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
        	return true;
        }

        this.fnGridAfterCDTextChanged = function(id, codeFindData) {

        }

        this.fnGrid_CellDblclick = function(obj, e){
        	this.fnYear1();
        }

        /************************************************************************
         * 기타 이벤트
         ************************************************************************/
        this.dsSearch_onvaluechanged = function(obj,e) {

        	if(e.oldvalue != e.newvalue) {
        		this.gfnSetFormStatus(this);	// 폼상태 초기화
        		this.gfnGridClear(this.dxGrid);
        	}
        }

        this.fnSearchInit = function(obj, e) {
        	if (e == null || (e.pretext != e.posttext)) {
        		// 폼상태 초기화
        		this.gfnSetFormStatus(this);
        		this.gfnGridClear(this.dxGrid);
        	}
        }

        /************************************************************************
         * 기타 함수
         ************************************************************************/
        // 코드파인더 초기화
        this.fnResetCodeFinder = function(obj, dataset, columns) {
        	obj.form.fnCodeFindClear();
        	for (var i = 0; i < columns.length; i++) {
        		dataset.setColumn(0, columns[i], "");
        	}
        }

        // 코드파인더 설정
        this.fnSetCodeFinder = function(obj, value) {
        	obj.form.CDTextBox.set_value(value);
        	obj.form.fnCodeFindLoad();
        }

        // 객체 초기화
        this.fnResetObjectValue = function(obj, dataset, columns) {
        	obj.set_value("");
        	for (var i = 0; i < columns.length; i++) {
        		dataset.setColumn(0, columns[i], "");
        	}
        }

        // 객체 설정
        this.fnSetObjectValue = function(obj, value) {
        	obj.set_value(value);
        }

        });
        
        // Regist UI Components Event
        this.on_initEvent = function()
        {
            this.addEventHandler("onload",this.form_onload,this);
            this.divSearch.form.staCD_CORP.addEventHandler("onclick",this.Common_onclick,this);
            this.divSearch.form.ccfCD_CORP.addEventHandler("onclick",this.Common_onclick,this);
            this.divSearch.form.staTY_RETIRE.addEventHandler("onclick",this.Common_onclick,this);
            this.divSearch.form.staSABUN.addEventHandler("onclick",this.Common_onclick,this);
            this.divSearch.form.ccfID_SABUN.addEventHandler("onclick",this.Common_onclick,this);
            this.divSearch.form.staCD_DEPT.addEventHandler("onclick",this.Common_onclick,this);
            this.dsSearch.addEventHandler("onvaluechanged",this.dsSearch_onvaluechanged,this);
        };
        this.loadIncludeScript("DAC_YEARLYVACATION.xfdl");
        this.loadPreloadList();
        
        // Remove Reference
        obj = null;
    };
}
)();
