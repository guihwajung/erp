<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="1280" height="720" titletext="사원명부" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0" top="0" height="46.0" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static id="staCD_CORP" taborder="4" text="법인" left="0" top="10.0" width="66" height="24.0" textDecoration="none" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_CORP" CDTextWidth="50" taborder="5" left="staCD_CORP:0.0" top="10.0" width="200" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staYY_WORK" text="기준일자" left="ccfCD_CORP:0.0" top="10.0" width="92" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Calendar id="ctclYY_WORK" taborder="6" left="staYY_WORK:0.0" top="10.0" width="100" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true"/>
              <CheckBox id="chkYN_JUMIN" taborder="2" text="주민번호" left="ctclYY_WORK:30" top="10.0" width="120" height="24.0" truevalue="Y" falsevalue="N"/>
              <Static id="staYN_DELETE" taborder="2" text="기술자여부" left="ctclYY_WORK:0.0" top="10.0" width="105.0" height="24.0" rtl="false" visible="false" cssclass="sta_WF_SchLabel"/>
              <Combo id="cboYN_DELETE" taborder="3" left="staYN_DELETE:0.0" top="10.0" width="80" height="24.0" innerdataset="dsYN_DELETE" datacolumn="VALUE" codecolumn="CODE" index="1" value="N" onitemchanged="fnSearchInit" visible="false"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList" onvaluechanged="dsList_onvaluechanged"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DAAPR_EPMLIST_RPT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsYN_DELETE">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">%</Col>
            <Col id="VALUE">전체</Col>
          </Row>
          <Row>
            <Col id="CODE">N</Col>
            <Col id="VALUE">사용</Col>
          </Row>
          <Row>
            <Col id="CODE">Y</Col>
            <Col id="VALUE">미사용</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{	
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();	
	
	// 법인코드 및 법인명 기본세팅
	this.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);
    this.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP);
	
	//적용년도 셋팅
	var today = this.gfnGetDate();
	this.ctclYY_WORK.set_value(today);
	
	//화면 로드시 자동조회
	this.FormBtns.Select.click();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
	// 	this.FormBtns.Add.set_enable(false);
	// 	this.FormBtns.Del.set_enable(false);
	this.FormBtns.Reset.set_enable(true);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	//this.btnInsaCard = this.gfnFormButtonAdd("btnInsaCard", "fnInsaCard","인사카드");
	//this.btnInsaBaseInfo = this.gfnFormButtonAdd("btnInsaBaseInfo", "fnInsaBaseInfo","인사기본정보");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	//this.ccfCD_PAYSTEP = this.divSearch.form.ccfCD_PAYSTEP;
	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP; //법인코드
	this.ctclYY_WORK = this.divSearch.form.ctclYY_WORK;
	this.chkYN_JUMIN = this.divSearch.form.chkYN_JUMIN;
	//this.cboYN_DELETE = this.divSearch.form.cboYN_DELETE;
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	//법인코드
	this.ccfCD_CORP.CodeFindName = "DAX_CFCORP";
	this.ccfCD_CORP.AfterCDTextChanged = "codefind_AfterCDTextChanged";	
		
	this.gfnGridInit(this.dxGrid, this.dsList, "DA", "DAA_EMPLIST");
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	// sp의 input 파라미터
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CORP", "string");  //법인
	this.dsSelect.addColumn("DT_DATE", "string");  //날짜
	this.dsSelect.addColumn("YN_JUMIN", "string");
	this.dsSelect.addColumn("ID_USER", "string");  // 
	this.dsSelect.addColumn("IP_ADDR", "string"); // 	

	/*
	this.dsSave = new Dataset();
	this.dsSave.addColumn("TY_SAVE", "string");
	this.dsSave.addColumn("YM_BASE", "string");
	this.dsSave.addColumn("TY_BUMUN", "string");
	this.dsSave.addColumn("CD_PAYSTEP", "string");
	this.dsSave.addColumn("DS_POSITION", "string");
	this.dsSave.addColumn("DS_POSITION_PRT", "string");
	this.dsSave.addColumn("AM_BASE", "bigdecimal");
	this.dsSave.addColumn("AM_EXCEPT", "bigdecimal");
	this.dsSave.addColumn("AM_OT", "bigdecimal");
	this.dsSave.addColumn("AM_JOJOUNG", "bigdecimal");
	this.dsSave.addColumn("AM_OCCUP", "bigdecimal");
	this.dsSave.addColumn("AM_POSITION", "bigdecimal");
	this.dsSave.addColumn("AM_OFF", "bigdecimal");
	this.dsSave.addColumn("AM_SITE_01", "bigdecimal");
	this.dsSave.addColumn("ID_USER", "string");
   */
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value); // 법인
    this.dsSelect.setColumn(0, "DT_DATE", this.ctclYY_WORK.value);
	this.dsSelect.setColumn(0, "YN_JUMIN", this.chkYN_JUMIN.value);
	//this.dsSelect.setColumn(0, "YN_TECH", this.cboYN_DELETE.value);
	this.dsSelect.setColumn(0, "ID_USER", this.AuthClient.ID_USER);
	this.dsSelect.setColumn(0, "IP_ADDR", this.AuthClient.NO_IP);

	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 	    // 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	/*this.gfnGridAdd(this.dxGrid);*/
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	/*this.gfnGridDel(this.dxGrid);*/
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	// 그리드 필수항목 체크
// 	if (!this.gfnGridValidate(this.dxGrid)) return;	
// 
// 	this.dxGrid.updateToDataset();
// 	
// 	this.dsSave.clearData();
// 	
// 	for (var i = 0; i < this.dsList.rowcount; i++) {
// 		var flag = this.gfnGetFlag(this.dsList, i);
// 		switch(flag) {
// 			case "I":
// 			case "U":
// 			case "D":
// 				var nrow = this.dsSave.addRow();
// 				this.dsSave.setColumn(nrow, "TY_SAVE", flag);				
// 				this.dsSave.setColumn(nrow, "YM_BASE", this.dsList.getColumn(i, "YM_BASE").replace("-",""));
// 				this.dsSave.setColumn(nrow, "TY_BUMUN", this.dsList.getColumn(i, "TY_BUMUN"));
// 				this.dsSave.setColumn(nrow, "CD_PAYSTEP", this.dsList.getColumn(i, "CD_PAYSTEP"));
// 				this.dsSave.setColumn(nrow, "DS_POSITION", this.dsList.getColumn(i, "DS_POSITION"));
// 				this.dsSave.setColumn(nrow, "DS_POSITION_PRT", this.dsList.getColumn(i, "DS_POSITION_PRT"));
// 				this.dsSave.setColumn(nrow, "AM_BASE", this.dsList.getColumn(i, "AM_BASE"));
// 				this.dsSave.setColumn(nrow, "AM_EXCEPT", this.dsList.getColumn(i, "AM_EXCEPT"));
// 				this.dsSave.setColumn(nrow, "AM_OT", this.dsList.getColumn(i, "AM_OT"));
// 				this.dsSave.setColumn(nrow, "AM_JOJOUNG", this.dsList.getColumn(i, "AM_JOJOUNG"));
// 				this.dsSave.setColumn(nrow, "AM_OCCUP", this.dsList.getColumn(i, "AM_OCCUP"));
// 				this.dsSave.setColumn(nrow, "AM_POSITION", this.dsList.getColumn(i, "AM_POSITION"));
// 				this.dsSave.setColumn(nrow, "AM_OFF", this.dsList.getColumn(i, "AM_OFF"));
// 				this.dsSave.setColumn(nrow, "AM_SITE_01", this.dsList.getColumn(i, "AM_SITE_01"));			
// 				this.dsSave.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);		
// 				break;
// 		}
// 	}
// 	
// 	if (this.dsSave.rowcount == 0) return;
// 		
// 	var strSvcId    = "save";
// 	var strSvcType  = "save";
// 	var inProc		= "_dsProc";
// 	var inData      = "save=dsSave";
// 	var outData     = "dsOutput=save";
// 	var strArg      = "";
// 	var callBackFnc = "fnCallback";
// 	
// 	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
// 						strSvcType , 	// transaction을 요청할 구분
// 						inProc,			// Procedure 정보 Dataset 이름
// 						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
// 						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
// 						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
// 						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}
/*
 *	Reset 버튼
 */
this.fnReset = function() {
	this.ccfCD_CORP.form.CDTextBox.set_value("");
	this.ccfCD_CORP.form.DSTextBox.set_value("");
	
	this.divSearch.form.ctclYY_WORK.set_value("");
	
	this.fnSearchInit();
	
};
/************************************************************************
 * Validate
 ************************************************************************/

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
		
		this.FormBtns.Add.set_enable(false);
		this.FormBtns.Del.set_enable(false);
		this.fnSetButton();
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.codefind_AfterCDTextChanged = function(id) {
	this.fnSearchInit();
}
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
 /************************************************************************
 * 확장버튼 이벤트 
 ************************************************************************/
this.fnInsaCard = function() {  
   alert("인사카드 SP호출");
   return;
}

this.fnInsaBaseInfo = function() {  
   alert("인사기본정보 SP호출");
   return;
}

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		// 폼상태 초기화
		this.gfnSetFormStatus(this);	
		this.gfnGridClear(this.dxGrid);
	}
};

this.dsList_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	this.fnSetButton();
};
]]></Script>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ctclYY_WORK" propid="value" datasetid="dsSearch" columnid="DT_WORK"/>
      <BindItem id="item1" compid="divSearch.form.chkYN_JUMIN" propid="value" datasetid="dsSearch" columnid="YN_JUMIN"/>
    </Bind>
  </Form>
</FDL>
