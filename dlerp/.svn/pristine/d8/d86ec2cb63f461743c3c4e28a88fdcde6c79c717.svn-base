<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="1280" height="720" titletext="평가진행현황" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="1" left="0" top="0" height="46.0" right="0" cssclass="div_SEARCH_Bg" text="">
          <Layouts>
            <Layout>
              <Static id="staCD_CORP" taborder="2" text="법인" left="0" top="10.0" width="66" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_CORP" CDTextWidth="50" taborder="3" left="staCD_CORP:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DAX_CFCORP_CODEFIND"/>
              <Static id="staYR_RTNG" taborder="0" text="년도" left="ccfCD_CORP:0.0" top="10.0" width="66" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfYR_RTNG" CDTextWidth="70" taborder="4" left="staYR_RTNG:0.0" top="10.0" width="60" height="24.0" url="cmm::cmmCalYY.xfdl" text=""/>
              <Static id="staID_RTNG" taborder="1" text="평가회차" left="ccfYR_RTNG:0.0" top="10.0" width="92" height="24.0" rtl="false" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfID_RTNG" CDTextWidth="100" taborder="3" left="staID_RTNG:0.0" top="10.0" width="350" height="24.0" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DAX_CFRTNG_STD"/>
              <Static id="staTY_STATUS" taborder="7" text="평가상태" left="ccfID_RTNG:0" top="10.0" width="92.0" height="24.0" rtl="false" cssclass="sta_WF_SchLabel"/>
              <Combo id="cboTY_STATUS" taborder="6" text="전체" left="staTY_STATUS:0" top="10.0" width="94" height="24.0" innerdataset="dsTY_STATUS" codecolumn="CD_CODE" datacolumn="DS_CODE" index="0" value="ALL" autoselect="true"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg" ondragmove="divData_ondragmove">
          <Layouts>
            <Layout>
              <Div id="divSplitter" taborder="1" left="0" top="56%" width="100%" height="5" ondrag="divData_divSplitter_ondrag" background="#c9c9c9" cursor="ns-resize"/>
              <Div id="divDataTop" taborder="0" left="0" top="0" bottom="divSplitter:5" right="0">
                <Layouts>
                  <Layout>
                    <Static id="sta01" taborder="0" text="피평가자 관리" left="0" top="0" width="100%" height="22" cssclass="sta_TITLE_Bg"/>
                    <Grid id="objGrid" taborder="0" left="0" top="sta01:5" bottom="0" right="0" autosizingtype="none" readonly="true" oncellposchanged="fnGridCellPosChanged" autofittype="col"/>
                  </Layout>
                </Layouts>
              </Div>
              <Div id="divDataBottom" taborder="0" left="0" top="divSplitter:6" bottom="0" right="0">
                <Layouts>
                  <Layout>
                    <Static id="sta02" taborder="0" text="평가자 관리" left="0" top="0" width="100%" height="22" cssclass="sta_TITLE_Bg"/>
                    <Button id="btnSms" taborder="1" text="메시지 전송" top="0" height="27" right="166" width="90" enable="false" onclick="btnSms_onclick"/>
                    <Button id="btnEmail" taborder="2" text="메일 발송" top="0" height="27" right="83" width="80" enable="false" onclick="btnEmail_onclick"/>
                    <Button id="btnHistory" taborder="2" text="전송 이력" top="0" height="27" right="0" width="80" enable="false" onclick="btnHistory_onclick"/>
                    <Grid id="objGridSub" taborder="3" left="0" top="sta02:6" bottom="0" right="0"/>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo) {
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);
	this.gfnFormInfo(this);
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	this.fnSetCombo();
	this.fnInit();
}

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
 	this.btnSendSMS 	= this.gfnFormButtonAdd("btnSendSMS"	, "fnSendSMS");		// 메시지 버튼
 	this.btnSendEmail 	= this.gfnFormButtonAdd("btnSendEmail"	, "fnSendEmail");	// 메일 버튼
	this.btnHistory 	= this.gfnFormButtonAdd("btnHistory"	, "fnSendHistory");	// 전송이력
}

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	// 그리드영역
	this.dxGrid    = this.divData.form.divDataTop.form.objGrid;
	this.dxGridSub = this.divData.form.divDataBottom.form.objGridSub;
	
	// 검색영역
	this.ccfCD_CORP   = this.divSearch.form.ccfCD_CORP;
	this.ccfYR_RTNG   = this.divSearch.form.ccfYR_RTNG;
	this.ccfID_RTNG   = this.divSearch.form.ccfID_RTNG;
	this.cboTY_STATUS = this.divSearch.form.cboTY_STATUS;
	
 	this.btnSms    	= this.divData.form.divDataBottom.form.btnSms;			// 메시지 전송(평가자용)
 	this.btnEmail 	= this.divData.form.divDataBottom.form.btnEmail;		// 메일 발송(평가자용)
 	this.btnHistory = this.divData.form.divDataBottom.form.btnHistory;		// 전송 이력(평가자용)
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {	
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsListStatus, "DA", "DAJ_RTNG_RSLT_STATUS");
	this.dxGrid.addEventHandler("onselectchanged", this.fnGridRowCellChanged, this);
	this.dxGrid.BeforeUserDataSetParam = "fnGridBeforeUserDataSetParam";
	this.dxGrid.AfterCDTextChanged     = "fnGridAfterCDTextChanged";
	this.dxGrid.ExpandUp               = "fnGridExpandUp";
	this.gfnGridInit(this.dxGridSub, this.dsListSub, "DA", "DAJ_RTNG_BGVDPRSN_ADMN_LIST");
	this.dxGridSub.set_autofittype("col");
	this.dxGridSub.ExpandUp            = "fnGridSubExpandUp";
	
	// 검색영역
	this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";	// 법인
	this.ccfCD_CORP.AfterCDTextChanged     = "fnAfterCDTextChanged";
	this.ccfID_RTNG.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";	// 평가기준
	this.ccfID_RTNG.AfterCDTextChanged     = "fnAfterCDTextChanged";
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	// 조회
	this.dsSelectStatus = new Dataset();
	this.dsSelectStatus.addColumn("TY_RTNG", "string");
	this.dsSelectStatus.addColumn("CD_CORP", "string");
	this.dsSelectStatus.addColumn("ID_RTNG", "string");
	this.dsSelectStatus.addColumn("TY_STATUS", "string");
	this.dsSelectStatus.addColumn("TY_PTCP", "string");	
	
	// SMS/EMAIL 전송 및 내용 업데이트
	this.dsSendSmsEmailUpdate = new Dataset();
	this.dsSendSmsEmailUpdate.addColumn("CD_CORP", "string");
	this.dsSendSmsEmailUpdate.addColumn("ID_SABUN", "string");
	this.dsSendSmsEmailUpdate.addColumn("DS_TITLE", "string");
	this.dsSendSmsEmailUpdate.addColumn("DS_BODY", "string");
	this.dsSendSmsEmailUpdate.addColumn("ID_SENDER", "string");
	this.dsSendSmsEmailUpdate.addColumn("TY_GUBUN", "string");
	this.dsSendSmsEmailUpdate.addColumn("TY_TYPE", "string");
	this.dsSendSmsEmailUpdate.addColumn("PARAM1", "string");
	this.dsSendSmsEmailUpdate.addColumn("PARAM2", "string");
	this.dsSendSmsEmailUpdate.addColumn("PARAM3", "string");
	this.dsSendSmsEmailUpdate.addColumn("PARAM4", "string");
	this.dsSendSmsEmailUpdate.addColumn("PARAM5", "string");
	
	// SMS 전송
	this.dsSendSMS = new Dataset();
	this.dsSendSMS.addColumn("MOBILE", "string");
	this.dsSendSMS.addColumn("TITLE", "string");
	this.dsSendSMS.addColumn("MESSAGE", "string");
	
	// SMS 전송내용 업데이트
	this.dsRtngSmsUpdate = new Dataset();
	this.dsRtngSmsUpdate.addColumn("TY_RTNG", "string");
	this.dsRtngSmsUpdate.addColumn("CD_CORP", "string");
	this.dsRtngSmsUpdate.addColumn("ID_RTNG", "string");
	this.dsRtngSmsUpdate.addColumn("ID_SABUN_RTNG", "string");
	this.dsRtngSmsUpdate.addColumn("DS_SMS_TITLE", "string");
	this.dsRtngSmsUpdate.addColumn("DS_SMS_BODY", "string");
	this.dsRtngSmsUpdate.addColumn("ID_SABUN_SMS", "string");
	this.dsRtngSmsUpdate.addColumn("TY_PTCP", "string");	
	
	// 피평가자 조회
	this.dsSelectBgvdprsn = new Dataset();
	this.dsSelectBgvdprsn.addColumn("CD_CORP", "string");
	this.dsSelectBgvdprsn.addColumn("ID_RTNG", "string");
	this.dsSelectBgvdprsn.addColumn("ID_SABUN_PRSN", "string");
	this.dsSelectBgvdprsn.addColumn("CD_RTNG_TYPE", "string");
	this.dsSelectBgvdprsn.addColumn("TY_PTCP", "string");	
		
	// EMAIL 발송
	this.dsSendEMAIL = new Dataset();
	this.dsSendEMAIL.addColumn("Title", "string");
	this.dsSendEMAIL.addColumn("Content", "string");
	this.dsSendEMAIL.addColumn("ToMail", "string");
	this.dsSendEMAIL.addColumn("ToRecipients", "string");
	
	// EMAIL 발송내용 업데이트
	this.dsRtngEmailUpdate = new Dataset();
	this.dsRtngEmailUpdate.addColumn("TY_RTNG", "string");
	this.dsRtngEmailUpdate.addColumn("CD_CORP", "string");
	this.dsRtngEmailUpdate.addColumn("ID_RTNG", "string");
	this.dsRtngEmailUpdate.addColumn("ID_SABUN_RTNG", "string");
	this.dsRtngEmailUpdate.addColumn("DS_EMAIL_TITLE", "string");
	this.dsRtngEmailUpdate.addColumn("DS_EMAIL_BODY", "string");
	this.dsRtngEmailUpdate.addColumn("ID_SABUN_EMAIL", "string");
	this.dsRtngEmailUpdate.addColumn("TY_PTCP", "string");	
	
}

/************************************************************************
 * 콤보 데이터 조회 및 설정
 ************************************************************************/
this.fnSetCombo = function() {
	
}

/************************************************************************
 * 화면 및 검색영역 초기화
 ************************************************************************/
this.fnInit = function() {
	// 법인
	this.dsSearch.setColumn(0, "CD_CORP", this.AuthClient.CD_CORP);
	this.dsSearch.setColumn(0, "DS_CORP", this.AuthClient.DS_CORP);
	
	var today = this.gfnGetDate();
	this.dsSearch.setColumn(0, "YR_RTNG", today.substr(0, 4));
	
	this.cboTY_STATUS.set_index(0);
}

/************************************************************************
 * 버튼 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.gfnSearchValidate(this.divSearch, this.dsSearch)) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);

	this.dsSelectStatus.clearData();
	this.dsSelectStatus.addRow();
	this.dsSelectStatus.setColumn(0, "TY_RTNG"  , this.dsSearch.getColumn(0, "CD_RTNG_TYPE"));
	this.dsSelectStatus.setColumn(0, "CD_CORP"  , this.dsSearch.getColumn(0, "CD_CORP"));
	this.dsSelectStatus.setColumn(0, "ID_RTNG"  , this.dsSearch.getColumn(0, "ID_RTNG"));
	this.dsSelectStatus.setColumn(0, "TY_STATUS", this.dsSearch.getColumn(0, "TY_STATUS"));
	this.dsSelectStatus.setColumn(0, "TY_PTCP"	, this.dsSearch.getColumn(0, "TY_PTCP"));

	var strSvcId    = "select_status";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "select_status=dsSelectStatus";
	var outData     = "dsListStatus=select_status0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction(strSvcId,		// transaction을 구분하기 위한 svc id값
						strSvcType, 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData, 		// 입력값으로 보낼 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						outData, 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc);	// 통신방법 정의 [생략가능]
}

// 피평가자 조회
this.fnSelectBgvdprsn = function() {
	if (!this.gfnSearchValidate(this.divSearch, this.dsSearch)) return false;
	
	this.gfnGridBeforeSelect(this.dxGridSub);
	
	this.dsSelectBgvdprsn.clearData();
	this.dsSelectBgvdprsn.addRow();
	this.dsSelectBgvdprsn.setColumn(0, "CD_CORP"      , this.dsSearch.getColumn(0, "CD_CORP"));
	this.dsSelectBgvdprsn.setColumn(0, "ID_RTNG"      , this.dsSearch.getColumn(0, "ID_RTNG"));
	this.dsSelectBgvdprsn.setColumn(0, "ID_SABUN_PRSN", this.dsListStatus.getColumn(this.dsListStatus.rowposition, "ID_SABUN"));
	this.dsSelectBgvdprsn.setColumn(0, "CD_RTNG_TYPE" , this.dsSearch.getColumn(0, "CD_RTNG_TYPE"));
	this.dsSelectBgvdprsn.setColumn(0, "TY_PTCP"	  , this.dsSearch.getColumn(0, "TY_PTCP"));
	
	var strSvcId    = "select_bgvdprsn";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select_bgvdprsn=dsSelectBgvdprsn"
	var outData     = "dsListSub=select_bgvdprsn0"
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction(strSvcId,		// transaction을 구분하기 위한 svc id값
						strSvcType, 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData, 		// 입력값으로 보낼 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						outData, 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc);	// 통신방법 정의 [생략가능]
}
/*
 * 입력 버튼
 */
this.fnAdd = function() {
	
}

/*
 * 삭제 버튼
 */
this.fnDel = function() {
	
}

/*
 * 저장 버튼
 */
this.fnSave = function() {
	
}

/*
 * 엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 * 출력 버튼
 */
this.fnPrint = function() {
	
}

/************************************************************************
 * Validate
 ************************************************************************/
this.fnSelectValidate = function() {
	return true;
}

/************************************************************************
 * 확장버튼 이벤트
 ************************************************************************/

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 * 기본 콜백
 */
this.fnCallback = function(svcID, errorCode, errorMsg, strArg) {
	if (errorCode != 0) {
		this.gfnAlert(errorMsg);
		return;
	}
	
	if (svcID == "select_status") {
		this.gfnGridAfterSelect(this.dxGrid);
		this.dxGrid.selectRow(0, true);
		this.gfnGridClear(this.dxGridSub);
	} else if (svcID == "select_bgvdprsn") {
		if (this.dsListSub.rowcount > 1) {
 			this.btnSms.set_enable(true);
 			this.btnEmail.set_enable(true);
 			this.btnHistory.set_enable(true);			
		}
	} else if (svcID == "send_sms") {
		this.FormBtns.Select.click();
	} else if (svcID == "send_email") {
		this.FormBtns.Select.click();
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if (id == "ccfCD_CORP") {
		dsUserParam.setColumn(nrow, "CD_CORP"  , this.AuthClient.CD_CORP);
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "ID_USER"  , this.AuthClient.ID_USER);
	} else if (id == "ccfID_RTNG") {
		dsUserParam.setColumn(nrow, "CD_CORP"     , this.dsSearch.getColumn(0, "CD_CORP"));
		dsUserParam.setColumn(nrow, "YR_RTNG"     , this.dsSearch.getColumn(0, "YR_RTNG"));
		dsUserParam.setColumn(nrow, "CD_RTNG_TYPE", "JA");
		dsUserParam.setColumn(nrow, "ID_SCREEN"   , "DAJ_RTNG_RSLT_STATUS");
		dsUserParam.setColumn(nrow, "CD_ROLE"     , this.AuthClient.CD_ROLE);
	}
	
	return true;
}

this.fnAfterCDTextChanged = function(id, codeFindData) {
	if (codeFindData[0] == undefined) {
		return;
	}
	
	if (id == "ccfID_RTNG") {
		this.dsSearch.setColumn(0, "CD_RTNG_TYPE"    , codeFindData[0]["CD_RTNG_TYPE"]);
		this.dsSearch.setColumn(0, "DS_RTNG_TYPE"    , codeFindData[0]["DS_RTNG_TYPE"]);
		this.dsSearch.setColumn(0, "DT_RTNG_BEGN"    , codeFindData[0]["DT_RTNG_BEGN"]);
		this.dsSearch.setColumn(0, "DT_RTNG_END"     , codeFindData[0]["DT_RTNG_END"]);
		this.dsSearch.setColumn(0, "DT_RTNG_STD"     , codeFindData[0]["DT_RTNG_STD"]);
		this.dsSearch.setColumn(0, "CD_RTNG_ASBLNEXT", codeFindData[0]["CD_RTNG_ASBLNEXT"]);
		this.dsSearch.setColumn(0, "DS_RTNG_ASBLNEXT", codeFindData[0]["DS_RTNG_ASBLNEXT"]);
		this.dsSearch.setColumn(0, "TY_PTCP"		 , codeFindData[0]["TY_PTCP"]);
		this.dsSearch.setColumn(0, "DS_PTCP"		 , codeFindData[0]["DS_PTCP"]);
		
		this.dsTY_STATUS.clearData();
		console.log('codeFindData[0]', codeFindData[0]);
		// 동료다면평가
		if (codeFindData[0]["CD_RTNG_TYPE"] == "JA01") {		
			this.dxGrid.set_enableredraw(false);
			
			if (codeFindData[0]["TY_PTCP"] == "P") {
				this.divData.form.divDataTop.form.sta01.set_text("평가자 관리");
				this.divData.form.divDataBottom.form.sta02.set_text("피평가자 관리");		
				this.dxGrid.setCellProperty("head", 19, "text", "피평가자수");	
				this.dxGrid.setCellProperty("head", 21, "text", "검토전");
				this.dxGrid.setCellProperty("head", 22, "text", "검토중");
				this.dxGrid.setCellProperty("head", 24, "text", "검토완료");
				
				this.dsTY_STATUS.addRow();
				this.dsTY_STATUS.setColumn(0, "CD_CODE", "ALL");	
				this.dsTY_STATUS.setColumn(0, "DS_CODE", "전체");	
				this.dsTY_STATUS.addRow();
				this.dsTY_STATUS.setColumn(1, "CD_CODE", "OPEN");	
				this.dsTY_STATUS.setColumn(1, "DS_CODE", "검토전");	
				this.dsTY_STATUS.addRow();
				this.dsTY_STATUS.setColumn(2, "CD_CODE", "RTNG");	
				this.dsTY_STATUS.setColumn(2, "DS_CODE", "검토중");	
				this.dsTY_STATUS.addRow();
				this.dsTY_STATUS.setColumn(3, "CD_CODE", "CPLT");	
				this.dsTY_STATUS.setColumn(3, "DS_CODE", "검토완료");	
			} else {
				this.divData.form.divDataTop.form.sta01.set_text("피평가자 관리");
				this.divData.form.divDataBottom.form.sta02.set_text("평가자 관리");
				this.dxGrid.setCellProperty("head", 19, "text", "평가자수");	
				this.dxGrid.setCellProperty("head", 21, "text", "오픈");
				this.dxGrid.setCellProperty("head", 22, "text", "진행");
				this.dxGrid.setCellProperty("head", 24, "text", "완료");
				
				this.dsTY_STATUS.addRow();
				this.dsTY_STATUS.setColumn(0, "CD_CODE", "ALL");	
				this.dsTY_STATUS.setColumn(0, "DS_CODE", "전체");	
				this.dsTY_STATUS.addRow();
				this.dsTY_STATUS.setColumn(1, "CD_CODE", "OPEN");	
				this.dsTY_STATUS.setColumn(1, "DS_CODE", "오픈");	
				this.dsTY_STATUS.addRow();
				this.dsTY_STATUS.setColumn(2, "CD_CODE", "RTNG");	
				this.dsTY_STATUS.setColumn(2, "DS_CODE", "진행");	
				this.dsTY_STATUS.addRow();
				this.dsTY_STATUS.setColumn(3, "CD_CODE", "CPLT");	
				this.dsTY_STATUS.setColumn(3, "DS_CODE", "완료");
			}		
			this.dxGrid.setFormatColProperty(this.dxGrid.getBindCellIndex("body", "CNT_APPL_YN"), "size", 0);
			this.dxGrid.set_enableredraw(true);
			this.cboTY_STATUS.set_index(0);
		}
		// 리더십평가
		else if (codeFindData[0]["CD_RTNG_TYPE"] == "JA02") {
			this.divData.form.divDataTop.form.sta01.set_text("피평가자 관리");
			this.divData.form.divDataBottom.form.sta02.set_text("평가자 관리");
			this.dxGrid.set_enableredraw(false);
			this.dxGrid.setCellProperty("head", 21, "text", "오픈");
			this.dxGrid.setCellProperty("head", 22, "text", "진행");
			this.dxGrid.setCellProperty("head", 24, "text", "완료");
				
			this.dsTY_STATUS.addRow();
			this.dsTY_STATUS.setColumn(0, "CD_CODE", "ALL");	
			this.dsTY_STATUS.setColumn(0, "DS_CODE", "전체");	
			this.dsTY_STATUS.addRow();
			this.dsTY_STATUS.setColumn(1, "CD_CODE", "OPEN");	
			this.dsTY_STATUS.setColumn(1, "DS_CODE", "오픈");	
			this.dsTY_STATUS.addRow();
			this.dsTY_STATUS.setColumn(2, "CD_CODE", "RTNG");	
			this.dsTY_STATUS.setColumn(2, "DS_CODE", "진행");	
			this.dsTY_STATUS.addRow();
			this.dsTY_STATUS.setColumn(3, "CD_CODE", "CPLT");	
			this.dsTY_STATUS.setColumn(3, "DS_CODE", "완료");
			
			this.dxGrid.setFormatColProperty(this.dxGrid.getBindCellIndex("body", "CNT_APPL_YN"), "size", 0);
			this.dxGrid.set_enableredraw(true);
			this.cboTY_STATUS.set_index(0);
		}
		else {
			//this.sta01.set_text("피평가자/대상자 관리");
			//this.sta02.set_text("평가자/검토자/면답자 관리");
			this.dxGrid.setCellProperty("head", 21, "text", "오픈");
			this.dxGrid.setCellProperty("head", 22, "text", "진행");
			this.dxGrid.setCellProperty("head", 24, "text", "완료");
			this.dxGrid.setFormatColProperty(this.dxGrid.getBindCellIndex("body", "CNT_APPL_YN"), "size", 0);
		}
		this.FormBtns.Select.click();
	}
}

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGridBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	return true;
}

this.fnGridAfterCDTextChanged = function(id, codeFindData) {
	
}

this.fnGridExpandUp = function(obj:nexacro.Grid, e:nexacro.GridMouseEventInfo) {
 	var colnm = this.gfnGridGetBindColumnNameByIndex(obj, e.cell);
	if (colnm == "BTN_DS_SMS") {
		var DS_SMS_TITLE = this.dsListStatus.getColumn(this.dsListStatus.rowposition, "DS_SMS_TITLE");
		var DS_SMS_BODY = this.dsListStatus.getColumn(this.dsListStatus.rowposition, "DS_SMS_BODY");
		if (DS_SMS_BODY != undefined && DS_SMS_BODY.length > 0) {
			var param = {
				DS_TITLE: DS_SMS_TITLE,
				DS_CONTENT: DS_SMS_BODY,
				READONLY: true,
			}
			this.gfnFormOpen(this.FormInfo.CD_MODULE, "DZZ_SMS_SENDER", "fnSendSMS_readonly", param);
		}
	} else if (colnm == "BTN_DS_EMAIL") {		
		var DS_EMAIL_TITLE = this.dsListStatus.getColumn(this.dsListStatus.rowposition, "DS_EMAIL_TITLE");
		var DS_EMAIL_BODY = this.dsListStatus.getColumn(this.dsListStatus.rowposition, "DS_EMAIL_BODY");
		if (DS_EMAIL_BODY != undefined && DS_EMAIL_BODY.length > 0) {
			var param = {
				DS_TITLE: DS_EMAIL_TITLE,
				DS_CONTENT: DS_EMAIL_BODY,
				READONLY: true,
			}
			this.gfnFormOpen(this.FormInfo.CD_MODULE, "DZZ_EMAIL_SENDER", "fnSendSMS_readonly", param);
		}
	}
}

this.fnGridSubExpandUp = function(obj:nexacro.Grid, e:nexacro.GridMouseEventInfo) {
 	var colnm = this.gfnGridGetBindColumnNameByIndex(obj, e.cell);
	if (colnm == "BTN_DS_SMS") {
		var DS_SMS_TITLE = this.dsListSub.getColumn(this.dsListSub.rowposition, "DS_SMS_TITLE");
		var DS_SMS_BODY = this.dsListSub.getColumn(this.dsListSub.rowposition, "DS_SMS_BODY");
		if (DS_SMS_BODY != undefined && DS_SMS_BODY.length > 0) {
			var param = {
				DS_TITLE: DS_SMS_TITLE,
				DS_CONTENT: DS_SMS_BODY,
				READONLY: true,
			}
			this.gfnFormOpen(this.FormInfo.CD_MODULE, "DZZ_SMS_SENDER", "fnSendSMS_readonly", param);
		}
	} else if (colnm == "BTN_DS_EMAIL") {		
		var DS_EMAIL_TITLE = this.dsListSub.getColumn(this.dsListSub.rowposition, "DS_EMAIL_TITLE");
		var DS_EMAIL_BODY = this.dsListSub.getColumn(this.dsListSub.rowposition, "DS_EMAIL_BODY");
		if (DS_EMAIL_BODY != undefined && DS_EMAIL_BODY.length > 0) {
			var param = {
				DS_TITLE: DS_EMAIL_TITLE,
				DS_CONTENT: DS_EMAIL_BODY,
				READONLY: true,
			}
			this.gfnFormOpen(this.FormInfo.CD_MODULE, "DZZ_EMAIL_SENDER", "fnSendSMS_readonly", param);
		}
	}
}

this.fnSendSMS_readonly = function() {
	
}

// 대상자 그리드 클릭 이벤트
this.fnGridCellPosChanged = function(obj:nexacro.Grid, e:nexacro.GridSelectEventInfo) {
	if (e.row != -1 && e.oldrow != e.row) {
		this.fnSelectBgvdprsn();
	}
}
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo) {
	if (e.oldvalue != e.newvalue) {
		if (e.columnid == "YR_RTNG") {
			this.dsSearch.setColumn(0,"ID_RTNG","");
			this.dsSearch.setColumn(0,"DS_RTNG","");
			this.dsSearch.setColumn(0,"CD_RTNG_TYPE","");
			this.dsSearch.setColumn(0,"DS_RTNG_TYPE","");
			this.dsSearch.setColumn(0,"DT_RTNG_BEGN","");
			this.dsSearch.setColumn(0,"DT_RTNG_END","");
			this.dsSearch.setColumn(0,"DT_RTNG_STD","");
			this.dsSearch.setColumn(0,"CD_RTNG_ASBLNEXT","");
			this.dsSearch.setColumn(0,"DS_RTNG_ASBLNEXT","");
		} 
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);
		this.gfnGridClear(this.dxGridSub);
	}
}

this.divData_ondragmove = function(obj:nexacro.Div,e:nexacro.DragEventInfo) {
	if (e.userdata == "splitter") {
		this.divData.form.divSplitter.set_top(e.clienty);
		this.divData.form.resetScroll();	
	}
}

this.divData_divSplitter_ondrag = function(obj:nexacro.Div, e:nexacro.DragEventInfo) {
	e.set_userdata("splitter");
	return true;
}

// 메시지 전송 버튼
this.fnSendSMS = function() {
	this.dsListStatus.set_enableevent(false);
	this.dsListStatus.filter("CHK == 1");
	if (this.dsListStatus.rowcount == 0) {
		this.gfnAlert("문자 발송 대상자를 선택하십시오.");
		this.dsListStatus.filter("");
		this.dsListStatus.set_enableevent(true);
		return;
	}
	this.dsListStatus.filter("");
	this.dsListStatus.set_enableevent(true);
	
	var param = {
		DS_TITLE: "",
		DS_CONTENT: "",
		READONLY: false,
	}
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DZZ_SMS_SENDER", "fnSendSMS_callback", param);
}

this.fnSendSMS_callback = function(svcID, value) {
	if (value != undefined) {
		var result = JSON.parse(value);
		if (result.CONTINUE) {
			this.dsSendSmsEmailUpdate.clearData();
			this.dsListStatus.set_enableevent(false);
			this.dsListStatus.filter("CHK == 1");
			for (var i = 0; i < this.dsListStatus.rowcount; i++) {
				var nrow = this.dsSendSmsEmailUpdate.addRow();
				var DS_SMS_TITLE = result.DS_TITLE
				var DS_SMS_BODY = "[" + this.AuthClient.DS_HNAME + ":" + this.UserInfo.DS_HANDPHONE + "]\n" + result.DS_CONTENT;
				
				this.dsSendSmsEmailUpdate.setColumn(nrow, "CD_CORP"      , this.dsSearch.getColumn(0, "CD_CORP"));
				this.dsSendSmsEmailUpdate.setColumn(nrow, "ID_SABUN"	 , this.dsListStatus.getColumn(i, "ID_SABUN"));
				this.dsSendSmsEmailUpdate.setColumn(nrow, "DS_TITLE" 	 , DS_SMS_TITLE);
				this.dsSendSmsEmailUpdate.setColumn(nrow, "DS_BODY"  	 , DS_SMS_BODY);
				this.dsSendSmsEmailUpdate.setColumn(nrow, "ID_SENDER"	 , this.AuthClient.ID_SABUN);
				this.dsSendSmsEmailUpdate.setColumn(nrow, "TY_GUBUN"     , "S");	// S : SMS, M : MAIL
				this.dsSendSmsEmailUpdate.setColumn(nrow, "TY_TYPE"      , this.dsSearch.getColumn(0, "CD_RTNG_TYPE"));
				this.dsSendSmsEmailUpdate.setColumn(nrow, "PARAM1"       , this.dsSearch.getColumn(0, "CD_CORP"));
				this.dsSendSmsEmailUpdate.setColumn(nrow, "PARAM2"       , this.AuthClient.ID_SABUN);
				this.dsSendSmsEmailUpdate.setColumn(nrow, "PARAM3" 	 	 , this.dsListStatus.getColumn(i, "ID_RTNG"));	//this.dsSearch.getColumn(0, "TY_TARGET"));	// B : 피평가자, R : 평가자
				this.dsSendSmsEmailUpdate.setColumn(nrow, "PARAM4"     	 , this.dsListStatus.getColumn(i, "ID_SABUN"));	// 
				this.dsSendSmsEmailUpdate.setColumn(nrow, "PARAM5"     	 , "03");	// 
			}
			this.dsListStatus.filter("");
			this.dsListStatus.set_enableevent(true);
			
			if (this.dsSendSmsEmailUpdate.rowcount == 0) return;
			
			var strSvcId    = "send_sms_email";
			var strSvcType  = "save";
			var inProc		= "_dsProc";
			var inData      = "send_sms_email=dsSendSmsEmailUpdate";
			var outData     = "";
			var strArg      = "";
			var callBackFnc = "fnCallback";
			
			this.gfnTransaction(strSvcId,		// transaction을 구분하기 위한 svc id값
								strSvcType, 	// transaction을 요청할 구분
								inProc,			// Procedure 정보 Dataset 이름
								inData, 		// 입력값으로 보낼 dataset id, a=b형태로 실제이름과 입력이름을 매칭
								outData, 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
								strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
								callBackFnc);	// 통신방법 정의 [생략가능]
		}
	}
}

// 메일 발송 버튼
this.fnSendEmail = function() {
	this.dsListStatus.set_enableevent(false);
	this.dsListStatus.filter("CHK == 1");
	if (this.dsListStatus.rowcount == 0) {
		this.gfnAlert("메일 발송 대상 평가자를 선택하십시오.");
		this.dsListStatus.filter("");
		this.dsListStatus.set_enableevent(true);
		return;
	}
	this.dsListStatus.filter("");
	this.dsListStatus.set_enableevent(true);
	
	var param = {
		DS_TITLE: "",
		DS_CONTENT: "",
		READONLY: false,
	}
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DZZ_EMAIL_SENDER", "fnSendEmail_callback", param);
}

this.fnSendEmail_callback = function(svcID, value) {
	if (value != undefined) {
		var result = JSON.parse(value);
		if (result.CONTINUE) {
			this.dsSendSmsEmailUpdate.clearData();
			this.dsListStatus.set_enableevent(false);
			this.dsListStatus.filter("CHK == 1");
			for (var i = 0; i < this.dsListStatus.rowcount; i++) {
				var nrow = this.dsSendSmsEmailUpdate.addRow();
				var DS_EMAIL_TITLE = result.DS_TITLE
				var DS_EMAIL_BODY = result.DS_CONTENT;
				
				this.dsSendSmsEmailUpdate.setColumn(nrow, "CD_CORP"      , this.dsSearch.getColumn(0, "CD_CORP"));
				this.dsSendSmsEmailUpdate.setColumn(nrow, "ID_SABUN"	 , this.dsListStatus.getColumn(i, "ID_SABUN"));
				this.dsSendSmsEmailUpdate.setColumn(nrow, "DS_TITLE" 	 , DS_EMAIL_TITLE);
				this.dsSendSmsEmailUpdate.setColumn(nrow, "DS_BODY"  	 , DS_EMAIL_BODY);
				this.dsSendSmsEmailUpdate.setColumn(nrow, "ID_SENDER"	 , this.AuthClient.ID_SABUN);
				this.dsSendSmsEmailUpdate.setColumn(nrow, "TY_GUBUN"     , "M");	// S : SMS, M : MAIL
				this.dsSendSmsEmailUpdate.setColumn(nrow, "TY_TYPE"      , this.dsSearch.getColumn(0, "CD_RTNG_TYPE"));
				this.dsSendSmsEmailUpdate.setColumn(nrow, "PARAM1"       , this.dsSearch.getColumn(0, "CD_CORP"));
				this.dsSendSmsEmailUpdate.setColumn(nrow, "PARAM2"       , this.AuthClient.ID_SABUN);
				this.dsSendSmsEmailUpdate.setColumn(nrow, "PARAM3" 	 	 , this.dsListStatus.getColumn(i, "ID_RTNG"));	//this.dsSearch.getColumn(0, "TY_TARGET"));	// B : 피평가자, R : 평가자
				this.dsSendSmsEmailUpdate.setColumn(nrow, "PARAM4"     	 , this.dsListStatus.getColumn(i, "ID_SABUN"));
				this.dsSendSmsEmailUpdate.setColumn(nrow, "PARAM5"     	 , "03");
			}
			this.dsListStatus.filter("");
			this.dsListStatus.set_enableevent(true);
			
			if (this.dsSendSmsEmailUpdate.rowcount == 0) return;
			
			var strSvcId    = "send_sms_email";
			var strSvcType  = "save";
			var inProc		= "_dsProc";
			var inData      = "send_sms_email=dsSendSmsEmailUpdate";
			var outData     = "";
			var strArg      = "";
			var callBackFnc = "fnCallback";
			
			this.gfnTransaction(strSvcId,		// transaction을 구분하기 위한 svc id값
								strSvcType, 	// transaction을 요청할 구분
								inProc,			// Procedure 정보 Dataset 이름
								inData, 		// 입력값으로 보낼 dataset id, a=b형태로 실제이름과 입력이름을 매칭
								outData, 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
								strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
								callBackFnc);	// 통신방법 정의 [생략가능]
		}
	}
	
// 	if (value != undefined) {
// 		var result = JSON.parse(value);
// 		if (result.CONTINUE) {
// 			this.FormBtns.Select.click();
// 		}
// 	}
}

// 피평가자 메시지 전송 버튼
this.btnSms_onclick = function() {
	this.dsListSub.set_enableevent(false);
	this.dsListSub.filter("CHK == 1");
	if (this.dsListSub.rowcount == 0) {
		this.gfnAlert("메시지 전송 대상자를 선택하십시오.");
		this.dsListSub.filter("");
		this.dsListSub.set_enableevent(true);
		return;
	}
	this.dsListSub.filter("");
	this.dsListSub.set_enableevent(true);
	
	var param = {
		DS_TITLE: "",
		DS_CONTENT: "",
		READONLY: false,
	}
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DZZ_SMS_SENDER", "fnSubSendSMS_callback", param);
}

this.fnSubSendSMS_callback = function(svcID, value) {
	if (value != undefined) {
		var result = JSON.parse(value);
		if (result.CONTINUE) {
			this.dsSendSmsEmailUpdate.clearData();
			this.dsListSub.set_enableevent(false);
			this.dsListSub.filter("CHK == 1");
			for (var i = 0; i < this.dsListSub.rowcount; i++) {
				var nrow = this.dsSendSmsEmailUpdate.addRow();
				var DS_SMS_TITLE = result.DS_TITLE
				var DS_SMS_BODY = "[" + this.AuthClient.DS_HNAME + ":" + this.UserInfo.DS_HANDPHONE + "]\n" + result.DS_CONTENT;
				
				this.dsSendSmsEmailUpdate.setColumn(nrow, "CD_CORP"      , this.dsSearch.getColumn(0, "CD_CORP"));
				this.dsSendSmsEmailUpdate.setColumn(nrow, "ID_SABUN"	 , this.dsListSub.getColumn(i, "ID_CPNYDUTY"));
				this.dsSendSmsEmailUpdate.setColumn(nrow, "DS_TITLE" 	 , DS_SMS_TITLE);
				this.dsSendSmsEmailUpdate.setColumn(nrow, "DS_BODY"  	 , DS_SMS_BODY);
				this.dsSendSmsEmailUpdate.setColumn(nrow, "ID_SENDER"	 , this.AuthClient.ID_SABUN);
				this.dsSendSmsEmailUpdate.setColumn(nrow, "TY_GUBUN"     , "S");	// S : SMS, M : MAIL
				this.dsSendSmsEmailUpdate.setColumn(nrow, "TY_TYPE"      , this.dsSearch.getColumn(0, "CD_RTNG_TYPE"));
				this.dsSendSmsEmailUpdate.setColumn(nrow, "PARAM1"       , this.dsSearch.getColumn(0, "CD_CORP"));
				this.dsSendSmsEmailUpdate.setColumn(nrow, "PARAM2"       , this.AuthClient.ID_SABUN);
				this.dsSendSmsEmailUpdate.setColumn(nrow, "PARAM3" 	 	 , this.dsListSub.getColumn(i, "ID_RTNG"));	//this.dsSearch.getColumn(0, "TY_TARGET"));	// B : 피평가자, R : 평가자
				this.dsSendSmsEmailUpdate.setColumn(nrow, "PARAM4"     	 , this.dsListSub.getColumn(i, "ID_CPNYDUTY"));
				this.dsSendSmsEmailUpdate.setColumn(nrow, "PARAM5"     	 , "04");	// 
			}
			this.dsListSub.filter("");
			this.dsListSub.set_enableevent(true);
			
			if (this.dsSendSmsEmailUpdate.rowcount == 0) return;
			
			var strSvcId    = "send_sms_email";
			var strSvcType  = "save";
			var inProc		= "_dsProc";
			var inData      = "send_sms_email=dsSendSmsEmailUpdate";
			var outData     = "";
			var strArg      = "";
			var callBackFnc = "fnCallback";
			
			this.gfnTransaction(strSvcId,		// transaction을 구분하기 위한 svc id값
								strSvcType, 	// transaction을 요청할 구분
								inProc,			// Procedure 정보 Dataset 이름
								inData, 		// 입력값으로 보낼 dataset id, a=b형태로 실제이름과 입력이름을 매칭
								outData, 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
								strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
								callBackFnc);	// 통신방법 정의 [생략가능]
		}
	}
}

// 피평가자 메일 발송 버튼
this.btnEmail_onclick = function() {
	this.dsListSub.set_enableevent(false);
	this.dsListSub.filter("CHK == 1");
	if (this.dsListSub.rowcount == 0) {
		this.gfnAlert("메일 발송 대상자를 선택하십시오.");
		this.dsListSub.filter("");
		this.dsListSub.set_enableevent(true);
		return;
	}
	this.dsListSub.filter("");
	this.dsListSub.set_enableevent(true);
	
	var param = {
		DS_TITLE: "",
		DS_CONTENT: "",
		READONLY: false,
	}
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DZZ_EMAIL_SENDER", "fnSubSendEmail_callback", param);
}

this.fnSubSendEmail_callback = function(svcID, value) {
	if (value != undefined) {
		var result = JSON.parse(value);
		if (result.CONTINUE) {
			this.dsSendSmsEmailUpdate.clearData();
			this.dsListSub.set_enableevent(false);
			this.dsListSub.filter("CHK == 1");
			for (var i = 0; i < this.dsListSub.rowcount; i++) {
				var nrow = this.dsSendSmsEmailUpdate.addRow();
				var DS_EMAIL_TITLE = result.DS_TITLE
				var DS_EMAIL_BODY = result.DS_CONTENT;
				
				this.dsSendSmsEmailUpdate.setColumn(nrow, "CD_CORP"      , this.dsSearch.getColumn(0, "CD_CORP"));
				this.dsSendSmsEmailUpdate.setColumn(nrow, "ID_SABUN"	 , this.dsListSub.getColumn(i, "ID_CPNYDUTY"));
				this.dsSendSmsEmailUpdate.setColumn(nrow, "DS_TITLE" 	 , DS_EMAIL_TITLE);
				this.dsSendSmsEmailUpdate.setColumn(nrow, "DS_BODY"  	 , DS_EMAIL_BODY);
				this.dsSendSmsEmailUpdate.setColumn(nrow, "ID_SENDER"	 , this.AuthClient.ID_SABUN);
				this.dsSendSmsEmailUpdate.setColumn(nrow, "TY_GUBUN"     , "M");	// S : SMS, M : MAIL
				this.dsSendSmsEmailUpdate.setColumn(nrow, "TY_TYPE"      , this.dsSearch.getColumn(0, "CD_RTNG_TYPE"));
				this.dsSendSmsEmailUpdate.setColumn(nrow, "PARAM1"       , this.dsSearch.getColumn(0, "CD_CORP"));
				this.dsSendSmsEmailUpdate.setColumn(nrow, "PARAM2"       , this.AuthClient.ID_SABUN);
				this.dsSendSmsEmailUpdate.setColumn(nrow, "PARAM3" 	 	 , this.dsListSub.getColumn(i, "ID_RTNG"));	//this.dsSearch.getColumn(0, "TY_TARGET"));	// B : 피평가자, R : 평가자
				this.dsSendSmsEmailUpdate.setColumn(nrow, "PARAM4"     	 , this.dsListSub.getColumn(i, "ID_CPNYDUTY"));
				this.dsSendSmsEmailUpdate.setColumn(nrow, "PARAM5"     	 , "04");
			}
			this.dsListSub.filter("");
			this.dsListSub.set_enableevent(true);
			
			if (this.dsSendSmsEmailUpdate.rowcount == 0) return;
			
			var strSvcId    = "send_sms_email";
			var strSvcType  = "save";
			var inProc		= "_dsProc";
			var inData      = "send_sms_email=dsSendSmsEmailUpdate";
			var outData     = "";
			var strArg      = "";
			var callBackFnc = "fnCallback";
			
			this.gfnTransaction(strSvcId,		// transaction을 구분하기 위한 svc id값
								strSvcType, 	// transaction을 요청할 구분
								inProc,			// Procedure 정보 Dataset 이름
								inData, 		// 입력값으로 보낼 dataset id, a=b형태로 실제이름과 입력이름을 매칭
								outData, 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
								strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
								callBackFnc);	// 통신방법 정의 [생략가능]
		}
	}
}

// SMS/EMAIL 전송 이력 조회
this.fnSendHistory = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	var param = {};	
	param.CD_CORP = this.dsSearch.getColumn(0, "CD_CORP");
	param.ID_SABUN = this.dsListStatus.getColumn(this.dsListStatus.rowposition, "ID_SABUN");
	param.DS_HNAME = this.dsListStatus.getColumn(this.dsListStatus.rowposition, "DS_HNAME");
	param.TY_GUBUN = "";
	param.TY_TYPE = this.dsSearch.getColumn(0, "CD_RTNG_TYPE");
	param.PARAM1 = this.dsListStatus.getColumn(this.dsListStatus.rowposition, "ID_RTNG");
	param.PARAM2 = "";
	param.PARAM3 = "";
	param.PARAM4 = "";
	param.PARAM5 = "";
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DZZ_SMS_EMAIL_HISTORY", "", param);
}

// SMS/EMAIL 전송 이력 조회
this.btnHistory_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	var param = {};	
	param.CD_CORP = this.dsSearch.getColumn(0, "CD_CORP");
	param.ID_SABUN = this.dsListSub.getColumn(this.dsListSub.rowposition, "ID_CPNYDUTY");
	param.DS_HNAME = this.dsListSub.getColumn(this.dsListSub.rowposition, "DS_HNAME");
	param.TY_GUBUN = "";
	param.TY_TYPE = this.dsSearch.getColumn(0, "CD_RTNG_TYPE");
	param.PARAM1 = this.dsListSub.getColumn(this.dsListSub.rowposition, "ID_RTNG");
	param.PARAM2 = "";
	param.PARAM3 = "";
	param.PARAM4 = "";
	param.PARAM5 = "";
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DZZ_SMS_EMAIL_HISTORY", "", param);
}]]></Script>
    <Objects>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select_status</Col>
            <Col id="SP">DAJPR_RTNG_RSLT_STATUS_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">select_bgvdprsn</Col>
            <Col id="SP">DAJPR_RTNG_RSLT_STATUS_SUB_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">send_sms_email</Col>
            <Col id="SP">DZZPR_SMS_EMAIL_SEND</Col>
          </Row>
          <!--
          <Row>
            <Col id="TARGET">send_sms</Col>
            <Col id="SP">DZZPR_SMS_SEND</Col>
          </Row>
          <Row>
            <Col id="TARGET">update_sms</Col>
            <Col id="SP">DAJPR_RTNG_RSLT_STATUS_SMS_UPDATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">send_email</Col>
            <Col id="SP">DZZPR_MAIL_SEND</Col>
          </Row>
          <Row>
            <Col id="TARGET">update_email</Col>
            <Col id="SP">DZZPR_RTNG_MAIL_SMS_CHARGE_INFO_UPDATE</Col>
          </Row>
-->
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="DS_CORP" type="STRING" size="256"/>
          <Column id="YR_RTNG" type="STRING" size="256"/>
          <Column id="ID_RTNG" type="STRING" size="256"/>
          <Column id="DS_RTNG" type="STRING" size="256"/>
          <Column id="CD_RTNG_TYPE" type="STRING" size="256"/>
          <Column id="DS_RTNG_TYPE" type="STRING" size="256"/>
          <Column id="DT_RTNG_BEGN" type="STRING" size="256"/>
          <Column id="DT_RTNG_END" type="STRING" size="256"/>
          <Column id="DT_RTNG_STD" type="STRING" size="256"/>
          <Column id="CD_RTNG_ASBLNEXT" type="STRING" size="256"/>
          <Column id="DS_RTNG_ASBLNEXT" type="STRING" size="256"/>
          <Column id="TY_PTCP" type="STRING" size="256"/>
          <Column id="DS_PTCP" type="STRING" size="256"/>
          <Column id="TY_STATUS" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CORP"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsListStatus" onvaluechanged="dsList_onvaluechanged"/>
      <Dataset id="dsListSub"/>
      <Dataset id="dsTY_STATUS">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">ALL</Col>
            <Col id="DS_CODE">전체</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">OPEN</Col>
            <Col id="DS_CODE">오픈</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">RTNG</Col>
            <Col id="DS_CODE">진행</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">CPLT</Col>
            <Col id="DS_CODE">완료</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_CORP.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_CORP"/>
      <BindItem id="item2" compid="divSearch.form.ccfYR_RTNG.form.TextBox" propid="value" datasetid="dsSearch" columnid="YR_RTNG"/>
      <BindItem id="item3" compid="divSearch.form.ccfID_RTNG.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="ID_RTNG"/>
      <BindItem id="item4" compid="divSearch.form.ccfID_RTNG.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_RTNG"/>
      <BindItem id="item5" compid="divSearch.form.cboTY_STATUS" propid="value" datasetid="dsSearch" columnid="TY_STATUS"/>
    </Bind>
  </Form>
</FDL>
