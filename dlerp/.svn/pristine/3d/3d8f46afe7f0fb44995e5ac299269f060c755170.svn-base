<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="DHA_DIVERT_SLIP_DLG" width="1280" height="750" titletext="변경예산관리(등록)" onload="form_onload">
    <Layouts>
      <Layout>
        <Static id="staTitle" taborder="3" text="변경예산" left="0" top="10" height="22" cssclass="sta_TITLE_Bg" right="0"/>
        <Div id="divSearch" taborder="0" left="0.0" top="staTitle:10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="sta00" taborder="0" text="회계년도" left="0" top="10.0" width="92" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYR_ACCOUNT" taborder="1" left="sta00:0.0" top="10.0" width="60" height="24.0" url="cmm::cmmCalYY.xfdl"/>
              <Static id="staCD_DEPTOFFICER" taborder="5" text="귀속부서" left="ctclYR_ACCOUNT:0.0" top="10.0" width="92" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_DEPTOFFICER" CodeFindName="DHX_CFDEPTOFFICER" CDTextWidth="70" taborder="7" left="staCD_DEPTOFFICER:0.0" top="10.0" width="300" height="24.0" url="cmm::cmmCodeFind.xfdl" enable="false"/>
              <Static id="staYN_DEPT" taborder="2" text="부서/임원" left="ccfCD_DEPTOFFICER:0.0" top="10.0" width="105.0" height="24.0" visible="false" cssclass="sta_WF_SchLabel"/>
              <Combo id="ccboYN_DEPT" taborder="3" left="staYN_DEPT:0.0" top="10.0" width="100" height="24.0" innerdataset="dsYN_DEPT" codecolumn="CD_CODE" datacolumn="DS_CODE" visible="false"/>
              <Static id="staCD_DEPTGROUP1" taborder="4" text="부서1레벨" left="ccboYN_DEPT:0.0" top="10.0" width="105" height="24.0" visible="false" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_DEPTGROUP1" CodeFindName="DHX_CFDEPTGROUP1" CDTextWidth="70" taborder="6" left="staCD_DEPTGROUP1:0.0" top="10.0" width="300" height="24.0" url="cmm::cmmCodeFind.xfdl" visible="false"/>
              <Button id="btnSearch" taborder="8" text="조회" top="10.0" height="24.0" onclick="btnSearch_onclick" right="20" width="40"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="45" cssclass="div_DATA_Bg" text="" right="5">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0" oncelldblclick="divData_objGrid_oncelldblclick"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divBottom" taborder="2" left="0" top="divData:5" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Button id="btnConf" taborder="0" text="확인" left="45%" width="69" height="27" onclick="btnConf_onclick" bottom="7"/>
              <Button id="btnCancel" taborder="1" text="취소" left="btnConf:10" width="69" height="27" onclick="btnCancel_onclick" bottom="7"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();

	//this.dsSearch.setColumn(0, "YR_ACCOUNT", this.gfnGetDate().substr(0, 4));
	this.dsSearch.setColumn(0, "YR_ACCOUNT", this.getOwnerFrame().YR_ACCOUNT);
	this.dsSearch.setColumn(0, "YN_DEPT", "Y");

	this.ccfCD_DEPTOFFICER.form.CDTextBox.set_value(this.getOwnerFrame().CD_DEPTOFFICER);
	this.ccfCD_DEPTOFFICER.form.DSTextBox.set_value(this.getOwnerFrame().DS_DEPTOFFICER); 
	//this.ccfCD_DEPTOFFICER.set_enable(this.bSuperUser);

	//조회처리
	this.divSearch.form.btnSearch.click();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {

};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ctclYR_ACCOUNT = this.divSearch.form.ctclYR_ACCOUNT;
	this.ccboYN_DEPT = this.divSearch.form.ccboYN_DEPT;
	this.ccfCD_DEPTGROUP1 = this.divSearch.form.ccfCD_DEPTGROUP1;
	this.ccfCD_DEPTOFFICER = this.divSearch.form.ccfCD_DEPTOFFICER;
	
	this.sta04 = this.divSearch.form.sta04;
	
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.gfnGridInit(this.dxGrid, this.dsList, "DH", "DIQ_DIVERT_SLIP");

	this.dxGrid.addEventHandler("onselectchanged", this.fnGrid_RowCellChanged, this);
	
	this.dxGrid.setCellProperty("body", this.dxGrid.getBindCellIndex("body","DS_DEPTOFFICER"), "text","expr:DS_DEPTOFFICER==null?'소계':DS_DEPTOFFICER");
	
	this.ccfCD_DEPTGROUP1.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_DEPTOFFICER.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	this.ccfCD_DEPTGROUP1.AfterCDTextChanged = "fnAfterCDTextChanged";
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("YR_ACCOUNT", "string");
	this.dsSelect.addColumn("YN_DEPT", "string");
	this.dsSelect.addColumn("CD_DEPTOFFICER", "string");
	this.dsSelect.addColumn("CD_PROJECT", "string");
	this.dsSelect.addColumn("CD_BIMOK", "string");
	this.dsSelect.addColumn("CD_SEMOK", "string");

	//리턴 데이터셋
 	this.dsResult = new Dataset();
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "YR_ACCOUNT", this.dsSearch.getColumn(0, "YR_ACCOUNT"));
	this.dsSelect.setColumn(0, "YN_DEPT", this.dsSearch.getColumn(0, "YN_DEPT"));
	this.dsSelect.setColumn(0, "CD_DEPTOFFICER", this.dsSearch.getColumn(0, "CD_DEPTOFFICER"));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction(strSvcId, 		// transaction을 구분하기 위한 svc id값
						strSvcType, 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData, 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData, 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
};

/*
 *	삭제 버튼
 */
this.fnDel = function() {
};

/*
 *	저장 버튼
 */
this.fnSave = function() {
};

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "YR_ACCOUNT"))) {
		this.fnVaidateCallback = function() {
			this.ctclYR_ACCOUNT.form.TextBox.setFocus();
		}
		this.gfnAlert("회계년도는 반드시 입력 하셔야 합니다.", "fnVaidateCallback");
		validate = false;
	}
	
	if (this.FormInfo.GR_SEARCH != "1" && this.gfnIsNull(this.dsSearch.getColumn(0, "CD_DEPTOFFICER"))) {
		this.fnVaidateCallback = function() {
			this.ccfCD_DEPTOFFICER.form.TextBox.setFocus();
		}
		this.gfnAlert(this.sta04.text + "는 반드시 입력 하셔야 합니다.", "fnVaidateCallback");
		validate = false;
	}
	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg) {
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if (id == "ccfCD_DEPTGROUP1") {
		if (this.gfnIsNull(this.dsSearch.getColumn(0, "YR_ACCOUNT"))) {
			this.gfnAlert("년도를 먼저 입력하세요.");
			return false;
		}
		dsUserParam.setColumn(nrow, "YR_ACCOUNT", this.dsSearch.getColumn(0, "YR_ACCOUNT"));
	}
	else if (id == "ccfCD_DEPTOFFICER") {
		if (this.gfnIsNull(this.dsSearch.getColumn(0, "YR_ACCOUNT"))) {
			this.gfnAlert("년도를 먼저 입력하세요.");
			return false;
		}
		var strLV = "";
		if (this.FormInfo.ID_GROUP == "S") {
			strLV = "1";
		}
		else {
			strLV = this.FormInfo.GR_SEARCH;
		}
		
		dsUserParam.setColumn(nrow, "YR_ACCOUNT", this.dsSearch.getColumn(0, "YR_ACCOUNT"));
		dsUserParam.setColumn(nrow, "YN_DEPT", this.dsSearch.getColumn(0, "YN_DEPT"));
		dsUserParam.setColumn(nrow, "LV_DEPT", strLV);
		dsUserParam.setColumn(nrow, "LEVCD_DEPT_ACNT", this.UserInfo.DH_CD_BUDGETCTL_DEPT);
		dsUserParam.setColumn(nrow, "CD_GROUP1", this.dsSearch.getColumn(0, "CD_DEPTGROUP1"));
	}
	return true;
};

this.fnAfterCDTextChanged = function(id, codeFindData) {
	var arr = codeFindData; 
	switch(id){
		case "ccfCD_DEPTGROUP1":
			this.dsSearch.setColumn(0, "CD_DEPTOFFICER", "");
			this.dsSearch.setColumn(0, "DS_DEPTOFFICER", "");
			break;
	}
}

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGrid_RowCellChanged = function(obj:nexacro.Grid,e:nexacro.GridSelectEventInfo) {
    if ((obj.oldrow > -1 && obj.oldrow == e.row)
		|| (obj.oldrow == -1 && e.oldrow != e.row)) {
	}
};

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
 //조회버튼 클릭
this.btnSearch_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.fnSelect();
};

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo) {
	if (e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);
	}
};

// 확인
this.btnConf_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if(this.dsList.findRowExprNF("CHK == '1' && "+this.ucFlag+" != '#'") == -1 ){
		this.gfnAlert("선택된 항목이 없습니다.");
		return;
	}
	
	this.dsResult.clearData();
	
	this.dsResult.set_enableevent(false);
	
	//컬럼/데이터 복사
	this.dsResult.assign(this.dsList);

	var arrDel = [];
 	for(var i =0;i<this.dsResult.getRowCountNF();i++){
		this.dsResult.setColumnNF(i, this.ucFlag, "I");
		//미선택/필터 로우 제외
 		if(this.dsList.getColumnNF(i, "CHK") != "1" || this.dsList.getColumnNF(i, this.ucFlag) == "#"){
			arrDel[arrDel.length] = i;
 		}
 	}
	
	//미선택 데이터 삭제
	this.dsResult.deleteMultiRows(arrDel);
	
	this.dsResult.set_enableevent(true);
	
	//팝업 닫기 처리
	this.getParentContext().close(this.dsResult.saveXML());
};

// 취소
this.btnCancel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.getParentContext().close();
};

this.divData_objGrid_oncelldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	this.fnCopyRow();
};

this.fnCopyRow = function(){
	var rPos = this.dsList.rowposition;

	var CD_BIMOK = this.dsList.getColumn(rPos, "CD_BIMOK");
	if(this.gfnIsNull(this.gfnTrim(CD_BIMOK))){
		this.gfnAlert("선택된 항목이 없습니다.");
		return;
	}

	//컬럼/데이터 복사
	this.dsResult.set_enableevent(false);
		
	this.dsResult.assign(this.dsList);
	
	this.dsResult.clearData();

	var nAddRow = this.dsResult.addRow();	
	var bSucc = this.dsResult.copyRow(nAddRow,this.dsList, rPos);

	this.dsResult.set_enableevent(true);

	//팝업 닫기 처리
	this.getParentContext().close(this.dsResult.saveXML());
}]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DHAPR_EXECUTION_MONTHLY_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="YR_ACCOUNT" type="STRING" size="256"/>
          <Column id="YN_DEPT" type="STRING" size="256"/>
          <Column id="CD_DEPTGROUP1" type="STRING" size="256"/>
          <Column id="DS_DEPTGROUP1" type="STRING" size="256"/>
          <Column id="CD_DEPTOFFICER" type="STRING" size="256"/>
          <Column id="DS_DEPTOFFICER" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="YR_ACCOUNT"/>
            <Col id="CD_DEPTGROUP1"/>
            <Col id="DS_DEPTGROUP1"/>
            <Col id="YN_DEPT"/>
            <Col id="CD_DEPTOFFICER"/>
            <Col id="DS_DEPTOFFICER"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsYN_DEPT">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="DS_CODE">부서</Col>
            <Col id="CD_CODE">Y</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">N</Col>
            <Col id="DS_CODE">임원</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ctclYR_ACCOUNT.form.TextBox" propid="value" datasetid="dsSearch" columnid="YR_ACCOUNT"/>
      <BindItem id="item1" compid="divSearch.form.ccboYN_DEPT" propid="value" datasetid="dsSearch" columnid="YN_DEPT"/>
      <BindItem id="item2" compid="divSearch.form.ccfCD_DEPTGROUP1.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_DEPTGROUP1"/>
      <BindItem id="item3" compid="divSearch.form.ccfCD_DEPTGROUP1.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_DEPTGROUP1"/>
      <BindItem id="item4" compid="divSearch.form.ccfCD_DEPTOFFICER.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_DEPTOFFICER"/>
      <BindItem id="item5" compid="divSearch.form.ccfCD_DEPTOFFICER.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_DEPTOFFICER"/>
    </Bind>
  </Form>
</FDL>
