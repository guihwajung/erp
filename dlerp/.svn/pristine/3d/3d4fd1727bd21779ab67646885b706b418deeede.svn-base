<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1380" height="720" titletext="계약조회(자재)" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="78.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="sta00" taborder="0" text="현장코드" left="0.0" top="10.0" width="92.0" height="24.0" textDecoration="none" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_SITE" CodeFindName="DZX_CFSITE" CDTextWidth="80" taborder="1" left="sta00:0.0" top="10.0" width="220" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="sta01" taborder="2" text="계약번호" left="ccfCD_SITE:0.0" top="10.0" width="92.0" height="24.0" textDecoration="none" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfNO_CONT" CDTextWidth="80" taborder="3" left="sta01:0.0" top="10.0" width="220" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staCD_SITE00" taborder="4" text="계약일자" left="ccfNO_CONT:0.0" top="10.0" width="92.0" height="24.0" textDecoration="none" cssclass="sta_WF_SchLabel"/>
              <Calendar id="cal_STYMD" taborder="5" left="staCD_SITE00:0.0" top="10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" value="" enable="true"/>
              <Static id="sta00_00" taborder="6" text="~" left="cal_STYMD:0.0" top="10.0" width="30.0" height="24.0" cssclass="sta_WF_AC"/>
              <Calendar id="cal_ENYMD" taborder="7" left="sta00_00:0.0" top="10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" value="" enable="true"/>
              <Static id="staDS_CONT" taborder="8" text="계약명" left="0.0" top="sta00:10.0" width="92.0" height="24.0" textDecoration="none" cssclass="sta_WF_SchLabel"/>
              <Edit id="ctxtDS_CONT" taborder="9" left="staDS_CONT:0.0" top="sta00:10.0" width="220" height="24.0" value="" maxlength="3" inputtype="normal"/>
              <Static id="staSN_SEQ" taborder="10" text="차수" left="ctxtDS_CONT:0.0" top="sta00:10.0" width="92.0" height="24.0" textDecoration="none" visible="false" cssclass="sta_WF_SchLabel"/>
              <Edit id="ctxtSN_SEQ" taborder="11" left="staSN_SEQ:0.0" top="sta00:10.0" width="70" height="24.0" value="" maxlength="3" inputtype="number" visible="false"/>
              <Combo id="ccboSN_MAX" taborder="12" left="ctxtSN_SEQ:0.0" top="sta00:10.0" width="70" height="24.0" innerdataset="dsSN_MAX" codecolumn="CD_CODE" datacolumn="DS_CODE" index="0" text="전체" value="" visible="false"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0" oncelldblclick="divData_objGrid_oncelldblclick"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	var today = this.gfnGetDate();
	this.dsSearch.setColumn(0, "DT_FROM", this.gfnAddMonth(today,-1));
	this.dsSearch.setColumn(0, "DT_TO", this.gfnAddMonth(today,1));
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
	//this.FormBtns.Select.set_enable(false);
	
	var cd_role = this.FormInfo.CD_ROLE;
	var cd_field = this.objApp.gdsUserInfo.getColumn(0, "CD_SITE");
	var ds_field = this.objApp.gdsUserInfo.getColumn(0, "DS_SITE");
	
	// R21	외주구매팀권한
	// R41	외주구매팀장권한
	// R99	운영자권한
	
	if(cd_role!="R21" && cd_role!="R41" && cd_role!="R99")
	{	
		this.divSearch.form.ccfCD_SITE.set_enable(false);
	}
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnContract = this.gfnFormButtonAdd("btnContract", "fnContract");  
	this.btnDetail = this.gfnFormButtonAdd("btnRelation", "fnRelation");  
	this.btnAbort = this.gfnFormButtonAdd("btnAbort", "fnAbort");  
	this.btnVendorDetail = this.gfnFormButtonAdd("btnVendorDetail", "fnVendorDetail"); 
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_SITE = this.divSearch.form.ccfCD_SITE;
	this.ccfNO_CONT = this.divSearch.form.ccfNO_CONT;
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.ccfCD_SITE.AfterCDTextChanged = "fnAfterCDTextChanged";
	
	this.ccfNO_CONT.CodeFindName = "DCX_CFCONTRACT_03";	
	this.ccfNO_CONT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DC", "DCC_CONTRACTQRY2");

	// 셀 변경 후 이벤트
	//this.dxGrid.AfterEdit = "fnGrid_AfterEdit";
	
	// 그리드 코드파인드 설정
	//this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
	
	// 전체체크박스 체크/해제 이벤트
	//this.dxGrid.AfterAllCheck = "fnGrid_AfterAllCheck";
	
	// BUTTON, BUTTON-IN 처리
	//this.dxGrid.ExpandUp = "fnGrid_ExpandUp";
	
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_SITE", "string");
	this.dsSelect.addColumn("NO_CONT", "string");
	this.dsSelect.addColumn("DT_FROM", "string");
	this.dsSelect.addColumn("DT_TO", "string");
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("CD_DEPT", "string");
	this.dsSelect.addColumn("ID_USER", "string");
	this.dsSelect.addColumn("TY_SYS", "string");
	this.dsSelect.addColumn("SN_SEQ", "string");
	this.dsSelect.addColumn("DS_CONT", "string");
	this.dsSelect.addColumn("SN_MAX", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;

	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();

	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsSelect.setColumn(0, "NO_CONT", this.dsSearch.getColumn(0, "NO_CONT"));
	this.dsSelect.setColumn(0, "DT_FROM", this.dsSearch.getColumn(0, "DT_FROM"));	//발주기간
	this.dsSelect.setColumn(0, "DT_TO", this.dsSearch.getColumn(0, "DT_TO"));
	this.dsSelect.setColumn(0, "CD_CORP", this.AuthClient.CD_CORP);
	this.dsSelect.setColumn(0, "CD_DEPT", this.AuthClient.CD_DEPT);
	this.dsSelect.setColumn(0, "ID_USER", this.AuthClient.ID_USER);
	this.dsSelect.setColumn(0, "TY_SYS", this.FormInfo.DS_PARAM);	
	this.dsSelect.setColumn(0, "SN_SEQ", this.dsSearch.getColumn(0, "SN_SEQ"));	
	this.dsSelect.setColumn(0, "DS_CONT", this.dsSearch.getColumn(0, "DS_CONT"));	
	this.dsSelect.setColumn(0, "SN_MAX", this.dsSearch.getColumn(0, "SN_MAX"));	
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	var nrow = this.gfnGridAdd(this.dxGrid, "bottom"); // top (default), bottom, current
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}


/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {	
	var validate = true;
	/*
	if (this.gfnIsNull(this.dsSearch.getColumn(0,"CD_SITE"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.ccfCD_SITE.form.CDTextBox.setFocus();
		}
		this.gfnAlert("현장코드는 반드시 입력 하셔야 합니다.", "fnVaidateCallback");
	}
	*/
	return validate;
	
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
	}	
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if (id == "ccfNO_CONT") {
		if (this.gfnIsNull(this.dsSearch.getColumn(0, "CD_SITE"))) {
 			this.gfnAlert("현장코드를 먼저 입력하세요.");
 			return false;
 		}
		dsUserParam.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0,"CD_SITE"));
	}
	return true;
};

this.fnAfterCDTextChanged = function(id, codeFindData) {
	if(id == "ccfCD_SITE") {
		// 현장코드 변경시 입찰번호 초기화
		this.ccfNO_CONT.form.fnCodeFindClear();
	}
}

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
 // 부도타절관리 버튼 클릭시 팝업화면 호출
 this.fnAbort = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	// 선택된 row가 있을 경우에만 팝업을 띄움
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	var nRow = this.dsList.rowposition;
	var param = {};
	param.CD_SITE = this.dsList.getColumn(nRow, "CD_SITE");
	param.DS_SITE = this.dsList.getColumn(nRow, "DS_SITE");
	param.NO_CONT = this.dsList.getColumn(nRow, "NO_CONT");
	param.DS_SUBCON = this.dsList.getColumn(nRow, "DS_SUBCON");
	param.SN_SEQ = this.dsList.getColumn(nRow, "SN_SEQ");
	param.TY_CONT = this.dsList.getColumn(nRow, "TY_CONT");
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DCC_CONTRACT_ABORT", "fnAbort_callback", param, 1080, 895);
}

this.fnAbort_callback = function()
{
	this.FormBtns.Select.click();
}
 
 // 계약일반사항 버튼 클릭시 팝업화면 호출
 this.fnContract = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	// 선택된 row가 있을 경우에만 팝업을 띄움
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	var nRow = this.dsList.rowposition;
	var param = {};
	param.CD_SITE = this.dsList.getColumn(nRow, "CD_SITE");
	param.DS_SITE = this.dsList.getColumn(nRow, "DS_SITE");
	param.NO_CONT = this.dsList.getColumn(nRow, "NO_CONT");
	param.DS_SUBCON = this.dsList.getColumn(nRow, "DS_SUBCON");
	param.SN_SEQ = this.dsList.getColumn(nRow, "SN_SEQ");
	param.TY_CONT = this.dsList.getColumn(nRow, "TY_CONT");
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DCC_CONTRACT", "fnContract_callback", param, 950, 750);
	
	/*
	if(this.dsList.getColumn(nRow, "SN_SEQ") == "001")
	{
		this.gfnFormOpen(this.FormInfo.CD_MODULE, "DCC_CONTRACT", "", param, 1040, 895);
	}
	else
	{
		this.gfnFormOpen(this.FormInfo.CD_MODULE, "DCC_CHGCONTRACT", "", param);
	}
	*/
}

this.fnContract_callback = function()
{
	this.FormBtns.Select.click();
}
 
 // 증권현황 버튼 클릭시 팝업화면 호출
 this.fnDetail = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	// 선택된 row가 있을 경우에만 팝업을 띄움
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	var nRow = this.dsList.rowposition;
	var param = {};
	param.CD_SITE = this.dsList.getColumn(nRow, "CD_SITE");
	param.DS_SITE = this.dsList.getColumn(nRow, "DS_SITE");
	param.NO_CONT = this.dsList.getColumn(nRow, "NO_CONT");
	param.DS_CONT = this.dsList.getColumn(nRow, "DS_SUBCON");

	// 화면 오픈. 
	// CD_MODULE은 보통 같은 모듈에서 호출하는 경우가 많으니 this.FormInfo.CD_MODULE 사용
	// 타 모듈 화면 호출시 지정할것.
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DCC_STOCKMR", "", param);
}

 this.fnRelation = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	// 선택된 row가 있을 경우에만 팝업을 띄움
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	var nRow = this.dsList.rowposition;
	var param = {};
	//param.CD_SITE = this.dsList.getColumn(nRow, "CD_SITE");
	//param.DS_SITE = this.dsList.getColumn(nRow, "DS_SITE");
	param.NO_CONT = this.dsList.getColumn(nRow, "NO_CONT");
	param.DS_CONT = this.dsList.getColumn(nRow, "DS_SUBCON");

	// 화면 오픈. 
	// CD_MODULE은 보통 같은 모듈에서 호출하는 경우가 많으니 this.FormInfo.CD_MODULE 사용
	// 타 모듈 화면 호출시 지정할것.
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DCC_CONTRACT_RELATION", "", param);
}


this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
		
		if(e.columnid == "CD_SITE"){
			this.dsSearch.setColumn(0,"NO_CONT", "");
			this.divSearch.form.ccfNO_CONT.form.DSTextBox.set_value("");
		}
	}
};

this.divData_objGrid_oncelldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	var nRow = this.dsList.rowposition;
	var param = {};
	param.CD_SITE = this.dsList.getColumn(nRow, "CD_SITE");
	param.DS_SITE = this.dsList.getColumn(nRow, "DS_SITE");
	param.NO_CONT = this.dsList.getColumn(nRow, "NO_CONT");
	param.DS_SUBCON = this.dsList.getColumn(nRow, "DS_SUBCON");
	param.SN_SEQ = this.dsList.getColumn(nRow, "SN_SEQ");
	param.TY_CONT = this.dsList.getColumn(nRow, "TY_CONT");
	
	//this.gfnFormOpen(this.FormInfo.CD_MODULE, "DCC_CONTRACT", "fnContract_callback", param, 950, 750);
};

// 업체상세정보 버튼 클릭시 팝업화면 호출
this.fnVendorDetail = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	// 선택된 row가 있을 경우에만 팝업을 띄움
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	var param = {};
	param.CD_VENDOR = this.dsList.getColumn(this.dsList.rowposition, "CD_VENDOR");
	param.DS_VENDOR = this.dsList.getColumn(this.dsList.rowposition, "DS_VENDOR");
	param.DT_INPUT = this.dsList.getColumn(this.dsList.rowposition, "DT_INPUT");
	
	var ds_param = this.FormInfo.DS_PARAM;
	if(this.FormInfo.DS_PARAM == "SU") ds_param = "DC";
	if(this.FormInfo.DS_PARAM == "MM") ds_param = "DM";
	
	param.SDS_PARAM = ds_param;
	// 화면 오픈. 
	// CD_MODULE은 보통 같은 모듈에서 호출하는 경우가 많으니 this.FormInfo.CD_MODULE 사용
	// 타 모듈 화면 호출시 지정할것.
	
	this.gfnFormOpen("DCA", "DCA_REGISTDETAIL_R", "", param);
}]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DCCPR_CONTRACTLIST_SELECT2</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="NO_CONT" type="STRING" size="256"/>
          <Column id="DT_FROM" type="STRING" size="256"/>
          <Column id="DT_TO" type="STRING" size="256"/>
          <Column id="SN_SEQ" type="STRING" size="256"/>
          <Column id="DS_CONT" type="STRING" size="256"/>
          <Column id="SN_MAX" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_SITE"/>
            <Col id="NO_CONT"/>
            <Col id="DT_FROM"/>
            <Col id="DT_TO"/>
            <Col id="SN_MAX"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSN_MAX">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE"/>
            <Col id="DS_CODE">전체</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">M</Col>
            <Col id="DS_CODE">최종</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item2" compid="divSearch.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item0" compid="divSearch.form.ccfNO_CONT.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="NO_CONT"/>
      <BindItem id="item1" compid="divSearch.form.cal_STYMD" propid="value" datasetid="dsSearch" columnid="DT_FROM"/>
      <BindItem id="item3" compid="divSearch.form.cal_ENYMD" propid="value" datasetid="dsSearch" columnid="DT_TO"/>
      <BindItem id="item4" compid="divSearch.form.ctxtSN_SEQ" propid="value" datasetid="dsSearch" columnid="SN_SEQ"/>
      <BindItem id="item5" compid="divSearch.form.ctxtDS_CONT" propid="value" datasetid="dsSearch" columnid="DS_CONT"/>
      <BindItem id="item6" compid="divSearch.form.ccboSN_MAX" propid="value" datasetid="dsSearch" columnid="SN_MAX"/>
    </Bind>
  </Form>
</FDL>
