<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="270" height="130" maxwidth="315" maxheight="220" titletext="집행요청일자 수정" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divData" taborder="0" left="0" top="0" bottom="0" right="0" cssclass="div_DATA_Bg" text="">
          <Layouts>
            <Layout>
              <Static id="sta00" taborder="0" text="집행요청일자" left="20" top="40" width="90" height="30" textAlign="right" cssclass="sta_WF_tablelabelE"/>
              <Static id="staBg1" taborder="1" left="109" top="40" height="30" cssclass="sta_WF_tablebg" width="131"/>
              <Button id="btnSave" taborder="2" text="저장" left="86" top="90" width="50" onclick="divData_btnSave_onclick" height="20"/>
              <Button id="btnCancel" taborder="3" text="취소" left="142" top="90" width="50" height="20" onclick="divData_btnCancel_onclick"/>
              <Calendar id="tclDT_REQ" taborder="4" left="115" top="45" width="105" height="20" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true"/>
              <Static id="staTitle" taborder="5" text="집행요청일자 수정" left="20" top="10" height="22" cssclass="sta_TITLE_Bg" width="220"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.gubun = "";

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	//this.getOwnerFrame().set_width(300);
	//this.getOwnerFrame().set_height(160);	
	
	// 1.집행수정일자 버튼 클릭하여 수정시 (undefined)
	// 2.일괄배정시 집행일자 일괄처리시 (DFBPR_EXECDTL_INSERT)
	this.gubun = this.getOwnerFrame().GUBUN;
	//trace("this.gubun :: " + this.gubun);
	
	
	// 이전 화면에서 데이터 받기.
 	this.dsList.setColumn(0, "SEQ_EXEC", this.getOwnerFrame().SEQ_EXEC);
	
	if (!this.gfnIsNull(this.getOwnerFrame().DT_REQ)) {
		this.dsList.setColumn(0, "DT_REQ", this.getOwnerFrame().DT_REQ);
	}
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {

}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {

};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsInsert = new Dataset();
	this.dsInsert.addColumn("SEQ_EXEC", "bigdecimal");
	this.dsInsert.addColumn("DT_REQ", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 
 /*
 *	입력 버튼
 */
this.fnAdd = function() {
	
}

 /*
 *	저장 버튼
 */
this.fnSave = function() {
	
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	//this.gfnGridDel(this.dxGrid);
}


/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	//this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}
/************************************************************************
 * Validate
 ************************************************************************/

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
*/
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "save") {
		if(errorCode == 0)
		{
			// this.close()가 작동하지 않았고, 
			// 부모의 callback 함수로 데이터를 넘겨주기 위해 작성되었습니다.
			this.getParentContext().close(true);
		}else
		{
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
 
// 저장 버튼 클릭
this.divData_btnSave_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if(!this.fnSaveValidate()) return;
	
	var json = {};
	
	json.DT_REQ = this.dsList.getColumn(0, "DT_REQ");	// 집행요청일자
	
	this.getParentContext().close(JSON.stringify(json));
};

// 취소 버튼 클릭
this.divData_btnCancel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	// this.close()가 작동하지 않았고, 
	// 부모의 callback 함수로 데이터를 넘겨주기 위해 작성되었습니다.
	this.getParentContext().close(false);
};

this.fnSaveValidate = function() {

	var strMsg = "";
	
	
	//trace("집행요청일자는->" + this.dsList.getColumn(0, "DT_REQ"));
	
	if(this.gfnIsNull(this.dsList.getColumn(0, "DT_REQ"))) {
		strMsg += "집행요청일자는 반드시 입력 하셔야 합니다.\n";
	}
	
	if(strMsg.length > 0) {
		this.gfnAlert(strMsg);
		return false;
	}

	return true;
}

]]></Script>
    <Objects>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">insert</Col>
            <Col id="SP">DFBPR_DT_REQUEST_UPDATE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsList">
        <ColumnInfo>
          <Column id="SEQ_EXEC" type="STRING" size="256"/>
          <Column id="DT_REQ" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divData.form.tclDT_REQ" propid="value" datasetid="dsList" columnid="DT_REQ"/>
    </Bind>
  </Form>
</FDL>
