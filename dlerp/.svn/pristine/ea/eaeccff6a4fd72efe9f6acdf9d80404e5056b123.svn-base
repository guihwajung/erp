<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="New Form" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static id="staCD_SITE" taborder="2" text="현장코드" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_SITE" CodeFindName="DZX_CFSITE" CDTextWidth="80" taborder="0" left="staCD_SITE:0.0" top="10.0" width="200" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Edit id="ctxtNO_SILHENG" taborder="1" right="5" top="10.0" width="200" height="24.0" enable="false" visible="false"/>
              <Static id="staDT_WORK" taborder="3" text="입찰마감" left="ccfCD_SITE:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Calendar id="ctclDT_FR" taborder="4" left="staDT_WORK:0.0" top="10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true"/>
              <Static id="staDT_WORK00" taborder="6" text="~" left="ctclDT_FR:0.0" top="10.0" width="30.0" height="24.0" cssclass="sta_WF_AC"/>
              <Calendar id="ctclDT_TO" taborder="5" left="staDT_WORK00:0.0" top="10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg" ondragmove="divData_ondragmove">
          <Layouts>
            <Layout>
              <Div id="divSplitter" taborder="1" left="45%" top="0" width="5" height="100%" background="skyblue" cursor="ew-resize" ondrag="divData_divSplitter_ondrag"/>
              <Button id="btnRight" taborder="3" text="▶" left="divSplitter:5" top="35%" width="30" height="30" onclick="divData_btnRight_onclick"/>
              <Button id="btnLeft" taborder="3" text="◀" left="divSplitter:5" top="55%" width="30" height="30" onclick="divData_btnLeft_onclick"/>
              <Div id="divDataLeft" taborder="0" left="0" top="0" bottom="0" right="divSplitter:5">
                <Layouts>
                  <Layout>
                    <Grid id="objGrid" taborder="0" left="0" top="sta01:5" bottom="0" right="0"/>
                  </Layout>
                </Layouts>
              </Div>
              <Div id="divDataRight" taborder="0" left="btnRight:5" top="0" bottom="0" right="0">
                <Layouts>
                  <Layout>
                    <Grid id="objGridSub" taborder="0" left="0" top="30" bottom="0" right="0"/>
                    <Static id="staCD_SITE" taborder="1" text="통합입찰번호" left="0" top="0" width="80" height="20"/>
                    <Edit id="edt_Union" taborder="2" left="staCD_SITE:10" top="0" width="120" height="20" readonly="true"/>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{ 
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 ************************************************************************/
this.fnSetButton = function() {
	// 서브 버튼 사용
	//this.gfnUseSubBtn(true, this.divData, this.divData.form.divSplitter); // divSplitter sync
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결
 ************************************************************************/
this.fnSetExtendButton = function() {
	//this.btn1 = this.gfnFormButtonAdd("btnExcelUpload", "fnExcelUpload");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_SITE = this.divSearch.form.ccfCD_SITE;

	this.dxGrid = this.divData.form.divDataLeft.form.objGrid;
	this.dxGridSub = this.divData.form.divDataRight.form.objGridSub;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {	

	this.gfnGridInit(this.dxGrid, this.dsList, "DC", "DCB_ORDERPLANSR1");

	this.gfnGridInit(this.dxGridSub, this.dsListSub, "DC", "DCB_ORDERPLANSR2");
	// 셀 변경 후 이벤트
	//this.dxGridSub.BeforeUserDataSetParam = "fnGridSub_BeforeUserDataSetParam";
	this.dxGridSub.AfterEdit = "fnGridSub_AfterEdit";
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_SITE", "string");
	this.dsSelect.addColumn("DT_ORDER_FR", "string");
	this.dsSelect.addColumn("DT_ORDER_TO", "string");
	
	this.dsInsert = new Dataset();
	this.dsInsert.addColumn("NO_UNION_BID", "string");
	this.dsInsert.addColumn("CD_SITE", "string");
	this.dsInsert.addColumn("NO_BID", "string");
	this.dsInsert.addColumn("NO_HADO", "string");
	this.dsInsert.addColumn("YN_MAIN", "string");
};

/************************************************************************
 * 버튼 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	//if (!this.fnSelectValidate()) return false;

	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsSelect.setColumn(0, "DT_ORDER_FR", this.dsSearch.getColumn(0, "DT_ORDER_FR"));
	this.dsSelect.setColumn(0, "DT_ORDER_TO", this.dsSearch.getColumn(0, "DT_ORDER_TO"));

	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
};

/*
 *	삭제 버튼
 */ 
this.fnDel = function() {
	//this.gfnGridDel(this.dxGridSub);
	this.fnReverseDelete();
}

/*
 *	저장 버튼
 */ 
this.fnSave = function() {
	if (!this.fnSaveValidate()) return;
	if (!this.gfnGridValidate(this.dxGridSub)) return;

	this.dxGridSub.updateToDataset();
	
	this.dsInsert.clearData();
	
	for (var i = 0; i < this.dsListSub.rowcount; i++) {
		var nrow = this.dsInsert.addRow();
		this.dsInsert.setColumn(nrow, "NO_UNION_BID", this.divData.form.divDataRight.form.edt_Union.value);
		this.dsInsert.setColumn(nrow, "CD_SITE", this.dsListSub.getColumn(i, "CD_SITE"));
		this.dsInsert.setColumn(nrow, "NO_BID", this.dsListSub.getColumn(i, "NO_BID"));
		this.dsInsert.setColumn(nrow, "NO_HADO", this.dsListSub.getColumn(i, "NO_HADO"));
		this.dsInsert.setColumn(nrow, "YN_MAIN", this.dsListSub.getColumn(i, "YN_MAIN"));

	}
	
	if (this.dsInsert.rowcount == 0) return;

	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "insert=dsInsert";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */ 
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}
 
/************************************************************************
 * 서브 버튼 이벤트
 ************************************************************************/


/************************************************************************
 * Validate
 ************************************************************************/

this.fnSaveValidate = function()
{
	validate = true;

	if(this.gfnIsNull(this.divData.form.divDataRight.form.edt_Union.value)){
		this.gfnAlert("선택된 메인입찰이 없습니다.");
		validate = false;
	}
	
	return validate;
}
/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
	}

	else if (svcID == "save") {
		if (errorCode == 0) {
			this.getParentContext().close(true);
		} else {
			this.gfnAlert(errorMsg);
		}
	}

	
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/

this.fnGridSub_AfterEdit = function(obj:nexacro.NormalDataset, e:nexacro.DSColChangeEventInfo)
{
	if(e.columnid == "YN_MAIN")
	{
		if(e.oldvalue != e.newvalue)
		{	
			var arr = [];
			for(var i = 0;i < this.dsListSub.rowcount;i++){
				if(this.dsListSub.getColumn(i, "YN_MAIN") == "Y"){
					arr.push(i);
				}
			}
			if(arr.length > 1){
				this.gfnAlert("이미 선택된 메인입찰이 있습니다.");
				this.dsListSub.setColumn(this.dsListSub.rowposition, "YN_MAIN", "N");
				return;
			}

			if(e.newvalue == 1){				
				this.divData.form.divDataRight.form.edt_Union.set_value(this.dsListSub.getColumn(this.dsListSub.rowposition, "NO_BID")+"C");			
			}else{
				this.divData.form.divDataRight.form.edt_Union.set_value("");
			}
		}
	}
 };
 

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		this.gfnSetFormStatus(this);
		this.gfnGridClear(this.dxGrid);
		this.gfnGridClear(this.dxGridSub);
	}
}

this.divData_ondragmove = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
	if(e.userdata == "splitter") {
		this.divData.form.divSplitter.set_left(e.clientx);
		this.divData.form.resetScroll();
	}
};

this.divData_divSplitter_ondrag = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
	e.set_userdata("splitter");
	return true;
};

// ▶ 버튼 클릭시.
this.divData_btnRight_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var rows = this.dxGrid.getSelectedDatasetRows();
	
	this.dsListSub.set_enableevent(false);
	
	for(var i = 0; i < rows.length; i++)
	{
		var nrow = rows[i];
				
		var listRow = this.dsListSub.addRow();

		this.dsListSub.copyRow(listRow, this.dsList, nrow);
		this.dsListSub.copyRow(listRow, this.dsList, nrow, "NO_HADO=NO_HADO,NO_BID=NO_BID,CD_SITE=CD_SITE,DS_DEPT=DS_DEPT,DS_SUBCON=DS_SUBCON,DS_FROMTO=DS_FROMTO,AM_TT_SILHENG=AM_TT_SILHENG,ID_SITESABUN=ID_SITESABUN,DS_HNAME=DS_HNAME");
		this.dsListSub.setColumn(listRow, "YN_MAIN", "N");
		this.dsListSub.setColumn(listRow, this.ucFlag, "I");
		this.gfnSetFormStatus(this, "I");	
		
	}
	this.dsListSub.set_enableevent(true);
	this.dsList.deleteMultiRows(rows);
};

// ◀ 버튼 클릭시.
this.divData_btnLeft_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var rows = this.dxGridSub.getSelectedDatasetRows();
	
	this.dsList.set_enableevent(false);
	
	for(var i = 0; i < rows.length; i++)
	{
		var nrow = rows[i];
				
		var listRow = this.dsList.addRow();

		this.dsList.copyRow(listRow, this.dsListSub, nrow);
		this.dsList.copyRow(listRow, this.dsListSub, nrow, "NO_HADO=NO_HADO,NO_BID=NO_BID,CD_SITE=CD_SITE,DS_DEPT=DS_DEPT,DS_SUBCON=DS_SUBCON,DS_FROMTO=DS_FROMTO,AM_TT_SILHENG=AM_TT_SILHENG,ID_SITESABUN=ID_SITESABUN,DS_HNAME=DS_HNAME");
		this.dsList.setColumn(listRow, this.ucFlag, "");		
		
	}

	this.dsList.set_enableevent(true);
	this.dsListSub.deleteMultiRows(rows);
};

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};
]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DCBPR_ORDERPLAN_SELECT1_UNION</Col>
          </Row>
          <Row>
            <Col id="TARGET">selectSub</Col>
            <Col id="SP">DCBPR_ORDERPLAN_SELECT2_UNION</Col>
          </Row>
          <Row>
            <Col id="TARGET">insert</Col>
            <Col id="SP">DCBPR_ORDERPLAN_UNION_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">delete</Col>
            <Col id="SP">DCBPR_ORDERPLAN_UNION_DELETE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsListSub">
        <ColumnInfo>
          <Column id="NO_UNION_HADO" type="STRING" size="256"/>
          <Column id="NO_HADO" type="STRING" size="256"/>
          <Column id="NO_BID" type="STRING" size="256"/>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="DS_DEPT" type="STRING" size="256"/>
          <Column id="DS_SUBCON" type="STRING" size="256"/>
          <Column id="DS_FROMTO" type="STRING" size="256"/>
          <Column id="AM_TT_SILHENG" type="BIGDECIMAL" size="256"/>
          <Column id="ID_SITESABUN" type="STRING" size="256"/>
          <Column id="DS_HNAME" type="STRING" size="256"/>
          <Column id="YN_MAIN" type="STRING" size="256"/>
          <Column id="nx_flag" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="DT_ORDER_FR" type="STRING" size="256"/>
          <Column id="DT_ORDER_TO" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_SITE"/>
            <Col id="DT_ORDER_FR"/>
            <Col id="DT_ORDER_TO"/>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item1" compid="divSearch.form.ctclDT_FR" propid="value" datasetid="dsSearch" columnid="DT_ORDER_FR"/>
      <BindItem id="item2" compid="divSearch.form.ctclDT_TO" propid="value" datasetid="dsSearch" columnid="DT_ORDER_TO"/>
    </Bind>
  </Form>
</FDL>
