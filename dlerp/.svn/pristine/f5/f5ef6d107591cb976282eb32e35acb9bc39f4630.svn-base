<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="일용직 근로자 명부" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="staYM_TOIJIK" taborder="6" text="퇴직추정년월" left="0.0" top="10.0" width="144.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYM_TOIJIK" taborder="7" left="staYM_TOIJIK:0.0" top="10.0" width="80" height="24.0" dateformat="yyyy-mm" editformat="yyyymm" url="cmm::cmmCalMM.xfdl"/>
              <Static id="staCD_SITE" taborder="0" text="현장/부서 코드" left="ctclYM_TOIJIK:0.0" top="10.0" width="144.0" height="24.0" textAlign="left" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_SITE" CodeFindName="DZX_CFDEPTCORP" CDTextWidth="90" taborder="1" left="staCD_SITE:0.0" top="10.0" width="220" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staCD_HADO" taborder="4" text="작업반" left="ccfCD_SITE:0.0" top="10.0" width="144.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="cfSEARCH_CD_HADO" CodeFindName="DWX_CFHADO_JIK" CDTextWidth="145" taborder="5" left="staCD_HADO:0.0" top="10.0" width="300" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staDS_NAME" taborder="2" text="성명" left="cfSEARCH_CD_HADO:0.0" top="10.0" width="144.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfDS_NAME" CodeFindName="DSX_CFEMPLOYEE_NAMELIST" CDTextWidth="80" taborder="3" left="staDS_NAME:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid1" taborder="0" left="0" top="0" right="0" height="320" onselectchanged="divData_objGrid1_onselectchanged"/>
              <Grid id="objGrid2" taborder="1" left="0" top="335" right="0" height="330"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();

	this.BTN_RETIRE.set_enable(false);
	this.BTN_RETIRE_CREATE.set_enable(false);
	this.BTN_RETIRE_DEL.set_enable(false);	
	
	var today = this.gfnGetDate();
	this.dsSearch.setColumn(0, "YM_TOIJIK", today.substr(0, 6));
 	this.dsSearch.setColumn(0, "CD_CORP", this.AuthClient.CD_CORP);
// 	this.divSearch.form.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP);

	this.fnSetCombo();

	// 화면 공지사항으로 대체
	// 화면 오픈. 
    //this.gfnFormOpen("DSE", "DSE_RETIRE_POPUP", "fnPopupCallback2", '', 700, 400);
};

this.fnPopupCallback2 = function(){
	return true;
}

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.BTN_RETIRE_CREATE = this.gfnFormButtonAdd("BTN_RETIRE_CREATE", "fnRetireCreate");	
	this.BTN_RETIRE = this.gfnFormButtonAdd("BTN_RETIRE", "fnRetirePopupOpen");
	this.BTN_RETIRE_DEL = this.gfnFormButtonAdd("BTN_RETIRE_DEL", "fnRetireDel");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {	
	this.ccfCD_SITE = this.divSearch.form.ccfCD_SITE;
	this.cfSEARCH_CD_HADO = this.divSearch.form.cfSEARCH_CD_HADO;
	this.ccfDS_NAME = this.divSearch.form.ccfDS_NAME;

	// 190627 - 현장코드 코드파인더 변경으로 인한 주석 처리.
	this.ccfCD_SITE.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";	
	this.cfSEARCH_CD_HADO.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfDS_NAME.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_SITE.AfterCDTextChanged = "codefind_AfterCDTextChanged";
	this.ccfDS_NAME.AfterCDTextChanged = "codefind_AfterCDTextChanged";
	
	this.dxGrid1 = this.divData.form.objGrid1;
	this.dxGrid2 = this.divData.form.objGrid2;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid1, this.dsList, "DS", "DSE_RETIRETARGET");
	this.gfnGridInit(this.dxGrid2, this.dsListSub, "DS", "DSE_CAREER");
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
//	this.dsSelect.addColumn("CD_CORP", "string");
//	this.dsSelect.addColumn("NO_ID", "string");
	this.dsSelect.addColumn("YM_TOIJIK", "string");
	this.dsSelect.addColumn("CD_SITE", "string");
	this.dsSelect.addColumn("CD_HADO", "string");
//	this.dsSelect.addColumn("TY_CHAIYONG", "string");
//	this.dsSelect.addColumn("TY_TARGET", "string");	
	
	this.dsSelectSub = new Dataset();
//	this.dsSelectSub.addColumn("CD_CORP", "string");
	this.dsSelectSub.addColumn("NO_ID", "string");
// 	this.dsSelectSub.addColumn("CD_SITE", "string");
// 	this.dsSelectSub.addColumn("YM_TOIJIK", "string");
// 	this.dsSelectSub.addColumn("CD_HADO", "string");
// 	this.dsSelectSub.addColumn("TY_CHAIYONG", "string");
// 	this.dsSelectSub.addColumn("TY_TARGET", "string");	
	
	this.dsExec = new Dataset();	
	this.dsExec.addColumn("YM_RETIRE", "string");
	this.dsExec.addColumn("ID_RESIDENT", "string");
	this.dsExec.addColumn("DT_IPSA", "string");
	this.dsExec.addColumn("DT_START", "string");
	this.dsExec.addColumn("DT_RETIRE", "string");
	this.dsExec.addColumn("ID_INSERT", "string");

	this.dsExec1 = new Dataset();
	this.dsExec1.addColumn("ID_RESIDENT", "string");
	this.dsExec1.addColumn("YM_RETIRE", "string");
	
	
	
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid1);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
//	this.dsSelect.setColumn(0, "CD_CORP", "01"); 
//	this.dsSelect.setColumn(0, "NO_ID", this.dsSearch.getColumn(0, "NO_ID")); 
	this.dsSelect.setColumn(0, "YM_TOIJIK", this.dsSearch.getColumn(0, "YM_TOIJIK"));
	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE")); 
	this.dsSelect.setColumn(0, "CD_HADO", this.dsSearch.getColumn(0, "CD_HADO")); 
//	this.dsSelect.setColumn(0, "TY_CHAIYONG", ""); 
//	this.dsSelect.setColumn(0, "TY_TARGET", "A"); 
		
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
  *	서브조회 버튼
  */
this.fnSelectSub = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid2);
	
	this.dsSelectSub.clearData();
	this.dsSelectSub.addRow();
	
	this.dsSelectSub.setColumn(0, "NO_ID", this.dsList.getColumn(this.dsList.rowposition, "NO_ID")); 
	
	var strSvcId    = "selectSub";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "selectSub=dsSelectSub";
	var outData     = "dsListSub=selectSub0";
	var strArg      = "";
	var callBackFnc = "fnCallback";

	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;
	
	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid1);	
	} 
	else if (svcID == "selectSub") {
		this.gfnGridAfterSelect(this.dxGrid2);	
		this.setBtnUsable();
	}
	else if(svcID == "exec") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	else if(svcID == "exec1") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	// 190627 - 현장코드 코드파인더 변경으로 인한 주석 처리.
 	if (id == "ccfCD_SITE") {
		dsUserParam.setColumn(nrow, "CD_CORP", this.AuthClient.CD_CORP);
 	}
	else if (id == "cfSEARCH_CD_HADO") {  
		dsUserParam.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));		
 	}
	else if (id == "ccfDS_NAME") {
		if(!this.gfnIsNull(this.dsSearch.getColumn(0, "CD_SITE")))
		{
			dsUserParam.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
		}
		else
		{
			dsUserParam.setColumn(nrow, "CD_SITE", "");
		}
		dsUserParam.setColumn(nrow, "TY_CHAIYONG", "");			
	}
	
	return true;
}

this.codefind_AfterCDTextChanged = function(id, codeFindData) {
	if(id == "ccfCD_SITE")
	{
		this.dsSearch.setColumn(0, "DS_NAME", "");
		this.dsSearch.setColumn(0, "NO_ID", "");
		this.divSearch.form.ccfDS_NAME.form.DSTextBox.set_value("");
	}
	else if (id == "cfSEARCH_CD_HADO") {  
		dsUserParam.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));		
 	}
	else if(id == "ccfDS_NAME")
	{
		var arr = codeFindData;
		this.dsSearch.setColumn(0, "NO_ID", "");
		
		if(arr.length > 0)
		{
			var no_id = arr[0]["NO_ID_REAL"];
			this.dsSearch.setColumn(0, "NO_ID", no_id);
		}		
	}
	
}
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
 this.setBtnUsable = function() {
	//선택한 그리드가 있을때만 버튼 활성화
//	alert(this.dsList.getColumn(this.dsList.rowposition, "YN_RETIRE"));

	if(this.dsList.rowposition < 0){
			this.BTN_RETIRE.set_enable(false);
			this.BTN_RETIRE_CREATE.set_enable(false);
			this.BTN_RETIRE_DEL.set_enable(false);			
	}else{
		if (this.dsList.getColumn(this.dsList.rowposition, "YN_RETIRE")=='1') { 
			this.BTN_RETIRE.set_enable(true);
			this.BTN_RETIRE_CREATE.set_enable(false);
			if(this.dsList.getColumn(this.dsList.rowposition, "TY_APPROVAL").trim() == "0"){
				this.BTN_RETIRE_DEL.set_enable(true);	
			}else{
				this.BTN_RETIRE_DEL.set_enable(false);	
			}
		}else if (this.dsList.getColumn(this.dsList.rowposition, "YN_RETIRE")=='0'){
			this.BTN_RETIRE.set_enable(false);
			this.BTN_RETIRE_CREATE.set_enable(true);
			this.BTN_RETIRE_DEL.set_enable(false);	
		}else{
			this.BTN_RETIRE.set_enable(false);
			this.BTN_RETIRE_CREATE.set_enable(false);
			this.BTN_RETIRE_DEL.set_enable(false);		
		}
	}
 }
 
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid1);	
	}
};

this.fnSetCombo = function()
{
}

this.divData_objGrid1_onselectchanged = function(obj:nexacro.Grid,e:nexacro.GridSelectEventInfo)
{
	this.FormBtns.SubSelect.click();
	
};

//퇴직 정산정보 생성
this.fnRetireCreate = function() {
	
	if(this.dsList.rowposition < 0){
		this.gfnAlert("선택된 정보가 없습니다.");
		return;
	} 
	this.gfnConfirm("퇴직정산정보를 생성하시겠습니까?", "fnRetireCreate_callback");
}

this.fnRetireCreate_callback = function(strID, val)
{
	if(val == true)
	{
		this.dsExec.clearData();
		this.dsExec.addRow();
		
		this.dsExec.setColumn(0, "YM_RETIRE", this.dsSearch.getColumn(0, "YM_TOIJIK")); 
		this.dsExec.setColumn(0, "ID_RESIDENT", this.dsList.getColumn(this.dsList.rowposition, "NO_ID"));
		this.dsExec.setColumn(0, "DT_IPSA", this.dsList.getColumn(this.dsList.rowposition, "DT_IPSA")); 
		this.dsExec.setColumn(0, "DT_START", this.dsList.getColumn(this.dsList.rowposition, "DT_IPSA")); 
		this.dsExec.setColumn(0, "DT_RETIRE", this.dsList.getColumn(this.dsList.rowposition, "DT_RETIRE")); 
		this.dsExec.setColumn(0, "ID_INSERT", this.AuthClient.ID_USER); 
			
		var strSvcId    = "exec";
		var strSvcType  = "save";
		var inProc		= "_dsProc";
		var inData      = "exec=dsExec";
		var outData     = "";
		var strArg      = "";
		var callBackFnc = "fnCallback";
		
		this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
							strSvcType , 	// transaction을 요청할 구분
							inProc,			// Procedure 정보 Dataset 이름
							inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
							outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
							strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
							callBackFnc); // 통신방법 정의 [생략가능]
	}
}

//퇴직 정산정보 삭제
this.fnRetireDel = function() {
	if(this.dsList.rowposition < 0){
		this.gfnAlert("선택된 정보가 없습니다.");
		return;
	} 
	this.gfnConfirm("퇴직정산정보를 삭제하시겠습니까?", "fnRetireDel_callback");
}

this.fnRetireDel_callback = function(strID, val)
{
	if(val == true)
	{
		this.dsExec1.clearData();
		this.dsExec1.addRow();
		
		this.dsExec1.setColumn(0, "ID_RESIDENT", this.dsList.getColumn(this.dsList.rowposition, "NO_ID"));
		this.dsExec1.setColumn(0, "YM_RETIRE", this.dsSearch.getColumn(0, "YM_TOIJIK")); 
			
		var strSvcId    = "exec1";
		var strSvcType  = "save";
		var inProc		= "_dsProc";
		var inData      = "exec1=dsExec1";
		var outData     = "";
		var strArg      = "";
		var callBackFnc = "fnCallback";
		
		this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
							strSvcType , 	// transaction을 요청할 구분
							inProc,			// Procedure 정보 Dataset 이름
							inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
							outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
							strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
							callBackFnc); // 통신방법 정의 [생략가능]
	}
}

this.fnRetirePopupOpen = function(){

	// 선택된 row가 있을 경우에만 팝업을 띄움
	if (!this.gfnGridIsRow(this.dxGrid1)) { return false; }
	var param = {
		YM_TOIJIK : this.dsSearch.getColumn(0, "YM_TOIJIK")
		,CD_SITE : this.dsSearch.getColumn(0, "CD_SITE")
		,DS_SITE : this.ccfCD_SITE.form.DSTextBox.value
		,DS_NAME : this.dsList.getColumn(this.dsList.rowposition, "DS_NAME")
		,NO_ID : this.dsList.getColumn(this.dsList.rowposition, "NO_ID")
		,NO_JUMIN :  this.dsList.getColumn(this.dsList.rowposition, "NO_JUMIN")
	};
	
	// 화면 오픈. 
    this.gfnFormOpen("DSE", "DSE_RETIRE", "fnPopupCallback", param, 1100, 880); 
}

this.fnPopupCallback = function(){
	this.FormBtns.Select.click();
}
]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DSEPR_RETIRE_TARGET_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">selectSub</Col>
            <Col id="SP">DSAPR_CAREER_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">exec</Col>
            <Col id="SP">DSEPR_RETIRE_CREATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">exec1</Col>
            <Col id="SP">DSEPR_RETIRE_DELETE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="DS_NAME" type="STRING" size="256"/>
          <Column id="NO_ID" type="STRING" size="256"/>
          <Column id="CD_HADO" type="STRING" size="256"/>
          <Column id="DS_HADO" type="STRING" size="256"/>
          <Column id="YM_TOIJIK" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_WOIGUG">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="VALUE">전체</Col>
            <Col id="CODE">0</Col>
          </Row>
          <Row>
            <Col id="VALUE">내국인</Col>
            <Col id="CODE">1</Col>
          </Row>
          <Row>
            <Col id="VALUE">외국인</Col>
            <Col id="CODE">2</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsCF_JAEJIK">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="VALUE">전체</Col>
            <Col id="CODE"/>
          </Row>
          <Row>
            <Col id="VALUE">재직</Col>
            <Col id="CODE">1</Col>
          </Row>
          <Row>
            <Col id="VALUE">퇴직</Col>
            <Col id="CODE">2</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsListSub"/>
    </Objects>
    <Bind>
      <BindItem id="item1" compid="divSearch.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item2" compid="divSearch.form.ccfDS_NAME.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="DS_NAME"/>
      <BindItem id="item0" compid="divSearch.form.cfSEARCH_CD_HADO.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_HADO"/>
      <BindItem id="item6" compid="divSearch.form.cfSEARCH_CD_HADO.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_HADO"/>
      <BindItem id="item3" compid="divSearch.form.ctclYM_TOIJIK.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_TOIJIK"/>
    </Bind>
  </Form>
</FDL>
