<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="New Form" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0" top="0" height="80" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static cssclass="sta_SearchY" id="staCD_CORP" taborder="1" text="소속법인" left="10" top="10" width="60" height="25" />
              <Div id="ccfCD_CORP" CDTextWidth="30" taborder="0" left="staCD_CORP:10" top="10" width="180" height="25" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staCD_DEPT" taborder="1" text="현장코드" left="ccfCD_CORP:10" top="10" width="60" height="25"/>
              <Div id="ccfCD_DEPT" CDTextWidth="60" taborder="0" left="staCD_DEPT:10" top="10" width="220" height="25" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staTY_CHAIYONG" taborder="1" text="채용구분" left="ccfCD_DEPT:10" top="10" width="50" height="25"/>
              <Combo id="ccboTY_CHAIYONG" taborder="2" left="staTY_CHAIYONG:10" top="10" width="70" height="25" innerdataset="dsTY_CHAIYONG" datacolumn="VALUE" codecolumn="CODE" value="" onitemchanged="fnSearchInit" index="0"/>
              <Static id="staNO_ID" taborder="1" text="성명" left="ccboTY_CHAIYONG:10" top="10" width="30" height="25"/>
              <Div id="ccfNO_ID" CDTextWidth="60" taborder="0" left="staNO_ID:10" top="10" width="200" height="25" url="cmm::cmmCodeFind.xfdl"/>
              <Static cssclass="sta_SearchY" id="staTY_JAJIK" taborder="1" text="재직구분" left="10" top="staCD_CORP:10" width="60" height="25" />
              <Combo id="ccboTY_JAJIK" taborder="2" left="staTY_JAJIK:10" top="staCD_CORP:10" width="70" height="25" innerdataset="dsTY_JAJIK" datacolumn="VALUE" codecolumn="CODE" value="0" onitemchanged="fnSearchInit" index="0" text="재직자"/>
              <Static id="staTY_WOIGUG" taborder="1" text="외국인여부" left="ccfCD_CORP:10" top="staCD_CORP:10" width="60" height="25"/>
              <Combo id="ccboTY_WOIGUG" taborder="2" left="staTY_WOIGUG:10" top="staCD_CORP:10" width="70" height="25" innerdataset="dsTY_WOIGUG" datacolumn="VALUE" codecolumn="CODE" value="" onitemchanged="fnSearchInit" text="전체" index="0"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	

	this.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);
	this.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP);
	if (this.objApp.DS_SPACE01 == "" ||
		nexacro.toNumber(this.FormInfo.GR_SEARCH) > 4)
	{
		this.ccfCD_DEPT.form.CDTextBox.set_value(this.AuthClient.CD_DEPT);
		this.ccfCD_DEPT.form.DSTextBox.set_value(this.AuthClient.DS_DEPT);
	}
	else
	{
		this.ccfCD_DEPT.form.CDTextBox.set_value(this.objApp.DS_SPACE01);
		this.ccfCD_DEPT.form.DSTextBox.set_value(this.objApp.DS_SPACE02);
	}
	
	if (nexacro.toNumber(this.FormInfo.GR_SEARCH) >= 7) {
		this.ccfCD_CORP.form.set_readonly(true);
		this.ccfCD_DEPT.form.set_readonly(true);
	}
};

/************************************************************************
 * 버튼 설정 
 * 서브버튼 사용 처리. 공통 및 확장버튼 버튼관리화면에서 셋팅.
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
	//this.FormBtns.Select.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btn1 = this.gfnFormButtonAdd("New", "fnEmployNew");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;
	this.ccfCD_DEPT = this.divSearch.form.ccfCD_DEPT;
	this.ccboTY_CHAIYONG = this.divSearch.form.ccboTY_CHAIYONG;
	this.ccfNO_ID = this.divSearch.form.ccfNO_ID;
	this.ccboTY_JAJIK = this.divSearch.form.ccboTY_JAJIK;
	this.ccboTY_WOIGUG = this.divSearch.form.ccboTY_WOIGUG;
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.ccfCD_CORP.CodeFindName = "DAX_CFCORP";
	this.ccfCD_CORP.AfterCDTextChanged = "codefind_AfterCDTextChanged";	
	
	this.ccfCD_DEPT.CodeFindName = "DSX_CFDEPT";
	this.ccfCD_DEPT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_DEPT.AfterCDTextChanged = "codefind_AfterCDTextChanged";	
	
	this.ccfNO_ID.CodeFindName = "DSX_CFEMPLOYEE_01";
	this.ccfNO_ID.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DS", "DSA_EMPLOYEE_LIST");
	
	// 셀 수정가능 여부
	this.dxGrid.EnterCell = "fnGrid_EnterCell";
	
	// 셀 변경 후 이벤트
	this.dxGrid.AfterEdit = "fnGrid_AfterEdit";
	
	// 그리드 코드파인드 설정
	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
	
	// 전체체크박스 체크/해제 이벤트
	this.dxGrid.AfterAllCheck = "fnGrid_AfterAllCheck";
	
	// BUTTON, BUTTON-IN 처리
	this.dxGrid.addEventHandler("onexpandup", this.fnGrid_ExpandUp, this);
	
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("CD_SITE", "string");
	this.dsSelect.addColumn("TY_CHAIYONG", "string");
	this.dsSelect.addColumn("TY_JAJIK", "string");
	this.dsSelect.addColumn("NO_ID", "string");
	this.dsSelect.addColumn("TY_WOIGUG", "string");
	this.dsSelect.addColumn("TY_WOIGUBUN", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.text);
	this.dsSelect.setColumn(0, "CD_SITE", this.ccfCD_DEPT.form.CDTextBox.text);
	this.dsSelect.setColumn(0, "TY_CHAIYONG", this.ccboTY_CHAIYONG.value);
	this.dsSelect.setColumn(0, "TY_JAJIK", this.ccboTY_JAJIK.value);
	this.dsSelect.setColumn(0, "NO_ID", this.ccfNO_ID.form.CDTextBox.text);
	this.dsSelect.setColumn(0, "TY_WOIGUG", this.ccboTY_WOIGUG.value);
	this.dsSelect.setColumn(0, "TY_WOIGUBUN", "");
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;
	if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.text)) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.ccfCD_CORP.form.CDTextBox.setFocus();
		}
		this.gfnAlert("법인코드를 입력하세요.", "fnVaidateCallback");
	}
	
	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.codefind_AfterCDTextChanged = function(id) {
	this.fnSearchInit();
}

this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	
	if (id == "ccfCD_DEPT") {
		var cd_corp = this.ccfCD_CORP.form.CDTextBox.text;
		if(this.gfnIsNull(cd_corp)) {
			this.gfnAlert("법인코드를 먼저 입력하세요.");
			return false;
		}
		
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "CD_DEPT", this.AuthClient.CD_DEPT); 
		dsUserParam.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.text);
	}
	else if (id == "ccfNO_ID") {
		var cd_dept = this.ccfCD_DEPT.form.CDTextBox.text;
		if(this.gfnIsNull(cd_dept)) {
			this.gfnAlert("현장코드를 먼저 입력하세요.");
			return false;
		}
		dsUserParam.setColumn(nrow, "CD_SITE", cd_dept);
	}
	return true;
}

this.ccfCD_DEPT_ORG_AfterCDTextChanged = function(id) {
	// 코드,명칭 외 추가 컬럼 처리
	var arr = this.ccfCD_DEPT_ORG.form.SelectedData;

	var ds_updept = "";
	if (arr.length > 0) {
		ds_updept = arr[0]["DS_UPDEPT"];
	}
	
	this.ctxtDS_UPDEPT.set_value(ds_updept);	
	this.fnSearchInit();
}

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGrid_EnterCell = function(obj:nexacro.Grid, row, cell) {
	var colnm = this.gfnGridGetBindColumnNameByIndex(obj, cell);
// 	if(colnm == "KEYIN") {
// 		return false;
// 	}
	return true;
}

this.fnGrid_AfterEdit = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo) {
	if(e.columnid == "CODEFIND") {
		if(e.oldvalue != e.newvalue) {
			this.dsList.setColumn(this.dsList.rowposition, "CODEFIND2" ,"");
			this.dsList.setColumn(this.dsList.rowposition, "DS_CODEFIND2" ,"");
		}
	}
}

this.fnGrid_BeforeUserDataSetParam = function(id, dsUserParam, nrow) {

 	if (id == "DZX_CFMODULE") {
		var cd_system = this.dsList.getColumn(this.dsList.rowposition, "CODEFIND");
		if(this.gfnIsNull(cd_system)) {
			this.gfnAlert("시스템코드를 먼저 입력하세요.");
			return false;
		}
 		dsUserParam.setColumn(nrow, "CD_MODULE", this.dsList.getColumn(this.dsList.rowposition, "CODEFIND"));
 	}
	return true;
}

this.fnGrid_AfterAllCheck = function(obj:nexacro.Grid, cell, check) {
	var colnm = this.gfnGridGetBindColumnNameByIndex(obj, cell);
	if(colnm == "CHK") {
		trace("fnGrid_AfterAllCheck] " + cell + "," + check);
	}
}
 
this.fnGrid_ExpandUp = function(obj:nexacro.Grid,e:nexacro.GridMouseEventInfo) {
	var colnm = this.gfnGridGetBindColumnNameByIndex(obj, e.cell);
	if(colnm == "BUTTON") {
		this.gfnAlert("BUTTON 처리");
	}
	else if (colnm == "BUTTON_IN") {
		this.gfnAlert("BUTTON-IN 처리");
	}
}
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);
	}
};

this.fnDetail = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	var param = {};
	param.CD_SYSTEM = this.dsList.getColumn(this.dsList.rowposition, "CODEFIND");
	param.DS_SYSTEM = this.dsList.getColumn(this.dsList.rowposition, "DS_CODEFIND");
	param.ID_GRID = "DZZ_SAMPLE1";
	
	// 화면 오픈. 
	// CD_MODULE은 보통 같은 모듈에서 호출하는 경우가 많으니 this.FormInfo.CD_MODULE 사용
	// 타 모듈 화면 호출시 지정할것.
	this.gfnFormOpen("DZO", "DXX_NXGRIDSPEC", "", param);
	
}

this.fnCheck = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {

	var arrChk = [];
	for(var i = 0; i < this.dsList.rowcount; i++) {
		if(this.dsList.getColumn(i, "CHK") == 1) {
			arrChk.push(i);
		}
	}
	
	if(arrChk.length > 0) { 
		// 체크행 처리
		this.gfnAlert("체크행:" + arrChk.join(','));
		for(var i = 0; i < arrChk.length; i++) {
			var col1 = this.dsList.getColumn(arrChk[i], "KEYIN");
		}
	} else {
		this.gfnAlert("체크된 행이 없습니다.");
	}
}

this.fnFile = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {

	var sPopupCallBack = "fnFileCallback";
	var options = {
		title: "파일업로드",
		resizable: true
	}
	this.gfnOpenPopup("filelist","cmm::cmmFileManager.xfdl",null,sPopupCallBack,options);
};

this.fnFileCallback = function() {
};]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DSAPR_EMPLOYEE_LIST_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_CHAIYONG">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE"/>
            <Col id="VALUE">전체</Col>
          </Row>
          <Row>
            <Col id="CODE">2</Col>
            <Col id="VALUE">일용직</Col>
          </Row>
          <Row>
            <Col id="CODE">5</Col>
            <Col id="VALUE">현채직</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_JAJIK">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">0</Col>
            <Col id="VALUE">재직자</Col>
          </Row>
          <Row>
            <Col id="CODE">1</Col>
            <Col id="VALUE">퇴직자</Col>
          </Row>
          <Row>
            <Col id="CODE">2</Col>
            <Col id="VALUE">전체</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_WOIGUG">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE"/>
            <Col id="VALUE">전체</Col>
          </Row>
          <Row>
            <Col id="CODE">2</Col>
            <Col id="VALUE">내국인</Col>
          </Row>
          <Row>
            <Col id="CODE">5</Col>
            <Col id="VALUE">외국인</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
  </Form>
</FDL>
