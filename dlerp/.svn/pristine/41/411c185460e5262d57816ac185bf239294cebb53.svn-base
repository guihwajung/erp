<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="New Form" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0" top="0" height="45" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static id="staCD_ITEM" taborder="1" text="CBS ITEM" left="10" top="10" width="70" height="25"/>
              <Div id="ccfCD_ITEM" CodeFindName="DQX_CBSITEM" CDTextWidth="80" taborder="1" left="staCD_ITEM:10" top="10" width="329" height="25" url="cmm::cmmCodeFind.xfdl"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Tab id="tabData" taborder="0" tabindex="0" left="0" top="0" bottom="0" right="0" onchanged="divData_tabData_onchanged">
                <Tabpages>
                  <Tabpage id="tab1" text="업종">
                    <Layouts>
                      <Layout>
                        <Grid id="objGrid" taborder="1" left="5" top="5" bottom="5" right="5"/>
                      </Layout>
                    </Layouts>
                  </Tabpage>
                  <Tabpage id="tab2" text="그룹">
                    <Layouts>
                      <Layout>
                        <Grid id="objGrid2" taborder="1" left="5" top="5" bottom="5" right="5"/>
                      </Layout>
                    </Layouts>
                  </Tabpage>
                </Tabpages>
              </Tab>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	this.FormBtns.Select.click();
};

/************************************************************************
 * 버튼 설정 
 * 서브버튼 사용 처리. 공통 및 확장버튼 버튼관리화면에서 셋팅.
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
	//this.FormBtns.Select.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.dxGrid = this.divData.form.tabData.tab1.form.objGrid;
	this.dxGrid2 = this.divData.form.tabData.tab2.form.objGrid2;
	
	this.dxGrid2.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DZ", "DZU_BUMUNCODE");
	this.gfnGridInit(this.dxGrid2, this.dsList2, "DZ", "DZU_GROUPCODE");
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_BUMUN", "string");
	
	
	this.dsSelect2 = new Dataset();
	this.dsSelect2.addColumn("CD_GROUP", "string");
	

}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	//if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	this.gfnGridBeforeSelect(this.dxGrid2);
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect select2=dsSelect2";
	var outData     = "dsList=select0 dsList2=select20";
	var strArg      = "";
	var callBackFnc = "fnCallback";
			
	this.dsSelect.clearData();
	this.dsSelect.addRow();	
	this.dsSelect.setColumn(0, "CD_SYSTEM", "");	
			
	this.dsSelect2.clearData();
	this.dsSelect2.addRow();	
	this.dsSelect2.setColumn(0, "CD_GROUP", "");
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
	
	// 탭 선택에 따라 조회하기
	/*
	var strSvcId    = "";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	switch(this.divData.form.tabData.tabindex) {
		case 0:
			this.gfnGridBeforeSelect(this.dxGrid);
			
			this.dsSelect.clearData();
			this.dsSelect.addRow();
			
			this.dsSelect.setColumn(0, "CD_SYSTEM", "");	
			
			strSvcId    = "select";
			inData      = "select=dsSelect";
			outData     = "dsList=select0";
			
			break;
			
		case 1:
			this.gfnGridBeforeSelect(this.dxGrid2);
			
			this.dsSelect2.clearData();
			this.dsSelect2.addRow();
			
			this.dsSelect2.setColumn(0, "CD_GROUP", "");
			
			strSvcId    = "select2";
			inData      = "select2=dsSelect2";
			outData     = "dsList2=select20";
			
			break;
	}
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
	*/
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	switch(this.divData.form.tabData.tabindex) {
		case 0:
			var nrow = this.gfnGridAdd(this.dxGrid); // top (default), bottom, current
			break;
		case 1:
			var nrow = this.gfnGridAdd(this.dxGrid2); // top (default), bottom, current
			break;
	}
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	
	switch(this.divData.form.tabData.tabindex) {
		case 0:
			this.gfnGridDel(this.dxGrid);
			break;
		case 1:
			this.gfnGridDel(this.dxGrid2);
			break;
	}
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	switch(this.divData.form.tabData.tabindex) {
		case 0:
			this.gfnExcelExport(this.dxGrid);
			break;
		case 1:
			this.gfnExcelExport(this.dxGrid2);
			break;
	}
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;
	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
		this.gfnGridAfterSelect(this.dxGrid2);	
	}
// 	else if (svcID == "select2") {
// 		this.gfnGridAfterSelect(this.dxGrid2);	
// 	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
		this.gfnGridClear(this.dxGrid2);	
	}
};

this.divData_tabData_onchanged = function(obj:nexacro.Tab,e:nexacro.TabIndexChangeEventInfo)
{
	// 탭 변경시 조회처리시
// 	if(e.preindex != e.postindex) {
// 		this.FormBtns.Select.click();
// 	}
};
]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DZZPR_BUMUNCODE_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">select2</Col>
            <Col id="SP">DZZPR_GROUPCODE_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged"/>
      <Dataset id="dsList2"/>
    </Objects>
  </Form>
</FDL>
