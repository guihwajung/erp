<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="290" height="130" maxwidth="315" maxheight="180" titletext="회사별 의료비 지원현황" onload="form_onload">
    <Layouts>
      <Layout>
        <Static id="staTITLE" taborder="0" text="회사별 지급현황" left="0" top="0" height="30" cssclass="sta_TITLE_Bg" textAlign="left" right="0"/>
        <Div id="divBtns" left="43" top="77" width="200" height="27" taborder="1">
          <Layouts>
            <Layout>
              <Button id="btnCANCLE" taborder="0" text="취소" left="120" top="0" width="60" height="27" onclick="btnCANCLE_onclick"/>
              <Button id="btnOK" taborder="1" text="확인" left="30" top="0" width="60" height="27" onclick="btnOK_onclick"/>
            </Layout>
          </Layouts>
        </Div>
        <Static id="staYY_BASE" taborder="2" left="10" top="35" width="80" height="30" text="대상년도" cssclass="sta_WF_tablelabelE"/>
        <Static id="sta03" taborder="3" left="90" top="35" height="30" cssclass="sta_WF_tablebg" onclick="sta04_onclick" textAlign="right" width="190"/>
        <Div id="ctclYY_FROM" taborder="4" left="95" top="40" width="80" height="20" url="cmm::cmmCalYY.xfdl"/>
        <Div id="ctclYY_TO" taborder="5" left="196" top="40" width="80" height="20" url="cmm::cmmCalYY.xfdl"/>
        <Static id="sta01" taborder="6" text="~" left="180" top="40" width="10" height="20"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);
	this.gfnFormInfo(this);
	// ---------------------------//

	this.fnSetButton();
	//this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	

	//대상년도
	this.ctclYY_FROM.form.TextBox.set_value(this.gfnGetDate().substring(0,4)-1);
	this.ctclYY_TO.form.TextBox.set_value(this.gfnGetDate().substring(0,4));
	
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
	// this.FormBtns.Add.set_enable(false);
	// this.FormBtns.Del.set_enable(false);
};

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {

	this.grSearch = this.FormInfo.GR_SEARCH;					          // 권한
	this.cdGroup = this.AuthClient.CD_GROUP;					          // 그룹코드
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {

};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
};

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /************************************************************************
 * Validate
 ************************************************************************/
this.fnSelectValidate = function() {

	//대상년도
	if(this.gfnIsNull(this.ctclYY_FROM.form.TextBox.value)){
		this.fnValidateCallback = function() {
			this.ctclYY_FROM.form.TextBox.setFocus();
		}
		this.gfnAlert("대상년도 시작년을 입력하세요.", "fnValidateCallback");
		return false;
	}
	
	if(this.gfnIsNull(this.ctclYY_TO.form.TextBox.value)){
		this.fnValidateCallback = function() {
			this.ctclYY_TO.form.TextBox.setFocus();
		}
		this.gfnAlert("대상년도 종료년을 입력하세요.", "fnValidateCallback");
		return false;
	}
	
	if(this.ctclYY_FROM.form.TextBox.value > this.ctclYY_TO.form.TextBox.value){
		this.fnValidateCallback = function() {
			this.ctclYY_FROM.form.TextBox.setFocus();
		}
		this.gfnAlert("대상년도 시작년은 종료년 보다 클 수 없습니다.", "fnValidateCallback");
		return false;
	}
	
 	return true;
};
/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if(svcID == "report") {
		if (errorCode == 0) {
			trace(this.dsList.saveXML());
			//this.getParentContext().close(true);
		} else {
			this.gfnAlert(errorMsg);
		}
	}
};

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 /************************************************************************
 * 확장버튼 이벤트
 ************************************************************************/
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.btnOK_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if(!this.fnSelectValidate()) return false;
	
	this.dsReport = new Dataset();
	
	this.dsReport.addColumn("YY_FROM", "string");
	this.dsReport.addColumn("YY_TO", "string");
	
	var nrow = this.dsReport.addRow();
	this.dsReport.setColumn(0, "YY_FROM", this.ctclYY_FROM.form.TextBox.value);
	this.dsReport.setColumn(0, "YY_TO", this.ctclYY_TO.form.TextBox.value);

	var strSvcId    = "report";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "report=dsReport";
	var outData     = "dsList=report0";
	var strArg      = "";
	var callBackFnc = "fnCallback";

	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]

	var inProc		= "_dsProc";
	var inParam 	= "params=dsReportParam";	// 조회SP이외 사용할 정보
	var inParam 	= "";						// 필요없는 경우 생략
	var inData      = "report=dsReport";
	var reportpath  = "/da/dab/DAB_MEDICAL_CORP.ozr";

	gfnOpenReport(this, reportpath, inProc, inParam, inData);
	
	this.getParentContext().close(true);
};

this.btnCANCLE_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.getParentContext().close(false);
};]]></Script>
    <Dataset id="dsList"/>
    <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
      <ColumnInfo>
        <Column id="DT_PROVATION_FROM" type="STRING" size="256"/>
      </ColumnInfo>
      <Rows>
        <Row>
          <Col id="DT_PROVATION_FROM"/>
        </Row>
      </Rows>
    </Dataset>
    <Objects>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">report</Col>
            <Col id="SP">DABPR_MEDICAL_CORP_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsList"/>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="ctclYY_FROM.form.TextBox" propid="value" datasetid="dsSearch" columnid="DT_WORK"/>
      <BindItem id="item1" compid="ctclYY_TO.form.TextBox" propid="value" datasetid="dsSearch" columnid="DT_WORK"/>
    </Bind>
  </Form>
</FDL>
