<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="공무/회계(연도별)" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="staYR_MAGAM" taborder="0" text="기준년도" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYR_WORK" taborder="1" left="staYR_MAGAM:0.0" top="10.0" width="70" height="24.0" url="cmm::cmmCalYY.xfdl" text=""/>
              <Static id="sta00" taborder="3" text="현장코드" left="ctclYR_WORK:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_SITE" CodeFindName="DZX_CFSITE" CDTextWidth="80" taborder="2" left="sta00:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="1" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable(); 
	this.fnSetEvent();
	this.fnSetParameter();

	var year1 = this.gfnGetDate().substr(0,4); 
	this.dsSearch.setColumn(0, "YR_WORK", year1);
	this.fnHeadNmCh(year1);	
	
	// 타화면에서 오픈시 넘어오는 파라미터 처리
	if(!this.gfnIsNull(this.getOwnerFrame().CD_SITE) && !this.gfnIsNull(this.getOwnerFrame().DS_SITE)) {
		if(!this.gfnIsNull(this.getOwnerFrame().YM_WORK))
		{
			var year1 = this.gfnGetDate().substr(0,4); 
			this.dsSearch.setColumn(0, "YR_WORK", year1);			
			this.fnHeadNmCh(year1);	
		}
		this.dsSearch.setColumn(0, "CD_SITE", this.getOwnerFrame().CD_SITE);
		this.divSearch.form.ccfCD_SITE.form.DSTextBox.set_value(this.getOwnerFrame().DS_SITE);				
		this.FormBtns.Select.click();
	}
};
 
/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
}
 
/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {	
	//this.btnEnd = this.gfnFormButtonAdd("btnEnd", "fnEnd");  
	//this.btnCancel = this.gfnFormButtonAdd("btnCancel", "fnCancel");  
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_SITE = this.divSearch.form.ccfCD_SITE;
	
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {		
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DW", "DWE_DAEBI_DH_YEAR");

	// 셀 수정가능 여부
	//this.dxGrid.EnterCell = "fnGrid_EnterCell";
	//this.dxGrid.set_selecttype("cell");	
	//this.dxGrid.addEventHandler("onselectchanged", this.fnGrid_RowCellChanged, this);
	
	// 그리드 코드파인드 설정 
	//this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
	//this.dxGrid.AfterCDTextChanged = "fnGrid_AfterCDTextChanged";
	//this.dsList.addEventHandler("oncolumnchanged", this.fnGrid_ColumnChanged, this);
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	// 조회 Master
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("TY_WRK", "string");
	this.dsSelect.addColumn("YR_WORK", "string");
	this.dsSelect.addColumn("CD_SITE", "string");
	this.dsSelect.addColumn("ID_USER", "string");
	this.dsSelect.addColumn("AUTH_CD_CORP", "string");	
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "TY_WRK", "Q");	
	this.dsSelect.setColumn(0, "YR_WORK", this.dsSearch.getColumn(0, "YR_WORK"));	
	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsSelect.setColumn(0, "ID_USER", this.AuthClient.ID_USER);
	this.dsSelect.setColumn(0, "AUTH_CD_CORP", this.AuthClient.CD_CORP);
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
// 	if(this.dsList.findRow(this.ucFlag, "I") > -1){
// 		this.gfnAlert("신규 추가된 데이터가 이미 있습니다.");
// 		return;
// 	}	
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	// 그리드 필수항목 체크	
	if (!this.gfnGridValidate(this.dxGrid)) return;	
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "YR_WORK"))) {
		this.gfnAlert("계획년도를 입력 하세요.");
		this.ctclYR_WORK.form.TextBox.setFocus();
		return false;
	}
	
	if (this.FormInfo.GR_SEARCH  >= "7") {		
		if (this.gfnIsNull(this.dsSearch.getColumn(0, "CD_SITE"))) {
			this.gfnAlert("현장코드를 입력 하세요.");
			this.ccfCD_SITE.form.CDTextBox.setFocus();
			return false;
		}	
	}
	
	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
		
		this.fnHeadNmCh(this.dsSearch.getColumn(0, "YR_WORK"));	
		this.fnColor();
		this.fnBtnCheckAll();
	} 
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {

}; 

this.fnAfterCDTextChanged = function(id, codeFindData) {

} 

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGrid_BeforeUserDataSetParam = function(id, dsUserParam, nrow) {	
	// 그리드에서 코드파인드 id는 그리드셋팅의 코드파인드 식별ID
	return true;
}

this.fnGrid_AfterCDTextChanged=function(id, codeFindData){

};
 
// cell 클릭했을때 이벤트(해당 cell에 대한 이벤트를 건다)
this.fnGrid_EnterCell = function(obj:nexacro.Grid, row, cell) {
	
}

this.fnGrid_RowCellChanged = function(obj:nexacro.Grid,e:nexacro.GridSelectEventInfo)
{
    if (!this.gfnGridIsRow(this.dxGrid)) return;	
};

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};
      
this.fnBtnCheckAll = function()
{	
	// 버튼 상태	
}  

this.fnHeadNmCh = function(yr1)
{
	// 해당 헤더컬럼 초기화
	this.dxGrid.setCellProperty("head", "5", "text", "년도");
	
	// 해당 헤더컬럼 인덱스 구하기
	var idx0 = ""; 
	
	// 해당 컬럼의 인덱스값을 구함
	for(var i=0; i < this.dxGrid.getCellCount("head"); i++) { 
		if(this.dxGrid.getCellText(-1,i) == "년도"){ 
			idx0 = i;
		}
	}	

	this.dxGrid.setCellProperty("head", idx0, "text", yr1+"년");
}

this.fnColor = function()
{ 
	this.dxGrid.set_enableredraw(false);
	
	this.gfnGridColumnColor(this.dxGrid, "YR_WORK", "Back_Fixed", "TY_GUBUN == '01'", true);
	this.gfnGridColumnColor(this.dxGrid, "YR_WORK", "Back_Fixed", "TY_GUBUN == '02'", true);
	this.gfnGridColumnColor(this.dxGrid, "YR_WORK", "Back_SoKe", "TY_GUBUN == '03'", true);
	this.gfnGridColumnColor(this.dxGrid, "YR_WORK", "Back_SoKe", "TY_GUBUN == '04'", true);
	
	this.dxGrid.set_enableredraw(true);	
}]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DWEPR_DAEBI_YEAR_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="YR_WORK" type="STRING" size="256"/>
          <Column id="CD_SITE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ctclYR_WORK.form.TextBox" propid="value" datasetid="dsSearch" columnid="YR_WORK"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
    </Bind>
  </Form>
</FDL>
