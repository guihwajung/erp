<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="790" height="500" titletext="주택-약정관리" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="78.0" right="0" cssclass="div_SEARCH_Bg" text="">
          <Layouts>
            <Layout>
              <Static id="staCD_PROJ" taborder="0" text="프로젝트코드" left="0.0" top="10.0" width="118.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Edit id="ctxtCD_PROJ" taborder="1" width="66" height="24.0" value="" left="0.0" top="staCD_PROJ:10.0" readonly="true" enable="true"/>
              <Edit id="ctxtDS_PROJ" taborder="2" width="186" height="24.0" value="" left="ctxtCD_PROJ:0.0" top="staCD_PROJ:10.0" readonly="true"/>
              <Static id="staAM_ESTM_CAL" taborder="3" text="예정가격" left="0.0" top="10.0" width="118.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <MaskEdit id="ctxtAM_ESTM_CAL" taborder="4" width="140" height="24.0" value="" textAlign="right" format="#,##0" top="staCD_PROJ:10.0" left="0.0" autoselect="true" readonly="true" displaynulltext="0"/>
              <MaskEdit id="ctxtAM_ESTM_CAL00" taborder="6" width="50" height="24.0" value="" textAlign="right" format="#,##0" top="staCD_PROJ:10.0" left="ctxtAM_ESTM_CAL:0.0" autoselect="true" readonly="false" displaynulltext="0" enable="true"/>
              <Static id="staAM_ESTM_CAL00" taborder="5" text="추가Row" left="0.0" top="10.0" width="118.0" height="24.0" cssclass="sta_WF_SchLabel"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="1" left="0" cssclass="div_DATA_Bg" text="" right="0" top="50" height="450">
          <Layouts>
            <Layout>
              <Grid id="objGrd" taborder="0" top="0" left="0" right="0" bottom="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();
this.FIELD_EXPL_GUBUN = this.getOwnerFrame().FIELD_EXPL_GUBUN;

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);	
	// ---------------------------//
	this.fnSetButton();
	this.fnSetExtendButton();
	
	this.fnSetVariable();
	this.fnSetParameter();
	this.fnSetEvent();
	this.gridGoloring();
	
	this.dsSearch.setColumn(0, "CD_PROJ", this.getOwnerFrame().CD_PROJ);
	this.dsSearch.setColumn(0, "DS_PROJ", this.getOwnerFrame().DS_PROJ);
	this.dsSearch.setColumn(0, "AM_ESTM_CAL", this.getOwnerFrame().AM_ESTM_CAL);
	this.dsSearch.setColumn(0, "NO_ADDCNT", 1);
	
	this.FormBtns.Select.click();
};
 
/************************************************************************
 * 담당자 여부 검사
 ************************************************************************/
 this.fnGetYNCharge = function(){
	
	this.dsReqYNCharge = new Dataset();
	this.dsReqYNCharge.addColumn("CD_PROJ", "string");
	this.dsReqYNCharge.addColumn("ID_USER", "string");
	
	this.dsReqYNCharge.addRow();
	this.dsReqYNCharge.setColumn(0, "CD_PROJ", this.getOwnerFrame().CD_PROJ);
	this.dsReqYNCharge.setColumn(0, "ID_USER", this.objApp.gdsUserInfo.getColumn(0, "ID_USER"));
		
	var strSvcId    = "selectCharge";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
		inData      = "selectCharge=dsReqYNCharge";
		outData     = "dsRcvYNCharge=selectCharge0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
		
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc,false); // 통신방법 정의 [생략가능]
 }
 

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.CD_CORP = this.AuthClient.CD_CORP;	
	
	this.dxGrid = this.divData.form.objGrd;	// 참여사
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.gfnGridInit(this.dxGrid, this.dsList, "DO", "DOA_CO_BID");	// 투찰사관리
	
	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";	
};


/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnGrid_BeforeUserDataSetParam = function(id, dsUserParam, nrow)  {
	dsUserParam.setColumn(nrow, "CD_CORP", this.CD_CORP);
	dsUserParam.setColumn(nrow, "CD_SITE", "");
	dsUserParam.setColumn(nrow, "TY_VENDOR", "CIVLSJC");
	return true;
 }

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	
	this.dsSave = new Dataset();
	
	this.dsSave.addColumn("TY_WRK", "string");		// 
	this.dsSave.addColumn("CD_PROJ", "string");		// 프로젝트코드
	this.dsSave.addColumn("CD_CONST_CO", "string");	// 건설사코드
	this.dsSave.addColumn("AM_BID", "bigdecimal");	// 투찰금액
	this.dsSave.addColumn("RT_BID", "bigdecimal");	// 투찰율
	this.dsSave.addColumn("DS_RM", "string");		// 비고
	this.dsSave.addColumn("ID_USER", "string");
		
}


/************************************************************************
 * 트렌젝션 버튼 이벤트
 ************************************************************************/
this.fnSelect = function(obj:nexacro.Button,e:nexacro.ClickEventInfo){

	this.dsSelect = new Dataset();
	this.dsSelect.copyData(this.dsSearch);	
	
	this.dsSelect.setColumn(0, "YN_READ", "N");

	var strSvcId    = "select";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";	
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	저장 버튼
 */
this.fnSave = function(obj:nexacro.Button,e:nexacro.ClickEventInfo){
		
	if(!this.gfnDataValidate(this.dsList, this.dsRequired))return;	
	this.dxGrid.updateToDataset();
	this.dsSave.clearData();
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
			case "U":
			case "D":
				var nrow = this.dsSave.addRow();		
				this.dsSave.setColumn(nrow, "TY_WRK", flag);
				this.dsSave.setColumn(nrow, "CD_PROJ", this.getOwnerFrame().CD_PROJ);					// 프로젝트코드
				this.dsSave.setColumn(nrow, "CD_CONST_CO", this.dsList.getColumn(i, "CD_CONST_CO"));	// 건설사코드
				this.dsSave.setColumn(nrow, "AM_BID", this.dsList.getColumn(i, "AM_BID"));				// 투찰금액
				this.dsSave.setColumn(nrow, "RT_BID", this.dsList.getColumn(i, "RT_BID"));				// 투찰율
				this.dsSave.setColumn(nrow, "DS_RM", this.dsList.getColumn(i, "DS_RM"));				// 비고
				this.dsSave.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
				break;
		}
	}
	
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc,false); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	for(var i=0;i<this.dsSearch.getColumn(0,"NO_ADDCNT");i++){
		this.gfnGridAdd(this.dxGrid);
	}
	this.dsSearch.setColumn(0,"NO_ADDCNT",1);
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}


/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}
/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if(svcID == "select") {
	} else if(svcID == "save") {
		this.FormBtns.Select.click();
	} else if(svcID == "delete") {
		this.FormBtns.Select.click();
	}
	this.fnSetButton();	
};

/************************************************************************
 * 기타 이벤트 설정
 ************************************************************************/
this.dsList_oncolumnchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.columnid == "AM_BID"){
		obj.setColumn(e.row, "RT_BID", this.getOwnerFrame().AM_ESTM_CAL==0?0:(e.newvalue/this.getOwnerFrame().AM_ESTM_CAL)*100);
	}		
	
};

//readonly color 설정
this.gridGoloring = function(){
	this.gfnGridColumnColor(this.dxGrid, "CD_CONST_CO","BACK_ReadOnly", "nx_flag==null");
}
]]></Script>
    <Objects>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DOAPR_CIVL_PROJ_CO_BID_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DOAPR_CIVL_PROJ_CO_BID_SAVE</Col>
          </Row>
          <Row>
            <Col id="TARGET">selectCharge</Col>
            <Col id="SP">DOAPR_PROJ_YNCHARGE_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsList" oncolumnchanged="dsList_oncolumnchanged"/>
      <Dataset id="dsSearch">
        <ColumnInfo>
          <Column id="CD_PROJ" type="STRING" size="256"/>
          <Column id="DS_PROJ" type="STRING" size="256"/>
          <Column id="AM_ESTM_CAL" type="STRING" size="256"/>
          <Column id="NO_ADDCNT" type="INT" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsRequired">
        <ColumnInfo>
          <Column id="CD_FIELD" type="STRING" size="256"/>
          <Column id="DS_FIELD" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_FIELD">CD_CONST_CO</Col>
            <Col id="DS_FIELD">건설사코드</Col>
          </Row>
          <Row>
            <Col id="CD_FIELD">AM_BID</Col>
            <Col id="DS_FIELD">투찰금액</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsRcvYNCharge">
        <ColumnInfo>
          <ConstColumn id="YN_EXISTS" type="STRING" size="30"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ctxtCD_PROJ" propid="value" datasetid="dsSearch" columnid="CD_PROJ"/>
      <BindItem id="item1" compid="divSearch.form.ctxtDS_PROJ" propid="value" datasetid="dsSearch" columnid="DS_PROJ"/>
      <BindItem id="item2" compid="divSearch.form.ctxtAM_ESTM_CAL" propid="value" datasetid="dsSearch" columnid="AM_ESTM_CAL"/>
      <BindItem id="item3" compid="divSearch.form.ctxtAM_ESTM_CAL00" propid="value" datasetid="dsSearch" columnid="NO_ADDCNT"/>
    </Bind>
  </Form>
</FDL>
