<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="1280" height="720" titletext="자금일보상세내역" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static id="staCD_CORP" taborder="6" text="법인코드" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_CORP" CDTextWidth="50" taborder="0" left="staCD_CORP:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staDT_FROM" taborder="4" text="일보일자" left="ccfCD_CORP:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Calendar id="ctclDT_ILBO_FR" taborder="1" left="staDT_FROM:0.0" top="10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true"/>
              <Static id="sta01_00" taborder="9" text="~" left="ctclDT_ILBO_FR:0.0" top="10.0" width="30.0" height="24.0" textDecoration="none" cssclass="sta_WF_AC"/>
              <Calendar id="ctclDT_ILBO_TO" taborder="8" left="sta01_00:0.0" top="10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true"/>
              <Static id="staTY_GUBUN" taborder="5" text="입출구분" left="ctclDT_ILBO_TO:0.0" top="10.0" width="92.0" height="24.0" visible="false" cssclass="sta_WF_SchLabel"/>
              <Combo id="cboTY_INOUT" taborder="2" text="" left="staTY_GUBUN:0.0" top="10.0" width="100" height="24.0" codecolumn="CD_CODE" datacolumn="DS_CODE" value="" index="0" innerdataset="dsTY_INOUT" visible="false"/>
              <Static id="sta01" taborder="7" text="수지코드" left="cboTY_INOUT:0.0" top="10.0" width="92.0" height="24.0" textDecoration="none" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfSujiCd" CDTextWidth="90" taborder="3" left="sta01:0.0" top="10.0" width="269" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DFAPR_ILBOLIST_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo</Col>
            <Col id="SP">DZXPR_COMBO_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="DT_ILBO_TO" type="STRING" size="256"/>
          <Column id="DT_ILBO_FR" type="STRING" size="256"/>
          <Column id="TY_INOUT" type="STRING" size="256"/>
          <Column id="CD_SUJI" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_INOUT"/>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();	
	this.fnSetCombo();

};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	//this.FormBtns.Add.set_enable(false);
 	//this.FormBtns.Save.set_enable(false);
 	//this.FormBtns.Del.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
    this.btnFormButton3 = this.gfnFormButtonAdd("WorkBtn3", "fnWorkBtn3", "전표조회");  // 전표조회
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;
	this.ctclDT_ILBO_FR = this.divSearch.form.ctclDT_ILBO_FR;
	this.ctclDT_ILBO_TO = this.divSearch.form.ctclDT_ILBO_TO;
	this.cboTY_INOUT = this.divSearch.form.cboTY_INOUT;
	this.ccfSujiCd = this.divSearch.form.ccfSujiCd;	// 수지코드
	
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.ccfCD_CORP.CodeFindName = "DZX_CFCORP";
	this.ccfSujiCd.CodeFindName = "DFX_CFSUJICODE";	// 수지코드

	this.ccfCD_CORP.AfterCDTextChanged = "fnBeforeUserDataSetParam";
	this.ccfSujiCd.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.ccfSujiCd.AfterCDTextChanged = "fnAfterCDTextChanged";
	
	this.gfnGridInit(this.dxGrid, this.dsList, "DF", "DFA_ILBOLIST");
		
	if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
		this.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP); 
		this.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);	
	}
	
	var today = this.gfnGetDate();
	this.dsSearch.setColumn(0, "DT_ILBO", today);

	// 권한체크
	if (nexacro.toNumber(this.grSearch) >= 2) {
		this.ccfCD_CORP.set_enable(false);
	}	
	
	// 기준일자 포커스추가
	this.ccfCD_CORP.form.CDTextBox.setFocus();
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("FR_ILBO", "string");
	this.dsSelect.addColumn("TO_ILBO", "string");
	this.dsSelect.addColumn("TY_INOUT", "string");
	this.dsSelect.addColumn("CD_SUJI", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));
	this.dsSelect.setColumn(0, "FR_ILBO", this.dsSearch.getColumn(0, "DT_ILBO_FR"));
	this.dsSelect.setColumn(0, "TO_ILBO", this.dsSearch.getColumn(0, "DT_ILBO_TO"));
	this.dsSelect.setColumn(0, "TY_INOUT", this.dsSearch.getColumn(0, "TY_INOUT"));
	this.dsSelect.setColumn(0, "CD_SUJI", this.dsSearch.getColumn(0, "CD_SUJI"));
	
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
}

/*
 *	저장 버튼
 */
this.fnSave = function() {

}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.text)) {
		this.gfnAlert("법인코드를 입력 하세요.");
		this.ccfCD_CORP.form.CDTextBox.setFocus();
		return false;
	}
	
	if (this.gfnIsNull(this.ctclDT_ILBO_FR.value)) {
		this.gfnAlert("일보일자(FR)를 입력 하세요.");
		this.ctclDT_ILBO_FR.setFocus();
		return false;
	}
	
	if (this.gfnIsNull(this.ctclDT_ILBO_TO.value)) {
		this.gfnAlert("일보일자(TO)를 입력 하세요.");
		this.ctclDT_ILBO_TO.setFocus();
		return false;
	}
	
	return true;
};

this.fnSetCombo = function() {
	
	this.dsCombo = new Dataset();
	this.dsCombo.addColumn("CD_SYSTEM", "string");
	this.dsCombo.addColumn("CD_TYPE", "string");
	this.dsCombo.addRow();
	this.dsCombo.setColumn(0, "CD_SYSTEM", "DF");
	this.dsCombo.setColumn(0, "CD_TYPE", "A6");	
	
	var strSvcId    = "combo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "combo=dsCombo";
	var outData     = "dsTY_INOUT=combo0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		if (this.dsList.rowcount == 0) {
			this.gfnAlert("자료가 존재하지 않습니다.");
		} else {
			this.gfnGridAfterSelect(this.dxGrid);	
		}
	}else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}else if(svcID == "combo"){
		
		// 타화면에서 오픈시 넘어오는 파라미터 처리
		var frame = this.getOwnerFrame();
		
		trace("CD_CORP->" + frame.CD_CORP +
			  "\n DS_CORP->" + frame.DS_CORP +
			  "\n DT_ILBO->" + frame.DT_ILBO +
			  "\n TY_INOUT->" + frame.TY_INOUT +
			  "\n CD_SUJI->" + frame.CD_SUJI +
			  "\n DS_SUJI->" + frame.DS_SUJI 
		);
		
        if (!this.gfnIsNull(this.getOwnerFrame().CD_CORP)) {
			this.ccfCD_CORP.form.CDTextBox.set_value(this.getOwnerFrame().CD_CORP);	    // 법인코드
			this.ccfCD_CORP.form.DSTextBox.set_value(this.getOwnerFrame().DS_CORP);	    // 법인명칭
			this.ctclDT_ILBO_FR.set_value(this.getOwnerFrame().DT_ILBO);				// 일보일자FR
			this.ctclDT_ILBO_TO.set_value(this.getOwnerFrame().DT_ILBO);				// 일보일자TO
			this.cboTY_INOUT.set_value(this.getOwnerFrame().TY_INOUT);					// 입출구분
			this.ccfSujiCd.form.CDTextBox.set_value(this.getOwnerFrame().CD_SUJI);		// 수지코드
			this.ccfSujiCd.form.DSTextBox.set_value(this.getOwnerFrame().DS_SUJI);		// 수지명칭
			
			//trace(this.dsSearch.saveXML());
			
			this.FormBtns.Select.click();
		}
		
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
 this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {

	//var cdCorp = this.ccfCorpCd.form.CDTextBox.value;
	
	switch(id) {
	case "ccfCorpCd": // 법인코드
		dsUserParam.setColumn(nrow, "CD_GROUP", this.idGroup);	
		break;
		
	case "ccfSujiCd": // 수지코드
		dsUserParam.setColumn(nrow, "TY_INOUT", "");	
		dsUserParam.setColumn(nrow, "YN_USE", "Y");
		break;		
		
	default:
	}	
	return true;	

};
 
this.fnAfterCDTextChanged = function(id, codeFindData) {
	switch(id) {
	
	case "ccfCorpCd": // 법인코드
		break;

	case "ccfSujiCd": // 수지코드
		break;
	default:
	}	
	return true;
}
 
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		// 폼상태 초기화
		this.gfnSetFormStatus(this);	
		this.gfnGridClear(this.dxGrid);
	}
};

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};

/************************************************************************
 * 확장버튼 이벤트
 ************************************************************************/
/*
 *	전표조회 버튼 클릭
 */
this.fnWorkBtn3 = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {	
	if(!this.gfnGridIsRow(this.dxGrid)) return;	
	
	if(!this.gfnIsNull(this.dsList.getColumn(this.dsList.rowposition, "NO_SLIP")) ){
		var param = {};
		
		param.CD_TRADE = this.dsList.getColumn(this.dsList.rowposition,"NO_SLIP");
		param.IUD_FLAG = "S";
		
		this.gfnFormOpen("DHA", "DHA_ISSUESLIP", "", param);
	} else {
		this.gfnAlert("전표가 생성된 행만 전표조회 가능합니다.", "");
	}
	
};]]></Script>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item1" compid="divSearch.form.ctclDT_ILBO_FR" propid="value" datasetid="dsSearch" columnid="DT_ILBO_FR"/>
      <BindItem id="item3" compid="divSearch.form.cboTY_INOUT" propid="value" datasetid="dsSearch" columnid="TY_INOUT"/>
      <BindItem id="item2" compid="divSearch.form.ccfSujiCd.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SUJI"/>
      <BindItem id="item4" compid="divSearch.form.ctclDT_ILBO_TO" propid="value" datasetid="dsSearch" columnid="DT_ILBO_TO"/>
    </Bind>
  </Form>
</FDL>
