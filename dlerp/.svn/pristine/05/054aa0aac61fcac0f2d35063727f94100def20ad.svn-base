<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="1280" height="500" maxwidth="1280" maxheight="580" titletext="전표연결(팝업)" onload="form_onload">
    <Layouts>
      <Layout>
        <Button id="btnConf" taborder="0" text="확인" left="511" width="69" height="27" onclick="btnConf_onclick" bottom="7"/>
        <Button id="btnCancel" taborder="1" text="취소" left="590" width="69" height="27" onclick="btnCancel_onclick" bottom="7"/>
        <Static id="staTitle" taborder="3" text="전표연결" left="0" top="10" height="22" cssclass="sta_TITLE_Bg" right="0"/>
        <Div id="divSearch" taborder="4" left="0" top="staTitle:10.0" height="77" right="0" cssclass="div_SEARCH_Bg" text="">
          <Layouts>
            <Layout>
              <Static id="sta01" taborder="0" text="법인코드" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_CORP" CDTextWidth="70" taborder="1" left="sta01:0.0" top="10.0" width="259" height="24.0" url="cmm::cmmCodeFind.xfdl" text="" enable="false"/>
              <Static id="staCD_DEPT" taborder="2" text="귀속부서" left="ccfCD_CORP:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_DEPT" CDTextWidth="70" taborder="5" left="staCD_DEPT:0.0" top="10.0" width="259" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staDT_GET" taborder="7" text="회계일자" left="ccfCD_DEPT:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Calendar id="ctclDT_ACCOUNT" taborder="6" left="staDT_GET:0.0" top="10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true"/>
              <Static id="staCD_VENDOR" taborder="3" text="거래처" left="0.0" top="sta01:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_VENDOR" CDTextWidth="70" taborder="4" left="staCD_VENDOR:0.0" top="sta01:10.0" width="259" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="2" left="0" top="divSearch:10" bottom="45" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
        <Button id="btnSearch" taborder="5" text="조회" left="1003" top="60" width="40" height="21" onclick="btnSearch_onclick"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	//법인코드, 계정코드 셋팅
	this.ccfCD_CORP.form.CDTextBox.set_value(this.getOwnerFrame().CD_CORP);	
	this.ccfCD_CORP.form.DSTextBox.set_value(this.getOwnerFrame().DS_CORP); 
	
	var DT_ACCOUNT = this.getOwnerFrame().DT_ACCOUNT;
	var toDay = this.gfnGetDate();

	//회계년월
	this.ctclDT_ACCOUNT.set_value(DT_ACCOUNT);	

	this.GR_SEARCH = this.getOwnerFrame().GR_SEARCH;
	if (nexacro.toNumber(this.GR_SEARCH) >= 7) {
		this.ccfCD_DEPT.form.CDTextBox.set_value(this.AuthClient.CD_DEPT);	
		this.ccfCD_DEPT.form.DSTextBox.set_value(this.AuthClient.DS_DEPT); 
		//this.staCD_DEPT.set_textDecoration("underline");
		this.staCD_DEPT.set_cssclass("sta_WF_SchLabelE");		
	}

	//조회처리
	this.btnSearch.click();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {

}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {

};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {	

	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;
	this.ccfCD_DEPT = this.divSearch.form.ccfCD_DEPT;
	this.ccfCD_VENDOR = this.divSearch.form.ccfCD_VENDOR;
	this.ctclDT_ACCOUNT = this.divSearch.form.ctclDT_ACCOUNT;
	this.staCD_DEPT = this.divSearch.form.staCD_DEPT;
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	//법인코드
	this.ccfCD_CORP.CodeFindName = "DHX_CFCORP";
	this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";

	//귀속부서
 	this.ccfCD_DEPT.CodeFindName = "DHX_CFACNTUNIT2";
 	this.ccfCD_DEPT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	//거래처
 	this.ccfCD_VENDOR.CodeFindName = "DHX_CFALLVENDOR_CODEFIND";
 	this.ccfCD_VENDOR.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	this.gfnGridInit(this.dxGrid, this.dsList, "DH", "DHV_ORIGINTAX_DEFRAYMENTDLG");
	
	//검색조건 변경 이벤트
	this.dsSearch.addEventHandler("onvaluechanged", this.dsSearch_Valuechanged, this);

};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("CD_DEPT_BE", "string");
	this.dsSelect.addColumn("CD_VENDOR", "string");
	this.dsSelect.addColumn("DT_ACCOUNT", "string");
	
	this.dsUpdate = new Dataset();
	this.dsUpdate.addColumn("NO_EXPENSE", "string");
	this.dsUpdate.addColumn("CD_TRADE", "string");
	this.dsUpdate.addColumn("ID_USER", "string");
	this.dsUpdate.addColumn("YN_CONNECT", "string");

}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;

	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsList.clearData();
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "CD_CORP"		, this.ccfCD_CORP.form.CDTextBox.value);        // 법인코드	
	this.dsSelect.setColumn(0, "CD_DEPT_BE"		, this.ccfCD_DEPT.form.CDTextBox.value);  		// 귀속부서	
	this.dsSelect.setColumn(0, "CD_VENDOR"		, this.ccfCD_VENDOR.form.CDTextBox.value);    	// 거래처
	this.dsSelect.setColumn(0, "DT_ACCOUNT"		, this.ctclDT_ACCOUNT.value);    				// 기간(시작)
	
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
	
}

 /*
 *	입력 버튼
 */
this.fnAdd = function() {
	

}

 /*
 *	저장 버튼
 */
this.fnSave = function() {
	if(!this.gfnGridIsRow(this.dxGrid)) return;
	
	this.dsUpdate.clearData();
	
	var nrow = this.dsUpdate.addRow();
	this.dsUpdate.setColumn(nrow, "NO_EXPENSE", this.getOwnerFrame().NO_EXPENSE);								// 부모창에 CD_ASSET
	this.dsUpdate.setColumn(nrow, "CD_TRADE", this.dsList.getColumn(this.dsList.rowposition, "CD_TRADE"));	// 전표번호
	this.dsUpdate.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);	
	this.dsUpdate.setColumn(nrow, "YN_CONNECT", "Y");
	
	if (this.dsUpdate.rowcount == 0) return;

	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "update=dsUpdate";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	//this.gfnGridDel(this.dxGrid);
}


/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	//this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}
/************************************************************************
 * Validate
 ************************************************************************/
this.fnSelectValidate = function() {

	if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
		this.gfnAlert("법인코드는 필수입니다.");
		this.ccfCD_CORP.form.CDTextBox.setFocus();
		return false;
	}
	
	if(this.gfnIsNull(this.ctclDT_ACCOUNT.value)){
		this.gfnAlert("회계일자는 필수입니다.");
		this.ctclDT_ACCOUNT.setFocus();
		return false;
	}
	
	return true;
};
/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
*/
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
	}
	if(svcID == "save"){
		if (errorCode == 0) {
			this.gfnAlert("처리 되었습니다.", "fnMsgCallBack");
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

this.fnMsgCallBack = function ()
{
	this.getParentContext().close(true);
};


/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
 this.fnAfterCDTextChanged = function(id, codeFindData) {
	switch(id) {
		case "ccfCD_CORP":	//법인코드
			this.ccfCD_DEPT.form.fnCodeFindClear();
			this.ccfCD_VENDOR.form.fnCodeFindClear();
		break;
	}
}

this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	var cdCorp = this.ccfCD_CORP.form.CDTextBox.value;
	switch(id) {
		case "ccfCD_CORP":	//법인코드
			dsUserParam.setColumn(nrow, "ID_SABUN", this.AuthClient.ID_USER);
		break;
		case "ccfCD_DEPT":		//귀속부서
			if (!this.gfnIsNull(cdCorp)) {
				dsUserParam.setColumn(nrow, "CD_DEPT_UPPER"	, "");			//상위부서
				dsUserParam.setColumn(nrow, "YN_SLIPACCEPT"	, "");			//전표발행여부
				dsUserParam.setColumn(nrow, "CD_CORP"		, cdCorp);		//법인코드
				dsUserParam.setColumn(nrow, "YN_USE"		, "Y");			//사용여부
				dsUserParam.setColumn(nrow, "GR_DEPT_ACNT"	, "");			//현장/본사여부
			    dsUserParam.setColumn(nrow, "ID_USER"	    , this.AuthClient.ID_USER);
			    dsUserParam.setColumn(nrow, "GR_SEARCH"     , this.GR_SEARCH);
			    dsUserParam.setColumn(nrow, "CD_DEPT"	    , this.AuthClient.CD_DEPT);
				
			}else{
				this.gfnAlert("법인코드는 필수입력 값입니다.");
				return false;
			}
		break;
		case "ccfCD_VENDOR":	//거래처
			if (!this.gfnIsNull(cdCorp)) {
				dsUserParam.setColumn(nrow, "CD_CORP" , cdCorp);	
			}else{
				this.gfnAlert("법인코드는 필수입력 값입니다.");
				return false;
			}
			
		break;
	}
	
	return true;
};

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
//조회버튼 클릭
this.btnSearch_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.fnSelect();
};

//취소버튼 클릭
this.btnCancel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.getParentContext().close();
};

//확인버튼 클릭
this.btnConf_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if(!this.gfnGridIsRow(this.dxGrid)) return;
	
	var cdTrade = this.dsList.getColumn(this.dsList.rowposition, "CD_TRADE");

	this.gfnConfirm("전표번호("+cdTrade+")로 연결처리 하시겠습니까?", "fnConf_callback");
};

this.fnConf_callback = function(strId, val) 
{
	if(val == true) {
		this.fnSave();
	}
};

//검색조건 변경 이벤트
this.dsSearch_Valuechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{	
	if(e.oldvalue != e.newvalue) {
		this.gfnGridClear(this.dxGrid);	
	}
};]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DHAPR_EXPENSE_SLIP_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">update</Col>
            <Col id="SP">DHAPR_EXPENSE_SLIP_UPDATE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="CD_DEPT" type="STRING" size="256"/>
          <Column id="CD_VENDOR" type="STRING" size="256"/>
          <Column id="DT_ACCOUNT" type="STRING" size="256"/>
          <Column id="NO_EXPANSE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_VENDOR.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_VENDOR"/>
      <BindItem id="item2" compid="divSearch.form.ccfCD_DEPT.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_DEPT"/>
      <BindItem id="item3" compid="divSearch.form.ctclDT_ACCOUNT" propid="value" datasetid="dsSearch" columnid="DT_ACCOUNT"/>
    </Bind>
  </Form>
</FDL>
