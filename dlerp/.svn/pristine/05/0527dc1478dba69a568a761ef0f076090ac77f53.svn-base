<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="1280" height="720" titletext="평가진행현황" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="1" left="0" top="0" height="46.0" right="0" cssclass="div_SEARCH_Bg" text="">
          <Layouts>
            <Layout>
              <Static id="staCD_CORP" taborder="2" text="법인" left="0" top="10.0" width="66" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_CORP" CDTextWidth="50" taborder="3" left="staCD_CORP:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DAX_CFCORP_CODEFIND"/>
              <Static id="staID_RTNG" taborder="1" text="평가회차" left="ccfCD_CORP:0.0" top="10.0" width="92" height="24.0" rtl="false" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfID_RTNG" CDTextWidth="100" taborder="3" left="staID_RTNG:0.0" top="10.0" width="350" height="24.0" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DAX_CFRTNG_STD"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg" ondragmove="divData_ondragmove">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="5" bottom="0" right="0" autosizingtype="row"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo) {
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);
	this.gfnFormInfo(this);
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	this.fnSetCombo();
	this.fnInit();
}

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출  
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
}

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	// 그리드영역
	this.dxGrid    = this.divData.form.objGrid;
	
	// 검색영역
	this.ccfCD_CORP   = this.divSearch.form.ccfCD_CORP;
	this.ccfID_RTNG   = this.divSearch.form.ccfID_RTNG;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {	
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsListStatus, "DA", "DAJ_RTNG_RSLT_FDBK_LIST");
	this.dxGrid.EnterCell = "fnGridEnterCell";
	this.dxGrid.setFormatRowProperty(0, "size", 30);
	this.dxGrid.setFormatRowProperty(1, "size", 38);
	
	// 검색영역
	this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";	// 법인
	this.ccfCD_CORP.AfterCDTextChanged     = "fnAfterCDTextChanged";
	this.ccfID_RTNG.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";	// 평가기준
	this.ccfID_RTNG.AfterCDTextChanged     = "fnAfterCDTextChanged";
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	// 조회
	this.dsSelectStatus = new Dataset();
	this.dsSelectStatus.addColumn("CD_CORP", "string");
	this.dsSelectStatus.addColumn("ID_RTNG", "string");
	this.dsSelectStatus.addColumn("SEQ_BGVDPRSN", "int");
	this.dsSelectStatus.addColumn("ID_ITVWPRSN", "string");	
}

/************************************************************************
 * 콤보 데이터 조회 및 설정
 ************************************************************************/
this.fnSetCombo = function() {
	
}

/************************************************************************
 * 화면 및 검색영역 초기화
 ************************************************************************/
this.fnInit = function() {
	// 법인
	this.dsSearch.setColumn(0, "CD_CORP",  this.AuthClient.CD_CORP);
	this.dsSearch.setColumn(0, "DS_CORP",  this.AuthClient.DS_CORP);
	// 성명
	this.dsSearch.setColumn(0, "ID_SABUN", this.AuthClient.ID_SABUN);
	this.dsSearch.setColumn(0, "DS_HNAME", this.AuthClient.DS_HNAME);
}

/************************************************************************
 * 버튼 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.gfnSearchValidate(this.divSearch, this.dsSearch)) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);

	this.dsSelectStatus.clearData();
	this.dsSelectStatus.addRow();
	this.dsSelectStatus.setColumn(0, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));
	this.dsSelectStatus.setColumn(0, "ID_RTNG", this.dsSearch.getColumn(0, "ID_RTNG"));
	this.dsSelectStatus.setColumn(0, "SEQ_BGVDPRSN", 0);
	this.dsSelectStatus.setColumn(0, "ID_ITVWPRSN", this.dsSearch.getColumn(0, "ID_SABUN"));

	var strSvcId    = "select_status";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "select_status=dsSelectStatus";
	var outData     = "dsListStatus=select_status0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction(strSvcId,		// transaction을 구분하기 위한 svc id값
						strSvcType, 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData, 		// 입력값으로 보낼 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						outData, 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc);	// 통신방법 정의 [생략가능]
}

/*
 * 입력 버튼
 */
this.fnAdd = function() {
	
}

/*
 * 삭제 버튼 
 */
this.fnDel = function() {
	
}

/*
 * 저장 버튼
 */
this.fnSave = function() {
	
}

/*
 * 엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 * 출력 버튼
 */
this.fnPrint = function() {
	
}

/************************************************************************
 * Validate
 ************************************************************************/
this.fnSelectValidate = function() {
	return true;
}

/************************************************************************
 * 확장버튼 이벤트
 ************************************************************************/

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 * 기본 콜백
 */
this.fnCallback = function(svcID, errorCode, errorMsg, strArg) {
	if (errorCode != 0) {
		this.gfnAlert(errorMsg);
		return;
	}
	
	if (svcID == "select_status") {
// 		var items = ['DS_GOAL_WRK', 'DS_EXEC_PLN_HGHYR', 'DS_EXEC_PLN_LOWHYR', 'DS_GOAL_LVL_MIN', 'DS_GOAL_LVL_MAX', 'DS_MNPT_ADMN', 'DS_FDBK','DS_FDBK_TOT_A','DS_FDBK_TOT_B'];
// 		var list = [];
// 		for (var i = 0; i < this.dsListStatus.rowcount; i++) {
// 			var max = 0;
// 			for (var j = 0; j < items.length; j++) {
// 				var item = this.dsListStatus.getColumn(i, items[j]);
// 				if (item != undefined)
// 				{
// 					var line = item.split("\n").length;
// 					if (line > max) {
// 						max = line;
// 					}
// 				}
// 			}
// 			list.push(max);
// 		}
		
// 		for (var i = 0; i < list.length; i++) {
// 			if (list[i] == 2) {
// 				this.dxGrid.setRealRowSize(i, 40);
// 			} else if (list[i] == 3 ) {
// 				this.dxGrid.setRealRowSize(i, 55);
// 			} else if (list[i] == 4) {
// 				this.dxGrid.setRealRowSize(i, 70);
// 			} else if (list[i] == 5) {
// 				this.dxGrid.setRealRowSize(i, 85);
// 			} else if (list[i] > 5) {
// 				this.dxGrid.setRealRowSize(i, 100);
// 			}
// 		}
		
		this.gfnGridAfterSelect(this.dxGrid);
		this.dxGrid.set_autosizingtype("row");
						
		
		//this.dxGrid.selectRow(0, true);	
		
		//this.fnEnableButton();
	} 
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if (id == "ccfCD_CORP") {
		dsUserParam.setColumn(nrow, "CD_CORP"  , this.AuthClient.CD_CORP);
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "ID_USER"  , this.AuthClient.ID_USER);
	} else if (id == "ccfID_RTNG") {
		dsUserParam.setColumn(nrow, "CD_CORP"     , this.dsSearch.getColumn(0, "CD_CORP"));
		dsUserParam.setColumn(nrow, "YR_RTNG"     , "");
		dsUserParam.setColumn(nrow, "ID_SABUN"    , this.dsSearch.getColumn(0, "ID_SABUN"));
		dsUserParam.setColumn(nrow, "CD_RTNG_TYPE", "JA13");
		dsUserParam.setColumn(nrow, "ID_SCREEN"   , "DAJ_RTNG_RSLT_FDBK_LIST");
		dsUserParam.setColumn(nrow, "CD_ROLE"     , this.AuthClient.CD_ROLE);
	}
	
	return true;
}

this.fnAfterCDTextChanged = function(id, codeFindData) {
	if (codeFindData[0] == undefined) {
		return;
	}
	
	if (id == "ccfID_RTNG") {
		this.dsSearch.setColumn(0, "TY_PTCP", codeFindData[0]["TY_PTCP"]);
		this.dsSearch.setColumn(0, "CD_RTNG_ASBLNEXT", codeFindData[0]["CD_RTNG_ASBLNEXT"]);
		this.dsSearch.setColumn(0, "DS_RTNG_ASBLNEXT", codeFindData[0]["DS_RTNG_ASBLNEXT"]);
		this.dsSearch.setColumn(0, "CNTN_RTNG_ID", codeFindData[0]["CNTN_RTNG_ID"]);
		//this.FormBtns.Select.click();
	}
}

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGridBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	return true;
}

this.fnGridAfterCDTextChanged = function(id, codeFindData) {
	
}

this.fnGridEnterCell = function(obj:nexacro.Grid, row, cell) {
	var colnm = this.gfnGridGetBindColumnNameByIndex(this.dxGrid, cell);
	
	//this.fnEnableButton();
	var list = ['DS_COACHING','DS_OPINION'];
	if (list.indexOf(colnm) != -1 )
	{
		trace('fnGridEnterCell');
		this.fnEnableButton(colnm, row);
	}
}
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo) {
	if (e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);
	}
}

this.fnEnableButton = function(colnm, nrow) {			
// 	var list = ['DS_COACHING','DS_OPINION'];
// 	for (var i = 0; i < list.length; i++) {
// 		//this.dxGrid.setCellProperty("body", this.dxGrid.getBindCellIndex("body", list[i]), "cssclass", "BACK_ReadOnly");
// 		this.dxGrid.setCellProperty("body", this.dxGrid.getBindCellIndex("body", list[i]), "edittype", "none");
// 		this.dxGrid.setCellProperty("body", this.dxGrid.getBindCellIndex("body", list[i]), "expandshow", "show");	//"show"
// 	}
	
	this.dxGrid.setCellProperty("body", this.dxGrid.getBindCellIndex("body", colnm), "edittype", "none");
	this.dxGrid.setCellProperty("body", this.dxGrid.getBindCellIndex("body", colnm), "expandshow", "show");
	
	this.dsListStatus.set_enableevent(false);
	this.dsListStatus.setColumn(nrow, "MULTILINE_READONLY", "Y");
	this.dsListStatus.setColumn(nrow, "MULTILINE_EXCLUDE_COLUMNS", "");
		
// 	for (var i = 0; i < this.dsListStatus.rowcount; i++) {
// 		this.dsListStatus.setColumn(i, "MULTILINE_READONLY", "Y");
// 		this.dsListStatus.setColumn(i, "MULTILINE_EXCLUDE_COLUMNS", "");
// 	}
	this.dsListStatus.set_enableevent(true);
}
]]></Script>
    <Objects>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select_status</Col>
            <Col id="SP">DAJPR_RTNG_RSLT_FDBK_MNG_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="DS_CORP" type="STRING" size="256"/>
          <Column id="ID_RTNG" type="STRING" size="256"/>
          <Column id="DS_RTNG" type="STRING" size="256"/>
          <Column id="TY_PTCP" type="STRING" size="256"/>
          <Column id="ID_SABUN" type="STRING" size="256"/>
          <Column id="DS_HNAME" type="STRING" size="256"/>
          <Column id="ID_PERSON" type="STRING" size="256"/>
          <Column id="CD_RTNG_ASBLNEXT" type="STRING" size="256"/>
          <Column id="DS_RTNG_ASBLNEXT" type="STRING" size="256"/>
          <Column id="CNTN_RTNG_ID" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CORP"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsListStatus" onvaluechanged="dsList_onvaluechanged"/>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_CORP.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_CORP"/>
      <BindItem id="item2" compid="divSearch.form.ccfID_RTNG.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="ID_RTNG"/>
      <BindItem id="item3" compid="divSearch.form.ccfID_RTNG.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_RTNG"/>
    </Bind>
  </Form>
</FDL>
