<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="기성명세서" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" text="">
          <Layouts>
            <Layout>
              <Static id="sta00" taborder="0" text="현장코드" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_SITE" CodeFindName="DZX_CFSITE" CDTextWidth="70" taborder="1" left="sta00:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Combo id="cboNO_DGR" taborder="2" left="ccfCD_SITE:0.0" top="10.0" width="100" height="24.0" innerdataset="dsNO_DGR" datacolumn="DS_DGR" codecolumn="NO_DGR" value="" index="-1"/>
              <Static id="staYM_WORK" taborder="3" text="기성년월" left="cboNO_DGR:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYM_WORK" taborder="4" left="staYM_WORK:0.0" top="10.0" width="80" height="24.0" url="cmm::cmmCalMM.xfdl"/>
              <CheckBox id="cchkYN_TMON" taborder="5" text="금회기성" left="ctclYM_WORK:0.0" top="10.0" width="70" height="24.0" onchanged="divSearch_cchkAM_PREPAY_onchanged" falsevalue="N" truevalue="Y" value="Y"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg" ondragmove="divData_ondragmove">
          <Layouts>
            <Layout>
              <Div id="divSplitter" taborder="0" left="28.59%" top="0" width="5" height="100.00%" background="skyblue" cursor="ew-resize" ondrag="divData_divSplitter_ondrag"/>
              <Div id="divDataLeft" taborder="0" left="0" top="0" bottom="0" right="divSplitter:5">
                <Layouts>
                  <Layout>
                    <Grid id="objGrid" taborder="0" left="0" top="5" bottom="0" right="0"/>
                  </Layout>
                </Layouts>
              </Div>
              <Div id="divDataRight" taborder="0" left="divSplitter:5" top="0" bottom="0" right="0">
                <Layouts>
                  <Layout>
                    <Grid id="objGridSub" taborder="0" left="0" top="5" bottom="0" right="0"/>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	this.dsSearch.setColumn(0,"YN_TMON", "Y");
	
	if(!this.gfnIsNull(this.getOwnerFrame().CD_SITE) && !this.gfnIsNull(this.getOwnerFrame().YM_WORK))
	{
		this.dsSearch.setColumn(0,"CD_SITE", this.getOwnerFrame().CD_SITE);
		this.dsSearch.setColumn(0,"YM_WORK", this.getOwnerFrame().YM_WORK);
		this.ccfSite.form.DSTextBox.set_value(this.getOwnerFrame().CD_SITE);
		
		this.FormBtns.Select.click();
		
	}else{
		var today = this.gfnGetDate();
		this.dsSearch.setColumn(0,"YM_WORK",today.substr(0,6));
	}
	
	this.YN_DGR = this.gfnGetConfig("DW" , "YN_DGR");

	if(this.YN_DGR != "Y")
	{
		this.divSearch.form.cboNO_DGR.set_width(0);
		this.divSearch.form.cboNO_DGR.set_readonly(true);
		this.divSearch.form.resetScroll();
	}
	else if(this.YN_DGR == "Y")
	{
		this.divSearch.form.cboNO_DGR.set_width(100);
		this.divSearch.form.cboNO_DGR.set_readonly(false);
		this.divSearch.form.resetScroll();
	}
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 ************************************************************************/
this.fnSetButton = function() {
	// 서브 버튼 사용(2개 그리드 중간에 있는 파란선) 상단에 공통 셋트가 하나더 생긴다
	//this.gfnUseSubBtn(true, this.divData, this.divData.form.divSplitter); // divSplitter sync
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결
 ************************************************************************/
this.fnSetExtendButton = function() {
	//this.btn1 = this.gfnFormButtonAdd("Detail", "fnDetail1");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_SITE = this.divSearch.form.ccfCD_SITE;
    this.ctclYM_WORK = this.divSearch.form.ctclYM_WORK;
    this.cchkYN_TMON = this.divSearch.form.cchkYN_TMON;
    this.cboNO_DGR = this.divSearch.form.cboNO_DGR;
	
	this.dxGrid = this.divData.form.divDataLeft.form.objGrid;
	this.dxGridSub = this.divData.form.divDataRight.form.objGridSub;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {		
	this.gfnGridInit(this.dxGrid, this.dsList, "DW", "DWB_EVALSTM");	
	this.dxGrid.set_selecttype("cell");	
	this.dxGrid.addEventHandler("onselectchanged", this.fnGrid_RowCellChanged, this);
	this.dsList.addEventHandler("canrowposchange", this.dsList_canrowposchange, this);
		
	this.gfnGridInit(this.dxGridSub, this.dsListSub, "DW", "DWB_EVALSTMDTLS", "DS_COST", "GR_COST");
	//this.dxGridSub.BeforeUserDataSetParam = "fnGridSub_BeforeUserDataSetParam";
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("TY_WRK", "string");
	this.dsSelect.addColumn("CD_SITE", "string");
	this.dsSelect.addColumn("YM_WORK", "string");
	this.dsSelect.addColumn("NO_DGR", "string");
	this.dsSelect.addColumn("YN_TMON", "string");
	this.dsSelect.addColumn("DS_CONTMETHOD", "string");
	
	this.dsSelectSub = new Dataset();
	this.dsSelectSub.addColumn("TY_WRK", "string");
	this.dsSelectSub.addColumn("CD_SITE", "string");
	this.dsSelectSub.addColumn("YM_WORK", "string");
	this.dsSelectSub.addColumn("NO_HADOCONT", "string");
	this.dsSelectSub.addColumn("NO_DGR", "string");
	this.dsSelectSub.addColumn("CD_VENDOR", "string");
	
	this.dsCombo = new Dataset();
    this.dsCombo.addColumn("CD_SITE", "string");
    this.dsCombo.addColumn("YM_WORK", "string");
    this.dsCombo.addColumn("DS_CONTMETHOD", "string");
}

/************************************************************************
 * 버튼 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	this.dsSelect.clearData();
	this.dsSelect.addRow();	
		
	this.dsSelect.setColumn(0, "TY_WRK", "Q");
	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsSelect.setColumn(0, "YM_WORK", this.dsSearch.getColumn(0, "YM_WORK").substr(0,6));
	this.dsSelect.setColumn(0, "NO_DGR", this.dsSearch.getColumn(0, "NO_DGR"));
	this.dsSelect.setColumn(0, "YN_TMON", this.dsSearch.getColumn(0, "YN_TMON"));
	if(!this.gfnIsNull(this.getOwnerFrame().DS_CONTMETHOD)){
		this.dsSelect.setColumn(0, "DS_CONTMETHOD", this.getOwnerFrame().DS_CONTMETHOD);
	}else{
		this.dsSelect.setColumn(0, "DS_CONTMETHOD", this.FormInfo.DS_PARAM);
	}

	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {	
	var nrow = this.gfnGridAdd(this.dxGridSub);
}

/*
 *	삭제 버튼
 */ 
this.fnDel = function() {
	this.gfnGridDel(this.dxGridSub);
}

/*
 *	엑셀 버튼
 */ 
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}
 
/************************************************************************
 * 서브 버튼 이벤트
 ************************************************************************/
// 디테일 그리드 조회
this.fnSelectSub = function() {
	
	if (this.dxGrid.rowcount == 0 || this.dxGrid.currentrow < 0) return;
	
	// 왼쪽 그리드의 자리수 컬럼이 0 이면 조회하지 않는다
	if (this.dsList.getColumn(this.dsList.rowposition, "CNT") < 1) {
		this.dsListSub.clearData();
		return;
	}
	
	this.gfnGridBeforeSelect(this.dxGridSub);
	
	// 디테일 데이터셋 데이터 삭제
	this.dsListSub.clearData();
	
	// 디테일 파마리터 데이터셋 셋팅
	this.dsSelectSub.clearData();
	this.dsSelectSub.addRow();
	
	this.dsSelectSub.setColumn(0, "TY_WRK", "Q");
	this.dsSelectSub.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsSelectSub.setColumn(0, "YM_WORK", this.dsSearch.getColumn(0, "YM_WORK").substr(0,6));
	this.dsSelectSub.setColumn(0, "NO_HADOCONT", this.dsList.getColumn(this.dsList.rowposition, "NO_HADOCONT"));
	this.dsSelectSub.setColumn(0, "NO_DGR", this.dsSearch.getColumn(0, "NO_DGR"));
	this.dsSelectSub.setColumn(0, "CD_VENDOR", this.dsList.getColumn(this.dsList.rowposition, "CD_VENDOR"));

	var strSvcId    = "detail";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "d_select=dsSelectSub";
	var outData     = "dsListSub=d_select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}



this.fnExcelSub = function() {
	this.gfnExcelExport(this.dxGridSub);
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {	
	var validate = true;
	
	if (this.gfnIsNull(this.dsSearch.getColumn(0,"CD_SITE"))) {
		validate = false;
	
		this.fnVaidateCallback = function() {
			this.ccfCD_SITE.form.CDTextBox.setFocus();
		}
		this.gfnAlert("현장코드를 입력하세요.", "fnVaidateCallback");
	}else if(this.gfnIsNull(this.dsSearch.getColumn(0,"YM_WORK"))){
		validate = false;
	
		this.fnVaidateCallback = function() {
			this.divSearch.form.ctclYM_WORK.form.TextBox.setFocus();
		}
		this.gfnAlert("기성년월을 입력하세요.", "fnVaidateCallback");
	}
	
	return validate;
	
};
/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
	}
	else if (svcID == "detail") {
		this.gfnGridAfterSelect(this.dxGridSub);	
	}	
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGrid_RowCellChanged = function(obj:nexacro.Grid,e:nexacro.GridSelectEventInfo)
{
    if ((obj.oldrow > -1 && obj.oldrow == e.row)
		|| (obj.oldrow == -1 && e.oldrow != e.row)) {
		// 마스터 그리드 클릭 이벤트(디테일 그리드 조회)
		this.FormBtns.SubSelect.click();
		obj.oldrow = -1;
	}
};

this.dsList_canrowposchange = function(obj:nexacro.NormalDataset,e:nexacro.DSRowPosChangeEventInfo) {
	var can_rowchange = true;
	for (var i = 0; i < this.dsListSub.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsListSub, i);
		if (flag == "I" || flag == "U" || flag == "D") {
			can_rowchange = false;
			break;
		}
	}
	if(!can_rowchange) {
		this._row = e.newrow;
		this.gfnConfirm("변경된 데이터가 있습니다.\r\n계속 진행하시겠습니까?", "dsList_canrowposchange_callback");
	}
	return can_rowchange;
}

this.dsList_canrowposchange_callback = function(strId, val) 
{
	if(val == true) {
		this.dsList.set_enableevent(false);
		this.dsList.set_rowposition(this._row);
		this.dsList.set_enableevent(true);
	}	
}



/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		this.gfnSetFormStatus(this);
		this.gfnGridClear(this.dxGrid);
		this.gfnGridClear(this.dxGridSub);
	}
}

this.divData_ondragmove = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
   if(e.userdata == "splitter") {
      this.divData.form.divSplitter.set_left(e.clientx);
      this.divData.form.resetScroll();
   }
};

this.divData_divSplitter_ondrag = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
   e.set_userdata("splitter");
   return true;
};
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue){
		this.gfnGridClear(this.dxGrid);
		this.gfnGridClear(this.dxGridSub);
	}
	
	if(e.columnid == "CD_SITE" || e.columnid == "YM_WORK"){
	  this.fnSetCombo();
   }
};

// 기성차수 콤보 셋팅
this.fnSetCombo = function() {
	
	this.dsCombo.clearData();
	
	this.dsCombo.addRow();
	this.dsCombo.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsCombo.setColumn(0, "YM_WORK", this.dsSearch.getColumn(0, "YM_WORK").substr(0,6));
	if(!this.gfnIsNull(this.getOwnerFrame().DS_CONTMETHOD)){
		this.dsCombo.setColumn(0, "DS_CONTMETHOD", this.getOwnerFrame().DS_CONTMETHOD);
	}else{
		this.dsCombo.setColumn(0, "DS_CONTMETHOD", this.FormInfo.DS_PARAM);
	}
	
	var strSvcId    = "combo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "combo=dsCombo";
	var outData     = "dsNO_DGR=combo0";
	var strArg      = "";
	var callBackFnc = "fnCallbackCombo";

	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};

this.fnCallbackCombo = function(svcID, errorCode, errorMsg)
{
	if(svcID == "combo") {		
		/*
		this.dsNO_DGR.insertRow(0);		
		this.dsNO_DGR.setColumn(0, "CD_DGR", "");
		this.dsNO_DGR.setColumn(0, "DS_DGR", "전체");
 		*/
		this.divSearch.form.cboNO_DGR.set_index(0);
		
	}
};

]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DWBPR_EVALSTM_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">d_select</Col>
            <Col id="SP">DWBPR_EVALSTMDTLS_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo</Col>
            <Col id="SP">DWBPR_HDGISUNGMONTH_MAX_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsListSub"/>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="YM_WORK" type="STRING" size="256"/>
          <Column id="NO_DGR" type="STRING" size="256"/>
          <Column id="YN_TMON" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="YM_WORK"/>
            <Col id="CD_SITE"/>
            <Col id="YN_TMON"></Col>
            <Col id="NO_DGR"></Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsNO_DGR"/>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item1" compid="divSearch.form.cboNO_DGR" propid="value" datasetid="dsSearch" columnid="NO_DGR"/>
      <BindItem id="item2" compid="divSearch.form.ctclYM_WORK.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_WORK"/>
      <BindItem id="item3" compid="divSearch.form.cchkYN_TMON" propid="value" datasetid="dsSearch" columnid="YN_TMON"/>
    </Bind>
  </Form>
</FDL>
