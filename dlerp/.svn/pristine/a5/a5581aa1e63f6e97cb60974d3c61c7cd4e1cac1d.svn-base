<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="frameWork" left="0" top="0" width="400" height="300" onclose="form_onclose" onsize="form_onsize" onactivate="form_onactivate" onload="form_onload" onkeydown="form_onkeydown">
    <Layouts>
      <Layout>
        <!--<Div id="divTopBtn" taborder="5" left="5" right="0" top="0" height="28" url="frame::frameBtn.xfdl" ispop="true"/>-->
        <Div id="divTitle" taborder="1" left="0" top="0" right="0" url="frame::frameWorkTitle.xfdl" height="0"/>
        <Div id="divWork" taborder="0" left="20" top="divTitle:20" right="20" bottom="20" text="">
          <Layouts>
            <Layout/>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects/>
    <Script type="xscript5.1"><![CDATA[/**
*  컨설팅 표준화 작업
*  @MenuPath    frame > frameWork
*  @FileName 	frameWork.xfdl 
*  @Creator 	consulting
*  @CreateDate 	2017.03.09
*  @Desction    
************** 소스 수정 이력 ***********************************************
*  date          		Modifier                Description
*******************************************************************************
*  2017.03.09     	consulting 	           	    최초 생성 
*  2017.10.17     	consulting       	        주석 정비
*  2018.01.16		consulting					gfnGetApplication 공통함수 변경
*******************************************************************************
*/

/************************************************************************************************
 * FORM 변수 선언 영역
 ************************************************************************************************/
this.objApp = this.gfnGetApplication();

/***********************************************************************************************
* FORM EVENT 영역(onload)
/***********************************************************************************************/
/**
 * form onload 함수
 * @return 
 * @example
 * @memberOf 
 */
this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	var titlebar = this.parent.titlebar;
	if(titlebar != null) {
		titlebar.closebutton._removeEventHandler("onclick", titlebar._notify_clickclosebutton, titlebar._notify_target);
		titlebar.closebutton.setEventHandler("onclick", function() {
			this.fnWorkFrameClose();
		}, this);
	};
	
	this.form_onsize();	
	//this.divTitle.form.set_scrollbartype("none");
	
	// form로딩시 화면에 표시할 page URL 설정
	this.divWork.set_url(this.getOwnerFrame().arguments["pageUrl"]);
	this.objApp.gvActiveFormOld = this.objApp.gvActiveForm;
	this.objApp.gvActiveForm = this.divWork.form;
};

/**
 * form onactivate event
 * @return 
 * @example
 *
 * @memberOf 
 */
this.form_onactivate = function(obj:nexacro.Form,e:nexacro.ActivateEventInfo)
{
// 	var winKey = this.objApp.gvWorkFrame.getActiveFrame().name; 	
// 	//this.objApp.gvWorkFrame.frames[winKey].setFocus();
// 
// 	var gRow = this.objApp.gdsOpenMenu.findRow(this.objApp.gvMenuColumns.winId, winKey);
// 
// 	var dsLMenu = this.objApp.gvLeftFrame.form.dsMenu;
// 	var menuId = this.objApp.gdsOpenMenu.getColumn(gRow, this.objApp.gvMenuColumns.menuId);
// 	var lRow = this.objApp.gvLeftFrame.form.dsMenu.findRow(this.objApp.gvMenuColumns.menuId, menuId);	
// 
// 	//메뉴 타이틀 
// 	var sTitle = this.objApp.gdsOpenMenu.getColumn(gRow, "title");  	
// 	this.divTitle.form.staTitle.set_text(sTitle);	
// 
// 	// gdsOpenMenu row 이동   
// 	this.objApp.gdsOpenMenu.set_rowposition(gRow);
};

/**
 * workFrame_onclose event
 * @return 
 * @example
 *
 * @memberOf 
 */
this.form_onclose = function(obj:Form, e:nexacro.CloseEventInfo)
{   
	try
	{
		this.objApp.gvActiveForm = this.objApp.gvActiveFormOld;
		//trace("workFrame_onclose : " + e.fromobject.name);
// 		if (e.fromobject == "[object Form]")
// 		{ 
// 			var winId = this.getOwnerFrame().name;
// 			//trace("winId : " + winId);
// 			if (this.objApp.gvMdiFrame.form.bClose) 
// 			{
// 				this.objApp.gvMdiFrame.form.bClose = false;
// 				this.objApp.gvMdiFrame.form.fnTabOnClose(winId);
// 			}
//		}
	}
	catch(e)
	{

	}
}

/**
 * onsize event
 * @return 
 * @example
 *
 * @memberOf this
 */
this.form_onsize = function(obj:Form, e:nexacro.SizeEventInfo)
{	
	this.resetScroll();
}

/**
 * @description 각 화면에서 디버그창을 호출할 수 있도록 단축키 지정
*/
this.form_onkeydown = function(obj:nexacro.Form,e:nexacro.KeyEventInfo)
{
	// 공통 키다운 이벤트 호출
	this.gfnOnkeydown(obj, e);
};

/************************************************************************************************
 * CALLBACK 콜백 처리부분(Transaction, Popup)
 ************************************************************************************************/
/**
 * @description 메세지 콜백
*/
this.fnMsgCallback = function (strId, strVal)
{
	//trace("strId >> " + strId + "   strVal >> " + strVal);
	if(strId == "confirm.before.movepage"){
		if(strVal == true)
		{
			this.close();
		}
	}
};


/************************************************************************************************
 * CRUD 및 TRANSACTION 서비스 호출 처리
 ************************************************************************************************/

/************************************************************************************************
 * 사용자 FUNCTION 영역
 ************************************************************************************************/
/**
 *  넘어온 아규먼트 처리 설정
 * @param  {XaComp} this(현재form)
 * @return
 * @example
 * fnSetOwnFrameArgu(this);
 * @memberOf 
 */
this.fnSetOwnFrameArgu = function(o)
{	
}

/**
 * @description workFrame close 시 처리
*/
this.fnWorkFrameClose = function()
{
	if(this.gfnIsNull(this.divWork.form.lookup("fnClose")))
	{
		if(this.gfnIsCloseFormStatus(this.divWork.form) == false) {
			this.fnConfirmClose();
			return false;
		}
	}else{
		if(this.divWork.form.fnClose() == false)
		{
			//this.fnConfirmClose();
			return false;
		}else{	
			//this.close();	
		} 
	}	
	this.close();
	return true;
}

this.fnConfirmClose = function() {
	var sMsgId = "confirm.before.movepage";							//메세지ID
	var arrArg = "";												//메세지취환될값 배열[생략가능]
	var sPopId = sMsgId;											//메세지팝업ID[생략가능]	*해당화면에서 메시지 중복사용시 구분되는값을 넣어줘야함
	var sMsgCallback = "fnMsgCallback";								//메세지콜백[생략가능] 		* confirm성 메시지를 사용 시 반드시 필요
	
	// 변경된 데이터가 있습니다. 현재 화면을 닫겠습니까?
	this.gfnAlert(sMsgId, arrArg, sPopId, sMsgCallback);	
}
]]></Script>
  </Form>
</FDL>
