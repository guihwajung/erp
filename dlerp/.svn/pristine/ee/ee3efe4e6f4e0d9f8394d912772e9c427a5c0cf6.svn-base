<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1010" height="700" maxwidth="1010" maxheight="750" titletext="세금계산서/계산서" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divDetail" taborder="1" left="0" top="70" height="250" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Static id="sta00" taborder="0" text="세무단위" left="0" top="0" width="90" height="27" cssclass="sta_WF_tablelabel" textDecoration="underline"/>
              <Static id="staBg00" taborder="1" left="sta00:-1" top="0" height="27" cssclass="sta_WF_tablebg" width="313"/>
              <Static id="sta01" taborder="2" text="사업자번호" left="staBg00:-1" top="0" width="90" height="27" cssclass="sta_WF_tablelabel" textDecoration="underline"/>
              <Static id="staBg01" taborder="3" left="sta01:-1" top="0" height="27" cssclass="sta_WF_tablebg" width="200"/>
              <Static id="sta02" taborder="4" text="권" left="staBg01:-1" top="0" width="80" height="27" cssclass="sta_WF_tablelabel" textDecoration="underline"/>
              <Static id="staBg02" taborder="5" left="sta02:-1" top="0" height="27" cssclass="sta_WF_tablebg" width="60"/>
              <Static id="sta03" taborder="6" text="번호" left="staBg02:-1" top="0" width="80" height="27" cssclass="sta_WF_tablelabel"/>
              <Static id="staBg03" taborder="7" left="sta03:-1" top="0" height="27" cssclass="sta_WF_tablebg" width="70"/>
              <Static id="sta04" taborder="8" text="작업년도" left="0" top="sta00:-1" width="90" height="27" cssclass="sta_WF_tablelabel" textDecoration="underline"/>
              <Static id="staBg04" taborder="9" left="sta04:-1" top="staBg00:-1" height="27" cssclass="sta_WF_tablebg" width="313"/>
              <Static id="staCD_VENDOR" taborder="10" text="거래처" left="staBg04:-1" top="sta01:-1" width="90" height="27" cssclass="sta_WF_tablelabel"/>
              <Static id="staBg05" taborder="11" left="staCD_VENDOR:-1" top="staBg01:-1" height="27" cssclass="sta_WF_tablebg" width="486"/>
              <Static id="sta06" taborder="12" text="회계단위" left="0" top="sta04:-1" width="90" height="27" cssclass="sta_WF_tablelabel" textDecoration="underline"/>
              <Static id="staBg06" taborder="13" left="sta06:-1" top="staBg04:-1" height="27" cssclass="sta_WF_tablebg" width="313"/>
              <Static id="sta07" taborder="14" text="거래처담당자" left="staBg06:-1" top="staCD_VENDOR:-1" width="90" height="27" cssclass="sta_WF_tablelabel"/>
              <Static id="staBg07" taborder="15" left="sta07:-1" top="staBg05:-1" height="27" cssclass="sta_WF_tablebg" width="318" text=""/>
              <Static id="sta08" taborder="16" text="종사업장번호" left="staBg07:-1" top="staBg05:-1" width="90" height="27" cssclass="sta_WF_tablelabel"/>
              <Static id="staBg08" taborder="17" left="sta08:-1" top="staBg05:-1" height="27" cssclass="sta_WF_tablebg" width="80"/>
              <Static id="staDT_PROOF" taborder="18" text="증빙일자" left="0" top="sta06:-1" width="90" height="27" cssclass="sta_WF_tablelabel" textDecoration="underline"/>
              <Static id="staBg09" taborder="19" left="staDT_PROOF:-1" top="staBg06:-1" height="27" cssclass="sta_WF_tablebg" width="115"/>
              <Static id="sta10" taborder="20" text="증빙구분" left="staBg09:-1" top="staBg06:-1" width="90" height="27" cssclass="sta_WF_tablelabel" textDecoration="underline"/>
              <Static id="staBg10" taborder="21" left="sta10:-1" top="staBg06:-1" height="27" cssclass="sta_WF_tablebg" width="110"/>
              <Static id="staAM_SUPPLY" taborder="22" text="공급가" left="staBg10:-1" top="sta07:-1" width="90" height="27" cssclass="sta_WF_tablelabel"/>
              <Static id="staBg11" taborder="23" left="staAM_SUPPLY:-1" top="staBg07:-1" height="27" cssclass="sta_WF_tablebg" width="200"/>
              <Static id="staAM_VAT" taborder="24" text="부가세" left="staBg11:-1" top="staBg07:-1" width="90" height="27" cssclass="sta_WF_tablelabel"/>
              <Static id="staBg12" taborder="25" left="staAM_VAT:-1" top="staBg08:-1" height="27" cssclass="sta_WF_tablebg" width="198"/>
              <Static id="sta13" taborder="26" text="적요" left="0" top="staDT_PROOF:-1" width="90" height="27" cssclass="sta_WF_tablelabel"/>
              <Static id="staBg13" taborder="27" left="sta13:-1" top="staBg09:-1" height="27" cssclass="sta_WF_tablebg" width="313"/>
              <Static id="staNO_VAT" taborder="28" text="증빙번호" left="staBg13:-1" top="staAM_SUPPLY:-1" width="90" height="27" cssclass="sta_WF_tablelabel"/>
              <Static id="staBg14" taborder="29" left="staNO_VAT:-1" top="staBg11:-1" height="27" cssclass="sta_WF_tablebg" width="200" text=""/>
              <Static id="sta15" taborder="30" text="영수" left="staBg14:-1" top="staAM_VAT:-1" width="90" height="27" cssclass="sta_WF_tablelabel"/>
              <Static id="staBg15" taborder="31" left="sta15:-1" top="staBg12:-1" height="27" cssclass="sta_WF_tablebg" width="198"/>
              <Edit id="ctxtCD_SELFACNT" taborder="32" left="sta00:4" top="4" width="50" height="19" readonly="true"/>
              <Edit id="ctxtDS_SELFACNT" taborder="33" left="ctxtCD_SELFACNT:5" top="4" width="245" height="19" readonly="true"/>
              <Edit id="ctxtNO_SJC" taborder="34" left="sta01:4" top="4" width="190" height="19" readonly="true"/>
              <Edit id="txtNO_GUN" taborder="35" left="sta02:4" top="4" width="50" height="19" readonly="true"/>
              <Edit id="txtNO_SEQ" taborder="36" left="sta03:4" top="4" width="60" height="19" readonly="true"/>
              <Div id="ctclYY_MAGAM" taborder="37" left="sta04:4" top="29" width="60" height="20" url="cmm::cmmCalYY.xfdl"/>
              <Combo id="ccboTY_VENDOR" taborder="38" left="staCD_VENDOR:4" top="29" width="98" height="21" codecolumn="CD_CODE" datacolumn="DS_CODE" innerdataset="dsTY_VENDOR"/>
              <Div id="ccfCD_VENDOR" CodeFindName="DHX_CFVENDOR_BY_TYVENDOR" CDTextWidth="80" taborder="39" left="ccboTY_VENDOR:5" top="29" width="373" height="20" url="cmm::cmmCodeFind.xfdl" enable="false"/>
              <Div id="ccfCD_DEPT_ACNT" CodeFindName="DHX_CFACNTUNIT_BY_SELFACNT" CDTextWidth="80" taborder="40" left="sta06:4" top="56" width="300" height="20" url="cmm::cmmCodeFind.xfdl" enable="false"/>
              <Edit id="txtDS_TAXDAMDANG" taborder="41" left="sta07:4" top="56" width="70" height="19" readonly="true"/>
              <Edit id="txtID_TAXEMAIL" taborder="42" left="txtDS_TAXDAMDANG:5" top="56" width="225" height="19" readonly="true"/>
              <Edit id="txtCD_JONG" taborder="43" left="sta08:4" top="56" width="70" height="19"/>
              <Calendar id="ctclDT_PROOF" taborder="44" left="staDT_PROOF:4" top="81" width="105" height="20" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true"/>
              <Combo id="ccboTY_VATPROOF" taborder="45" left="sta10:4" top="81" width="97" height="21" codecolumn="CD_CODE" datacolumn="DS_CODE" innerdataset="dsTY_VATPROOF"/>
              <MaskEdit id="txtAM_SUPPLY" taborder="46" left="staAM_SUPPLY:4" top="81" width="185" height="20" enable="false" format="#,###"/>
              <MaskEdit id="txtAM_VAT" taborder="47" left="staAM_VAT:4" top="81" width="188" height="20" enable="false" format="#,###"/>
              <Edit id="txtDS_REM" taborder="48" left="94" top="108" width="300" height="19" readonly="true"/>
              <Div id="cfNO_VAT" CodeFindName="DHX_VAT_NO" CDTextWidth="160" taborder="49" left="staNO_VAT:4" top="108" width="185" height="20" url="cmm::cmmCodeFind.xfdl" enable="false"/>
              <Combo id="ccboYN_RECEIPT" taborder="50" text="cbo00" left="sta15:4" top="107" width="97" height="21" codecolumn="CD_CODE" datacolumn="DS_CODE" innerdataset="dsYN_RECEIPT"/>
              <GroupBox id="grb00" taborder="51" text="수정세금계산서" left="0" top="154" width="976" height="86"/>
              <Static id="sta16" taborder="53" text="수정사유" left="8" top="177" width="90" height="27" cssclass="sta_WF_tablelabel" textDecoration="underline"/>
              <Static id="staBg16" taborder="52" left="sta16:-1" top="177" height="27" cssclass="sta_WF_tablebg" width="873"/>
              <Static id="sta17" taborder="54" text="비고" left="8" top="sta16:-1" width="90" height="27" cssclass="sta_WF_tablelabel" textDecoration="underline"/>
              <Static id="staBg17" taborder="55" left="sta17:-1" top="staBg16:-1" height="27" cssclass="sta_WF_tablebg" width="873"/>
              <Combo id="ccboModiBill" taborder="56" text="cbo00" left="sta16:4" top="180" width="292" height="21" codecolumn="CD_CODE" datacolumn="DS_CODE" innerdataset="dsModiBill"/>
              <Edit id="txtRM_BIGO" taborder="57" left="102" top="207" width="292" height="19"/>
              <CheckBox id="chkModiBill_YN" taborder="58" text="수정세금계산서 여부" left="ccboModiBill:5" top="180" width="150" height="20" falsevalue="N" truevalue="Y"/>
              <Static id="staComment" taborder="59" left="txtRM_BIGO:5" top="207" height="20" right="20" color="blue"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="2" left="0" top="divDetail:10" bottom="90" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
        <Static id="staTITLE" taborder="2" text="세금계산서/계산서" left="0" top="0" height="30" cssclass="sta_TITLE_Bg" textAlign="left" right="0"/>
        <Static id="staTitle00" taborder="3" text="세금계산서 정보" left="10" top="38" height="22" right="600"/>
        <Button id="btnDel" taborder="0" text="삭제" left="350" width="69" height="27" onclick="btnDel_onclick" bottom="10"/>
        <Button id="btnConf" taborder="1" text="확인" left="430" width="69" height="27" onclick="btnConf_onclick" bottom="10"/>
        <Button id="btnCancel" taborder="2" text="취소" left="510" width="69" height="27" onclick="btnCancel_onclick" bottom="10"/>
        <Static id="staTitle01" taborder="6" text="증빙번호는 입력한 증빙중 회계단위, 거래처코드, 증빙일자, 공급가, 부가세가 모두 일치하는것만 가능합니다." left="35" height="22" right="20" bottom="55"/>
        <CheckBox id="chkIssueGubun" taborder="7" text="전자발행" left="60" width="150" height="20" falsevalue="N" truevalue="Y" bottom="20"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();

	if (!this.getOwnerFrame().IUD_FLAG) {
		this.IUD_FLAG = this.getOwnerFrame().IUD_FLAG;
		this.dsSearch.setColumn(0, "CD_SELFACNT", this.getOwnerFrame().CD_SELFACNT);
		this.dsSearch.setColumn(0, "DS_SELFACNT", this.getOwnerFrame().DS_SELFACNT);
		this.dsSearch.setColumn(0, "NO_SJC", this.getOwnerFrame().NO_SJC);
		this.dsSearch.setColumn(0, "YY_MAGAM", this.getOwnerFrame().YY_MAGAM);
		
		if (this.IUD_FLAG == "B") {
			this.dsSearch.setColumn(0, "YN_BLANK", "Y");
			this.dsSearch.setColumn(0, "YN_RECEIPT", "Y");
			this.dsSearch.setColumn(0, "TY_VATPROOF", "A");
		}
		else {
			this.dsSearch.setColumn(0, "YN_BLANK", this.getOwnerFrame().YN_BLANK == "백지발행" ? "Y" : "N");
			if (!this.gfnIsNull(this.getOwnerFrame().DT_PROOF))
				this.dsSearch.setColumn(0, "DT_PROOF", this.getOwnerFrame().DT_PROOF);
			this.dsSearch.setColumn(0, "YN_RECEIPT", this.getOwnerFrame().YN_RECEIPT == "영수" ? "Y" : "N");
			
			this.dsSearch.setColumn(0, "CD_VENDOR", this.getOwnerFrame().CD_VENDOR);
			this.dsSearch.setColumn(0, "DS_VENDOR", this.getOwnerFrame().DS_VENDOR);
			
			this.dsSearch.setColumn(0, "AM_SUPPLY", this.getOwnerFrame().AM_SUPPLY);
			this.dsSearch.setColumn(0, "AM_VAT", this.getOwnerFrame().AM_VAT);
			this.dsSearch.setColumn(0, "DS_REM", this.getOwnerFrame().DS_REM);
			this.dsSearch.setColumn(0, "NO_VAT", this.getOwnerFrame().NO_VAT);
			
			if (this.IUD_FLAG != "S") {
				//TaxNo?
			}
			else {
				this.dsSearch.setColumn(0, "NO_GUN", this.getOwnerFrame().NO_GUN);
			}
			this.dsSearch.setColumn(0, "NO_SEQ", this.getOwnerFrame().NO_SEQ);
			
			this.dsSearch.setColumn(0, "CD_DEPT_ACNT", this.getOwnerFrame().CD_DEPT_ACNT);
			this.dsSearch.setColumn(0, "DS_DEPT_ACNT", this.getOwnerFrame().DS_DEPT_ACNT);
			
			this.dsSearch.setColumn(0, "TY_VENDOR", this.getOwnerFrame().TY_VENDOR);
			this.dsSearch.setColumn(0, "TY_VATPROOF", this.getOwnerFrame().TY_VATPROOF);
			
// 			this.dsSearch.setColumn(0, "CD_SLIP", this.getOwnerFrame().CD_SLIP);
// 			this.dsSearch.setColumn(0, "INVDATE", this.getOwnerFrame().INVDATE);
// 			this.dsSearch.setColumn(0, "INVSEQ", this.getOwnerFrame().INVSEQ);

			this.dsSearch.setColumn(0, "DS_TAXDAMDANG", this.getOwnerFrame().DS_TAXDAMDANG);
			this.dsSearch.setColumn(0, "ID_TAXEMAIL", this.getOwnerFrame().ID_TAXEMAIL);
			
			if (this.getOwnerFrame().TY_ISSUE == "전자" || this.getOwnerFrame().TY_ISSUE == "미발행")
				this.dsSearch.setColumn(0, "ISSUEGUBUN", "Y");
			else
				this.dsSearch.setColumn(0, "ISSUEGUBUN", "N");
		}
		
		this.fnInitGrid();
		this.fnBillInit();
		
		if (this.IUD_FLAG == "S") {
			this.fnSelect();
		}
		
		if (this.IUD_FLAG == "I") {
			this.dsSearch.setColumn(0, "YN_RECEIPT", "N");
			
			this.fnGetTaxNO();
		}
	}
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {

}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {

};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ctxtCD_SELFACNT = this.divDetail.form.ctxtCD_SELFACNT;
	this.ctxtDS_SELFACNT = this.divDetail.form.ctxtDS_SELFACNT;
	this.ctxtNO_SJC = this.divDetail.form.ctxtNO_SJC;
	this.txtNO_GUN = this.divDetail.form.txtNO_GUN;
	this.txtNO_SEQ = this.divDetail.form.txtNO_SEQ;
	this.ctclYY_MAGAM = this.divDetail.form.ctclYY_MAGAM;
	this.ccboTY_VENDOR = this.divDetail.form.ccboTY_VENDOR;
	this.ccfCD_VENDOR = this.divDetail.form.ccfCD_VENDOR;
	this.ccfCD_DEPT_ACNT = this.divDetail.form.ccfCD_DEPT_ACNT;
	this.txtDS_TAXDAMDANG = this.divDetail.form.txtDS_TAXDAMDANG;
	this.txtID_TAXEMAIL = this.divDetail.form.txtID_TAXEMAIL;
	this.txtCD_JONG = this.divDetail.form.txtCD_JONG;
	this.ctclDT_PROOF = this.divDetail.form.ctclDT_PROOF;
	this.ccboTY_VATPROOF = this.divDetail.form.ccboTY_VATPROOF;
	this.txtAM_SUPPLY = this.divDetail.form.txtAM_SUPPLY;
	this.txtAM_VAT = this.divDetail.form.txtAM_VAT;
	this.txtDS_REM = this.divDetail.form.txtDS_REM;
	this.cfNO_VAT = this.divDetail.form.cfNO_VAT;
	this.ccboYN_RECEIPT = this.divDetail.form.ccboYN_RECEIPT;
	this.ccboModiBill = this.divDetail.form.ccboModiBill;
	this.chkModiBill_YN = this.divDetail.form.chkModiBill_YN;
	this.txtRM_BIGO = this.divDetail.form.txtRM_BIGO;
	this.staComment = this.divDetail.form.staComment;
	
	this.staDT_PROOF = this.divDetail.form.staDT_PROOF;
	this.staCD_VENDOR = this.divDetail.form.staCD_VENDOR;
	this.staAM_SUPPLY = this.divDetail.form.staAM_SUPPLY;
	this.staAM_VAT = this.divDetail.form.staAM_VAT;
	this.staNO_VAT = this.divDetail.form.staNO_VAT;
	

	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.gfnGridInit(this.dxGrid, this.dsList, "DH", "DHV_PBILLSELECT");
	
	this.dxGrid.EnterCell = "fnGrid_EnterCell";
	this.dxGrid.AfterEdit = "fnGrid_AfterEdit";
	
	this.ccfCD_DEPT_ACNT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_VENDOR.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfNO_VAT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_DEPT_SELFACNT", "string");
	this.dsSelect.addColumn("CD_VATPROOF", "string");
	this.dsSelect.addColumn("DT_FR", "string");
	this.dsSelect.addColumn("DT_TO", "string");
	this.dsSelect.addColumn("NO_GUN_FR", "int");
	this.dsSelect.addColumn("NO_SEQ_FR", "int");
	this.dsSelect.addColumn("NO_GUN_TO", "int");
	this.dsSelect.addColumn("NO_SEQ_TO", "int");
	this.dsSelect.addColumn("CD_DEPT_ACNT", "string");
	
	this.dsInsert = new Dataset();
	this.dsInsert.addColumn("CD_DEPT_SELFACNT", "string");
	this.dsInsert.addColumn("YR_ACCOUNT", "string");
	this.dsInsert.addColumn("CD_VATPROOF", "string");
	this.dsInsert.addColumn("NO_GUN", "int");
	this.dsInsert.addColumn("NO_SEQ", "int");
	this.dsInsert.addColumn("DS_DEPT_SELFACNT", "string");
	this.dsInsert.addColumn("NO_SJC", "string");
	this.dsInsert.addColumn("CD_DEPT_ACNT", "string");
	this.dsInsert.addColumn("TY_VENDOR", "string");
	this.dsInsert.addColumn("CD_VENDOR", "string");
	this.dsInsert.addColumn("DS_VENDOR", "string");
	this.dsInsert.addColumn("YN_BLANK", "string");
	this.dsInsert.addColumn("DT_PROOF", "string");
	this.dsInsert.addColumn("AM_SUPPLY", "bigdecimal");
	this.dsInsert.addColumn("AM_VAT", "bigdecimal");
	this.dsInsert.addColumn("YN_RECEIPT", "string");
	this.dsInsert.addColumn("DS_REM", "string");
	this.dsInsert.addColumn("NO_VAT", "string");
	
	this.dsInsert.addColumn("MM_PROOF1", "string");
	this.dsInsert.addColumn("DD_PROOF1", "string");
	this.dsInsert.addColumn("DS_ITEM1", "string");
	this.dsInsert.addColumn("DS_STANDARD1", "string");
	this.dsInsert.addColumn("CN_ITEM1", "int");
	this.dsInsert.addColumn("AM_UNIT1", "bigdecimal");
	this.dsInsert.addColumn("AM_SUPPLY1", "bigdecimal");
	this.dsInsert.addColumn("AM_VAT1", "bigdecimal");
	this.dsInsert.addColumn("DS_REM1", "string");
	
	this.dsInsert.addColumn("MM_PROOF2", "string");
	this.dsInsert.addColumn("DD_PROOF2", "string");
	this.dsInsert.addColumn("DS_ITEM2", "string");
	this.dsInsert.addColumn("DS_STANDARD2", "string");
	this.dsInsert.addColumn("CN_ITEM2", "int");
	this.dsInsert.addColumn("AM_UNIT2", "bigdecimal");
	this.dsInsert.addColumn("AM_SUPPLY2", "bigdecimal");
	this.dsInsert.addColumn("AM_VAT2", "bigdecimal");
	this.dsInsert.addColumn("DS_REM2", "string");
	
	this.dsInsert.addColumn("MM_PROOF3", "string");
	this.dsInsert.addColumn("DD_PROOF3", "string");
	this.dsInsert.addColumn("DS_ITEM3", "string");
	this.dsInsert.addColumn("DS_STANDARD3", "string");
	this.dsInsert.addColumn("CN_ITEM3", "int");
	this.dsInsert.addColumn("AM_UNIT3", "bigdecimal");
	this.dsInsert.addColumn("AM_SUPPLY3", "bigdecimal");
	this.dsInsert.addColumn("AM_VAT3", "bigdecimal");
	this.dsInsert.addColumn("DS_REM3", "string");
	
	this.dsInsert.addColumn("MM_PROOF4", "string");
	this.dsInsert.addColumn("DD_PROOF4", "string");
	this.dsInsert.addColumn("DS_ITEM4", "string");
	this.dsInsert.addColumn("DS_STANDARD4", "string");
	this.dsInsert.addColumn("CN_ITEM4", "int");
	this.dsInsert.addColumn("AM_UNIT4", "bigdecimal");
	this.dsInsert.addColumn("AM_SUPPLY4", "bigdecimal");
	this.dsInsert.addColumn("AM_VAT4", "bigdecimal");
	this.dsInsert.addColumn("DS_REM4", "string");
	
	this.dsInsert.addColumn("ISSUE_GUBUN", "string");
	this.dsInsert.addColumn("YN_MODIBILL", "string");
	this.dsInsert.addColumn("CD_MODIBILL", "string");
	this.dsInsert.addColumn("RM_MODIBILL", "string");
	this.dsInsert.addColumn("CD_JONG", "string");
	this.dsInsert.addColumn("ID_UPDATE", "string");
	this.dsInsert.addColumn("NO_SEQ_RETURN", "int");
	
	this.dsUpdate = new Dataset();
	this.dsUpdate.addColumn("CD_DEPT_SELFACNT", "string");
	this.dsUpdate.addColumn("YR_ACCOUNT", "string");
	this.dsUpdate.addColumn("CD_VATPROOF", "string");
	this.dsUpdate.addColumn("NO_GUN", "int");
	this.dsUpdate.addColumn("NO_SEQ", "int");
	this.dsUpdate.addColumn("DS_DEPT_SELFACNT", "string");
	this.dsUpdate.addColumn("NO_SJC", "string");
	this.dsUpdate.addColumn("CD_DEPT_ACNT", "string");
	this.dsUpdate.addColumn("TY_VENDOR", "string");
	this.dsUpdate.addColumn("CD_VENDOR", "string");
	this.dsUpdate.addColumn("DS_VENDOR", "string");
	this.dsUpdate.addColumn("YN_BLANK", "string");
	this.dsUpdate.addColumn("DT_PROOF", "string");
	this.dsUpdate.addColumn("AM_SUPPLY", "bigdecimal");
	this.dsUpdate.addColumn("AM_VAT", "bigdecimal");
	this.dsUpdate.addColumn("YN_RECEIPT", "string");
	this.dsUpdate.addColumn("DS_REM", "string");
	this.dsUpdate.addColumn("NO_VAT", "string");
	
	this.dsUpdate.addColumn("MM_PROOF1", "string");
	this.dsUpdate.addColumn("DD_PROOF1", "string");
	this.dsUpdate.addColumn("DS_ITEM1", "string");
	this.dsUpdate.addColumn("DS_STANDARD1", "string");
	this.dsUpdate.addColumn("CN_ITEM1", "int");
	this.dsUpdate.addColumn("AM_UNIT1", "bigdecimal");
	this.dsUpdate.addColumn("AM_SUPPLY1", "bigdecimal");
	this.dsUpdate.addColumn("AM_VAT1", "bigdecimal");
	this.dsUpdate.addColumn("DS_REM1", "string");
	
	this.dsUpdate.addColumn("MM_PROOF2", "string");
	this.dsUpdate.addColumn("DD_PROOF2", "string");
	this.dsUpdate.addColumn("DS_ITEM2", "string");
	this.dsUpdate.addColumn("DS_STANDARD2", "string");
	this.dsUpdate.addColumn("CN_ITEM2", "int");
	this.dsUpdate.addColumn("AM_UNIT2", "bigdecimal");
	this.dsUpdate.addColumn("AM_SUPPLY2", "bigdecimal");
	this.dsUpdate.addColumn("AM_VAT2", "bigdecimal");
	this.dsUpdate.addColumn("DS_REM2", "string");
	
	this.dsUpdate.addColumn("MM_PROOF3", "string");
	this.dsUpdate.addColumn("DD_PROOF3", "string");
	this.dsUpdate.addColumn("DS_ITEM3", "string");
	this.dsUpdate.addColumn("DS_STANDARD3", "string");
	this.dsUpdate.addColumn("CN_ITEM3", "int");
	this.dsUpdate.addColumn("AM_UNIT3", "bigdecimal");
	this.dsUpdate.addColumn("AM_SUPPLY3", "bigdecimal");
	this.dsUpdate.addColumn("AM_VAT3", "bigdecimal");
	this.dsUpdate.addColumn("DS_REM3", "string");
	
	this.dsUpdate.addColumn("MM_PROOF4", "string");
	this.dsUpdate.addColumn("DD_PROOF4", "string");
	this.dsUpdate.addColumn("DS_ITEM4", "string");
	this.dsUpdate.addColumn("DS_STANDARD4", "string");
	this.dsUpdate.addColumn("CN_ITEM4", "int");
	this.dsUpdate.addColumn("AM_UNIT4", "bigdecimal");
	this.dsUpdate.addColumn("AM_SUPPLY4", "bigdecimal");
	this.dsUpdate.addColumn("AM_VAT4", "bigdecimal");
	this.dsUpdate.addColumn("DS_REM4", "string");
	this.dsUpdate.addColumn("ID_UPDATE", "string");
	
	this.dsDelete = new Dataset();
	this.dsDelete.addColumn("CD_DEPT_SELFACNT", "string");
	this.dsDelete.addColumn("YR_ACCOUNT", "string");
	this.dsDelete.addColumn("CD_VATPROOF", "string");
	this.dsDelete.addColumn("NO_GUN", "int");
	this.dsDelete.addColumn("NO_SEQ", "int");
	this.dsDelete.addColumn("ID_DELETE", "string");
	
	this.dsSelectTax = new Dataset();
	this.dsSelectTax.addColumn("CD_DEPT_SELFACNT", "string");
	this.dsSelectTax.addColumn("CD_VATPROOF", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;

	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
 	this.dsSelect.setColumn(0, "NO_VAT", this.getOwnerFrame().NO_VAT);
 	this.dsSelect.setColumn(0, "CD_SLIP", this.getOwnerFrame().CD_SLIP);

	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList1=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
	
}

this.fnSave = function() {
	if (!this.gfnGridValidate(this.dxGrid)) return;	
	
	this.dxGrid.updateToDataset();
	
	this.dsInsert.clearData();
	this.dsUpdate.clearData();
	this.dsDelete.clearData();

	if (this.IUD_FLAG == "I" || this.IUD_FLAG == "B") {
		var nrow = this.dsInsert.addRow();
		this.dsInsert.setColumn(nrow, "CD_DEPT_SELFACNT", this.dsSearch.getColumn(0, "CD_SELFACNT"));
		this.dsInsert.setColumn(nrow, "YR_ACCOUNT", this.dsSearch.getColumn(0, "YY_MAGAM"));
		this.dsInsert.setColumn(nrow, "CD_VATPROOF", this.dsSearch.getColumn(0, "TY_VATPROOF"));
		this.dsInsert.setColumn(nrow, "NO_GUN", this.dsSearch.getColumn(0, "NO_GUN"));
		this.dsInsert.setColumn(nrow, "NO_SEQ", 0);
		this.dsInsert.setColumn(nrow, "DS_DEPT_SELFACNT", this.dsSearch.getColumn(0, "DS_SELFACNT"));
		this.dsInsert.setColumn(nrow, "NO_SJC", this.dsSearch.getColumn(0, "NO_SJC"));
		this.dsInsert.setColumn(nrow, "CD_DEPT_ACNT", this.dsSearch.getColumn(0, "CD_DEPT_ACNT"));
		this.dsInsert.setColumn(nrow, "TY_VENDOR", this.dsSearch.getColumn(0, "TY_VENDOR"));
		this.dsInsert.setColumn(nrow, "CD_VENDOR", this.dsSearch.getColumn(0, "CD_VENDOR"));
		this.dsInsert.setColumn(nrow, "DS_VENDOR", this.dsSearch.getColumn(0, "DS_VENDOR"));
		this.dsInsert.setColumn(nrow, "YN_BLANK", this.dsSearch.getColumn(0, "YN_BLANK"));
		this.dsInsert.setColumn(nrow, "DT_PROOF", this.dsSearch.getColumn(0, "DT_PROOF"));
		this.dsInsert.setColumn(nrow, "AM_SUPPLY", this.dsSearch.getColumn(0, "AM_SUPPLY"));
		this.dsInsert.setColumn(nrow, "AM_VAT", this.dsSearch.getColumn(0, "AM_VAT"));
		this.dsInsert.setColumn(nrow, "YN_RECEIPT", this.dsSearch.getColumn(0, "YN_RECEIPT"));
		this.dsInsert.setColumn(nrow, "DS_REM", this.dsSearch.getColumn(0, "DS_REM"));
		this.dsInsert.setColumn(nrow, "NO_VAT", this.dsSearch.getColumn(0, "NO_VAT"));

		this.dsInsert.setColumn(nrow, "MM_PROOF1", this.dsList.getColumn(0, "MM_PROOF"));
		this.dsInsert.setColumn(nrow, "DD_PROOF1", this.dsList.getColumn(0, "DD_PROOF"));
		this.dsInsert.setColumn(nrow, "DS_ITEM1", this.dsList.getColumn(0, "DS_ITEM"));
		this.dsInsert.setColumn(nrow, "DS_STANDARD1", this.dsList.getColumn(0, "DS_STANDARD"));
		this.dsInsert.setColumn(nrow, "CN_ITEM1", this.dsList.getColumn(0, "CN_ITEM"));
		this.dsInsert.setColumn(nrow, "AM_UNIT1", this.dsList.getColumn(0, "AM_UNIT"));
		this.dsInsert.setColumn(nrow, "AM_SUPPLY1", this.dsList.getColumn(i, "AM_SUPPLY"));
		this.dsInsert.setColumn(nrow, "AM_VAT1", this.dsList.getColumn(0, "AM_VAT"));
		this.dsInsert.setColumn(nrow, "DS_REM1", this.dsList.getColumn(0, "DS_REM"));

		this.dsInsert.setColumn(nrow, "MM_PROOF2", this.dsList.getColumn(1, "MM_PROOF"));
		this.dsInsert.setColumn(nrow, "DD_PROOF2", this.dsList.getColumn(1, "DD_PROOF"));
		this.dsInsert.setColumn(nrow, "DS_ITEM2", this.dsList.getColumn(1, "DS_ITEM"));
		this.dsInsert.setColumn(nrow, "DS_STANDARD2", this.dsList.getColumn(1, "DS_STANDARD"));
		this.dsInsert.setColumn(nrow, "CN_ITEM2", this.dsList.getColumn(1, "CN_ITEM"));
		this.dsInsert.setColumn(nrow, "AM_UNIT2", this.dsList.getColumn(1, "AM_UNIT"));
		this.dsInsert.setColumn(nrow, "AM_SUPPLY2", this.dsList.getColumn(1, "AM_SUPPLY"));
		this.dsInsert.setColumn(nrow, "AM_VAT2", this.dsList.getColumn(1, "AM_VAT"));
		this.dsInsert.setColumn(nrow, "DS_REM2", this.dsList.getColumn(1, "DS_REM"));

		this.dsInsert.setColumn(nrow, "MM_PROOF3", this.dsList.getColumn(2, "MM_PROOF"));
		this.dsInsert.setColumn(nrow, "DD_PROOF3", this.dsList.getColumn(2, "DD_PROOF"));
		this.dsInsert.setColumn(nrow, "DS_ITEM3", this.dsList.getColumn(2, "DS_ITEM"));
		this.dsInsert.setColumn(nrow, "DS_STANDARD3", this.dsList.getColumn(2, "DS_STANDARD"));
		this.dsInsert.setColumn(nrow, "CN_ITEM3", this.dsList.getColumn(2, "CN_ITEM"));
		this.dsInsert.setColumn(nrow, "AM_UNIT3", this.dsList.getColumn(2, "AM_UNIT"));
		this.dsInsert.setColumn(nrow, "AM_SUPPLY3", this.dsList.getColumn(2, "AM_SUPPLY"));
		this.dsInsert.setColumn(nrow, "AM_VAT3", this.dsList.getColumn(2, "AM_VAT"));
		this.dsInsert.setColumn(nrow, "DS_REM3", this.dsList.getColumn(2, "DS_REM"));

		this.dsInsert.setColumn(nrow, "MM_PROOF4", this.dsList.getColumn(3, "MM_PROOF"));
		this.dsInsert.setColumn(nrow, "DD_PROOF4", this.dsList.getColumn(3, "DD_PROOF"));
		this.dsInsert.setColumn(nrow, "DS_ITEM4", this.dsList.getColumn(3, "DS_ITEM"));
		this.dsInsert.setColumn(nrow, "DS_STANDARD4", this.dsList.getColumn(3, "DS_STANDARD"));
		this.dsInsert.setColumn(nrow, "CN_ITEM4", this.dsList.getColumn(3, "CN_ITEM"));
		this.dsInsert.setColumn(nrow, "AM_UNIT4", this.dsList.getColumn(3, "AM_UNIT"));
		this.dsInsert.setColumn(nrow, "AM_SUPPLY4", this.dsList.getColumn(3, "AM_SUPPLY"));
		this.dsInsert.setColumn(nrow, "AM_VAT4", this.dsList.getColumn(3, "AM_VAT"));
		this.dsInsert.setColumn(nrow, "DS_REM4", this.dsList.getColumn(3, "DS_REM"));

		this.dsInsert.setColumn(nrow, "ISSUE_GUBUN", this.dsSearch.getColumn(0, "ISSUEGUBUN") == "Y" ? "E" : "P");
		this.dsInsert.setColumn(nrow, "YN_MODIBILL", this.dsSearch.getColumn(0, "ModiBill_YN"));
		this.dsInsert.setColumn(nrow, "CD_MODIBILL", this.dsSearch.getColumn(0, "ModiBill"));
		this.dsInsert.setColumn(nrow, "RM_MODIBILL", this.dsSearch.getColumn(0, "RM_BIGO"));
		this.dsInsert.setColumn(nrow, "CD_JONG", this.dsSearch.getColumn(0, "CD_JONG"));
		this.dsInsert.setColumn(nrow, "ID_UPDATE", this.AuthClient.ID_USER);
		this.dsInsert.setColumn(nrow, "NO_SEQ_RETURN", "");
	}
	else if (this.IUD_FLAG == "D") {
		var nrow = this.dsUpdate.addRow();
		this.dsUpdate.setColumn(nrow, "CD_DEPT_SELFACNT", this.dsSearch.getColumn(0, "CD_SELFACNT"));
		this.dsUpdate.setColumn(nrow, "YR_ACCOUNT", this.dsSearch.getColumn(0, "YY_MAGAM"));
		this.dsUpdate.setColumn(nrow, "CD_VATPROOF", this.dsSearch.getColumn(0, "TY_VATPROOF"));
		this.dsUpdate.setColumn(nrow, "NO_GUN", this.dsSearch.getColumn(0, "NO_GUN"));
		this.dsUpdate.setColumn(nrow, "NO_SEQ", this.dsSearch.getColumn(0, "NO_SEQ"));
		this.dsUpdate.setColumn(nrow, "DS_DEPT_SELFACNT", this.dsSearch.getColumn(0, "DS_SELFACNT"));
		this.dsUpdate.setColumn(nrow, "NO_SJC", this.dsSearch.getColumn(0, "NO_SJC"));
		this.dsUpdate.setColumn(nrow, "CD_DEPT_ACNT", this.dsSearch.getColumn(0, "CD_DEPT_ACNT"));
		this.dsUpdate.setColumn(nrow, "TY_VENDOR", this.dsSearch.getColumn(0, "TY_VENDOR"));
		this.dsUpdate.setColumn(nrow, "CD_VENDOR", this.dsSearch.getColumn(0, "CD_VENDOR"));
		this.dsUpdate.setColumn(nrow, "DS_VENDOR", this.dsSearch.getColumn(0, "DS_VENDOR"));
		this.dsUpdate.setColumn(nrow, "YN_BLANK", this.dsSearch.getColumn(0, "YN_BLANK"));
		this.dsUpdate.setColumn(nrow, "DT_PROOF", this.dsSearch.getColumn(0, "DT_PROOF"));
		this.dsUpdate.setColumn(nrow, "AM_SUPPLY", this.dsSearch.getColumn(0, "AM_SUPPLY"));
		this.dsUpdate.setColumn(nrow, "AM_VAT", this.dsSearch.getColumn(0, "AM_VAT"));
		this.dsUpdate.setColumn(nrow, "YN_RECEIPT", this.dsSearch.getColumn(0, "YN_RECEIPT"));
		this.dsUpdate.setColumn(nrow, "DS_REM", this.dsSearch.getColumn(0, "DS_REM"));
		this.dsUpdate.setColumn(nrow, "NO_VAT", this.dsSearch.getColumn(0, "NO_VAT"));

		this.dsUpdate.setColumn(nrow, "MM_PROOF1", this.dsList.getColumn(0, "MM_PROOF"));
		this.dsUpdate.setColumn(nrow, "DD_PROOF1", this.dsList.getColumn(0, "DD_PROOF"));
		this.dsUpdate.setColumn(nrow, "DS_ITEM1", this.dsList.getColumn(0, "DS_ITEM"));
		this.dsUpdate.setColumn(nrow, "DS_STANDARD1", this.dsList.getColumn(0, "DS_STANDARD"));
		this.dsUpdate.setColumn(nrow, "CN_ITEM1", this.dsList.getColumn(0, "CN_ITEM"));
		this.dsUpdate.setColumn(nrow, "AM_UNIT1", this.dsList.getColumn(0, "AM_UNIT"));
		this.dsUpdate.setColumn(nrow, "AM_SUPPLY1", this.dsList.getColumn(0, "AM_SUPPLY"));
		this.dsUpdate.setColumn(nrow, "AM_VAT1", this.dsList.getColumn(0, "AM_VAT"));
		this.dsUpdate.setColumn(nrow, "DS_REM1", this.dsList.getColumn(0, "DS_REM"));

		this.dsUpdate.setColumn(nrow, "MM_PROOF2", this.dsList.getColumn(1, "MM_PROOF"));
		this.dsUpdate.setColumn(nrow, "DD_PROOF2", this.dsList.getColumn(1, "DD_PROOF"));
		this.dsUpdate.setColumn(nrow, "DS_ITEM2", this.dsList.getColumn(1, "DS_ITEM"));
		this.dsUpdate.setColumn(nrow, "DS_STANDARD2", this.dsList.getColumn(1, "DS_STANDARD"));
		this.dsUpdate.setColumn(nrow, "CN_ITEM2", this.dsList.getColumn(1, "CN_ITEM"));
		this.dsUpdate.setColumn(nrow, "AM_UNIT2", this.dsList.getColumn(1, "AM_UNIT"));
		this.dsUpdate.setColumn(nrow, "AM_SUPPLY2", this.dsList.getColumn(1, "AM_SUPPLY"));
		this.dsUpdate.setColumn(nrow, "AM_VAT2", this.dsList.getColumn(1, "AM_VAT"));
		this.dsUpdate.setColumn(nrow, "DS_REM2", this.dsList.getColumn(1, "DS_REM"));

		this.dsUpdate.setColumn(nrow, "MM_PROOF3", this.dsList.getColumn(2, "MM_PROOF"));
		this.dsUpdate.setColumn(nrow, "DD_PROOF3", this.dsList.getColumn(2, "DD_PROOF"));
		this.dsUpdate.setColumn(nrow, "DS_ITEM3", this.dsList.getColumn(2, "DS_ITEM"));
		this.dsUpdate.setColumn(nrow, "DS_STANDARD3", this.dsList.getColumn(2, "DS_STANDARD"));
		this.dsUpdate.setColumn(nrow, "CN_ITEM3", this.dsList.getColumn(2, "CN_ITEM"));
		this.dsUpdate.setColumn(nrow, "AM_UNIT3", this.dsList.getColumn(2, "AM_UNIT"));
		this.dsUpdate.setColumn(nrow, "AM_SUPPLY3", this.dsList.getColumn(2, "AM_SUPPLY"));
		this.dsUpdate.setColumn(nrow, "AM_VAT3", this.dsList.getColumn(2, "AM_VAT"));
		this.dsUpdate.setColumn(nrow, "DS_REM3", this.dsList.getColumn(2, "DS_REM"));

		this.dsUpdate.setColumn(nrow, "MM_PROOF4", this.dsList.getColumn(3, "MM_PROOF"));
		this.dsUpdate.setColumn(nrow, "DD_PROOF4", this.dsList.getColumn(3, "DD_PROOF"));
		this.dsUpdate.setColumn(nrow, "DS_ITEM4", this.dsList.getColumn(3, "DS_ITEM"));
		this.dsUpdate.setColumn(nrow, "DS_STANDARD4", this.dsList.getColumn(3, "DS_STANDARD"));
		this.dsUpdate.setColumn(nrow, "CN_ITEM4", this.dsList.getColumn(3, "CN_ITEM"));
		this.dsUpdate.setColumn(nrow, "AM_UNIT4", this.dsList.getColumn(3, "AM_UNIT"));
		this.dsUpdate.setColumn(nrow, "AM_SUPPLY4", this.dsList.getColumn(3, "AM_SUPPLY"));
		this.dsUpdate.setColumn(nrow, "AM_VAT4", this.dsList.getColumn(3, "AM_VAT"));
		this.dsUpdate.setColumn(nrow, "DS_REM4", this.dsList.getColumn(3, "DS_REM"));
		this.dsUpdate.setColumn(nrow, "ID_UPDATE", this.AuthClient.ID_USER);
	}
	else if (this.IUD_FLAG == "U") {
		var nrow = this.dsDelete.addRow();
		this.dsDelete.setColumn(nrow, "CD_DEPT_SELFACNT", this.dsDelete.getColumn(0, "CD_SELFACNT"));
		this.dsDelete.setColumn(nrow, "YR_ACCOUNT", this.dsDelete.getColumn(0, "YY_MAGAM"));
		this.dsDelete.setColumn(nrow, "CD_VATPROOF", this.dsDelete.getColumn(0, "TY_VATPROOF"));
		this.dsDelete.setColumn(nrow, "NO_GUN", this.dsDelete.getColumn(0, "NO_GUN"));
		this.dsDelete.setColumn(nrow, "NO_SEQ", this.dsDelete.getColumn(0, "NO_SEQ"));
		this.dsDelete.setColumn(nrow, "ID_DELETE", this.AuthClient.ID_USER);
	}
	else {
		this.gfnAlert("저장작업을 할 수 없습니다. 개발자 오류");
		return;
	}

	if (this.dsInsert.rowcount == 0 && this.dsUpdate.rowcount == 0 && this.dsDelete.rowcount == 0) return;

	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "insert=dsInsert update=dsUpdate delete=dsDelete";
	var outData     = "dsOut=insert";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/************************************************************************
 * Validate
 ************************************************************************/
this.fnSelectValidate = function() {
	return true;
};

this.fnSaveValidate = function() {
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "CD_SELFACNT"))) {
		this.fnVaidateCallback = function() {
			this.ctxtCD_SELFACNT.setFocus();
		}
		this.gfnAlert("세무단위가 입력되지 않았습니다.", "fnVaidateCallback");
		return false;
	}
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "CD_DEPT_ACNT"))) {
		this.fnVaidateCallback = function() {
			this.ccfCD_DEPT_ACNT.form.CDTextBox.setFocus();
		}
		this.gfnAlert("세무단위가 입력되지 않았습니다.", "fnVaidateCallback");
		return false;
	}
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "NO_GUN"))) {
		this.fnVaidateCallback = function() {
			this.txtNO_GUN.setFocus();
		}
		this.gfnAlert("권이 입력되지 않았습니다.", "fnVaidateCallback");
		return false;
	}
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "DT_PROOF"))) {
		this.fnVaidateCallback = function() {
			this.ctclDT_PROOF.setFocus();
		}
		this.gfnAlert("증빙일자가 입력되지 않았습니다.", "fnVaidateCallback");
		return false;
	}
	
	if (this.dsSearch.getColumn(0, "YN_BLANK") == "N") {
		if (this.gfnIsNull(this.dsSearch.getColumn(0, "CD_VENDOR"))) {
			this.fnVaidateCallback = function() {
				this.ccfCD_VENDOR.form.CDTextBox.setFocus();
			}
			this.gfnAlert("거래처가 입력되지 않았습니다.", "fnVaidateCallback");
			return false;
		}
		if (this.gfnIsNull(this.dsSearch.getColumn(0, "AM_SUPPLY"))) {
			this.fnVaidateCallback = function() {
				this.txtAM_SUPPLY.setFocus();
			}
			this.gfnAlert("공급가를 먼저 입력하세요.", "fnVaidateCallback");
			return false;
		}
		if (this.gfnIsNull(this.dsSearch.getColumn(0, "AM_VAT"))) {
			this.fnVaidateCallback = function() {
				this.txtAM_VAT.setFocus();
			}
			this.gfnAlert("부가세 먼저 입력하세요.", "fnVaidateCallback");
			return false;
		}
		if (this.gfnIsNull(this.dsSearch.getColumn(0, "NO_VAT"))) {
			this.fnVaidateCallback = function() {
				this.cfNO_VAT.form.CDTextBox.setFocus();
			}
			this.gfnAlert("증빙번호를 먼저 입력하세요.", "fnVaidateCallback");
			return false;
		}
	}
	
	if (this.dsSearch.getColumn(0, "ModiBill_YN") == "Y") {
		if (this.gfnIsNull(this.dsSearch.getColumn(0, "ModiBill"))) {
			this.fnVaidateCallback = function() {
				this.ccboModiBill.setFocus();
			}
			this.gfnAlert("수정사유를 선택하여 입력하세요.", "fnVaidateCallback");
			return false;
		}
		if (this.gfnIsNull(this.dsSearch.getColumn(0, "RM_BIGO"))) {
			this.fnVaidateCallback = function() {
				this.txtRM_BIGO.setFocus();
			}
			this.gfnAlert("비고를 입력하세요.", "fnVaidateCallback");
			return false;
		}
	}
	
	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
*/
this.fnCallback = function(svcID, errorCode, errorMsg) {
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
		
		if (this.dsList1.rowcount > 0) {
			this.dsSearch.setColumn(0, "NO_GUN", this.dsList1.getColumn(0, "NO_GUN"))
			this.dsSearch.setColumn(0, "NO_SEQ", this.dsList1.getColumn(0, "NO_SEQ"))
			this.dsSearch.setColumn(0, "DS_TAXDAMDANG", this.dsList1.getColumn(0, "DS_TAXDAMDANG"))
			this.dsSearch.setColumn(0, "ID_TAXEMAIL", this.dsList1.getColumn(0, "ID_TAXEMAIL"))
			
			this.dsList.setColumn(0, "MM_PROOF", this.dsList1.getColumn(0, "MM_PROOF1"));
			this.dsList.setColumn(0, "DD_PROOF", this.dsList1.getColumn(0, "DD_PROOF1"));
			this.dsList.setColumn(0, "DS_ITEM", this.dsList1.getColumn(0, "DS_ITEM1"));
			this.dsList.setColumn(0, "DS_STANDARD", this.dsList1.getColumn(0, "DS_STANDARD1"));
			this.dsList.setColumn(0, "CN_ITEM", this.dsList1.getColumn(0, "CN_ITEM1"));
			this.dsList.setColumn(0, "AM_UNIT", this.dsList1.getColumn(0, "AM_UNIT1"));
			this.dsList.setColumn(0, "AM_SUPPLY", this.dsList1.getColumn(0, "AM_SUPPLY1"));
			this.dsList.setColumn(0, "AM_VAT", this.dsList1.getColumn(0, "AM_VAT1"));
			this.dsList.setColumn(0, "DS_REM", this.dsList1.getColumn(0, "DS_REM1"));
			
			this.dsList.setColumn(1, "MM_PROOF", this.dsList1.getColumn(0, "MM_PROOF2"));
			this.dsList.setColumn(1, "DD_PROOF", this.dsList1.getColumn(0, "DD_PROOF2"));
			this.dsList.setColumn(1, "DS_ITEM", this.dsList1.getColumn(0, "DS_ITEM2"));
			this.dsList.setColumn(1, "DS_STANDARD", this.dsList1.getColumn(0, "DS_STANDARD2"));
			this.dsList.setColumn(1, "CN_ITEM", this.dsList1.getColumn(0, "CN_ITEM2"));
			this.dsList.setColumn(1, "AM_UNIT", this.dsList1.getColumn(0, "AM_UNIT2"));
			this.dsList.setColumn(1, "AM_SUPPLY", this.dsList1.getColumn(0, "AM_SUPPLY2"));
			this.dsList.setColumn(1, "AM_VAT", this.dsList1.getColumn(0, "AM_VAT2"));
			this.dsList.setColumn(1, "DS_REM", this.dsList1.getColumn(0, "DS_REM2"));
			
			this.dsList.setColumn(2, "MM_PROOF", this.dsList1.getColumn(0, "MM_PROOF3"));
			this.dsList.setColumn(2, "DD_PROOF", this.dsList1.getColumn(0, "DD_PROOF3"));
			this.dsList.setColumn(2, "DS_ITEM", this.dsList1.getColumn(0, "DS_ITEM3"));
			this.dsList.setColumn(2, "DS_STANDARD", this.dsList1.getColumn(0, "DS_STANDARD3"));
			this.dsList.setColumn(2, "CN_ITEM", this.dsList1.getColumn(0, "CN_ITEM3"));
			this.dsList.setColumn(2, "AM_UNIT", this.dsList1.getColumn(0, "AM_UNIT3"));
			this.dsList.setColumn(2, "AM_SUPPLY", this.dsList1.getColumn(0, "AM_SUPPLY3"));
			this.dsList.setColumn(2, "AM_VAT", this.dsList1.getColumn(0, "AM_VAT3"));
			this.dsList.setColumn(2, "DS_REM", this.dsList1.getColumn(0, "DS_REM3"));
			
			this.dsList.setColumn(3, "MM_PROOF", this.dsList1.getColumn(0, "MM_PROOF4"));
			this.dsList.setColumn(3, "DD_PROOF", this.dsList1.getColumn(0, "DD_PROOF4"));
			this.dsList.setColumn(3, "DS_ITEM", this.dsList1.getColumn(0, "DS_ITEM4"));
			this.dsList.setColumn(3, "DS_STANDARD", this.dsList1.getColumn(0, "DS_STANDARD4"));
			this.dsList.setColumn(3, "CN_ITEM", this.dsList1.getColumn(0, "CN_ITEM4"));
			this.dsList.setColumn(3, "AM_UNIT", this.dsList1.getColumn(0, "AM_UNIT4"));
			this.dsList.setColumn(3, "AM_SUPPLY", this.dsList1.getColumn(0, "AM_SUPPLY4"));
			this.dsList.setColumn(3, "AM_VAT", this.dsList1.getColumn(0, "AM_VAT4"));
			this.dsList.setColumn(3, "DS_REM", this.dsList1.getColumn(0, "DS_REM4"));
		}
		
		this.fnYN_BLANKChanged();
		this.btnDel.set_visible(true);
	}
	else if (svcID == "save") {
		if (errorCode == 0) {
			if (this.IUD_FLAG == "I" || this.IUD_FLAG == "B") {
				this.dsSearch.setColumn(0, "NO_SEQ", this.dsOut.getColumn(0, "NO_SEQ_RETURN"));
			}
			
			if (this.IUD_FLAG != "D") {
				if (this.dsSearch.getColumn(0, "ISSUEGUBUN") == "N")  {
					// Print
					// DHV_BILLTAX_REPORT or DHV_BILL_REPORT
				}
			}
			
			this.getParentContext().close(true);
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	else if (svcID == "taxno") {
		if (errorCode == 0) {
			if (this.dsTaxNo.rowcount > 0) {
				this.dsSearch.setColumn(0, "NO_GUN", this.dsTaxNo.getColumn(0, "NO_GUN"));
				this.dsSearch.setColumn(0, "NO_SEQ", this.dsTaxNo.getColumn(0, "NO_MAX"));
			}
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if (id == "ccfCD_DEPT_ACNT") {
		dsUserParam.setColumn(nrow, "CD_DEPT_SELFACNT", this.dsSearch.getColumn(0, "CD_SELFACNT"));
		dsUserParam.setColumn(nrow, "CD_DEPT_UPPPER", "");
	}
	else if (id == "ccfCD_VENDOR") {
		dsUserParam.setColumn(nrow, "TY_VENDOR", this.dsSearch.getColumn(0, "TY_VENDOR"));
		dsUserParam.setColumn(nrow, "CD_DEPT_REF", this.dsSearch.getColumn(0, "CD_SELFACNT"));
		dsUserParam.setColumn(nrow, "ORIGENTTAX", "");
	}
	else if (id == "ccfNO_VAT") {
// 		//?? DHX_VAT_NO 코드파인드 정보가 없음.
// 		this.dsSearch.getColumn(0, "CD_DEPT_ACNT")
// 		this.dsSearch.getColumn(0, "CD_VENDOR")
// 		this.dsSearch.getColumn(0, "DT_PROOF")
// 		this.dsSearch.getColumn(0, "TY_VENDOR")
// 		this.dsSearch.getColumn(0, "AM_SUPPLY")
// 		this.dsSearch.getColumn(0, "AM_VAT")
	}
	return true;
}
 
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGrid_EnterCell = function(obj:nexacro.Grid, row, cell) {
	if (this.IUD_FLAG == "S") {
		return false;
	}
}

this.fnGrid_AfterEdit = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo) {
	if (e.columnid == "AM_SUPPLY") {
		if (e.oldvalue != e.newvalue) {
			var r = this.dsList.rowposition;
			var amVat = nexacro.toNumber(this.dsList.getColumn(r, "AM_SUPPLY")) / 10 > 0 ? nexacro.toNumber(this.dsList.getColumn(r, "AM_SUPPLY")) : 0;
			this.dsList.setColumn(r, "AM_VAT", amVat);
		}
	}
}

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo) {
	if (e.oldvalue != e.newvalue) {
		switch(e.columnid) {
			case "ModiBill":
				var msg = "";
				switch (e.newvalue) {
					case "01":
						msg = "<- 수정분 발급일자 및 사유";
						break;
					case "02":
						msg = "<- 당초 발급일자 및 사유";
						break;
					case "03":
						msg = "<- 당초 세금계산서 작성일자 기재";
						break;
					case "04":
						msg = "<- 당초 세금계산서 작성일자 기재";
						break;
					case "05":
						msg = "<- 내국신용장개설일자 기재";
						break;
				}
				this.dsSearch.setColumn(0, "COMMENT", msg)
				break;
			
			case "ModiBill_YN":
				if (e.newvalue == "Y") {
					this.ccboModiBill.set_enable(true);
					this.txtRM_BIGO.set_readonly(false);
				}
				else {
					this.ccboModiBill.set_enable(false);
					this.dsSearch.setColumn(0, "ModiBill", "");
					this.dsSearch.setColumn(0, "RM_BIGO", "");
					this.txtRM_BIGO.set_readonly(true);
					
				}
				break;
		}
	}
};

this.fnInitGrid = function() {
	for (var i=0; i<=3; i++) {
		this.dsList.addRow();
	}
	
	if (this.IUD_FLAG == "I") {
		this.dsList.setColumn(nRow, "MM_PROOF", this.dsSearch.getColumn(0, "DT_PROOF").substr(4, 2));
		this.dsList.setColumn(nRow, "DD_PROOF", this.dsSearch.getColumn(0, "DT_PROOF").substr(6, 2));
		this.dsList.setColumn(nRow, "DS_ITEM", this.dsSearch.getColumn(0, "DS_REM"));
		this.dsList.setColumn(nRow, "AM_SUPPLY", this.dsSearch.getColumn(0, "AM_SUPPLY"));
		this.dsList.setColumn(nRow, "AM_VAT", this.dsSearch.getColumn(0, "AM_VAT"));
	}
}

this.fnBillInit = function() {
	this.ctclDT_PROOF.set_enable(false);
	
	this.dsSearch.setColumn(0, "ModiBill_YN", "N");
	this.chkModiBill_YN.set_enable(false);
	this.txtRM_BIGO.set_readonly(true);
	
	this.ccfCD_DEPT_ACNT.set_enable(false);
	this.ccfCD_VENDOR.set_enable(false);
	this.ccboTY_VENDOR.set_enable(false);
	this.cfNO_VAT.set_enable(false);
	
	if (this.IUD_FLAG == "I") {
		this.txtNO_GUN.set_readonly(false);
		this.ccboTY_VATPROOF.set_enable(false);
	}
	else if (this.IUD_FLAG == "I") {
		this.dsSearch.setColumn(0, "YN_BLANK", "Y");
		this.ctclYY_MAGAM.set_enable(true);
		this.ccboTY_VATPROOF.set_enable(true);
		this.ccfCD_DEPT_ACNT.set_enable(true);
		this.dsSearch.setColumn(0, "CD_DEPT_ACNT", this.AuthClient.CD_DEPT);
		this.dsSearch.setColumn(0, "DS_DEPT_ACNT", this.AuthClient.DS_DEPT);
		this.ccfCD_VENDOR.set_enable(true);
		this.cfNO_VAT.set_enable(false);
		this.txtNO_GUN.set_readonly(false);
		this.txtAM_VAT.set_readonly(false);
		this.txtAM_SUPPLY.set_readonly(false);
		this.txtDS_REM.set_readonly(false);
		this.ccboTY_VENDOR.set_enable(true);
		this.ccboYN_RECEIPT.set_enable(true);
	}
}

this.fnYN_BLANKChanged = function() {
	if (this.dsSearch.getColumn(0, "YN_BLANK") == "Y") {
		if (this.IUD_FLAG == "I") {
			this.dsSearch.setColumn(0, "CD_VENDOR", "");
			this.dsSearch.setColumn(0, "DS_VENDOR", "");
			this.dsSearch.setColumn(0, "DT_PROOF", "");
			this.dsSearch.setColumn(0, "AM_SUPPLY", 0);
			this.dsSearch.setColumn(0, "AM_VAT", 0);
			this.dsSearch.setColumn(0, "DS_REM", "");
			this.dsSearch.setColumn(0, "NO_VAT", "");
			this.dsSearch.setColumn(0, "TY_VENDOR", "");
			this.dsSearch.setColumn(0, "TY_VATPROOF", "");
			
			this.ctclYY_MAGAM.set_enable(true);
			this.ctclDT_PROOF.set_enable(true);
			
			this.ccboTY_VATPROOF.set_enable(true);
			this.ccboTY_VENDOR.set_enable(true);
			
			this.ccfCD_VENDOR.set_enable(true);
			this.ccfCD_DEPT_ACNT.set_enable(true);
			
			this.txtAM_SUPPLY.set_readonly(false);
			this.txtAM_VAT.set_readonly(false);
			this.txtDS_REM.set_readonly(false);
			
			this.cfNO_VAT.set_enable(false);

			this.staDT_PROOF.set_textDecoration("underline");
			this.staCD_VENDOR.set_textDecoration("");
			this.staAM_SUPPLY.set_textDecoration("");
			this.staAM_VAT.set_textDecoration("");
			this.staNO_VAT.set_textDecoration("");
			
			for (var i=0; i<this.dsList.rowcount; i++) {
				for (var j=0; j<this.dsList.colcount; j++) {
// 					if (this.dsList.getColumnInfo(j).type == "bigdecimal")
// 						this.dsList.setColumn(i, j, 0);
// 					else
						this.dsList.setColumn(i, j, "");
				}
			}
		}
		else {
			this.ctclYY_MAGAM.set_enable(false);
			this.ctclDT_PROOF.set_enable(false);
			
			this.ccboTY_VATPROOF.set_enable(false);
			this.ccboTY_VENDOR.set_enable(false);
			
			this.ccfCD_VENDOR.set_enable(false);
			this.ccfCD_DEPT_ACNT.set_enable(false);
			
			this.txtAM_SUPPLY.set_readonly(true);
			this.txtAM_VAT.set_readonly(true);
			this.txtDS_REM.set_readonly(true);
			
			this.cfNO_VAT.set_enable(false);
			this.ccboYN_RECEIPT.set_enable(false);
			
			this.staDT_PROOF.set_textDecoration("");
			this.staCD_VENDOR.set_textDecoration("");
			this.staAM_SUPPLY.set_textDecoration("");
			this.staAM_VAT.set_textDecoration("");
			this.staNO_VAT.set_textDecoration("");
		}
	}
	else {
		this.staDT_PROOF.set_textDecoration("underline");
		this.staCD_VENDOR.set_textDecoration("underline");
		this.staAM_SUPPLY.set_textDecoration("underline");
		this.staAM_VAT.set_textDecoration("underline");
		this.staNO_VAT.set_textDecoration("underline");
		
		if (this.IUD_FLAG == "I") {
			this.cfNO_VAT.set_enable(false);
			this.ctclYY_MAGAM.set_enable(false);
			this.ctclDT_PROOF.set_enable(false);
		}
		else if (this.IUD_FLAG == "S") {
			this.ctclYY_MAGAM.set_enable(false);
			this.ctclDT_PROOF.set_enable(false);
			
			this.ccboTY_VATPROOF.set_enable(false);
			this.ccboTY_VENDOR.set_enable(false);
			
			this.cfNO_VAT.set_enable(false);
			this.ccboYN_RECEIPT.set_enable(false);
		}
	}	
}

this.fnGetTaxNO = function() {
	this.dsSelectTax.clearData();
	this.dsSelectTax.addRow();
 	this.dsSelectTax.setColumn(0, "CD_DEPT_SELFACNT", this.dsSearch.getColumn(0, "CD_SELFACNT"));
 	this.dsSelectTax.setColumn(0, "CD_VATPROOF", this.dsSearch.getColumn(0, "TY_VATPROOF"));

	var strSvcId    = "taxno";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "taxno=dsSelectTax";
	var outData     = "dsTaxNo=taxno0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
	
}

//확인버튼 클릭
this.btnConf_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if (this.IUD_FLAG == "S" && this.dsSearch.getColumn(0, "YN_BLANK") == "Y") {
		this.gfnAlert("백지발행의 경우 세금계산서를 재발행할 수 없습니다. 삭제후 다시 발행하세요.");
		return;
	}
	if (this.IUD_FLAG != "S") {
		if (!this.fnSaveValidate())
			return;
		
		this.fnSave();
	}
};

//삭제버튼 클릭
this.btnDel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if (this.IUD_FLAG == "S") {
		this.IUD_FLAG = "D";
		if (!this.fnSaveValidate())
			return;
		
		this.fnSave();
	}
};

//취소버튼 클릭
this.btnCancel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	this.getParentContext().close(false);
};]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="dsList1"/>
      <Dataset id="dsOut"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DHVPR_BILL_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">insert</Col>
            <Col id="SP">DHVPR_BILL_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">update</Col>
            <Col id="SP">DHVPR_BILL_UPDATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">delete</Col>
            <Col id="SP">DHVPR_BILL_DELETE</Col>
          </Row>
          <Row>
            <Col id="SP">DHVPR_TAX_NO_SELECT</Col>
            <Col id="TARGET">taxno</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_SELFACNT" type="STRING" size="256"/>
          <Column id="DS_SELFACNT" type="STRING" size="256"/>
          <Column id="NO_SJC" type="STRING" size="256"/>
          <Column id="NO_GUN" type="STRING" size="256"/>
          <Column id="NO_SEQ" type="STRING" size="256"/>
          <Column id="YY_MAGAM" type="STRING" size="256"/>
          <Column id="TY_VENDOR" type="STRING" size="256"/>
          <Column id="CD_VENDOR" type="STRING" size="256"/>
          <Column id="DS_VENDOR" type="STRING" size="256"/>
          <Column id="CD_DEPT_ACNT" type="STRING" size="256"/>
          <Column id="DS_DEPT_ACNT" type="STRING" size="256"/>
          <Column id="DS_TAXDAMDANG" type="STRING" size="256"/>
          <Column id="ID_TAXEMAIL" type="STRING" size="256"/>
          <Column id="CD_JONG" type="STRING" size="256"/>
          <Column id="DT_PROOF" type="STRING" size="256"/>
          <Column id="TY_VATPROOF" type="STRING" size="256"/>
          <Column id="AM_SUPPLY" type="BIGDECIMAL" size="256"/>
          <Column id="AM_VAT" type="BIGDECIMAL" size="256"/>
          <Column id="DS_REM" type="STRING" size="256"/>
          <Column id="NO_VAT" type="STRING" size="256"/>
          <Column id="YN_RECEIPT" type="STRING" size="256"/>
          <Column id="ModiBill" type="STRING" size="256"/>
          <Column id="ModiBill_YN" type="STRING" size="256"/>
          <Column id="RM_BIGO" type="STRING" size="256"/>
          <Column id="COMMENT" type="STRING" size="256"/>
          <Column id="YN_BLANK" type="STRING" size="256"/>
          <Column id="ISSUEGUBUN" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_VENDOR">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE"/>
            <Col id="DS_CODE"/>
          </Row>
          <Row>
            <Col id="CD_CODE">F</Col>
            <Col id="DS_CODE">일반거래처</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">B</Col>
            <Col id="DS_CODE">금융거래처</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">P</Col>
            <Col id="DS_CODE">개인거래처</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_VATPROOF">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">A</Col>
            <Col id="DS_CODE">세금계산서</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">B</Col>
            <Col id="DS_CODE">계산서</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsYN_RECEIPT">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">Y</Col>
            <Col id="DS_CODE">영수</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">N</Col>
            <Col id="DS_CODE">청구</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsModiBill">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE"/>
            <Col id="DS_CODE"/>
          </Row>
          <Row>
            <Col id="CD_CODE">01</Col>
            <Col id="DS_CODE">기재사항의 착오, 정정</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">02</Col>
            <Col id="DS_CODE">공급가액의 변동</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">03</Col>
            <Col id="DS_CODE">환입</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">04</Col>
            <Col id="DS_CODE">계약의 해제</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">05</Col>
            <Col id="DS_CODE">내국신용장 사후 개설</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTaxNo"/>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divDetail.form.ctxtCD_SELFACNT" propid="value" datasetid="dsSearch" columnid="CD_SELFACNT"/>
      <BindItem id="item1" compid="divDetail.form.ctxtDS_SELFACNT" propid="value" datasetid="dsSearch" columnid="DS_SELFACNT"/>
      <BindItem id="item2" compid="divDetail.form.ctxtNO_SJC" propid="value" datasetid="dsSearch" columnid="NO_SJC"/>
      <BindItem id="item3" compid="divDetail.form.txtNO_GUN" propid="value" datasetid="dsSearch" columnid="NO_GUN"/>
      <BindItem id="item4" compid="divDetail.form.txtNO_SEQ" propid="value" datasetid="dsSearch" columnid="NO_SEQ"/>
      <BindItem id="item5" compid="divDetail.form.ctclYY_MAGAM.form.TextBox" propid="value" datasetid="dsSearch" columnid="YY_MAGAM"/>
      <BindItem id="item6" compid="divDetail.form.ccboTY_VENDOR" propid="value" datasetid="dsSearch" columnid="TY_VENDOR"/>
      <BindItem id="item7" compid="divDetail.form.ccfCD_VENDOR.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_VENDOR"/>
      <BindItem id="item8" compid="divDetail.form.ccfCD_VENDOR.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_VENDOR"/>
      <BindItem id="item9" compid="divDetail.form.ccfCD_DEPT_ACNT.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_DEPT_ACNT"/>
      <BindItem id="item10" compid="divDetail.form.ccfCD_DEPT_ACNT.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_DEPT_ACNT"/>
      <BindItem id="item11" compid="divDetail.form.txtDS_TAXDAMDANG" propid="value" datasetid="dsSearch" columnid="DS_TAXDAMDANG"/>
      <BindItem id="item12" compid="divDetail.form.txtID_TAXEMAIL" propid="value" datasetid="dsSearch" columnid="ID_TAXEMAIL"/>
      <BindItem id="item13" compid="divDetail.form.txtCD_JONG" propid="value" datasetid="dsSearch" columnid="CD_JONG"/>
      <BindItem id="item14" compid="divDetail.form.ctclDT_PROOF" propid="value" datasetid="dsSearch" columnid="DT_PROOF"/>
      <BindItem id="item15" compid="divDetail.form.ccboTY_VATPROOF" propid="value" datasetid="dsSearch" columnid="TY_VATPROOF"/>
      <BindItem id="item16" compid="divDetail.form.txtAM_SUPPLY" propid="value" datasetid="dsSearch" columnid="AM_SUPPLY"/>
      <BindItem id="item17" compid="divDetail.form.txtAM_VAT" propid="value" datasetid="dsSearch" columnid="AM_VAT"/>
      <BindItem id="item18" compid="divDetail.form.txtDS_REM" propid="value" datasetid="dsSearch" columnid="DS_REM"/>
      <BindItem id="item19" compid="divDetail.form.cfNO_VAT.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="NO_VAT"/>
      <BindItem id="item20" compid="divDetail.form.ccboYN_RECEIPT" propid="value" datasetid="dsSearch" columnid="YN_RECEIPT"/>
      <BindItem id="item21" compid="divDetail.form.ccboModiBill" propid="value" datasetid="dsSearch" columnid="ModiBill"/>
      <BindItem id="item22" compid="divDetail.form.chkModiBill_YN" propid="value" datasetid="dsSearch" columnid="ModiBill_YN"/>
      <BindItem id="item23" compid="divDetail.form.txtRM_BIGO" propid="value" datasetid="dsSearch" columnid="RM_BIGO"/>
      <BindItem id="item24" compid="divDetail.form.staComment" propid="text" datasetid="dsSearch" columnid="COMMENT"/>
      <BindItem id="item25" compid="chkIssueGubun" propid="value" datasetid="dsSearch" columnid="ISSUEGUBUN"/>
    </Bind>
  </Form>
</FDL>
