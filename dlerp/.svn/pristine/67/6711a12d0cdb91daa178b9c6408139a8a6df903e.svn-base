<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="1280" height="720" titletext="사업소득 간이지급명세서 신고" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none" text="">
          <Layouts>
            <Layout>
              <Static id="sta00" taborder="0" text="법인코드" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_CORP" CDTextWidth="70" taborder="1" left="sta00:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staYY_TUITION" taborder="0" text="년도" left="ccfCD_CORP:0.0" top="10.0" width="66" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ctclYY_TUITION" taborder="1" left="staYY_TUITION:0.0" top="10.0" width="60" height="24.0" url="cmm::cmmCalYY.xfdl"/>
              <Static id="sta01" taborder="6" text="구분" left="ctclYY_TUITION:0.0" top="10.0" width="66" height="24.0" cssclass="sta_WF_SchLabel" visible="false"/>
              <Combo id="ccboTY_YM" taborder="2" left="sta01:0.0" top="10.0" width="80" height="24.0" datacolumn="datacolumn" codecolumn="codecolumn" value="" index="-1" text="" innerdataset="innerdataset" onitemchanged="divSearch_ccboTY_YM_onitemchanged" visible="false">
                <Dataset id="innerdataset">
                  <ColumnInfo>
                    <Column id="codecolumn" size="256"/>
                    <Column id="datacolumn" size="256"/>
                  </ColumnInfo>
                  <Rows>
                    <Row>
                      <Col id="codecolumn">U</Col>
                      <Col id="datacolumn">상반기</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">D</Col>
                      <Col id="datacolumn">하반기</Col>
                    </Row>
                  </Rows>
                </Dataset>
              </Combo>
              <Static id="sta06" taborder="7" text="귀속기간" left="ctclYY_TUITION:10" top="10" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYM_IMPUTE_FR" taborder="3" left="sta06:0.0" top="10.0" width="80" height="24.0" url="cmm::cmmCalMM.xfdl"/>
              <Static id="sta04" taborder="8" text="~" left="ctclYM_IMPUTE_FR:0.0" top="10.0" width="30.0" height="24.0" cssclass="sta_WF_AC"/>
              <Div id="ctclYM_IMPUTE_TO" taborder="4" left="sta04:0.0" top="10.0" width="80" height="24.0" url="cmm::cmmCalMM.xfdl"/>
              <Static id="sta02" taborder="9" text="거주구분" left="ctclYM_IMPUTE_TO:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Combo id="ccboYN_RESIDENT" taborder="5" left="sta02:0.0" top="10.0" width="80" height="24.0" datacolumn="datacolumn" codecolumn="codecolumn" value="" index="-1" text="" innerdataset="innerdataset" onitemchanged="divSearch_ccboYN_RESIDENT_onitemchanged">
                <Dataset id="innerdataset">
                  <ColumnInfo>
                    <Column id="codecolumn" size="256"/>
                    <Column id="datacolumn" size="256"/>
                  </ColumnInfo>
                  <Rows>
                    <Row>
                      <Col id="codecolumn">Y</Col>
                      <Col id="datacolumn">거주</Col>
                    </Row>
                  </Rows>
                </Dataset>
              </Combo>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="1" top="0" bottom="0" right="-1" oncellclick="divData_objGrid_oncellclick"/>
            </Layout>
          </Layouts>
        </Div>
        <TextArea id="txtCont" taborder="2" left="1290" top="295" width="120" height="95" visible="false"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

var context = "/";
if (nexacro.getEnvironmentVariable("evContextPath") != undefined) {
	context = nexacro.getEnvironmentVariable("evContextPath");
}

this.fileConfig = {
	host : this.gfnGetServerUrl(),
	downloadUrl : context + "file/downloadText.do",
	allowTypes : ["txt"],
	maxCount : 1,
	maxSize : "200MB",
	maxTotalSize : "200MB"
};

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//

	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	this.ccfCD_CORP.form.CDTextBox.setFocus();
	this.ccboTY_YM.set_index(0);	
	this.ccboYN_RESIDENT.set_index(0);	
	//법인코드 세션에 코드로 셋팅
	this.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);
	this.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP); 
	
	//귀속기간
	var nowYear = this.gfnGetDate().substr(0,4);
	this.ctclYY_TUITION.form.TextBox.set_value(this.gfnGetDate().substr(0,4));	
	//this.ctclYM_IMPUTE_FR.form.TextBox.set_value(nowYear + "01");	
	//this.ctclYM_IMPUTE_TO.form.TextBox.set_value(nowYear + "06");
	this.ctclYM_IMPUTE_FR.form.TextBox.set_value(this.gfnAddMonth(this.gfnGetDate(),-1).substring(0,6));	
	this.ctclYM_IMPUTE_TO.form.TextBox.set_value(this.gfnAddMonth(this.gfnGetDate(),-1).substring(0,6));
	//this.fnGetNoSaup();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel

}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnGanTaxSingo = this.gfnFormButtonAdd("GanTaxSingo", "fnGanTaxSingo");	//전산매체파일생성
	this.btnDataCreate = this.gfnFormButtonAdd("DataCreate", "fnDataCreate");	//자료생성
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_CORP 	    = this.divSearch.form.ccfCD_CORP;	
	this.ccboTY_YM 			= this.divSearch.form.ccboTY_YM;	
	this.ctclYM_IMPUTE_FR 	= this.divSearch.form.ctclYM_IMPUTE_FR;	
	this.ctclYM_IMPUTE_TO  	= this.divSearch.form.ctclYM_IMPUTE_TO;
	this.ccboYN_RESIDENT 	= this.divSearch.form.ccboYN_RESIDENT;
	this.dxGrid 		    = this.divData.form.objGrid;
	
	this.ctclYY_TUITION = this.divSearch.form.ctclYY_TUITION;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.ccfCD_CORP.CodeFindName = "DHX_CFCORP";
	this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	//this.ccfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";

	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DH", "DHV_LOCAL_SELECT");
	
	//검색조건 변경 이벤트
	this.dsSearch.addEventHandler("onvaluechanged", this.dsSearch_Valuechanged, this);

};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("YM_IMPUTE_FR", "string");
	this.dsSelect.addColumn("YM_IMPUTE_TO", "string");
	this.dsSelect.addColumn("YN_RESIDENT", "string");
	
	
	this.dsCreate = new Dataset();
	this.dsCreate.addColumn("CD_CORP", "string");
	this.dsCreate.addColumn("YM_IMPUTE_FR", "string");
	this.dsCreate.addColumn("YM_IMPUTE_TO", "string");
	this.dsCreate.addColumn("ID_USER", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "CD_CORP"			, this.ccfCD_CORP.form.CDTextBox.value);
	this.dsSelect.setColumn(0, "YM_IMPUTE_FR"		, this.ctclYM_IMPUTE_FR.form.TextBox.value);
	this.dsSelect.setColumn(0, "YM_IMPUTE_TO"		, this.ctclYM_IMPUTE_TO.form.TextBox.value);
	this.dsSelect.setColumn(0, "YN_RESIDENT"		, this.ccboYN_RESIDENT.value);
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc);   // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {

}

/*
 *	삭제 버튼
 */
this.fnDel = function() {

}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {

	if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
		this.gfnAlert("법인코드는 필수입니다.");
		this.ccfCD_CORP.form.CDTextBox.setFocus();
		return false;
	}

	var ymImputeFr = this.ctclYM_IMPUTE_FR.form.TextBox.value;
	var ymImputeTo = this.ctclYM_IMPUTE_TO.form.TextBox.value;
	if(this.gfnIsNull(ymImputeFr)){
		this.gfnAlert("귀속기간(시작일)은 필수입니다.");
		this.ctclYM_IMPUTE_FR.form.TextBox.setFocus();
		return false;
	}
	
	if(this.gfnIsNull(ymImputeTo)){
		this.gfnAlert("귀속기간(종료일)은 필수입니다.");
		this.ctclYM_IMPUTE_TO.form.TextBox.setFocus();
		return false;
	}
	

	if(this.gfnGetDiffDate(ymImputeFr + "01", ymImputeTo +"01") <= -1){
		this.gfnAlert("귀속기간의 시작일은 종료일보다 작아야 합니다.");
		this.ctclYM_IMPUTE_FR.form.TextBox.setFocus();
		return false;
	}

	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	switch(svcID) {
		case "select":
			this.gfnGridAfterSelect(this.dxGrid);	
			this.fnSetBtnGanTaxSingo(this.dsSearch.getColumn(0, "YN_RESIDENT")); //전산매체생성 버튼 활성화 관련
			
		break;
		case "create":
			if (errorCode == 0) {
				this.gfnAlert("생성되었습니다.");
				this.FormBtns.Select.click();
			} else {
				this.gfnAlert(errorMsg);
			}
		break;
		case "ganTaxSingo":
			var strCont= "";
			for(var i = 0; i < this.dsGanTaxSingoResult.rowcount; i++) {
				strCont += this.gfnNvl(this.dsGanTaxSingoResult.getColumn(i, "LIST"),"");
				if(i != this.dsGanTaxSingoResult.rowcount-1 ){
					strCont += "\n";
				}
			}
			this.txtCont.set_value(strCont);
			
			//파일 다운
			this.fnFileDown();
		break;
		case "nosaup":
		  var nRow = this.dsNoSaup.findRow("CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));
		  this.strSaupNo = this.dsNoSaup.getColumn(nRow, "NO_SAUP");
		  trace("nosaup 콜백=>" + this.strSaupNo);	
		  break;
		default:
	}
};

//전산매체생성 버튼 활성화 관련
this.fnSetBtnGanTaxSingo = function(sYN_RESIDENT){
	if(this.gfnIsNull(sYN_RESIDENT)){
		//전체일때 전산매체 생성 비활성화
		this.btnGanTaxSingo.set_enable(false);
	}else{
		if(this.dsList.rowcount >0){
			this.btnGanTaxSingo.set_enable(true);
		}else{
			this.btnGanTaxSingo.set_enable(false);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if (id == "ccfCD_CORP") {
		dsUserParam.setColumn(nrow, "ID_SABUN", this.AuthClient.ID_USER);
	}
	
	return true;
}
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/

/************************************************************************
 * 기타 이벤트
 ************************************************************************/

this.fnGetNoSaup = function() {
	this.dsGetNoSaup = new Dataset();		
	
	this.dsGetNoSaup.addColumn("TY_GUBUN", "string");
	this.dsGetNoSaup.addColumn("CN_ROW", "string");
	this.dsGetNoSaup.addColumn("VALUE", "string");
	this.dsGetNoSaup.addColumn("MIN_VALUE", "string");
	this.dsGetNoSaup.addColumn("CD_CORP", "string");
	
	this.dsGetNoSaup.clearData();
	this.dsGetNoSaup.addRow();
	this.dsGetNoSaup.setColumn(0, "TY_GUBUN", "");
	this.dsGetNoSaup.setColumn(0, "CN_ROW", "");
	this.dsGetNoSaup.setColumn(0, "VALUE", "");
	this.dsGetNoSaup.setColumn(0, "MIN_VALUE", "");
	this.dsGetNoSaup.setColumn(0, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));
	
	var strSvcId    = "nosaup";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "nosaup=dsGetNoSaup";
	var outData     = "dsNoSaup=nosaup0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc);   // 통신방법 정의 [생략가능]
	
}

//검색조건 변경 이벤트
this.dsSearch_Valuechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{	
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
		//this.fnGetNoSaup();
		
		if(e.columnid == "YN_RESIDENT"){
			this.fnSetBtnGanTaxSingo(e.newvalue); //전산매체생성 버튼 활성화 관련
		}
		if(e.columnid == "CD_CORP"){
			this.fnGetNoSaup();  //전산매체생성 버튼 활성화 관련
		}
	}	
// 	this.ctclYM_IMPUTE_FR.form.TextBox.set_value(this.ctclYY_TUITION.form.TextBox.value + "01");	
// 	this.ctclYM_IMPUTE_TO.form.TextBox.set_value(this.ctclYY_TUITION.form.TextBox.value + "06");
};


//자료신고 - 전산매체 생성
this.fnGanTaxSingo = function(){
	if(!this.fnSelectValidate()) return;
	
	this.gfnConfirm("전산매체를 생성 하시겠습니까?", "fnGanTaxSingo_callback");
};

this.fnGanTaxSingo_callback = function(strId, val){
	if(val) {

		this.dsGanTaxSingo = new Dataset();

		this.dsGanTaxSingo.addColumn("CD_CORP", "string");
		this.dsGanTaxSingo.addColumn("YR_TAX", "string");			// 귀속년도
		this.dsGanTaxSingo.addColumn("DT_ACCOUNT", "string");		//제출년월일
		this.dsGanTaxSingo.addColumn("TY_INCOME_TYPE", "string");	//사업소득 (30)
		this.dsGanTaxSingo.addColumn("PAY_YM", "string");			//지급년도
		//this.dsGanTaxSingo.addColumn("TY_GUBUN", "string");			//구분 Y:상반기, N:하반기

		this.dsGanTaxSingo.clearData();
		var nRow = this.dsGanTaxSingo.addRow();
		
		//처리할 데이터 담기
		this.dsGanTaxSingo.setColumn(nRow, "CD_CORP"		, this.ccfCD_CORP.form.CDTextBox.value);
		this.dsGanTaxSingo.setColumn(nRow, "YR_TAX"			, this.ctclYM_IMPUTE_TO.form.TextBox.value.substring(0,4));
		this.dsGanTaxSingo.setColumn(nRow, "DT_ACCOUNT"		, this.gfnGetDate());
		this.dsGanTaxSingo.setColumn(nRow, "TY_INCOME_TYPE"	, "25");
		this.dsGanTaxSingo.setColumn(nRow, "PAY_YM"			, this.ctclYM_IMPUTE_TO.form.TextBox.value);
		//this.dsGanTaxSingo.setColumn(nRow, "YN_GUBUN"		, this.ccboTY_YM.value);
		
		var strSvcId    = "ganTaxSingo";
		var strSvcType  = "select";
		var inProc		= "_dsProc";
		var inData 		= "";
		var outData 	= "";
				
		if(this.ccboYN_RESIDENT.value == "Y"){
			inData      = "ganTaxSingo=dsGanTaxSingo";
			outData     = "dsGanTaxSingoResult=ganTaxSingo0";
		}else if(this.ccboYN_RESIDENT.value == "N"){		
			inData      = "ganTaxSingo2=dsGanTaxSingo";
			outData     = "dsGanTaxSingoResult=ganTaxSingo20";
		}
		
		var strArg      = "";
		var callBackFnc = "fnCallback";		
		this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
							strSvcType , 	// transaction을 요청할 구분
							inProc,			// Procedure 정보 Dataset 이름
							inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
							outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
							strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
							callBackFnc); 	// 통신방법 정의 [생략가능]
	}
};

//자료생성 처리
this.fnDataCreate = function (obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if(!this.fnSelectValidate()) return;
	
	this.gfnConfirm("생성 하시겠습니까?", "fnDataCreate_callback");
	
};

this.fnDataCreate_callback = function(strId, val) 
{
	if(val == true) {
		this.dsCreate.clearData();
		var nRow = this.dsCreate.addRow();
		
		//처리할 데이터 담기
		this.dsCreate.setColumn(nRow, "CD_CORP"				, this.ccfCD_CORP.form.CDTextBox.value);
		this.dsCreate.setColumn(nRow, "YM_IMPUTE_FR"		, this.ctclYM_IMPUTE_FR.form.TextBox.value);
		this.dsCreate.setColumn(nRow, "YM_IMPUTE_TO"		, this.ctclYM_IMPUTE_TO.form.TextBox.value);
		this.dsCreate.setColumn(nRow, "ID_USER"  			, this.AuthClient.ID_USER);
		
		var strSvcId    = "create";
		var strSvcType  = "save";
		var inProc		= "_dsProc";
		var inData      = "create=dsCreate";
		var outData     = "";
		var strArg      = "";
		var callBackFnc = "fnCallback";
		
		this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
							strSvcType , 	// transaction을 요청할 구분
							inProc,			// Procedure 정보 Dataset 이름
							inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
							outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
							strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
							callBackFnc); 	// 통신방법 정의 [생략가능]
	}
};
this.divSearch_ccboTY_YM_onitemchanged = function(obj:nexacro.Combo,e:nexacro.ItemChangeEventInfo)
{	
	var frYm = "", toYm = "";
	if(e.postvalue == "U"){
		frYm = this.ctclYY_TUITION.form.TextBox.value + "01";
		toYm = this.ctclYY_TUITION.form.TextBox.value + "06";
	}else{
		frYm = this.ctclYY_TUITION.form.TextBox.value + "07";
		toYm = this.ctclYY_TUITION.form.TextBox.value + "12";
	}
	
	//귀속기간
	this.ctclYM_IMPUTE_FR.form.TextBox.set_value(frYm);	
	this.ctclYM_IMPUTE_TO.form.TextBox.set_value(toYm);	
};

this.divSearch_ccboYN_RESIDENT_onitemchanged = function(obj:nexacro.Combo,e:nexacro.ItemChangeEventInfo)
{	
//rowcount 0 일때 의미 없음
// 	if(this.ccboYN_RESIDENT.value == "" || this.ccboYN_RESIDENT.value == undefined){		
// 		this.btnGanTaxSingo.set_enable(false);
// 	}else{		
// 		this.btnGanTaxSingo.set_enable(true);
// 	}
};

//전산매체 생성 - TXT 파일 다운
this.fnFileDown = function() {
	
	var cFileName="";
	var sFilename = "SF"+ this.strSaupNo.substr(0, this.strSaupNo.length-3) + "." + this.strSaupNo.substr(this.strSaupNo.length-3, 3);
	var sFilecont = this.txtCont.value;
	var encodeFileName = encodeURIComponent(sFilename);
		
	var surl = this.fileConfig.host+ this.fileConfig.downloadUrl; // + encodeFileName;
	this.FileDownTransfer00.set_url(surl);
	this.FileDownTransfer00.setPostData("fileCont", sFilecont);
	this.FileDownTransfer00.setPostData("fileName", encodeFileName);
	this.FileDownTransfer00.setPostData("fileEncoding", "EUC-KR"); //UTF-8, EUC-KR
	if( system.navigatorname =="nexacro"){
		this.FileDownTransfer00.set_downloadfilename(sFilename);
	}
	this.FileDownTransfer00.download();
};

]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DHVPR_BI_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">create</Col>
            <Col id="SP">DHVPR_BI_CREATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">ganTaxSingo</Col>
            <Col id="SP">DHVPR_GANTAXSINGO_PAYYM_CREATE_NEW</Col>
          </Row>
          <Row>
            <Col id="TARGET">ganTaxSingo2</Col>
            <Col id="SP">DHVPR_GANTAXSINGO_CREATE2</Col>
          </Row>
          <Row>
            <Col id="SP">DZXPR_COMPANYCORP_CODEFIND</Col>
            <Col id="TARGET">nosaup</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch">
        <ColumnInfo>
          <Column id="YY_TUITION" type="STRING" size="256"/>
          <Column id="YM_IMPUTE_FR" type="STRING" size="256"/>
          <Column id="YM_IMPUTE_TO" type="STRING" size="256"/>
          <Column id="YN_RESIDENT" type="STRING" size="256"/>
          <Column id="CD_CORP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="YM_IMPUTE_TO"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsGanTaxSingoResult"/>
      <FileDownTransfer id="FileDownTransfer00"/>
      <Dataset id="dsNoSaup"/>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item3" compid="divSearch.form.ctclYM_IMPUTE_TO.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_IMPUTE_FR"/>
      <BindItem id="item4" compid="divSearch.form.ctclYM_IMPUTE_FR.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_IMPUTE_TO"/>
      <BindItem id="item1" compid="divSearch.form.ccboYN_RESIDENT" propid="value" datasetid="dsSearch" columnid="YN_RESIDENT"/>
      <BindItem id="item5" compid="divSearch.form.ctclYY_TUITION.form.TextBox" propid="value" datasetid="dsSearch" columnid="YY_TUITION"/>
    </Bind>
  </Form>
</FDL>
