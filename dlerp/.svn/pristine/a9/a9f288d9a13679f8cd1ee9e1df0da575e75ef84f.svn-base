<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="DWA_SILHENG" width="1280" height="720" titletext="QCS평가(외주)" onload="DWA_SILHENG_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrollbartype="auto auto">
          <Layouts>
            <Layout>
              <Static id="staYY_WORK" taborder="1" text="평가년도" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYEAR" taborder="0" left="staYY_WORK:0.0" top="10.0" width="59" height="24.0" url="cmm::cmmCalYY.xfdl" formscrolltype="both"/>
              <Div id="ctclDT_GISUNG_FR" taborder="4" left="ctclYEAR:0.0" top="10.0" width="80" height="24.0" url="cmm::cmmCalMM.xfdl"/>
              <Static id="staDT_WORK00" taborder="2" text="~" left="ctclDT_GISUNG_FR:0.0" top="10.0" width="30.0" height="24.0" cssclass="sta_WF_AC"/>
              <Div id="ctclDT_GISUNG_TO" taborder="3" left="staDT_WORK00:0.0" top="10.0" width="80" height="24.0" url="cmm::cmmCalMM.xfdl"/>
              <Static id="staDT_WORK" taborder="5" text="기성기간" left="ctclYEAR:0.0" top="10.0" width="92.0" height="24.0" textDecoration="none" cssclass="sta_WF_SchLabel"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0" oncelldblclick="divData_objGrid_oncelldblclick"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DCDPR_EVALUERESULT_QCS_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DCDPR_EVALUERESULT_QCS_SAVE</Col>
          </Row>
          <Row>
            <Col id="TARGET">exec</Col>
            <Col id="SP">DCDPR_EVALUERESULT_QCS_CREATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">delete</Col>
            <Col id="SP">DCDPR_EVALUERESULT_QCS_DELETE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="YEAR" type="STRING" size="256"/>
          <Column id="DT_GISUNG_FR" type="STRING" size="256"/>
          <Column id="DT_GISUNG_TO" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="YEAR"/>
            <Col id="DT_GISUNG_FR"/>
            <Col id="DT_GISUNG_TO"/>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.DWA_SILHENG_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	var dt = new Date();
	this.divSearch.form.ctclYEAR.form.TextBox.set_value(dt.getFullYear());
	
	//var today = this.gfnGetDate();
	//this.dsSearch.setColumn(0, "DT_GISUNG_FR", today.substring(0,6));
	//this.dsSearch.setColumn(0, "DT_GISUNG_TO", today.substring(0,6));
	//this.dsSearch.setColumn(0, "YR_EVALUE", dt.getFullYear());
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
	this.FormBtns.Add.set_enable(false);
	//this.FormBtns.Save.set_enable(false);
	//this.FormBtns.Del.set_enable(false);
};

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnCreate = this.gfnFormButtonAdd("btnCreate", "fnCreate");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ctclYEAR = this.divSearch.form.ctclYEAR;
	this.ctclDT_GISUNG_FR = this.divSearch.form.ctclDT_GISUNG_FR;
	this.ctclDT_GISUNG_TO = this.divSearch.form.ctclDT_GISUNG_TO;

	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {

	this.gfnGridInit(this.dxGrid, this.dsList, "DC", "DCD_EVALUERESULT_QCS");	
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("YEAR", "string");
	this.dsSelect.addColumn("MODULE", "string");

	this.dsSave = new Dataset();
	this.dsSave.addColumn("CD_VENDOR", "string");
	this.dsSave.addColumn("YEAR", "string");
	this.dsSave.addColumn("MODULE", "string");
	this.dsSave.addColumn("AM_GISUNG_EVALUE", "bigdecimal");
	this.dsSave.addColumn("ID_UPDATE", "string");
	this.dsSave.addColumn("CD_LICCOST", "string");
	
	this.dsDelete = new Dataset();
	this.dsDelete.addColumn("YEAR", "string");
	this.dsDelete.addColumn("MODULE", "string");
	this.dsDelete.addColumn("CD_VENDOR", "string");

	this.dsExec = new Dataset();
	this.dsExec.addColumn("YEAR", "string");
	this.dsExec.addColumn("MODULE", "string");
	this.dsExec.addColumn("DT_GISUNG_FR", "string");
	this.dsExec.addColumn("DT_GISUNG_TO", "string");
	this.dsExec.addColumn("ID_CREATE", "string");
}
/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if(!this.fnValidate()) return;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
		
	this.dsSelect.setColumn(0, "YEAR", this.dsSearch.getColumn(0, "YEAR").substr(0,4));
	this.dsSelect.setColumn(0, "MODULE", "DC");
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	//this.gfnGridAdd(this.dxGrid);
};

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}


/*
*	저장 기능
*/
this.fnSave = function()
{
	if (!this.gfnGridValidate(this.dxGrid)) return;	
	
	this.dxGrid.updateToDataset();
	this.dsSave.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
			case "U":
				var nrow = this.dsSave.addRow();
				this.dsSave.setColumn(nrow, "CD_VENDOR", this.dsList.getColumn(i, "CD_VENDOR"));
				this.dsSave.setColumn(nrow, "YEAR", this.dsList.getColumn(i, "YEAR"));
				this.dsSave.setColumn(nrow, "MODULE", "DC");
				this.dsSave.setColumn(nrow, "AM_GISUNG_EVALUE", this.dsList.getColumn(i, "AM_GISUNG_EVALUE"));
				this.dsSave.setColumn(nrow, "ID_UPDATE", this.AuthClient.ID_USER);
				this.dsSave.setColumn(nrow, "CD_LICCOST", this.dsList.getColumn(i, "CD_LICCOST"));
				break;	
			case "D":
				var nrow = this.dsDelete.addRow();				
				this.dsDelete.setColumn(nrow, "YEAR", this.dsList.getColumn(i, "YEAR"));
				this.dsDelete.setColumn(nrow, "MODULE", "DC");
				this.dsDelete.setColumn(nrow, "CD_VENDOR", this.dsList.getColumn(i, "CD_VENDOR"));
				break;				
		}
	}
	
	if (this.dsSave.rowcount == 0 && this.dsDelete.rowcount == 0) return;
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave delete=dsDelete";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}
 
/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnValidate = function() {	
	var validate = true;
	
	if (this.gfnIsNull(this.dsSearch.getColumn(0,"YEAR"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.ctclYEAR.form.TextBox.setFocus();
		}
		this.gfnAlert("평가년도를 입력하세요.", "fnVaidateCallback");
	}
	
	return validate;
};

/*
 * Validate
*/
this.fnSaveValidate = function() {
	var validate = true;
	
	if (this.gfnIsNull(this.dsSearch.getColumn(0,"DT_GISUNG_FR"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.ctclDT_GISUNG_FR.form.TextBox.setFocus();
		}
		this.gfnAlert("기성기간 시작년월을 입력하세요.", "fnVaidateCallback");
	}else if (this.gfnIsNull(this.dsSearch.getColumn(0,"DT_GISUNG_TO"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.ctclDT_GISUNG_TO.form.TextBox.setFocus();
		}
		this.gfnAlert("기성기간 종료년월을 입력하세요.", "fnVaidateCallback");
	}
	
	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg, args)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	else if(svcID == "exec") {
		if (errorCode == 0) {
			this.fnVaidateCallback = function() {
				this.FormBtns.Select.click();
			}
			this.gfnAlert("자료생성 정상 처리되었습니다.", "fnVaidateCallback");			
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}


/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {

};

this.fnAfterCDTextChanged = function(id){
};


/************************************************************************
 * 그리드 이벤트
 ************************************************************************/

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화

this.fnSearchInit = function(obj,e) {
 	if(e == null || (e.pretext != e.posttext)) {
 		// 폼상태 초기화
 		this.gfnSetFormStatus(this);	
 		this.gfnGridClear(this.dxGrid);
 	}
};
 */
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};

// 
 this.fnCreate = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
   if(!this.fnSaveValidate()) return;
     //if (this.dsList.rowcount > 0) {
   
            this.gfnConfirm("자료생성 처리하시겠습니까?", "fnCreate_Confirm");
    //}
}

this.fnCreate_Confirm = function(strId, val) {
	if(val == true) {	
		this.dsExec.clearData();
	
		this.dsExec.addRow();
		
		this.dsExec.setColumn(0, "YEAR", this.dsSearch.getColumn(0, "YEAR"));
		this.dsExec.setColumn(0, "MODULE", "DC");
		this.dsExec.setColumn(0, "DT_GISUNG_FR", this.dsSearch.getColumn(0, "DT_GISUNG_FR"));
		this.dsExec.setColumn(0, "DT_GISUNG_TO", this.dsSearch.getColumn(0, "DT_GISUNG_TO"));
		this.dsExec.setColumn(0, "ID_CREATE", this.AuthClient.ID_USER);
		
		if (this.dsExec.rowcount == 0) return;
		
		var strSvcId    = "exec";
		var strSvcType  = "save";
		var inProc		= "_dsProc";
		var inData      = "exec=dsExec";
		var outData     = "";
		var strArg      = "";
		var callBackFnc = "fnCallback";
		
		this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
							strSvcType , 	// transaction을 요청할 구분
							inProc,			// Procedure 정보 Dataset 이름
							inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
							outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
							strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
							callBackFnc); // 통신방법 정의 [생략가능]
	}
}

/*
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
   if(e.columnid == "YEAR" && e.oldvalue != e.newvalue) {
      this.gfnSetFormStatus(this);   // 폼상태 초기화
      this.gfnGridClear(this.dxGrid);   
   }
};
*/
]]></Script>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ctclYEAR.form.TextBox" propid="value" datasetid="dsSearch" columnid="YEAR"/>
      <BindItem id="item1" compid="divSearch.form.ctclDT_GISUNG_FR.form.TextBox" propid="value" datasetid="dsSearch" columnid="DT_GISUNG_FR"/>
      <BindItem id="item2" compid="divSearch.form.ctclDT_GISUNG_TO.form.TextBox" propid="value" datasetid="dsSearch" columnid="DT_GISUNG_TO"/>
    </Bind>
  </Form>
</FDL>
