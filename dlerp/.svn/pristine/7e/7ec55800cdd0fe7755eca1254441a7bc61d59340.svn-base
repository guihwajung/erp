<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="700" height="400" titletext="New Form" onload="form_onload">
    <Layouts>
      <Layout>
        <Static id="staTITLE" taborder="2" text="전결규정 질문지" left="0" top="0" width="100%" height="22" cssclass="sta_TITLE_Bg" textAlign="center" onclick="divData_staTITLE_onclick"/>
        <Div id="divSearch" taborder="0" left="0.0" top="staTITLE:10.0" height="78.0" right="0" cssclass="" text="">
          <Layouts>
            <Layout>
              <Static id="staCD_SITE" taborder="1" text="현장코드" left="0.0" top="10.0" width="92.0" height="24.0" textAlign="left" onclick="divData_staDS_SITE_onclick" cssclass="sta_WF_SchLabelE"/>
              <Static id="staBgCD_SITE" taborder="2" left="staCD_SITE:0.0" top="10.0" right="50%" height="24.0" cssclass="sta_WF_tablebg"/>
              <Static id="staNO_RISK" taborder="3" text="관리번호" left="staBgCD_SITE:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_tablelabel" textAlign="left" onclick="divData_staDS_SITE_onclick"/>
              <Static id="staBgNO_RISK" taborder="4" left="staNO_RISK:0.0" top="10.0" right="0" height="24.0" cssclass="sta_WF_tablebg"/>
              <Edit id="ctxtCD_SITE" taborder="5" left="staCD_SITE:0.0" top="10.0" width="100" height="24.0" value="" readonly="true"/>
              <Edit id="ctxtDS_SITE" taborder="6" left="ctxtCD_SITE:0.0" top="10.0" right="staNO_RISK:5" height="24.0" value="" readonly="true"/>
              <Edit id="ctxtNO_RISK" taborder="7" left="staNO_RISK:0.0" top="10.0" width="100" height="24.0" value="" readonly="true"/>
              <Edit id="ctxtNM_RISK" taborder="8" left="ctxtNO_RISK:0.0" top="10.0" right="5" height="24.0" value="" readonly="true"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="1" left="0" top="divSearch:5" bottom="30" right="0" cssclass="div_DATA_Bg" text="">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
        <Button id="btnOk" taborder="3" text="저장" left="40%" top="divData:5" width="60" height="20" onclick="btnOk_onclick"/>
        <Button id="btnCancel" taborder="4" text="닫기" left="50%" top="divData:5" width="60" height="20" onclick="divData_btnCancel_onclick"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

// 부문, 품목 코드 최초 세팅 관련되어 만든 해당화면 전역변수.
this._FIRST = true;

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();

	if(!this.gfnIsNull(this.getOwnerFrame().CD_SITE) && !this.gfnIsNull(this.getOwnerFrame().NO_RISK))
	{
		this.dsSearch.setColumn(0, "CD_SITE", this.getOwnerFrame().CD_SITE);
		this.dsSearch.setColumn(0, "DS_SITE", this.getOwnerFrame().DS_SITE);
		this.dsSearch.setColumn(0, "NO_RISK", this.getOwnerFrame().NO_RISK);
		this.dsSearch.setColumn(0, "NM_RISK", this.getOwnerFrame().NM_RISK);
		
		this.fnSelect();
	}
	
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	//this.FormBtns.Select.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {

};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {	
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.gfnGridInit(this.dxGrid, this.dsList, "DW", "DWA_RISKADCNRVW");
	this.dxGrid.EnterCell = "fnGrid_EnterCell";
	//this.dxGrid.addEventHandler("onselectchanged", this.fnGrid_RowCellChanged, this);
	this.dxGrid.set_autosizingtype("row");
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {	
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("TY_WRK", "string");
	this.dsSelect.addColumn("CD_SITE", "string");
	this.dsSelect.addColumn("NO_RISK", "string");
	
	this.dsSave = new Dataset();
	this.dsSave.addColumn("TY_WRK", "string");
	this.dsSave.addColumn("ID_USER", "string");
	this.dsSave.addColumn("CD_SITE", "string");
	this.dsSave.addColumn("NO_RISK", "string");
	this.dsSave.addColumn("CD_ADCN", "string");
	this.dsSave.addColumn("CD_ANS", "string");
	this.dsSave.addColumn("DS_RMKS", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "TY_WRK", "Q");
	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsSelect.setColumn(0, "NO_RISK", this.dsSearch.getColumn(0, "NO_RISK"));

	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
*	저장 기능
*/
this.fnSave = function()
{
	if (!this.gfnGridValidate(this.dxGrid)) return;	
	
	this.dxGrid.updateToDataset();
	
	this.dsSave.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
			case "U":
			case "D":
				var nrow = this.dsSave.addRow();
				this.dsSave.setColumn(nrow, "TY_WRK", flag);
				this.dsSave.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
				this.dsSave.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
				this.dsSave.setColumn(nrow, "NO_RISK", this.dsSearch.getColumn(0, "NO_RISK"));
				this.dsSave.setColumn(nrow, "CD_ADCN", this.dsList.getColumn(i, "CD_ADCN"));
				this.dsSave.setColumn(nrow, "CD_ANS", this.dsList.getColumn(i, "CD_ANS"));
				this.dsSave.setColumn(nrow, "DS_RMKS", this.dsList.getColumn(i, "DS_RMKS"));
				break;						
		}
	}
	
	if (this.dsSave.rowcount == 0) return;
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {	
	var validate = true;
	
	if (this.gfnIsNull(this.dsSearch.getColumn(0,"CD_SITE"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.divSearch.form.ctxtCD_SITE.setFocus();
		}
		this.gfnAlert("현장코드는 반드시 입력 하셔야 합니다.", "fnVaidateCallback");
	}
	return validate;
	
};
/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		if(errorCode == 0)
		{
			this.gfnGridAfterSelect(this.dxGrid);	
		}else
		{
			this.gfnAlert(errorMsg);
		}
	}
	else if (svcID == "save") {
		if(errorCode == 0)
		{
			//this.fnCallback_callback = function()
			//{
				this.fnSelect();
			//}
		
			//this.gfnAlert("정상적으로 저장되었습니다.", "fnCallback_callback");
		}else
		{
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGrid_EnterCell = function(obj:nexacro.Grid, row, cell) {
	var colnm = this.gfnGridGetBindColumnNameByIndex(obj, cell);
	
	//수정가능 여부가 Y일때만 수정 가능.
	if(this.dsList.getColumn(row, "YN_EDIT") != "Y") 
	{	
		return false;
	}
	
	if (colnm == "DS_ANS") {
		var info = {};
		info.DS_FIELD = colnm;
		info.CD_CODEFIND = this.dsList.getColumn(row, "ID_CODEFIND");
		info.NM_CODEFIND = this.dsList.getColumn(row, "ID_CODEFIND");
		info.DS_RESULTALIAS = "DS_CODE";
		
		var info2 = {};
		info2.DS_FIELD = "CD_ANS";
		info2.CD_CODEFIND = this.dsList.getColumn(row, "ID_CODEFIND");
		info2.NM_CODEFIND = this.dsList.getColumn(row, "ID_CODEFIND");
		info2.DS_RESULTALIAS = "CD_CODE";
		
		if(this.gfnIsNull(info.CD_CODEFIND) || this.gfnIsNull(info.NM_CODEFIND) || this.gfnIsNull(info.DS_RESULTALIAS)) {
			var ci = this.gfnIndexInArray(obj.usCodefind, colnm);
			while(ci != -1) {
				delete obj.usCodefind[ci];
				ci = this.gfnIndexInArray(obj.usCodefind, colnm);
			}
			delete obj.usCodefindInfo[colnm];
		}
		else {
			if(!this.gfnIsExistInArray(obj.usCodefind, colnm)) {
				obj.usCodefind.push(colnm);
			}
			
			obj.usCodefindInfo[colnm] = info;
			obj.usCodefindInfo["CD_ANS"] = info2;
		}
	}
}
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
// 취소 버튼 클릭
this.divData_btnCancel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	// this.close()가 작동하지 않았고, 
	// 부모의 callback 함수로 데이터를 넘겨주기 위해 작성되었습니다.
	this.getParentContext().close(false);
};

this.btnOk_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.fnSave();
};

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue)
	{
		this.dsList.clearData();
	}
};
]]></Script>
    <Objects>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DWAPR_RISKADCNRVW_SELECT</Col>
          </Row>
          <Row>
            <Col id="SP">DWAPR_RISKADCNRVW_SAVE</Col>
            <Col id="TARGET">save</Col>
          </Row>
          <Row>
            <Col id="SP">DWAPR_RISKADCNRVW_EXECUTE</Col>
            <Col id="TARGET">execute</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsList"/>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="DS_SITE" type="STRING" size="256"/>
          <Column id="NO_RISK" type="STRING" size="256"/>
          <Column id="NM_RISK" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ctxtCD_SITE" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item1" compid="divSearch.form.ctxtDS_SITE" propid="value" datasetid="dsSearch" columnid="DS_SITE"/>
      <BindItem id="item2" compid="divSearch.form.ctxtNO_RISK" propid="value" datasetid="dsSearch" columnid="NO_RISK"/>
      <BindItem id="item3" compid="divSearch.form.ctxtNM_RISK" propid="value" datasetid="dsSearch" columnid="NM_RISK"/>
    </Bind>
  </Form>
</FDL>
