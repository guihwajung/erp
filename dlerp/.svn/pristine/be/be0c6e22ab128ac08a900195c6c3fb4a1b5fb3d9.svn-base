<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="법인카드" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="78.0" right="0" cssclass="div_SEARCH_Bg" text="">
          <Layouts>
            <Layout>
              <Static id="sta00" taborder="0" text="거래일자" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Calendar id="ctclDT_FR" taborder="2" left="sta00:0.0" top="10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" onchanged="fnSearchInit"/>
              <Static id="staCD_TILDE" taborder="7" text="~" left="ctclDT_FR:0.0" top="10.0" width="30.0" height="24.0" cssclass="sta_WF_AC"/>
              <Calendar id="ctclDT_TO" taborder="3" left="staCD_TILDE:0.0" top="10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" onchanged="fnSearchInit"/>
              <Div id="ccfCD_CORP" CodeFindName="DHX_CFCORP" CDTextWidth="70" taborder="1" left="ctclDT_TO:0.0" top="10.0" width="269" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="sta04" taborder="8" text="법인" left="ccfCD_CORP:0.0" top="10.0" width="92.0" height="24.0" textAlign="right" cssclass="sta_WF_SchLabelE"/>
              <Static id="sta01" taborder="9" text="카드번호" left="0.0" top="sta00:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_NOCARD" CDTextWidth="130" taborder="6" left="sta01:0.0" top="sta00:10.0" width="269" height="24.0" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DFX_CFCARD_CODEFIND"/>
              <Static id="sta03" taborder="10" text="확인구분" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Static id="sta05" taborder="11" text="개인법인" left="0.0" top="sta00:10.0" width="92.0" height="24.0" visible="false" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_DEPTOPER" CDTextWidth="70" taborder="5" left="sta05:0.0" top="sta00:10.0" width="269" height="24.0" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DHX_CFACNTUNIT"/>
              <Static id="staCD_DEPTOPER" taborder="12" text="귀속부서" left="ccfCD_DEPTOPER:0.0" top="sta00:10.0" width="92.0" height="24.0" textAlign="right" cssclass="sta_WF_SchLabel"/>
              <Combo id="cboTY_GUBUN" taborder="4" text="전체" left="0.0" top="10.0" width="80" height="24.0" innerdataset="dsTY_CONFIRM" datacolumn="VALUE" codecolumn="CODE" index="0" value=""/>
              <Combo id="cboTY_PSBUBIN" taborder="13" text="전체" left="0.0" top="sta00:10.0" width="80" height="24.0" innerdataset="dsTY_GUBUN" datacolumn="VALUE" codecolumn="CODE" index="0" value="" visible="false"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{	
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);	
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	//this.fnSetCombo();
	
	//화면 로드시 자동조회
	//this.FormBtns.Select.click();
	
	if (nexacro.toNumber(this.FormInfo.GR_SEARCH) >= 7) {
		this.ccfCD_DEPTOPER.form.CDTextBox.set_value(this.AuthClient.CD_DEPT);	
		this.ccfCD_DEPTOPER.form.DSTextBox.set_value(this.AuthClient.DS_DEPT); 
		//this.staCD_DEPTOPER.set_textDecoration("underline");
	}
	
	// 법인코드 포커스추가
	this.ccfCD_CORP.form.CDTextBox.setFocus();
	
	this.cboTY_GUBUN.set_index(0);
	
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	this.gfnSetEnable(this.FormBtns.Reset, true);
	
	
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnSearchSlip = this.gfnFormButtonAdd("SearchSlip", "fnSearchSlip"); 	//전표조회 버튼
	this.btnIssueSlip  = this.gfnFormButtonAdd("IssueSlip" , "fnIssueSlip"); 	//전표발행 버튼
	this.btnCancelSlip = this.gfnFormButtonAdd("CancelSlip", "fnCancelSlip"); 	//전표취소 버튼
}

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {

	this.ctclDT_FR = this.divSearch.form.ctclDT_FR; 				//거래일자(from)
	this.ctclDT_TO = this.divSearch.form.ctclDT_TO; 				//거래일자(To)
	this.cboTY_GUBUN = this.divSearch.form.cboTY_GUBUN;     		//확인구분
	//this.cboTY_PSBUBIN = this.divSearch.form.cboTY_PSBUBIN; 		//개인법인
	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP; 		    	//법인
	this.ccfCD_DEPTOPER = this.divSearch.form.ccfCD_DEPTOPER;		//귀속부서
	this.ccfCD_NOCARD = this.divSearch.form.ccfCD_NOCARD;			//카드번호
	
	this.staCD_DEPTOPER = this.divSearch.form.staCD_DEPTOPER;	

	this.dxGrid = this.divData.form.objGrid;
	//this.grSearch = this.FormInfo.GR_SEARCH;						// 권한?
	this.cdGroup = this.AuthClient.CD_GROUP;						// 그룹코드	
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {


// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DH", "DHL_BUBINCARDSAAPP_SITE");
	
	if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
		this.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP); 
		this.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);	
	}


// 날짜
	this.ctclDT_FR.set_value(this.gfnGetFirstDate(this.gfnGetDate()));
	this.ctclDT_TO.set_value(this.gfnGetDate());

 	this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.ccfCD_DEPTOPER.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_NOCARD.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	this.ccfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.ccfCD_DEPTOPER.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.ccfCD_NOCARD.AfterCDTextChanged = "fnAfterCDTextChanged";

	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
	this.dxGrid.AfterCDTextChanged = "fnGrid_AfterCDTextChanged";
	
	this.dxGrid.AfterAllCheck = "fnGrid_AfterAllCheck";
	
	//리스트 변경 이벤트
	this.dsList.addEventHandler("oncolumnchanged", this.dsList_Columnchanged, this);
	
	//검색조건 변경 이벤트
	this.dsSearch.addEventHandler("onvaluechanged", this.dsSearch_Valuechanged, this);
	
	this.dxGrid.setCellProperty("body", this.dxGrid.getBindCellIndex("body", "CHK"), "displaytype", "expr:CHK_FLAG =='Y' ? 'checkboxcontrol' : 'none'");
	this.dxGrid.setCellProperty("body", this.dxGrid.getBindCellIndex("body", "CHK"), "edittype", "expr:CHK_FLAG =='Y' ? 'checkbox' : 'none'");
	this.dxGrid.setCellProperty("body", this.dxGrid.getBindCellIndex("body", "CD_PROOF"), "edittype", "expr:YN_VAT =='Y' ? 'combo' : 'none'");
	this.dxGrid.setCellProperty("body", this.dxGrid.getBindCellIndex("body", "TY_VATBGJE"), "edittype", "expr:CD_PROOF =='19' ? 'combo' : 'none'");
}


 
 /************************************************************************
 * 파라미터
 ************************************************************************/
this.fnSetParameter = function() {

	// sp의 input 파라미터
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("TY_CONFIRM", "string");  	//상태(전체/미확인/사용확인)
	this.dsSelect.addColumn("DT_DATE_FR", "string");    //거래일자(시작)
	this.dsSelect.addColumn("DT_DATE_TO", "string");  	//거래일자(종료)
	this.dsSelect.addColumn("CD_DEPTOPER", "string");  	//귀속부서
	this.dsSelect.addColumn("CD_CORP", "string");  		//법인코드
	this.dsSelect.addColumn("TY_GUBUN", "string");		//개인형 법인/ 법인카드 구분 
	this.dsSelect.addColumn("NO_CARD", "string");		//카드번호
	this.dsSelect.addColumn("ID_USER", "string");		//사용자 ID
	
	//trace("dsSelect :: " + this.dsSelect.saveXML());
	
    // 수정
	this.dsUpdate = new Dataset();
	this.dsUpdate.addColumn("NO_SEQ", "int");			//순번
	this.dsUpdate.addColumn("NO_CARD", "string");		//카드번호
	this.dsUpdate.addColumn("CD_ACCOUNT", "string");	//계정코드
	this.dsUpdate.addColumn("CD_SEMOK", "string");		//세목코드
	this.dsUpdate.addColumn("DS_REM", "string");		//적요
	this.dsUpdate.addColumn("CD_DEPT", "string");		//부서코드
	this.dsUpdate.addColumn("DS_BIGO", "string");		//비고
	this.dsUpdate.addColumn("CD_GONGJONG", "string");	//공종코드
	this.dsUpdate.addColumn("ID_UPDATE", "string");		//사용자 아이디
	this.dsUpdate.addColumn("AM_VATSUPPLY", "int");
	this.dsUpdate.addColumn("AM_SURTAX", "int");
	this.dsUpdate.addColumn("CD_PROOF", "string");		//증빙구분
	this.dsUpdate.addColumn("TY_VATBGJE", "string");	//불공제사유	
	this.dsUpdate.addColumn("YN_VAT", "string");		//부가세여부
	this.dsUpdate.addColumn("ID_USED", "string");		//카드사용자

	
	this.dsIssueSlip = new Dataset();
	this.dsIssueSlip.addColumn("CD_CORP", "string");		//법인코드
	this.dsIssueSlip.addColumn("NO_SEQ", "string");			//순번(배열)
	this.dsIssueSlip.addColumn("ID_TRANS", "string");		//사용자 아이디
	this.dsIssueSlip.addColumn("CD_DEPT_BH", "string");		//발행부서
	//trace("dsUdpate :: " + this.dsUpdate.saveXML());
	
	this.dsCancelSlip = new Dataset();
	this.dsCancelSlip.addColumn("CD_SLIP", "string");		//전표번호

}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
/*
 *	조회 버튼
 */
this.fnSelect = function() {
	
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();  
	
	this.dsSelect.setColumn(0, "TY_CONFIRM", this.cboTY_GUBUN.value);		// 구분 (전체, 미확인, 사용확인)
	this.dsSelect.setColumn(0, "DT_DATE_FR", this.ctclDT_FR.value);			// 거래일자 (from)
	this.dsSelect.setColumn(0, "DT_DATE_TO", this.ctclDT_TO.value);			// 거래일자 (to)
	this.dsSelect.setColumn(0, "CD_DEPTOPER", this.ccfCD_DEPTOPER.form.CDTextBox.value);	// 귀속부서
	this.dsSelect.setColumn(0, "NO_CARD", nexacro.replaceAll(this.gfnNvl(this.ccfCD_NOCARD.form.CDTextBox.value,""),"-",""));		// 카드번호	
 	this.dsSelect.setColumn(0, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);		// 법인
 	//this.dsSelect.setColumn(0, "TY_GUBUN", this.cboTY_PSBUBIN.value);					// 개인법인			
 	this.dsSelect.setColumn(0, "ID_USER", this.AuthClient.ID_USER);					// ID_USER	
	//trace("dsSelect :: " + this.dsSelect.saveXML());
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
		
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 	    // 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

 
/*
 *	저장 버튼
 */
this.fnSave = function() {
	if (!this.gfnGridValidate(this.dxGrid)) return;
	
	if(this.dsList.findRowExpr("CD_PROOF == '19' && dataset.parent.gfnIsNull(TY_VATBGJE)") > -1){
		this.gfnAlert("증빙구분이 불공제일 경우 불공제사유는 필수입니다.");
		return;
	}

	this.dxGrid.updateToDataset();
	
	this.dsUpdate.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			
			case "U":
				var nrow = this.dsUpdate.addRow();
				this.dsUpdate.setColumn(nrow, "NO_SEQ", this.dsList.getColumn(i, "NO_SEQ"));
				this.dsUpdate.setColumn(nrow, "NO_CARD", nexacro.replaceAll(this.gfnNvl(this.dsList.getColumn(i, "NO_CARD"),""),"-",""));
				this.dsUpdate.setColumn(nrow, "CD_ACCOUNT", this.dsList.getColumn(i, "CD_ACCOUNT"));
				this.dsUpdate.setColumn(nrow, "CD_SEMOK", this.dsList.getColumn(i, "CD_SEMOK"));
				this.dsUpdate.setColumn(nrow, "DS_REM", this.dsList.getColumn(i, "DS_REM"));
				this.dsUpdate.setColumn(nrow, "CD_DEPT", this.dsList.getColumn(i, "CD_DEPT"));
				this.dsUpdate.setColumn(nrow, "DS_BIGO", this.dsList.getColumn(i, "DS_BIGO"));
				this.dsUpdate.setColumn(nrow, "CD_GONGJONG", this.dsList.getColumn(i, "CD_GONGJONG"));
				this.dsUpdate.setColumn(nrow, "ID_UPDATE", this.AuthClient.ID_USER);
				this.dsUpdate.setColumn(nrow, "AM_VATSUPPLY", this.dsList.getColumn(i, "AM_VATSUPPLY"));
				this.dsUpdate.setColumn(nrow, "AM_SURTAX", this.dsList.getColumn(i, "AM_SURTAX"));
				this.dsUpdate.setColumn(nrow, "CD_PROOF"  , this.dsList.getColumn(i, "CD_PROOF"));
				this.dsUpdate.setColumn(nrow, "TY_VATBGJE", this.dsList.getColumn(i, "TY_VATBGJE"));
				this.dsUpdate.setColumn(nrow, "YN_VAT", this.dsList.getColumn(i, "YN_VAT"));
				this.dsUpdate.setColumn(nrow, "ID_USED", this.dsList.getColumn(i, "ID_USED"));
				
				break;
				
		}
	}
	
	if (this.dsUpdate.rowcount == 0) return;
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "update=dsUpdate";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {

}

/*
 *	초기화 버튼
 */
this.fnReset = function() {

};

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
		this.gfnAlert("법인코드를 입력 하세요.");
		this.ccfCD_CORP.form.setFocus();
		return false;
	}
	
	if (this.gfnIsNull(this.ctclDT_FR.value)) {
		this.gfnAlert("거래일자(FROM)을 입력 하세요.");
		this.ctclDT_FR.setFocus();
		return false;
	}

	if (this.gfnIsNull(this.ctclDT_TO.value)) {
		this.gfnAlert("거래일자(TO)을 입력 하세요.");
		this.ctclDT_TO.setFocus();
		return false;
	}

	if ( !this.gfnIsNull(this.ctclDT_FR.value) && !this.gfnIsNull(this.ctclDT_TO.value) ) {
		if ( this.ctclDT_FR.value > this.ctclDT_TO.value ) {
			this.gfnAlert("거래일자가 잘못 입력 되었습니다.");
			this.ctclDT_FR.setFocus();
			return false;
		}
	}
	
// 	if (nexacro.toNumber(this.FormInfo.GR_SEARCH) >= 7) {
// 		if (this.gfnIsNull(this.ccfCD_DEPTOPER.form.CDTextBox.value)) {
// 			this.gfnAlert("귀속부서를 입력 하세요.");
// 			this.ccfCD_DEPTOPER.form.CDTextBox.setFocus();
// 			return false;
// 		}
// 	}

	return true;
};

// this.fnAfterCDTextChanged = function(id, codeFindData) {
// 	if(id == "ccfCD_CORP") {
// 		this.ccfCD_DEPTOPER.form.fnCodeFindClear();
// 		this.ccfCD_NOCARD.form.fnCodeFindClear();
// 	}
// 	this.fnSearchInit();
// }



/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
	}else if(svcID == "save"){
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}else if(svcID == "issueSlip"){	
		if (errorCode == 0) {
			this.gfnAlert("전표가 발행 되었습니다.");
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}else if(svcID == "cancelSlip"){	
		if (errorCode == 0) {
			this.gfnAlert("전표가 취소 되었습니다.");
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnAfterCDTextChanged = function(id, codeFindData) {
	switch(id) {
		case "ccfCD_CORP":	//법인코드
			this.ccfCD_DEPTOPER.form.fnCodeFindClear();
			this.ccfCD_NOCARD.form.fnCodeFindClear();
		break;
		case "ccfCD_DEPTOPER":	//귀속부서
			//this.ccfCD_NOCARD.form.fnCodeFindClear();
		break;
	}
}

this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	var cdCorp = this.ccfCD_CORP.form.CDTextBox.value;

	if (id == "ccfCD_CORP") {
		dsUserParam.setColumn(nrow, "ID_SABUN", this.AuthClient.ID_USER);
	}
	if (id == "ccfCD_DEPTOPER") {
		if (!this.gfnIsNull(cdCorp)) {
			dsUserParam.setColumn(nrow, "CD_DEPT_UPPER"	, "");						//상위부서
			dsUserParam.setColumn(nrow, "YN_SLIPACCEPT"	, "Y");						//전표발행여부
			dsUserParam.setColumn(nrow, "CD_CORP"		, cdCorp);					//법인코드
			dsUserParam.setColumn(nrow, "YN_USE"		, "Y");						//사용여부
			dsUserParam.setColumn(nrow, "GR_DEPT_ACNT"	, "");						//현장/본사여부
// 			dsUserParam.setColumn(nrow, "ID_USER"	    , this.AuthClient.ID_USER);
// 			dsUserParam.setColumn(nrow, "GR_SEARCH"     , this.FormInfo.GR_SEARCH);
// 			dsUserParam.setColumn(nrow, "CD_DEPT"	    , this.AuthClient.CD_DEPT);
		}else{
			this.gfnAlert("법인코드는 필수입력 값입니다.");
			return false;
		}
	}	
	
	if (id == "ccfCD_NOCARD") {		
		if (!this.gfnIsNull(cdCorp) ) {
			dsUserParam.setColumn(nrow, "CD_CORP"  , cdCorp); 
			dsUserParam.setColumn(nrow, "CD_DEPT"  , this.ccfCD_DEPTOPER.form.CDTextBox.value); 
			dsUserParam.setColumn(nrow, "CD_SUABUN", ""); 
		}else{
			if(this.gfnIsNull(cdCorp)){
				this.gfnAlert("법인코드는 필수입력 값입니다.");
				return false;
			}
// 			if(this.gfnIsNull(this.ccfCD_DEPTOPER.form.CDTextBox.value)){
// 				this.gfnAlert("귀속부서는 필수입력 값입니다.");
// 				return false;
// 			}
		}
	}
	
	return true;	
};

this.fnGrid_BeforeUserDataSetParam = function(id, dsUserParam, nrow) {	
	// 그리드에서 코드파인드 id는 그리드셋팅의 코드파인드 식별ID
 	if (id == "DHX_CFACCOUNT") {	//계정
		dsUserParam.setColumn(nrow, "YN_SLIP", "Y");
 	}
 	if (id == "DHX_CFACNTUNIT") {	//귀속부서
		var cdCorp = this.dsList.getColumn(this.dsList.rowposition, "CD_CORP");
		dsUserParam.setColumn(nrow, "CD_DEPT_UPPER"	, "");						//상위부서
		dsUserParam.setColumn(nrow, "YN_SLIPACCEPT"	, "Y");						//전표발행여부
		dsUserParam.setColumn(nrow, "CD_CORP"		, cdCorp);					//법인코드
		dsUserParam.setColumn(nrow, "YN_USE"		, "Y");						//사용여부
		dsUserParam.setColumn(nrow, "GR_DEPT_ACNT"	, "");						//현장/본사여부
// 		dsUserParam.setColumn(nrow, "ID_USER"	    , this.AuthClient.ID_USER);
// 		dsUserParam.setColumn(nrow, "GR_SEARCH"     , this.FormInfo.GR_SEARCH);
// 		dsUserParam.setColumn(nrow, "CD_DEPT"	    , this.AuthClient.CD_DEPT);
 	}

	return true;
}

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
// this.fnSearchInit = function(obj,e) {
// 	if(e == null || (e.pretext != e.posttext)) {
// 		this.gfnSetFormStatus(this);
// 		this.gfnGridClear(this.dxGrid);
// 	}
// }

//검색조건 변경 이벤트
this.dsSearch_Valuechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{	
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};

//전표발행 처리
this.fnIssueSlip = function (obj:nexacro.Button,e:nexacro.ClickEventInfo)
{

	if(this.dsList.findRow("CHK", "1") == -1){
		this.gfnAlert("데이터를 선택하세요.");
		return;
	}
	
	var chkNoCard = false, chkDtApproval = false, chkDsRem = false;
	var chkCdProof = false, chkTyVatBgje = false;
	var chkSave = false;
	for(var i=0;i<this.dsList.rowcount;i++){
		if(this.dsList.getColumn(i, "CHK") == "1"){
			
			if(this.gfnGetFlag(this.dsList, i) == "U"){
				chkSave = true;
			}
			if(this.gfnIsNull(this.dsList.getColumn(i, "DS_REM"))){
				chkDsRem = true;
			}
			
			//증빙구분 체크
			if(this.gfnIsNull(this.dsList.getColumn(i, "CD_PROOF"))){	
				chkCdProof = true;
			}
			
			if(this.dsList.getColumn(i, "CD_PROOF") == "19"){	//불공제일 경우
				if(this.gfnIsNull(this.dsList.getColumn(i, "TY_VATBGJE"))){	//불공제사유 체크
					chkTyVatBgje = true;
				}
			}
			
			for(var c=0;c<this.dsList.rowcount;c++){
				if(this.dsList.getColumn(c, "CHK") == "1"){
					var nextNoCard = nexacro.replaceAll(this.gfnNvl(this.dsList.getColumn(c, "NO_CARD"),""),"-","");
					if(nexacro.replaceAll(this.gfnNvl(this.dsList.getColumn(i, "NO_CARD"),""),"-","") != nextNoCard){
						chkNoCard = true;
					}
					var nextDtApproval = this.dsList.getColumn(c, "DT_APPROVAL").substr(0,6);
					if(this.dsList.getColumn(i, "DT_APPROVAL").substr(0,6) != nextDtApproval){
						chkDtApproval = true;
					}
				}
			}
		}
	}
	
	if(chkSave){	//데이터 수정 체크
		this.gfnAlert("저장하지 않은 데이터가 존재합니다.저장 후 발행해 주세요.");
		return;
	}
	
	if(chkNoCard){	//카드번호 체크
		this.gfnAlert("카드번호가 같은 데이터만 선택 가능합니다.");
		return;
	}
	
	if(chkDtApproval){	//승인일자 체크
		this.gfnAlert("승인일자는 같은 월 데이터만 선택 가능합니다.");
		return;
	}
	
	if(chkDsRem){	//적요 체크
		this.gfnAlert("적요는 필수 입니다.데이터 저장 후 발행해 주세요.");
		return;
	}
	
	if(chkCdProof){	//증빙구분 체크
		this.gfnAlert("증빙구분은 필수 입니다.데이터 저장 후 발행해 주세요.");
		return;
	}
	
	if(chkTyVatBgje){	//불공제사유 체크
		this.gfnAlert("증빙구분이 불공제일 경우 불공제사유는 필수 입니다.\n데이터 저장 후 발행해 주세요.");
		return;
	}
	
	this.gfnConfirm("전표발행 하시겠습니까?", "fnIssueSlip_callback");
	
};

this.fnIssueSlip_callback = function(strId, val) 
{
	if(val == true) {
		this.dsIssueSlip.clearData();
		var nRow = this.dsIssueSlip.addRow();
				
		var arrSeqNo = "";
		for(var r = 0; r < this.dsList.rowcount; r++) {
			if(this.dsList.getColumn(r, "CHK") == 1){
				arrSeqNo += this.dsList.getColumn(r, "NO_SEQ")+",";
			}
		}	
		
		var cdCorp = this.ccfCD_CORP.form.CDTextBox.value;
		var cdDept = this.AuthClient.CD_DEPT;
		
		//처리할 데이터 담기
		this.dsIssueSlip.setColumn(nRow, "CD_CORP"	  , cdCorp);
		this.dsIssueSlip.setColumn(nRow, "NO_SEQ" 	  , arrSeqNo.substr(0,arrSeqNo.length-1));
		this.dsIssueSlip.setColumn(nRow, "ID_TRANS"   , this.AuthClient.ID_USER);
		this.dsIssueSlip.setColumn(nRow, "CD_DEPT_BH" , cdCorp + cdDept.substr(1, cdDept.length));	//법인코드 + 로그인부서(5자리)
		//this.dsIssueSlip.setColumn(nRow, "CD_DEPT_BH" , this.AuthClient.CD_DEPT);
		
		var strSvcId    = "issueSlip";
		var strSvcType  = "save";
		var inProc		= "_dsProc";
		var inData      = "issueSlip=dsIssueSlip";
		var outData     = "";
		var strArg      = "";
		var callBackFnc = "fnCallback";
		
		this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
							strSvcType , 	// transaction을 요청할 구분
							inProc,			// Procedure 정보 Dataset 이름
							inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
							outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
							strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
							callBackFnc); 	// 통신방법 정의 [생략가능]
	}
};

//전표취소 처리
this.fnCancelSlip = function (obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if (this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(this.dsList.rowposition, "NO_SLIP")))) {
		this.gfnAlert("전표번호는 필수입니다.");
		return;
	}
	
	this.gfnConfirm("전표를 취소하시겠습니까?", "fnCancelSlip_callback");
	
};

this.fnCancelSlip_callback = function(strId, val) 
{
	if(val == true) {
		this.dsCancelSlip.clearData();
		var nRow = this.dsCancelSlip.addRow();
		
		var cdSlip = this.dsList.getColumn(this.dsList.rowposition, "NO_SLIP");
		
		//처리할 데이터 담기
		this.dsCancelSlip.setColumn(nRow, "CD_SLIP"  , cdSlip);
		
		var strSvcId    = "cancelSlip";
		var strSvcType  = "save";
		var inProc		= "_dsProc";
		var inData      = "cancelSlip=dsCancelSlip";
		var outData     = "";
		var strArg      = "";
		var callBackFnc = "fnCallback";
		
		this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
							strSvcType , 	// transaction을 요청할 구분
							inProc,			// Procedure 정보 Dataset 이름
							inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
							outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
							strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
							callBackFnc); 	// 통신방법 정의 [생략가능]
	}
};

//전표 조회 
this.fnSearchSlip = function (obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if (this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(this.dsList.rowposition, "NO_SLIP")))) {
		this.gfnAlert("전표번호는 필수입니다.");
		return;
	}
	
	var param = {};
	param.IUD_FLAG = "S";
	param.CD_TRADE = this.gfnTrim(this.dsList.getColumn(this.dsList.rowposition, "NO_SLIP"));
	this.gfnFormOpen("DHA", "DHA_ISSUESLIP", "fnPopupCallBack", param, this.getOffsetWidth(), this.getOffsetHeight());
	
};

//그리드 데이턱셋 변경 이벤트
this.dsList_Columnchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.columnid == "YN_VAT"){	//부가세여부
		obj.setColumn(e.row, "CD_PROOF", "");	//증빙구분 초기화
		obj.setColumn(e.row, "TY_VATBGJE", "");	//불공제증빙 초기화
	}
	if(e.columnid == "CD_PROOF"){	//증빙구분
		obj.setColumn(e.row, "TY_VATBGJE", "");	//불공제증빙 초기화
	}
};


this.fnGrid_AfterAllCheck = function(obj:nexacro.Grid, cell, check) {
	var objDs = obj.getBindDataset();
	var colnm = this.gfnGridGetBindColumnNameByIndex(obj, cell);
	
	if(colnm == "CHK") {
		objDs.set_enableevent(false);

		for(var i =0;i<objDs.getRowCountNF();i++){
			if(objDs.getColumnNF(i, this.ucFlag) != "#"){
				if(objDs.getColumnNF(i, "CHK_FLAG") == "Y"){
					objDs.setColumn(i, colnm, check);
				}else{
					objDs.setColumn(i, colnm, "0");
				}
			}
		}
		objDs.set_enableevent(true);

	}
}]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DHLPR_CARDSAAPP_BY_SITE_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">update</Col>
            <Col id="SP">DHLPR_CARDSAAPP_BY_SITE_UPDATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">issueSlip</Col>
            <Col id="SP">DHLPR_CARDSAAPP_BY_SITE_AUTOSLIP</Col>
          </Row>
          <Row>
            <Col id="TARGET">cancelSlip</Col>
            <Col id="SP">DHLPR_CARDSAAPP_BY_SITE_CANCELSLIP</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch">
        <ColumnInfo>
          <Column id="TY_CONFIRM" type="STRING" size="256"/>
          <Column id="DT_DATE_FR" type="STRING" size="256"/>
          <Column id="DT_DATE_TO" type="STRING" size="256"/>
          <Column id="CD_DEPTOPER" type="STRING" size="256"/>
          <Column id="NO_CARD" type="STRING" size="256"/>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="TY_GUBUN" type="STRING" size="256"/>
          <Column id="ID_USER" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_CONFIRM">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE"/>
            <Col id="VALUE">전체</Col>
          </Row>
          <Row>
            <Col id="CODE">N</Col>
            <Col id="VALUE">미확인</Col>
          </Row>
          <Row>
            <Col id="CODE">Y</Col>
            <Col id="VALUE">사용확인</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_GUBUN">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE"/>
            <Col id="VALUE">전체</Col>
          </Row>
          <Row>
            <Col id="CODE">개인</Col>
            <Col id="VALUE">개인</Col>
          </Row>
          <Row>
            <Col id="CODE">법인</Col>
            <Col id="VALUE">법인</Col>
          </Row>
          <Row>
            <Col id="CODE">임원</Col>
            <Col id="VALUE">임원</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item1" compid="divSearch.form.ctclDT_FR" propid="value" datasetid="dsSearch" columnid="DT_DATE_FR"/>
      <BindItem id="item2" compid="divSearch.form.ctclDT_TO" propid="value" datasetid="dsSearch" columnid="DT_DATE_TO"/>
      <BindItem id="item3" compid="divSearch.form.ccfCD_NOCARD.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="NO_CARD"/>
      <BindItem id="item4" compid="divSearch.form.ccfCD_DEPTOPER.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_DEPTOPER"/>
      <BindItem id="item5" compid="divSearch.form.cboTY_GUBUN" propid="value" datasetid="dsSearch" columnid="TY_CONFIRM"/>
    </Bind>
  </Form>
</FDL>
