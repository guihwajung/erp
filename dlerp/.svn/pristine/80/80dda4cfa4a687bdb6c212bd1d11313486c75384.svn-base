<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="DAC_MGTYEARLYVACA" width="1400" height="790" titletext="근태관리(개인)" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0" top="0" height="46.0" right="0" cssclass="div_SEARCH_Bg" text="">
          <Layouts>
            <Layout>
              <Static id="staYR_BASE" text="년도" left="0.0" top="10.0" width="92.0" height="24.0" taborder="0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYR_BASE" taborder="1" left="staYR_BASE:0.0" top="10.0" width="80" height="24.0" url="cmm::cmmCalYY.xfdl" enableevent="true" text=""/>
              <Static id="staDT_REQUEST" taborder="2" text="조회기간" left="ctclYR_BASE:0.0" top="10.0" width="92.0" height="24.0" textDecoration="none" cssclass="sta_WF_SchLabel"/>
              <Calendar id="ctclDT_START" taborder="3" left="staDT_REQUEST:0.0" top="10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true"/>
              <Static id="staDT_ORD_TO" taborder="4" text="~" left="ctclDT_START:0.0" top="10.0" width="30.0" height="24.0" cssclass="sta_WF_AC"/>
              <Calendar id="ctclDT_END" taborder="5" left="staDT_ORD_TO:0.0" top="10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true"/>
              <Static id="staCD_CORP" taborder="6" text="법인" left="ctclDT_END:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_CORP" CDTextWidth="30" taborder="7" left="staCD_CORP:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staID_SABUN" taborder="8" text="성명" left="ccfCD_CORP:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfID_SABUN" CDTextWidth="70" taborder="9" left="staID_SABUN:0.0" top="10.0" width="180" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staCD_RECORD" taborder="10" text="근태구분" left="ccfID_SABUN:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_RECORD" CDTextWidth="40" taborder="11" left="staCD_RECORD:0.0" top="10.0" width="200" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
            </Layout>
          </Layouts>
        </Div>
        <Static id="sta100" taborder="1" text="기본정보" left="3" top="divSearch:10" height="20" cssclass="sta_TITLE_Bg" onclick="sta100_onclick" width="66%"/>
        <Div id="divData" taborder="0" left="0" top="sta100:0" width="66%" cssclass="div_DATA_Bg" text="" visible="true" height="160">
          <Layouts>
            <Layout>
              <ImageViewer id="imgPIC" taborder="39" left="3" top="9" stretch="fixaspectratio" width="127" height="146"/>
              <Static id="staID_SABUN" taborder="0" text="사번" left="143" top="9" width="80" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="sta04" taborder="1" left="staID_SABUN:-1" width="180" height="30" cssclass="sta_WF_tablebg" text="" top="9"/>
              <Static id="staDS_EMPTYPE" taborder="2" text="직원구분" left="143" top="staID_SABUN:-1" width="80" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="sta05" taborder="3" left="staDS_EMPTYPE:-1" width="180" height="30" cssclass="sta_WF_tablebg" text="" top="sta04:-1"/>
              <Static id="staDS_DEPT" taborder="4" text="소속" left="143" top="staDS_EMPTYPE:-1" width="80" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="sta07" taborder="5" left="staDS_DEPT:-1" width="438" height="30" cssclass="sta_WF_tablebg" text="" top="sta05:-1"/>
              <Static id="staDS_POSITION" taborder="6" text="직위" left="143" top="staDS_DEPT:-1" width="80" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="sta09" taborder="7" left="222" width="180" height="30" cssclass="sta_WF_tablebg" text="" top="sta07:-1"/>
              <Static id="staDT_JOIN" taborder="8" text="입사일" left="143" top="staDS_POSITION:-1" width="80" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="sta11" taborder="9" left="222" width="180" height="30" cssclass="sta_WF_tablebg" text="" top="sta09:-1"/>
              <Edit id="edtID_SABUN" taborder="10" left="staID_SABUN:5" top="14" width="170" height="20" readonly="true"/>
              <Edit id="edtDS_EMPTYPE" taborder="11" left="staDS_EMPTYPE:5" top="sta04:5" width="170" height="20" readonly="true"/>
              <Edit id="edtDS_DEPT" taborder="12" left="staDS_DEPT:5" top="sta05:5" width="428" height="20" readonly="true"/>
              <Edit id="edtDS_POSITION" taborder="13" left="staDS_POSITION:5" top="sta07:5" width="170" height="20" readonly="true"/>
              <Edit id="edtDT_JOIN" taborder="14" left="staDT_JOIN:5" top="sta09:5" width="170" height="20" readonly="true"/>
              <Static id="staDS_HNAME" taborder="15" text="성명" left="401" top="9" width="80" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="sta00" taborder="16" left="480" width="180" height="30" cssclass="sta_WF_tablebg" text="" top="9"/>
              <Static id="staDS_JOBTYPE" taborder="17" text="직종" left="401" top="38" width="80" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="sta01" taborder="18" left="480" width="180" height="30" cssclass="sta_WF_tablebg" text="" top="38"/>
              <Static id="staDS_OCCUPATION" taborder="19" text="직책" left="659" top="67" width="80" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="sta02" taborder="20" left="738" width="180" height="30" cssclass="sta_WF_tablebg" text="" top="67"/>
              <Static id="staCD_PAYSTEP" taborder="21" text="급호" left="401" top="96" width="80" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="sta03" taborder="22" left="480" width="180" height="30" cssclass="sta_WF_tablebg" text="" top="96"/>
              <Edit id="edtDS_HNAME" taborder="23" left="486" top="14" width="170" height="20" readonly="true"/>
              <Edit id="edtDS_JOBTYPE" taborder="24" left="486" top="sta00:5" width="170" height="20" readonly="true"/>
              <Edit id="edtDS_OCCUPATION" taborder="25" left="744" top="sta01:5" width="170" height="20" readonly="true"/>
              <Edit id="edtCD_PAYSTEP" taborder="26" left="486" top="sta02:5" width="170" height="20" readonly="true"/>
              <Static id="staTY_RETIRE" taborder="27" text="근무구분" left="659" top="9" width="80" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="sta10" taborder="28" left="738" width="180" height="30" cssclass="sta_WF_tablebg" text="" top="9"/>
              <Static id="staDS_CORP" taborder="29" text="소속법인" left="659" top="38" width="80" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="sta13" taborder="30" left="738" width="180" height="30" cssclass="sta_WF_tablebg" text="" top="38"/>
              <Static id="staCD_DUTY" taborder="31" text="직무" left="659" top="96" width="80" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="sta14" taborder="32" left="738" width="180" height="30" cssclass="sta_WF_tablebg" text="" top="96"/>
              <Static id="staDT_RETIRE" taborder="33" text="퇴사일" left="401" top="125" width="80" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="sta16" taborder="34" left="480" width="180" height="30" cssclass="sta_WF_tablebg" text="" top="125"/>
              <Edit id="edtTY_RETIRE" taborder="35" left="staTY_RETIRE:5" top="14" width="170" height="20" readonly="true"/>
              <Edit id="edtDS_CORP" taborder="36" left="staDS_CORP:5" top="staDS_CORP:-24" width="170" height="20" readonly="true"/>
              <Edit id="edtCD_DUTY" taborder="37" left="staCD_DUTY:5" top="staCD_DUTY:-24" width="170" height="20" readonly="true"/>
              <Edit id="edtDT_RETIRE" taborder="38" left="staDT_RETIRE:5" top="131" width="170" height="20" readonly="true"/>
              <Edit id="edtID_PERSON" taborder="40" left="670" top="132" width="170" height="20" readonly="false" visible="false" onchanged="divData_edtID_PERSON_onchanged"/>
            </Layout>
          </Layouts>
        </Div>
        <Static id="sta300" taborder="7" text="연차종합정보" left="sta100:5" top="divSearch:10" height="20" cssclass="sta_TITLE_Bg" onclick="sta200_onclick" width="200"/>
        <Div id="divData4" taborder="0" left="divData:5" top="sta100:0" width="162" cssclass="div_DATA_Bg" text="" height="110">
          <Layouts>
            <Layout>
              <Static id="staQN_TOTAL" taborder="0" text="총연차" left="0" top="9" width="80" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="sta06" taborder="1" left="78" width="72" height="30" cssclass="sta_WF_tablebg" text="" top="9"/>
              <Static id="staQN_YEARLYVACATION" taborder="2" text="사용연차" left="0" top="38" width="80" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="sta08" taborder="3" left="78" width="72" height="30" cssclass="sta_WF_tablebg" text="" top="38"/>
              <Edit id="edtQN_YEARLYVACATION" taborder="4" left="84" top="44" width="60" height="20" readonly="true"/>
              <Static id="staQN_REMAIN" taborder="5" text="잔여연차" left="0" top="67" width="80" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="sta12" taborder="6" left="78" width="72" height="30" cssclass="sta_WF_tablebg" text="" top="67"/>
              <Edit id="edtQN_TOTAL" taborder="7" left="84" top="14" width="60" height="20" readonly="true"/>
              <Edit id="edtQN_REMAIN" taborder="8" left="84" top="73" width="60" height="20" readonly="true"/>
            </Layout>
          </Layouts>
        </Div>
        <Static id="sta200" taborder="2" text="휴가사용내역" left="3" top="divData:10" height="20" cssclass="sta_TITLE_Bg" onclick="sta200_onclick" width="1200"/>
        <Div id="divData3" taborder="3" left="0" top="divData:20" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="2" left="0" top="20" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();
//this.filepath = "/DA/BASEINFO/";
this.filepath = "";
this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	//this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();

	
	var nowYear = this.gfnGetDate().substring(0,4);
	this.divSearch.form.ctclYR_BASE.form.TextBox.set_value(nowYear);

	//법인 셋팅
	if(this.FormInfo.GR_SEARCH == 9){
		this.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);
		this.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP);
		this.ccfID_SABUN.form.CDTextBox.set_value(this.AuthClient.ID_USER);
		this.ccfID_SABUN.form.DSTextBox.set_value(this.AuthClient.DS_HNAME);
		this.edtID_PERSON.set_value(this.AuthClient.ID_PERSON);	
		this.ccfCD_CORP.set_enable(false);
		this.ccfID_SABUN.set_enable(false);
		this.FormBtns.Select.click();
	}else{
		//법인 코드파인드 초기값 셋팅
		this.ccfCD_CORP.form.CDTextBox.set_value("");
		this.ccfCD_CORP.form.DSTextBox.set_value("");
		this.ccfCD_CORP.set_enable(true);
	}	
	
	//연차관리 팝업으로 진입
	if (!this.gfnIsNull(this.getOwnerFrame().cdcorp) && !this.gfnIsNull(this.getOwnerFrame().dscorp)
		&& !this.gfnIsNull(this.getOwnerFrame().idPerson) && !this.gfnIsNull(this.getOwnerFrame().sabun)
		&& !this.gfnIsNull(this.getOwnerFrame().hname) && !this.gfnIsNull(this.getOwnerFrame().textCal)) {
		
		this.ctclYR_BASE.form.TextBox.set_value(this.getOwnerFrame().textCal);
		
		this.ccfCD_CORP.form.CDTextBox.set_value(this.getOwnerFrame().cdcorp);
		this.ccfCD_CORP.form.DSTextBox.set_value(this.getOwnerFrame().dscorp);
		this.dsSearch.setColumn(0, "CD_CORP", this.getOwnerFrame().cdcorp);	
		
		this.ccfID_SABUN.form.CDTextBox.set_value(this.getOwnerFrame().sabun);
		this.ccfID_SABUN.form.DSTextBox.set_value(this.getOwnerFrame().hname);
		
		this.edtID_PERSON.set_value(this.getOwnerFrame().idPerson);
		
		this.FormBtns.Select.click();
	}		
	
	this.filepath = this.fnGetfilepath("DA00");
	
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************fnImageView************************************/
this.fnSetButton = function() {

	if(this.gfnGetFormStatus(this) == ""){
		this.FormBtns.Add.set_enable(false);
		this.FormBtns.Del.set_enable(false);
		this.FormBtns.Save.set_enable(false);
	}else{
		switch(this.FormInfo.TY_AUTH){
		
			case "F":
				this.FormBtns.Add.set_enable(true);
				this.FormBtns.Del.set_enable(true);
				this.FormBtns.Save.set_enable(true);
				break;
		
			case "U":
				this.FormBtns.Add.set_enable(false);
				this.FormBtns.Del.set_enable(false);
				this.FormBtns.Save.set_enable(true);
				break;
			
			case "R":
				this.FormBtns.Add.set_enable(false);
				this.FormBtns.Del.set_enable(false);
				this.FormBtns.Save.set_enable(false);
				break;
				
			default:
				this.FormBtns.Reset.set_enable(true); 
		
		}
	}
};

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ctclYR_BASE = this.divSearch.form.ctclYR_BASE;
	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;
	this.ccfID_SABUN = this.divSearch.form.ccfID_SABUN;
	this.ctclDT_START = this.divSearch.form.ctclDT_START;
	this.ctclDT_END = this.divSearch.form.ctclDT_END;
	this.ccfCD_RECORD = this.divSearch.form.ccfCD_RECORD;

	this.edtID_PERSON = this.divData.form.edtID_PERSON;
	this.edtID_SABUN = this.divData.form.edtID_SABUN;
	
	this.dxGrid = this.divData3.form.objGrid;
	
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.gfnGridInit(this.dxGrid, this.dsList, "DA", "DAC_MGTYEARLYVACA");

	//this.dxGrid.set_selecttype("cell");		
	//this.dxGrid.addEventHandler("onselectchanged", this.fnGrid_RowCellChanged, this);
	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
	this.dxGrid.EnterCell = "fnGrid_EnterCell";
	this.dxGrid.AfterCDTextChanged = "fnGrid_AfterCDTextChanged";
	
	this.ccfCD_CORP.CodeFindName = "DAX_CFCORP";
	this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_CORP.AfterCDTextChanged = "codefind_AfterCDTextChanged";	
	
	this.ccfID_SABUN.CodeFindName = "DAX_CFBASEINFO_ALL";
	this.ccfID_SABUN.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfID_SABUN.AfterCDTextChanged = "codefind_AfterCDTextChanged";

	this.ccfCD_RECORD.CodeFindName = "DAX_WORK_TYPE";
	this.ccfCD_RECORD.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	
	var grSearch = this.FormInfo.GR_SEARCH;	// 권한
	this.dxGrid.setCellProperty("body", this.dxGrid.getBindCellIndex("body", "DT_END"), "edittype", "expr:" + grSearch + " == '1' ?'date':'none'"); 
	//this.dxGrid.setCellProperty("body", this.dxGrid.getBindCellIndex("body", "DT_END"), "expandshow", "expr:" + grSearch + " == '1' ?'show':'hide'");

};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("ID_PERSON", "string");
	this.dsSelect.addColumn("ID_SABUN", "string");
	this.dsSelect.addColumn("YR_BASE", "string");
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("DT_START", "string");
	this.dsSelect.addColumn("DT_END", "string");
	this.dsSelect.addColumn("CD_RECORD", "string");
	this.dsSelect.addColumn("GR_SEARCH", "string");
	
	this.dsSelect1 = new Dataset();
	this.dsSelect1.addColumn("ID_PERSON", "string");
	this.dsSelect1.addColumn("CD_CORP", "string");
	this.dsSelect1.addColumn("ID_SABUN", "string");
	this.dsSelect1.addColumn("ID_USER", "string");
	this.dsSelect1.addColumn("IP_ADDR", "string");	
	//this.dsSelect1.addColumn("GR_SEARCH", "string");
	
	this.dsSelect2 = new Dataset();
	this.dsSelect2.addColumn("ID_PERSON", "string");
	this.dsSelect2.addColumn("ID_SABUN", "string");
	this.dsSelect2.addColumn("YR_BASE", "string");
	this.dsSelect2.addColumn("CD_CORP", "string");
	//this.dsSelect2.addColumn("GR_SEARCH", "string");
	
	this.dsInsert = new Dataset();
	this.dsInsert.addColumn("DT_START", "string");
	this.dsInsert.addColumn("DT_END", "string");
	this.dsInsert.addColumn("CD_RECORD", "string");
	this.dsInsert.addColumn("QN_RECORD", "bigdecimal");
	this.dsInsert.addColumn("TY_AMPM", "string");
	this.dsInsert.addColumn("DS_DAEJIK", "string");
	this.dsInsert.addColumn("NO_TEL", "string");
	this.dsInsert.addColumn("DS_VACA", "string");
	this.dsInsert.addColumn("DS_REMARK", "string");
	this.dsInsert.addColumn("DT_WORKDAY", "string");
	this.dsInsert.addColumn("CD_CORP", "string");
	this.dsInsert.addColumn("ID_PERSON", "string");
	this.dsInsert.addColumn("ID_SABUN", "string");
	this.dsInsert.addColumn("GR_SEARCH", "string");
	this.dsInsert.addColumn("ID_USER", "string");


	this.dsUpdate = new Dataset();
	this.dsUpdate.addColumn("DT_START", "string");
	this.dsUpdate.addColumn("DT_END", "string");
	this.dsUpdate.addColumn("CD_RECORD", "string");
	this.dsUpdate.addColumn("NO_SEQ", "string");
	this.dsUpdate.addColumn("QN_RECORD", "bigdecimal");
	this.dsUpdate.addColumn("TY_AMPM", "string");
	this.dsUpdate.addColumn("DS_DAEJIK", "string");
	this.dsUpdate.addColumn("NO_TEL", "string");
	this.dsUpdate.addColumn("DS_VACA", "string");
	this.dsUpdate.addColumn("DS_REMARK", "string");
	this.dsUpdate.addColumn("DT_WORKDAY", "string");
	this.dsUpdate.addColumn("CD_CORP", "string");
	this.dsUpdate.addColumn("ID_PERSON", "string");
	this.dsUpdate.addColumn("ID_SABUN", "string");
	this.dsUpdate.addColumn("GR_SEARCH", "string");
	this.dsUpdate.addColumn("ID_USER", "string");

	this.dsDelete = new Dataset();
	this.dsDelete.addColumn("ID_PERSON", "string");
	this.dsDelete.addColumn("NO_SEQ", "bigdecimal");
	this.dsDelete.addColumn("CD_CORP", "string");
	this.dsDelete.addColumn("ID_SABUN", "string");
	this.dsDelete.addColumn("YR_VACATION", "string");
	this.dsDelete.addColumn("CD_RECORD", "string");
	this.dsDelete.addColumn("GR_SEARCH", "string");
	
	this.dsUpdateDayOff = new Dataset();
	this.dsUpdateDayOff.addColumn("ID_PERSON", "string");
	this.dsUpdateDayOff.addColumn("ID_SABUN", "string");
	this.dsUpdateDayOff.addColumn("NO_SEQ", "string");
	this.dsUpdateDayOff.addColumn("CD_RECORD", "string");
	this.dsUpdateDayOff.addColumn("DT_START", "string");
	this.dsUpdateDayOff.addColumn("DT_END", "string");
	this.dsUpdateDayOff.addColumn("DS_REMARK", "string");
	this.dsUpdateDayOff.addColumn("ID_LOGIN", "string");
	this.dsUpdateDayOff.addColumn("GR_SEARCH", "string");
	
};

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function(val) {
	if(val === undefined) {
		if(!this.fnValidate()) return;
	}
	
	this.gfnGridBeforeSelect(this.dxGrid);
	//this.gfnSetFormStatus(this);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "ID_PERSON", this.edtID_PERSON.value);
	this.dsSelect.setColumn(0, "ID_SABUN", this.gfnTrim(this.ccfID_SABUN.form.CDTextBox.value));
	this.dsSelect.setColumn(0, "YR_BASE", this.ctclYR_BASE.form.TextBox.value);
	this.dsSelect.setColumn(0, "CD_CORP", this.gfnTrim(this.ccfCD_CORP.form.CDTextBox.value));
	this.dsSelect.setColumn(0,"DT_START", this.dsSearch.getColumn(0, "DT_START"));
	this.dsSelect.setColumn(0,"DT_END", this.dsSearch.getColumn(0, "DT_END"));
	this.dsSelect.setColumn(0,"CD_RECORD", this.dsSearch.getColumn(0, "CD_RECORD"));
	this.dsSelect.setColumn(0, "GR_SEARCH", this.FormInfo.GR_SEARCH);
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

this.fnSelectDetail = function() {
	this.dsSelect1.clearData();
	this.dsSelect1.addRow();

	this.dsSelect1.setColumn(0, "ID_PERSON", this.edtID_PERSON.value);
	this.dsSelect1.setColumn(0, "CD_CORP", this.gfnTrim(this.ccfCD_CORP.form.CDTextBox.value));
	this.dsSelect1.setColumn(0, "ID_SABUN", this.gfnTrim(this.ccfID_SABUN.form.CDTextBox.value));
	//this.dsSelect1.setColumn(0, "GR_SEARCH", this.FormInfo.GR_SEARCH);
	this.dsSelect1.setColumn(0, "ID_USER", this.AuthClient.ID_USER); // 20200413 추가
	this.dsSelect1.setColumn(0, "IP_ADDR", this.AuthClient.NO_IP); // 20200413 추가

	var strSvcId    = "detail";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
 	var inData      = "selectSingle=dsSelect1";
 	var outData     = "dsDetail=selectSingle0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능
}

this.fnSelectDetail1 = function() {
	this.dsSelect2.clearData();
	this.dsSelect2.addRow();
	
	this.dsSelect2.setColumn(0, "ID_PERSON", this.edtID_PERSON.value);
	this.dsSelect2.setColumn(0, "ID_SABUN", this.gfnTrim(this.ccfID_SABUN.form.CDTextBox.value));
	this.dsSelect2.setColumn(0, "YR_BASE", this.ctclYR_BASE.form.TextBox.value);
	this.dsSelect2.setColumn(0, "CD_CORP", this.gfnTrim(this.ccfCD_CORP.form.CDTextBox.value));
	//this.dsSelect2.setColumn(0, "GR_SEARCH", this.FormInfo.GR_SEARCH);

	var strSvcId    = "detail1";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
 	var inData      = "selectSingle1=dsSelect2";
 	var outData     = "dsDetail1=selectSingle10";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	var nrow = this.gfnGridAdd(this.dxGrid, "top");
}

/*
 *	삭제 버튼
 */ 
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */ 
this.fnSave = function() {

	if (!this.fnSaveValidation()) return;
	//if (!this.gfnGridValidate(this.dxGrid)) return;

	this.dxGrid.updateToDataset();
	
	this.dsInsert.clearData();
	this.dsUpdate.clearData();
	this.dsDelete.clearData();
	
	this.dsUpdateDayOff.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
				var nrow = this.dsInsert.addRow();
				this.dsInsertMake(nrow, i);
				break;
				
			case "U":
				// 근태코드 08:휴무계획 09:휴무변경
				if(this.dsList.getColumn(i, "CD_RECORD") == "08" || this.dsList.getColumn(i, "CD_RECORD") == "09"){
					var nrow = this.dsUpdateDayOff.addRow();
					this.dsUpdateDayOffMake(nrow, i);
						
				}else{
					var nrow = this.dsUpdate.addRow();
					this.dsUpdateMake(nrow, i);
				}
			
				break;
				
			case "D":
				var nrow = this.dsDelete.addRow();
				this.dsDeleteMake(nrow, i);
				break;
		}
	}
	
	if (this.dsInsert.rowcount == 0 && this.dsUpdate.rowcount == 0 && 
		this.dsDelete.rowcount == 0 && this.dsUpdateDayOff.rowcount == 0){
		return;
	}
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "insert=dsInsert update=dsUpdate delete=dsDelete updateDayOff=dsUpdateDayOff";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/*
 *	초기화 버튼
 */
this.fnReset = function() { 
	this.dsSearch.clearData();
	this.dsSearch.addRow(); 
	
	var nowYear = this.gfnGetDate().substring(0,4);
	this.divSearch.form.ctclYR_BASE.form.TextBox.set_value(nowYear);

 	this.ccfID_SABUN.form.CDTextBox.set_value(""); 
	this.ccfID_SABUN.form.DSTextBox.set_value(""); 
 	this.ccfCD_CORP.form.CDTextBox.set_value(""); 
	this.ccfCD_CORP.form.DSTextBox.set_value("");
 	this.edtID_PERSON.set_value(""); 
	
	if(this.FormInfo.GR_SEARCH == 9){
		this.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);
		this.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP);
		this.ccfID_SABUN.form.CDTextBox.set_value(this.AuthClient.ID_USER);
		this.ccfID_SABUN.form.DSTextBox.set_value(this.AuthClient.DS_HNAME);	
		this.edtID_PERSON.set_value(this.AuthClient.ID_PERSON);	
		this.ccfCD_CORP.set_enable(false);
		this.ccfID_SABUN.set_enable(false);
	}	
} 

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnValidate = function() {
	if(this.gfnIsNull(this.ctclYR_BASE.form.TextBox.value)) {		
		this.ctclYR_BASE.form.TextBox.setFocus();
		this.gfnAlert("년도를 입력해주세요");
		return false;
	}
	
// 	if(this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {		
// 		this.ccfCD_CORP.form.CDTextBox.setFocus();
// 		this.gfnAlert("법인을 선택해주세요.");
// 		return false;
// 	}
	
	if (this.gfnIsNull(this.ccfID_SABUN.form.CDTextBox.value)) {
		this.ccfID_SABUN.form.CDTextBox.setFocus();
		this.gfnAlert("성명을 입력하세요.");
		return false;
	}
	
	var DT_START = this.dsSearch.getColumn(0, "DT_START");
	var DT_END = this.dsSearch.getColumn(0, "DT_END");
	if(!this.gfnIsNull(DT_START) && !this.gfnIsNull(DT_END)){
		if (DT_START > DT_END) {
			this.fnVaidateCallback = function() {
				this.ctclDT_START.setFocus();
			}
			this.gfnAlert("조회기간 시작일이 종료일보다 클 수 없습니다.", "fnVaidateCallback");
			return false;
		}
	}
	
	return true;
};

/*
 *	저장 Validate
 */
this.fnSaveValidation = function() {
	var objDs = this.dsList;
	var objGrid = this.dxGrid;
	
	var msg = "";
	for (var i = 0; i < objDs.rowcount; i++) {
		var flag = this.gfnGetFlag(objDs, i);
		switch(flag) {
			case "I":
			case "U":
				var arrRequired = objGrid.usRequired;
				for(var j = 0; j < arrRequired.length; j++) {
					var spl_req = arrRequired[j].split(';');
					var colnm = spl_req[0];
					var header = spl_req[1];
					if (this.gfnIsNull(objDs.getColumn(i, colnm))) {
						msg += (i + 1) + "열: [" + header + "] 필수입력값입니다.\n";
					}
				}

				var CD_RECORD = this.dsList.getColumn(i, "CD_RECORD");		// 근태코드
				var DT_WORKDAY = this.dsList.getColumn(i, "DT_WORKDAY");	// 휴일근무일
				var DT_START = this.dsList.getColumn(i, "DT_START");		// 시작일
				var DT_END = this.dsList.getColumn(i, "DT_END");			// 종료일

				var toDay = this.gfnGetDate();
				// 과거 날짜로 수정불가 (관리자 가능 )
				if(this.FormInfo.GR_SEARCH != 1){
					if(toDay >= DT_START){
						this.gfnAlert("시작일은 오늘이전 일자로 입력할 수 없습니다.");
						return false;
					}
				}

				if(CD_RECORD == "13" || CD_RECORD == "17" ){	// 13:대체근무, 17:대체휴무변경
					if (this.gfnIsNull(DT_WORKDAY)) {
						msg += (i + 1) + "열 [근태코드] 대체휴무일 경우에는 [휴일근무일] 필수입력값입니다. \n";
					}

					if(!this.gfnIsNull(DT_START) && !this.gfnIsNull(CD_RECORD) && !this.gfnIsNull(DT_WORKDAY)){
						// 휴일근무일 기준 한달 이내로만 변경가능
						var DT_RECEIPT_MONTH = this.gfnAddMonth(DT_WORKDAY,1);
					
						// 시작일 > 휴일근무일
						if (DT_START < DT_WORKDAY){
							msg += (i + 1) + "열 [시작일]은 [휴일근무일] 이후로 입력하셔야합니다. \n";
						}
						
						// /  시작일 < 휴일근무일+1달
						if(DT_START > DT_RECEIPT_MONTH ){
							msg += (i + 1) + "열 [시작일]은 [휴일근무일] 기준 한달 이내로만 변경가능합니다. \n";
						}
					}
				}

				if(CD_RECORD == "08" || CD_RECORD == "09" ){	// 근태코드 08:휴무계획 09:휴무변경
// 					if (toDay.substring(5,7) < 20){
// 						if( DT_END.substring(0,6) != toDay.substring(0,6)){
// 							this.gfnAlert("당월만 수정 가능합니다.");
// 							return false;
// 						}
// 					}
					
					if (toDay.substring(5,7) >= 20){
// 						if( DT_END.substring(5,7) >= (this.gfnAddMonth(toDay,1).substring(5,7))){
// 							this.gfnAlert("다음달 까지만 수정 가능합니다.");
// 							return false;
// 						}
						if(DT_END.substring(0,6) > (this.gfnAddMonth(toDay,1).substring(0,6))){
 							this.gfnAlert("다음달 까지만 수정 가능합니다.");
 							return false;						
						}
					}
				}


			break;
		}


	}// for

	
	if(this.gfnIsNull(msg)) {
		return true;
	}
	else {
		var arrError = [msg];
		this.gfnAlert("msg.err.validator", arrError);
		return false;
	}
	
	
	return true;
}

this.fnImageView = function() {
	if (this.gfnIsNull(this.dsDetail.getColumn(0, "PIC"))) { return false; }
		
	this.dsImageFile.clearData();
	this.dsImageFile.addRow();
	
	var key = this.dsDetail.getColumn(0, "ID_PERSON");
	
	//this.dsImageFile.setColumn(0, "filepath", this.filepath + key);
	this.dsImageFile.setColumn(0, "filepath", this.filepath);
	this.dsImageFile.setColumn(0, "filename", this.dsDetail.getColumn(0, "PIC"));

	/*alert(this.filepath + key);*/
	// 서버 이미지파일 base64 로 받아오기		
	var strSvcId    = "PIC";
	var strSvcType  = "file/imageFile";
	var inProc		= "";
	var inData      = "input=dsImageFile";
	var outData     = "dsImageFile=input";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};

// 사진 DIR 정보
this.fnGetfilepath = function(dirCd) {
		
	this.dsFileDirInfoParam.clearData();
	this.dsFileDirInfoParam.addRow();
	
	this.dsFileDirInfoParam.setColumn(0, "CD_GUBUN", dirCd);
	
	var strSvcId    = "fileDirInfo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "fileDirInfo=dsFileDirInfoParam";
	var outData     = "dsFileDirInfo=fileDirInfo0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc,
						false); 		// 통신방법 정의 [생략가능]

	return this.dsFileDirInfo.getColumn(0, "DS_PATH");
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg) {	
	
	this.FormBtns.Reset.set_enable(true); 
	
	if (svcID == "select") {

		this.gfnGridAfterSelect(this.dxGrid);
		this.fnSelectDetail();	
		
		this.dxGrid.setCellProperty("body",this.dxGrid.getBindCellIndex("body","DT_HOLIDAY_REPLACE"),"edittype","none");
		
	} else if (svcID == "save") {	
		if (errorCode == 0) {
			this.gfnAlert("작업이 완료되었습니다.");	
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
		
	} else if (svcID == "detail") {
		
		this.fnSelectDetail1();
		
	} else if (svcID == "detail1") {
		this.fnImageView();
		
	} else if (svcID == "PIC") {
		//trace(this.dsImageFile.getColumn(0, "filereturn"));
		this.divData.form.imgPIC.set_image(this.dsImageFile.getColumn(0, "filereturn"));
	}
	this.fnSetButton();
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.codefind_AfterCDTextChanged = function(id, codeFindData) {
	var arr = codeFindData; 

	if (id == "ccfCD_CORP") {	
		this.ccfID_SABUN.form.CDTextBox.set_value(""); 
		this.ccfID_SABUN.form.DSTextBox.set_value(""); 		
		this.edtID_PERSON.set_value(""); 
	} else if(id == "ccfID_SABUN") {
		this.ccfCD_CORP.form.CDTextBox.set_value(codeFindData[0]["CD_CORP"]); 
		this.ccfCD_CORP.form.DSTextBox.set_value(codeFindData[0]["DS_CORP"]); 			
		this.edtID_PERSON.set_value(codeFindData[0]["ID_PERSON"]);
		//this.FormBtns.Select.click();
	}
}

this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow){
	if(id == "ccfID_SABUN"){
		dsUserParam.setColumn(nrow, "CD_CORP", "%");
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "CD_DEPT", "%");
		dsUserParam.setColumn(nrow, "YN_CORP", "");		// 조회조건의 법인을 조건으로 사용하기위해서 ( 법인에 속한 사번 조회 ) 
		dsUserParam.setColumn(nrow, "TY_RETIRE", "%");	// 재직구분
	}
	trace("fnBeforeUserDataSetParam->" + id);
	if(id == "ccfCD_RECORD"){
		//dsUserParam.setColumn(nrow, "CD_PREFIX", 'GT');	 
		dsUserParam.setColumn(nrow, "TY_GUBUN", 'UPCODE');	 
		dsUserParam.setColumn(nrow, "CD_PREFIX", 'GT');	 
		dsUserParam.setColumn(nrow, "CD_UPPREFIX", '01'); 
	}

	return true;
};


/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGrid_RowCellChanged = function(obj:nexacro.Grid,e:nexacro.GridSelectEventInfo) {

   if ((obj.oldrow > -1 && obj.oldrow == e.row) || (obj.oldrow == -1 && e.oldrow != e.row)) {

		if (this.dxGrid.rowcount == 0 || this.dxGrid.currentrow < 0) return false;
		
		var objGrid = this.dxGrid;
		var objDs = objGrid.getBindDataset();
		var rowFlag = objDs.getColumn(this.dsList.rowposition, this.ucFlag);
		var flag = this.gfnGetFormStatus(this);	
		var UCST_APPROVAL = this.dsList.getColumn(this.dsList.rowposition, "UCST_APPROVAL");	
		var YN_LINKED = this.dsList.getColumn(this.dsList.rowposition, "YN_LINKED");	
		
		if (YN_LINKED == "Y")
		{
			this.FormBtns.Add.set_enable(false);
			this.FormBtns.Del.set_enable(false);
			this.FormBtns.Save.set_enable(false);
		} else {
			this.FormBtns.Add.set_enable(true);
			this.FormBtns.Del.set_enable(true);
			this.FormBtns.Save.set_enable(true);		
		}	
		obj.oldrow = -1;
	}
};

this.fnGrid_BeforeUserDataSetParam = function(id, dsUserParam, nrow) {

 	if(id == "DAX_WORK_TYPE") {
		dsUserParam.setColumn(nrow, "TY_GUBUN ", "UPCODE");
 		dsUserParam.setColumn(nrow, "CD_PREFIX", "GT");
		dsUserParam.setColumn(nrow, "CD_UPCODE", "01"); 
 	}	
	return true;
};

this.fnGrid_EnterCell = function(obj:nexacro.Grid, row, cell) {

	//trace("fnGrid_EnterCell colnm->" + colnm);

	var colnm = this.gfnGridGetBindColumnNameByIndex(obj, cell); 
	var flag = this.gfnGetFlag(this.dsList, row);

	/*
	var UCST_APPROVAL = this.dsList.getColumn(this.dsList.rowposition, "UCST_APPROVAL"); //결재상태 (TY_STATUS)
	var YN_LINKED = this.dsList.getColumn(this.dsList.rowposition, "YN_LINKED"); //YN_LINK(Y:그룹웨어 연동,N:ERP입력) -- TY_GROUPWARE 컬럼변경됨
	if (YN_LINKED == "Y"){
		return false;
	}
	*/
	
	var TY_GROUPWARE = this.dsList.getColumn(this.dsList.rowposition, "TY_GROUPWARE"); // 그룹웨어여부 G:GROUPWARE /E: ERP
	var YN_EDIT = this.dsList.getColumn(this.dsList.rowposition, "YN_EDIT"); // 수정가능여부

	if(YN_EDIT == "N") return false;	// 수정불가

	// 공통 > Setting > 그리드정보 에서 셋팅한 내용대로 
	var nGrdSpcRow = this.dsGridSpec.findRow( "DS_FIELD", colnm);
	var YN_READONLY = this.dsGridSpec.getColumn(nGrdSpcRow, "YN_READONLY");
	if(YN_READONLY == "Y") return false;	
	if(YN_READONLY =="U" && (this.gfnIsNull(flag) || flag == "U")){	// flag 가 U 이거나 빈값
		return false;
	}

	return true;
	
	/*
	else if(colnm == "DS_VACATION" || colnm == "DS_APPROVAL"){ //휴가명, 결재상태 수정불가능
		return false;
	} else {
		return true;	
	}
	*/
};


this.fnGrid_AfterCDTextChanged = function(id, codeFindData) {

	var arrData = codeFindData;
	var nRow = this.dsList.rowposition;
	if(id == "DAX_WORK_TYPE"){
		if (arrData.length > 0) {
			//var CD_RECORD = this.dsList.getColumn(nRow, "CD_RECORD");		// 근태코드

			var CD_RECORD =  arrData[0]["CD_CODE"];			
			var DT_WORKDAY = this.dsList.getColumn(nRow, "DT_WORKDAY");	// 휴일근무일
			var DT_START = this.dsList.getColumn(nRow, "DT_START");		// 시작일
			var DT_END = this.dsList.getColumn(nRow, "DT_END");			// 종료일
			if(!this.gfnIsNull(DT_START) && !this.gfnIsNull(DT_WORKDAY)){
				if(CD_RECORD == "13" || CD_RECORD == "17" ){	// 13:대체근무, 17:대체휴무변경
					// 휴일근무일 기준 한달 이내로만 변경가능
					// 시작일 > 휴일근무일 /  시작일 < 휴일근무일+1달
					var DT_RECEIPT_MONTH = this.gfnAddMonth(DT_WORKDAY,1);
					if(DT_START < DT_WORKDAY || DT_START > DT_RECEIPT_MONTH ){
						this.gfnAlert("시작일은 휴일근무일 기준 한달 이내로만 변경가능합니다.");
						//return false;
					}
				}				
			}
			
			if(!this.gfnIsNull(DT_END)){
				if(CD_RECORD == "08" || CD_RECORD == "09" ){	// 근태코드 08:휴무계획 09:휴무변경
					var toDay = this.gfnGetDate();
					//과거일자 수정 불가, 당월 이내로만 변경가능
					if(DT_END < toDay){
						this.gfnAlert("과거일자는 수정 불가합니다.");
						return false;
					}

// 					if (toDay.substring(5,7) < 20){
// 						if( DT_END.substring(0,6) != toDay.substring(0,6)){
// 							this.gfnAlert("당월만 수정 가능합니다.");
// 							return false;
// 						}
// 					}
					
					if (toDay.substring(5,7) >= 20){
// 						if( DT_END.substring(5,7) >= (this.gfnAddMonth(toDay,1).substring(5,7))){
// 							this.gfnAlert("다음달 까지만 수정 가능합니다.");
// 							return false;
// 						}
						if(DT_END.substring(0,6) > (this.gfnAddMonth(toDay,1).substring(0,6))){
 							this.gfnAlert("다음달 까지만 수정 가능합니다.");
 							return false;						
						}
					}
				}
			}// DT_END
		}
	}

}

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {
	if(e.pretext != e.posttext) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);
		this.fnSetButton();
	}
};

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);
		this.fnSetButton();
		this.dsDetail.clearData();
		this.dsDetail1.clearData();
		//this.dsDetail.addRow();

		this.divData.form.imgPIC.set_image(null);
		
		if (e.columnid == "ID_SABUN") {
			if(e.newvalue == ""){
				this.dsList.clearData();
				this.dsDetail.clearData();
				this.dsDetail1.clearData()
				this.dsImageFile.clearData(); 
				this.edtID_PERSON.set_value(""); 
			}		
		}
	}
};

this.dsInsertMake = function(nrow, i) {

	this.dsInsert.setColumn(nrow, "DT_START", this.dsList.getColumn(i, "DT_START"));
	this.dsInsert.setColumn(nrow, "DT_END", this.dsList.getColumn(i, "DT_END"));
	this.dsInsert.setColumn(nrow, "CD_RECORD", this.dsList.getColumn(i, "CD_RECORD"));
	this.dsInsert.setColumn(nrow, "QN_RECORD", this.dsList.getColumn(i, "QN_RECORD"));
	this.dsInsert.setColumn(nrow, "TY_AMPM", this.dsList.getColumn(i, "TY_AMPM"));
	this.dsInsert.setColumn(nrow, "DS_DAEJIK", this.dsList.getColumn(i, "DS_DAEJIK"));
	this.dsInsert.setColumn(nrow, "NO_TEL", this.dsList.getColumn(i, "NO_TEL"));
	this.dsInsert.setColumn(nrow, "DS_VACA", this.dsList.getColumn(i, "DS_VACA"));
	this.dsInsert.setColumn(nrow, "DS_REMARK", this.dsList.getColumn(i, "DS_REMARK"));
	this.dsInsert.setColumn(nrow, "DT_WORKDAY", this.dsList.getColumn(i, "DT_WORKDAY"));
	this.dsInsert.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
	this.dsInsert.setColumn(nrow, "ID_PERSON", this.edtID_PERSON.value);
	this.dsInsert.setColumn(nrow, "ID_SABUN", this.ccfID_SABUN.form.CDTextBox.value);
	this.dsInsert.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
	this.dsInsert.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
	
};

this.dsUpdateMake = function(nrow, i) {
	
	this.dsUpdate.setColumn(nrow, "DT_START", this.dsList.getColumn(i, "DT_START"));
	this.dsUpdate.setColumn(nrow, "DT_END", this.dsList.getColumn(i, "DT_END"));
	this.dsUpdate.setColumn(nrow, "CD_RECORD", this.dsList.getColumn(i, "CD_RECORD"));
	this.dsUpdate.setColumn(nrow, "NO_SEQ", this.dsList.getColumn(i, "NO_SEQ"));
	this.dsUpdate.setColumn(nrow, "QN_RECORD", this.dsList.getColumn(i, "QN_RECORD"));
	this.dsUpdate.setColumn(nrow, "TY_AMPM", this.dsList.getColumn(i, "TY_AMPM"));
	this.dsUpdate.setColumn(nrow, "DS_DAEJIK", this.dsList.getColumn(i, "DS_DAEJIK"));
	this.dsUpdate.setColumn(nrow, "NO_TEL", this.dsList.getColumn(i, "NO_TEL"));
	this.dsUpdate.setColumn(nrow, "DS_VACA", this.dsList.getColumn(i, "DS_VACA"));
	this.dsUpdate.setColumn(nrow, "DS_REMARK", this.dsList.getColumn(i, "DS_REMARK"));
	this.dsUpdate.setColumn(nrow, "DT_WORKDAY", this.dsList.getColumn(i, "DT_WORKDAY"));
	this.dsUpdate.setColumn(nrow, "CD_CORP", this.dsList.getColumn(i, "CD_CORP"));
	this.dsUpdate.setColumn(nrow, "ID_PERSON", this.dsList.getColumn(i, "ID_PERSON"));
	this.dsUpdate.setColumn(nrow, "ID_SABUN", this.dsList.getColumn(i, "ID_SABUN"));
	this.dsUpdate.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
	this.dsUpdate.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
};

this.dsDeleteMake = function(nrow, i) {
	
	this.dsDelete.setColumn(nrow, "ID_PERSON", this.edtID_PERSON.value);
	this.dsDelete.setColumn(nrow, "NO_SEQ", this.dsList.getColumn(i, "NO_SEQ"));
	this.dsDelete.setColumn(nrow, "CD_CORP", this.gfnTrim(this.ccfCD_CORP.form.CDTextBox.value));
	this.dsDelete.setColumn(nrow, "ID_SABUN", this.edtID_SABUN.value);
	this.dsDelete.setColumn(nrow, "YR_VACATION", this.ctclYR_BASE.form.TextBox.value);
	this.dsDelete.setColumn(nrow, "CD_RECORD", this.dsList.getColumn(i, "CD_RECORD"));
	this.dsDelete.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
}
						
this.dsUpdateDayOffMake = function(nrow, i) {
	this.dsUpdateDayOff.setColumn(nrow, "ID_PERSON", this.dsList.getColumn(i, "ID_PERSON"));
	this.dsUpdateDayOff.setColumn(nrow, "ID_SABUN", this.dsList.getColumn(i, "ID_SABUN"));
	this.dsUpdateDayOff.setColumn(nrow, "NO_SEQ", this.dsList.getColumn(i, "NO_SEQ"));
	this.dsUpdateDayOff.setColumn(nrow, "CD_RECORD", "09");
	this.dsUpdateDayOff.setColumn(nrow, "DT_START", this.dsList.getColumn(i, "DT_START"));
	this.dsUpdateDayOff.setColumn(nrow, "DT_END", this.dsList.getColumn(i, "DT_END"));
	this.dsUpdateDayOff.setColumn(nrow, "DS_REMARK", this.dsList.getColumn(i, "DS_REMARK"));
	this.dsUpdateDayOff.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
	this.dsUpdateDayOff.setColumn(nrow, "ID_LOGIN", this.AuthClient.ID_USER);
};

this.dsList_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	var nowDay = this.gfnGetDate().substring(0,8);
	var CD_RECORD = this.dsList.getColumn(e.row, "CD_RECORD");		// 근태코드
	var DT_WORKDAY = this.dsList.getColumn(e.row, "DT_WORKDAY");	// 휴일근무일
	var DT_START = this.dsList.getColumn(e.row, "DT_START");		// 시작일
	var DT_END = this.dsList.getColumn(e.row, "DT_END");			// 종료일

	switch(e.columnid) {
		case "DT_START":
		case "CD_RECORD":
		case "DT_WORKDAY":
			if(!this.gfnIsNull(DT_START) && !this.gfnIsNull(CD_RECORD) && !this.gfnIsNull(DT_WORKDAY)){
				if(CD_RECORD == "13" || CD_RECORD == "17" ){	// 13:대체근무, 17:대체휴무변경
					// 휴일근무일 기준 한달 이내로만 변경가능
					// 시작일 > 휴일근무일 /  시작일 < 휴일근무일+1달
					var DT_RECEIPT_MONTH = this.gfnAddMonth(DT_WORKDAY,1);
					if(DT_START < DT_WORKDAY || DT_START > DT_RECEIPT_MONTH ){
						this.gfnAlert("시작일은 휴일근무일 기준 한달 이내로만 변경가능합니다.");
						return false;
					}
				}
			}
		break;
	}	

	switch(e.columnid) {
		case "DT_START":
			/*
			var dtVacaTo = this.dsList.getColumn(e.row, "DT_END")==null?"99991231":this.dsList.getColumn(e.row, "DT_END");
			if(dtVacaTo < e.newvalue){
				this.gfnAlert("시작일이 종료일보다 클 수 없습니다.");
				this.dsList.setColumn(e.row, "DT_START", e.oldvalue);
				return false;
			}
			*/
			this.dsList.setColumn(this.dsList.rowposition, "DT_END", e.newvalue);

		break;
		case "DT_END":

			if(CD_RECORD == "08" || CD_RECORD == "09" ){	// 근태코드 08:휴무계획 09:휴무변경

				//과거일자 수정 불가, 당월 이내로만 변경가능
				var toDay = this.gfnGetDate();
				if(e.newvalue < toDay){
					this.gfnAlert("과거일자는 수정 불가합니다.");
					//this.dsList.setColumn(this.dsList.rowposition, "DT_END", e.oldvalue);
					return false;
				}

// 				if (toDay.substring(5,7) < 20){
// 					if( e.newvalue.substring(0,6) != toDay.substring(0,6)){
// 						this.gfnAlert("당월만 수정 가능합니다.");
// 						return false;
// 					}
// 				}
				
				if (toDay.substring(5,7) >= 20){
// 					if( e.newvalue.substring(5,7) >= (this.gfnAddMonth(toDay,1).substring(5,7))){
// 						this.gfnAlert("다음달 까지만 수정 가능합니다.");
// 						return false;
// 					}
					if(DT_END.substring(0,6) > (this.gfnAddMonth(toDay,1).substring(0,6))){
						this.gfnAlert("다음달 까지만 수정 가능합니다.");
						//this.dsList.setColumn(this.dsList.rowposition, "DT_END", e.oldvalue);
						return false;				
					}
				}
			}

		break;
	}
	this.fnSetButton();
};

this.dsList_cancolumnchange = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	// 이벤트에서 리턴값으로 "false" 를 반환하면 Column 값이 변경되지 않고, oncolumnchanged 이벤트가 발생하지 않습니다.
	var nowDay = this.gfnGetDate().substring(0,8);
	var CD_RECORD = this.dsList.getColumn(e.row, "CD_RECORD");		// 근태코드
	var DT_WORKDAY = this.dsList.getColumn(e.row, "DT_WORKDAY");	// 휴일근무일
	var DT_START = this.dsList.getColumn(e.row, "DT_START");		// 시작일
	var DT_END = this.dsList.getColumn(e.row, "DT_END");			// 종료일


	switch(e.columnid) {
		case "DT_START":
		case "CD_RECORD":
		case "DT_WORKDAY":
			if(!this.gfnIsNull(DT_START) && !this.gfnIsNull(CD_RECORD) && !this.gfnIsNull(DT_WORKDAY)){
				if(CD_RECORD == "13" || CD_RECORD == "17" ){	// 13:대체근무, 17:대체휴무변경
					// 휴일근무일 기준 한달 이내로만 변경가능
					// 시작일 > 휴일근무일 /  시작일 < 휴일근무일+1달
					var DT_RECEIPT_MONTH = this.gfnAddMonth(DT_WORKDAY,1);
					if(DT_START < DT_WORKDAY || DT_START > DT_RECEIPT_MONTH ){
						this.gfnAlert("시작일은 휴일근무일 기준 한달 이내로만 변경가능합니다.");
						return false;
					}
				}
			}
		break;
	}

	switch(e.columnid) {
		case "DT_START":

			// 과거 날짜로 수정불가 (관리자 가능 )
			if(this.FormInfo.GR_SEARCH != 1){
				if(nowDay >= e.newvalue){
					this.gfnAlert("시작일은 오늘이전 일자로 입력할 수 없습니다.");
					return false;
				}
			}

			//과거일자 수정 불가, 당월 이내로만 변경가능
			var toDay = this.gfnGetDate();
			if(e.newvalue < toDay){
				this.gfnAlert("과거일자는 수정 불가합니다.");
				return false;
			}

		break;
				
		case "DT_END":
			var dtVacaFrom = this.dsList.getColumn(e.row, "DT_START")==null?"00000101":this.dsList.getColumn(e.row, "DT_START");
			if(dtVacaFrom > e.newvalue){
				this.gfnAlert("종료일이 시작일보다 작을 수 없습니다.");
				return false;
			}

		break;

	}

	return true;
};
//김지은 이우진 / BH150417]]></Script>
    <Objects>
      <Dataset id="dsList" onvaluechanged="dsList_onvaluechanged" cancolumnchange="dsList_cancolumnchange"/>
      <Dataset id="dsDetail">
        <ColumnInfo>
          <Column id="ID_SABUN" type="STRING" size="256"/>
          <Column id="DS_HNAME" type="STRING" size="256"/>
          <Column id="TY_RETIRE" type="STRING" size="256"/>
          <Column id="DS_RETIRE" type="STRING" size="256"/>
          <Column id="DS_EMPTYPE" type="STRING" size="256"/>
          <Column id="DS_JOBTYPE" type="STRING" size="256"/>
          <Column id="DS_CORP" type="STRING" size="256"/>
          <Column id="DS_DEPT" type="STRING" size="256"/>
          <Column id="DS_OCCUPATION" type="STRING" size="256"/>
          <Column id="DS_POSITION" type="STRING" size="256"/>
          <Column id="CD_PAYSTEP" type="STRING" size="256"/>
          <Column id="CD_DUTY" type="STRING" size="256"/>
          <Column id="DT_JOIN" type="STRING" size="256"/>
          <Column id="DT_RETIRE" type="STRING" size="256"/>
          <Column id="DS_PAYSTEP" type="STRING" size="256"/>
          <Column id="DS_DUTY" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsDetail1">
        <ColumnInfo>
          <Column id="QN_TOTAL" type="STRING" size="256"/>
          <Column id="QN_YEARLYVACATION" type="STRING" size="256"/>
          <Column id="QN_REMAIN" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DACPR_USEDVACATION_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">selectSingle</Col>
            <Col id="SP">DAAPR_BASEINFO_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">selectSingle1</Col>
            <Col id="SP">DACPR_YEARLYVACATION_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">insert</Col>
            <Col id="SP">DACPR_USEDVACATION_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">update</Col>
            <Col id="SP">DACPR_USEDVACATION_UPDATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">delete</Col>
            <Col id="SP">DACPR_USEDVACATION_DELETE</Col>
          </Row>
          <Row>
            <Col id="TARGET">fileDirInfo</Col>
            <Col id="SP">DZUPR_FILEMANAGER_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">updateDayOff</Col>
            <Col id="SP">DACPR_DAYOFF_UPDATE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="YR_BASE" type="STRING" size="256"/>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="ID_SABUN" type="STRING" size="256"/>
          <Column id="ID_PERSON" type="STRING" size="256"/>
          <Column id="DT_START" type="STRING" size="256"/>
          <Column id="DT_END" type="STRING" size="256"/>
          <Column id="CD_RECORD" type="STRING" size="256"/>
          <Column id="DS_RECORD" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="YR_BASE"/>
            <Col id="CD_CORP"/>
            <Col id="ID_SABUN"/>
            <Col id="ID_PERSON"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsImageFile">
        <ColumnInfo>
          <Column id="filepath" type="STRING" size="256"/>
          <Column id="filename" type="STRING" size="256"/>
          <Column id="filereturn" type="STRING" size="10000"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsFileDirInfoParam">
        <ColumnInfo>
          <Column id="CD_GUBUN" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsFileDirInfo"/>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divData.form.edtID_SABUN" propid="value" datasetid="dsDetail" columnid="ID_SABUN"/>
      <BindItem id="item1" compid="divData.form.edtDS_HNAME" propid="value" datasetid="dsDetail" columnid="DS_HNAME"/>
      <BindItem id="item2" compid="divData.form.edtTY_RETIRE" propid="value" datasetid="dsDetail" columnid="DS_RETIRE"/>
      <BindItem id="item3" compid="divData.form.edtDS_EMPTYPE" propid="value" datasetid="dsDetail" columnid="DS_EMPTYPE"/>
      <BindItem id="item4" compid="divData.form.edtDS_JOBTYPE" propid="value" datasetid="dsDetail" columnid="DS_JOBTYPE"/>
      <BindItem id="item5" compid="divData.form.edtDS_CORP" propid="value" datasetid="dsDetail" columnid="DS_CORP"/>
      <BindItem id="item6" compid="divData.form.edtDS_DEPT" propid="value" datasetid="dsDetail" columnid="DS_DEPT"/>
      <BindItem id="item7" compid="divData.form.edtDS_OCCUPATION" propid="value" datasetid="dsDetail" columnid="DS_OCCUPATION"/>
      <BindItem id="item8" compid="divData.form.edtDS_POSITION" propid="value" datasetid="dsDetail" columnid="DS_POSITION"/>
      <BindItem id="item9" compid="divData.form.edtCD_PAYSTEP" propid="value" datasetid="dsDetail" columnid="DS_PAYSTEP"/>
      <BindItem id="item10" compid="divData.form.edtCD_DUTY" propid="value" datasetid="dsDetail" columnid="DS_DUTY"/>
      <BindItem id="item11" compid="divData.form.edtDT_JOIN" propid="value" datasetid="dsDetail" columnid="DT_JOIN"/>
      <BindItem id="item12" compid="divData.form.edtDT_RETIRE" propid="value" datasetid="dsDetail" columnid="DT_RETIRE"/>
      <BindItem id="item50" compid="divData4.form.edtQN_TOTAL" propid="value" datasetid="dsDetail1" columnid="QN_TOTAL"/>
      <BindItem id="item51" compid="divData4.form.edtQN_YEARLYVACATION" propid="value" datasetid="dsDetail1" columnid="QN_YEARLYVACATION"/>
      <BindItem id="item52" compid="divData4.form.edtQN_REMAIN" propid="value" datasetid="dsDetail1" columnid="QN_REMAIN"/>
      <BindItem id="item100" compid="divSearch.form.ctclYR_BASE.form.TextBox" propid="value" datasetid="dsSearch" columnid="YR_BASE"/>
      <BindItem id="item101" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item102" compid="divSearch.form.ccfID_SABUN.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="ID_SABUN"/>
      <BindItem id="item13" compid="divData.form.edtID_PERSON" propid="value" datasetid="dsSearch" columnid="ID_PERSON"/>
      <BindItem id="item14" compid="divSearch.form.ctclDT_START" propid="value" datasetid="dsSearch" columnid="DT_START"/>
      <BindItem id="item15" compid="divSearch.form.ctclDT_END" propid="value" datasetid="dsSearch" columnid="DT_END"/>
      <BindItem id="item16" compid="divSearch.form.ccfCD_RECORD.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_RECORD"/>
      <BindItem id="item17" compid="divSearch.form.ccfCD_RECORD.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_RECORD"/>
    </Bind>
  </Form>
</FDL>
