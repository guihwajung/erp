(function()
{
    return function()
    {
        if (!this._is_form)
            return;
        
        var obj = null;
        
        this.on_create = function()
        {
            this.set_name("frameLogin");
            this.set_titletext("frameLogin");
            this.set_scrolltype("none");
            this.set_scrollbartype("none none");
            if (Form == this.constructor)
            {
                this._setFormPosition(840,460);
            }
            
            // Object(Dataset, ExcelExportObject) Initialize
            obj = new Dataset("dsUserInfo", this);
            obj._setContents("<ColumnInfo><Column id=\"ID_USER\" type=\"STRING\" size=\"256\"/><Column id=\"DS_HNAME\" type=\"STRING\" size=\"256\"/><Column id=\"CD_DEPT\" type=\"STRING\" size=\"256\"/><Column id=\"DS_DEPT\" type=\"STRING\" size=\"256\"/><Column id=\"CD_CORP\" type=\"STRING\" size=\"256\"/><Column id=\"DS_CORP\" type=\"STRING\" size=\"256\"/><Column id=\"ID_SABUN\" type=\"STRING\" size=\"256\"/></ColumnInfo>");
            this.addChild(obj.name, obj);


            obj = new Dataset("dsDeptList", this);
            obj._setContents("<ColumnInfo><Column id=\"ID_USER\" type=\"STRING\" size=\"256\"/><Column id=\"CD_CORP\" type=\"STRING\" size=\"256\"/><Column id=\"DS_CORP\" type=\"STRING\" size=\"256\"/><Column id=\"CD_DEPT\" type=\"STRING\" size=\"256\"/><Column id=\"DS_DEPT\" type=\"STRING\" size=\"256\"/><Column id=\"DT_PWDCHG\" type=\"STRING\" size=\"256\"/><Column id=\"TY_PASSWORD\" type=\"STRING\" size=\"256\"/><Column id=\"MM_PASSWORD\" type=\"STRING\" size=\"256\"/><Column id=\"DT_CURRENT\" type=\"STRING\" size=\"256\"/><Column id=\"YN_INIT\" type=\"STRING\" size=\"256\"/></ColumnInfo>");
            this.addChild(obj.name, obj);


            obj = new Dataset("dsLogin", this);
            obj._setContents("<ColumnInfo><Column id=\"ID_USER\" type=\"STRING\" size=\"256\"/><Column id=\"CD_CORP\" type=\"STRING\" size=\"256\"/><Column id=\"CD_DEPT\" type=\"STRING\" size=\"256\"/></ColumnInfo>");
            this.addChild(obj.name, obj);
            
            // UI Components Initialize
            obj = new Static("sta00","0","0",null,null,"0","0",null,null,null,null,this);
            obj.set_taborder("0");
            obj.set_cssclass("sta_LOGIN_Bg");
            obj.set_text("");
            this.addChild(obj.name, obj);

            obj = new Div("divLogin","0","0","840","450",null,null,null,null,null,null,this);
            obj.set_taborder("1");
            obj.set_text("");
            obj.set_background("transparent");
            obj.set_border("1px none transparent");
            obj.set_visible("false");
            obj.set_formscrollbartype("none");
            obj.set_formscrolltype("none");
            this.addChild(obj.name, obj);

            obj = new Div("login_logobox","0","0","400","450",null,null,null,null,null,null,this.divLogin.form);
            obj.set_taborder("4");
            obj.set_cssclass("login_logobox");
            obj.set_text("");
            this.divLogin.addChild(obj.name, obj);

            obj = new Static("sta00","0","413",null,null,"0","16",null,null,null,null,this.divLogin.form.login_logobox.form);
            obj.set_taborder("0");
            obj.set_text("Copyright ⓒ DL. All Rights Reserved.");
            obj.set_cssclass("sta_Login_copy");
            this.divLogin.form.login_logobox.addChild(obj.name, obj);

            obj = new Static("sta01","53","159","174","82",null,null,null,null,null,null,this.divLogin.form.login_logobox.form);
            obj.set_taborder("1");
            obj.set_cssclass("sta_logo_DL");
            this.divLogin.form.login_logobox.addChild(obj.name, obj);

            obj = new Static("sta02","234","181","126","60",null,null,null,null,null,null,this.divLogin.form.login_logobox.form);
            obj.set_taborder("2");
            obj.set_text("ERP");
            obj.set_cssclass("sta_ERPtxt");
            obj.set_font("normal bold 60px/normal \"Arial\"");
            this.divLogin.form.login_logobox.addChild(obj.name, obj);

            obj = new Div("div_login_info","400","0","440","450",null,null,null,null,null,null,this.divLogin.form);
            obj.set_taborder("1");
            obj.set_text("div00");
            obj.set_cssclass("div_login_info");
            this.divLogin.addChild(obj.name, obj);

            obj = new Button("btnLogin","60","320","320","65",null,null,null,null,null,null,this.divLogin.form.div_login_info.form);
            obj.set_taborder("0");
            obj.set_cssclass("btn_LOGIN_Login");
            obj.set_text("LOGIN");
            this.divLogin.form.div_login_info.addChild(obj.name, obj);

            obj = new Div("div_login_info_input","0","73",null,"187","0",null,null,null,null,null,this.divLogin.form.div_login_info.form);
            obj.set_taborder("1");
            obj.set_cssclass("div_login_info_input");
            obj.set_text("");
            this.divLogin.form.div_login_info.addChild(obj.name, obj);

            obj = new Edit("edId","60","69","320","50",null,null,null,null,null,null,this.divLogin.form.div_login_info.form.div_login_info_input.form);
            obj.set_taborder("0");
            obj.set_cssclass("edi_login_input");
            obj.set_displaynulltext("사번");
            this.divLogin.form.div_login_info.form.div_login_info_input.addChild(obj.name, obj);

            obj = new Edit("edPw","60","edId:8","320","50",null,null,null,null,null,null,this.divLogin.form.div_login_info.form.div_login_info_input.form);
            obj.set_taborder("1");
            obj.set_cssclass("edi_login_input");
            obj.set_password("true");
            obj.set_displaynulltext("비밀번호");
            this.divLogin.form.div_login_info.form.div_login_info_input.addChild(obj.name, obj);

            obj = new Static("sta00","60","0","320","47",null,null,null,null,null,null,this.divLogin.form.div_login_info.form.div_login_info_input.form);
            obj.set_taborder("2");
            obj.set_text("CARBONCO");
            obj.set_cssclass("sta_companyName");
            this.divLogin.form.div_login_info.form.div_login_info_input.addChild(obj.name, obj);

            obj = new Div("div00","60","253","320","27",null,null,null,null,null,null,this.divLogin.form.div_login_info.form);
            obj.set_taborder("2");
            obj.set_cssclass("div_id_memory");
            this.divLogin.form.div_login_info.addChild(obj.name, obj);

            obj = new CheckBox("chk00","0","6","150","20",null,null,null,null,null,null,this.divLogin.form.div_login_info.form.div00.form);
            obj.set_taborder("0");
            obj.set_text("아이디 기억하기");
            obj.set_cssclass("chk_id_memory");
            this.divLogin.form.div_login_info.form.div00.addChild(obj.name, obj);
            // Layout Functions
            //-- Default Layout : this
            obj = new Layout("default","",this._adjust_width,this._adjust_height,this,function(p){});
            this.addLayout(obj.name, obj);
            
            // BindItem Information

            
            // TriggerItem Information

        };
        
        this.loadPreloadList = function()
        {

        };
        
        // User Script
        this.registerScript("frameLogin.xfdl", function() {
        /**
        *  컨설팅 표준화 작업
        *  @MenuPath    frame > frameLogin
        *  @FileName 	frameLogin.xfdl
        *  @Creator 	consulting
        *  @CreateDate 	2017.03.09
        *  @Desction
        ************** 소스 수정 이력 ***********************************************
        *  date          		Modifier                Description
        *******************************************************************************
        *  2017.03.09     	consulting 	            	최초 생성
        *  2017.10.17     	consulting       	       	주석 정비
        *  2018.01.16		consulting			        gfnGetApplication 공통함수 변경
        *******************************************************************************
        */

        /************************************************************************************************
         * FORM 변수 선언 영역
         ************************************************************************************************/
        this.objApp 	  = this.gfnGetApplication();
        this.objMainframe = this.objApp.mainframe;
        this.gcToken 	  = "";
        /************************************************************************************************
         * FORM EVENT 영역(onload, onbeforeclose)
         ************************************************************************************************/
        this.form_onload = function(obj,e) {
        	this.objApp.gdsUserInfo.clearData();
            this.divLogin.form.set_scrollbartype("none");
        	this.form_onsize();

        	if (system.navigatorname != "nexacro" && (location.href.indexOf("tk=") > -1 || sessionStorage.getItem("tk") != null)) {
        		this.fnUserInfo();
        	} else {
        		this.divLogin.set_visible(true);
        	}

        	this.divLogin.form.div_login_info.form.div_login_info_input.form.sta00.set_text(nexacro.getEnvironmentVariable("evCompanyName"));

        	if (localStorage.getItem("nexa-id") != null) {
        		this.divLogin.form.div_login_info.form.div_login_info_input.form.edId.set_value(localStorage.getItem("nexa-id"));
        		this.divLogin.form.div_login_info.form.div_login_info_input.form.edPw.setFocus();
        		this.divLogin.form.div_login_info.form.div00.form.chk00.set_value(true);
        	} else {
        		this.divLogin.form.div_login_info.form.div_login_info_input.form.edId.setFocus();
        	}
        };

        /**
        * form onsize 변경시
        * @return
        * @example
        * @memberOf public
        */
        this.form_onsize = function()
        {
        	var nLeft = (this.objMainframe.width / 2) - Math.round((this.divLogin.form.getOffsetWidth()) / 2);
        	var nTop = (this.objMainframe.height / 2) - Math.round((this.divLogin.form.getOffsetHeight()) / 2);

        	if(nLeft <= 0)
        	{
        		this.divLogin.form.setOffsetLeft(0);
        	}
        	else
        	{
        		this.divLogin.setOffsetLeft(nLeft);
        		this.divLogin.setOffsetTop(nTop);
        	}
        };

        /************************************************************************************************
         * CALLBACK 콜백 처리부분(Transaction, Popup)
         ************************************************************************************************/
        this.fnCallback = function(svcID, errorCode, errorMsg)
        {
        	var dec_key = nexacro.getEnvironmentVariable("evKey");
        	var key = CryptoJS.enc.Hex.parse(dec_key.toString());

        	switch(svcID)
        	{
        		case "login":
        			this.dsLogin.clearData();
        			this.objApp.gdsUserInfo.clearData();
        			this.objApp.gdsDeptInfo.clearData();

        			if (this.dsDeptList.rowcount > 0 ) {
        				nexacro.setHTTPHeaderVariable("X-AUTH-TOKEN", this.gcToken);
        				nexacro.setEnvironmentVariable("LAST-DATE-TOKEN", new Date());

        				if (this.dsDeptList.rowcount == 1 ) {
        					var nRow = this.dsLogin.addRow();
        					this.dsLogin.setColumn(nRow , "ID_USER", CryptoJS.AES.encrypt(this.dsDeptList.getColumn(this.dsDeptList.rowposition, "ID_USER"), key, {iv:key}).toString());
        					this.dsLogin.setColumn(nRow , "CD_CORP", CryptoJS.AES.encrypt(this.dsDeptList.getColumn(this.dsDeptList.rowposition, "CD_CORP"), key, {iv:key}).toString());
        					this.dsLogin.setColumn(nRow , "CD_DEPT", CryptoJS.AES.encrypt(this.dsDeptList.getColumn(this.dsDeptList.rowposition, "CD_DEPT"), key, {iv:key}).toString());

        					this.fnUserInfo();
        				} else {
        					this.gfnGyumjikOpen(this.dsDeptList);
        				}
        				return;
        			}

        			alert("로그인에 실패하였습니다.");
        			break;

        		case "loginInfo":
        			if (this.dsUserInfo.rowcount == 1 ) {
        				//사용자테마 설정
        				var id_theme = this.dsUserInfo.getColumn(0, 'ID_THEME');

        				nexacro.setHTTPHeaderVariable("X-AUTH-TOKEN", this.gcToken);
        				nexacro.setEnvironmentVariable("LAST-DATE-TOKEN", new Date());

        				// 사용자 정보 글로벌데이타셋에 저장
        				this.objApp.gdsUserInfo.copyData(this.dsUserInfo);
        				this.objApp.gdsDeptInfo.copyData(this.dsDeptList);

        				var userInfo = this.objApp.gvUserInfo;
        				for(var i = 0; i < this.dsUserInfo.colinfos.length; i++) {
        					var col = this.dsUserInfo.colinfos[i].name;
        					userInfo[col] = this.dsUserInfo.getColumn(0, col);
        				}

        				this.dsUserInfo.clearData();
        				this.dsDeptList.clearData();

        				//gloval variable 세팅
        				var id_user = this.objApp.gdsUserInfo.getColumn(0,"ID_USER");
        				nexacro.setHTTPHeaderVariable("X-AUTH-USER", CryptoJS.AES.encrypt("[ERP] " + id_user, key, {iv:key}).toString());
        				nexacro.setEnvironmentVariable("evUserId", id_user);
        				nexacro.setEnvironmentVariable("evUserNm", this.objApp.gdsUserInfo.getColumn(0,"DS_HNAME"));

        				sessionStorage.setItem("tk", CryptoJS.AES.encrypt(this.gcToken, key, {iv:key}).toString());

        				window.history.pushState("erp","", "?v=1");
        				/*
        				if (system.navigatorname != "nexacro") {
        					var param = this.gfnGetUrlParam(location.href);

        					var urlparam = "?";
        					if(location.href.indexOf("?") > -1) {
        						urlparam = location.href.substr(location.href.indexOf("?"));
        						if(urlparam.indexOf("tk=") == -1) {
        							urlparam += "&";
        						}
        					}
        					if (urlparam.indexOf("tk=") == -1) {
        						window.history.pushState("erp","", urlparam + "tk=" + encId);
        					}
        					else if (param.tk != encId) {
        						window.history.pushState("erp","", urlparam.replace("tk="+param.tk, "tk="+encId));
        					}
        				}
        				*/

        				if (!this.gfnIsNull(id_theme) && !setDisplayTheme(id_theme)) {
        					return;
        				}

        				// 프레임 변경
        				this.fnSetSeprateFrame();
        				return;
        			} else {
        				this.divLogin.set_visible(true);
        			}
        			break;
        	}
        };

        this.gfnGyumjikOpen = function(ds, change) {
        	if(change == true) {
        		this.dsLogin.clearData();
        		this.dsDeptList.copyData(ds);
        	}
        	var sTitle = "부서선택";
        	var oArg = {deptList:ds};
        	var oOption = {title:sTitle};	//top, left를 지정하지 않으면 가운데정렬 //"top=20,left=370"

        	this.gfnOpenPopup("pop_gyumjik","cmm::cmmGyumjik.xfdl",oArg,"fnGyumjikCallback",oOption);
        };

        this.fnGyumjikCallback = function(strId, val) {
        	if (val != null) {

        		for(var i = this.objApp.gvWorkFrame.frames.length - 1; i >= 0; i--) {
        			this.objApp.gvMdiFrame.form.fnTabOnClose(this.objApp.gvWorkFrame.frames[i].name);
        		}

        		var dec_key = nexacro.getEnvironmentVariable("evKey");
        		var key = CryptoJS.enc.Hex.parse(dec_key.toString());

        		var json = JSON.parse(val);
        		var nRow = this.dsLogin.addRow();
        		this.dsLogin.setColumn(nRow , "ID_USER", CryptoJS.AES.encrypt(json.ID_USER, key, {iv:key}).toString());
        		this.dsLogin.setColumn(nRow , "CD_CORP", CryptoJS.AES.encrypt(json.CD_CORP, key, {iv:key}).toString());
        		this.dsLogin.setColumn(nRow , "CD_DEPT", CryptoJS.AES.encrypt(json.CD_DEPT, key, {iv:key}).toString());

        		this.fnUserInfo();
        	}
        };

        /************************************************************************************************
         * CRUD 및 TRANSACTION 서비스 호출 처리
         ************************************************************************************************/

        /************************************************************************************************
         * 사용자 FUNCTION 영역
         ************************************************************************************************/
        /**
         * 로그인 transaction
         * @param {string} reLoginYn
         * @return
         * @example
         *
         * @memberOf
         */
        this.fnLogin = function()
        {
        	var id = this.divLogin.form.div_login_info.form.div_login_info_input.form.edId.text;
        	var pw = this.divLogin.form.div_login_info.form.div_login_info_input.form.edPw.text;

        	if(this.gfnIsNull(id)) {
        		this.fnVaidateCallback = function() {
        			this.divLogin.form.edId.setFocus();
        		}
        		this.gfnAlert("아이디를 입력하세요.", "fnVaidateCallback");
        		return false;
        	}
        	if(this.gfnIsNull(pw)) {
        		this.fnVaidateCallback = function() {
        			this.divLogin.form.edPw.setFocus();
        		}
        		this.gfnAlert("비밀번호를 입력하세요.", "fnVaidateCallback");
        		return false;
        	}

        	this.gcToken = "";
        	nexacro.removeHTTPHeaderVariable("X-AUTH-TOKEN");
        	sessionStorage.removeItem("tk");

        	var dec_key = nexacro.getEnvironmentVariable("evKey");
        	var key = CryptoJS.enc.Hex.parse(dec_key.toString());

        	this.dsSearch = new Dataset();
        	this.dsSearch.addColumn("ID_USER", "string");
        	this.dsSearch.addColumn("ID_PASSWORD", "string");

        	this.dsSearch.addRow();
        	this.dsSearch.setColumn(0, "ID_USER", CryptoJS.AES.encrypt(id, key, {iv:key}).toString());
        	this.dsSearch.setColumn(0, "ID_PASSWORD", CryptoJS.AES.encrypt(pw, key, {iv:key}).toString());

        	var strSvcId    = "login";
        	var strSvcType  = "login";

        	var inProc		= "";
        	var inData      = "dsLogin=dsSearch";
        	var outData     = "dsDeptList=output0";
        	var strArg      = "";
        	var callBackFnc = "fnCallback";

        	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
        						strSvcType , 	// trabsaction을 요청할 구분
        						inProc,			// Procedure 정보 Dataset 이름
        						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
        						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
        						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
        						callBackFnc); // 통신방법 정의 [생략가능]
        };

        this.fnUserInfo = function(rowIndex)
        {
        	var strSvcId    = "loginInfo";
        	var strSvcType  = "loginInfo";

        	var inProc		= "";
        	var inData      = "dsLogin=dsLogin";
        	var outData     = "dsUserInfo=output0 dsDeptList=output1";
        	var strArg      = "";
        	var callBackFnc = "fnCallback";

        	if (system.navigatorname != "nexacro") {
        // 		var param = this.gfnGetUrlParam(location.href);
        // 		if (param.tk != null) {
        // 			strArg = "tk=" + param.tk;
        // 		}
        		if (sessionStorage.getItem("tk") != null) {
        			var dec_key = nexacro.getEnvironmentVariable("evKey");
        			var key = CryptoJS.enc.Hex.parse(dec_key.toString());
        			nexacro.setHTTPHeaderVariable("X-AUTH-TOKEN", CryptoJS.AES.decrypt(sessionStorage.getItem("tk"), key, {iv:key}).toString(CryptoJS.enc.Utf8));
        		}
        	}

        	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
        						strSvcType , 	// trabsaction을 요청할 구분
        						inProc,			// Procedure 정보 Dataset 이름
        						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
        						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
        						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
        						callBackFnc); // 통신방법 정의 [생략가능]
        };

        /**
        * 로그인 성공시 처리 프레임 변경 등...
        * @return
        * @example
        * @memberOf
        */
        this.fnSetSeprateFrame = function()
        {
        	if(nexacro.getEnvironmentVariable("evRunMode") == "2") {
        		if (this.objApp.mainframe.width < this.objApp.gvMaxWidth) {
        			this.objApp.mainframe.set_width(this.objApp.gvMaxWidth);
        		}
        	}

        	var url;
        	if(system.navigatorname == "nexacro") {
        		url = nexacro.getApplication().xadl;
        	} else {
        		url = window.location.href;
        	}
        	var param = this.gfnGetUrlParam(url);
        	if (param.ID_FORM != null) {
        		// 외부에서 화면으로 직접 링크
        		this.objApp.gvVFrameSet.set_separatesize("0,*,0");
        		this.objApp.gvHFrame.set_separatesize("0,*");
        		this.objApp.gvVFrameSet1.set_separatesize("0,0,*,0");
        		this.objApp.gvMainFrame.set_formurl("frame::frameWorkDirect.xfdl");

        	} else {
        		this.objApp.gvVFrameSet.set_separatesize("0,*,0");
        	}

        	// topframe argument setting
        	this.objApp.gvTopFrame.form.fnLoad();
        	this.objApp.gvTopFrame.form.fnSetName();

        	this.objApp.gvLeftFrame.form.fnSetModule();

        	//mainform 메인화면 구성 데이터 조회
        	this.objApp.gvMainFrame.form.fnSelect();
        };

        /************************************************************************************************
         * 각 COMPONENT 별 EVENT 영역
         ************************************************************************************************/
        this.divLogin_btnLogin_onclick = function(obj,e)
        {
        	this.fnLogin();	//서버와통신
        };

        this.divLogin_onkeyup = function(obj,e) {
        	if (e.keycode == 13) {
        		var id = this.divLogin.form.div_login_info.form.div_login_info_input.form.edId.text
        		var pw = this.divLogin.form.div_login_info.form.div_login_info_input.form.edPw.text;
        		if (!this.gfnIsNull(id) && !this.gfnIsNull(pw)) {
        			this.rememberMe();
        			this.fnLogin();	//서버와통신
        		}
        	}
        };

        this.divLogin_div_login_info_div00_chk00_onchanged = function(obj,e) {
        	this.rememberMe();
        };

        this.rememberMe = function() {
        	if (this.divLogin.form.div_login_info.form.div00.form.chk00.value) {
        		if (localStorage.getItem("nexa-id")) {
        			localStorage.removeItem("nexa-id");
        		}
        		localStorage.setItem("nexa-id", this.divLogin.form.div_login_info.form.div_login_info_input.form.edId.value);
        	} else {
        		localStorage.removeItem("nexa-id");
        	}
        }

        });
        
        // Regist UI Components Event
        this.on_initEvent = function()
        {
            this.addEventHandler("onload",this.form_onload,this);
            this.addEventHandler("onsize",this.form_onsize,this);
            this.divLogin.form.div_login_info.form.btnLogin.addEventHandler("onclick",this.divLogin_btnLogin_onclick,this);
            this.divLogin.form.div_login_info.form.div_login_info_input.form.edId.addEventHandler("onkeyup",this.divLogin_onkeyup,this);
            this.divLogin.form.div_login_info.form.div_login_info_input.form.edId.addEventHandler("onchanged",this.divLogin_edId_onchanged,this);
            this.divLogin.form.div_login_info.form.div_login_info_input.form.edPw.addEventHandler("onkeyup",this.divLogin_onkeyup,this);
            this.divLogin.form.div_login_info.form.div00.form.chk00.addEventHandler("onchanged",this.divLogin_div_login_info_div00_chk00_onchanged,this);
        };
        this.loadIncludeScript("frameLogin.xfdl");
        this.loadPreloadList();
        
        // Remove Reference
        obj = null;
    };
}
)();
