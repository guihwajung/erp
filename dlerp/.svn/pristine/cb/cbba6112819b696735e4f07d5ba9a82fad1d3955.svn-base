<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="계약진행현황" onload="DWA_SILHENG_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static id="sta00" taborder="1" text="현장코드" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfSite" CodeFindName="DZX_CFSITE" CDTextWidth="70" taborder="0" left="sta00:0.0" top="10.0" width="300" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DCBPR_ORDERPLANPROGRESS_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_SITE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_SITE"/>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();
this.bedata = "";
this.DWA_SILHENG_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();	
	
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
// 	this.FormBtns.Add.set_enable(false);
// 	this.FormBtns.Del.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnContract = this.gfnFormButtonAdd("btnContract", "fnContract");  
	this.btnSpecial = this.gfnFormButtonAdd("btnSpecial", "fnSpecial");  
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfSite = this.divSearch.form.ccfSite;
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.ccfSite.CodeFindName = "DZX_CFSITE";
	
	this.gfnGridInit(this.dxGrid, this.dsList, "DC", "DCB_ORDERPLANPROGRESS");
	this.dxGrid.addEventHandler("onselectchanged", this.fnGrid_RowCellChanged, this);
}

this.fnGrid_RowCellChanged = function(obj:nexacro.Grid,e:nexacro.GridSelectEventInfo)
{
	 if ((obj.oldrow > -1 && obj.oldrow == e.row)
		|| (obj.oldrow == -1 && e.oldrow != e.row)) {
		//console.log("타나");
		this.fnBtnCheckAll();
		//obj.oldrow = -1;
	}
}

this.fnBtnCheckAll = function()
{
	this.fnBtnCheck(this.btnContract, this.dsList);
	this.fnBtnCheck(this.btnSpecial, this.dsList);
}

this.fnBtnCheck = function(btn, ds)
{
	if(!this.gfnIsNull(btn.NM_COLUMN) && btn.IS_ENABLED == true)
	{
		if(ds.rowcount > 0)
		{
			if(ds.rowcount == 1 && this.gfnGetFlag(ds, 0) == "#")
				return;
		
			var row = ds.rowposition;
			
			if(row == -1) row = 0;
			
			if(ds.getColumn(row, btn.NM_COLUMN) == "Y")
				btn.set_enable(true);
			else
				btn.set_enable(false);	
		}
		else
			return;
	}
	return;
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_SITE", "string");
	this.dsSelect.addColumn("DS_PARAM", "string");

}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if(!this.fnValidate()) return;
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsSelect.setColumn(0, "DS_PARAM", this.FormInfo.DS_PARAM);
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnValidate = function() {
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "CD_SITE"))) {
		this.fnVaidateCallback = function() {
			this.ccfSite.form.CDTextBox.setFocus();
		}
		this.gfnAlert("현장코드는 필수입력 값입니다.");
		return false;
	}
	
	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{

	if (svcID == "select") {

		this.gfnGridAfterSelect(this.dxGrid);	
	
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

 
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		// 폼상태 초기화
		this.gfnSetFormStatus(this);	
		this.gfnGridClear(this.dxGrid);
	}
};

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};



// 계약일반사항 버튼 클릭시 팝업화면 호출
this.fnContract = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	// 선택된 row가 있을 경우에만 팝업을 띄움
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }

	var nRow = this.dsList.rowposition;
	var param = {};
	param.CD_SITE = this.dsSearch.getColumn(0, "CD_SITE");
	param.DS_SITE = this.ccfSite.form.DSTextBox.value;
	param.NO_CONT = this.dsList.getColumn(nRow, "NO_HADOCONT");
	param.DS_SUBCON = this.dsList.getColumn(nRow, "DS_HADOCONT");
	param.SN_SEQ = this.dsList.getColumn(nRow, "SN_SEQ");

	this.gfnFormOpen("DCC", "DCC_CONTRACT_SELECT", "", param, 950, 750);	
}

this.fnSpecial = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }

	var nRow = this.dsList.rowposition;
	var param = {};
	param.CD_SITE = this.dsSearch.getColumn(0, "CD_SITE");
	param.DS_SITE = this.ccfSite.form.DSTextBox.value;
	param.NO_HADOCONT = this.dsList.getColumn(nRow, "NO_HADOCONT");
	param.DS_HADOCONT = this.dsList.getColumn(nRow, "DS_HADOCONT");
	param.SN_SEQ = this.dsList.getColumn(nRow, "SN_SEQ");

	this.gfnFormOpen("DCC", "DCC_REQDETAILSAV_SPECIAL", "", param, 950, 750);	
}
]]></Script>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfSite.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
    </Bind>
  </Form>
</FDL>
