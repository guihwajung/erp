(function()
{
    return function()
    {
        if (!this._is_form)
            return;
        
        var obj = null;
        
        this.on_create = function()
        {
            this.set_name("DAU_SALARYDEPTLIST_DLG");
            this.set_titletext("급여대장");
            this.getSetter("maxwidth").set("388");
            this.getSetter("maxheight").set("288");
            if (Form == this.constructor)
            {
                this._setFormPosition(348,213);
            }
            
            // Object(Dataset, ExcelExportObject) Initialize
            obj = new Dataset("dsList", this);
            obj._setContents("");
            this.addChild(obj.name, obj);


            obj = new Dataset("_dsProc", this);
            obj._setContents("<ColumnInfo><Column id=\"TARGET\" type=\"STRING\" size=\"256\"/><Column id=\"SP\" type=\"STRING\" size=\"256\"/></ColumnInfo><Rows><Row><Col id=\"TARGET\">report</Col><Col id=\"SP\">DAUPR_SALARYDEPTLIST_MAIN</Col></Row><Row><Col id=\"TARGET\">salaryDsAllow</Col><Col id=\"SP\">DAUPR_SALARYDEPTLIST_DSALLOW</Col></Row><Row><Col id=\"TARGET\">salaryDsSubst</Col><Col id=\"SP\">DAUPR_SALARYDEPTLIST_DSSUBST</Col></Row></Rows>");
            this.addChild(obj.name, obj);


            obj = new Dataset("dsData", this);
            obj._setContents("<ColumnInfo><Column id=\"YM_BASE\" type=\"STRING\" size=\"256\"/><Column id=\"CD_CORP\" type=\"STRING\" size=\"256\"/><Column id=\"DS_CORP\" type=\"STRING\" size=\"256\"/><Column id=\"TY_SALARY\" type=\"STRING\" size=\"256\"/><Column id=\"SN_SALARY\" type=\"STRING\" size=\"256\"/><Column id=\"OP_PRINT\" type=\"STRING\" size=\"256\"/><Column id=\"OD_PRINT\" type=\"STRING\" size=\"256\"/><Column id=\"CD_DEPT\" type=\"STRING\" size=\"256\"/><Column id=\"DS_DEPT\" type=\"STRING\" size=\"256\"/></ColumnInfo><Rows><Row><Col id=\"YM_BASE\"/></Row></Rows>");
            this.addChild(obj.name, obj);


            obj = new Dataset("dsTY_SALARY", this);
            obj._setContents("<ColumnInfo><Column id=\"CODE\" type=\"STRING\" size=\"256\"/><Column id=\"VALUE\" type=\"STRING\" size=\"256\"/></ColumnInfo><Rows><Row><Col id=\"CODE\">S</Col><Col id=\"VALUE\">급여</Col></Row><Row><Col id=\"VALUE\">상여</Col><Col id=\"CODE\">B</Col></Row><Row><Col id=\"VALUE\">성과급</Col><Col id=\"CODE\">X</Col></Row></Rows>");
            this.addChild(obj.name, obj);


            obj = new Dataset("dsSN_SALARY", this);
            obj._setContents("<ColumnInfo><Column id=\"CODE\" type=\"STRING\" size=\"256\"/><Column id=\"VALUE\" type=\"STRING\" size=\"256\"/></ColumnInfo><Rows><Row><Col id=\"CODE\">1</Col><Col id=\"VALUE\">1</Col></Row><Row><Col id=\"VALUE\">2</Col><Col id=\"CODE\">2</Col></Row><Row><Col id=\"CODE\">3</Col><Col id=\"VALUE\">3</Col></Row><Row><Col id=\"CODE\">4</Col><Col id=\"VALUE\">4</Col></Row><Row><Col id=\"CODE\">5</Col><Col id=\"VALUE\">5</Col></Row><Row><Col id=\"CODE\">6</Col><Col id=\"VALUE\">6</Col></Row><Row><Col id=\"CODE\">7</Col><Col id=\"VALUE\">7</Col></Row><Row><Col id=\"CODE\">8</Col><Col id=\"VALUE\">8</Col></Row><Row><Col id=\"CODE\">9</Col><Col id=\"VALUE\">9</Col></Row><Row><Col id=\"CODE\">10</Col><Col id=\"VALUE\">10</Col></Row></Rows>");
            this.addChild(obj.name, obj);


            obj = new Dataset("dsReportSalaryDsAllow", this);
            obj._setContents("");
            this.addChild(obj.name, obj);


            obj = new Dataset("dsReportSalaryDsSubst", this);
            obj._setContents("");
            this.addChild(obj.name, obj);
            
            // UI Components Initialize
            obj = new Div("divData","0","0",null,null,"0","0",null,null,null,null,this);
            obj.set_taborder("0");
            obj.set_cssclass("div_DATA_Bg");
            this.addChild(obj.name, obj);

            obj = new Static("staTITLE","0","-5","344","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("8");
            obj.set_text("급여대장");
            obj.set_cssclass("sta_TITLE_Bg");
            obj.set_textAlign("left");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staYM_BASE","0","staTITLE:5","87","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("16");
            obj.set_text("기준년월");
            obj.set_visible("true");
            obj.set_cssclass("sta_WF_tablelabelE");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staYM_BASE_bg","staYM_BASE:-1","staYM_BASE:-30","262","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("17");
            obj.set_cssclass("sta_WF_tablebg");
            obj.set_visible("true");
            this.divData.addChild(obj.name, obj);

            obj = new Div("ctclYM_BASE","staYM_BASE:5","staYM_BASE:-25","80","20",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("0");
            obj.set_url("cmm::cmmCalMM.xfdl");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staCD_CORP","0","staYM_BASE:-1","87","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("13");
            obj.set_text("법인");
            obj.set_visible("true");
            obj.set_cssclass("sta_WF_tablelabelE");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staCD_CORP_bg","staCD_CORP:-1","staCD_CORP:-30","262","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("15");
            obj.set_cssclass("sta_WF_tablebg");
            obj.set_visible("true");
            this.divData.addChild(obj.name, obj);

            obj = new Div("ccfCD_CORP","staCD_CORP:5","staCD_CORP:-25","250","20",null,null,null,null,null,null,this.divData.form);
            obj.getSetter("CodeFindName").set("DAX_CFCORP2");
            obj.getSetter("CDTextWidth").set("50");
            obj.set_taborder("1");
            obj.set_url("cmm::cmmCodeFind.xfdl");
            obj.set_text("");
            obj.set_visible("true");
            obj.getSetter("BeforeUserDataSetParam").set("fnBeforeUserDataSetParam");
            obj.getSetter("AfterCDTextChanged").set("fnAfterCDTextChanged");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staTY_SALARY","0","staCD_CORP:-1","87","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("9");
            obj.set_text("지급구분");
            obj.set_visible("true");
            obj.set_cssclass("sta_WF_tablelabelE");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staTY_SALARY_bg","staTY_SALARY:-1","staTY_SALARY:-30","262","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("14");
            obj.set_cssclass("sta_WF_tablebg");
            obj.set_visible("true");
            this.divData.addChild(obj.name, obj);

            obj = new Combo("cboTY_SALARY","staTY_SALARY:5","staTY_SALARY:-25","80","20",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("2");
            obj.set_innerdataset("dsTY_SALARY");
            obj.set_datacolumn("VALUE");
            obj.set_codecolumn("CODE");
            obj.set_readonly("false");
            obj.set_text("급여");
            obj.set_value("S");
            obj.set_index("0");
            this.divData.addChild(obj.name, obj);

            obj = new Combo("cboSN_SALARY","cboTY_SALARY:5","staTY_SALARY:-25","50","20",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("3");
            obj.set_innerdataset("dsSN_SALARY");
            obj.set_datacolumn("VALUE");
            obj.set_codecolumn("CODE");
            obj.set_readonly("false");
            obj.set_text("1");
            obj.set_value("1");
            obj.set_index("0");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staOP_PRINT","0","staTY_SALARY:-1","87","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("11");
            obj.set_text("출력옵션");
            obj.set_cssclass("sta_WF_tablelabel");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staOP_PRINT_bg","staOP_PRINT:-1","staOP_PRINT:-30","262","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("12");
            obj.set_cssclass("sta_WF_tablebg");
            obj.set_text("");
            this.divData.addChild(obj.name, obj);

            obj = new Combo("cboOP_PRINT","staOP_PRINT:5","staOP_PRINT:-25","80","20",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("5");
            obj.set_datacolumn("datacolumn");
            obj.set_codecolumn("codecolumn");
            obj.set_readonly("false");
            var divData_form_cboOP_PRINT_innerdataset = new nexacro.NormalDataset("divData_form_cboOP_PRINT_innerdataset", obj);
            divData_form_cboOP_PRINT_innerdataset._setContents("<ColumnInfo><Column id=\"codecolumn\" size=\"256\"/><Column id=\"datacolumn\" size=\"256\"/></ColumnInfo><Rows><Row><Col id=\"datacolumn\">전체</Col><Col id=\"codecolumn\">%</Col></Row><Row><Col id=\"datacolumn\">특정부서</Col><Col id=\"codecolumn\">1</Col></Row></Rows>");
            obj.set_innerdataset(divData_form_cboOP_PRINT_innerdataset);
            obj.set_text("전체");
            obj.set_value("0");
            obj.set_index("0");
            this.divData.addChild(obj.name, obj);

            obj = new Radio("rdoOD_PRINT","cboOP_PRINT:10","staOP_PRINT:-27","137","24",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("6");
            obj.set_codecolumn("codecolumn");
            obj.set_datacolumn("datacolumn");
            obj.set_direction("vertical");
            var divData_form_rdoOD_PRINT_innerdataset = new nexacro.NormalDataset("divData_form_rdoOD_PRINT_innerdataset", obj);
            divData_form_rdoOD_PRINT_innerdataset._setContents("<ColumnInfo><Column id=\"codecolumn\" size=\"256\"/><Column id=\"datacolumn\" size=\"256\"/></ColumnInfo><Rows><Row><Col id=\"codecolumn\">1</Col><Col id=\"datacolumn\">사번순</Col></Row><Row><Col id=\"codecolumn\">2</Col><Col id=\"datacolumn\">직급순</Col></Row></Rows>");
            obj.set_innerdataset(divData_form_rdoOD_PRINT_innerdataset);
            obj.set_text("특정사번");
            obj.set_value("1");
            obj.set_index("0");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staCD_DEPT","0","staOP_PRINT:-1","87","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("18");
            obj.set_text("특정부서");
            obj.set_cssclass("sta_WF_tablelabel");
            obj.set_visible("true");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staCD_DEPT_bg","staCD_DEPT:-1","staCD_DEPT:-30","262","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("19");
            obj.set_cssclass("sta_WF_tablebg");
            obj.set_visible("true");
            this.divData.addChild(obj.name, obj);

            obj = new Div("ccfCD_DEPT","staCD_DEPT:5","staCD_DEPT:-25","250","20",null,null,null,null,null,null,this.divData.form);
            obj.getSetter("CodeFindName").set("DAX_CFDEPT");
            obj.getSetter("CDTextWidth").set("80");
            obj.set_taborder("20");
            obj.set_url("cmm::cmmCodeFind.xfdl");
            obj.set_text("");
            obj.set_visible("true");
            obj.getSetter("BeforeUserDataSetParam").set("fnBeforeUserDataSetParam");
            obj.getSetter("AfterCDTextChanged").set("fnAfterCDTextChanged");
            obj.set_enable("false");
            this.divData.addChild(obj.name, obj);

            obj = new Div("divBtns","120","staCD_DEPT:10","130","27",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("7");
            this.divData.addChild(obj.name, obj);

            obj = new Button("btnOK","0","0","60","27",null,null,null,null,null,null,this.divData.form.divBtns.form);
            obj.set_taborder("1");
            obj.set_text("확인");
            this.divData.form.divBtns.addChild(obj.name, obj);

            obj = new Button("btnCANCLE","btnOK:10","0","60","27",null,null,null,null,null,null,this.divData.form.divBtns.form);
            obj.set_taborder("0");
            obj.set_text("취소");
            this.divData.form.divBtns.addChild(obj.name, obj);
            // Layout Functions
            //-- Default Layout : this
            obj = new Layout("default","",this._adjust_width,this._adjust_height,this,function(p){});
            this.addLayout(obj.name, obj);
            
            // BindItem Information
            obj = new BindItem("item0","divData.form.ctclYM_BASE.form.TextBox","value","dsData","YM_BASE");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item1","divData.form.ccfCD_CORP.form.CDTextBox","value","dsData","CD_CORP");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item2","divData.form.ccfCD_CORP.form.DSTextBox","value","dsData","DS_CORP");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item4","divData.form.cboTY_SALARY","value","dsData","TY_SALARY");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item3","divData.form.cboSN_SALARY","value","dsData","SN_SALARY");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item5","divData.form.cboOP_PRINT","value","dsData","OP_PRINT");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item6","divData.form.rdoOD_PRINT","value","dsData","OD_PRINT");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item7","divData.form.ccfCD_DEPT.form.CDTextBox","value","dsData","CD_DEPT");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item8","divData.form.ccfCD_DEPT.form.DSTextBox","value","dsData","DS_DEPT");
            this.addChild(obj.name, obj);
            obj.bind();
            
            // TriggerItem Information

        };
        
        this.loadPreloadList = function()
        {
            this._addPreloadList("fdl","cmm::cmmCalMM.xfdl");
            this._addPreloadList("fdl","cmm::cmmCodeFind.xfdl");
        };
        
        // User Script
        this.registerScript("DAU_SALARYDEPTLIST_DLG.xfdl", function() {
        this.objApp = this.gfnGetApplication();

        this.form_onload = function(obj, e) {
        	// -- 필수 -------------------//
        	this.gfnFormOnLoad(this);
        	this.gfnFormInfo(this);
        	// ---------------------------//

        	this.fnSetButton();
        	this.fnSetExtendButton();
        	this.fnSetVariable();
        	this.fnSetEvent();
        	this.fnSetParameter();
            this.fnSetCombo();
        	this.fnInit();
        }

        /************************************************************************
         * 버튼 설정 : 화면(Tab) 전환시 마다 호출
         * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
         ************************************************************************/
        this.fnSetButton = function() {

        }

        /************************************************************************
         * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
         ************************************************************************/
        this.fnSetExtendButton = function() {

        }

        /************************************************************************
         * 변수 선언
         ************************************************************************/
        this.fnSetVariable = function() {
        	this.ctclYM_BASE  = this.divData.form.ctclYM_BASE;	// 기준년월
        	this.ccfCD_CORP   = this.divData.form.ccfCD_CORP;	// 법인
        	this.cboTY_SALARY = this.divData.form.cboTY_SALARY;	// 지급구분
        	this.cboSN_SALARY = this.divData.form.cboSN_SALARY;	// 지급차수
        	this.cboOP_PRINT  = this.divData.form.cboOP_PRINT;	// 출력옵션
        	this.rdoOD_PRINT  = this.divData.form.rdoOD_PRINT;	// 출력옵션
        	this.ccfCD_DEPT   = this.divData.form.ccfCD_DEPT;	// 특정부서
        }

        /************************************************************************
         * 이벤트 설정
         ************************************************************************/
        this.fnSetEvent = function() {
        	this.ccfCD_CORP.BeforeUserDataSetParam  = "fnBeforeUserDataSetParam";	// 법인
        	this.ccfCD_CORP.AfterCDTextChanged      = "fnAfterCDTextChanged";
        	this.ccfCD_DEPT.BeforeUserDataSetParam  = "fnBeforeUserDataSetParam"	// 특정부서
        	this.ccfCD_DEPT.AfterCDTextChanged      = "fnAfterCDTextChanged";
        }

        /************************************************************************
         * 파라미터 설정
         ************************************************************************/
        this.fnSetParameter = function() {
        	this.dsReport = new Dataset();
        	this.dsReport.addColumn("YM_SALARY", "string");
        	this.dsReport.addColumn("YM_SALARY_TO", "string");
        	this.dsReport.addColumn("TY_SALARY", "string");
        	this.dsReport.addColumn("SN_SALARY", "string");
        	this.dsReport.addColumn("CD_ORG2", "string");
        	this.dsReport.addColumn("TY_EMPTYPE", "string");
        	this.dsReport.addColumn("CD_CORP", "string");
        	this.dsReport.addColumn("TY_SORT", "string");
        	this.dsReport.addColumn("ID_SABUN", "string");
        	this.dsReport.addColumn("TY_GUBUN", "string");

        	this.dsAllow = new Dataset();
        	this.dsAllow.addColumn("CD_CORP", "string");
        	this.dsAllow.addColumn("YM_SALARY", "string");
        	this.dsAllow.addColumn("TY_SALARY", "string");
        	this.dsAllow.addColumn("SN_SALARY", "int");
        	this.dsAllow.addColumn("TY_GUBUN", "string");
        	this.dsAllow.addColumn("YM_SALARY_TO", "string");
        	this.dsAllow.addColumn("ID_SABUN", "string");

        	this.dsSubst = new Dataset();
        	this.dsSubst.addColumn("CD_CORP", "string");
        	this.dsSubst.addColumn("YM_SALARY", "string");
        	this.dsSubst.addColumn("TY_SALARY", "string");
        	this.dsSubst.addColumn("SN_SALARY", "int");
        	this.dsSubst.addColumn("TY_GUBUN", "string");
        	this.dsSubst.addColumn("YM_SALARY_TO", "string");
        	this.dsSubst.addColumn("ID_SABUN", "string");
        }

        /************************************************************************
         * 콤보 데이터 조회 및 설정
         ************************************************************************/
        this.fnSetCombo = function() {

        }

        /************************************************************************
         * 화면 및 검색영역 초기화
         ************************************************************************/
        this.fnInit = function() {
        	this.dsData.setColumn(0, "YM_BASE"  , this.gfnGetDate().substr(0, 6));	// 기준년월
        	this.dsData.setColumn(0, "CD_CORP"  , this.AuthClient.CD_CORP);			// 법인
        	this.dsData.setColumn(0, "DS_CORP"  , this.AuthClient.DS_CORP);
        	this.dsData.setColumn(0, "TY_SALARY", "S");								// 지급구분 S: 급여, B: 상여, X: 성과금
        	this.dsData.setColumn(0, "SN_SALARY", "1");								// 지급차수
        	this.dsData.setColumn(0, "OP_PRINT" , "%");								// 출력옵션
        	this.dsData.setColumn(0, "OD_PRINT" , "1");								// 정렬옵션 1: 사번순, 2: 직급순
        }

        /************************************************************************
         * 컨트롤 이벤트
         ************************************************************************/
         /*
          *	조회 버튼
          */
        this.fnSelect = function() {

        }

        /*
         * 추가 버튼
         */
        this.fnAdd = function() {

        }

        /*
         * 삭제 버튼
         */
        this.fnDel = function() {

        }

        /*
         * 저장 버튼
         */
        this.fnSave = function() {

        }

        /*
         * 엑셀 버튼
         */
        this.fnExcel = function() {

        }

        /*
         * 출력 버튼
         */
        this.fnPrint = function() {

        }

        /************************************************************************
         * Validate
         ************************************************************************/
        this.fnSelectValidate = function() {
         	var validate = true;

        	// 기준년월
        	if (this.gfnIsNull(this.dsData.getColumn(0, "YM_BASE"))) {
        		validate = false;
        		this.fnVaidateCallback = function() {
        			this.ctclYM_BASE.form.TextBox.setFocus();
        		}
        		this.gfnAlert("기준년월을 입력하세요.");
        		return validate;
        	}

        	// 법인
        	if (this.gfnIsNull(this.dsData.getColumn(0, "CD_CORP"))) {
        		validate = false;
        		this.fnVaidateCallback = function() {
        			this.ccfCD_CORP.form.CDTextBox.setFocus();
        		}
        		this.gfnAlert("법인코드를 입력하세요.", "fnVaidateCallback");
        		return validate;
        	}

         	return validate;
        }

        /************************************************************************
         * 확장버튼 이벤트
         ************************************************************************/
        // 확인 버튼
        this.btnOK_onclick = function(obj, e) {
        	this.fnOk("S");
        }

        this.fnOk = function(callType) {
        	if (!this.fnSelectValidate()) return false;

        	this.dsReport.clearData();
        	var nrow = this.dsReport.addRow();
        	this.dsReport.setColumn(nrow, "YM_SALARY"   , this.dsData.getColumn(0, "YM_BASE"));
        	this.dsReport.setColumn(nrow, "YM_SALARY_TO", this.dsData.getColumn(0, "YM_BASE"));
        	this.dsReport.setColumn(nrow, "TY_SALARY"   , this.dsData.getColumn(0, "TY_SALARY"));
        	this.dsReport.setColumn(nrow, "SN_SALARY"   , this.dsData.getColumn(0, "SN_SALARY"));
        	this.dsReport.setColumn(nrow, "CD_ORG2"     , this.dsData.getColumn(0, "CD_DEPT"));
        	this.dsReport.setColumn(nrow, "TY_EMPTYPE"  , "1");  // 화면삭제로 인해 일반(1)으로 일단 넘김
        	this.dsReport.setColumn(nrow, "CD_CORP"     , this.dsData.getColumn(0, "CD_CORP"));
        	this.dsReport.setColumn(nrow, "TY_SORT"     , this.dsData.getColumn(0, "OD_PRINT"));
        	this.dsReport.setColumn(nrow, "TY_GUBUN"    , "Z");
        	this.dsReport.setColumn(nrow, "ID_SABUN"    , this.AuthClient.ID_SABUN);

        	this.dsAllow.clearData();
        	this.dsAllow.addRow();
        	this.dsAllow.setColumn(0, "CD_CORP"     , this.dsData.getColumn(0, "CD_CORP"));
        	this.dsAllow.setColumn(0, "YM_SALARY"   , this.dsData.getColumn(0, "YM_BASE"));
        	this.dsAllow.setColumn(0, "TY_SALARY"   , this.dsData.getColumn(0, "TY_SALARY"));
        	this.dsAllow.setColumn(0, "SN_SALARY"   , this.dsData.getColumn(0, "SN_SALARY"));
        	this.dsAllow.setColumn(0, "TY_GUBUN"    , "Z");
        	this.dsAllow.setColumn(0, "YM_SALARY_TO", this.dsData.getColumn(0, "YM_BASE"));
        	this.dsAllow.setColumn(0, "ID_SABUN"    , this.AuthClient.ID_SABUN);

        	this.dsSubst.clearData();
        	this.dsSubst.addRow();
        	this.dsSubst.setColumn(0, "CD_CORP"     , this.dsData.getColumn(0, "CD_CORP"));
        	this.dsSubst.setColumn(0, "YM_SALARY"   , this.dsData.getColumn(0, "YM_BASE"));
        	this.dsSubst.setColumn(0, "TY_SALARY"   , this.dsData.getColumn(0, "TY_SALARY"));
        	this.dsSubst.setColumn(0, "SN_SALARY"   , this.dsData.getColumn(0, "SN_SALARY"));
        	this.dsSubst.setColumn(0, "TY_GUBUN"    , "Z");
        	this.dsSubst.setColumn(0, "YM_SALARY_TO", this.dsData.getColumn(0, "YM_BASE"));
        	this.dsSubst.setColumn(0, "ID_SABUN"    , this.AuthClient.ID_SABUN);

        	if (callType == "S") {
        		var strSvcId    = "select";
        		var strSvcType  = "grid";
        		var inProc      = "_dsProc";
        		var inData      = "report=dsReport salaryDsAllow=dsAllow salaryDsSubst=dsSubst";;
        		var outData     = "dsList=report0 dsReportSalaryDsAllow=salaryDsAllow0 dsReportSalaryDsSubst=salaryDsSubst0";
        		var strArg      = "";
        		var callBackFnc = "fnCallback";

        		this.gfnTransaction(strSvcId,		// transaction을 구분하기 위한 svc id값
        							strSvcType, 	// transaction을 요청할 구분
        							inProc,			// Procedure 정보 Dataset 이름
        							inData, 		// 입력값으로 보낼 dataset id, a=b형태로 실제이름과 입력이름을 매칭
        							outData, 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
        							strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
        							callBackFnc);	// 통신방법 정의 [생략가능]
        	} else {
        		var inProc      = "_dsProc";
        		var inParam     = "";	// 조회SP이외 사용할 정보
        		var inData      = "report=dsReport salaryDsAllow=dsAllow salaryDsSubst=dsSubst";
        		var reportpath = "/da/dau/DAU_SALARYDEPTLIST_DLG.ozr";

        		gfnOpenReport(this, reportpath, inProc, inParam, inData);
        	}
        }

        // 취소 버튼
        this.btnCANCLE_onclick = function(obj, e) {
        	this.getParentContext().close(false);
        }

        /************************************************************************
         * 콜백 이벤트
         ************************************************************************/
        /*
         * 기본 콜백
         */
        this.fnCallback = function(svcID, errorCode, errorMsg) {
        	if (svcID == "select") {
        		if (this.dsList.rowcount == 0) {
        			this.gfnAlert("조회된 데이타가 없습니다.");
        			return;
        		} else {
        			this.fnOk("P");
        		}
        	}
        }

        // 개인집계 부서집계
        this.rdoTY_WORK_onitemchanged = function(obj, e) {
        	var visible = false;
        	if (obj.value == 'A') {	//개인집계
        		visible = true;
        		if (this.staCD_DEPT.visible) {
        			this.staCD_DEPT.set_top(this.staCD_DEPT.top + 30);
        			this.ccfCD_DEPT.set_top(this.ccfCD_DEPT.top + 30);
        			this.sta00.set_top(this.sta00.top + 30);
        		}
        	} else {
        		if (this.staCD_DEPT.visible) {
        			this.staCD_DEPT.set_top(this.staCD_DEPT.top - 30);
        			this.ccfCD_DEPT.set_top(this.ccfCD_DEPT.top - 30);
        			this.sta00.set_top(this.sta00.top - 30);
        		}
        	}

        	this.staOP_PRINT.set_visible(visible);
        	this.cboOP_PRINT.set_visible(visible);
        	this.rdoOD_PRINT.set_visible(visible);
        	this.sta11.set_visible(visible);
        }

        // 특정부서
        this.cboOP_PRINT_onitemchanged = function(obj, e) {
        	if (obj.value == "%") {
        		this.ccfCD_DEPT.set_enable(false);
        	} else {
        		this.ccfCD_DEPT.set_enable(true);
        	}
        	this.dsData.setColumn(0, "CD_DEPT", "");
        	this.dsData.setColumn(0, "DS_DEPT", "");
        }

        /************************************************************************
         * 코드파인드 이벤트
         ************************************************************************/
        this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
         	switch (id) {
        	case "ccfCD_CORP":	// 법인코드
        		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
        		dsUserParam.setColumn(nrow, "CD_DEPT"  , this.AuthClient.CD_DEPT);
        		break;

        	case "ccfCD_DEPT":	// 부서코드
        		if (this.gfnIsNull(this.dsData.getColumn(0, "CD_CORP"))) {
        			this.fnBeforeUserCallback = function() {
        				this.ccfCD_CORP.form.CDTextBox.setFocus();
        			}
        			this.gfnAlert("법인코드를 입력하세요.", "fnBeforeUserCallback");
        			return false;
        		}
        		dsUserParam.setColumn(nrow, "GR_SEARCH" , this.FormInfo.GR_SEARCH);
        		dsUserParam.setColumn(nrow, "CD_DEPT"   , "%");
        		dsUserParam.setColumn(nrow, "CD_CORP"   , this.dsData.getColumn(0, "CD_CORP"));
        		dsUserParam.setColumn(nrow, "YN_CURRENT", "");
        		break;
         	}

         	return true;
        }

        this.fnAfterCDTextChanged = function(id, codeFindData) {
        	var arr = codeFindData;
        	switch (id) {

        	}
        }

        /************************************************************************
         * 그리드 이벤트
         ************************************************************************/
        this.fnGridBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
        	return true;
        }

        this.fnGridAfterCDTextChanged = function(id, codeFindData) {

        }

        /************************************************************************
         * 기타 이벤트
         ************************************************************************/
        this.dsSearch_onvaluechanged = function(obj,e){
        	if(e.oldvalue != e.newvalue) {
        		this.gfnSetFormStatus(this);	// 폼상태 초기화
        		this.gfnGridClear(this.dxGrid);
        	}
        }

        });
        
        // Regist UI Components Event
        this.on_initEvent = function()
        {
            this.addEventHandler("onload",this.form_onload,this);
            this.divData.form.cboTY_SALARY.addEventHandler("onitemchanged",this.fnSearchInit,this);
            this.divData.form.cboOP_PRINT.addEventHandler("onitemchanged",this.cboOP_PRINT_onitemchanged,this);
            this.divData.form.divBtns.form.btnOK.addEventHandler("onclick",this.btnOK_onclick,this);
            this.divData.form.divBtns.form.btnCANCLE.addEventHandler("onclick",this.btnCANCLE_onclick,this);
        };
        this.loadIncludeScript("DAU_SALARYDEPTLIST_DLG.xfdl");
        this.loadPreloadList();
        
        // Remove Reference
        obj = null;
    };
}
)();
