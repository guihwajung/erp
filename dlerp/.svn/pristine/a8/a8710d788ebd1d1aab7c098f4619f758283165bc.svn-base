<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="DAV_YEARENDTRANSDLG" width="340" height="270" maxwidth="395" maxheight="340" titletext="정산결과 급여이관" onload="form_onload">
    <Layouts>
      <Layout>
        <Static id="staTITLE" taborder="0" text="연말정산 급여이관" left="0" top="10" height="30" cssclass="sta_TITLE_Bg" textAlign="left" right="3"/>
        <Static id="staCD_CORP" taborder="2" text="법인" left="0" top="102" width="100" height="30" cssclass="sta_WF_tablelabel" visible="true"/>
        <Static id="sta06" taborder="3" left="99" top="102" width="241" height="30" cssclass="sta_WF_tablebg" visible="true"/>
        <Static id="staID_RESIDENT" taborder="4" text="특정사번" left="0" top="staCD_CORP:-1" width="100" height="30" cssclass="sta_WF_tablelabel"/>
        <Static id="sta08" taborder="5" left="99" top="131" width="241" height="30" cssclass="sta_WF_tablebg"/>
        <Div id="ccfCD_CORP" CodeFindName="DAX_CFCORP_CODEFIND" CDTextWidth="30" taborder="1" left="staCD_CORP:5" top="107" width="228" height="20" url="cmm::cmmCodeFind.xfdl" text="" visible="true" BeforeUserDataSetParam="fnBeforeUserDataSetParam" AfterCDTextChanged="fnAfterCDTextChanged"/>
        <Div id="divBtns" left="69" top="234" width="200" height="27" taborder="6">
          <Layouts>
            <Layout>
              <Button id="btnCANCLE" taborder="0" text="취소" left="114" top="0" width="60" height="27" onclick="btnCANCLE_onclick"/>
              <Button id="btnOK" taborder="1" text="확인" left="28" top="0" width="60" height="27" onclick="btnOK_onclick"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="ccfID_RESIDENT" CDTextWidth="110" taborder="7" left="staID_RESIDENT:5" top="136" width="228" height="20" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DAX_CFEMP" BeforeUserDataSetParam="fnBeforeUserDataSetParam" AfterCDTextChanged="fnAfterCDTextChanged"/>
        <Static id="staWORK_BASE" taborder="8" text="적용년월" left="0" top="44" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
        <Static id="sta04" taborder="9" left="99" top="44" width="241" height="30" cssclass="sta_WF_tablebg" onclick="sta04_onclick" textAlign="right"/>
        <Div id="ctclWORK_BASE" taborder="10" left="staWORK_BASE:5" top="49" width="80" height="20" url="cmm::cmmCalMM.xfdl"/>
        <Static id="staYM_SALARY" taborder="11" text="급여이관년월" left="0" top="73" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
        <Static id="sta00" taborder="12" left="99" top="73" width="100" height="30" cssclass="sta_WF_tablebg" onclick="sta04_onclick" textAlign="right"/>
        <Div id="ctclYM_SALARY" taborder="13" left="staYM_SALARY:5" top="78" width="80" height="20" url="cmm::cmmCalMM.xfdl"/>
        <Static id="staSN_SALARY" taborder="14" text="지급순서" left="198" top="73" width="80" height="30" cssclass="sta_WF_tablelabelE"/>
        <Static id="sta01" taborder="15" left="277" top="73" width="63" height="30" cssclass="sta_WF_tablebg" onclick="sta04_onclick" textAlign="right"/>
        <Combo id="cboSN_SALARY" taborder="16" left="283" top="78" width="50" height="20" codecolumn="CODE" datacolumn="VALUE" value="1" text="비과세 포함" index="0" innerdataset="dsSN_SALARY"/>
        <TextArea id="txt00" taborder="17" left="0" top="170" height="54" value="◆ 자료가 존재할 경우에는 삭제하고 재생성합니다.&#10;&#10;◆ 중도정산일 경우 적용월을 입력하십시오." border="0px none" right="3"/>
        <Combo id="cboYN_MID" taborder="18" left="346" top="49" width="77" height="20" innerdataset="innerdataset" datacolumn="datacolumn" codecolumn="codecolumn" index="0" value="1" onitemchanged="fnSearchInit" text="연말정산" visible="false">
          <Dataset id="innerdataset">
            <ColumnInfo>
              <Column id="codecolumn" size="256"/>
              <Column id="datacolumn" size="256"/>
            </ColumnInfo>
            <Rows>
              <Row>
                <Col id="datacolumn">연말정산</Col>
                <Col id="codecolumn">N</Col>
              </Row>
              <Row>
                <Col id="datacolumn">중도정산</Col>
                <Col id="codecolumn">Y</Col>
              </Row>
            </Rows>
          </Dataset>
        </Combo>
        <Edit id="edtNO_APPLY" taborder="19" left="346" top="108" width="79" height="20" visible="false"/>
        <Edit id="edtID_SABUN" taborder="20" left="347" top="78" width="79" height="20" visible="false"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);
	this.gfnFormInfo(this);
	// ---------------------------//

	this.fnSetButton();
	//this.fnSetExtendButton(); 
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	
	//작업구분
	this.cboYN_MID.set_value(this.getOwnerFrame().YN_MID);
	
	//적용년도(현재)
	this.ctclWORK_BASE.set_url(this.cboYN_MID.value=="Y"?"cmm::cmmCalMM.xfdl":"cmm::cmmCalYY.xfdl");
	this.ctclWORK_BASE.form.TextBox.set_value(this.getOwnerFrame().YR_BASE);
	this.staWORK_BASE.set_text(this.cboYN_MID.value=="Y"?"적용년월":"적용년도");
	
	// 법인코드 및 법인명 기본세팅
	this.ccfCD_CORP.form.CDTextBox.set_value(this.getOwnerFrame().CD_CORP);
	this.ccfCD_CORP.form.DSTextBox.set_value(this.getOwnerFrame().DS_CORP); 
	
	//주민번호
	this.ccfID_RESIDENT.form.CDTextBox.set_value(nexacro.replaceAll(this.getOwnerFrame().ID_RESIDENT, "-", ""));
	this.ccfID_RESIDENT.form.DSTextBox.set_value(this.getOwnerFrame().DS_HNAME);	
	
	this.edtNO_APPLY.set_value(this.getOwnerFrame().NO_APPLY);
	//사번
	this.edtID_SABUN.set_value(this.getOwnerFrame().ID_SABUN);
	
	//급여이관년월
	this.ctclYM_SALARY.form.TextBox.set_value(this.gfnGetDate().substr(0,6));	
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
	// this.FormBtns.Add.set_enable(false);
	// this.FormBtns.Del.set_enable(false);
};

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {

	this.grSearch = this.FormInfo.GR_SEARCH;					          // 권한
	this.cdGroup = this.AuthClient.CD_GROUP;					          // 그룹코드
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {

};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	// 조회	
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("ID_SABUN", "string");
	this.dsSelect.addColumn("YM_BASE", "string");
	this.dsSelect.addColumn("NO_APPLY", "int");
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("YY_BASE", "string");
	this.dsSelect.addColumn("MM_BASE", "string");
	this.dsSelect.addColumn("YN_MID", "string");
		
	//수정
	this.dsUpdate = new Dataset();
	this.dsUpdate.addColumn("ID_RESIDENT", "string");
	this.dsUpdate.addColumn("YY_BASE", "string");
	this.dsUpdate.addColumn("MM_BASE", "string");
	this.dsUpdate.addColumn("NO_APPLY", "int");
	this.dsUpdate.addColumn("YN_MID", "string");
	this.dsUpdate.addColumn("YM_SALARY", "string");
	this.dsUpdate.addColumn("TY_SALARY", "string");
	this.dsUpdate.addColumn("SN_SALARY", "int");
	this.dsUpdate.addColumn("ID_INSERT", "string");
	this.dsUpdate.addColumn("CD_CORP", "string");
	
	
};

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {

	if (!this.fnSelectValidate()) return false;

	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "ID_SABUN", this.edtID_SABUN.value);
	this.dsSelect.setColumn(0, "YM_BASE", this.ctclYM_SALARY.form.TextBox.value);
	this.dsSelect.setColumn(0, "NO_APPLY", this.edtNO_APPLY.value);
	this.dsSelect.setColumn(0, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
	this.dsSelect.setColumn(0, "YY_BASE", this.cboYN_MID.value=="Y"?this.ctclWORK_BASE.form.TextBox.value:this.ctclWORK_BASE.form.TextBox.value.substring(0,4));  
	this.dsSelect.setColumn(0, "MM_BASE", "12");
	//this.dsSelect.setColumn(0, "MM_BASE", this.cboYN_MID.value=="Y"?this.ctclWORK_BASE.form.TextBox.value.substring(4,6):"12");
	this.dsSelect.setColumn(0, "YN_MID", this.cboYN_MID.value);   	

	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";

	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 	    // 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
};

this.fnExcute = function(){

	this.dsUpdate.clearData();
	var nrow = this.dsUpdate.addRow();
	
	this.dsUpdate.setColumn(nrow, "ID_RESIDENT", this.ccfID_RESIDENT.form.CDTextBox.value);
	this.dsUpdate.setColumn(nrow, "YY_BASE", this.cboYN_MID.value=="Y"?this.ctclWORK_BASE.form.TextBox.value:this.ctclWORK_BASE.form.TextBox.value.substring(0,4));   		
	this.dsUpdate.setColumn(nrow, "MM_BASE", this.cboYN_MID.value=="Y"?this.ctclWORK_BASE.form.TextBox.value.substring(4,6):"12");
	this.dsUpdate.setColumn(nrow, "NO_APPLY", this.edtNO_APPLY.value);
	this.dsUpdate.setColumn(nrow, "YN_MID", this.cboYN_MID.value);
	this.dsUpdate.setColumn(nrow, "YM_SALARY", this.ctclYM_SALARY.form.TextBox.value);
	this.dsUpdate.setColumn(nrow, "TY_SALARY", "S");
	this.dsUpdate.setColumn(nrow, "SN_SALARY", this.cboSN_SALARY.value);
	this.dsUpdate.setColumn(nrow, "ID_INSERT", this.AuthClient.ID_USER);
	this.dsUpdate.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);

	var strSvcId    = "save";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "update=dsUpdate";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";

	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 	    // 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
};
 /************************************************************************
 * Validate
 ************************************************************************/
this.fnSelectValidate = function() {

 	var validate = true;

	//법인
	if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
		validate = false;
		this.fnVaidateCallback = function() {
			this.ccfCD_CORP.form.CDTextBox.setFocus();
		}
		this.gfnAlert("법인코드를 입력하세요.", "fnVaidateCallback");
		return validate;
	}else if (this.gfnIsNull(this.ctclWORK_BASE.form.TextBox.value)) {
		validate = false;
		this.fnVaidateCallback = function() {
			this.ctclWORK_BASE.form.TextBox.setFocus();
		}
		this.gfnAlert(this.staWORK_BASE.text+"을/를 입력하세요.", "fnVaidateCallback");
		return validate;
	}else if (this.gfnIsNull(this.ctclYM_SALARY.form.TextBox.value)) {
		validate = false;
		this.fnVaidateCallback = function() {
			this.ctclYM_SALARY.form.TextBox.setFocus();
		}
		this.gfnAlert("급여이관년월을 입력하세요.", "fnVaidateCallback");
		return validate;
	}

 	return validate;
};
/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		if(this.dsList.rowcount > 0){
			if(this.dsList.getColumn(0, "YEAREND_CLOSE") == "Y"){
				this.gfnConfirm("이미 정산결과가 지급순서" + this.dsList.getColumn(0, "SN_SALARY") + " 차 급여에 이관되어 있습니다. 새로 작업하시겠습니까?", "fnPopupCallback");
			}else{
				this.fnExcute();
			}
		}else{
			this.fnExcute();
		}
	} else if (svcID == "save"){
		if (errorCode == 0) {			
			this.fnUpdateCallback = function() {
				this.getParentContext().close(true);
			}
			this.gfnAlert("급여이관작업이 완료되었습니다.", "fnUpdateCallback");
		} else {
			this.gfnAlert(errorMsg);
		}
	}
};

this.fnPopupCallback = function(strId, val){
	if(val){
		this.fnExcute();
	}
};

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {

 	switch(id) {
		case "ccfCD_CORP": // 법인코드
			dsUserParam.setColumn(nrow, "CD_CORP", this.AuthClient.CD_CORP);
			dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
			dsUserParam.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
			break;
		
		case "ccfID_RESIDENT"://주민번호
			if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
				this.fnBeforeUserCallback = function() {
						this.ccfCD_CORP.form.CDTextBox.setFocus();
					}
					this.gfnAlert("법인코드를 입력하세요.", "fnBeforeUserCallback");
					return false;
			}
			dsUserParam.setColumn(nrow, "GUBUN", "E");
			dsUserParam.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
			break;
			
		default:
 	}
 	return true;
};

this.fnAfterCDTextChanged = function(id, codeFindData) {
	var arr = codeFindData;
	
	switch(id) {
		case "ccfCD_CORP": // 법인코드
			this.ccfID_RESIDENT.form.CDTextBox.set_value("");
			this.ccfID_RESIDENT.form.DSTextBox.set_value("");
			this.edtID_SABUN.set_value("");
			break;
		case "ccfID_RESIDENT": // 주민번호
			//this.ccfID_RESIDENT.form.CDTextBox.set_value(arr[0]["ID_RESIDENT"]);
			//this.ccfID_RESIDENT.form.DSTextBox.set_value(arr[0]["DS_HNAME"]);
			
			if(arr.length > 0) {
				this.edtID_SABUN.set_value(arr[0]["ID_SABUN"]);
			}else{
				this.edtID_SABUN.set_value("");
			}
			
			break;			
			
		default:
	}
};

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 /************************************************************************
 * 확장버튼 이벤트
 ************************************************************************/
/************************************************************************
 * 기타 이벤트
 ************************************************************************/

this.btnOK_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if(!this.fnSelectValidate()) return false;
	
	this.fnSelect();	
};

this.btnCANCLE_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.getParentContext().close(false);
};]]></Script>
    <Dataset id="dsList"/>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DAVPR_CHKYEARENDTRANS_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">update</Col>
            <Col id="SP">DAVPR_YEARENDTRANS_UPDATE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSN_SALARY">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">1</Col>
            <Col id="VALUE">1</Col>
          </Row>
          <Row>
            <Col id="VALUE">2</Col>
            <Col id="CODE">2</Col>
          </Row>
          <Row>
            <Col id="CODE">3</Col>
            <Col id="VALUE">3</Col>
          </Row>
          <Row>
            <Col id="CODE">4</Col>
            <Col id="VALUE">4</Col>
          </Row>
          <Row>
            <Col id="CODE">5</Col>
            <Col id="VALUE">5</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
  </Form>
</FDL>
