<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="자동전표분개등록" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="staCD_AUTOSLIP" taborder="0" text="자동전표코드" left="0.0" top="10.0" width="118.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Edit id="ctxtCD_AUTOSLIP" taborder="1" left="staCD_AUTOSLIP:0.0" top="10.0" width="150" height="24.0" maxlength="40" requiredYN="Y" requiredMsg="단지명" readonly="true"/>
              <Edit id="ctxtDS_AUTOSLIP" taborder="2" left="ctxtCD_AUTOSLIP:0.0" top="10.0" width="300" height="24.0" maxlength="40" requiredYN="Y" requiredMsg="단지명" readonly="true"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg" text="" ondragmove="divData_ondragmove">
          <Layouts>
            <Layout>
              <Static id="sta00" taborder="0" text="분개정보" left="0" top="0" width="100.00%" height="22" cssclass="sta_TITLE_Bg"/>
              <Div id="divSplitter" taborder="1" left="450" top="sta00:5" width="5" height="100%" cssclass="div_Splitter" cursor="ew-resize" ondrag="divData_divSplitter_ondrag"/>
              <Div id="divDataLeft" taborder="0" left="0" top="sta00:5" bottom="0" right="divSplitter:5">
                <Layouts>
                  <Layout>
                    <Grid id="objGrid" taborder="2" left="0" top="0" bottom="0" right="0"/>
                  </Layout>
                </Layouts>
              </Div>
              <Div id="divDataRight" taborder="0" left="divSplitter:5" top="sta00:5" bottom="0" right="0">
                <Layouts>
                  <Layout>
                    <Static id="sta01" taborder="0" text="거래순번" left="0" top="5" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta12" taborder="1" left="sta01:-1" top="5" width="400" height="30" cssclass="sta_WF_tablebg"/>
                    <Static id="sta00" taborder="2" text="전표순번" left="0" top="sta01:-1" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta02" taborder="3" left="sta00:-1" top="sta12:-1" width="400" height="30" cssclass="sta_WF_tablebg"/>
                    <Static id="sta04" taborder="5" text="거래구분" left="0" top="sta00:-1" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta03" taborder="4" left="sta04:-1" top="sta02:-1" width="400" height="30" cssclass="sta_WF_tablebg"/>
                    <Static id="sta06" taborder="7" text="원가코드여부" left="0" top="sta04:-1" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta05" taborder="6" left="sta06:-1" top="sta03:-1" width="400" height="30" cssclass="sta_WF_tablebg"/>
                    <Static id="sta08" taborder="9" text="계정코드" left="0" top="sta06:-1" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta07" taborder="8" left="sta08:-1" top="sta05:-1" width="400" height="30" cssclass="sta_WF_tablebg"/>
                    <Static id="sta10" taborder="11" text="회계금액명칭" left="0" top="sta08:-1" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta09" taborder="10" left="sta10:-1" top="sta07:-1" width="400" height="30" cssclass="sta_WF_tablebg"/>
                    <Static id="sta13" taborder="13" text="차대구분" left="0" top="sta10:-1" width="100" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta11" taborder="12" left="sta13:-1" top="sta09:-1" width="400" height="30" cssclass="sta_WF_tablebg"/>
                    <Edit id="txtNO_SLIP" taborder="14" left="sta00:5" top="sta12:4" width="120" height="20" maxlength="40" requiredYN="Y" requiredMsg="단지명" readonly="true"/>
                    <Combo id="cboTRADE_IO" taborder="15" left="sta04:5" top="sta02:4" width="385" height="20" innerdataset="dsTRADE_IO" datacolumn="DS_CODE" codecolumn="CD_CODE"/>
                    <Radio id="rdoTY_COST" taborder="16" left="sta06:5" top="sta03:4" height="20" direction="vertical" fittocontents="width" width="135" codecolumn="CD_CODE" datacolumn="DS_CODE" innerdataset="dsTY_COST"/>
                    <Div id="cfCD_ACCOUNT" CodeFindName="DZX_CFCOMPANYCORP" CDTextWidth="70" taborder="17" left="sta08:5" top="sta05:4" width="385" height="20" url="cmm::cmmCodeFind.xfdl" requiredYN="Y" requiredMsg="사업주체"/>
                    <Edit id="txtDS_AMOUNT" taborder="18" left="sta10:5" top="sta07:4" width="385" height="20" maxlength="40" requiredYN="Y" requiredMsg="단지명"/>
                    <Radio id="rdoTY_DCO" taborder="19" left="sta13:5" top="sta09:4" height="20" direction="vertical" fittocontents="width" width="135" codecolumn="CD_CODE" datacolumn="DS_CODE" innerdataset="dsTY_DCO"/>
                    <Edit id="txtNO_TRADE" taborder="20" left="sta01:5" top="10" width="120" height="20" maxlength="40" requiredYN="Y" requiredMsg="단지명" readonly="true"/>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetVariable();
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetParameter();
	this.fnSetEvent();
	
	this.dsSearch.setColumn(0, "CD_AUTOSLIP", this.getOwnerFrame().CD_AUTOSLIP);
	this.dsSearch.setColumn(0, "DS_AUTOSLIP", this.getOwnerFrame().DS_AUTOSLIP);
	
	this.FormBtns.Select.click();	
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
	//this.FormBtns.Select.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnDetail = this.gfnFormButtonAdd("Detail", "fnDetail");
	
	this.btnDetail.set_enable(false);
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
 	this.ctxtCD_AUTOSLIP = this.divSearch.form.ctxtCD_AUTOSLIP;
 	this.ctxtDS_AUTOSLIP = this.divSearch.form.ctxtDS_AUTOSLIP;
	this.txtNO_TRADE = this.divData.form.divDataRight.form.txtNO_TRADE;
	this.txtNO_SLIP = this.divData.form.divDataRight.form.txtNO_SLIP;
	this.cboTRADE_IO = this.divData.form.divDataRight.form.cboTRADE_IO;
	this.rdoTY_COST = this.divData.form.divDataRight.form.rdoTY_COST;
	this.cfCD_ACCOUNT = this.divData.form.divDataRight.form.cfCD_ACCOUNT;
	this.txtDS_AMOUNT = this.divData.form.divDataRight.form.txtDS_AMOUNT;
	this.rdoTY_DCO = this.divData.form.divDataRight.form.rdoTY_DCO;
	this.sta08 = this.divData.form.divDataRight.form.sta08;
	
	
	//그리드
	this.dxGrid = this.divData.form.divDataLeft.form.objGrid;
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_AUTOSLIP", "string");
	
	this.dsInsert = new Dataset();		
	this.dsInsert.addColumn("CD_AUTOSLIP", "string");		
	this.dsInsert.addColumn("NO_TRADE", "string");			
	this.dsInsert.addColumn("NO_SLIP", "string");			
	this.dsInsert.addColumn("TY_TRADE_IO", "string");	
	this.dsInsert.addColumn("YN_COST", "string");
	this.dsInsert.addColumn("CD_ACCOUNT", "string");			
	this.dsInsert.addColumn("TY_CRDR", "string");			
	this.dsInsert.addColumn("DS_AMOUNT", "string");	
	this.dsInsert.addColumn("ID_SABUN", "string");
	
	this.dsUpdate = new Dataset();		
	this.dsUpdate.addColumn("CD_AUTOSLIP", "string");		
	this.dsUpdate.addColumn("NO_TRADE", "string");			
	this.dsUpdate.addColumn("NO_SLIP_KEY", "string");			
	this.dsUpdate.addColumn("NO_SLIP", "string");	
	this.dsUpdate.addColumn("TY_TRADE_IO", "string");		
	this.dsUpdate.addColumn("YN_COST", "string");		
	this.dsUpdate.addColumn("CD_ACCOUNT", "string");			
	this.dsUpdate.addColumn("TY_CRDR", "string");			
	this.dsUpdate.addColumn("DS_AMOUNT", "string");	
	this.dsUpdate.addColumn("ID_SABUN", "string");		
	
	this.dsDelete = new Dataset();		
	this.dsDelete.addColumn("CD_AUTOSLIP", "string");		
	this.dsDelete.addColumn("NO_TRADE", "string");			
	this.dsDelete.addColumn("NO_SLIP", "string");	
}

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {

	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DH", "DHZ_JOURNAL");
	
	this.dxGrid.addEventHandler("onselectchanged", this.fnGrid_RowCellChanged, this);
	//this.dsList.addEventHandler("canrowposchange", this.dsList_canrowposchange, this);
	
	//this.cfCD_ACCOUNT.CodeFindName = "DHX_CFACNT_YNSLIP";
	this.cfCD_ACCOUNT.CodeFindName = "DHX_CFBIMOK";
	this.cfCD_ACCOUNT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.cfCD_ACCOUNT.AfterCDTextChanged = "fnAfterCDTextChanged";
	
};

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();

	this.dsSelect.setColumn(0, "CD_AUTOSLIP", this.gfnTrim(this.dsSearch.getColumn(0, "CD_AUTOSLIP")));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	//var nrow = this.gfnGridAdd(this.dxGrid, "bottom", true);
	
	this.dsData.set_enableevent(false);
	
	this.dsData.clearData();
	var nrow = this.dsData.addRow();
	
	this.dsData.setColumn(nrow, "CD_ACCOUNT", "");
	this.dsData.setColumn(nrow, "DS_ACCOUNT", "");
	this.dsData.setColumn(nrow, "DS_AMOUNT", "");
	this.dsData.setColumn(nrow, "YN_COST", "N");
	this.dsData.setColumn(nrow, "TY_CRDR", "");
	
	if (this.dsData.getColumn(0, "YN_COST") == "Y") {
		this.sta08.set_text("원가코드");
		this.cfCD_ACCOUNT.CodeFindName = "DHX_CFBIMOK";
	}
	else {
		this.sta08.set_text("계정코드");
		this.cfCD_ACCOUNT.CodeFindName = "DHX_CFACNT_YNSLIP";
	}
	
	this.txtNO_TRADE.set_readonly(false);
	this.txtNO_SLIP.set_readonly(false);
	
	var nTradeMax = 1;
	var nSlipMax = 0;
	var temp = 0;
	
	if (this.dsList.rowcount > 0) {
		for (i = 0; i < this.dsList.rowcount; i++) {
			temp = this.dsList.getColumn(i, "NO_TRADE");
			if (Number(temp) > Number(nTradeMax)) {
				nTradeMax = temp;
			}
		}

		for (i = 0; i < this.dsList.rowcount; i++) {
			temp = this.dsList.getColumn(i, "NO_SLIP");
			if (nTradeMax == this.dsList.getColumn(i, "NO_TRADE") && Number(temp) > Number(nSlipMax)) {
				nSlipMax = temp;
			}
		}
	}
	
	this.dsData.setColumn(nrow, "NO_TRADE"	 , nTradeMax);
	this.dsData.setColumn(nrow, "NO_SLIP"	 , Number(nSlipMax)+1);
	this.dsData.setColumn(nrow, "TY_TRADE_IO", "C");	//대체거래
	
	this.gfnSetFormStatus(this, "I");
	this.dsData.set_enableevent(true);
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {	
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	if (!this.fnSaveValidation()) return;
	//if (!this.gfnGridValidate(this.dxGrid)) return;

	this.dxGrid.updateToDataset();
	
	this.dsInsert.clearData();
	this.dsUpdate.clearData();
	this.dsDelete.clearData();
	
	var status = this.gfnGetFormStatus(this);
	
	if (status == "I") {
		var nrow = this.dsInsert.addRow();
		this.dsInsert.setColumn(nrow, "CD_AUTOSLIP", this.dsSearch.getColumn(0, "CD_AUTOSLIP"));
		this.dsInsert.setColumn(nrow, "NO_TRADE"   , this.dsData.getColumn(0, "NO_TRADE"));
		this.dsInsert.setColumn(nrow, "NO_SLIP"    , this.dsData.getColumn(0, "NO_SLIP"));
		this.dsInsert.setColumn(nrow, "TY_TRADE_IO", this.dsData.getColumn(0, "TY_TRADE_IO"));
		this.dsInsert.setColumn(nrow, "YN_COST"    , this.dsData.getColumn(0, "YN_COST"));
		this.dsInsert.setColumn(nrow, "CD_ACCOUNT" , this.dsData.getColumn(0, "CD_ACCOUNT"));
		this.dsInsert.setColumn(nrow, "TY_CRDR"    , this.dsData.getColumn(0, "TY_CRDR") == "차변" ? "D" : "C");
		this.dsInsert.setColumn(nrow, "DS_AMOUNT"  , this.dsData.getColumn(0, "DS_AMOUNT"));
		this.dsInsert.setColumn(nrow, "ID_SABUN"   , this.AuthClient.ID_USER);
	}
	else if (status == "U") {
		var nrow = this.dsUpdate.addRow();
		this.dsUpdate.setColumn(nrow, "CD_AUTOSLIP"	, this.dsSearch.getColumn(0, "CD_AUTOSLIP"));
		this.dsUpdate.setColumn(nrow, "NO_TRADE"	, this.dsData.getColumn(0, "NO_TRADE"));
		this.dsUpdate.setColumn(nrow, "NO_SLIP_KEY"	, this.dsData.getColumn(0, "NO_SLIP_KEY"));
		this.dsUpdate.setColumn(nrow, "NO_SLIP"		, this.dsData.getColumn(0, "NO_SLIP"));
		this.dsUpdate.setColumn(nrow, "TY_TRADE_IO" , this.dsData.getColumn(0, "TY_TRADE_IO"));
		this.dsUpdate.setColumn(nrow, "YN_COST"		, this.dsData.getColumn(0, "YN_COST"));
		this.dsUpdate.setColumn(nrow, "CD_ACCOUNT"	, this.dsData.getColumn(0, "CD_ACCOUNT"));
		this.dsUpdate.setColumn(nrow, "TY_CRDR"		, this.dsData.getColumn(0, "TY_CRDR") == "차변" ? "D" : "C");
		this.dsUpdate.setColumn(nrow, "DS_AMOUNT"	, this.dsData.getColumn(0, "DS_AMOUNT"));
		this.dsUpdate.setColumn(nrow, "ID_SABUN"	, this.AuthClient.ID_USER);	
	}
	else if (status == "D") {
		for (var i = this.dsList.rowcount - 1; i >= 0; i--) {
			var flag = this.gfnGetFlag(this.dsList, i);
			if (flag == "D") {
				var nrow = this.dsDelete.addRow();
				this.dsDelete.setColumn(nrow, "CD_AUTOSLIP", this.dsSearch.getColumn(0, "CD_AUTOSLIP"));
				this.dsDelete.setColumn(nrow, "NO_TRADE"   , this.dsList.getColumn(i, "NO_TRADE"));
				this.dsDelete.setColumn(nrow, "NO_SLIP"    , this.dsList.getColumn(i, "NO_SLIP"));
			}
		}
	}
	
	if (this.dsInsert.rowcount == 0 && this.dsUpdate.rowcount == 0 && this.dsDelete.rowcount == 0) return;
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "insert=dsInsert update=dsUpdate delete=dsDelete";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	
	if(this.gfnIsNull(this.dsSearch.getColumn(0, "CD_AUTOSLIP"))) {		
		this.ctxtCD_AUTOSLIP.setFocus();
		this.gfnAlert("자동전표코드를 입력하세요.");
		return false;
	}
	
	return true;
};

/*
 *	저장 Validate
 */
this.fnSaveValidation = function() {
	var validate = true;
	var msg = "";
	
	if (this.gfnIsNull(this.dsData.getColumn(0, "NO_TRADE"))) {
		msg += "거래순번은 반드시 입력하셔야 합니다.\n";
		validate = false;
	}
	
	if (this.gfnIsNull(this.dsData.getColumn(0, "NO_SLIP"))) {
		msg += "전표순번은 반드시 입력하셔야 합니다.\n";
		validate = false;
	}
	
	if (this.dsList.rowcount > 0) {
		if (this.dsData.getColumn(0, "TY_TRADE_IO") != this.dsList.getColumn(this.dsList.rowposition, "TY_TRADE_IO")) {
			msg += "한 거래의 거래구분은 동일해야 합니다.\n";
			validate = false;
		}
	}
	
	if (this.gfnTrim(this.dsData.getColumn(0, "CD_ACCOUNT")) == "") {
		if (this.dsData.getColumn(0, "YN_COST") == "Y")
			msg += "원가코드는 반드시 입력하셔야 합니다.\n";
		else
			msg += "계정코드는 반드시 입력하셔야 합니다.\n";
		validate = false;
	}
	
	if (this.gfnTrim(this.dsData.getColumn(0, "DS_AMOUNT")) == "") {
		msg += "회계금액 명칭은 반드시 입력하셔야 합니다.\n";
		validate = false;
	}
	
	if (this.dsData.getColumn(0, "TY_CRDR") == "") {
		msg += "차대구분을 반드시 선택하셔야 합니다.\n";
		validate = false;
	}
	
	if (!validate) {
		this.gfnAlert(msg);
		return false;
	}
	
	return true;
}

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if(svcID == "select") {
		if (this.dxGrid.oldrow < 0)
			this.dxGrid.setCellPos(0, 0);
		else
			this.gfnGridAfterSelect(this.dxGrid);

		this.txtNO_TRADE.set_readonly(true);
		this.txtNO_SLIP.set_readonly(true);
		
		if (this.dxGrid.rowcount > 0) {
			this.btnDetail.set_enable(true);
		} else {
			this.btnDetail.set_enable(false);
		}
		
	} else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
		
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/ 
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if (id == "cfCD_ACCOUNT") {
		if (this.dsData.getColumn(0, "YN_COST") == "N") {
			dsUserParam.setColumn(nrow, "CD_CORP", this.AuthClient.CD_CORP);
		}
	}
	
	return true;
};

this.fnAfterCDTextChanged = function(id, codeFindData) {
	if(id == "cfCD_ACCOUNT") {
		var ds = "";
		if (this.dsData.getColumn(0, "YN_COST") == "Y")
			ds = "DS_BIMOK";
		else
			ds = "DS_ACCOUNT";
	
		this.dsData.setColumn(0, "DS_AMOUNT", codeFindData[0][ds])
		if (this.dsData.getColumn(0, "YN_COST") == "Y") {
			this.dsData.setcolumn(0, "TY_CRDR", "차변");
		}
		else {
			
			this.dsData.setColumn(0, "TY_CRDR", codeFindData[0]["TY_DCO"] == "D" ? "차변" : "대변");
		}
		
		this.txtDS_AMOUNT.setFocus()
	}
}

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGrid_RowCellChanged = function(obj:nexacro.Grid,e:nexacro.GridSelectEventInfo) {
    if ((obj.oldrow > -1 && obj.oldrow == e.row)
		|| (obj.oldrow == -1 && e.oldrow != e.row)) {
		this.dsData.clearData();
		this.dsData.addRow();
		this.dsData.copyRow(0, this.dsList, e.row);
	
		if (this.dsData.getColumn(0, "YN_COST") == "Y") {
			this.sta08.set_text("원가코드");
			this.cfCD_ACCOUNT.CodeFindName = "DHX_CFBIMOK";
		}
		else {
			this.sta08.set_text("계정코드");
			this.cfCD_ACCOUNT.CodeFindName = "DHX_CFACNT_YNSLIP";
		}
		
		this.txtNO_TRADE.set_readonly(true);
		this.txtNO_SLIP.set_readonly(true);
		
		var flag = this.gfnGetFlag(this.dsList, e.oldrow);
		if (flag == "U" || flag == "D") {
			this.dsList.setColumn(e.oldrow, "nx_flag", "");
		}
		this.gfnSetFormStatus(this, "Q");
		
		
		obj.oldrow = -1;
	}
};

 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/

this.divData_ondragmove = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
	if(e.userdata == "splitter") {
		this.divData.form.divSplitter.set_left(e.clientx);
		this.divData.form.resetScroll();
	}
};

this.divData_divSplitter_ondrag = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
	e.set_userdata("splitter");
	return true;
};

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo) {
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};

this.dsData_oncolumnchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo) {
	switch (e.columnid) {
		case "NO_TRADE":

			if (!isNumber(e.newvalue)) {
				this.gfnAlert("거래순번은 숫자로 입력하셔야 합니다.");
				return;
			}
			
			var nTradeMax = 1;
			var nSlipMax = 0;
			var temp = 0;
		
			if (e.newvalue == "0" || e.newvalue == "") {
				for (i = 0; i < this.dsList.rowcount; i++) {
					temp = this.dsList.getColumn(i, "NO_TRADE");
					if (Number(temp) > Number(nTradeMax)) {
						nTradeMax = temp;
					}
				}
				this.dsData.setColumn(e.row, "NO_TRADE", nTradeMax);
			}
			else {
				nTradeMax = e.newvalue;
			}

			if (this.dsList.rowcount > 0) {
				for (i = 0; i < this.dsList.rowcount; i++) {
					temp = this.dsList.getColumn(i, "NO_SLIP");
					if (nTradeMax == this.dsList.getColumn(i, "NO_SLIP") && Number(temp) > Number(nSlipMax)) {
						nSlipMax = temp;
					}
				}
			}
			this.dsData.setColumn(e.row, "NO_SLIP", Number(nSlipMax)+1);

			if (this.dsList.rowcount > 0) {
				for (i = 0; i < this.dsList.rowcount; i++) {
					if (Number(this.dsList.getColumn(i, "NO_TRADE")) == Number(nTradeMax)
					&& Number(this.dsList.getColumn(i, "NO_SLIP")) == Number(nSlipMax)) {
						for (j = 0; j < this.dsList.rowcount; j++) {
							if (Number(this.dsList.getColumn(j, "NO_TRADE")) == Number(nTradeMax)
							&& Number(this.dsList.getColumn(j, "NO_SLIP")) > Number(nSlipMax)) {
								nSlipMax = this.dsList.getColumn(j, "NO_SLIP");
							}
						}
						
						this.dsData.setColumn(e.row, "NO_SLIP", Number(nSlipMax)+1);
						return;
					}
				}
			}
			
			if (this.gfnGetFormStatus(this) != "I") {
				this.gfnSetFormStatus(this, "U");
				this.dsList.setColumn(this.dsList.rowposition, "nx_flag", "U");
			}
			break;
	
		case "YN_COST":
			if (e.newvalue == "Y") {
				this.sta08.set_text("원가코드");
				this.cfCD_ACCOUNT.CodeFindName = "DHX_CFBIMOK";
			}
			else {
				this.sta08.set_text("계정코드");
				this.cfCD_ACCOUNT.CodeFindName = "DHX_CFACNT_YNSLIP";
			}
			this.dsData.setColumn(e.row, "CD_ACCOUNT", "");
			this.dsData.setColumn(e.row, "DS_ACCOUNT", "");
			
			if (this.gfnGetFormStatus(this) != "I") {
				this.gfnSetFormStatus(this, "U");
				this.dsList.setColumn(this.dsList.rowposition, "nx_flag", "U");
			}
			break;
		case "NO_SLIP":
		case "CD_ACCOUNT":
		case "TY_CRDR":
		case "TY_TRADE_IO":
		case "DS_AMOUNT":
			if (this.gfnGetFormStatus(this) != "I") {
				this.gfnSetFormStatus(this, "U");
				this.dsList.setColumn(this.dsList.rowposition, "nx_flag", "U");
			}
			break;
	}
}

this.fnDetail = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if(!this.gfnGridIsRow(this.dxGrid)) {return false;}
	
	var param = {};
	
	param.CD_AUTOSLIP = this.gfnTrim(this.dsSearch.getColumn(0, "CD_AUTOSLIP"))
	param.DS_AUTOSLIP = this.gfnTrim(this.dsSearch.getColumn(0, "DS_AUTOSLIP"))
	
	this.gfnFormOpen("DHZ", "DHZ_JOURNALINFO", "", param);
	
};



]]></Script>
    <Objects>
      <Dataset id="dsList" onvaluechanged="dsList_onvaluechanged">
        <ColumnInfo>
          <Column id="NO_TRADE" type="INT" size="256"/>
          <Column id="NO_SLIP_KEY" type="INT" size="256"/>
          <Column id="NO_SLIP" type="INT" size="256"/>
          <Column id="CD_ACCOUNT" type="STRING" size="256"/>
          <Column id="TY_CRDR" type="STRING" size="256"/>
          <Column id="TY_TRADE_IO" type="STRING" size="256"/>
          <Column id="DS_ACCOUNT" type="STRING" size="256"/>
          <Column id="DS_AMOUNT" type="STRING" size="256"/>
          <Column id="YN_COST" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DHZPR_JOURNAL_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">insert</Col>
            <Col id="SP">DHZPR_JOURNAL_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">update</Col>
            <Col id="SP">DHZPR_JOURNAL_UPDATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">delete</Col>
            <Col id="SP">DHZPR_JOURNAL_DELETE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_AUTOSLIP" type="STRING" size="256"/>
          <Column id="DS_AUTOSLIP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_AUTOSLIP"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTRADE_IO" onvaluechanged="dsData_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">C</Col>
            <Col id="DS_CODE">대체거래</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_COST">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">Y</Col>
            <Col id="DS_CODE">예</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">N</Col>
            <Col id="DS_CODE">아니오</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_DCO">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">차변</Col>
            <Col id="DS_CODE">차변</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">대변</Col>
            <Col id="DS_CODE">대변</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsData" oncolumnchanged="dsData_oncolumnchanged">
        <ColumnInfo>
          <Column id="NO_TRADE" type="INT" size="256"/>
          <Column id="NO_SLIP_KEY" type="INT" size="256"/>
          <Column id="NO_SLIP" type="INT" size="256"/>
          <Column id="CD_ACCOUNT" type="STRING" size="256"/>
          <Column id="TY_CRDR" type="STRING" size="256"/>
          <Column id="TY_TRADE_IO" type="STRING" size="256"/>
          <Column id="DS_ACCOUNT" type="STRING" size="256"/>
          <Column id="DS_AMOUNT" type="STRING" size="256"/>
          <Column id="YN_COST" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ctxtCD_AUTOSLIP" propid="value" datasetid="dsSearch" columnid="CD_AUTOSLIP"/>
      <BindItem id="item1" compid="divSearch.form.ctxtDS_AUTOSLIP" propid="value" datasetid="dsSearch" columnid="DS_AUTOSLIP"/>
      <BindItem id="item2" compid="divData.form.divDataRight.form.txtNO_TRADE" propid="value" datasetid="dsData" columnid="NO_TRADE"/>
      <BindItem id="item3" compid="divData.form.divDataRight.form.txtNO_SLIP" propid="value" datasetid="dsData" columnid="NO_SLIP"/>
      <BindItem id="item4" compid="divData.form.divDataRight.form.cboTRADE_IO" propid="value" datasetid="dsData" columnid="TY_TRADE_IO"/>
      <BindItem id="item5" compid="divData.form.divDataRight.form.rdoTY_COST" propid="value" datasetid="dsData" columnid="YN_COST"/>
      <BindItem id="item6" compid="divData.form.divDataRight.form.cfCD_ACCOUNT.form.CDTextBox" propid="value" datasetid="dsData" columnid="CD_ACCOUNT"/>
      <BindItem id="item7" compid="divData.form.divDataRight.form.cfCD_ACCOUNT.form.DSTextBox" propid="value" datasetid="dsData" columnid="DS_ACCOUNT"/>
      <BindItem id="item8" compid="divData.form.divDataRight.form.txtDS_AMOUNT" propid="value" datasetid="dsData" columnid="DS_AMOUNT"/>
      <BindItem id="item9" compid="divData.form.divDataRight.form.rdoTY_DCO" propid="value" datasetid="dsData" columnid="TY_CRDR"/>
    </Bind>
  </Form>
</FDL>
