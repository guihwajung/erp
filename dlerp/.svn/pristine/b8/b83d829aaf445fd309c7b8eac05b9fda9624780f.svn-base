<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="1320" height="760" titletext="이행상황신고서" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="1" left="0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static id="staCD_CORP" taborder="3" text="법인코드" left="0.0" top="10.0" width="92.0" height="24.0" usedecorate="false" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_CORP" CDTextWidth="80" taborder="0" left="staCD_CORP:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staYM" taborder="7" text="귀속기간" left="ccfCD_CORP:0.0" top="10.0" width="92.0" height="24.0" usedecorate="false" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYM_FROM" taborder="6" left="staYM:0.0" top="10.0" width="80" height="24.0" url="cmm::cmmCalMM.xfdl" enableevent="true" text=""/>
              <Static id="staWAVE" taborder="4" text="~" left="ctclYM_FROM:0.0" top="10.0" width="30.0" height="24.0" cssclass="sta_WF_AC"/>
              <Div id="ctclYM_TO" taborder="5" left="staWAVE:0.0" top="10.0" width="80" height="24.0" url="cmm::cmmCalMM.xfdl" enableevent="true" text=""/>
              <Static id="staYM00" taborder="9" text="지급기간" left="ctclYM_TO:0.0" top="10.0" width="92.0" height="24.0" usedecorate="false" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYM_JFROM" taborder="1" left="staYM00:0.0" top="10.0" width="80" height="24.0" url="cmm::cmmCalMM.xfdl" enableevent="true" text=""/>
              <Static id="staWAVE00" taborder="8" text="~" left="ctclYM_JFROM:0.0" top="10.0" width="30.0" height="24.0" cssclass="sta_WF_AC"/>
              <Div id="ctclYM_JTO" taborder="2" left="staWAVE00:0.0" top="10.0" width="80" height="24.0" url="cmm::cmmCalMM.xfdl" enableevent="true" text=""/>
              <Static id="staCD_DEPT_SELFACNT" taborder="4" text="세무단위" left="ctclYM_JTO:0.0" top="10.0" width="92.0" height="24.0" visible="false" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_DEPT_SELFACNT" CodeFindName="DHX_CFSELFACNT" CDTextWidth="70" taborder="5" left="staCD_DEPT_SELFACNT:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" onclick="Common_onclick" text="" visible="false"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Static id="staTITLE" taborder="20" text="원천징수의무자" left="0" top="29" height="30" cssclass="sta_TITLE_Bg" textAlign="left" width="1260"/>
              <Tab id="tabData" taborder="0" tabindex="0" left="0" top="staTITLE:65" bottom="0" right="0" onchanged="divData_tabData_onchanged">
                <Tabpages>
                  <Tabpage id="tab1" text="원천징수내역" left="27" top="29" width="1280" height="511">
                    <Layouts>
                      <Layout>
                        <Grid id="objGrid" taborder="0" left="5" top="7" right="5" binddataset="dsList" onselectchanged="divData_tabData_tab1_objGrid_onselectchanged" bottom="119">
                          <Formats>
                            <Format id="default">
                              <Columns>
                                <Column size="0"/>
                                <Column size="50"/>
                                <Column size="70"/>
                                <Column size="150"/>
                                <Column size="60"/>
                                <Column size="80"/>
                                <Column size="120"/>
                                <Column size="100"/>
                                <Column size="100"/>
                                <Column size="100"/>
                                <Column size="100"/>
                                <Column size="100"/>
                                <Column size="100"/>
                                <Column size="103"/>
                                <Column size="100"/>
                                <Column size="0"/>
                              </Columns>
                              <Rows>
                                <Row size="24" band="head"/>
                                <Row size="24" band="head"/>
                                <Row size="24" band="head"/>
                                <Row size="24"/>
                              </Rows>
                              <Band id="head">
                                <Cell rowspan="3"/>
                                <Cell col="1" rowspan="3" colspan="3" text="소득자 소득구분"/>
                                <Cell col="4" rowspan="3" text="코드"/>
                                <Cell col="5" colspan="6" text="원 천 징 수 명 세"/>
                                <Cell col="11" rowspan="3" text="9.당월조정&#13;&#10;환급세액"/>
                                <Cell col="12" colspan="3" text="납부세액"/>
                                <Cell col="15" rowspan="3" text="순번"/>
                                <Cell row="1" col="5" colspan="2" text="소득지급(과세미달, 일부비과세포함)"/>
                                <Cell row="1" col="7" colspan="4" text="징  수  세  액"/>
                                <Cell row="1" col="12" rowspan="2" text="10.소득세등&#13;&#10;(가산세포함)"/>
                                <Cell row="1" col="13" rowspan="2" text="11.농어촌특별세"/>
                                <Cell row="1" col="14" rowspan="2" text="지방소득세 등"/>
                                <Cell row="2" col="5" text="4.인원"/>
                                <Cell row="2" col="6" text="5.총지급액"/>
                                <Cell row="2" col="7" text="6.소득세 등"/>
                                <Cell row="2" col="8" text="지방소득세 등"/>
                                <Cell row="2" col="9" text="7.농어촌특별세"/>
                                <Cell row="2" col="10" text="8.가산세"/>
                              </Band>
                              <Band id="body">
                                <Cell text="bind:FLAG"/>
                                <Cell col="1" text="bind:DS_ETC1" textAlign="center" font="12px/normal &quot;Malgun Gothic&quot;" background="#f7f7f7" suppress="0" suppressalign="first"/>
                                <Cell col="2" text="bind:DS_ETC2" textAlign="center" font="12px/normal &quot;Malgun Gothic&quot;" background="#f7f7f7" suppress="0" suppressalign="first"/>
                                <Cell col="3" text="bind:NM_GUBUN" textAlign="center" font="12px/normal &quot;Malgun Gothic&quot;" background="#f7f7f7"/>
                                <Cell col="4" text="bind:CD_GUBUN" textAlign="center" font="12px/normal &quot;Malgun Gothic&quot;" background="#f7f7f7"/>
                                <Cell col="5" text="bind:NO_INWON" edittype="mask" maskeditformat="###,###,###,###,###" maskeditlimitbymask="both" textAlign="right" displaytype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskedittrimtype="both"/>
                                <Cell col="6" text="bind:AM_TOTSUPPLY" edittype="mask" maskeditformat="###,###,###,###,###" maskeditlimitbymask="both" textAlign="right" displaytype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskedittrimtype="both"/>
                                <Cell col="7" text="bind:AM_INCOMETAX" edittype="mask" maskeditformat="###,###,###,###,###" maskeditlimitbymask="both" textAlign="right" displaytype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskedittrimtype="both"/>
                                <Cell col="8" text="bind:AM_RESTAX" edittype="mask" maskeditformat="###,###,###,###,###" maskeditlimitbymask="both" textAlign="right" displaytype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskedittrimtype="both"/>
                                <Cell col="9" text="bind:AM_SPECIALTAX" edittype="mask" maskeditformat="###,###,###,###,###" maskeditlimitbymask="both" textAlign="right" displaytype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskedittrimtype="both"/>
                                <Cell col="10" text="bind:AM_ADDTAX" edittype="mask" maskeditformat="###,###,###,###,###" maskeditlimitbymask="both" textAlign="right" displaytype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskedittrimtype="both"/>
                                <Cell col="11" text="bind:AM_RETURNTAX" edittype="mask" maskeditformat="###,###,###,###,###" maskeditlimitbymask="both" textAlign="right" displaytype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskedittrimtype="both"/>
                                <Cell col="12" text="bind:AM_NAPINCOMETAX" edittype="mask" maskeditformat="###,###,###,###,###" maskeditlimitbymask="both" textAlign="right" displaytype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskedittrimtype="both"/>
                                <Cell col="13" text="bind:AM_NAPSPECIALTAX" edittype="mask" maskeditformat="###,###,###,###,###" maskeditlimitbymask="both" textAlign="right" displaytype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskedittrimtype="both"/>
                                <Cell col="14" text="bind:AM_NAPRESTAX" edittype="mask" maskeditformat="###,###,###,###,###" maskeditlimitbymask="both" textAlign="right" displaytype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskedittrimtype="both"/>
                                <Cell col="15" text="bind:DS_ORDER"/>
                              </Band>
                            </Format>
                          </Formats>
                        </Grid>
                        <Static id="staAM_BEFORETAX" taborder="28" text="(12) 전월&#13;&#10;미환급세액" left="5" top="objGrid:31" width="125" height="57" cssclass="sta_WF_tablelabel" textAlign="center"/>
                        <Static id="staAM_REQUESTTAX" taborder="29" text="(13) 기환급&#13;&#10;신청한세액" left="staAM_BEFORETAX:-1" top="staAM_BEFORETAX:-57" width="125" height="57" cssclass="sta_WF_tablelabel" textAlign="center"/>
                        <Static id="staAM_JAN" taborder="30" text="(14) 차감잔액&#13;&#10;((12)-(13))" left="staAM_REQUESTTAX:-1" top="staAM_REQUESTTAX:-57" width="125" height="57" cssclass="sta_WF_tablelabel" textAlign="center"/>
                        <Static id="staAM_ILBANRETURN" taborder="31" text="(15) 일반&#13;&#10;환급" left="staAM_JAN:-1" top="staAM_JAN:-57" width="125" height="57" cssclass="sta_WF_tablelabel" textAlign="center"/>
                        <Static id="staAM_SINTAC" taborder="32" text="(16) 신탁재산&#13;&#10;(금융회사 등)" left="staAM_ILBANRETURN:-1" top="staAM_ILBANRETURN:-57" width="125" height="57" cssclass="sta_WF_tablelabel" textAlign="center"/>
                        <Static id="staAM_GITA" taborder="33" text="금융&#13;&#10;회사 등" left="staAM_SINTAC:-1" top="staAM_SINTAC:-34" width="125" height="34" cssclass="sta_WF_tablelabel" textAlign="center"/>
                        <Static id="staAM_GITA2" taborder="34" text="합병 등" left="staAM_GITA:-1" top="staAM_GITA:-34" width="125" height="34" cssclass="sta_WF_tablelabel" textAlign="center"/>
                        <Static id="staAM_SETTLE" taborder="35" text="(18) 조정대상&#13;&#10;환급세액&#13;&#10;((14)+(15)+(16)+(17))" left="staAM_GITA2:-1" top="staAM_GITA2:-80" width="135" height="80" cssclass="sta_WF_tablelabel" textAlign="center"/>
                        <Static id="staAM_RETURNTAXSUM" taborder="36" text="(19) 당월조정&#13;&#10;환급세액계" left="staAM_SETTLE:-1" top="staAM_SETTLE:-80" width="115" height="80" cssclass="sta_WF_tablelabel" textAlign="center"/>
                        <Static id="staAM_WOLRETURNTAX" taborder="37" text="(20) 차월이월&#13;&#10;환급세액&#13;&#10;((18)-(19))" left="staAM_RETURNTAXSUM:-1" top="staAM_RETURNTAXSUM:-80" width="125" height="80" cssclass="sta_WF_tablelabel" textAlign="center"/>
                        <Static id="staAM_RETURNAPPLY" taborder="38" text="(20) 환급신청액" left="staAM_WOLRETURNTAX:-1" top="staAM_WOLRETURNTAX:-80" width="125" height="80" cssclass="sta_WF_tablelabel" textAlign="center"/>
                        <Static id="staBgAM_BEFORETAX" taborder="39" left="staAM_BEFORETAX:-125" top="staAM_BEFORETAX:-1" height="27" cssclass="sta_WF_tablebg" width="125"/>
                        <Static id="staBgAM_REQUESTTAX" taborder="40" left="staAM_REQUESTTAX:-125" top="staAM_REQUESTTAX:-1" height="27" cssclass="sta_WF_tablebg" width="125"/>
                        <Static id="staBgAM_JAN" taborder="41" left="staAM_JAN:-125" top="staAM_JAN:-1" height="27" cssclass="sta_WF_tablebg" width="125"/>
                        <Static id="staBgAM_ILBANRETURN" taborder="42" left="staAM_ILBANRETURN:-125" top="staAM_ILBANRETURN:-1" height="27" cssclass="sta_WF_tablebg" width="125"/>
                        <Static id="staBgAM_SINTAC" taborder="43" left="staAM_SINTAC:-125" top="staAM_SINTAC:-1" height="27" cssclass="sta_WF_tablebg" width="125"/>
                        <Static id="staBgAM_GITA" taborder="44" left="staAM_GITA:-125" top="staAM_GITA:-1" height="27" cssclass="sta_WF_tablebg" width="125"/>
                        <Static id="staBgAM_GITA2" taborder="45" left="staAM_GITA2:-125" top="staAM_GITA2:-1" height="27" cssclass="sta_WF_tablebg" width="125"/>
                        <Static id="staBgAM_SETTLE" taborder="46" left="staAM_SETTLE:-135" top="staAM_SETTLE:-1" height="27" cssclass="sta_WF_tablebg" width="135"/>
                        <Static id="staBgAM_RETURNTAXSUM" taborder="47" left="staAM_RETURNTAXSUM:-115" top="staAM_RETURNTAXSUM:-1" height="27" cssclass="sta_WF_tablebg" width="115"/>
                        <Static id="staBgAM_WOLRETURNTAX" taborder="48" left="staAM_WOLRETURNTAX:-125" top="staAM_WOLRETURNTAX:-1" height="27" cssclass="sta_WF_tablebg" width="125"/>
                        <Static id="staBgAM_RETURNAPPLY" taborder="49" left="staAM_RETURNAPPLY:-125" top="staAM_RETURNAPPLY:-1" height="27" cssclass="sta_WF_tablebg" width="125"/>
                        <MaskEdit id="mskAM_BEFORETAX" taborder="73" left="staAM_BEFORETAX:-120" top="staAM_BEFORETAX:2" width="115" height="20" format="###,###,###,###,###" limitbymask="both" onkillfocus="mask_onkillfocus" onchanged="fn_OnChanged" enable="false"/>
                        <MaskEdit id="mskAM_REQUESTTAX" taborder="73" left="staAM_REQUESTTAX:-120" top="staAM_REQUESTTAX:2" width="115" height="20" format="###,###,###,###" limitbymask="both" onkillfocus="mask_onkillfocus" onchanged="fn_OnChanged"/>
                        <MaskEdit id="mskAM_JAN" taborder="73" left="staAM_JAN:-120" top="staAM_JAN:2" width="115" height="20" format="###,###,###,###,###" limitbymask="both" enable="false"/>
                        <MaskEdit id="mskAM_ILBANRETURN" taborder="73" left="staAM_ILBANRETURN:-120" top="staAM_ILBANRETURN:2" width="115" height="20" format="###,###,###,###" limitbymask="both" onkillfocus="mask_onkillfocus" onchanged="fn_OnChanged"/>
                        <MaskEdit id="mskAM_SINTAC" taborder="73" left="staAM_SINTAC:-120" top="staAM_SINTAC:2" width="115" height="20" format="###,###,###,###" limitbymask="both" onkillfocus="mask_onkillfocus" onchanged="fn_OnChanged"/>
                        <MaskEdit id="mskAM_GITA" taborder="73" left="staAM_GITA:-120" top="staAM_GITA:2" width="115" height="20" format="###,###,###,###" limitbymask="both" onkillfocus="mask_onkillfocus" onchanged="fn_OnChanged"/>
                        <MaskEdit id="mskAM_GITA2" taborder="73" left="staAM_GITA2:-120" top="staAM_GITA2:2" width="115" height="20" format="###,###,###,###" limitbymask="both" onkillfocus="mask_onkillfocus" onchanged="fn_OnChanged"/>
                        <MaskEdit id="mskAM_SETTLE" taborder="73" left="staAM_SETTLE:-130" top="staAM_SETTLE:2" width="125" height="20" format="###,###,###,###,###" limitbymask="both" enable="false"/>
                        <MaskEdit id="mskAM_RETURNTAXSUM" taborder="73" left="staAM_RETURNTAXSUM:-110" top="staAM_RETURNTAXSUM:2" width="105" height="20" format="###,###,###,###" limitbymask="both" onkillfocus="mask_onkillfocus" onchanged="divData_tabData_tab1_mskAM_RETURNTAXSUM_onchanged"/>
                        <MaskEdit id="mskAM_WOLRETURNTAX" taborder="73" left="staAM_WOLRETURNTAX:-120" top="staAM_WOLRETURNTAX:2" width="115" height="20" format="###,###,###,###,###" limitbymask="both" onchanged="fn_OnChanged" enable="false"/>
                        <MaskEdit id="mskAM_RETURNAPPLY" taborder="73" left="staAM_RETURNAPPLY:-120" top="staAM_RETURNAPPLY:2" width="115" height="20" format="###,###,###,###,###" limitbymask="integer"/>
                        <Static id="staAM_BEFORETAX00" taborder="34" text="전월 미환급 세액의 계산" left="5" top="objGrid:8" width="373" cssclass="sta_WF_tablelabel" textAlign="center" bottom="staAM_BEFORETAX:-1"/>
                        <Static id="staAM_BEFORETAX01" taborder="35" text="당월 발생 환급세액" left="377" top="objGrid:8" width="497" cssclass="sta_WF_tablelabel" textAlign="center" bottom="staAM_SINTAC:-1"/>
                        <Static id="staAM_BEFORETAX02" taborder="36" text="(17) 그밖의 환급세액" left="625" top="staAM_BEFORETAX01:-1" width="249" cssclass="sta_WF_tablelabel" textAlign="center" bottom="staAM_GITA:-1"/>
                      </Layout>
                    </Layouts>
                  </Tabpage>
                  <Tabpage id="tab2" text="부  표" left="27" top="29" width="1280" height="511">
                    <Layouts>
                      <Layout>
                        <Grid id="objGrid2" taborder="0" left="5" top="5" right="5" bottom="5" binddataset="dsList2">
                          <Formats>
                            <Format id="default">
                              <Columns>
                                <Column size="0"/>
                                <Column size="40"/>
                                <Column size="40"/>
                                <Column size="50"/>
                                <Column size="250"/>
                                <Column size="60"/>
                                <Column size="60"/>
                                <Column size="100"/>
                                <Column size="100"/>
                                <Column size="100"/>
                                <Column size="100"/>
                                <Column size="100"/>
                                <Column size="100"/>
                                <Column size="100"/>
                                <Column size="100"/>
                                <Column size="0"/>
                              </Columns>
                              <Rows>
                                <Row size="24" band="head"/>
                                <Row size="48" band="head"/>
                                <Row size="24"/>
                              </Rows>
                              <Band id="head">
                                <Cell rowspan="2"/>
                                <Cell col="1" rowspan="2" colspan="4" text="소득자 소득구분"/>
                                <Cell col="5" rowspan="2" text="코드"/>
                                <Cell col="6" colspan="2" text="소 득 지 급"/>
                                <Cell col="8" colspan="4" text="징 수 세 액"/>
                                <Cell col="12" rowspan="2" text="6.조 정&#13;&#10;환급세액"/>
                                <Cell col="13" colspan="2" text="납 부 세 액"/>
                                <Cell col="15"/>
                                <Cell row="1" col="6" text="1.인원"/>
                                <Cell row="1" col="7" text="2.총지급액"/>
                                <Cell row="1" col="8" text="3.소득세등"/>
                                <Cell row="1" col="9" text="주민세등"/>
                                <Cell row="1" col="10" text="4.농어촌특별세"/>
                                <Cell row="1" col="11" text="5.가산세"/>
                                <Cell row="1" col="13" text="7.소득세 등&#13;&#10;(가산세)"/>
                                <Cell row="1" col="14" text="8.농어촌특별세"/>
                                <Cell row="1" col="15" text="순번"/>
                              </Band>
                              <Band id="body">
                                <Cell text="bind:FLAG" font="normal 700 12px/normal &quot;Dotum&quot;"/>
                                <Cell col="1" text="bind:DS_ETC1" font="12px/normal &quot;Malgun Gothic&quot;" background="#f7f7f7" suppress="0" suppressalign="first" textAlign="center"/>
                                <Cell col="2" text="bind:DS_ETC2" font="12px/normal &quot;Malgun Gothic&quot;" background="#f7f7f7" suppressalign="first" textAlign="center"/>
                                <Cell col="3" text="bind:DS_ETC3" font="12px/normal &quot;Malgun Gothic&quot;" background="#f7f7f7" suppressalign="first" textAlign="center"/>
                                <Cell col="4" text="bind:NM_GUBUN" font="12px/normal &quot;Malgun Gothic&quot;" background="#f7f7f7" tooltiptext="bind:NM_GUBUN" textAlign="center"/>
                                <Cell col="5" text="bind:CD_GUBUN" font="12px/normal &quot;Malgun Gothic&quot;" background="#f7f7f7" textAlign="center"/>
                                <Cell col="6" text="bind:NO_INWON" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="7" text="bind:AM_TOTSUPPLY" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="8" text="bind:AM_INCOMETAX" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="9" text="bind:AM_RESTAX" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="10" text="bind:AM_SPECIALTAX" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="11" text="bind:AM_ADDTAX" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="12" text="bind:AM_RETURNTAX" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="13" text="bind:AM_NAPINCOMETAX" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="14" text="bind:AM_NAPSPECIALTAX" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="15" text="bind:DS_ORDER"/>
                              </Band>
                            </Format>
                          </Formats>
                        </Grid>
                      </Layout>
                    </Layouts>
                  </Tabpage>
                  <Tabpage id="tab3" text="환급신청" left="27" top="29" width="1280" height="511">
                    <Layouts>
                      <Layout>
                        <Grid id="objGrid3" taborder="0" left="5" top="32" right="5" bottom="5" binddataset="dsGResult">
                          <Formats>
                            <Format id="default">
                              <Columns>
                                <Column size="20"/>
                                <Column size="100"/>
                                <Column size="80"/>
                                <Column size="60"/>
                                <Column size="60"/>
                                <Column size="100"/>
                                <Column size="100"/>
                                <Column size="100"/>
                                <Column size="100"/>
                                <Column size="100"/>
                                <Column size="100"/>
                                <Column size="100"/>
                                <Column size="100"/>
                                <Column size="120"/>
                              </Columns>
                              <Rows>
                                <Row size="48" band="head"/>
                                <Row size="24"/>
                              </Rows>
                              <Band id="head">
                                <Cell/>
                                <Cell col="1" text="소득의&#13;&#10;종 류"/>
                                <Cell col="2" text="소득구분"/>
                                <Cell col="3" text="코드"/>
                                <Cell col="4" text="인 원"/>
                                <Cell col="5" text="소 득&#13;&#10;지급액"/>
                                <Cell col="6" text="결정세액"/>
                                <Cell col="7" text="계"/>
                                <Cell col="8" text="기납부세액&#13;&#10;(주, 현)"/>
                                <Cell col="9" text="기납부세액&#13;&#10;(종, 전)"/>
                                <Cell col="10" text="차 감&#13;&#10;세액"/>
                                <Cell col="11" text="분 납&#13;&#10;금액"/>
                                <Cell col="12" text="조정환급&#13;&#10;세 액"/>
                                <Cell col="13" text="환 급&#13;&#10;신청액"/>
                              </Band>
                              <Band id="body">
                                <Cell text="bind:FLAG" background="#59a7ea" border="1px solid #ffffff" color="#ffffff" font="normal 700 12px/normal &quot;Dotum&quot;"/>
                                <Cell col="1" text="bind:NM_GUBUN" background="#59a7ea" border="1px solid #ffffff" color="#ffffff" font="normal 700 12px/normal &quot;Dotum&quot;"/>
                                <Cell col="2" text="bind:CD_GUBUN" background="#59a7ea" border="1px solid #ffffff" color="#ffffff" font="normal 700 12px/normal &quot;Dotum&quot;" textAlign="center"/>
                                <Cell col="3" text="bind:CD_CODE" textAlign="center" edittype="text" displaytype="text" editautoselect="false"/>
                                <Cell col="4" text="bind:NO_INWON" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="5" text="bind:AM_TOTSUPPLY" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="6" text="bind:AM_FIXTAX" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="7" text="bind:AM_BEFTAX" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="8" text="bind:AM_BEFTAX_NOW" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="9" text="bind:AM_BEFTAX_BEF" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="10" text="bind:AM_DEDCOLLECTTAX" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="11" text="bind:AM_PARTDECOTAX" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="12" text="bind:AM_RETURNTAX" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="13" text="bind:AM_RETURNAPPLY" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                              </Band>
                            </Format>
                          </Formats>
                        </Grid>
                        <Static id="staTITLE" taborder="1" text="원천징수세액환급신청서 부표" left="0" top="1" height="30" cssclass="sta_TITLE_Bg" textAlign="left" right="0" onclick="divData_tabData_tab3_staTITLE_onclick"/>
                        <Button id="btnRemove" taborder="2" text="삭제" top="8" width="50" height="22" left="staTITLE:-114" onclick="divData_tabData_tab3_btnRemove_onclick"/>
                        <Button id="btnAdd" taborder="3" text="입력" top="8" width="50" height="22" left="staTITLE:-167" onclick="divData_tabData_tab3_btnAdd_onclick"/>
                      </Layout>
                    </Layouts>
                  </Tabpage>
                  <Tabpage id="tab4" text="승계명세" enable="true" left="27" top="29" width="1280" height="511">
                    <Layouts>
                      <Layout>
                        <Grid id="objGrid4" taborder="0" left="5" top="32" right="5" bottom="5" binddataset="dsList4">
                          <Formats>
                            <Format id="default">
                              <Columns>
                                <Column size="20"/>
                                <Column size="120"/>
                                <Column size="200"/>
                                <Column size="100"/>
                                <Column size="100"/>
                                <Column size="100"/>
                                <Column size="100"/>
                                <Column size="130"/>
                                <Column size="0"/>
                              </Columns>
                              <Rows>
                                <Row size="48" band="head"/>
                                <Row size="24" band="head"/>
                                <Row size="24"/>
                              </Rows>
                              <Band id="head">
                                <Cell rowspan="2"/>
                                <Cell col="1" colspan="2" text="승계대상 사업자"/>
                                <Cell col="3" colspan="2" text="차월이월 환급세액&#13;&#10; 승계 근거"/>
                                <Cell col="5" colspan="3" text="승계대상 차월이월 환급세액 명세"/>
                                <Cell col="8" rowspan="2"/>
                                <Cell row="1" col="1" text="사업자등록번호"/>
                                <Cell row="1" col="2" text="상호"/>
                                <Cell row="1" col="3" text="일자"/>
                                <Cell row="1" col="4" text="근거"/>
                                <Cell row="1" col="5" text="귀속연월"/>
                                <Cell row="1" col="6" text="지급연월"/>
                                <Cell row="1" col="7" text="차월이월 환급세액"/>
                              </Band>
                              <Band id="body">
                                <Cell text="bind:FLAG"/>
                                <Cell col="1" text="bind:NO_SJC"/>
                                <Cell col="2" text="bind:DS_SJC"/>
                                <Cell col="3" text="bind:DT_SUCCESSION"/>
                                <Cell col="4" text="bind:CD_SUCCESSION_BASIS"/>
                                <Cell col="5" text="bind:YM_IMPUTE_SUCC"/>
                                <Cell col="6" text="bind:YM_SUPPLY_SUCC"/>
                                <Cell col="7" text="bind:AM_WOLRETURNTAX" edittype="mask" displaytype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="8" text="bind:CD_SEQ"/>
                              </Band>
                            </Format>
                          </Formats>
                        </Grid>
                        <Static id="staTITLE" taborder="1" text="합병 및 사업자단위과세 전환 등에 따른 차월이월 환급세액 승계 명세" left="0" top="1" height="30" cssclass="sta_TITLE_Bg" textAlign="left" right="0" onclick="divData_tabData_tab3_staTITLE_onclick"/>
                        <Button id="btnAdd" taborder="2" text="입력" top="8" width="50" height="22" left="1153" onclick="divData_tabData_tab4_btnAdd_onclick"/>
                        <Button id="btnRemove" taborder="3" text="삭제" top="8" width="50" height="22" left="1206" onclick="divData_tabData_tab4_btnRemove_onclick"/>
                      </Layout>
                    </Layouts>
                  </Tabpage>
                  <Tabpage id="tab5" text="기납부세액" left="27" top="29" width="1280" height="511">
                    <Layouts>
                      <Layout>
                        <Static id="staTITLE" taborder="1" text="원천징수 신고납부 현황" left="0" top="1" height="30" cssclass="sta_TITLE_Bg" textAlign="left" right="0"/>
                        <Grid id="objGrid5" taborder="0" left="5" top="staTITLE:1" right="5" binddataset="dsList3" height="142">
                          <Formats>
                            <Format id="default">
                              <Columns>
                                <Column size="20"/>
                                <Column size="100"/>
                                <Column size="80"/>
                                <Column size="80"/>
                                <Column size="60"/>
                                <Column size="60"/>
                                <Column size="120"/>
                                <Column size="120"/>
                                <Column size="120"/>
                                <Column size="120"/>
                              </Columns>
                              <Rows>
                                <Row size="30" band="head"/>
                                <Row size="24"/>
                                <Row size="24" band="summ"/>
                              </Rows>
                              <Band id="head">
                                <Cell/>
                                <Cell col="1" text="소득의&#13;&#10;구분"/>
                                <Cell col="2" text="귀속연월"/>
                                <Cell col="3" text="지급연월"/>
                                <Cell col="4" text="코드"/>
                                <Cell col="5" text="인원"/>
                                <Cell col="6" text="총지급액"/>
                                <Cell col="7" text="1.소득세등&#13;&#10;징수"/>
                                <Cell col="8" text="2.농특세&#13;&#10;징수"/>
                                <Cell col="9" text="가산세&#13;&#10; 징수"/>
                              </Band>
                              <Band id="body">
                                <Cell text="bind:FLAG" color="#ffffff" wordWrap="none"/>
                                <Cell col="1" text="bind:CD_GUBUN" textAlign="center" combodataset="dsCD_GUBUN" combocodecol="CODE" combodatacol="VALUE" comboautoselect="true" combotype="dropdown" combopopuptype="center"/>
                                <Cell col="2" text="bind:YM_JIGUB" displaytype="date" calendarautoselect="true" calendardateformat="yyyy-MM" calendareditformat="yyyy-MM"/>
                                <Cell col="3" text="bind:CD_CODE" displaytype="text" calendardateformat="yyyy-MM" calendarautoselect="true" calendareditformat="yyyy-MM"/>
                                <Cell col="4" text="bind:NO_INWON" displaytype="text" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="5" text="bind:AM_TOTSUPPLY" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="6" text="bind:AM_INCOMETAX" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="7" text="bind:AM_SPECIALTAX" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="8" text="bind:AM_ADDTAX" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="9"/>
                              </Band>
                              <Band id="summary">
                                <Cell/>
                                <Cell col="1"/>
                                <Cell col="2"/>
                                <Cell col="3"/>
                                <Cell col="4"/>
                                <Cell col="5"/>
                                <Cell col="6"/>
                                <Cell col="7"/>
                                <Cell col="8"/>
                                <Cell col="9"/>
                              </Band>
                            </Format>
                          </Formats>
                        </Grid>
                        <Static id="staTITLE00" taborder="2" text="지급명세서 기납부세액 현황" left="0" top="objGrid5:1" height="30" cssclass="sta_TITLE_Bg" textAlign="left" right="0"/>
                        <Grid id="objGrid6" taborder="3" left="5" top="staTITLE00:1" right="5" binddataset="dsList3" height="183">
                          <Formats>
                            <Format id="default">
                              <Columns>
                                <Column size="20"/>
                                <Column size="100"/>
                                <Column size="100"/>
                                <Column size="100"/>
                                <Column size="120"/>
                                <Column size="60"/>
                                <Column size="200"/>
                                <Column size="120"/>
                                <Column size="120"/>
                                <Column size="120"/>
                              </Columns>
                              <Rows>
                                <Row size="24" band="head"/>
                                <Row size="24" band="head"/>
                                <Row size="24"/>
                              </Rows>
                              <Band id="head">
                                <Cell rowspan="2"/>
                                <Cell col="1" rowspan="2" text="소득의&#13;&#10;구분"/>
                                <Cell col="2" rowspan="2" text="사 번"/>
                                <Cell col="3" rowspan="2" text="성 명"/>
                                <Cell col="4" rowspan="2" text="주민번호"/>
                                <Cell col="5" colspan="5" text="주/현(종/전)근무지"/>
                                <Cell row="1" col="5" text="구분" combodataset="dsTY_GUBUN" combocodecol="CODE" combodatacol="VALUE"/>
                                <Cell row="1" col="6" text="근무지명"/>
                                <Cell row="1" col="7" text="사업자번호"/>
                                <Cell row="1" col="8" text="3.소득세등"/>
                                <Cell row="1" col="9" text="4.농특세"/>
                              </Band>
                              <Band id="body">
                                <Cell text="bind:FLAG"/>
                                <Cell col="1" text="bind:CD_GUBUN" textAlign="center" combodataset="dsCD_GUBUN" combocodecol="CODE" combodatacol="VALUE" calendarautoselect="false" comboautoselect="true" combotype="dropdown"/>
                                <Cell col="2" text="bind:ID_SABUN" textAlign="center"/>
                                <Cell col="3" text="bind:DS_NAME" textAlign="center"/>
                                <Cell col="4" text="bind:NO_ID" textAlign="center" comboautoselect="true"/>
                                <Cell col="5" text="bind:TY_GUBUN" textAlign="center"/>
                                <Cell col="6" text="bind:DS_PREPAY" textAlign="center"/>
                                <Cell col="7" text="bind:CD_PREPAY" textAlign="center"/>
                                <Cell col="8" text="bind:AM_INCOMETAX" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="9" text="bind:AM_SPECIALTAX" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                              </Band>
                            </Format>
                          </Formats>
                        </Grid>
                        <Button id="btnIncomtax" taborder="4" text="신고현황 불러오기" top="8" width="126" height="22" left="staTITLE:-296" onclick="divData_tabData_tab5_btnIncomtax_onclick"/>
                        <Radio id="rdoGiGubun2" taborder="5" left="staTITLE00:-436" top="182" width="123" height="20" index="0" text="연말" value="Y" innerdataset="dsGiGubun" datacolumn="VALUE" codecolumn="CODE" fittocontents="width" direction="vertical" onitemchanged="fn_onitemchanged"/>
                        <Button id="btnGiData" taborder="6" text="기납부세액 불러오기" top="181" width="126" height="22" left="rdoGiGubun2:17" onclick="divData_tabData_tab5_btnGiData_onclick"/>
                        <Div id="divJojung" taborder="7" left="5" width="1172" height="106" top="objGrid6:2">
                          <Layouts>
                            <Layout>
                              <Static id="sta00" taborder="0" text="소득세  등" left="0" top="0" width="364" height="27" cssclass="sta_WF_tablelabel" textAlign="center"/>
                              <Static id="staBg05" taborder="1" left="0" top="52" height="27" cssclass="sta_WF_tablebg" width="122"/>
                              <Static id="sta00_00" taborder="2" text="농어촌특별세 등" left="363" top="0" width="424" height="27" cssclass="sta_WF_tablelabel" textAlign="center"/>
                              <Static id="sta00_00_00" taborder="3" text="사유" left="786" top="0" width="362" height="53" cssclass="sta_WF_tablelabel" textAlign="center"/>
                              <Static id="sta00_01" taborder="15" text="1. 소득세  등 합계" left="0" top="26" width="122" height="27" cssclass="sta_WF_tablelabel" textAlign="center"/>
                              <Static id="sta00_01_00" taborder="16" text="3. 주소득세등합계" left="121" top="26" width="122" height="27" cssclass="sta_WF_tablelabel" textAlign="center"/>
                              <Static id="sta00_01_01" taborder="17" text="차이금액(③-①)" left="242" top="26" width="122" height="27" cssclass="sta_WF_tablelabel" textAlign="center"/>
                              <Static id="staBg05_00" taborder="18" left="121" top="52" height="27" cssclass="sta_WF_tablebg" width="122"/>
                              <Static id="staBg05_00_00" taborder="19" left="242" top="52" height="27" cssclass="sta_WF_tablebg" width="122"/>
                              <Static id="sta00_01_01_00" taborder="20" text="②농특세 합계" left="363" top="26" width="142" height="27" cssclass="sta_WF_tablelabel" textAlign="center"/>
                              <Static id="sta00_01_01_01" taborder="21" text="④ 주 농특세 합계" left="504" top="26" width="142" height="27" cssclass="sta_WF_tablelabel" textAlign="center"/>
                              <Static id="sta00_01_01_02" taborder="22" text="차이금액(④-②)" left="645" top="26" width="142" height="27" cssclass="sta_WF_tablelabel" textAlign="center"/>
                              <Static id="staBg05_00_00_00" taborder="23" left="363" top="52" height="27" cssclass="sta_WF_tablebg" width="142"/>
                              <Static id="staBg05_00_00_01" taborder="24" left="504" top="52" height="27" cssclass="sta_WF_tablebg" width="142"/>
                              <Static id="staBg05_00_00_02" taborder="25" left="645" top="52" height="27" cssclass="sta_WF_tablebg" width="142"/>
                              <Static id="staBg05_00_00_03" taborder="26" left="786" top="52" height="27" cssclass="sta_WF_tablebg" width="362"/>
                              <Static id="sta00_01_02" taborder="27" text="사유내용" left="0" top="78" width="122" height="27" cssclass="sta_WF_tablelabel" textAlign="center"/>
                              <Static id="staBg05_00_00_03_00" taborder="28" left="121" top="78" height="27" cssclass="sta_WF_tablebg" width="1027"/>
                              <CheckBox id="chkReson1" taborder="9" text="중퇴" left="819" top="58" width="50" height="17" onchanged="fn_jojungItem_onchanged"/>
                              <CheckBox id="chkReson2" taborder="10" text="전입" left="879" top="58" width="50" height="17" onchanged="fn_jojungItem_onchanged"/>
                              <CheckBox id="chkReson3" taborder="11" text="전출" left="939" top="58" width="50" height="17" onchanged="fn_jojungItem_onchanged"/>
                              <CheckBox id="chkReson4" taborder="12" text="합병" left="999" top="58" width="50" height="17" onchanged="fn_jojungItem_onchanged"/>
                              <CheckBox id="chkReson5" taborder="13" text="기타" left="1059" top="58" width="50" height="17" onchanged="fn_jojungItem_onchanged"/>
                              <MaskEdit id="mskAM_INCOMTAX" taborder="4" left="4" top="sta00_01:2" width="115" height="20" format="###,###,###,###" limitbymask="both" onkillfocus="mask_onkillfocus" onchanged="fn_jojungItem_onchanged"/>
                              <MaskEdit id="mskAM_INCOMTAX_GI" taborder="5" left="124" top="sta00_01_00:2" width="115" height="20" format="###,###,###,###" limitbymask="both" onkillfocus="mask_onkillfocus" onchanged="fn_jojungItem_onchanged"/>
                              <MaskEdit id="mskAM_INCOMTAX_DIFF" taborder="6" left="246" top="sta00_01_01:2" width="115" height="20" format="###,###,###,###" limitbymask="both" onkillfocus="mask_onkillfocus" onchanged="fn_jojungItem_onchanged"/>
                              <MaskEdit id="mskAM_SPECIALTAX" taborder="7" left="374" top="sta00_01_01_00:2" width="115" height="20" format="###,###,###,###" limitbymask="both" onkillfocus="mask_onkillfocus" onchanged="fn_jojungItem_onchanged"/>
                              <MaskEdit id="mskAM_SPECIALTAX_GI" taborder="8" left="519" top="sta00_01_01_01:2" width="115" height="20" format="###,###,###,###" limitbymask="both" onkillfocus="mask_onkillfocus" onchanged="fn_jojungItem_onchanged"/>
                              <MaskEdit id="mskAM_SPECIALTAX_DIFF" taborder="14" left="664" top="sta00_01_01_02:2" width="115" height="20" format="###,###,###,###" limitbymask="both" onkillfocus="mask_onkillfocus" onchanged="fn_jojungItem_onchanged"/>
                              <Edit id="txtDS_REASON" taborder="29" left="124" top="82" width="660" height="20" textAlign="left" inputfilter="none" inputtype="normal" maxlength="10"/>
                            </Layout>
                          </Layouts>
                        </Div>
                        <Button id="btnAdd" taborder="8" text="입력" top="8" width="50" height="22" left="btnIncomtax:3" onclick="divData_tabData_tap5_btnAdd_onclick"/>
                        <Button id="btnRemove" taborder="9" text="삭제" top="8" width="50" height="22" left="btnIncomtax:56" onclick="divData_tabData_tap5_btnRemove_onclick"/>
                        <Button id="btnGiAdd" taborder="10" text="입력" top="181" width="50" height="22" left="btnGiData:3" onclick="divData_tabData_tap5_btnGiAdd_onclick"/>
                        <Button id="btnGiRemove" taborder="11" text="삭제" top="181" width="50" height="22" left="btnGiData:56" onclick="divData_tabData_tap5_btnGiRemove_onclick"/>
                      </Layout>
                    </Layouts>
                  </Tabpage>
                  <Tabpage id="tab6" text="전월미환급세액">
                    <Layouts>
                      <Layout>
                        <Static id="staTITLE" taborder="0" text="환급 신청 시 전월 미환급세액 명세" left="0" top="1" height="30" cssclass="sta_TITLE_Bg" textAlign="left" right="0"/>
                        <Grid id="objGrid8" taborder="1" left="5" top="32" right="5" binddataset="dsList3" height="149">
                          <Formats>
                            <Format id="default">
                              <Columns>
                                <Column size="20"/>
                                <Column size="100"/>
                                <Column size="80"/>
                                <Column size="80"/>
                                <Column size="60"/>
                                <Column size="60"/>
                                <Column size="120"/>
                                <Column size="120"/>
                                <Column size="120"/>
                                <Column size="120"/>
                              </Columns>
                              <Rows>
                                <Row size="30" band="head"/>
                                <Row size="24"/>
                                <Row size="24" band="summ"/>
                              </Rows>
                              <Band id="head">
                                <Cell/>
                                <Cell col="1" text="귀속연월"/>
                                <Cell col="2" text="지급연월"/>
                                <Cell col="3" text="신고구분"/>
                                <Cell col="4" text="세목코드"/>
                                <Cell col="5" text="세목"/>
                                <Cell col="6" text="1.발생환급세액"/>
                                <Cell col="7" text="2.같은세목의 납부할세액"/>
                                <Cell col="8" text="3.당월발생환급세액(1-2)"/>
                              </Band>
                              <Band id="body">
                                <Cell text="bind:FLAG" color="#ffffff" wordWrap="none"/>
                                <Cell col="1" text="bind:CD_GUBUN" textAlign="center" combodataset="dsCD_GUBUN" combocodecol="CODE" combodatacol="VALUE" comboautoselect="true" combotype="dropdown" combopopuptype="center"/>
                                <Cell col="2" text="bind:YM_JIGUB" displaytype="date" calendarautoselect="true" calendardateformat="yyyy-MM" calendareditformat="yyyy-MM"/>
                                <Cell col="3" text="bind:CD_CODE" displaytype="text" calendardateformat="yyyy-MM" calendarautoselect="true" calendareditformat="yyyy-MM"/>
                                <Cell col="4" text="bind:NO_INWON" displaytype="text" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="5" text="bind:AM_TOTSUPPLY" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="6" text="bind:AM_INCOMETAX" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="7" text="bind:AM_SPECIALTAX" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="9"/>
                              </Band>
                              <Band id="summary">
                                <Cell/>
                                <Cell col="1"/>
                                <Cell col="2"/>
                                <Cell col="3"/>
                                <Cell col="4"/>
                                <Cell col="5"/>
                                <Cell col="6"/>
                                <Cell col="7"/>
                                <Cell col="8"/>
                                <Cell col="9"/>
                              </Band>
                            </Format>
                          </Formats>
                        </Grid>
                        <Static id="staTITLE00" taborder="2" text="환급세액 조정 현황" left="0" top="184" height="28" cssclass="sta_TITLE_Bg" textAlign="left" right="0"/>
                        <Grid id="objGrid9" taborder="3" left="5" top="212" right="5" binddataset="dsList3" height="283">
                          <Formats>
                            <Format id="default">
                              <Columns>
                                <Column size="20"/>
                                <Column size="100"/>
                                <Column size="80"/>
                                <Column size="80"/>
                                <Column size="60"/>
                                <Column size="60"/>
                                <Column size="120"/>
                                <Column size="120"/>
                                <Column size="120"/>
                                <Column size="120"/>
                              </Columns>
                              <Rows>
                                <Row size="30" band="head"/>
                                <Row size="24"/>
                                <Row size="24" band="summ"/>
                              </Rows>
                              <Band id="head">
                                <Cell/>
                                <Cell col="1" text="귀속연월"/>
                                <Cell col="2" text="지급연월"/>
                                <Cell col="3" text="4.전월미환급세액"/>
                                <Cell col="4" text="5.기환급세액"/>
                                <Cell col="5" text="6.차감잔액"/>
                                <Cell col="6" text="7.당월발생&#13;&#10;환급세액"/>
                                <Cell col="7" text="8.조정대상&#13;&#10;환급세액"/>
                                <Cell col="8" text="9.당월조정&#13;&#10;환급세액"/>
                                <Cell col="9" text="10.차월이월&#13;&#10; 환급세액"/>
                              </Band>
                              <Band id="body">
                                <Cell text="bind:FLAG" color="#ffffff" wordWrap="none"/>
                                <Cell col="1" text="bind:CD_GUBUN" textAlign="center" combodataset="dsCD_GUBUN" combocodecol="CODE" combodatacol="VALUE" comboautoselect="true" combotype="dropdown" combopopuptype="center"/>
                                <Cell col="2" text="bind:YM_JIGUB" displaytype="date" calendarautoselect="true" calendardateformat="yyyy-MM" calendareditformat="yyyy-MM"/>
                                <Cell col="3" text="bind:CD_CODE" displaytype="text" calendardateformat="yyyy-MM" calendarautoselect="true" calendareditformat="yyyy-MM"/>
                                <Cell col="4" text="bind:NO_INWON" displaytype="text" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="5" text="bind:AM_TOTSUPPLY" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="6" text="bind:AM_INCOMETAX" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="7" text="bind:AM_SPECIALTAX" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="8" text="bind:AM_ADDTAX" displaytype="mask" edittype="mask" maskeditautoselect="true" maskeditclipmode="includespace" maskeditformat="###,###,###,###,###" maskedittrimtype="both" maskeditlimitbymask="both"/>
                                <Cell col="9"/>
                              </Band>
                              <Band id="summary">
                                <Cell/>
                                <Cell col="1"/>
                                <Cell col="2"/>
                                <Cell col="3"/>
                                <Cell col="4"/>
                                <Cell col="5"/>
                                <Cell col="6"/>
                                <Cell col="7"/>
                                <Cell col="8"/>
                                <Cell col="9"/>
                              </Band>
                            </Format>
                          </Formats>
                        </Grid>
                        <Button id="btnUnAdd1" taborder="4" text="입력" top="8" width="50" height="22" left="staTITLE:-167" onclick="divData_tabData_tab6_btnUnAdd1_onclick"/>
                        <Button id="btnUnRemove1" taborder="5" text="삭제" top="8" width="50" height="22" left="btnUnAdd1:3" onclick="divData_tabData_tab6_btnUnRemove1_onclick"/>
                        <Button id="btnUnAdd2" taborder="6" text="입력" top="188" width="50" height="22" left="staTITLE00:-167" onclick="divData_tabData_tab6_btnUnAdd2_onclick"/>
                        <Button id="btnUnRemove2" taborder="7" text="삭제" top="188" width="50" height="22" left="btnUnAdd2:3" onclick="divData_tabData_tab6_btnUnRemove2_onclick"/>
                      </Layout>
                    </Layouts>
                  </Tabpage>
                </Tabpages>
              </Tab>
              <Static id="staSINGO" taborder="2" text="신고구분" left="0" top="0" width="130" height="27" textAlign="center" cssclass="sta_WF_tablelabelE"/>
              <Static id="staBgSINGO" taborder="1" left="staSINGO:-1" top="staSINGO:-27" height="27" cssclass="sta_WF_tablebg" width="400"/>
              <Static id="staYM_IMPUTE" taborder="15" text="귀속연월" left="staBgSINGO:-1" top="staBgSINGO:-27" width="130" height="27" textAlign="center" cssclass="sta_WF_tablelabelE"/>
              <Static id="staBgYM_IMPUTE" taborder="14" left="staYM_IMPUTE:-1" top="staYM_IMPUTE:-27" height="27" cssclass="sta_WF_tablebg" width="125" text=""/>
              <Static id="staYM_SUPPLY" taborder="17" text="지급연월" left="staBgYM_IMPUTE:-1" top="staBgYM_IMPUTE:-27" width="130" height="27" textAlign="center" cssclass="sta_WF_tablelabelE"/>
              <Static id="staBgYM_SUPPLY" taborder="16" left="staYM_SUPPLY:-1" top="staYM_SUPPLY:-27" height="27" cssclass="sta_WF_tablebg" width="125"/>
              <Static id="staDT_ENTER" taborder="19" text="제출일자" left="staBgYM_SUPPLY:-1" top="staBgYM_SUPPLY:-27" width="130" height="27" textAlign="center" cssclass="sta_WF_tablelabelE"/>
              <Static id="staBgDT_ENTER" taborder="18" left="staDT_ENTER:-1" top="staDT_ENTER:-27" height="27" cssclass="sta_WF_tablebg" width="125"/>
              <Static id="staNM_SANGHO" taborder="21" text="법인명(상호)" left="0" top="staTITLE:5" width="130" height="27" cssclass="sta_WF_tablelabel" textAlign="center"/>
              <Static id="staBgNM_SANGHO" taborder="22" left="staNM_SANGHO:-1" top="staNM_SANGHO:-27" height="27" cssclass="sta_WF_tablebg" width="125"/>
              <Static id="staNM_BOSS" taborder="23" text="대표자(성명)" left="staBgNM_SANGHO:-1" top="staBgNM_SANGHO:-27" width="130" height="27" cssclass="sta_WF_tablelabel" textAlign="center"/>
              <Static id="staBgNM_BOSS" taborder="24" left="staNM_BOSS:-1" top="staNM_BOSS:-27" height="27" cssclass="sta_WF_tablebg" width="125"/>
              <Static id="staNO_TEL" taborder="25" text="전화번호" left="staBgNM_BOSS:-1" top="staBgNM_BOSS:-27" width="130" height="27" cssclass="sta_WF_tablelabel" textAlign="center"/>
              <Static id="staBgNO_TEL" taborder="26" left="staNO_TEL:-1" top="staNO_TEL:-27" height="27" cssclass="sta_WF_tablebg" width="125"/>
              <Static id="staBATCH" taborder="28" text="일괄납부여부" left="staBgNO_TEL:-1" top="staBgNO_TEL:-27" width="130" height="27" textAlign="center" cssclass="sta_WF_tablelabelE"/>
              <Static id="staBgBATCH" taborder="27" left="staBATCH:-1" top="staBATCH:-27" height="27" cssclass="sta_WF_tablebg" width="125"/>
              <Static id="staSAUPJA" taborder="30" text="사업자단위과세여부" left="staBgBATCH:-1" top="staBgBATCH:-27" width="130" height="27" textAlign="center" cssclass="sta_WF_tablelabelE"/>
              <Static id="staBgSAUPJA" taborder="29" left="staSAUPJA:-1" top="staSAUPJA:-27" height="27" cssclass="sta_WF_tablebg" width="125"/>
              <Static id="staNO_SAUP" taborder="32" text="사업자등록번호" left="staNM_SANGHO:-130" top="staNM_SANGHO:-1" width="130" height="27" cssclass="sta_WF_tablelabel" textAlign="center"/>
              <Static id="staBgNO_SAUP" taborder="31" left="staNO_SAUP:-1" top="staNO_SAUP:-27" height="27" cssclass="sta_WF_tablebg" width="125"/>
              <Static id="staADDR" taborder="34" text="사업장소재지" left="staBgNO_SAUP:-1" top="staBgNO_SAUP:-27" width="130" height="27" cssclass="sta_WF_tablelabel" textAlign="center"/>
              <Static id="staBgADDR" taborder="33" left="staADDR:-1" top="staADDR:-27" height="27" cssclass="sta_WF_tablebg" width="884"/>
              <Radio id="rdoSINGO" taborder="3" left="staSINGO:5" top="staSINGO:-23" width="90" height="20" onitemchanged="divData_item_onchanged" index="-1" text="" value="" innerdataset="dsSINGO" datacolumn="VALUE" codecolumn="CODE" fittocontents="width" direction="vertical"/>
              <Div id="ctclYM_IMPUTE" taborder="8" left="staYM_IMPUTE:5" top="staYM_IMPUTE:-23" width="80" height="20" url="cmm::cmmCalMM.xfdl" enableevent="true" text=""/>
              <Div id="ctclYM_SUPPY" taborder="9" left="staYM_SUPPLY:5" top="staYM_SUPPLY:-23" width="80" height="20" url="cmm::cmmCalMM.xfdl" enableevent="true" text=""/>
              <Calendar id="ccfDT_ENTER" taborder="10" left="staDT_ENTER:5" top="staDT_ENTER:-23" width="115" height="20" onchanged="divData_ccfDT_ENTER_onchanged"/>
              <Edit id="edtNM_SANGHO" taborder="35" left="staNM_SANGHO:5" top="staNM_SANGHO:-23" width="115" height="20" readonly="true"/>
              <Edit id="edtNM_BOSS" taborder="36" left="staNM_BOSS:5" top="staNM_BOSS:-23" width="115" height="20" readonly="true"/>
              <Edit id="edtNO_TEL" taborder="37" left="staNO_TEL:5" top="staNO_TEL:-23" width="115" height="20" readonly="true"/>
              <Edit id="edtNO_SAUP" taborder="38" left="staNO_SAUP:5" top="staNO_SAUP:-24" width="115" height="20" readonly="true"/>
              <Edit id="edtADDR" taborder="39" left="staADDR:5" top="staADDR:-23" width="750" height="20" readonly="true"/>
              <Radio id="rdoBATCH" taborder="11" left="staBATCH:5" top="staBATCH:-23" width="100" height="20" index="-1" text="" value="" innerdataset="dsBATCH" datacolumn="VALUE" codecolumn="CODE" fittocontents="width" direction="vertical" onitemchanged="fn_onitemchanged"/>
              <Radio id="rdoSAUPJA" taborder="12" left="staSAUPJA:5" top="staSAUPJA:-23" width="100" height="20" index="-1" text="" value="" innerdataset="dsSAUPJA" datacolumn="VALUE" codecolumn="CODE" fittocontents="width" direction="vertical" onitemchanged="fn_onitemchanged"/>
              <Radio id="rdoSUBWRITE" taborder="13" left="567" top="127" width="217" height="20" index="-1" text="" value="" innerdataset="dsSUBWRITE" datacolumn="VALUE" codecolumn="CODE" fittocontents="width" direction="vertical" onitemchanged="fn_onitemchanged"/>
              <CheckBox id="chkSINGO02" taborder="4" text="수정" left="rdoSINGO:20" top="rdoSINGO:-20" width="45" height="20" visible="true" onchanged="fn_chk_onchanged"/>
              <CheckBox id="chkSINGO03" taborder="5" text="연말" left="chkSINGO02:5" top="chkSINGO02:-20" width="45" height="20" onchanged="fn_chk_onchanged"/>
              <CheckBox id="chkSINGO04" taborder="6" text="환급신청" left="chkSINGO03:5" top="chkSINGO03:-20" width="70" height="20" visible="true" onchanged="fn_chk_onchanged"/>
              <CheckBox id="chkSINGO05" taborder="7" text="승계명세" left="chkSINGO04:5" top="chkSINGO04:-20" width="70" height="20" visible="false" onchanged="fn_chk_onchanged"/>
              <Static id="staSAUPJA00" taborder="40" text="마감여부" left="1012" top="90" width="130" height="27" textAlign="center" cssclass="sta_WF_tablelabel"/>
              <Radio id="rdoYN_CLOSE" taborder="41" left="1147" top="93" width="100" height="20" index="-1" text="" value="" datacolumn="datacolumn" codecolumn="codecolumn" fittocontents="width" direction="vertical" enable="false" innerdataset="innerdataset">
                <Dataset id="innerdataset">
                  <ColumnInfo>
                    <Column id="codecolumn" size="256"/>
                    <Column id="datacolumn" size="256"/>
                  </ColumnInfo>
                  <Rows>
                    <Row>
                      <Col id="codecolumn">Y</Col>
                      <Col id="datacolumn">여</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">N</Col>
                      <Col id="datacolumn">부</Col>
                    </Row>
                  </Rows>
                </Dataset>
              </Radio>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

var context = "/";
if (nexacro.getEnvironmentVariable("evContextPath") != undefined) {
	context = nexacro.getEnvironmentVariable("evContextPath");
}

this.fileConfig = {
	host : this.gfnGetServerUrl(),
	downloadUrl : context + "file/downloadText.do",
	allowTypes : ["txt"],
	maxCount : 1,
	maxSize : "200MB",
	maxTotalSize : "200MB"
};

this.sYnGridMerge = "N";
this.rows = [];
this.vYnSetVarA = false; 
this.vYnSetVarB = false;
this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetParameter();
	this.fnSetEvent();
	this.fnSetGridData();	// 그리드 1,2 셋팅용 
	
	this.ccfCD_CORP.form.CDTextBox.setFocus();
	
	//법인코드 세션에 코드로 셋팅
	this.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);
	this.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP); 

	// 세무단위 초기값 설정
	this.dsSearch.setColumn(0, "CD_DEPT_SELFACNT", this.UserInfo.CD_DEPT_SELFACNT);
	this.divSearch.form.ccfCD_DEPT_SELFACNT.form.fnCodeFindLoad();
	
	// 승계명세 임시숨김처리	
	this.divData.form.tabData.tab4.set_tabbuttonheight(0);
	this.divData.form.tabData.tab4.set_tabbuttonwidth(0);
	
	this.setJojungForm = "";
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {

};

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnData = this.gfnFormButtonAdd("Data", "fnData", "데이터 불러오기");	
	this.btnESingo = this.gfnFormButtonAdd("ESingo", "fnESingo", "전자신고");	
	this.btnSoduk = this.gfnFormButtonAdd("Soduk", "fnSoduk", "소득자료 집계");
	this.btnClose = this.gfnFormButtonAdd("btnClose", "fnTaxClose", "마감");	
	this.btnCancle = this.gfnFormButtonAdd("btnCancle", "fnCancle", "마감취소");	
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {

	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;
	this.ctclYM_FROM = this.divSearch.form.ctclYM_FROM;
	this.ctclYM_TO = this.divSearch.form.ctclYM_TO;
	this.ctclYM_JFROM = this.divSearch.form.ctclYM_JFROM;
	this.ctclYM_JTO = this.divSearch.form.ctclYM_JTO;
	this.ccfCD_DEPT_SELFACNT = this.divSearch.form.ccfCD_DEPT_SELFACNT;	
	
	this.rdoSINGO = this.divData.form.rdoSINGO;
	this.chkSINGO02 = this.divData.form.chkSINGO02;
	this.chkSINGO03 = this.divData.form.chkSINGO03;
	this.chkSINGO04 = this.divData.form.chkSINGO04;
	this.chkSINGO05 = this.divData.form.chkSINGO05;
	
	this.ctclYM_IMPUTE = this.divData.form.ctclYM_IMPUTE;
	this.ctclYM_SUPPY = this.divData.form.ctclYM_SUPPY;
	this.ccfDT_ENTER = this.divData.form.ccfDT_ENTER;
	this.edtNM_SANGHO = this.divData.form.edtNM_SANGHO;
	this.edtNM_BOSS = this.divData.form.edtNM_BOSS;
	this.edtNO_TEL = this.divData.form.edtNO_TEL;
	this.rdoBATCH = this.divData.form.rdoBATCH;
	this.rdoSAUPJA = this.divData.form.rdoSAUPJA;
	this.edtNO_SAUP = this.divData.form.edtNO_SAUP;
	this.edtADDR = this.divData.form.edtADDR;
	this.rdoSUBWRITE = this.divData.form.rdoSUBWRITE;
	this.rdoYN_CLOSE = this.divData.form.rdoYN_CLOSE;
	
	this.tabData = this.divData.form.tabData;
	
	this.mskAM_BEFORETAX = this.tabData.tab1.form.mskAM_BEFORETAX;
	this.mskAM_REQUESTTAX = this.tabData.tab1.form.mskAM_REQUESTTAX;
	this.mskAM_JAN = this.tabData.tab1.form.mskAM_JAN;
	this.mskAM_ILBANRETURN = this.tabData.tab1.form.mskAM_ILBANRETURN;
	this.mskAM_SINTAC = this.tabData.tab1.form.mskAM_SINTAC;
	this.mskAM_GITA = this.tabData.tab1.form.mskAM_GITA;
	this.mskAM_GITA2 = this.tabData.tab1.form.mskAM_GITA2;
	this.mskAM_SETTLE = this.tabData.tab1.form.mskAM_SETTLE;
	this.mskAM_RETURNTAXSUM = this.tabData.tab1.form.mskAM_RETURNTAXSUM;
	this.mskAM_WOLRETURNTAX = this.tabData.tab1.form.mskAM_WOLRETURNTAX;
	this.mskAM_RETURNAPPLY = this.tabData.tab1.form.mskAM_RETURNAPPLY;
	
	this.mskAM_INCOMETAX = this.divData.form.tabData.tab5.form.divJojung.form.mskAM_INCOMTAX;
	this.mskAM_INCOMETAX_GI = this.divData.form.tabData.tab5.form.divJojung.form.mskAM_INCOMTAX_GI;
	this.mskAM_INCOMETAX_DIFF = this.divData.form.tabData.tab5.form.divJojung.form.mskAM_INCOMTAX_DIFF;
	this.mskAM_SPECIALTAX = this.divData.form.tabData.tab5.form.divJojung.form.mskAM_SPECIALTAX;
	this.mskAM_SPECIALTAX_GI = this.divData.form.tabData.tab5.form.divJojung.form.mskAM_SPECIALTAX_GI;
	this.mskAM_SPECIALTAX_DIFF = this.divData.form.tabData.tab5.form.divJojung.form.mskAM_SPECIALTAX_DIFF;
	this.chkReson1 = this.divData.form.tabData.tab5.form.divJojung.form.chkReson1;
	this.chkReson2 = this.divData.form.tabData.tab5.form.divJojung.form.chkReson2;
	this.chkReson3 = this.divData.form.tabData.tab5.form.divJojung.form.chkReson3;
	this.chkReson4 = this.divData.form.tabData.tab5.form.divJojung.form.chkReson4;
	this.chkReson5 = this.divData.form.tabData.tab5.form.divJojung.form.chkReson5;
	this.txtDS_REASON = this.divData.form.tabData.tab5.form.divJojung.form.txtDS_REASON;	

	this.dxGrid = this.tabData.tab1.form.objGrid;
	this.dxGrid2 = this.tabData.tab2.form.objGrid2;	
	this.dxGrid3 = this.tabData.tab3.form.objGrid3;
	this.dxGrid4 = this.tabData.tab4.form.objGrid4;
	this.dxGrid5 = this.tabData.tab5.form.objGrid5;
	this.dxGrid6 = this.tabData.tab5.form.objGrid6;
	this.dxGrid8 = this.tabData.tab6.form.objGrid8;
	this.dxGrid9 = this.tabData.tab6.form.objGrid9;
			
	this.getDataFlag = false;	
	this.strAmBeforetax = 0;
	this.strAmBeforetaxOrg = 0;	
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {

	this.ccfCD_CORP.CodeFindName = "DHX_CFCORP";
	this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";
	
	this.ccfCD_DEPT_SELFACNT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";

	//this.ctclYM_JTO.AfterCDTextChanged = "fnCalAfterCDTextChanged";
	this.ctclYM_SUPPY.AfterCDTextChanged = "fnCalAfterCDTextChanged";
	
	var toYm = this.gfnGetDate().substring(0, 6);
	
	this.ctclYM_FROM.form.TextBox.set_value(toYm);
	this.ctclYM_TO.form.TextBox.set_value(toYm);
	this.ctclYM_JFROM.form.TextBox.set_value(toYm);
	this.ctclYM_JTO.form.TextBox.set_value(toYm);
	
	this.rdoSINGO.set_index(0);
	this.ctclYM_IMPUTE.form.TextBox.set_value(toYm);
	this.ctclYM_SUPPY.form.TextBox.set_value(toYm);

	this.gfnGridInit(this.dxGrid3, this.dsList3, "DH", "DHV_RETURNAPPLY");
	this.gfnGridInit(this.dxGrid4, this.dsList4, "DH", "DHV_SUCCESSIONSPEC");
	this.gfnGridInit(this.dxGrid5, this.dsList5, "DH", "DHV_RETURNINCOMTAX");
	this.gfnGridInit(this.dxGrid6, this.dsList6, "DH", "DHV_RETURNPAYMENT");
	this.gfnGridInit(this.dxGrid8, this.dsList8, "DH", "DHV_UNRETURNLIST");
	this.gfnGridInit(this.dxGrid9, this.dsList9, "DH", "DHV_UNRETURNJOJUNG");
	
	this.dxGrid6.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
	
	this.dxGrid9.EnterCell = "fnGrid_EnterCell";
	this.dxGrid9.setCellProperty("body", this.dxGrid9.getBindCellIndex("body", "AM_UNRETURN"), "cssclass", "expr: currow==0 ? 'BACK_ReadOnly' : ''");	
	this.dxGrid9.setCellProperty("body", this.dxGrid9.getBindCellIndex("body", "AM_GIRETURN"), "cssclass", "expr: currow==0 ? 'BACK_ReadOnly' : ''");
	this.dxGrid9.setCellProperty("body", this.dxGrid9.getBindCellIndex("body", "AM_CHARETURN"), "cssclass", "expr: currow==0 ? 'BACK_ReadOnly' : ''");
	
	//헤더 클릭 이벤트 삭제(소팅 막기 위해 처리)
	this.dxGrid.removeEventHandlerLookup("onheadclick", "gfnGrid_onheadclick", this);
	//헤더 클릭 이벤트 삭제(소팅 막기 위해 처리)
	this.dxGrid2.removeEventHandlerLookup("onheadclick", "gfnGrid_onheadclick", this);
	//헤더 클릭 이벤트 삭제(소팅 막기 위해 처리)
	this.dxGrid3.removeEventHandlerLookup("onheadclick", "gfnGrid_onheadclick", this);
	//헤더 클릭 이벤트 삭제(소팅 막기 위해 처리)
	this.dxGrid4.removeEventHandlerLookup("onheadclick", "gfnGrid_onheadclick", this);
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
		
	//근로소득, 부표작성 파라미터
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("OUT_CD_CORP", "string");
 	this.dsSelect.addColumn("OUT_YMFR_IMPUTE", "string");
 	this.dsSelect.addColumn("OUT_YMTO_IMPUTE", "string");
	this.dsSelect.addColumn("OUT_YMFR_SUPPLY", "string");
	this.dsSelect.addColumn("OUT_YMTO_SUPPLY", "string");
	this.dsSelect.addColumn("OUT_GB_SINGO1", "string");
	
	this.dsGubun = new Dataset();
	this.dsGubun.addColumn("CD_SYSTEM", "string");
	this.dsGubun.addColumn("CD_TYPE", "string");
	this.dsGubun.addColumn("CD_CODE", "string");
	
	//데이터가져오기 파라미러
	this.dsSelect2 = new Dataset();
	this.dsSelect2.addColumn("OUT_CD_CORP", "string");
 	this.dsSelect2.addColumn("OUT_YMFR_IMPUTE", "string");
 	this.dsSelect2.addColumn("OUT_YMTO_IMPUTE", "string");
	this.dsSelect2.addColumn("OUT_YMFR_SUPPLY", "string");
	this.dsSelect2.addColumn("OUT_YMTO_SUPPLY", "string");
	this.dsSelect2.addColumn("OUT_GB_SINGO1", "string");
	
	this.dsSelectFile = new Dataset();
	this.dsSelectFile.addColumn("OUT_CD_CORP", "string");
	this.dsSelectFile.addColumn("OUT_YM_IMPUTE", "string");
	this.dsSelectFile.addColumn("OUT_GB_SINGO1", "string");
		
	this.dsInsert = new Dataset();
	this.dsInsert.addColumn("OUT_CD_CORP", "string");
	this.dsInsert.addColumn("OUT_YM_IMPUTE", "string");
	this.dsInsert.addColumn("YM_SUPPLY", "string");
	this.dsInsert.addColumn("GB_SINGO1", "string");
	this.dsInsert.addColumn("GB_SINGO2", "string");
	this.dsInsert.addColumn("GB_SINGO3", "string");
	this.dsInsert.addColumn("YN_BATCH", "string");
	this.dsInsert.addColumn("CD_GUBUN", "string");
	this.dsInsert.addColumn("NO_INWON", "BIGDECIMAL");
	this.dsInsert.addColumn("AM_TOTSUPPLY", "BIGDECIMAL");
	this.dsInsert.addColumn("AM_INCOMETAX", "BIGDECIMAL");
	this.dsInsert.addColumn("AM_SPECIALTAX", "BIGDECIMAL");
	this.dsInsert.addColumn("AM_ADDTAX", "BIGDECIMAL");
	this.dsInsert.addColumn("AM_RETURNTAX", "BIGDECIMAL");
	this.dsInsert.addColumn("AM_NAPINCOMETAX", "BIGDECIMAL");
	this.dsInsert.addColumn("AM_NAPSPECIALTAX", "BIGDECIMAL");
	this.dsInsert.addColumn("AM_BEFORETAX", "BIGDECIMAL");
	this.dsInsert.addColumn("AM_REQUESTTAX", "BIGDECIMAL");
	this.dsInsert.addColumn("AM_JAN", "BIGDECIMAL");
	this.dsInsert.addColumn("AM_ILBANRETURN", "BIGDECIMAL");
	this.dsInsert.addColumn("AM_SINTAC", "BIGDECIMAL");
	this.dsInsert.addColumn("AM_GITA", "BIGDECIMAL");
	this.dsInsert.addColumn("AM_SETTLE", "BIGDECIMAL");
	this.dsInsert.addColumn("AM_RETURNTAXSUM", "BIGDECIMAL");
	this.dsInsert.addColumn("AM_WOLRETURNTAX", "BIGDECIMAL");
	this.dsInsert.addColumn("DT_ENTER", "string");
	this.dsInsert.addColumn("YN_SUBWRITE", "string");
	this.dsInsert.addColumn("ID_INSERT", "string");
	this.dsInsert.addColumn("AM_RESTAX", "BIGDECIMAL");
	this.dsInsert.addColumn("AM_NAPRESTAX", "BIGDECIMAL");
	this.dsInsert.addColumn("GB_SINGO4", "string");
	this.dsInsert.addColumn("GB_SINGO5", "string");
	this.dsInsert.addColumn("YN_SAUPJA", "string");
	this.dsInsert.addColumn("AM_RETURNAPPLY", "BIGDECIMAL");
	this.dsInsert.addColumn("AM_GITA2", "BIGDECIMAL");
	
	//환급신청 탭 파라미터
	this.dsRSelect = new Dataset();
	this.dsRSelect.addColumn("OUT_CD_CORP", "string");
	this.dsRSelect.addColumn("OUT_YM_IMPUTE", "string");
	this.dsRSelect.addColumn("OUT_GB_SINGO1", "string");
	this.dsRSelect.addColumn("OUT_YM_SUPPLY", "string");
	
	this.dsRInsert = new Dataset();
	this.dsRInsert.addColumn("OUT_CD_CORP", "string");
	this.dsRInsert.addColumn("OUT_YM_IMPUTE", "string");
	this.dsRInsert.addColumn("YM_SUPPLY", "string");
	this.dsRInsert.addColumn("GB_SINGO1", "string");
	this.dsRInsert.addColumn("GB_SINGO2", "string");
	this.dsRInsert.addColumn("GB_SINGO3", "string");
	this.dsRInsert.addColumn("YN_BATCH", "string");
	this.dsRInsert.addColumn("CD_GUBUN", "string");
	this.dsRInsert.addColumn("NM_GUBUN", "string");
	this.dsRInsert.addColumn("CD_CODE", "string");
	this.dsRInsert.addColumn("NO_INWON", "BIGDECIMAL");
	this.dsRInsert.addColumn("AM_TOTSUPPLY", "BIGDECIMAL");
	this.dsRInsert.addColumn("AM_FIXTAX", "BIGDECIMAL");
	this.dsRInsert.addColumn("AM_BEFTAX", "BIGDECIMAL");
	this.dsRInsert.addColumn("AM_BEFTAX_NOW", "BIGDECIMAL");
	this.dsRInsert.addColumn("AM_BEFTAX_BEF", "BIGDECIMAL");
	this.dsRInsert.addColumn("AM_DEDCOLLECTTAX", "BIGDECIMAL");
	this.dsRInsert.addColumn("AM_PARTDECOTAX", "BIGDECIMAL");
	this.dsRInsert.addColumn("AM_RETURNTAX", "BIGDECIMAL");
	this.dsRInsert.addColumn("AM_RETURNAPPLY", "BIGDECIMAL");	
	this.dsRInsert.addColumn("ID_INSERT", "string");
	
	this.dsRDelete = new Dataset();
	this.dsRDelete.addColumn("OUT_CD_CORP", "string");
	this.dsRDelete.addColumn("OUT_YM_IMPUTE", "string");
	this.dsRDelete.addColumn("GB_SINGO1", "string");
	this.dsRDelete.addColumn("CD_GUBUN", "string");	
	this.dsRDelete.addColumn("OUT_YM_SUPPLY", "string");
	
	//승계명세 파라미터
	this.dsSSelect = new Dataset();
	this.dsSSelect.addColumn("OUT_CD_CORP", "string");
	this.dsSSelect.addColumn("OUT_YM_IMPUTE", "string");
	this.dsSSelect.addColumn("OUT_GB_SINGO1", "string");
	this.dsSSelect.addColumn("OUT_YM_SUPPLY", "string");
	
	this.dsSInsert = new Dataset();
	this.dsSInsert.addColumn("OUT_CD_CORP", "string");
	this.dsSInsert.addColumn("OUT_YM_IMPUTE", "string");
	this.dsSInsert.addColumn("GB_SINGO1", "string");
	this.dsSInsert.addColumn("NO_SJC", "string");
	this.dsSInsert.addColumn("DS_SJC", "string");
	this.dsSInsert.addColumn("DT_SUCCESSION", "string");
	this.dsSInsert.addColumn("CD_SUCCESSION_BASIS", "string");
	this.dsSInsert.addColumn("YM_IMPUTE_SUCC", "string");
	this.dsSInsert.addColumn("YM_SUPPLY_SUCC", "string");
	this.dsSInsert.addColumn("AM_WOLRETURNTAX", "BIGDECIMAL");
	this.dsSInsert.addColumn("CD_SEQ", "string");
	this.dsSInsert.addColumn("ID_INSERT", "string");
	
	this.dsSDelete = new Dataset();
	this.dsSDelete.addColumn("OUT_CD_CORP", "string");
	this.dsSDelete.addColumn("OUT_YM_IMPUTE", "string");
	this.dsSDelete.addColumn("GB_SINGO1", "string");
	this.dsSDelete.addColumn("CD_SEQ", "string");
	//전자신고용
	this.dsESingo = new Dataset();
	this.dsESingo.addColumn("OUT_CD_SELFACNT", "string"); //   IN      VARCHAR2,      -- 법인코드
	this.dsESingo.addColumn("OUT_YM_IMPUTE", "string"); //   IN      VARCHAR2,      -- 귀속년월
	this.dsESingo.addColumn("OUT_YM_SUPPLY", "string"); //	  IN      VARCHAR2,	   --지급년월
	this.dsESingo.addColumn("OUT_GB_SINGO1", "string"); //   IN      VARCHAR2,    	
	
	//기납부세액명세서 탭 
    this.dsGInsert = new Dataset();	
	this.dsGInsert.addColumn("OUT_CD_CORP", "string");
	this.dsGInsert.addColumn("OUT_YM_IMPUTE", "string");
	this.dsGInsert.addColumn("YM_SUPPLY", "string");
	this.dsGInsert.addColumn("GB_SINGO1", "string");
	this.dsGInsert.addColumn("GB_SINGO2", "string");
	this.dsGInsert.addColumn("GB_SINGO3", "string");
	this.dsGInsert.addColumn("CD_GUBUN", "string");
	this.dsGInsert.addColumn("NM_GUBUN", "string");
	this.dsGInsert.addColumn("YM_WORK", "string");
	this.dsGInsert.addColumn("YM_JIGUB", "string");
	this.dsGInsert.addColumn("CD_CODE", "string");
	this.dsGInsert.addColumn("NO_INWON", "BIGDECIMAL");
	this.dsGInsert.addColumn("AM_TOTSUPPLY", "BIGDECIMAL");
	this.dsGInsert.addColumn("AM_INCOMETAX", "BIGDECIMAL");
	this.dsGInsert.addColumn("AM_SPECIALTAX", "BIGDECIMAL");
	this.dsGInsert.addColumn("AM_ADDTAX", "BIGDECIMAL");
	this.dsGInsert.addColumn("NO_ID", "BIGDECIMAL");
	this.dsGInsert.addColumn("ID_INSERT", "string");
	
	this.dsGInsert1 = new Dataset();	
	this.dsGInsert1.addColumn("OUT_CD_CORP", "string");
	this.dsGInsert1.addColumn("OUT_YM_IMPUTE", "string");
	this.dsGInsert1.addColumn("YM_SUPPLY", "string");
	this.dsGInsert1.addColumn("GB_SINGO1", "string");
	this.dsGInsert1.addColumn("GB_SINGO2", "string");
	this.dsGInsert1.addColumn("GB_SINGO3", "string");
	this.dsGInsert1.addColumn("CD_GUBUN", "string");
	this.dsGInsert1.addColumn("NM_GUBUN", "string");
	this.dsGInsert1.addColumn("ID_SABUN", "string");
	this.dsGInsert1.addColumn("DS_NAME", "string");
	this.dsGInsert1.addColumn("ID_RESIDENT", "string");
	this.dsGInsert1.addColumn("TY_GUBUN", "string");
	this.dsGInsert1.addColumn("CD_PREPAY", "string");
	this.dsGInsert1.addColumn("DS_PREPAY", "string");
	this.dsGInsert1.addColumn("AM_INCOMETAX", "BIGDECIMAL");
	this.dsGInsert1.addColumn("AM_SPECIALTAX", "BIGDECIMAL");
	this.dsGInsert1.addColumn("NO_ID", "BIGDECIMAL");
	this.dsGInsert1.addColumn("ID_INSERT", "string");
	
	this.dsGInsert2 = new Dataset();
	this.dsGInsert2.addColumn("OUT_CD_CORP", "string");
	this.dsGInsert2.addColumn("OUT_YM_IMPUTE", "string");
	this.dsGInsert2.addColumn("YM_SUPPLY", "string");
	this.dsGInsert2.addColumn("GB_SINGO1", "string");
	this.dsGInsert2.addColumn("GB_SINGO2", "string");
	this.dsGInsert2.addColumn("GB_SINGO3", "string");
	this.dsGInsert2.addColumn("AM_INCOMETAX", "BIGDECIMAL");
	this.dsGInsert2.addColumn("AM_INCOMETAX_GI", "BIGDECIMAL");
	this.dsGInsert2.addColumn("AM_SPECIALTAX", "BIGDECIMAL");
	this.dsGInsert2.addColumn("AM_SPECIALTAX_GI", "BIGDECIMAL");
	this.dsGInsert2.addColumn("AM_INCOMETAX_CHA", "BIGDECIMAL");
	this.dsGInsert2.addColumn("AM_SPECIALTAX_CHA", "BIGDECIMAL");
	this.dsGInsert2.addColumn("YN_REASON1", "string");
	this.dsGInsert2.addColumn("YN_REASON2", "string");
	this.dsGInsert2.addColumn("YN_REASON3", "string");
	this.dsGInsert2.addColumn("YN_REASON4", "string");
	this.dsGInsert2.addColumn("YN_REASON5", "string");
	this.dsGInsert2.addColumn("DS_REASON", "string");
	this.dsGInsert2.addColumn("ID_INSERT", "string");
		
	this.dsGDelete = new Dataset();
	this.dsGDelete.addColumn("NO_ID", "BIGDECIMAL");
	
	this.dsGDelete1 = new Dataset();
	this.dsGDelete1.addColumn("NO_ID", "BIGDECIMAL");
	
	//전월미환급세액 조정명세서
	this.dsUInsert1 = new Dataset();	
	this.dsUInsert1.addColumn("OUT_CD_CORP", "string");
	this.dsUInsert1.addColumn("OUT_YM_IMPUTE", "string");
	this.dsUInsert1.addColumn("YM_SUPPLY", "string");
	this.dsUInsert1.addColumn("GB_SINGO1", "string");
	this.dsUInsert1.addColumn("GB_SINGO2", "string");
	this.dsUInsert1.addColumn("GB_SINGO3", "string");
	this.dsUInsert1.addColumn("CD_GUBUN", "string");
	this.dsUInsert1.addColumn("NM_GUBUN", "string");
	this.dsUInsert1.addColumn("YM_WORK", "string");
	this.dsUInsert1.addColumn("YM_JIGUB", "string");
	this.dsUInsert1.addColumn("TY_GUBUN", "string");
	this.dsUInsert1.addColumn("AM_RETURNTAX", "BIGDECIMAL");
	this.dsUInsert1.addColumn("AM_NAPBUTAX", "BIGDECIMAL");
	this.dsUInsert1.addColumn("AM_BEFORETAX", "BIGDECIMAL");
	this.dsUInsert1.addColumn("NO_ID", "BIGDECIMAL");
	this.dsUInsert1.addColumn("ID_INSERT", "string");
	
	this.dsUInsert2 = new Dataset();	
	this.dsUInsert2.addColumn("OUT_CD_CORP", "string");
	this.dsUInsert2.addColumn("OUT_YM_IMPUTE", "string");
	this.dsUInsert2.addColumn("YM_SUPPLY", "string");
	this.dsUInsert2.addColumn("GB_SINGO1", "string");
	this.dsUInsert2.addColumn("GB_SINGO2", "string");
	this.dsUInsert2.addColumn("GB_SINGO3", "string");
	this.dsUInsert2.addColumn("YM_WORK", "string");
	this.dsUInsert2.addColumn("YM_JIGUB", "string");
	this.dsUInsert2.addColumn("NO_SEQ", "BIGDECIMAL");
	this.dsUInsert2.addColumn("AM_UNRETURN", "BIGDECIMAL");
	this.dsUInsert2.addColumn("AM_GIRETURN", "BIGDECIMAL");
	this.dsUInsert2.addColumn("AM_CHARETURN", "BIGDECIMAL");
	this.dsUInsert2.addColumn("AM_DANGRETURN", "BIGDECIMAL");
	this.dsUInsert2.addColumn("AM_JOJUNGRETURN", "BIGDECIMAL");
	this.dsUInsert2.addColumn("AM_DANGJOJUNGRETURN", "BIGDECIMAL");
	this.dsUInsert2.addColumn("AM_RETURNTAX", "BIGDECIMAL");
	this.dsUInsert2.addColumn("NO_ID", "BIGDECIMAL");
	this.dsUInsert2.addColumn("ID_INSERT", "string");
	
	this.dsUDelete1 = new Dataset();
	this.dsUDelete1.addColumn("NO_ID", "BIGDECIMAL");
	
	this.dsUDelete2 = new Dataset();
	this.dsUDelete2.addColumn("NO_ID", "BIGDECIMAL");
	
	// 마감처리 
	this.dsClose = new Dataset();
	this.dsClose.addColumn("OUT_CD_CORP", "string");
	this.dsClose.addColumn("OUT_YM_IMPUTE", "string");
	this.dsClose.addColumn("GB_SINGO1", "string");
	this.dsClose.addColumn("OUT_YM_SUPPLY", "string");
	this.dsClose.addColumn("YN_CLOSE", "string");
}

// 그리드 기본 data 가져오기 
this.fnSetGridData = function() {

	this.dsGubun.clearData();
	this.dsGubun.addRow();
	
	this.dsGubun.setColumn(0, "CD_SYSTEM", "DH");
	this.dsGubun.setColumn(0, "CD_TYPE", "V27");	
	this.dsGubun.setColumn(0, "CD_CODE", "");	
	
    this.dsGubun.addRow();
	
	this.dsGubun.setColumn(1, "CD_SYSTEM", "DH");
	this.dsGubun.setColumn(1, "CD_TYPE", "V28");	
	this.dsGubun.setColumn(1, "CD_CODE", "");	
	
	var strSvcId    = "selectGubun";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "selectGubun=dsGubun";
	var outData     = "dsGubunA=selectGubun0 dsGubunB=selectGubun1";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
					
}
/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {

	//this.fnSaveValidate();

	if (!this.fnSelectValidate()) return false;
		
	this.gfnGridBeforeSelect(this.dxGrid);
	this.gfnGridBeforeSelect(this.dxGrid2);
	this.gfnGridBeforeSelect(this.dxGrid3);
	this.gfnGridBeforeSelect(this.dxGrid4);
	this.gfnGridBeforeSelect(this.dxGrid5);
	this.gfnGridBeforeSelect(this.dxGrid6);
	this.gfnGridBeforeSelect(this.dxGrid8);
	this.gfnGridBeforeSelect(this.dxGrid9);
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsResult=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
			
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "OUT_CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
	this.dsSelect.setColumn(0, "OUT_YMFR_IMPUTE", this.ctclYM_FROM.form.TextBox.value);
	this.dsSelect.setColumn(0, "OUT_YMTO_IMPUTE", this.ctclYM_TO.form.TextBox.value);
	this.dsSelect.setColumn(0, "OUT_YMFR_SUPPLY", this.ctclYM_JFROM.form.TextBox.value);
	this.dsSelect.setColumn(0, "OUT_YMTO_SUPPLY", this.ctclYM_JTO.form.TextBox.value);
	this.dsSelect.setColumn(0, "OUT_GB_SINGO1", this.rdoSINGO.value);
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
						
}

this.fnSelectReturn = function() {// 환급신청 탭 

	var strSvcId    = "r_select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "r_select=dsRSelect";
	var outData     = "dsList3=r_select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
			
	this.dsRSelect.clearData();
	this.dsRSelect.addRow();
	
	this.dsRSelect.setColumn(0, "OUT_CD_CORP"  , this.ccfCD_CORP.form.CDTextBox.value);
	this.dsRSelect.setColumn(0, "OUT_YM_IMPUTE", this.ctclYM_IMPUTE.form.TextBox.value);
	this.dsRSelect.setColumn(0, "OUT_GB_SINGO1", this.rdoSINGO.value);
	this.dsRSelect.setColumn(0, "OUT_YM_SUPPLY", this.ctclYM_SUPPY.form.TextBox.value);
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]

}

this.fnSelectSuccession = function() { //승계명세 탭

	var strSvcId    = "s_select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "s_select=dsSSelect";
	var outData     = "dsList4=s_select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
			
	this.dsSSelect.clearData();
	this.dsSSelect.addRow();
	
	this.dsSSelect.setColumn(0, "OUT_CD_CORP"  , this.ccfCD_CORP.form.CDTextBox.value);
	this.dsSSelect.setColumn(0, "OUT_YM_IMPUTE", this.ctclYM_IMPUTE.form.TextBox.value);
	this.dsSSelect.setColumn(0, "OUT_GB_SINGO1", this.rdoSINGO.value);
	this.dsSSelect.setColumn(0, "OUT_YM_SUPPLY", this.ctclYM_SUPPY.form.TextBox.value);
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

//기납부세액명세서탭 조회 
this.fnSelectReturnGi = function() {

	var strSvcId    = "g_select";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "g_select1=dsRSelect g_select2=dsRSelect  g_select3=dsRSelect";
	var outData     = "dsList5=g_select10 dsList6=g_select20 dsList7=g_select30";
	var strArg      = "";
	var callBackFnc = "fnCallback";
			
	this.dsRSelect.clearData();
	this.dsRSelect.addRow();
	
	this.dsRSelect.setColumn(0, "OUT_CD_CORP"  , this.ccfCD_CORP.form.CDTextBox.value);
	this.dsRSelect.setColumn(0, "OUT_YM_IMPUTE", this.ctclYM_IMPUTE.form.TextBox.value);
	this.dsRSelect.setColumn(0, "OUT_GB_SINGO1", this.rdoSINGO.value);
	this.dsRSelect.setColumn(0, "OUT_YM_SUPPLY", this.ctclYM_SUPPY.form.TextBox.value);
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]

}

//전월미환급세액 조정명세서 조회 
this.fnSelectUnReturn = function() {

	var strSvcId    = "u_select";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "u_select1=dsRSelect u_select2=dsRSelect";
	var outData     = "dsList8=u_select10 dsList9=u_select20";
	var strArg      = "";
	var callBackFnc = "fnCallback";
			
	this.dsRSelect.clearData();
	this.dsRSelect.addRow();
	
	this.dsRSelect.setColumn(0, "OUT_CD_CORP"  , this.ccfCD_CORP.form.CDTextBox.value);
	this.dsRSelect.setColumn(0, "OUT_YM_IMPUTE", this.ctclYM_IMPUTE.form.TextBox.value);
	this.dsRSelect.setColumn(0, "OUT_GB_SINGO1", this.rdoSINGO.value);
	this.dsRSelect.setColumn(0, "OUT_YM_SUPPLY", this.ctclYM_SUPPY.form.TextBox.value);
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]

}
/*
 *	입력 버튼
 */
this.fnAdd = function(obj:nexacro.NormalDataset) {
// trace(" fnAdd=>" + obj );
// 	switch(this.tabData.tabindex) {
// 		case 0:
// // 			var nrow = this.gfnGridAdd(this.dxGrid); // top (default), bottom, current
//  			break;
// 		case 1:
// //			var nrow = this.gfnGridAdd(this.dxGrid2); // top (default), bottom, current
// 			break;
// 		case 2:
// 			var nrow = this.gfnGridAdd(this.dxGrid3); // top (default), bottom, current
// 			break;
// 		case 3:
// 			var nrow = this.gfnGridAdd(this.dxGrid4); // top (default), bottom, current
// 			break;
// 		case 4:
// 		    var objApp = nexacro.getApplication(); 	
// 			var objForm = objApp.getActiveForm();
// 			var obj = this.getFocus().parent.name;
// 			var nrow = this.gfnGridAdd(obj); // top (default), bottom, current
// 			break;
// 		case 5:
// 			
// 	}
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	
// 	switch(this.tabData.tabindex) {
// 		case 0:
// 			this.gfnGridDel(this.dxGrid);
// 			break;
// 		case 1:
// 			this.gfnGridDel(this.dxGrid2);
// 			break;
// 	}
}

/*
 *	저장 버튼
 */
this.fnSave = function() {

	if (!this.fnSaveValidate()) return false;
	if (!this.gfnGridValidate(this.dxGrid4)) return;	
	if (!this.gfnGridValidate(this.dxGrid5)) return;
	if (!this.gfnGridValidate(this.dxGrid6)) return;
	if (!this.gfnGridValidate(this.dxGrid8)) return;
	if (!this.gfnGridValidate(this.dxGrid9)) return;

	this.dxGrid.updateToDataset();
 	this.dxGrid2.updateToDataset();
 	this.dxGrid3.updateToDataset();
 	this.dxGrid4.updateToDataset();
	this.dxGrid5.updateToDataset();
	this.dxGrid6.updateToDataset();
	this.dxGrid8.updateToDataset();
	this.dxGrid9.updateToDataset();

 	this.dsInsert.clearData();
	this.dsRInsert.clearData();
	this.dsRDelete.clearData();	
	this.dsSInsert.clearData();
	this.dsSDelete.clearData();
	this.dsGInsert.clearData();
	this.dsGInsert1.clearData();
	this.dsGInsert2.clearData();
	this.dsGDelete.clearData();
	this.dsGDelete1.clearData();
	this.dsUInsert1.clearData();
	this.dsUInsert2.clearData();
	this.dsUDelete1.clearData();
	this.dsUDelete2.clearData();
	
	var nrow = -1;
	
	//근로소득
	            // 구분		1. 인원		2.총지급액     3. 소득세액    4.농어촌특별세  5. 가산세	6.환급세	   7. 납부소득세		8. 납부농특세 
	var keys = ["CD_GUBUN", "NO_INWON", "AM_TOTSUPPLY", "AM_INCOMETAX", "AM_SPECIALTAX", "AM_ADDTAX", "AM_RETURNTAX", "AM_NAPINCOMETAX", "AM_NAPSPECIALTAX"];
	
	for(var i = 0 ; i < this.dsList.rowcount ; i ++) {
		
		//if(this.dsList.getColumn(i, "FLAG") == "U") {
		
			nrow = this.dsInsert.addRow();
		
			this.dsInsert.setColumn(nrow, "OUT_CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
			this.dsInsert.setColumn(nrow, "OUT_YM_IMPUTE", this.ctclYM_IMPUTE.form.TextBox.value);
			this.dsInsert.setColumn(nrow, "YM_SUPPLY", this.ctclYM_SUPPY.form.TextBox.value);
			this.dsInsert.setColumn(nrow, "GB_SINGO1", this.rdoSINGO.value);
			this.dsInsert.setColumn(nrow, "GB_SINGO2", this.chkSINGO02.value ? "Y" : "N");			
			this.dsInsert.setColumn(nrow, "GB_SINGO3", this.chkSINGO03.value ? "Y" : "N");
			this.dsInsert.setColumn(nrow, "YN_BATCH", this.rdoBATCH.value);
			
			for(var j = 0 ; j < keys.length ; j++) {			
				this.dsInsert.setColumn(nrow, keys[j], this.dsList.getColumn(i, keys[j]));
			}
			
			this.dsInsert.setColumn(nrow, "AM_BEFORETAX", this.gfnIsNull(this.mskAM_BEFORETAX.value) ? 0 : Number(this.mskAM_BEFORETAX.value));
			this.dsInsert.setColumn(nrow, "AM_REQUESTTAX", this.gfnIsNull(this.mskAM_REQUESTTAX.value) ? 0 : Number(this.mskAM_REQUESTTAX.value));
			this.dsInsert.setColumn(nrow, "AM_JAN", this.gfnIsNull(this.mskAM_JAN.value) ? 0 : Number(this.mskAM_JAN.value));
			this.dsInsert.setColumn(nrow, "AM_ILBANRETURN", this.gfnIsNull(this.mskAM_ILBANRETURN.value) ? 0 : Number(this.mskAM_ILBANRETURN.value));
			this.dsInsert.setColumn(nrow, "AM_SINTAC", this.gfnIsNull(this.mskAM_SINTAC.value) ? 0 : Number(this.mskAM_SINTAC.value));
			this.dsInsert.setColumn(nrow, "AM_GITA", this.gfnIsNull(this.mskAM_GITA.value) ? 0 : Number(this.mskAM_GITA.value));
			this.dsInsert.setColumn(nrow, "AM_SETTLE", this.gfnIsNull(this.mskAM_SETTLE.value) ? 0 : Number(this.mskAM_SETTLE.value));
			this.dsInsert.setColumn(nrow, "AM_RETURNTAXSUM", this.gfnIsNull(this.mskAM_RETURNTAXSUM.value) ? 0 : Number(this.mskAM_RETURNTAXSUM.value));
			this.dsInsert.setColumn(nrow, "AM_WOLRETURNTAX", this.gfnIsNull(this.mskAM_WOLRETURNTAX.value) ? 0 : Number(this.mskAM_WOLRETURNTAX.value));
			this.dsInsert.setColumn(nrow, "DT_ENTER", this.ccfDT_ENTER.value);
			
			this.dsInsert.setColumn(nrow, "YN_SUBWRITE", this.rdoSUBWRITE.value);
			this.dsInsert.setColumn(nrow, "ID_INSERT", this.AuthClient.ID_USER);
			this.dsInsert.setColumn(nrow, "AM_RESTAX", this.dsList.getColumn(i, "AM_RESTAX"));
			this.dsInsert.setColumn(nrow, "AM_NAPRESTAX", this.dsList.getColumn(i, "AM_NAPRESTAX"));
			this.dsInsert.setColumn(nrow, "GB_SINGO4", this.chkSINGO04.value ? "Y" : "N");
			this.dsInsert.setColumn(nrow, "GB_SINGO5", this.chkSINGO05.value ? "Y" : "N");
			this.dsInsert.setColumn(nrow, "YN_SAUPJA", this.rdoSAUPJA.value);
			this.dsInsert.setColumn(nrow, "AM_RETURNAPPLY", this.mskAM_RETURNAPPLY.value);
			this.dsInsert.setColumn(nrow, "AM_GITA2", this.mskAM_GITA2.value);
			
		//}
		
	}
	
	//부표작성
	for(var i = 0 ; i < this.dsList2.rowcount ; i ++) {
		
		if(this.dsList2.getColumn(i, "FLAG") == "U") {
		
			nrow = this.dsInsert.addRow();
		
			this.dsInsert.setColumn(nrow, "OUT_CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
			this.dsInsert.setColumn(nrow, "OUT_YM_IMPUTE", this.ctclYM_IMPUTE.form.TextBox.value);
			this.dsInsert.setColumn(nrow, "YM_SUPPLY", this.ctclYM_SUPPY.form.TextBox.value);
			this.dsInsert.setColumn(nrow, "GB_SINGO1", this.rdoSINGO.value);
			this.dsInsert.setColumn(nrow, "GB_SINGO2", this.chkSINGO02.value ? "Y" : "N");			
			this.dsInsert.setColumn(nrow, "GB_SINGO3", this.chkSINGO03.value ? "Y" : "N");
			this.dsInsert.setColumn(nrow, "YN_BATCH", this.rdoBATCH.value);
			
			for(var j = 0 ; j < keys.length ; j++) {
				this.dsInsert.setColumn(nrow, keys[j], this.dsList2.getColumn(i, keys[j]));
			}
			
			this.dsInsert.setColumn(nrow, "AM_BEFORETAX", this.gfnIsNull(this.mskAM_BEFORETAX.value) ? 0 : Number(this.mskAM_BEFORETAX.value));
			this.dsInsert.setColumn(nrow, "AM_REQUESTTAX", this.gfnIsNull(this.mskAM_REQUESTTAX.value) ? 0 : Number(this.mskAM_REQUESTTAX.value));
			this.dsInsert.setColumn(nrow, "AM_JAN", this.gfnIsNull(this.mskAM_JAN.value) ? 0 : Number(this.mskAM_JAN.value));
			this.dsInsert.setColumn(nrow, "AM_ILBANRETURN", this.gfnIsNull(this.mskAM_ILBANRETURN.value) ? 0 : Number(this.mskAM_ILBANRETURN.value));
			this.dsInsert.setColumn(nrow, "AM_SINTAC", this.gfnIsNull(this.mskAM_SINTAC.value) ? 0 : Number(this.mskAM_SINTAC.value));
			this.dsInsert.setColumn(nrow, "AM_GITA", this.gfnIsNull(this.mskAM_GITA.value) ? 0 : Number(this.mskAM_GITA.value));
			this.dsInsert.setColumn(nrow, "AM_SETTLE", this.gfnIsNull(this.mskAM_SETTLE.value) ? 0 : Number(this.mskAM_SETTLE.value));
			this.dsInsert.setColumn(nrow, "AM_RETURNTAXSUM", this.gfnIsNull(this.mskAM_RETURNTAXSUM.value) ? 0 : Number(this.mskAM_RETURNTAXSUM.value));
			this.dsInsert.setColumn(nrow, "AM_WOLRETURNTAX", this.gfnIsNull(this.mskAM_WOLRETURNTAX.value) ? 0 : Number(this.mskAM_WOLRETURNTAX.value));
			this.dsInsert.setColumn(nrow, "DT_ENTER", this.ccfDT_ENTER.value);
			
			this.dsInsert.setColumn(nrow, "YN_SUBWRITE", this.rdoSUBWRITE.value);
			this.dsInsert.setColumn(nrow, "ID_INSERT", this.AuthClient.ID_USER);
			this.dsInsert.setColumn(nrow, "AM_RESTAX", this.dsList2.getColumn(i, "AM_RESTAX"));
			this.dsInsert.setColumn(nrow, "AM_NAPRESTAX", "");
			this.dsInsert.setColumn(nrow, "GB_SINGO4", this.chkSINGO04.value ? "Y" : "N");
			this.dsInsert.setColumn(nrow, "GB_SINGO5", this.chkSINGO05.value ? "Y" : "N");
			this.dsInsert.setColumn(nrow, "YN_SAUPJA", this.rdoSAUPJA.value);
			this.dsInsert.setColumn(nrow, "AM_RETURNAPPLY", this.mskAM_RETURNAPPLY.value);
			this.dsInsert.setColumn(nrow, "AM_GITA2", this.mskAM_GITA2.value);
			
		}
		
	}
	
	//환급신청	
	keys = ["CD_GUBUN", "CD_CODE", "NM_GUBUN", "NO_INWON", "AM_TOTSUPPLY", "AM_FIXTAX", "AM_BEFTAX", "AM_BEFTAX_NOW", "AM_BEFTAX_BEF", "AM_DEDCOLLECTTAX", "AM_PARTDECOTAX","AM_RETURNTAX", "AM_RETURNAPPLY"];

	for(var i = 0 ; i < this.dsList3.rowcount ; i ++) {
	
		if(this.gfnGetFlag(this.dsList3, i) == "U" || this.gfnGetFlag(this.dsList3, i) == "I") {
		
			nrow = this.dsRInsert.addRow();
			
			this.dsRInsert.setColumn(nrow, "OUT_CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
			this.dsRInsert.setColumn(nrow, "OUT_YM_IMPUTE", this.ctclYM_IMPUTE.form.TextBox.value);
			this.dsRInsert.setColumn(nrow, "YM_SUPPLY", this.ctclYM_SUPPY.form.TextBox.value);
			this.dsRInsert.setColumn(nrow, "GB_SINGO1", this.rdoSINGO.value);
			this.dsRInsert.setColumn(nrow, "GB_SINGO2", this.chkSINGO02.value ? "Y" : "N");
			this.dsRInsert.setColumn(nrow, "GB_SINGO3", this.chkSINGO03.value ? "Y" : "N");
			this.dsRInsert.setColumn(nrow, "YN_BATCH", this.rdoBATCH.value);
			
			for(var j = 0 ; j < keys.length ; j++) {
				this.dsRInsert.setColumn(nrow, keys[j], this.dsList3.getColumn(i, keys[j]));
			}
						
			this.dsRInsert.setColumn(nrow, "ID_INSERT", this.AuthClient.ID_USER);
		}else if(this.gfnGetFlag(this.dsList3, i) == "D") {
			nrow = this.dsRDelete.addRow();
			this.dsRDelete.setColumn(nrow, "OUT_CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
			this.dsRDelete.setColumn(nrow, "OUT_YM_IMPUTE", this.ctclYM_IMPUTE.form.TextBox.value);
			this.dsRDelete.setColumn(nrow, "GB_SINGO1", this.rdoSINGO.value);
			this.dsRDelete.setColumn(nrow, "CD_GUBUN", this.dsList3.getColumn(i, "CD_GUBUN"));
			this.dsRDelete.setColumn(nrow, "OUT_YM_SUPPLY", this.ctclYM_SUPPY.form.TextBox.value);
		}
	}
	
	//승계명세	
	keys = ["NO_SJC", "DS_SJC", "DT_SUCCESSION", "CD_SUCCESSION_BASIS", "YM_IMPUTE_SUCC", "YM_SUPPLY_SUCC", "AM_WOLRETURNTAX", "CD_SEQ"];
	
	for(var i = 0 ; i < this.dsList4.rowcount ; i ++) {
	
		if(this.gfnGetFlag(this.dsList4, i) == "U" || this.gfnGetFlag(this.dsList4, i) == "I") {
		
			nrow = this.dsSInsert.addRow();
		
			this.dsSInsert.setColumn(nrow, "OUT_CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
			this.dsSInsert.setColumn(nrow, "OUT_YM_IMPUTE", this.ctclYM_IMPUTE.form.TextBox.value);
			this.dsSInsert.setColumn(nrow, "GB_SINGO1", this.rdoSINGO.value);
			
			for(var j = 0 ; j < keys.length ; j++) {
				this.dsSInsert.setColumn(nrow, keys[j], this.dsList4.getColumn(i, keys[j]));
			}
			
			this.dsSInsert.setColumn(nrow, "ID_INSERT", this.AuthClient.ID_USER);
		
		}else if(this.gfnGetFlag(this.dsList4, i) == "D") {
			nrow = this.dsSDelete.addRow();
			this.dsSDelete.setColumn(nrow, "OUT_CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
			this.dsSDelete.setColumn(nrow, "OUT_YM_IMPUTE", this.ctclYM_IMPUTE.form.TextBox.value);
			this.dsSDelete.setColumn(nrow, "GB_SINGO1", this.rdoSINGO.value);
			this.dsSDelete.setColumn(nrow, "CD_GUBUN", this.dsList4.getColumn(i, "CD_SEQ"));			
		}		
	}
	
	//기납부세액명세서 - 원천징수현황 
	keys = [ "CD_GUBUN", "NM_GUBUN", "YM_WORK", "YM_JIGUB", "CD_CODE", "NO_INWON", "AM_TOTSUPPLY", "AM_INCOMETAX", "AM_SPECIALTAX", "AM_ADDTAX" , "NO_ID"];
   
	for(var i = 0 ; i < this.dsList5.rowcount ; i ++) {
		if(this.gfnGetFlag(this.dsList5, i) == "U" || this.gfnGetFlag(this.dsList5, i) == "I") {
		    
			nrow = this.dsGInsert.addRow();
			
			this.dsGInsert.setColumn(nrow, "OUT_CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
			this.dsGInsert.setColumn(nrow, "OUT_YM_IMPUTE", this.ctclYM_IMPUTE.form.TextBox.value);
			this.dsGInsert.setColumn(nrow, "YM_SUPPLY", this.ctclYM_SUPPY.form.TextBox.value);
			this.dsGInsert.setColumn(nrow, "GB_SINGO1", this.rdoSINGO.value);
			this.dsGInsert.setColumn(nrow, "GB_SINGO2", this.chkSINGO02.value ? "Y" : "N");
			this.dsGInsert.setColumn(nrow, "GB_SINGO3", this.chkSINGO03.value ? "Y" : "N");
			
			for(var j = 0 ; j < keys.length ; j++) {
	
				this.dsGInsert.setColumn(nrow, keys[j], this.dsList5.getColumn(i, keys[j]));
			}
						
			this.dsGInsert.setColumn(nrow, "ID_INSERT", this.AuthClient.ID_USER);
		} else if(this.gfnGetFlag(this.dsList5, i)=="D") {
			nrow = this.dsGDelete.addRow();
			this.dsGDelete.setColumn(nrow, "NO_ID",  this.dsList5.getColumn(i,"NO_ID"));
		}
	}
	
	//기납부세액명세서 - 기납부세액 
	keys = ["CD_GUBUN", "NM_GUBUN", "ID_SABUN", "DS_NAME", "ID_RESIDENT", "TY_GUBUN", "CD_PREPAY", "DS_PREPAY", "AM_INCOMETAX", "AM_SPECIALTAX", "NO_ID"];

	for(var i = 0 ; i < this.dsList6.rowcount ; i ++) {
	
		if(this.gfnGetFlag(this.dsList6, i) == "U" || this.gfnGetFlag(this.dsList6, i) == "I") {
		
			nrow = this.dsGInsert1.addRow();
			
			this.dsGInsert1.setColumn(nrow, "OUT_CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
			this.dsGInsert1.setColumn(nrow, "OUT_YM_IMPUTE", this.ctclYM_IMPUTE.form.TextBox.value);
			this.dsGInsert1.setColumn(nrow, "YM_SUPPLY", this.ctclYM_SUPPY.form.TextBox.value);
			this.dsGInsert1.setColumn(nrow, "GB_SINGO1", this.rdoSINGO.value);
			this.dsGInsert1.setColumn(nrow, "GB_SINGO2", this.chkSINGO02.value ? "Y" : "N");
			this.dsGInsert1.setColumn(nrow, "GB_SINGO3", this.chkSINGO03.value ? "Y" : "N");
			
			for(var j = 0 ; j < keys.length ; j++) {
				this.dsGInsert1.setColumn(nrow, keys[j], this.dsList6.getColumn(i, keys[j]));
			}
						
			this.dsGInsert1.setColumn(nrow, "ID_INSERT", this.AuthClient.ID_USER);
		} else if(this.gfnGetFlag(this.dsList6, i) =="D") {
			nrow = this.dsGDelete1.addRow();
			this.dsGDelete1.setColumn(nrow, "NO_ID",  this.dsList6.getColumn(i,"NO_ID"));
		}
	}
	//기납부세액명세서 - 조정 차이  	
	if(this.setJojungForm = "U") {
			
		  trace(" 기납부 this.gfnGetFlag(this.dsList7, i)=>" +this.dsList7.getColumn(0, "AM_INCOMETAX") );
			nrow = this.dsGInsert2.addRow();
			
			this.dsGInsert2.setColumn(nrow, "OUT_CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
			this.dsGInsert2.setColumn(nrow, "OUT_YM_IMPUTE", this.ctclYM_IMPUTE.form.TextBox.value);
			this.dsGInsert2.setColumn(nrow, "YM_SUPPLY", this.ctclYM_SUPPY.form.TextBox.value);
			this.dsGInsert2.setColumn(nrow, "GB_SINGO1", this.rdoSINGO.value);
			this.dsGInsert2.setColumn(nrow, "GB_SINGO2", this.chkSINGO02.value ? "Y" : "N");
			this.dsGInsert2.setColumn(nrow, "GB_SINGO3", this.chkSINGO03.value ? "Y" : "N");
			this.dsGInsert2.setColumn(nrow, "AM_INCOMETAX",  this.dsList7.getColumn(0, "AM_INCOMETAX"));
			this.dsGInsert2.setColumn(nrow, "AM_INCOMETAX_GI", this.dsList7.getColumn(0, "AM_INCOMETAX_GI"));
			this.dsGInsert2.setColumn(nrow, "AM_SPECIALTAX", this.dsList7.getColumn(0, "AM_SPECIALTAX"));
			this.dsGInsert2.setColumn(nrow, "AM_SPECIALTAX_GI", this.dsList7.getColumn(0, "AM_SPECIALTAX_GI"));
			this.dsGInsert2.setColumn(nrow, "AM_SPECIALTAX_GI", this.dsList7.getColumn(0, "AM_SPECIALTAX_GI"));
			this.dsGInsert2.setColumn(nrow, "AM_INCOMETAX_CHA", this.dsList7.getColumn(0, "AM_INCOMETAX_CHA"));
			this.dsGInsert2.setColumn(nrow, "AM_SPECIALTAX_CHA", this.dsList7.getColumn(0, "AM_SPECIALTAX_CHA"));
			this.dsGInsert2.setColumn(nrow, "YN_REASON1", this.chkReson1.value ? "Y" : "N");
			this.dsGInsert2.setColumn(nrow, "YN_REASON2", this.chkReson2.value ? "Y" : "N");
			this.dsGInsert2.setColumn(nrow, "YN_REASON3", this.chkReson3.value ? "Y" : "N");
			this.dsGInsert2.setColumn(nrow, "YN_REASON4", this.chkReson4.value ? "Y" : "N");
			this.dsGInsert2.setColumn(nrow, "YN_REASON5", this.chkReson5.value ? "Y" : "N");
			this.dsGInsert2.setColumn(nrow, "DS_REASON", this.txtDS_REASON.value);					
			this.dsGInsert2.setColumn(nrow, "ID_INSERT", this.AuthClient.ID_USER);
	}	
	
	//전월미환급세액 조정명세서_전월미환급세액 명세  
	for(var i = 0 ; i < this.dsList8.rowcount ; i ++) {
	
		if(this.gfnGetFlag(this.dsList8, i) == "U" || this.gfnGetFlag(this.dsList8, i) == "I") {
		
			nrow = this.dsUInsert1.addRow();
			
			this.dsUInsert1.setColumn(nrow, "OUT_CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
			this.dsUInsert1.setColumn(nrow, "OUT_YM_IMPUTE", this.ctclYM_IMPUTE.form.TextBox.value);
			this.dsUInsert1.setColumn(nrow, "YM_SUPPLY", this.ctclYM_SUPPY.form.TextBox.value);
			this.dsUInsert1.setColumn(nrow, "GB_SINGO1", this.rdoSINGO.value);
			this.dsUInsert1.setColumn(nrow, "GB_SINGO2", this.chkSINGO02.value ? "Y" : "N");
			this.dsUInsert1.setColumn(nrow, "GB_SINGO3", this.chkSINGO03.value ? "Y" : "N");
			this.dsUInsert1.setColumn(nrow, "CD_GUBUN", this.dsList8.getColumn(i, "CD_GUBUN"));
			this.dsUInsert1.setColumn(nrow, "YM_WORK", this.dsList8.getColumn(i, "YM_WORK"));
			this.dsUInsert1.setColumn(nrow, "YM_JIGUB", this.dsList8.getColumn(i, "YM_JIGUB"));
			this.dsUInsert1.setColumn(nrow, "TY_GUBUN", this.dsList8.getColumn(i, "TY_GUBUN"));
			this.dsUInsert1.setColumn(nrow, "AM_RETURNTAX", this.dsList8.getColumn(i, "AM_RETURNTAX"));
			this.dsUInsert1.setColumn(nrow, "AM_NAPBUTAX", this.dsList8.getColumn(i, "AM_NAPBUTAX"));
			this.dsUInsert1.setColumn(nrow, "AM_BEFORETAX", this.dsList8.getColumn(i, "AM_BEFORETAX"));			
			this.dsUInsert1.setColumn(nrow, "NO_ID", this.dsList8.getColumn(i, "NO_ID"));			
			this.dsUInsert1.setColumn(nrow, "ID_INSERT", this.AuthClient.ID_USER);
			
		} else if(this.gfnGetFlag(this.dsList8, i) =="D") {
			nrow = this.dsUDelete1.addRow();
			this.dsUDelete1.setColumn(nrow, "NO_ID",  this.dsList8.getColumn(i,"NO_ID"));
		}
	}
	//전월미환급세액 조정명세서_조정현황  
	for(var i = 0 ; i < this.dsList9.rowcount ; i ++) {
	
		if(this.gfnGetFlag(this.dsList9, i) == "U" || this.gfnGetFlag(this.dsList9, i) == "I") {
		
			nrow = this.dsUInsert2.addRow();
			
			this.dsUInsert2.setColumn(nrow, "OUT_CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
			this.dsUInsert2.setColumn(nrow, "OUT_YM_IMPUTE", this.ctclYM_IMPUTE.form.TextBox.value);
			this.dsUInsert2.setColumn(nrow, "YM_SUPPLY", this.ctclYM_SUPPY.form.TextBox.value);
			this.dsUInsert2.setColumn(nrow, "GB_SINGO1", this.rdoSINGO.value);
			this.dsUInsert2.setColumn(nrow, "GB_SINGO2", this.chkSINGO02.value ? "Y" : "N");
			this.dsUInsert2.setColumn(nrow, "GB_SINGO3", this.chkSINGO03.value ? "Y" : "N");
			this.dsUInsert2.setColumn(nrow, "YM_WORK", this.dsList9.getColumn(i, "YM_WORK"));
			this.dsUInsert2.setColumn(nrow, "YM_JIGUB", this.dsList9.getColumn(i, "YM_JIGUB"));
			this.dsUInsert2.setColumn(nrow, "NO_SEQ", this.dsList9.getColumn(i, "NO_SEQ"));
			this.dsUInsert2.setColumn(nrow, "AM_UNRETURN", this.dsList9.getColumn(i, "AM_UNRETURN"));
			this.dsUInsert2.setColumn(nrow, "AM_GIRETURN", this.dsList9.getColumn(i, "AM_GIRETURN"));
			this.dsUInsert2.setColumn(nrow, "AM_CHARETURN", this.dsList9.getColumn(i, "AM_CHARETURN"));		
			this.dsUInsert2.setColumn(nrow, "AM_DANGRETURN", this.dsList9.getColumn(i, "AM_DANGRETURN"));					
			this.dsUInsert2.setColumn(nrow, "AM_JOJUNGRETURN", this.dsList9.getColumn(i, "AM_JOJUNGRETURN"));		
			this.dsUInsert2.setColumn(nrow, "AM_DANGJOJUNGRETURN", this.dsList9.getColumn(i, "AM_DANGJOJUNGRETURN"));	
			this.dsUInsert2.setColumn(nrow, "AM_RETURNTAX", this.dsList9.getColumn(i, "AM_RETURNTAX"));	
			this.dsUInsert2.setColumn(nrow, "NO_ID", this.dsList9.getColumn(i, "NO_ID"));		
			this.dsUInsert2.setColumn(nrow, "ID_INSERT", this.AuthClient.ID_USER);
			
		} else if(this.gfnGetFlag(this.dsList9, i) =="D") {
			nrow = this.dsUDelete2.addRow();
			this.dsUDelete2.setColumn(nrow, "NO_ID",  this.dsList9.getColumn(i,"NO_ID"));
		}
	}
		
	if(this.dsInsert.rowcount == 0 && this.dsRInsert.rowcount == 0 && this.dsSInsert.rowcount == 0 && this.dsRDelete.rowcount == 0 && 
	   this.dsGInsert.rowcount == 0 && this.dsGInsert1.rowcount == 0 && this.dsGInsert1.rowcount == 0 && 
	   this.dsGDelete.rowcount == 0 && this.dsGDelete1.rowcount == 0 &&
	   this.dsUInsert1.rowcount == 0 && this.dsUDelete1.rowcount == 0 && 
	   this.dsUInsert2.rowcount == 0 && this.dsUDelete2.rowcount == 0 && this.dsSDelete.rowcount == 0 ) return;
	
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	//var inData      = "g_insert1=dsGInsert g_insert2=dsGInsert1 g_insert3=dsGInsert2 g_delete1=dsGDelete g_delete2=dsGDelete1";
	var inData      = "insert=dsInsert r_insert=dsRInsert s_insert=dsSInsert g_insert1=dsGInsert g_insert2=dsGInsert1 g_insert3=dsGInsert2 g_delete1=dsGDelete g_delete2=dsGDelete1 u_insert1=dsUInsert1 u_insert2=dsUInsert2 u_delete1=dsUDelete1 u_delete2=dsUDelete2 r_delete=dsRDelete s_delete=dsSDelete";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

this.divData_tabData_tab3_btnAdd_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var nrow = this.gfnGridAdd(this.dxGrid3, "bottom", true);
};

this.divData_tabData_tab3_btnRemove_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.gfnGridDel(this.dxGrid3);
};

this.divData_tabData_tab4_btnAdd_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var nrow = this.gfnGridAdd(this.dxGrid4, "bottom", true);
};

this.divData_tabData_tab4_btnRemove_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.gfnGridDel(this.dxGrid4);
};

this.divData_tabData_tap5_btnAdd_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var nrow = this.gfnGridAdd(this.dxGrid5, "bottom", true);
};

this.divData_tabData_tap5_btnRemove_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.gfnGridDel(this.dxGrid5);
	this.fnSetJojung();
};

this.divData_tabData_tap5_btnGiAdd_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var nrow = this.gfnGridAdd(this.dxGrid6, "bottom", true);
};

this.divData_tabData_tap5_btnGiRemove_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.gfnGridDel(this.dxGrid6);
	this.fnSetJojung();
};

this.divData_tabData_tab6_btnUnAdd1_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var nrow = this.gfnGridAdd(this.dxGrid8, "bottom", true);
};

this.divData_tabData_tab6_btnUnRemove1_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.gfnGridDel(this.dxGrid8);
};

this.divData_tabData_tab6_btnUnAdd2_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var nrow = this.gfnGridAdd(this.dxGrid9, "bottom", true);
	trace(" divData_tabData_tab6_btnUnAdd2_onclick nrow=>" + nrow);
	
	if (nrow != 0)
	{	
		this.dsList9.setColumn(nrow, "AM_UNRETURN" , this.dsList9.getColumn(nrow-1, "AM_RETURNTAX"));
	}
};

this.divData_tabData_tab6_btnUnRemove2_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.gfnGridDel(this.dxGrid9);
};


/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
// 	switch(this.tabData.tabindex) {
// 		case 0:
// 			this.gfnExcelExport(this.dxGrid);
// 			break;
// 		case 1:
// 			this.gfnExcelExport(this.dxGrid2);
// 			break;
// 	}
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {

	if(this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
		this.gfnAlert("법인코드를 입력하세요!");
		return false;
	}
	
// 	if(this.gfnIsNull(this.ctclYM_FROM.form.TextBox.value)) {
// 		this.gfnAlert("귀속기간을 입력하세요!");
// 		return false;
// 	}
// 	
// 	if(this.gfnIsNull(this.ctclYM_TO.form.TextBox.value)) {
// 		this.gfnAlert("귀속기간을 입력하세요!");
// 		return false;
// 	}
	
	if(this.gfnIsNull(this.ctclYM_JFROM.form.TextBox.value)) {
		this.gfnAlert("지급기간을 입력하세요!");
		return false;
	}
	
	if(this.gfnIsNull(this.ctclYM_JTO.form.TextBox.value)) {
		this.gfnAlert("지급기간을 입력하세요!");
		return false;
	}
		
	return true;
};

this.fnSaveValidate = function() {

	//근로소득
// 	for(var i = 0 ; i < this.dsList.rowcount ; i++) {
// 		for(var j = 0 ; j < this.dsList.getColCount() ; j++) {
// 			if(this.dxGridValidate(i, this.dsList.getColID(j)) == false) {
// 				return false;
// 			}
// 		}
// 	}
// 	
// 	//부표작성	
// 	for(var i = 0 ; i < this.dsList2.rowcount ; i++) {
// 		for(var j = 0 ; j < this.dsList2.getColCount() ; j++) {
// 			if(this.dxGrid2Validate(i, this.dsList2.getColID(j)) == false) {
// 				return false;
// 			}
// 		}
// 	}
// 	
// 	//환급신청
	for(var i = 0 ; i < this.dsList3.rowcount ; i++) {
		for(var j = 0 ; j < this.dsList3.getColCount() ; j++) {
			if(this.dxGrid3Validate(i, this.dsList3.getColID(j)) == false) {
				return false;
			}
		}
	}
	
	//승계명세
	for(var i = 0 ; i < this.dsList4.rowcount ; i++) {
		for(var j = 0 ; j < this.dsList4.getColCount() ; j++) {
			if(this.dxGrid4Validate(i, this.dsList4.getColID(j)) == false) {
				return false;
			}
		}
	}

	//기납부세액 명세서 
	for(var i = 0 ; i < this.dsList6.rowcount ; i++) {
	  if(this.dsList6.getColumn(i, this.ucFlag) == "U" || this.dsList6.getColumn(i, this.ucFlag) == "I"){	
		for(var j = 0 ; j < this.dsList6.getColCount() ; j++) {
			if(this.dxGrid6Validate(i, this.dsList6.getColID(j)) == false) {
				return false;
			}
		}
	  }
	}
	
	var totalA04 = nexacro.toNumber(this.dsList.getColumn(this.ucA['A04'], "AM_INCOMETAX"),0) + nexacro.toNumber(this.dsList.getColumn(this.ucA['A04'], "AM_SPECIALTAX"),0) + nexacro.toNumber(this.dsList.getColumn(this.ucA['A04'], "AM_ADDTAX"),0);
	var totalA05 = nexacro.toNumber(this.dsList.getColumn(this.ucA['A05'], "AM_INCOMETAX"),0) + nexacro.toNumber(this.dsList.getColumn(this.ucA['A05'], "AM_SPECIALTAX"),0) + nexacro.toNumber(this.dsList.getColumn(this.ucA['A05'], "AM_ADDTAX"),0);
	var totalA06 = nexacro.toNumber(this.dsList.getColumn(this.ucA['A06'], "AM_INCOMETAX"),0) + nexacro.toNumber(this.dsList.getColumn(this.ucA['A06'], "AM_SPECIALTAX"),0) + nexacro.toNumber(this.dsList.getColumn(this.ucA['A06'], "AM_ADDTAX"),0);
	
	trace("totalA04 :: "+totalA04);
	trace("totalA05 :: "+totalA05);
	trace("totalA06 :: "+totalA06);
	
	if(totalA04 != (totalA05 + totalA06)) {
		this.gfnAlert("A04의 징수세액란 입력값은 A05(징수세액) + A06(징수세액) 계산값과 동일하게 들어가야 합니다.");
		return false;
	}
	
	var strMsg = "";
	var ret = true;
	
	if(this.rdoSINGO.index == -1) {
		strMsg += "신고구분을 선택해 주십시오.\n";
		ret = false;
	}
	
	if(this.rdoBATCH.index == -1) {
		strMsg += "일괄납부여부를 선택해 주십시오.\n";
		ret = false;
	}
	
	if(this.rdoSAUPJA.index == -1) {
		strMsg += "사업자단위과세여부를 선택해 주십시오.\n";
		ret = false;
	}
	
	if(this.rdoSUBWRITE.index == -1) {
		strMsg += "부표작성여부를 선택해 주십시오.\n";
		ret = false;
	}
	
	if(this.gfnIsNull(this.ctclYM_SUPPY.form.TextBox.value)) {
		strMsg += "지급연월을 입력하여 주십시오.\n";
		ret = false;
	}
	
	if(this.gfnIsNull(this.ccfDT_ENTER.value)) {
		strMsg += "제출일자를 입력하여 주십시오.\n";
		ret = false;
	}
	
	if(ret == false) {
		this.gfnAlert(strMsg);
		return false;
	}
	
	return true;
	
}

this.dxGridValidate = function(row, colId) {

	this.dxGrid.updateToDataset();
	
	if(this.dsList.rowcount < row ) return true;

	if(colId == "NO_INWON" && row == this.ucA['A05']) {
		var a = this.gfnIsNull(this.dsList.getColumn(row, colId)) ? 0 : Number(this.dsList.getColumn(row, colId));
		var b = this.gfnIsNull(this.dsList.getColumn(row, colId)) ? 0 : Number(this.dsList.getColumn(row - 1, colId));
		
		if(a > b) {
			this.gfnAlert("A05의 인원수는 A04(합계)의 인원수보다 같거나 작아야 합니다.");
			this.dsList.setColumn(row, colId, "0");
			return false;
		}
	}
	
	if(colId == "NO_INWON" || colId == "AM_TOTSUPPLY" || colId == "AM_INCOMETAX" || colId == "AM_RESTAX" || colId == "AM_SPECIALTAX" || 
	   colId == "AM_ADDTAX" || colId == "AM_NAPINCOMETAX" || colId == "AM_NAPSPECIALTAX" ) 
	{
		this.sbAmSumCalcA(colId);
	}

	return true;
}

this.dxGrid2Validate = function(row, colId) {

	this.dxGrid2.updateToDataset();
	
	//if(this.dsList2.rowcount < row || this.gfnIsNull(this.dsList2.getColumn(row, colId))) return true;
	if(this.dsList2.rowcount < row) return true;
	
	if(colId == "NO_INWON" || colId == "AM_TOTSUPPLY" || colId == "AM_INCOMETAX" || colId == "AM_RESTAX" || colId == "AM_SPECIALTAX" || 
	   colId == "AM_ADDTAX" || colId == "AM_RETURNTAX" || colId == "AM_NAPINCOMETAX" || colId == "AM_NAPSPECIALTAX" )
	{
// 		if(this.dsList2.getColumn(row, colId).length >= 15) {
// 			this.dsList2.setColumn(row, colId, "0");
// 			return false;
// 		}

		this.sbAmSumCalcB(row, colId);
		
// 		if(nexacro.toNumber(this.dsList2.getColumn(row, colId),0) != 0) {
// 			
// 		} else {
// 			this.dsList2.setColumn(row, colId, "0");
// 		}
	}
	
	return true;
}

this.dxGrid3Validate = function(row, colId) {

	this.dxGrid3.updateToDataset();
	
	if(this.dsList3.rowcount < row || this.gfnIsNull(this.dsList3.getColumn(row, colId))) return true;
	
	if(this.dsList3.getColumn(row, colId).length >= 15) {
		this.dsList3.setColumn(row, colId, "0");
		return false;
	}
	
	this.sbAmSumCalcReturn(row, colId);
		
	return true;
}

this.dxGrid4Validate = function(row, colId) {

	this.dxGrid4.updateToDataset();
	
	if(this.dsList4.rowcount < row || this.gfnIsNull(this.dsList4.getColumn(row, colId))) return true;
	
	if(colId == "AM_WOLRETURNTAX") {
		if(this.dsList4.getColumn(row, colId).length >= 15) {
			this.dsList4.setColumn(row, colId, "0");
			return false;
		}
	}

	return true;
}


this.dxGrid5Validate = function(row, colId) {

	this.dxGrid5.updateToDataset();
	
	if(this.dsList5.rowcount < row || this.gfnIsNull(this.dsList5.getColumn(row, colId))) return true;
	
	if(this.dsList5.getColumn(row, colId).length >= 15) {
		this.dsList5.setColumn(row, colId, "0");
		return false;
	}
	
	if(Number(this.dsList5.getColumn(row, colId)) != 0) {
		//this.sbAmSumCalcReturn(colId);
	} else {
		this.dsList5.setColumn(row, colId, "0");
	}
	
	return true;
}


this.dxGrid6Validate = function(row, colId) {

	this.dxGrid6.updateToDataset();
	
	if(this.dsList6.rowcount < row || this.gfnIsNull(this.dsList6.getColumn(row, colId))) return true;
	
	if (colId == "CD_PREPAY")
	{
	    trace(" CD_PREPAY=>" + this.dsList6.getColumn(row, colId));
		if (!this.gfnIsBzIdNo(this.dsList6.getColumn(row, colId)))
		{
			this.gfnAlert((row + 1) +"행: 사업자등록번호 형식이 맞지 않습니다. (" + this.dsList6.getColumn(row, colId)+")");
			return false;
		}
	} else if (colId =="DS_PREPAY") {
	    trace(" DS_PREPAY=>" + this.dsList6.getColumn(row, colId));
		if (!this.gfnIsKoreanChar(nexacro.replaceAll(nexacro.replaceAll(nexacro.replaceAll(this.dsList6.getColumn(row, colId), '(', ''), ' ', ''), ')', '')))
		{
			this.gfnAlert((row + 1) +"행: 근무지명은 한글로 입력해야 합니다.( "+this.dsList6.getColumn(row, colId)+")" );
			return false; 
		}
	}  
	
	if(Number(this.dsList6.getColumn(row, colId)) != 0) {
		
	} else {
		this.dsList6.setColumn(row, colId, "0");
	}
	
	return true;
}

this.dxGrid8Validate = function(row, colId) {

	this.dxGrid8.updateToDataset();
	
	if(this.dsList8.rowcount < row || this.gfnIsNull(this.dsList8.getColumn(row, colId))) return true;
	
	if(Number(this.dsList8.getColumn(row, colId)) != 0) {
		
	} else {
		this.dsList8.setColumn(row, colId, "0");
	}
	
	return true;
}


this.dxGri98Validate = function(row, colId) {

	this.dxGrid9.updateToDataset();
	
	if(this.dsList9.rowcount < row || this.gfnIsNull(this.dsList9.getColumn(row, colId))) return true;
	
	if(Number(this.dsList9.getColumn(row, colId)) != 0) {
		
	} else {
		this.dsList9.setColumn(row, colId, "0");
	}
	
	return true;
}

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
this.fnCallback = function(svcID, errorCode, errorMsg) {

	if(svcID == "selectGubun") {
		//그리드 데이터 셋팅 작업
		//trace("selectGubunB =>" + this.dsGubunB.saveXML());
		this.fnGridGubunASetting();
		this.fnGridGubunBSetting();
	}
	if(svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
		this.makeData();
		
	}
	
	if(svcID == "s_select") {
		//this.makeSuccessionData();
		this.gfnGridAfterSelect(this.dxGrid4);
		this.gfnSetFormStatus(this, "Q");
	}
	
	if(svcID == "r_select") {
		//this.makeReturnData();
		this.gfnGridAfterSelect(this.dxGrid3);
		this.gfnSetFormStatus(this, "Q");
	}
	
	if(svcID == "e_select") {
		this.makeFnData();
		
		this.gfnSetFormStatus(this, "I");		
		//trace("saveXML :: "+this.dsList.saveXML());
	}
	if(svcID == "g_select") {
		this.gfnGridAfterSelect(this.dxGrid5);
		this.gfnGridAfterSelect(this.dxGrid6);		
		this.makeGiData();
		this.setJojungForm = "";		
		this.gfnSetFormStatus(this, "Q");
		//trace("saveXML :: "+this.dsList.saveXML());
	}
	
	if(svcID == "u_select") {
		this.gfnGridAfterSelect(this.dxGrid8);
		this.gfnGridAfterSelect(this.dxGrid9);		
		//trace("saveXML :: "+this.dsList.saveXML());
	}
	
	if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
		
	if(svcID == "close") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}	
	
	if(svcID == "ESingo") {
		if(errorCode == 0) {
			this.fnFileDownload();
		}
		else {
			this.gfnAlert(errorMsg);
		}
	}		
}

// 데이터 불러오기 collback  
this.fnDataCallBack = function(strId, val) {

	if(val == false) return;
	
	this.clearDivData();
	
	this.dsSelect2.clearData();
	this.dsSelect2.addRow();
	
	this.dsSelect2.setColumn(0, "OUT_CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
 	this.dsSelect2.setColumn(0, "OUT_YMFR_IMPUTE", this.ctclYM_FROM.form.TextBox.value);
 	this.dsSelect2.setColumn(0, "OUT_YMTO_IMPUTE", this.ctclYM_TO.form.TextBox.value);
	this.dsSelect2.setColumn(0, "OUT_YMFR_SUPPLY", this.ctclYM_JFROM.form.TextBox.value);
	this.dsSelect2.setColumn(0, "OUT_YMTO_SUPPLY", this.ctclYM_JTO.form.TextBox.value);
	this.dsSelect2.setColumn(0, "OUT_GB_SINGO1", this.rdoSINGO.value);
	
	var strSvcId    = "e_select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "e_select=dsSelect2";
	var outData     = "dsResult=e_select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
			
	this.dsSelect.clearData();
	this.dsSelect.addRow();

	this.dsSelect.setColumn(0, "OUT_CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
 	this.dsSelect.setColumn(0, "OUT_YMFR_IMPUTE", this.ctclYM_FROM.form.TextBox.value);
 	this.dsSelect.setColumn(0, "OUT_YMTO_IMPUTE", this.ctclYM_TO.form.TextBox.value);
	this.dsSelect.setColumn(0, "OUT_YMFR_SUPPLY", this.ctclYM_JFROM.form.TextBox.value);
	this.dsSelect.setColumn(0, "OUT_YMTO_SUPPLY", this.ctclYM_JTO.form.TextBox.value);
	this.dsSelect.setColumn(0, "OUT_GB_SINGO1", this.rdoSINGO.value);
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {	
	if (id == "ccfCD_CORP") {
		dsUserParam.setColumn(nrow, "ID_SABUN", this.AuthClient.ID_USER);
	}
	
	if(id == "ccfCD_DEPT_SELFACNT") {
// 		if (this.gfnIsNull(cdCorp)) {
// 			this.gfnAlert("법인코드를 먼저 선택하세요.");
// 			this.ccfCD_CORP.form.CDTextBox.setFocus();
// 			return false;
// 		}
// 		
		dsUserParam.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
	}
	return true;
};

this.fnAfterCDTextChanged = function(id, codeFindData) {
	
}

this.fnGrid_BeforeUserDataSetParam = function(id, dsUserParam, nrow) {	
	// 그리드에서 코드파인드 id는 그리드셋팅의 코드파인드 식별ID

 	if (id == "DHX_CFIDSABUN2") {
 		dsUserParam.setColumn(nrow, "CD_CORP",  this.ccfCD_CORP.form.CDTextBox.value);
		dsUserParam.setColumn(nrow, "YN_OFFICER",  "");
 	}
	
	return true;
};

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo) {
	
	if(e.oldvalue != e.newvalue) {	
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.clearDivData();
		
		this.dsSearch.set_enableevent(false);
		
		switch(e.columnid) {
			case "YM_FROM" : 
				this.ctclYM_TO.form.TextBox.set_value(e.newvalue);
				this.ctclYM_IMPUTE.form.TextBox.set_value(e.newvalue);
				this.ctclYM_JFROM.form.TextBox.set_value(e.newvalue);
				this.ctclYM_JTO.form.TextBox.set_value(this.ctclYM_TO.form.TextBox.value);
				this.ctclYM_SUPPY.form.TextBox.set_value(this.ctclYM_JTO.form.TextBox.value);
				break;
			case "YM_TO" : 
				this.ctclYM_JTO.form.TextBox.set_value(e.newvalue);
				this.ctclYM_SUPPY.form.TextBox.set_value(this.ctclYM_JTO.form.TextBox.value);
				break;
			case "YM_JFROM" : 
				this.ctclYM_JTO.form.TextBox.set_value(e.newvalue);
				this.ctclYM_SUPPY.form.TextBox.set_value(this.ctclYM_JTO.form.TextBox.value);	
				//this.ctclYM_IMPUTE.form.TextBox.set_value(e.newvalue);
				break;
			case "YM_JTO" : 
				//this.ctclYM_IMPUTE.form.TextBox.set_value(e.newvalue);
				this.ctclYM_SUPPY.form.TextBox.set_value(e.newvalue);
				break;
		}
		
		this.dsSearch.set_enableevent(true);
	}	
}
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/ 
 this.fnGrid_EnterCell = function(obj:nexacro.Grid, row, cell) {
	var colnm = this.gfnGridGetBindColumnNameByIndex(obj, cell);
	
	trace("fnGrid_EnterCell colnm=>" + colnm + ", row = " + row);
	if((colnm == "AM_UNRETURN" || colnm == "AM_GIRETURN" ) && (row == 0)) {
		return false;
	} else if (colnm == "AM_CHARETURN" || colnm == "AM_JOJUNGRETURN" || colnm == "AM_RETURNTAX" ) {
		return false;
	}
	return true;
}
 
this.clearDivData = function() {

	this.dsList.clearData();
	//this.setDxGrid();
	
	this.dsList2.clearData();
	//this.setDxGrid2();
	
	this.dsList3.clearData();
	//this.setDxGrid3();
	
	this.dsList4.clearData();
	//this.setDxGrid4();
	this.dsList5.clearData();
	this.dsList6.clearData();
	this.dsList7.clearData();
	this.dsList8.clearData();
	this.dsList9.clearData();
// 	this.setDxGrid8();
// 	this.setDxGrid9();
// 	
// 	this.ctclYM_IMPUTE.form.TextBox.set_value("");
// 	this.ctclYM_SUPPY.form.TextBox.set_value("");
	this.ccfDT_ENTER.set_value("");
	this.mskAM_BEFORETAX.set_value("");
	this.mskAM_REQUESTTAX.set_value("");
	this.mskAM_JAN.set_value("");
	this.mskAM_ILBANRETURN.set_value("");
	this.mskAM_SINTAC.set_value("");
	this.mskAM_GITA.set_value("");
	this.mskAM_GITA2.set_value("");
	this.mskAM_SETTLE.set_value("");
	this.mskAM_RETURNTAXSUM.set_value("");
	this.mskAM_WOLRETURNTAX.set_value("");
	this.mskAM_RETURNAPPLY.set_value("");
	this.rdoYN_CLOSE.set_value("N"); 
	
	this.mskAM_INCOMETAX.set_value("");
	this.mskAM_INCOMETAX_GI.set_value("");
	this.mskAM_INCOMETAX_DIFF.set_value("");
	this.mskAM_SPECIALTAX.set_value("");
	this.mskAM_SPECIALTAX_GI.set_value("");
	this.mskAM_SPECIALTAX_DIFF.set_value("");
	this.txtDS_REASON.set_value("");
	this.chkReson1.set_value(false);
	this.chkReson2.set_value(false);
	this.chkReson3.set_value(false);
	this.chkReson4.set_value(false);
	this.chkReson5.set_value(false);

    this.setJojungForm =  ""
}

//sbAM_SumCalcA  근로소득 탭 합산 로직 
this.sbAmSumCalcA = function(amIncomeTax) {
   // trace("amIncomeTax =>" + amIncomeTax + ":" + this.getDataFlag);
	this.dsList.set_enableevent(false);

	var tempValue = 0;

	if((amIncomeTax == "AM_NAPRESTAX" || amIncomeTax == "AM_NAPINCOMETAX" || amIncomeTax == "AM_NAPSPECIALTAX") == false) {
		
		//근로소득-가감계
		if(amIncomeTax == "AM_INCOMETAX" || amIncomeTax == "AM_SPECIALTAX" || amIncomeTax == "AM_ADDTAX" ) {
			
			//연말정산 납부 = 연말정산 합계 - 연말정산 분납
			tempValue = 0;
			tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A04'], amIncomeTax)) ? 0 : Number(this.dsList.getColumn(this.ucA['A04'], amIncomeTax)); 
			tempValue -= this.gfnIsNull(this.dsList.getColumn(this.ucA['A05'], amIncomeTax)) ? 0 : Number(this.dsList.getColumn(this.ucA['A05'], amIncomeTax));
			
			this.dsList.setColumn(this.ucA['A06'], amIncomeTax, tempValue);
			
			tempValue = 0;
			tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A01'], amIncomeTax)) ? 0 : Number(this.dsList.getColumn(this.ucA['A01'], amIncomeTax));
			tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A02'], amIncomeTax)) ? 0 : Number(this.dsList.getColumn(this.ucA['A02'], amIncomeTax));
			tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A03'], amIncomeTax)) ? 0 : Number(this.dsList.getColumn(this.ucA['A03'], amIncomeTax));													
			tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A04'], amIncomeTax)) ? 0 : Number(this.dsList.getColumn(this.ucA['A04'], amIncomeTax));
			tempValue -= this.gfnIsNull(this.dsList.getColumn(this.ucA['A05'], amIncomeTax)) ? 0 : Number(this.dsList.getColumn(this.ucA['A05'], amIncomeTax));
		   
			this.dsList.setColumn(this.ucA['A10'], amIncomeTax, tempValue);
			
			tempValue = 0;
			tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A04'], "AM_SPECIALTAX")) ? 0 : Number(this.dsList.getColumn(this.ucA['A04'], "AM_SPECIALTAX")); 
			tempValue -= this.gfnIsNull(this.dsList.getColumn(this.ucA['A05'], "AM_SPECIALTAX")) ? 0 : Number(this.dsList.getColumn(this.ucA['A05'], "AM_SPECIALTAX"));
						
			this.dsList.setColumn(this.ucA['A06'], "AM_SPECIALTAX", tempValue);
														
			tempValue = 0;
			tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A04'], "AM_ADDTAX")) ? 0 : Number(this.dsList.getColumn(this.ucA['A04'], "AM_ADDTAX")); 
			tempValue -= this.gfnIsNull(this.dsList.getColumn(this.ucA['A05'], "AM_ADDTAX")) ? 0 : Number(this.dsList.getColumn(this.ucA['A05'], "AM_ADDTAX"));
			
			this.dsList.setColumn(this.ucA['A06'], "AM_ADDTAX", tempValue);
		
		} else if (amIncomeTax == "NO_INWON"){
		
			tempValue = 0;
			tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A01'], amIncomeTax)) ? 0 : Number(this.dsList.getColumn(this.ucA['A01'], amIncomeTax));
			tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A02'], amIncomeTax)) ? 0 : Number(this.dsList.getColumn(this.ucA['A02'], amIncomeTax));
			tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A03'], amIncomeTax)) ? 0 : Number(this.dsList.getColumn(this.ucA['A03'], amIncomeTax));
			tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A04'], amIncomeTax)) ? 0 : Number(this.dsList.getColumn(this.ucA['A04'], amIncomeTax));
			this.dsList.setColumn(this.ucA['A10'], amIncomeTax,  tempValue);
			trace(" NO_INWON  this.ucA['A10'] =>" + tempValue);
		
		} else {
			
			tempValue = 0;
			tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A01'], amIncomeTax)) ? 0 : Number(this.dsList.getColumn(this.ucA['A01'], amIncomeTax));
			tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A02'], amIncomeTax)) ? 0 : Number(this.dsList.getColumn(this.ucA['A02'], amIncomeTax));
			tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A03'], amIncomeTax)) ? 0 : Number(this.dsList.getColumn(this.ucA['A03'], amIncomeTax));
			tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A04'], amIncomeTax)) ? 0 : Number(this.dsList.getColumn(this.ucA['A04'], amIncomeTax));
			tempValue -= this.gfnIsNull(this.dsList.getColumn(this.ucA['A05'], amIncomeTax)) ? 0 : Number(this.dsList.getColumn(this.ucA['A05'], amIncomeTax));
			
			this.dsList.setColumn(this.ucA['A10'], amIncomeTax,  tempValue);	
			
			trace(amIncomeTax + " else this.ucA['A10'] =>" + tempValue);
		}
		
		//퇴직소득-가감계
		tempValue = 0;
		tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A21'], amIncomeTax)) ? 0 : Number(this.dsList.getColumn(this.ucA['A21'], amIncomeTax));
		tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A22'], amIncomeTax)) ? 0 : Number(this.dsList.getColumn(this.ucA['A22'], amIncomeTax));
					
		this.dsList.setColumn(this.ucA['A20'], amIncomeTax, tempValue);
												
		//사업소득-가감계
		tempValue = 0;
		tempValue = (this.gfnIsNull(this.dsList.getColumn(this.ucA['A25'], amIncomeTax)) ? 0 : Number(this.dsList.getColumn(this.ucA['A25'], amIncomeTax))) +
					(this.gfnIsNull(this.dsList.getColumn(this.ucA['A26'], amIncomeTax)) ? 0 : Number(this.dsList.getColumn(this.ucA['A26'], amIncomeTax)));
					
		this.dsList.setColumn(this.ucA['A30'], amIncomeTax, tempValue);

		//기타소득-가감계
		tempValue = 0;
		tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A41'], amIncomeTax)) ? 0 : Number(this.dsList.getColumn(this.ucA['A41'], amIncomeTax));
		tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A43'], amIncomeTax)) ? 0 : Number(this.dsList.getColumn(this.ucA['A43'], amIncomeTax));
		tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A44'], amIncomeTax)) ? 0 : Number(this.dsList.getColumn(this.ucA['A44'], amIncomeTax));
		tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A49'], amIncomeTax)) ? 0 : Number(this.dsList.getColumn(this.ucA['A49'], amIncomeTax));
		tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A59'], amIncomeTax)) ? 0 : Number(this.dsList.getColumn(this.ucA['A59'], amIncomeTax));
		tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A42'], amIncomeTax)) ? 0 : Number(this.dsList.getColumn(this.ucA['A42'], amIncomeTax));
					
		this.dsList.setColumn(this.ucA['A40'], amIncomeTax, tempValue);
		trace(" 기타소득가감계 =>" +amIncomeTax+" :: "+ this.dsList.getColumn(this.ucA['A43'], amIncomeTax));

		//연금소득-가감계
		tempValue = 0;
		tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A48'], amIncomeTax)) ? 0 : Number(this.dsList.getColumn(this.ucA['A48'], amIncomeTax));
		tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A45'], amIncomeTax)) ? 0 : Number(this.dsList.getColumn(this.ucA['A45'], amIncomeTax));
		tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A46'], amIncomeTax)) ? 0 : Number(this.dsList.getColumn(this.ucA['A46'], amIncomeTax));
					
		this.dsList.setColumn(this.ucA['A47'], amIncomeTax, tempValue);

		if (this.getDataFlag == false) {
			this.strAmBeforetax = this.strAmBeforetaxOrg;
		} else {
			this.dsList.setColumn(this.ucA['A10'], "AM_RETURNTAX", this.strAmBeforetax);
		}
					
		var tempAmIncomeTax;
		var tempAmAddtax;
				
		for(var i = 0 ; i < this.rows.length ; i++) {
			
			tempAmIncomeTax = this.gfnIsNull(this.dsList.getColumn(this.rows[i], "AM_INCOMETAX")) ? 0 : Number(this.dsList.getColumn(this.rows[i], "AM_INCOMETAX"));
			tempAmAddtax = this.gfnIsNull(this.dsList.getColumn(this.rows[i], "AM_ADDTAX")) ? 0 : Number(this.dsList.getColumn(this.rows[i], "AM_ADDTAX"));
			
			if((tempAmIncomeTax + tempAmAddtax) > 0) {
			
				if(this.rows[i] == this.ucA['A20']) {
					this.dsList.setColumn(this.rows[i], "AM_NAPRESTAX", this.gfnIsNull(this.dsList.getColumn(this.rows[i], "AM_RESTAX")) ? 0 : this.dsList.getColumn(this.rows[i], "AM_RESTAX"));
				} else {	
				
					if(this.strAmBeforetax >= (tempAmIncomeTax + tempAmAddtax)) {
						this.dsList.setColumn(this.rows[i], "AM_NAPRESTAX", 0);
						this.strAmBeforetax = this.strAmBeforetax -(tempAmIncomeTax + tempAmAddtax);				
					} else {		
					    this.dsList.setColumn(this.rows[i], "AM_NAPRESTAX", this.gfnIsNull(this.dsList.getColumn(this.rows[i], "AM_RESTAX")) ? 0 : this.dsList.getColumn(this.rows[i], "AM_RESTAX"));				
					}
				}
				
			} else {
				this.dsList.setColumn(this.rows[i], "AM_RETURNTAX", 0);
				this.dsList.setColumn(this.rows[i], "AM_NAPINCOMETAX", 0);
				this.dsList.setColumn(this.rows[i], "AM_NAPRESTAX", 0);
			}
		}	
	}
	
	
	if (amIncomeTax == "AM_NAPINCOMETAX") { //근로소득 가감계의 소득세 납부액 
		tempValue = 0;
		
		tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A01'], "AM_INCOMETAX"))  ? 0 : Number(this.dsList.getColumn(this.ucA['A01'], "AM_INCOMETAX"));
		tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A02'], "AM_INCOMETAX"))  ? 0 : Number(this.dsList.getColumn(this.ucA['A02'], "AM_INCOMETAX"));
		tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A03'], "AM_INCOMETAX"))  ? 0 : Number(this.dsList.getColumn(this.ucA['A03'], "AM_INCOMETAX"));			
		tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A06'], "AM_INCOMETAX"))  ? 0 : Number(this.dsList.getColumn(this.ucA['A06'], "AM_INCOMETAX"));				
		tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A01'], "AM_ADDTAX"))  ? 0 : Number(this.dsList.getColumn(this.ucA['A01'], "AM_ADDTAX"));													
		tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A02'], "AM_ADDTAX"))  ? 0 : Number(this.dsList.getColumn(this.ucA['A02'], "AM_ADDTAX"));													
		tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A03'], "AM_ADDTAX"))  ? 0 : Number(this.dsList.getColumn(this.ucA['A03'], "AM_ADDTAX"));													
		tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A06'], "AM_ADDTAX"))  ? 0 : Number(this.dsList.getColumn(this.ucA['A06'], "AM_ADDTAX"));													
// 		tempValue += this.gfnIsNull(this.dsList.getColumn(this.ucA['A03'], amIncomeTax)) || this.dsList.getColumn(this.ucA['A03'], amIncomeTax) < 0 ? 0 : Number(this.dsList.getColumn(this.ucA['A03'], amIncomeTax));
// 		tempValue -= this.gfnIsNull(this.dsList.getColumn(this.ucA['A05'], amIncomeTax)) || this.dsList.getColumn(this.ucA['A05'], amIncomeTax) < 0 ? 0 : Number(this.dsList.getColumn(this.ucA['A05'], amIncomeTax));
		this.dsList.setColumn(this.ucA['A10'], amIncomeTax,  tempValue > 0 ? tempValue : 0 );
	
	   //this.dsList.setColumn(this.ucA['A10'], amIncomeTax, tempValue);
		trace("AM_NAPINCOMETAX 02 =>" +  this.dsList.getColumn(this.ucA['A10'], "AM_NAPINCOMETAX"));
		trace("AM_INCOMETAX 02 =>" +  this.dsList.getColumn(this.ucA['A10'], "AM_INCOMETAX"));
		trace("tempValue 02 =>" +  tempValue);
	}
	tempValue = 0;
	if (amIncomeTax =="AM_INCOMETAX"){
		for(var i = 0 ; i < this.rows.length ; i++) {
			tempValue += this.gfnIsNull(this.dsList.getColumn(this.rows[i], amIncomeTax)) || this.dsList.getColumn(this.rows[i], amIncomeTax) < 0 ? 0 : Number(this.dsList.getColumn(this.rows[i], amIncomeTax));
		}
// 		this.dsList.setColumn(this.ucA['A41'], "AM_NAPINCOMETAX", this.gfnNvl(this.dsList.getColumn(this.ucA['A41'], amIncomeTax) < 0 ? 0 : this.dsList.getColumn(this.ucA['A41'], amIncomeTax),0));
// 		this.dsList.setColumn(this.ucA['A43'], "AM_NAPINCOMETAX", this.gfnNvl(this.dsList.getColumn(this.ucA['A43'], amIncomeTax) < 0 ? 0 : this.dsList.getColumn(this.ucA['A43'], amIncomeTax),0));
// 		this.dsList.setColumn(this.ucA['A44'], "AM_NAPINCOMETAX", this.gfnNvl(this.dsList.getColumn(this.ucA['A44'], amIncomeTax) < 0 ? 0 : this.dsList.getColumn(this.ucA['A44'], amIncomeTax),0));
// 		this.dsList.setColumn(this.ucA['A49'], "AM_NAPINCOMETAX", this.gfnNvl(this.dsList.getColumn(this.ucA['A49'], amIncomeTax) < 0 ? 0 : this.dsList.getColumn(this.ucA['A49'], amIncomeTax),0));
// 		this.dsList.setColumn(this.ucA['A59'], "AM_NAPINCOMETAX", this.gfnNvl(this.dsList.getColumn(this.ucA['A59'], amIncomeTax) < 0 ? 0 : this.dsList.getColumn(this.ucA['A59'], amIncomeTax),0));
// 		this.dsList.setColumn(this.ucA['A42'], "AM_NAPINCOMETAX", this.gfnNvl(this.dsList.getColumn(this.ucA['A42'], amIncomeTax) < 0 ? 0 : this.dsList.getColumn(this.ucA['A42'], amIncomeTax),0));
	}else {
		tempValue = this.fnGetRowSum(amIncomeTax);
	}	
	trace("tempValue ucA[A99] ::" + amIncomeTax + "=>"+  tempValue ); 
	this.dsList.setColumn(this.ucA['A99'], amIncomeTax, tempValue);

	this.newLogic()
	tempValue = 0; 
	tempValue = this.fnGetRowSum("AM_RETURNTAX");
	this.dsList.setColumn(this.ucA['A99'], "AM_RETURNTAX", tempValue);
	trace(" this.ucA['A99'] AM_RETURNTAX=>" +tempValue );
	this.mskAM_RETURNTAXSUM.set_value(tempValue);
	
	this.sbAmCalSum(); 

	tempValue = 0;
	for(var i = 0 ; i < this.rows.length ; i++) {
		tempValue += this.gfnIsNull(this.dsList.getColumn(this.rows[i], "AM_NAPINCOMETAX")) || this.dsList.getColumn(this.rows[i], "AM_NAPINCOMETAX") < 0 ? 0 : Number(this.dsList.getColumn(this.rows[i], "AM_NAPINCOMETAX"));
	}
	this.dsList.setColumn(this.ucA['A99'], "AM_NAPINCOMETAX", tempValue);
	
	if (amIncomeTax =="AM_NAPRESTAX" || amIncomeTax =="AM_RESTAX")
	{
		tempValue = 0;
		tempValue = this.fnGetRowSum("AM_NAPRESTAX");
		this.dsList.setColumn(this.ucA['A99'], "AM_NAPRESTAX", tempValue);
	}	
	
	if (amIncomeTax =="AM_NAPSPECIALTAX" || amIncomeTax =="AM_SPECIALTAX")
	{
		tempValue = 0;
		tempValue = this.fnGetRowSum("AM_SPECIALTAX");
		this.dsList.setColumn(this.ucA['A99'], "AM_NAPSPECIALTAX", tempValue);
	}	
	
	this.dsList.set_enableevent(true);
}

this.fnGetRowSum = function (colId){  //a99 의 필드별 합산 로직 
	var rowSum = 0;
	
	//trace(" this.rows=>" + this.rows);
	
	for(var i = 0 ; i < this.rows.length ; i++) {		
		rowSum += this.gfnNvl(this.dsList.getColumn(this.rows[i], colId),0);		
	}	
	return rowSum;
	
};

//newLogic 
this.newLogic = function() { // 미환급세액 분배처리 

	//this.dsList.set_enableevent(false);

	var tempAmIlbanreturnMinus = 0;
	var tempAmIlbanreturnPlus = 0;
		
	//var rows = [this.ucA['A10'], this.ucA['A20'], this.ucA['A30'], this.ucA['A40'], this.ucA['A47'], this.ucA['A50'], this.ucA['A60'], this.ucA['A69'], this.ucA['A70'], this.ucA['A80'], this.ucA['A90']];
	var tempValue;
	
	for(var i = 0 ; i < this.rows.length ; i++) {
		
		tempValue = 0;
		tempValue = this.gfnNvl(Number(this.dsList.getColumn(this.rows[i], "AM_INCOMETAX")) ,0)+ this.gfnNvl(Number(this.dsList.getColumn(this.rows[i], "AM_ADDTAX")),0);
	
		if(tempValue < 0) {
			tempAmIlbanreturnMinus = tempAmIlbanreturnMinus;
		} else {
			tempAmIlbanreturnPlus = tempAmIlbanreturnPlus + tempValue;
		}
	}
	
	this.sbAmCalSum();  // 전월미환급세액 분배처리 
	
	var AM_SETTLE = this.gfnIsNull(this.mskAM_SETTLE.value) ? 0 : Number(this.mskAM_SETTLE.value);// this.gfnIsNull(this.mskAM_SETTLE.value) ? 0 : Number(this.mskAM_SETTLE.value); // 전월미환급세액 
	var AM_ILBANRETURN = tempAmIlbanreturnPlus;  // 이번달 납부액 
	
	var abFlag = "";
	
	for(var i = 0 ; i < this.rows.length ; i++) {
		tempIncomeTax = Number(this.dsList.getColumn(this.rows[i], "AM_INCOMETAX")) < 0 || this.gfnIsNull(this.dsList.getColumn(this.rows[i], "AM_INCOMETAX")) ? 0 : this.gfnNvl(Number(this.dsList.getColumn(this.rows[i], "AM_INCOMETAX")),0);
		tempAddTax = Number(this.dsList.getColumn(this.rows[i], "AM_ADDTAX")) < 0 || this.gfnIsNull(this.dsList.getColumn(this.rows[i], "AM_ADDTAX")) ? 0 : this.gfnNvl(Number(this.dsList.getColumn(this.rows[i], "AM_ADDTAX")),0);
		tempValue = tempIncomeTax + tempAddTax;
		// 미환급액 - 납부액  > 0   // 미환급이 납부액보다 많을때 
		if(AM_SETTLE - tempValue >= 0) {
			abFlag = "6";
		} else {
			abFlag = "7";
		}
// 		trace("abFlag: " + abFlag+ "i => "+ i );
// 	    trace("tempValue1: " + tempValue);
// 		trace("AM_SETTLE: " + AM_SETTLE);
		if(abFlag == "6") {	
			if(tempValue > 0) {  // 소득세 납부액이 있으면 
				this.dsList.setColumn(this.rows[i], "AM_RETURNTAX", tempValue);
				this.dsList.setColumn(this.rows[i], "AM_NAPINCOMETAX", 0);	
				AM_SETTLE = AM_SETTLE - tempValue;
			} else {			 // 소득세 납부액이 없을때 
				this.dsList.setColumn(this.rows[i], "AM_RETURNTAX", 0);
				this.dsList.setColumn(this.rows[i], "AM_NAPINCOMETAX", 0);				
			}		
		} else if(abFlag == "7") {		// 납부액이 있을때 
			if(tempValue > 0) {		    // 소득세 납부액이 있으면 
			    
				if(AM_SETTLE < tempValue) {			// 납부액이 환급액보다 크면 		
					this.dsList.setColumn(this.rows[i], "AM_RETURNTAX", AM_SETTLE);  // 환급액
					this.dsList.setColumn(this.rows[i], "AM_NAPINCOMETAX", tempValue - AM_SETTLE);  // 납부액 = 납부액- 환급액 
					trace("AM_NAPINCOMETAX 00=> " + this.dsList.getColumn(this.rows[i], "AM_NAPINCOMETAX"));
					AM_SETTLE = 0;					
				} else {					
					this.dsList.setColumn(this.rows[i], "AM_RETURNTAX", 0);
					this.dsList.setColumn(this.rows[i], "AM_NAPINCOMETAX", 0);
					trace("AM_NAPINCOMETAX 99=> " + this.dsList.getColumn(this.rows[i], "AM_NAPINCOMETAX"));
					AM_SETTLE = AM_SETTLE - tempValue;
				}			
			}
		}
	}
	
	//this.dsList.set_enableevent(true);
}

//sbAM_SumCalcReturn 환급세액 합산 로직 
this.sbAmSumCalcReturn = function(row , col) {
    trace(" sbAmSumCalcReturn=>" + col);
	this.dsList3.set_enableevent(false);

	var AM_BEFTAX_NOW = 0;
	var AM_BEFTAX_BEF = 0;
	var AM_CHA = 0; 
	var AM_PART = 0; 
	var AM_JOJUNG = 0;

	if (col == "AM_FIXTAX" || col == "AM_BEFTAX_NOW" || col == "AM_BEFTAX_BEF" )
	{
		AM_FIXTAX =  this.gfnIsNull(this.dsList3.getColumn(row, "AM_FIXTAX")) ? 0 : nexacro.toNumber(this.dsList3.getColumn(row, "AM_FIXTAX"));
		AM_BEFTAX_NOW = this.gfnIsNull(this.dsList3.getColumn(row, "AM_BEFTAX_NOW")) ? 0 : nexacro.toNumber(this.dsList3.getColumn(row, "AM_BEFTAX_NOW"));
		AM_BEFTAX_BEF = this.gfnIsNull(this.dsList3.getColumn(row, "AM_BEFTAX_BEF")) ? 0 : nexacro.toNumber(this.dsList3.getColumn(row, "AM_BEFTAX_BEF"));
		this.dsList3.setColumn(row, "AM_DEDCOLLECTTAX" , AM_FIXTAX - AM_BEFTAX_NOW - AM_BEFTAX_BEF);
		this.dsList3.setColumn(row, "AM_BEFTAX", AM_BEFTAX_NOW + AM_BEFTAX_BEF);
	}
	if (col == "AM_PARTDECOTAX" || col == "AM_RETURNTAX" || col == "AM_DEDCOLLECTTAX")
	{
		AM_PART = this.gfnIsNull(this.dsList3.getColumn(row, "AM_PARTDECOTAX")) ? 0 : nexacro.toNumber(this.dsList3.getColumn(row, "AM_PARTDECOTAX")); 
		AM_CHA = this.gfnIsNull(this.dsList3.getColumn(row, "AM_DEDCOLLECTTAX")) ? 0 : nexacro.toNumber(this.dsList3.getColumn(row, "AM_DEDCOLLECTTAX")); 
		AM_JOJUNG = this.gfnIsNull(this.dsList3.getColumn(row, "AM_RETURNTAX")) ? 0 : nexacro.toNumber(this.dsList3.getColumn(row, "AM_RETURNTAX")); 
		this.dsList3.setColumn(row, "AM_RETURNAPPLY", -AM_CHA + AM_PART - AM_JOJUNG );
	}

	this.dsList3.set_enableevent(true);

}

//sbAM_SumCalcB  부표 합산 
this.sbAmSumCalcB = function(row, amIncomeTax) {

	if(this.gfnIsNull(this.dsList2.getColumn(row, "CD_GUBUN"))) return; 
	
	this.dsList2.set_enableevent(false);

	var CD_GUBUN = this.dsList2.getColumn(row, "CD_GUBUN");
	
	var AM_BEFORETAX = 0;
	
	var AM_RETURNTAX = 0;
	
	var tempAmIncomeTax = 0;
	var tempReturnTax = 0;
	var returnTax = 0 ;
	var incomeTax = 0 ;
	var addTax = 0; 
	var tempAddTax = 0; 
	var tempSum = 0; 	
	
	if(row >= this.ucC['C01'] && row < this.ucC['C30']) { //이자배당소득계 
		
		//이자배당소득계
		if(amIncomeTax != "AM_RETURNTAX" && amIncomeTax != "AM_NAPINCOMETAX" && amIncomeTax != "AM_NAPSPECIALTAX") {
			trace("@@ amIncomeTax :: "+amIncomeTax + "::" + tempAmIncomeTax);
			tempAmIncomeTax = 0;
			
			for(var i = 0 ; i < this.ucC['C30'] ; i++) {
				tempAmIncomeTax = tempAmIncomeTax + this.gfnNvl(this.dsList2.getColumn(i, amIncomeTax),0);
			}
			
			if(this.dsList2.getOrgColumn(this.ucC['C30'], amIncomeTax) != tempAmIncomeTax){
				this.dsList2.setColumn(this.ucC['C30'], "FLAG", "U");	//상태값 변경
				this.dsList2.setColumn(this.ucC['C30'], amIncomeTax, tempAmIncomeTax);
			}
			//소득세 변경시 납부세액 소득세에도 합계 표시
			if(amIncomeTax == "AM_INCOMETAX"){
				this.dsList2.setColumn(this.ucC['C30'], "AM_NAPINCOMETAX", tempAmIncomeTax);
			}
			
		}
			
	}else if(row >= this.ucC['C32'] && row <= this.ucC['C80']){ // 금융투자소득계 
		
	   if(amIncomeTax != "AM_RETURNTAX" && amIncomeTax != "AM_NAPINCOMETAX" && amIncomeTax != "AM_NAPSPECIALTAX") {
		
			tempAmIncomeTax = 0;
			
			for(var i = this.ucC['C32'] ; i < this.ucC['C80'] ; i++) {
				tempAmIncomeTax = tempAmIncomeTax + this.gfnNvl(this.dsList2.getColumn(i, amIncomeTax),0);
			}
			
			//값이 변경되었을경우
			if(this.dsList2.getColumn(this.ucC['C80'], amIncomeTax) != tempAmIncomeTax){
				this.dsList2.setColumn(this.ucC['C80'], "FLAG", "U");	//상태값 변경
				this.dsList2.setColumn(this.ucC['C80'], amIncomeTax, tempAmIncomeTax);
				this.dsList.setColumn(this.ucA['A71'], "FLAG", "U");	//상태값 변경
				this.dsList.setColumn(this.ucA['A71'], amIncomeTax, tempAmIncomeTax);
			}	
			
			trace("@@ amIncomeTax :: "+amIncomeTax + "::" + tempAmIncomeTax);
			
			//소득세 변경시 납부세액 소득세에도 합계 표시
			if(amIncomeTax == "AM_INCOMETAX"){
				this.dsList2.setColumn(this.ucC['C80'], "AM_NAPINCOMETAX", tempAmIncomeTax);
			}
		}
	}else if(row >= this.ucC['C41'] && row <= this.ucC['C50']){ // 해지추징계 
				
		//해지추징계
		if(amIncomeTax != "AM_SPECIALTAX" && amIncomeTax != "AM_RETURNTAX" && amIncomeTax != "AM_NAPINCOMETAX" && amIncomeTax != "AM_NAPSPECIALTAX") {
			
			tempAmIncomeTax = 0;
			
			for(var i = this.ucC['C41'] ; i < this.ucC['C50'] ; i++) {
				tempAmIncomeTax = tempAmIncomeTax + (this.gfnIsNull(this.dsList2.getColumn(i, amIncomeTax)) ? 0 : this.dsList2.getColumn(i, amIncomeTax));
			}
			//값이 변경되었을경우
			if(this.dsList2.getOrgColumn(this.ucC['C50'], amIncomeTax) != tempAmIncomeTax){
				this.dsList2.setColumn(this.ucC['C50'], "FLAG", "U");	//상태값 변경
				this.dsList2.setColumn(this.ucC['C50'], amIncomeTax, tempAmIncomeTax);
				this.dsList.setColumn(this.ucA['A69'], "FLAG", "U");	//상태값 변경
				this.dsList.setColumn(this.ucA['A69'], amIncomeTax, tempAmIncomeTax);
			}
			
			//소득세 변경시 납부세액 소득세에도 합계 표시
			if(amIncomeTax == "AM_INCOMETAX"){
				this.dsList2.setColumn(this.ucC['C50'], "AM_NAPINCOMETAX", tempAmIncomeTax);
			}
		}		
	}else if(row >= this.ucC['C61'] && row <= this.ucC['C70']){ // 비거주자계	
		
		tempAmIncomeTax = 0;
		tempReturnTax = 0;
		returnTax = 0 ;
		incomeTax = 0 ;
		addTax = 0 ; 
		tempAddTax = 0;
		tempSum = 0;
		for(var i = this.ucC['C61'] ; i < this.ucC['C70'] ; i++) {
			returnTax = (this.gfnIsNull(this.dsList2.getColumn(i, "AM_RETURNTAX")) ? 0 : this.dsList2.getColumn(i, "AM_RETURNTAX"));
			incomeTax = (this.gfnIsNull(this.dsList2.getColumn(i, "AM_INCOMETAX")) ? 0 : this.dsList2.getColumn(i, "AM_INCOMETAX"));
			addTax =  (this.gfnIsNull(this.dsList2.getColumn(i, "AM_ADDTAX")) ? 0 : this.dsList2.getColumn(i, "AM_ADDTAX"));
			tempSum = tempSum + (this.gfnIsNull(this.dsList2.getColumn(i, amIncomeTax)) ? 0 : this.dsList2.getColumn(i, amIncomeTax));
			tempAmIncomeTax = tempAmIncomeTax + incomeTax;
			tempReturnTax = tempReturnTax + returnTax;
			tempAddTax = tempAddTax + addTax;
			if ((amIncomeTax == "AM_INCOMETAX" || amIncomeTax == "AM_RETURNTAX" || amIncomeTax == "AM_ADDTAX") && i != this.ucC['C70'] ) { 
					this.dsList2.setColumn(i, "AM_NAPINCOMETAX", incomeTax + tempAddTax - returnTax );
				}
		}
		
		//값이 변경되었을경우
		if(this.dsList2.getOrgColumn(this.ucC['C70'], amIncomeTax) != tempSum){	
			this.dsList2.setColumn(this.ucC['C70'], "FLAG", "U");	//상태값 변경
			this.dsList2.setColumn(this.ucC['C70'], amIncomeTax, tempSum);
		}
		
		//소득세 변경시 납부세액 소득세에도 합계 표시
		if(amIncomeTax == "AM_INCOMETAX" || amIncomeTax == "AM_RETURNTAX" || amIncomeTax == "AM_ADDTAX" ){
			this.dsList2.setColumn(this.ucC['C70'], "AM_NAPINCOMETAX", tempAmIncomeTax + tempAddTax - tempReturnTax );
		}
	}else if(row >= this.ucC['C71'] && row <= this.ucC['C90']){ // 법인원천계 
		trace(" 법인원천 amIncomeTax=>" + amIncomeTax);
		if(amIncomeTax != "AM_NAPSPECIALTAX") {
			tempAmIncomeTax = 0;
			tempReturnTax = 0;
			returnTax = 0 ;
			incomeTax = 0 ;
			addTax = 0 ; 
			tempAddTax = 0;
			tempSum = 0;
			for(var i = this.ucC['C71'] ; i < this.ucC['C90'] ; i++) {			
				returnTax = (this.gfnIsNull(this.dsList2.getColumn(i, "AM_RETURNTAX")) ? 0 : this.dsList2.getColumn(i, "AM_RETURNTAX"));
				incomeTax = (this.gfnIsNull(this.dsList2.getColumn(i, "AM_INCOMETAX")) ? 0 : this.dsList2.getColumn(i, "AM_INCOMETAX"));
				addTax =  (this.gfnIsNull(this.dsList2.getColumn(i, "AM_ADDTAX")) ? 0 : this.dsList2.getColumn(i, "AM_ADDTAX"));
				tempSum = tempSum + (this.gfnIsNull(this.dsList2.getColumn(i, amIncomeTax)) ? 0 : this.dsList2.getColumn(i, amIncomeTax));
				tempAmIncomeTax = tempAmIncomeTax + incomeTax;
				tempReturnTax = tempReturnTax + returnTax;
				tempAddTax = tempAddTax + addTax;
				if ((amIncomeTax == "AM_INCOMETAX" || amIncomeTax == "AM_RETURNTAX" || amIncomeTax == "AM_ADDTAX") && i != this.ucC['C90'] ) { 
					this.dsList2.setColumn(i, "AM_NAPINCOMETAX", incomeTax + tempAddTax - returnTax );
				}
			}
			//값이 변경되었을경우
			if(this.dsList2.getOrgColumn(this.ucC['C90'], amIncomeTax) != tempSum){
				this.dsList2.setColumn(this.ucC['C90'], "FLAG", "U");	//상태값 변경
				this.dsList2.setColumn(this.ucC['C90'], amIncomeTax, tempSum);
				
				//소득세 변경시 납부세액 소득세에도 합계 표시
				if(amIncomeTax == "AM_INCOMETAX" || amIncomeTax == "AM_RETURNTAX" || amIncomeTax == "AM_ADDTAX" ){
					this.dsList2.setColumn(this.ucC['C90'], "AM_NAPINCOMETAX", tempAmIncomeTax + tempAddTax - tempReturnTax);			
					this.dsList.setColumn(this.ucA['A80'], "AM_INCOMETAX", tempAmIncomeTax);
					this.dsList.setColumn(this.ucA['A80'], "AM_RETURNTAX", tempReturnTax);
					this.dsList.setColumn(this.ucA['A80'], "AM_NAPINCOMETAX", tempAmIncomeTax + tempAddTax - tempReturnTax);
				} else {
					this.dsList.setColumn(this.ucA['A80'], amIncomeTax, tempSum);
				}
			}			
		}		
	}
	
	//이자소득 계 
	var nRow = this.dsList2.getColumn(row, "DS_ORDER");
	vCheck = -1;	
	
	
	var rows = [];
	//=>0,1,2,3,4,6,10,11,12,13,14,16,23,26,27,31,35,37,61
	rows = [this.ucC['C01'], this.ucC['C02'], this.ucC['C03'], this.ucC['C05'], this.ucC['C06'], 
	this.ucC['C08'], this.ucC['C27'], this.ucC['C40'], this.ucC['C60'], this.ucC['C31'],
    this.ucC['C19'], this.ucC['C11'], this.ucC['C12'], this.ucC['C13'], this.ucC['C18'],
    this.ucC['C14'], this.ucC['C15'], this.ucC['C16'], this.ucC['C61']];
    var vCheck = rows.indexOf(row);
	//trace(" 이자소득 계=>" + rows);
	
	if (vCheck > -1 )
	{	
		tempAmIncomeTax = 0;
		for(var i = 0 ; i < rows.length ; i++) {		
			tempAmIncomeTax = tempAmIncomeTax + this.gfnNvl(this.dsList2.getColumn(rows[i], amIncomeTax),0);		
		}
		trace("이자소득계 tempAmIncomeTax=>" + tempAmIncomeTax );
		//if(this.dsList.getColumn(this.ucA['A50'], amIncomeTax) != tempAmIncomeTax){
			this.dsList.setColumn(this.ucA['A50'], "FLAG", "U");	//상태값 변경
			this.dsList.setColumn(this.ucA['A50'], amIncomeTax, tempAmIncomeTax);
		//}
	}
	
	//배당소득계
	vCheck = -1; 
	var rows2 = [];
	rows2 = [this.ucC['C07'], this.ucC['C10'], this.ucC['C20'], this.ucC['C23'], this.ucC['C60'], 
	this.ucC['C27'], this.ucC['C29'], this.ucC['C54'], this.ucC['C55'], this.ucC['C56'], 
	this.ucC['C57'], this.ucC['C93'], this.ucC['C94'], this.ucC['C22'], this.ucC['C95'], 
	this.ucC['C58'], this.ucC['C39'], this.ucC['C96'], this.ucC['C24'], this.ucC['C91'], 
	this.ucC['C92'], this.ucC['C25'], this.ucC['C26'], this.ucC['C62']];
	//trace(" 배당소득계=>" + rows2);
	// =>5,7,8,9,12,10,15,17,18,19,20,21,22,24,25,28,29,30,32,33,34,36,38,62
	vCheck = rows2.indexOf(row);
	if (vCheck > -1 )
	{
		tempAmIncomeTax = 0;
		for(var i = 0 ; i < rows2.length ; i++) {		
			tempAmIncomeTax = tempAmIncomeTax + this.gfnNvl(this.dsList2.getColumn(rows2[i], amIncomeTax),0);		
		}
		trace("배당소득계 tempAmIncomeTax=>" + tempAmIncomeTax );
		if(this.dsList.getColumn(this.ucA['A60'], amIncomeTax) != tempAmIncomeTax){
			this.dsList.setColumn(this.ucA['A60'], "FLAG", "U");	//상태값 변경
			this.dsList.setColumn(this.ucA['A60'], amIncomeTax, tempAmIncomeTax);
		}	
	}		
	// 양도소득 
	vCheck = -1; 
	var rows3 = [];
	rows3 = [this.ucC['C66'], this.ucC['C67']];
	vCheck = rows3.indexOf(row);
	//trace(" 양도소득=>" + rows3);
	if (vCheck > -1 )
	{
		tempAmIncomeTax = 0;
		for(var i = 0 ; i < rows3.length ; i++) {		
			tempAmIncomeTax = tempAmIncomeTax + this.gfnNvl(this.dsList2.getColumn(rows3[i], amIncomeTax),0);		
		}
		
		if(this.dsList.getColumn(this.ucA['A70'], amIncomeTax) != tempAmIncomeTax){
			this.dsList.setColumn(this.ucA['A70'], "FLAG", "U");	//상태값 변경
			this.dsList.setColumn(this.ucA['A70'], amIncomeTax, tempAmIncomeTax);
		}		
	}
	
	this.sbAmSumCalcA(amIncomeTax);	
	this.dsList2.set_enableevent(true);
}

//sbAM_CalSum  전월미환급 세액등의 계산로직 
this.sbAmCalSum = function() {

	var amtTemp = 0;
	var amtRerurn = 0; 
	
	var AM_BEFORETAX = this.gfnIsNull(this.mskAM_BEFORETAX.value) ? 0 : Number(this.mskAM_BEFORETAX.value);
	var AM_REQUESTTAX = this.gfnIsNull(this.mskAM_REQUESTTAX.value) ? 0 : Number(this.mskAM_REQUESTTAX.value);

	amtTemp = AM_BEFORETAX - AM_REQUESTTAX;
	this.mskAM_JAN.set_value(amtTemp == 0 ? "" : amtTemp);
	
	var AM_JAN = this.gfnIsNull(this.mskAM_JAN.value) ? 0 : Number(this.mskAM_JAN.value);
	var AM_ILBANRETURN = this.gfnIsNull(this.mskAM_ILBANRETURN.value) ? 0 : Number(this.mskAM_ILBANRETURN.value);
	var AM_SINTAC = this.gfnIsNull(this.mskAM_SINTAC.value) ? 0 : Number(this.mskAM_SINTAC.value);
	var AM_GITA = this.gfnIsNull(this.mskAM_GITA.value) ? 0 : Number(this.mskAM_GITA.value);
	var AM_GITA2 = this.gfnIsNull(this.mskAM_GITA2.value) ? 0 : Number(this.mskAM_GITA2.value);
	
	amtTemp = AM_JAN + AM_ILBANRETURN + AM_SINTAC + AM_GITA + AM_GITA2;	
	this.mskAM_SETTLE.set_value(amtTemp == 0 ? "" : amtTemp);
	
	amtTemp = 0;
	//var rows = [this.ucA['A10'], this.ucA['A20'], this.ucA['A30'], this.ucA['A40'], this.ucA['A47'], this.ucA['A50'], this.ucA['A60'], this.ucA['A69'], this.ucA['A70'], this.ucA['A80'], this.ucA['A90']];
	
	for(var i = 0 ; i < this.rows.length ; i++) {
		//amtTemp = amtTemp + this.gfnIsNull(this.dsList.getColumn(this.rows[i], "AM_RETURNTAX")) ? 0 : this.dsList.getColumn(this.rows[i], "AM_RETURNTAX");
		//amtTemp = amtTemp + this.gfnIsNull(this.dsList.getColumn(this.rows[i], "AM_RETURNTAX")) ? 0 : this.dsList.getColumn(this.rows[i], "AM_RETURNTAX");
		amtRerurn += this.gfnIsNull(this.dsList.getColumn(this.rows[i], "AM_INCOMETAX")) || this.dsList.getColumn(this.rows[i], "AM_INCOMETAX") > 0 ? 0 : this.dsList.getColumn(this.rows[i], "AM_INCOMETAX"); 
	}
	this.mskAM_ILBANRETURN.set_value(this.gfnIsNull(amtRerurn) ? 0 :  amtRerurn * -1 );
	//this.mskAM_RETURNTAXSUM.set_value(amtTemp == 0 ? "" : amtTemp);
	
	var AM_SETTLE = this.gfnIsNull(this.mskAM_SETTLE.value) ? 0 : Number(this.mskAM_SETTLE.value);
	var AM_RETURNTAXSUM = this.gfnIsNull(this.mskAM_RETURNTAXSUM.value) ? 0 : Number(this.mskAM_RETURNTAXSUM.value);
	
	amtTemp = AM_SETTLE - AM_RETURNTAXSUM;
	
	this.mskAM_WOLRETURNTAX.set_value(amtTemp == 0 ? "" : amtTemp);
}


this.fnSoduk = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) { //소득자료 집계	

	var param = {};
	param.YM_IMPUTE_FR = this.dsSearch.getColumn(0, "YM_FROM");
	param.YM_IMPUTE_TO = this.dsSearch.getColumn(0, "YM_TO");
	param.CD_DEPT_SELFACNT = this.dsSearch.getColumn(0, "CD_DEPT_SELFACNT");
	param.DS_DEPT_SELFACNT = this.dsSearch.getColumn(0, "DS_DEPT_SELFACNT");
	param.YM_SUPPLY_FR = this.dsSearch.getColumn(0, "YM_JFROM");
	param.YM_SUPPLY_TO = this.dsSearch.getColumn(0, "YM_JTO");

	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DHV_DEFRAYMENTTOTAL_SLIP", "", param);

}

this.fnTaxClose = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) { //마감처리 
	
	if(!this.fnSelectValidate()) return;

	// 마감처리 
	this.gfnConfirm("마감 처리후에는 수정 불가능합니다. \n마감을 진행하시겠습니까?", "fnCloseCallBack", "Y");	
};

this.fnCancle = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) { //마감취소 처리 
	
	if(!this.fnSelectValidate()) return;

	// 마감처리 
	this.gfnConfirm("마감취소를 진행하시겠습니까?", "fnCloseCallBack", "N");	
};

this.fnCloseCallBack = function(strId, val) {
	trace(" fnCloseCallBack=> strId : " +strId );
	if(val == false) return;
	
	this.dsClose.clearData();
	this.dsClose.addRow();
	
	this.dsClose.setColumn(0, "OUT_CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
	this.dsClose.setColumn(0, "OUT_YM_IMPUTE", this.ctclYM_IMPUTE.form.TextBox.value);
	this.dsClose.setColumn(0, "OUT_YM_SUPPLY", this.ctclYM_SUPPY.form.TextBox.value);
	this.dsClose.setColumn(0, "GB_SINGO1", this.rdoSINGO.value);
	this.dsClose.setColumn(0, "YN_CLOSE", strId);
	
	var strSvcId    = "close";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "close=dsClose";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
				
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
} 

this.fnSetJojung = function(colID){
trace(" fnSetJojung rowcount =>" + this.dsList7.rowcount);
var sExpr = this.ucFlag +" != 'D' && "+ this.ucFlag + " != 'DU'";	//삭제 데이터 제외
var sExpr1 = this.ucFlag +" != 'D' && "+ this.ucFlag + " != 'DU'" + " && TY_GUBUN == '0'";	//삭제 데이터 제외
	if (colID = "AM_INCOMETAX" || this.gfnIsNull(colID) ) {
		var amASum = nexacro.toNumber(this.gfnIsNull(sExpr,this.dsList5.getCaseSum("AM_INCOMETAX")) ? 0 : this.dsList5.getCaseSum(sExpr,"AM_INCOMETAX"),0);	//원천징수합
		var amBSum = nexacro.toNumber(this.gfnIsNull(sExpr1,this.dsList6.getCaseSum("AM_INCOMETAX")) ? 0 : this.dsList6.getCaseSum(sExpr1,"AM_INCOMETAX") ,0);	//기납세액합
		var amCha = amBSum - amASum
		if ( this.dsList7.rowcount == 0 ) { 
			this.dsList7.clearData();	
			var nRow = this.dsList7.addRow();
			this.dsList7.setColumn(nRow, this.ucFlag, "I");
			
			this.gfnSetFormStatus(this, "I");
	
		}
		trace(" fnSetJojung amCha=>" + amCha);
		this.mskAM_INCOMTAX = amASum;
		this.mskAM_INCOMTAX_GI = amBSum;
		this.mskAM_INCOMTAX_DIFF = amCha;
		
		this.dsList7.setColumn(0, "AM_INCOMETAX_CHA" , amCha);
		this.dsList7.setColumn(0, "AM_INCOMETAX" , amASum);
		this.dsList7.setColumn(0, "AM_INCOMETAX_GI" , amBSum);		
	}
	if (colID = "AM_SPECIALTAX" || this.gfnIsNull(colID)) {
		var amASum = nexacro.toNumber(this.gfnIsNull(this.dsList5.getCaseSum(sExpr,"AM_SPECIALTAX")) ? 0 : this.dsList5.getCaseSum(sExpr,"AM_SPECIALTAX"),0);	//원천징수합
		var amBSum = nexacro.toNumber(this.gfnIsNull(this.dsList6.getCaseSum(sExpr1,"AM_SPECIALTAX")) ? 0 : this.dsList6.getCaseSum(sExpr1,"AM_SPECIALTAX"),0);	//기납세액합
		var amCha = amBSum - amASum
		if ( this.dsList7.rowcount == 0 ) { 
			this.dsList7.clearData();	
			var nRow = this.dsList7.addRow();
			this.dsList7.setColumn(nRow, this.ucFlag, "I");
			
			this.gfnSetFormStatus(this, "I");
		}
		this.mskAM_SPECIALTAX = amASum;
		this.mskAM_SPECIALTAX_GI = amBSum;
		this.mskAM_SPECIALTAX_DIFF =amCha;
		this.dsList7.setColumn(0, "AM_SPECIALTAX_CHA" , amCha);
		this.dsList7.setColumn(0, "AM_SPECIALTAX" , amASum);
		this.dsList7.setColumn(0, "AM_SPECIALTAX_GI" , amBSum);			
	}
trace(" fnSetJojung rowcount2 =>" + this.dsList7.rowcount);
}


this.fnData = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {

	if(!this.fnSelectValidate()) return;

	//데이터 불러오기
	this.gfnConfirm("초기화 후 불러온 데이터를 저장합니다.\n작업을 진행하시겠습니까?", "fnDataCallBack");	
}

this.fnESingoValidate = function() {
	var strMsg = "";
	
	if(this.gfnIsNull(this.dsSearch.getColumn(0, "CD_CORP"))) {
		strMsg = "법인코드를 입력하세요!";
		this.gfnAlert(strMsg);
		this.ccfCD_CORP.form.CDTextBox.setFocus();
		return false;
	}
	if(this.gfnIsNull(this.ctclYM_IMPUTE.form.TextBox.value)) {
		strMsg = "귀속년월을 입력하세요!";
		this.gfnAlert(strMsg);
		this.ctclYM_IMPUTE.form.TextBox.setFocus();
		return false;
	}	
	if(this.gfnIsNull(this.ctclYM_SUPPY.form.TextBox.value)) {
		strMsg = "지급년월을 입력하세요!";
		this.gfnAlert(strMsg);
		this.ctclYM_SUPPY.form.TextBox.setFocus();
		return false;
	}	
	if(this.gfnIsNull(this.rdoSINGO.value)) {
		strMsg = "신고구분을 입력하세요!";
		this.gfnAlert(strMsg);
		this.rdoSINGO.setFocus();
		return false;
	}	

	return true;
}

this.fnESingo = function() {
	if(!this.fnESingoValidate()) return;
	
	this.gfnConfirm("전자 신고 작업을 진행하시겠습니까?", "fnESingoCallBack");
};


this.fnESingoCallBack = function(strId, val) {
	if(!val) return;
	
	//전자신고
	//DHVPR_WITHHOLDING_FILE

	this.dsESingo.clearData();		
	var nrow = this.dsESingo.addRow();
	this.dsESingo.setColumn(nrow, "OUT_CD_SELFACNT", this.dsSearch.getColumn(0, "CD_CORP")); //   IN      VARCHAR2,      -- 법인코드
	this.dsESingo.setColumn(nrow, "OUT_YM_IMPUTE", this.ctclYM_IMPUTE.form.TextBox.value); //   IN      VARCHAR2,      -- 귀속년월
	this.dsESingo.setColumn(nrow, "OUT_YM_SUPPLY", this.ctclYM_SUPPY.form.TextBox.value); //	 IN      VARCHAR2,	   --지급년월
	this.dsESingo.setColumn(nrow, "OUT_GB_SINGO1", this.rdoSINGO.value); //   IN      VARCHAR2,     --신고구분  
	
	//trace(this.dsESingo.saveXML());
		
	
	var strSvcId    = "ESingo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "ESingo=dsESingo";
	var outData     = "dsText=ESingo0";
	var strArg      = "";
	var callBackFnc = "fnCallback";

	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
					strSvcType , 	// transaction을 요청할 구분
					inProc,			// Procedure 정보 Dataset 이름
					inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
					outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
					strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
					callBackFnc); // 통신방법 정의 [생략가능]	
}

this.fnFileDownload = function () {
//trace("this.dsText.rowcount", this.dsText.rowcount);
//trace("this.dsText.saveXML", this.dsText.saveXML());

	if (this.dsText.rowcount <= 0) {
		return false;
	}

	var data="";
	for(var i=0;i<this.dsText.rowcount;i++){
		data = data + this.dsText.getColumn(i,"ROWDATA");
		if(i == this.dsText.rowcount -1){
			;
		}else{
			data = data + "\n";
		}
	}
	//trace("data==>", data);
	
	var sFilename = this.gfnGetDate()+"C103900.01"; //yyyyMMdd(오늘날짜)C103900.01
	var sFilecont = data;
	var encodeFileName = encodeURIComponent(sFilename);
		
	var surl = this.fileConfig.host+ this.fileConfig.downloadUrl; // + encodeFileName;
	this.FileDownTransfer00.set_url(surl);
	this.FileDownTransfer00.setPostData("fileCont", sFilecont);
	this.FileDownTransfer00.setPostData("fileName", encodeFileName);
	this.FileDownTransfer00.setPostData("fileEncoding", "EUC-KR");
	
	if( system.navigatorname =="nexacro"){
		this.FileDownTransfer00.set_downloadfilename(sFilename);
	}
	this.FileDownTransfer00.download();
}

// 조회후 data 
this.makeData = function() {

	this.dsList.clearData();
	this.fnGridGubunASetting();
	
	this.dsList2.clearData();
	//this.setDxGrid2();
	this.fnGridGubunBSetting();
	
	
	if(this.dsResult.rowcount > 0) {
	
		if(Number(this.dsResult.getColumn(0, "CNT")) == 0) {
			this.getDataFlag = true;
			this.tabData.set_tabindex(0);			
			this.gfnAlert("귀속년월(" + this.ctclYM_IMPUTE.form.TextBox.value + ") 신고서가 존재하지 않습니다.\n작성하여 주십시오!" );
			this.fnReadOnly("N");
			return false;
		} 
	
		this.dsList.set_enableevent(false);
		
		this.edtNM_SANGHO.set_value(this.dsResult.getColumn(0, "DS_DEPT_SELFACNT"));
		this.edtNM_BOSS.set_value(this.dsResult.getColumn(0, "DS_DAEPYO"));
		this.edtNO_TEL.set_value(this.dsResult.getColumn(0, "NO_TEL"));
		
		if(this.dsResult.getColumn(0, "YN_BATCH") == "Y") {
			this.rdoBATCH.set_index(0);
		} else {
			this.rdoBATCH.set_index(1);
		}
				
		if(this.dsResult.getColumn(0, "YN_SAUPJA") == "Y") {
			this.rdoSAUPJA.set_index(0);
		} else {
			this.rdoSAUPJA.set_index(1);
		}
		
		this.edtNO_SAUP.set_value(this.dsResult.getColumn(0, "NO_SJC"));
		this.edtADDR.set_value(this.dsResult.getColumn(0, "DS_ADDR"));
		
		if(this.dsResult.getColumn(0, "GB_SINGO1") == "2") {
			this.rdoSINGO.set_index(1);
		} else {
			this.rdoSINGO.set_index(0);
		}
				
		this.chkSINGO02.set_value(this.dsResult.getColumn(0, "GB_SINGO2") == "Y" ? true : false);
		this.chkSINGO03.set_value(this.dsResult.getColumn(0, "GB_SINGO3") == "Y" ? true : false);
		this.chkSINGO04.set_value(this.dsResult.getColumn(0, "GB_SINGO4") == "Y" ? true : false);
		this.chkSINGO05.set_value(this.dsResult.getColumn(0, "GB_SINGO5") == "Y" ? true : false);
		
		if(this.dsResult.getColumn(0, "YN_SUBWRITE") == "Y") {
			this.rdoSUBWRITE.set_index(0);
		} else {
			this.rdoSUBWRITE.set_index(1);
		}
		

		this.ctclYM_SUPPY.form.TextBox.set_value(this.dsResult.getColumn(0, "YM_SUPPLY"));
		
		if(this.gfnIsNull(this.dsResult.getColumn(0, "DT_ENTER"))) {
			this.ccfDT_ENTER.set_value(this.gfnGetDate());
		} else {
			this.ccfDT_ENTER.set_value(this.dsResult.getColumn(0, "DT_ENTER"));
		}
		
		this.mskAM_BEFORETAX.set_value(this.dsResult.getColumn(0, "AM_BEFORETAX"));
		this.strAmBeforetax = this.gfnIsNull(this.mskAM_BEFORETAX.value) ? 0 : Number(this.mskAM_BEFORETAX.value);
		this.strAmBeforetaxOrg = this.gfnIsNull(this.mskAM_BEFORETAX.value) ? 0 : Number(this.mskAM_BEFORETAX.value);
		
		this.mskAM_REQUESTTAX.set_value(this.dsResult.getColumn(0, "AM_REQUESTTAX"));
		this.mskAM_JAN.set_value(this.dsResult.getColumn(0, "AM_JAN"));
		this.mskAM_ILBANRETURN.set_value(this.dsResult.getColumn(0, "AM_ILBANRETURN"));
		this.mskAM_SINTAC.set_value(this.dsResult.getColumn(0, "AM_SINTAC"));
		this.mskAM_GITA.set_value(this.dsResult.getColumn(0, "AM_GITA"));
		this.mskAM_GITA2.set_value(this.dsResult.getColumn(0, "AM_GITA2"));
		this.mskAM_SETTLE.set_value(this.dsResult.getColumn(0, "AM_SETTLE"));
		this.mskAM_RETURNTAXSUM.set_value(this.dsResult.getColumn(0, "AM_RETURNTAXSUM"));
		this.mskAM_WOLRETURNTAX.set_value(this.dsResult.getColumn(0, "AM_WOLRETURNTAX"));
		this.mskAM_RETURNAPPLY.set_value(this.dsResult.getColumn(0, "AM_RETURNAPPLY"));
		
		//그리드 관련 정보
		var keys = ["NO_INWON", "AM_TOTSUPPLY", "AM_INCOMETAX", "AM_RESTAX", "AM_SPECIALTAX", "AM_ADDTAX", "AM_RETURNTAX", "AM_NAPINCOMETAX", "AM_NAPSPECIALTAX", "AM_NAPRESTAX"];
		var x = 0;	
		
		
		//근로소득 그리드 세팅
		if(Number(this.dsResult.getColumn(0, "CNT")) > 0) {
			for(var i = 0 ; i < this.dsResult.rowcount ; i++) {
				if(this.dsResult.getColumn(i, "CD_GUBUN").substring(0, 1) == "A") {
					for(var j = 0 ; j < keys.length ; j++) {
						this.dsList.setColumn(x, keys[j], this.dsResult.getColumn(i, keys[j]));
					}
					x++;
				}
			}
		}
				
		this.dsList.set_enableevent(true);
		
		this.dsList2.set_enableevent(false);
		
		//부표작성 그리드 세팅
		if(this.dsResult.getColumn(0, "YN_SUBWRITE") == "Y") {
			keys = ["NO_INWON", "AM_TOTSUPPLY", "AM_INCOMETAX", "AM_RESTAX", "AM_SPECIALTAX", "AM_ADDTAX", "AM_RETURNTAX", "AM_NAPINCOMETAX", "AM_NAPSPECIALTAX"];
			x = 0;
			
			for(var i = 0 ; i < this.dsResult.rowcount ; i++) {
				if(this.dsResult.getColumn(i, "CD_GUBUN").substring(0, 1) == "C") {
					for(var j = 0 ; j < keys.length ; j++) {
						this.dsList2.setColumn(x, keys[j], this.dsResult.getColumn(i, keys[j]));
					}
					x++;
				}
			}
		}
		
		if(this.dsResult.getColumn(0, "YN_CLOSE") == "Y") {
			this.rdoYN_CLOSE.set_index(0);
		} else {
			this.rdoYN_CLOSE.set_index(1);
		}
		this.dsList2.set_enableevent(true);
		
		this.getDataFlag = false;			
 		this.fnSelectReturn();  //환급신청 조회			
 		this.fnSelectSuccession();  //승계명세 조회
 		this.fnSelectReturnGi(); //기납부세액명세서서 조회 
 		this.fnSelectUnReturn(); //전월미환급세액 조정명세서 조회 
 		this.gfnSetFormStatus(this, "Q");
		this.fnReadOnly(this.dsResult.getColumn(0, "YN_CLOSE")); // 마감여부에 따라 readonly 처리 
	} else {
		this.gfnAlert("자료가 존재하지 않습니다.");
	}
}

this.makeSuccessionData = function() {

	this.dsList4.clearData();
	//this.setDxGrid4();

	if(this.dsSResult.rowcount > 0) {
	
		var keys = ["NO_SJC", "DS_SJC", "DT_SUCCESSION", "CD_SUCCESSION_BASIS", "YM_IMPUTE_SUCC", "YM_SUPPLY_SUCC", "AM_WOLRETURNTAX", "CD_SEQ"];
		
		this.dsList4.set_enableevent(false);
		for(var i = 0 ; i < this.dsSResult.rowcount ; i++) {		
			for(var j = 0 ; j < keys.length ; j++) {
				this.dsList4.setColumn(i, keys[j], this.dsSResult.getColumn(i, keys[j]));
			}
		}
		this.dsList4.set_enableevent(true);
	}
}
// 기납부세액명세서 조회
this.makeGiData = function() {

	if(this.dsList7.rowcount > 0) {
		this.dsList7.set_enableevent(false);
		this.chkReson1.set_value(this.dsList7.getColumn(0, "YN_REASON1") == "Y" ? true : false);
		this.chkReson2.set_value(this.dsList7.getColumn(0, "YN_REASON2") == "Y" ? true : false);
		this.chkReson3.set_value(this.dsList7.getColumn(0, "YN_REASON3") == "Y" ? true : false);
		this.chkReson4.set_value(this.dsList7.getColumn(0, "YN_REASON4") == "Y" ? true : false);
		this.chkReson5.set_value(this.dsList7.getColumn(0, "YN_REASON5") == "Y" ? true : false);
		this.dsList7.set_enableevent(true);
	}
};

// data 불러오기 조회 후 data 작성 
this.makeFnData = function() {
	
	this.dsList.clearData();
	this.fnGridGubunASetting();
	this.fnGridGubunBSetting();
	//this.setDxGrid();
	
	if(this.dsResult.rowcount > 0) {
	
		this.dsList.set_enableevent(false);
	
		var jrow = 0;
			
		for(var i = 0 ; i < this.dsResult.rowcount ; i++) {
			
			jrow = this.dsList.findRowExpr(" CD_GUBUN == '" + this.dsResult.getColumn(i, "TY_SODUK")+"'");
			//trace(" 데이터불러오기 jrow=>" + jrow + "::" + this.dsResult.getColumn(i, "TY_SODUK"));
			
			this.dsList.setColumn(jrow, "NO_INWON", this.dsResult.getColumn(i, "INWON"));		//인원
			this.dsList.setColumn(jrow, "AM_TOTSUPPLY", this.dsResult.getColumn(i, "SALARY"));	//총지급액
			this.dsList.setColumn(jrow, "AM_INCOMETAX", this.dsResult.getColumn(i, "TAXSUM"));	//소득세
			this.dsList.setColumn(jrow, "AM_RESTAX", this.dsResult.getColumn(i, "RESTAXSUM"));	//주민세
		
		}
		
		this.dsList.set_enableevent(true);
		
		this.sbAmSumCalcA("NO_INWON");		//인원
		this.sbAmSumCalcA("AM_TOTSUPPLY");	//총지급액
		this.sbAmSumCalcA("AM_INCOMETAX");	//소득세
		this.sbAmSumCalcA("AM_RESTAX");		//주민세

		this.mskAM_BEFORETAX.set_value(this.dsResult.getColumn(0, "AM_BEFORETAX"));
		this.strAmBeforetax = this.gfnIsNull(this.mskAM_BEFORETAX.value) ? 0 : Number(this.mskAM_BEFORETAX.value);
	
		for(var i = 0 ; i < this.rows.length ; i++) {
		//	this.dsList.setColumn(this.rows[i], "AM_NAPINCOMETAX", this.dsList.getColumn(this.rows[i], "AM_INCOMETAX"));
			this.dsList.setColumn(this.rows[i], "AM_NAPRESTAX"	, this.dsList.getColumn(this.rows[i], "AM_RESTAX"));
		}

		this.dsList.set_enableevent(true);
		
		this.sbAmSumCalcA("AM_NAPINCOMETAX");
		this.sbAmSumCalcA("AM_NAPRESTAX");
		this.sbAmCalSum();
		this.newLogic();
		
		this.ctclYM_SUPPY.form.TextBox.set_value(this.ctclYM_JTO.form.TextBox.value);
		
		//this.dsList.set_enableevent(true);
	
	} else {
		this.gfnAlert("불러올 자료가 존재하지 않습니다.");
	}
	
};

this.fnReadOnly = function(vflg) {

	var uflag = true; 
	
	if(vflg == "Y") {
		uflag = false;
	}
	
		this.FormBtns.Add.set_enable(uflag); 
		this.FormBtns.Del.set_enable(uflag); 
		this.FormBtns.Save.set_enable(uflag);		
		this.btnData.set_enable(uflag);
		this.btnClose.set_enable(uflag);
		this.btnCancle.set_enable(uflag ? false : true);
		this.rdoSINGO.set_enable(uflag);
		this.chkSINGO02.set_enable(uflag); 
		this.chkSINGO04.set_enable(uflag);
		this.chkSINGO05.set_enable(uflag);
		this.chkSINGO03.set_enable(uflag);		
		this.ctclYM_IMPUTE.set_enable(uflag);
		this.ctclYM_SUPPY.set_enable(uflag);
		this.rdoBATCH.set_enable(uflag);
		this.rdoSAUPJA.set_enable(uflag);
		this.rdoSUBWRITE.set_enable(uflag);
		this.ccfDT_ENTER.set_enable(uflag);
		
		if(this.tabData.tabindex == 0){
			this.mskAM_REQUESTTAX.set_enable(uflag);
			this.mskAM_ILBANRETURN.set_enable(uflag);
			this.mskAM_SINTAC.set_enable(uflag);
			this.mskAM_GITA.set_enable(uflag);
			this.mskAM_GITA2.set_enable(uflag);
			this.mskAM_RETURNTAXSUM.set_enable(uflag);
			this.mskAM_RETURNAPPLY.set_enable(uflag);
		}
		if(this.tabData.tabindex == 4){
			this.mskAM_INCOMETAX.set_enable(uflag);
			this.mskAM_INCOMETAX_GI.set_enable(uflag);
			this.mskAM_INCOMETAX_DIFF.set_enable(uflag);
			this.mskAM_SPECIALTAX.set_enable(uflag);
			this.mskAM_SPECIALTAX_GI.set_enable(uflag);
			this.mskAM_SPECIALTAX_DIFF.set_enable(uflag);
			this.chkReson1.set_enable(uflag);
			this.chkReson2.set_enable(uflag);
			this.chkReson3.set_enable(uflag);
			this.chkReson4.set_enable(uflag);
			this.chkReson5.set_enable(uflag);
			this.txtDS_REASON.set_enable(uflag);
			this.divData.form.tabData.tab5.form.rdoGiGubun2.set_enable(uflag);

		}

		this.dsList.set_enableevent(uflag);
		this.dsList2.set_enableevent(uflag);
		this.dsList3.set_enableevent(uflag);
		this.dsList4.set_enableevent(uflag);
		this.dsList5.set_enableevent(uflag);
		this.dsList6.set_enableevent(uflag);
		this.dsList7.set_enableevent(uflag);
		this.dsList8.set_enableevent(uflag);
		this.dsList9.set_enableevent(uflag);
		
		this.divData.form.tabData.tab3.form.btnAdd.set_enable(uflag); 
		this.divData.form.tabData.tab3.form.btnRemove.set_enable(uflag);
		this.divData.form.tabData.tab5.form.btnIncomtax.set_enable(uflag);
		this.divData.form.tabData.tab5.form.btnAdd.set_enable(uflag);
		this.divData.form.tabData.tab5.form.btnRemove.set_enable(uflag);
		this.divData.form.tabData.tab5.form.btnGiData.set_enable(uflag);
		this.divData.form.tabData.tab5.form.btnGiAdd.set_enable(uflag);
		this.divData.form.tabData.tab5.form.btnGiRemove.set_enable(uflag);
		this.divData.form.tabData.tab6.form.btnUnAdd1.set_enable(uflag);
		this.divData.form.tabData.tab6.form.btnUnRemove1.set_enable(uflag);
		this.divData.form.tabData.tab6.form.btnUnAdd2.set_enable(uflag);
		this.divData.form.tabData.tab6.form.btnUnRemove2.set_enable(uflag);

}
//****************************************************************************
//   그리드 셋팅  
//********************************************************************************

this.fnGridGubunASetting = function() {

	this.dsList.clearData();
	this.dsList.set_enableevent(false);
	
	if (this.dsGubunA.rowcount > 0)
	{
		var nrow;
		for(var i=0;i<this.dsGubunA.rowcount;i++){	
			nrow = this.dsList.addRow();
			this.dsList.setColumn(nrow, "NM_GUBUN", this.dsGubunA.getColumn(i,"NM_GUBUN"));
			this.dsList.setColumn(nrow, "CD_GUBUN", this.dsGubunA.getColumn(i,"CD_GUBUN"));
			this.dsList.setColumn(nrow, "DS_ETC1", this.dsGubunA.getColumn(i,"DS_ETC1"));
			this.dsList.setColumn(nrow, "DS_ETC2", this.dsGubunA.getColumn(i,"DS_ETC2"));
			this.dsList.setColumn(nrow, "DS_ORDER", this.dsGubunA.getColumn(i,"DS_ORDER"));
		}
		if (this.vYnSetVarA == false)
		{
			this.setUserVar();
		}		
	}
	
	this.dsList.set_enableevent(true);		
	
}

this.setUserVar = function() { // A01 ~ A99 코드 변수의 row 값 할당 
		//근로소득탭 상수처리
	this.ucA = {}; // 코드 변수 할당 
	for(var i=0;i<this.dsGubunA.rowcount;i++){	
	    var gubun = this.dsGubunA.getColumn(i,"CD_GUBUN");
		this.ucA[`${gubun}`] = i;
	}
// 	this.ucA['A01'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A01'");    //근로소득-간이세액
// 	this.ucA['A02'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A02'");    //근로소득-중도퇴사
// 	this.ucA['A03'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A03'");    //근로소득-일용근로
// 	this.ucA['A04'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A04'");    //근로소득-연말정산
// 	this.ucA['A05'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A05'");    //근로소득-연말정산 
// 	this.ucA['A06'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A06'");    //근로소득-연말정산 
// 	this.ucA['A10'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A10'");    //근로소득-가감계
// 	this.ucA['A21'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A21'");    //퇴직소득-연금계좌
// 	this.ucA['A22'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A22'");    //퇴직소득-그외
// 	this.ucA['A20'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A20'");    //퇴직소득-가감계
// 	this.ucA['A25'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A25'");    //사업소득-매월징수
// 	this.ucA['A26'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A26'");    //사업소득-연말정산
// 	this.ucA['A30'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A30'");    //사업소득-가감계
// 	this.ucA['A41'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A41'");    //기타소득-연금계좌
// 	this.ucA['A43'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A43'");    //기타소득-종교인 매월징수
// 	this.ucA['A44'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A44'");    //기타소득-종료인 연말정산 
// 	this.ucA['A49'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A49'");    //기타소득-가상자산
// 	this.ucA['A59'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A59'");    //기타소득-인적용역
// 	this.ucA['A42'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A42'");    //기타소득-그외
// 	this.ucA['A40'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A40'");    //기타소득-가감계
// 	this.ucA['A48'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A48'");    //연금소득-연금계좌
// 	this.ucA['A45'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A45'");    //연금소득-공적연금(매월)
// 	this.ucA['A46'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A46'");    //연금소득-연말정산
// 	this.ucA['A47'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A47'");    //연금소득-가감계
// 	this.ucA['A50'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A50'");    //이자소득
// 	this.ucA['A60'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A60'");    //배당소득
// 	this.ucA['A71'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A71'");    //금융투자소득 추가 
// 	this.ucA['A69'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A69'");    //저축해지 추징세액 등
// 	this.ucA['A70'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A70'");    //비거주자 양도소득
// 	this.ucA['A80'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A80'");    //내.외국인법인원천
// 	this.ucA['A90'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A90'");    //수정신고(세액)
// 	this.ucA['A99'] = this.dsGubunA.findRowExpr("CD_GUBUN == 'A99'");    //총합계
	
	// 합산을위한 row 셋팅 
	this.rows = [this.ucA['A10'], this.ucA['A20'], this.ucA['A30'], this.ucA['A40'], this.ucA['A47'], this.ucA['A50'], this.ucA['A60'],  this.ucA['A71'], this.ucA['A69'], this.ucA['A70'], this.ucA['A80'], this.ucA['A90']];
	//trace("this.ucA['A99'] =>" +this.ucA['A99'] );
	this.vYnSetVarA = true;
	this.setGirdColor(); 
	this.fnsetMergeCellGrid();
}


this.setGirdColor = function() {
	this.dsList.set_enableevent(false);
	
	var exprArray = [];
	exprArray.push('currow == ' + this.ucA['A06']);
	exprArray.push('currow == ' + this.ucA['A90']);	
	
	this.dxGrid.setCellProperty("body" , this.dxGrid.getBindCellIndex("body", "NO_INWON"), "cssclass", 'expr: ' + exprArray.join(' || ') + ' ? "BACK_ReadOnly" : ""');
	this.dxGrid.setCellProperty("body" , this.dxGrid.getBindCellIndex("body", "NO_INWON"), "edittype", 'expr: ' + exprArray.join(' || ') + ' ? "none" : "mask"');
	
	exprArray = [];
	exprArray.push('currow == ' + this.ucA['A05']);
	exprArray.push('currow == ' + this.ucA['A06']);	
	exprArray.push('currow == ' + this.ucA['A69']);	
	exprArray.push('currow == ' + this.ucA['A90']);	
		
	this.dxGrid.setCellProperty("body" , this.dxGrid.getBindCellIndex("body", "AM_TOTSUPPLY"), "cssclass", 'expr: ' + exprArray.join(' || ') + ' ? "BACK_ReadOnly" : ""');
	this.dxGrid.setCellProperty("body" , this.dxGrid.getBindCellIndex("body", "AM_TOTSUPPLY"), "edittype", 'expr: ' + exprArray.join(' || ') + ' ? "none" : "mask"');
	
	exprArray = [];
	exprArray.push('currow == ' + this.ucA['A03']);
	exprArray.push('(currow >= ' + this.ucA['A21'] + ' && currow <= ' + this.ucA['A25'] + ' )');
	exprArray.push('(currow >= ' + this.ucA['A41'] + ' && currow <= ' + this.ucA['A47'] + ' )');
	exprArray.push('(currow >= ' + this.ucA['A69'] + ' && currow <= ' + this.ucA['A80'] + ' )');
		
	this.dxGrid.setCellProperty("body" , this.dxGrid.getBindCellIndex("body", "AM_SPECIALTAX"), "cssclass", 'expr: ' + exprArray.join(' || ') + ' ? "BACK_ReadOnly" : ""');
	this.dxGrid.setCellProperty("body" , this.dxGrid.getBindCellIndex("body", "AM_SPECIALTAX"), "edittype", 'expr: ' + exprArray.join(' || ') + ' ? "none" : "mask"');
	
	exprArray = [];
	exprArray.push('(currow >= ' + this.ucA['A01'] + ' && currow <= ' + this.ucA['A06'] + ' )');
	exprArray.push('(currow >= ' + this.ucA['A21'] + ' && currow <= ' + this.ucA['A22'] + ' )');
	exprArray.push('(currow >= ' + this.ucA['A25'] + ' && currow <= ' + this.ucA['A26'] + ' )');
	exprArray.push('(currow >= ' + this.ucA['A41'] + ' && currow <= ' + this.ucA['A42'] + ' )');
	exprArray.push('(currow >= ' + this.ucA['A48'] + ' && currow <= ' + this.ucA['A46'] + ' )');
	this.dxGrid.setCellProperty("body" , this.dxGrid.getBindCellIndex("body", "AM_RETURNTAX"), "cssclass", 'expr: ' + exprArray.join(' || ') + ' ? "BACK_ReadOnly" : ""');
	this.dxGrid.setCellProperty("body" , this.dxGrid.getBindCellIndex("body", "AM_RETURNTAX"), "edittype", 'expr: ' + exprArray.join(' || ') + ' ? "none" : "mask"');
	
	exprArray = [];
	exprArray.push('(currow >= ' + this.ucA['A01'] + ' && currow <= ' + this.ucA['A06'] + ' )');
	exprArray.push('(currow >= ' + this.ucA['A25'] + ' && currow <= ' + this.ucA['A26'] + ' )');
	exprArray.push('(currow >= ' + this.ucA['A41'] + ' && currow <= ' + this.ucA['A42'] + ' )');
	exprArray.push('(currow >= ' + this.ucA['A48'] + ' && currow <= ' + this.ucA['A46'] + ' )');
		
	this.dxGrid.setCellProperty("body" , this.dxGrid.getBindCellIndex("body", "AM_NAPINCOMETAX"), "cssclass", 'expr: ' + exprArray.join(' || ') + ' ? "BACK_ReadOnly" : ""');
	this.dxGrid.setCellProperty("body" , this.dxGrid.getBindCellIndex("body", "AM_NAPINCOMETAX"), "edittype", 'expr: ' + exprArray.join(' || ') + ' ? "none" : "mask"');
	
	exprArray = [];
	exprArray.push('(currow >= ' + this.ucA['A01'] + ' && currow <= ' + this.ucA['A06'] + ' )');
	exprArray.push('(currow >= ' + this.ucA['A21'] + ' && currow <= ' + this.ucA['A26'] + ' )');
	exprArray.push('(currow >= ' + this.ucA['A41'] + ' && currow <= ' + this.ucA['A47'] + ' )');
	exprArray.push('(currow >= ' + this.ucA['A69'] + ' && currow <= ' + this.ucA['A80'] + ' )');
	
	this.dxGrid.setCellProperty("body" , this.dxGrid.getBindCellIndex("body", "AM_NAPSPECIALTAX"), "cssclass", 'expr: ' + exprArray.join(' || ') + ' ? "BACK_ReadOnly" : ""');
	this.dxGrid.setCellProperty("body" , this.dxGrid.getBindCellIndex("body", "AM_NAPSPECIALTAX"), "edittype", 'expr: ' + exprArray.join(' || ') + ' ? "none" : "mask"');
	
	exprArray = [];
	exprArray.push('(currow >= ' + this.ucA['A01'] + ' && currow <= ' + this.ucA['A90'] + ' )');
	
	this.dxGrid.setCellProperty("body" , this.dxGrid.getBindCellIndex("body", "AM_RESTAX"), "cssclass", 'expr: ' + exprArray.join(' || ') + ' ? "BACK_GangJo" : ""');
	this.dxGrid.setCellProperty("body" , this.dxGrid.getBindCellIndex("body", "AM_NAPRESTAX"), "cssclass", 'expr: ' + exprArray.join(' || ') + ' ? "BACK_GangJo" : ""');
		
	this.dsList.set_enableevent(true);
// 	exprArray = [];
// 	exprArray.push('currow == ' + this.ucA['A21']);
// 	exprArray.push('currow == ' + this.ucA['A41']);
// 	exprArray.push('currow == ' + this.ucA['A48']);
// 	
// 	this.dxGrid.setCellProperty("body" , this.dxGrid.getBindCellIndex("body", "NO_INWON"), "edittype", 'expr: ' + exprArray.join(' || ') + ' ? "none" : "mask"');
// 	this.dxGrid.setCellProperty("body" , this.dxGrid.getBindCellIndex("body", "AM_TOTSUPPLY"), "edittype", 'expr: ' + exprArray.join(' || ') + ' ? "none" : "mask"');	
// 	this.dxGrid.setCellProperty("body" , this.dxGrid.getBindCellIndex("body", "AM_RETURNTAX"), "edittype", 'expr: ' + exprArray.join(' || ') + ' ? "none" : "mask"');
// 	this.dxGrid.setCellProperty("body" , this.dxGrid.getBindCellIndex("body", "AM_NAPSPECIALTAX"), "edittype", 'expr: ' + exprArray.join(' || ') + ' ? "none" : "mask"');
// 	this.dxGrid.setCellProperty("body" , this.dxGrid.getBindCellIndex("body", "AM_INCOMETAX"), "edittype", 'expr: ' + exprArray.join(' || ') + ' ? "none" : "mask"');
// 	this.dxGrid.setCellProperty("body" , this.dxGrid.getBindCellIndex("body", "AM_RESTAX"), "edittype", 'expr: ' + exprArray.join(' || ') + ' ? "none" : "mask"');
// 	this.dxGrid.setCellProperty("body" , this.dxGrid.getBindCellIndex("body", "AM_ADDTAX"), "edittype", 'expr: ' + exprArray.join(' || ') + ' ? "none" : "mask"');

}


this.fnsetMergeCellGrid = function() {
    trace(" 첫번째 그리드 머지 this.ucA['A50']=> " + this.ucA['A50']);
 	this.dxGrid.set_enableevent(false);
	this.dsList.set_enableevent(false);

	this.dxGrid.mergeCell(1,1,this.ucA['A01'],this.ucA['A70']); 
	
	this.dxGrid.mergeCell(2,2,this.ucA['A01'],this.ucA['A10']); 
	this.dxGrid.mergeCell(2,2,this.ucA['A21'],this.ucA['A20']); 
	this.dxGrid.mergeCell(2,2,this.ucA['A25'],this.ucA['A30']); 
	this.dxGrid.mergeCell(2,2,this.ucA['A41'],this.ucA['A40']); 
	this.dxGrid.mergeCell(2,2,this.ucA['A48'],this.ucA['A47']); 
	
	this.dxGrid.mergeCell(2,3,this.ucA['A50'],this.ucA['A50']); 
	this.dxGrid.mergeCell(2,3,this.ucA['A60'],this.ucA['A60']);
	this.dxGrid.mergeCell(2,3,this.ucA['A71'],this.ucA['A71']);
	this.dxGrid.mergeCell(2,3,this.ucA['A69'],this.ucA['A69']);
	this.dxGrid.mergeCell(2,3,this.ucA['A70'],this.ucA['A70']);
	this.dxGrid.mergeCell(2,3,this.ucA['A80'],this.ucA['A80']);
	this.dxGrid.mergeCell(1,3,this.ucA['A90'],this.ucA['A90']);
	this.dxGrid.mergeCell(1,3,this.ucA['A99'],this.ucA['A99']);
	trace("mergeCell ucA[A99]=>" + this.dxGrid.mergeCell(1,3,this.ucA['A99'],this.ucA['A99']));
	
	this.dxGrid.set_enableevent(true);
	this.dsList.set_enableevent(true);
}


this.fnGridGubunBSetting = function() {
	this.dsList2.clearData();
	this.dsList2.set_enableevent(false);
	
	if (this.dsGubunB.rowcount > 0)
	{
		var nrow;
		for(var i=0;i<this.dsGubunB.rowcount;i++){	
			nrow = this.dsList2.addRow();
			this.dsList2.setColumn(nrow, "NM_GUBUN", this.dsGubunB.getColumn(i,"NM_GUBUN"));
			this.dsList2.setColumn(nrow, "CD_GUBUN", this.dsGubunB.getColumn(i,"CD_GUBUN"));
			this.dsList2.setColumn(nrow, "DS_ETC1", this.dsGubunB.getColumn(i,"DS_ETC1"));
			this.dsList2.setColumn(nrow, "DS_ETC2", this.dsGubunB.getColumn(i,"DS_ETC2"));
			this.dsList2.setColumn(nrow, "DS_ETC3", this.dsGubunB.getColumn(i,"DS_ETC3"));			
			this.dsList2.setColumn(nrow, "DS_ORDER", this.dsGubunB.getColumn(i,"DS_ORDER"));
			
		}
		if (this.vYnSetVarB == false)
		{
			this.setUserVar2();
		}
	}
	
	this.dsList2.set_enableevent(true);	
}


this.setUserVar2 = function() { // C01 ~ C99 코드 변수의 row 값 할당 
  
	this.ucC = {};
	for(var i=0;i<this.dsGubunB.rowcount;i++){	
	    var gubun = this.dsGubunB.getColumn(i,"CD_GUBUN");
		this.ucC[`${gubun}`] = i;
	}
	
	this.vYnSetVarB = true;
	this.fnSetGird2Color(); 
	this.fnsetMergeCellGrid2();
}

this.fnSetGird2Color = function() {
	this.dsList2.set_enableevent(false);
	
	trace("두번째 그리드 컬러링 fnSetGird2Color this.ucC['C50'] =>" + this.ucC['C50']);
	
	exprArray = [];
	
	exprArray.push('(currow >= ' + this.ucC['C41'] + ' && currow <= ' + this.ucC['C50'] +' )');
	this.dxGrid2.setCellProperty("body" , this.dxGrid2.getBindCellIndex("body", "AM_TOTSUPPLY"), "edittype", 'expr: ' + exprArray.join(' || ') + ' ? "none" : "mask"');
	this.dxGrid2.setCellProperty("body" , this.dxGrid2.getBindCellIndex("body", "AM_TOTSUPPLY"), "cssclass", 'expr: ' + exprArray.join(' || ') + ' ? "BACK_ReadOnly" : ""');
	
	exprArray = [];
	exprArray.push('(currow >= ' + this.ucC['C01'] + ' && currow <= ' + this.ucC['C29'] +' )');
	exprArray.push('(currow >= ' + this.ucC['C32'] + ' && currow <= ' + this.ucC['C47'] +' )');
	exprArray.push('currow == ' + this.ucC['C76']);
	this.dxGrid2.setCellProperty("body" , this.dxGrid2.getBindCellIndex("body", "AM_INCOMETAX"), "edittype", 'expr: ' + exprArray.join(' || ') + ' ? "none" : "mask"');
	this.dxGrid2.setCellProperty("body" , this.dxGrid2.getBindCellIndex("body", "AM_INCOMETAX"), "cssclass", 'expr: ' + exprArray.join(' || ') + ' ? "BACK_ReadOnly" : ""');
	this.dxGrid2.setCellProperty("body" , this.dxGrid2.getBindCellIndex("body", "AM_RESTAX"), "edittype", 'expr: ' + exprArray.join(' || ') + ' ? "none" : "mask"');
			
	exprArray = [];
	exprArray.push('(currow >= ' + this.ucC['C01'] + ' && currow <= ' + this.ucC['C05'] +' )');
	exprArray.push('(currow >= ' + this.ucC['C07'] + ' && currow <= ' + this.ucC['C23'] +' )');
	exprArray.push('(currow >= ' + this.ucC['C54'] + ' && currow <= ' + this.ucC['C55'] +' )');
	exprArray.push('(currow >= ' + this.ucC['C13'] + ' && currow <= ' + this.ucC['C26'] +' )');
	exprArray.push('currow == ' + this.ucC['C32']);
	exprArray.push('currow == ' + this.ucC['C79']);
	exprArray.push('currow == ' + this.ucC['C97']);
	exprArray.push('(currow >= ' + this.ucC['C41'] + ' && currow <= ' + this.ucC['C50'] +' )');
	exprArray.push('(currow >= ' + this.ucC['C71'] + ' && currow <= ' + this.ucC['C90'] +' )');	
	this.dxGrid2.setCellProperty("body" , this.dxGrid2.getBindCellIndex("body", "AM_SPECIALTAX"), "edittype", 'expr: ' + exprArray.join(' || ') + ' ? "none" : "mask"');
	this.dxGrid2.setCellProperty("body" , this.dxGrid2.getBindCellIndex("body", "AM_SPECIALTAX"), "cssclass", 'expr: ' + exprArray.join(' || ') + ' ? "BACK_ReadOnly" : ""');
	
	exprArray = [];
	exprArray.push('(currow >= ' + this.ucC['C01'] + ' && currow <= ' + this.ucC['C05'] +' )');
	exprArray.push('(currow >= ' + this.ucC['C07'] + ' && currow <= ' + this.ucC['C23'] +' )');
	exprArray.push('currow == ' + this.ucC['C32']);
	exprArray.push('currow == ' + this.ucC['C76']);
	this.dxGrid2.setCellProperty("body" , this.dxGrid2.getBindCellIndex("body", "AM_ADDTAX"), "edittype", 'expr: ' + exprArray.join(' || ') + ' ? "none" : "mask"');
	this.dxGrid2.setCellProperty("body" , this.dxGrid2.getBindCellIndex("body", "AM_ADDTAX"), "cssclass", 'expr: ' + exprArray.join(' || ') + ' ? "BACK_ReadOnly" : ""');
	
	exprArray = [];
	exprArray.push('(currow >= ' + this.ucC['C01'] + ' && currow <= ' + this.ucC['C26'] +' )');
	exprArray.push('(currow >= ' + this.ucC['C32'] + ' && currow <= ' + this.ucC['C79'] +' )');
	exprArray.push('(currow >= ' + this.ucC['C41'] + ' && currow <= ' + this.ucC['C48'] +' )');
	exprArray.push('currow == ' + this.ucC['C76']);
	this.dxGrid2.setCellProperty("body" , this.dxGrid2.getBindCellIndex("body", "AM_RETURNTAX"), "edittype", 'expr: ' + exprArray.join(' || ') + ' ? "none" : "mask"');
	this.dxGrid2.setCellProperty("body" , this.dxGrid2.getBindCellIndex("body", "AM_RETURNTAX"), "cssclass", 'expr: ' + exprArray.join(' || ') + ' ? "BACK_ReadOnly" : ""');
	
	exprArray = [];
	exprArray.push('(currow >= ' + this.ucC['C01'] +' && currow <= ' + this.ucC['C26'] +' )');
	exprArray.push('(currow >= ' + this.ucC['C32'] +' && currow <= ' + this.ucC['C79'] +' )');
	exprArray.push('(currow >= ' + this.ucC['C41'] +' && currow <= ' + this.ucC['C48'] +' )');
	exprArray.push('currow == ' + this.ucC['C76']);
	this.dxGrid2.setCellProperty("body" , this.dxGrid2.getBindCellIndex("body", "AM_NAPINCOMETAX"), "edittype", 'expr: ' + exprArray.join(' || ') + ' ? "none" : "mask"');
	this.dxGrid2.setCellProperty("body" , this.dxGrid2.getBindCellIndex("body", "AM_NAPINCOMETAX"), "cssclass", 'expr: ' + exprArray.join(' || ') + ' ? "BACK_ReadOnly" : ""');
	
	exprArray = [];
	exprArray.push('(currow >= ' + this.ucC['C01'] + ' && currow <= ' + this.ucC['C26'] +' )');
	exprArray.push('(currow >= ' + this.ucC['C32'] + ' && currow <= ' + this.ucC['C79'] +' )');
	exprArray.push('(currow >= ' + this.ucC['C41'] + ' && currow <= ' + this.ucC['C50'] +' )');
	exprArray.push('(currow >= ' + this.ucC['C71'] + ' && currow <= ' + this.ucC['C90'] +' )');
	this.dxGrid2.setCellProperty("body" , this.dxGrid2.getBindCellIndex("body", "AM_NAPSPECIALTAX"), "edittype", 'expr: ' + exprArray.join(' || ') + ' ? "none" : "mask"');
	this.dxGrid2.setCellProperty("body" , this.dxGrid2.getBindCellIndex("body", "AM_NAPSPECIALTAX"), "cssclass", 'expr: ' + exprArray.join(' || ') + ' ? "BACK_ReadOnly" : ""');
	
	exprArray = [];
	exprArray.push('(currow >= ' + this.ucC['C01'] +' && currow <= ' + this.ucC['C90'] +' )');
	this.dxGrid2.setCellProperty("body" , this.dxGrid2.getBindCellIndex("body", "AM_RESTAX"), "cssclass", 'expr: ' + exprArray.join(' || ') + ' ? "BACK_GangJo" : ""');
	
	this.dsList2.set_enableevent(true);

}


this.fnsetMergeCellGrid2 = function() {
	trace(" 두번째 그리드 머지 this.ucC['C90']=> " + this.ucC['C90']);
 	this.dxGrid2.set_enableevent(false);
	this.dsList2.set_enableevent(false);

	this.dxGrid2.mergeCell(1,1,this.ucC['C01'],this.ucC['C50']); 
	this.dxGrid2.mergeCell(1,1,this.ucC['C61'],this.ucC['C70']); 
	this.dxGrid2.mergeCell(1,1,this.ucC['C71'],this.ucC['C90']); 
	
	this.dxGrid2.mergeCell(2,2,this.ucC['C01'],this.ucC['C30']); 
	this.dxGrid2.mergeCell(2,2,this.ucC['C32'],this.ucC['C97']); 
	this.dxGrid2.mergeCell(2,2,this.ucC['C41'],this.ucC['C50']);
	
	this.dxGrid2.mergeCell(2,2,this.ucC['C63'],this.ucC['C65']); 
	this.dxGrid2.mergeCell(2,2,this.ucC['C66'],this.ucC['C67']); 
	this.dxGrid2.mergeCell(2,2,this.ucC['C77'],this.ucC['C68']); 
	
	this.dxGrid2.mergeCell(2,2,this.ucC['C71'],this.ucC['C76']); 
	this.dxGrid2.mergeCell(2,2,this.ucC['C71'],this.ucC['C76']); 
	this.dxGrid2.mergeCell(2,2,this.ucC['C81'],this.ucC['C88']); 
	
	this.dxGrid2.mergeCell(3,3,this.ucC['C01'],this.ucC['C29']); 
	this.dxGrid2.mergeCell(3,3,this.ucC['C11'],this.ucC['C94']); 
	this.dxGrid2.mergeCell(3,3,this.ucC['C12'],this.ucC['C95']); 
	this.dxGrid2.mergeCell(3,3,this.ucC['C13'],this.ucC['C96']); 
	this.dxGrid2.mergeCell(3,3,this.ucC['C14'],this.ucC['C24']); 
	this.dxGrid2.mergeCell(3,3,this.ucC['C91'],this.ucC['C92']); 
	this.dxGrid2.mergeCell(3,3,this.ucC['C15'],this.ucC['C25']); 
	this.dxGrid2.mergeCell(3,3,this.ucC['C32'],this.ucC['C47']); 
	this.dxGrid2.mergeCell(3,3,this.ucC['C35'],this.ucC['C38']); 	
	this.dxGrid2.mergeCell(3,3,this.ucC['C89'],this.ucC['C88']); 
	
	
	this.dxGrid2.mergeCell(3,4,this.ucC['C16'],this.ucC['C16']); 
	this.dxGrid2.mergeCell(3,4,this.ucC['C26'],this.ucC['C26']);
	this.dxGrid2.mergeCell(3,4,this.ucC['C30'],this.ucC['C30']); 
	this.dxGrid2.mergeCell(3,4,this.ucC['C79'],this.ucC['C79']); 
	this.dxGrid2.mergeCell(3,4,this.ucC['C80'],this.ucC['C80']); 
	this.dxGrid2.mergeCell(3,4,this.ucC['C97'],this.ucC['C97']); 
	
	this.dxGrid2.mergeCell(3,4,this.ucC['C59'],this.ucC['C59']); 
	this.dxGrid2.mergeCell(3,4,this.ucC['C41'],this.ucC['C41']); 
	this.dxGrid2.mergeCell(3,4,this.ucC['C42'],this.ucC['C42']); 
	this.dxGrid2.mergeCell(3,4,this.ucC['C43'],this.ucC['C43']); 
	this.dxGrid2.mergeCell(3,4,this.ucC['C44'],this.ucC['C44']); 
	this.dxGrid2.mergeCell(3,4,this.ucC['C45'],this.ucC['C45']); 
	this.dxGrid2.mergeCell(3,4,this.ucC['C46'],this.ucC['C46']); 
	this.dxGrid2.mergeCell(3,4,this.ucC['C47'],this.ucC['C47']); 
	this.dxGrid2.mergeCell(3,4,this.ucC['C48'],this.ucC['C48']); 
	this.dxGrid2.mergeCell(3,4,this.ucC['C50'],this.ucC['C50']); 

	this.dxGrid2.mergeCell(2,4,this.ucC['C61'],this.ucC['C61']); 
	this.dxGrid2.mergeCell(2,4,this.ucC['C62'],this.ucC['C62']);
	this.dxGrid2.mergeCell(3,4,this.ucC['C63'],this.ucC['C63']); 
	this.dxGrid2.mergeCell(3,4,this.ucC['C64'],this.ucC['C64']); 
	this.dxGrid2.mergeCell(3,4,this.ucC['C65'],this.ucC['C65']); 
	this.dxGrid2.mergeCell(3,4,this.ucC['C66'],this.ucC['C66']); 
	this.dxGrid2.mergeCell(3,4,this.ucC['C67'],this.ucC['C67']); 
	this.dxGrid2.mergeCell(3,4,this.ucC['C77'],this.ucC['C77']); 
	this.dxGrid2.mergeCell(3,4,this.ucC['C68'],this.ucC['C68']); 
	this.dxGrid2.mergeCell(3,4,this.ucC['C69'],this.ucC['C69']); 
	this.dxGrid2.mergeCell(2,4,this.ucC['C70'],this.ucC['C70']); 
	
	this.dxGrid2.mergeCell(3,4,this.ucC['C71'],this.ucC['C71']); 
	this.dxGrid2.mergeCell(3,4,this.ucC['C72'],this.ucC['C72']); 
	this.dxGrid2.mergeCell(3,4,this.ucC['C73'],this.ucC['C73']); 
	this.dxGrid2.mergeCell(3,4,this.ucC['C74'],this.ucC['C74']); 
	this.dxGrid2.mergeCell(3,4,this.ucC['C75'],this.ucC['C75']); 
	this.dxGrid2.mergeCell(3,4,this.ucC['C76'],this.ucC['C76']); 	
	
	this.dxGrid2.mergeCell(3,4,this.ucC['C81'],this.ucC['C81']); 	
	this.dxGrid2.mergeCell(3,4,this.ucC['C82'],this.ucC['C82']); 		
	this.dxGrid2.mergeCell(3,4,this.ucC['C83'],this.ucC['C83']); 	
	this.dxGrid2.mergeCell(3,4,this.ucC['C84'],this.ucC['C84']); 	
	this.dxGrid2.mergeCell(3,4,this.ucC['C85'],this.ucC['C85']); 	
	this.dxGrid2.mergeCell(3,4,this.ucC['C86'],this.ucC['C86']); 	
	this.dxGrid2.mergeCell(3,4,this.ucC['C87'],this.ucC['C87']); 	
	this.dxGrid2.mergeCell(2,4,this.ucC['C90'],this.ucC['C90']); 	
	
	this.dxGrid2.set_enableevent(true);
	this.dsList2.set_enableevent(true);
	this.sYnGridMerge = "Y";
}

this.divData_tabData_onchanged = function(obj:nexacro.Tab,e:nexacro.TabIndexChangeEventInfo) {

    if (e.postindex == 1 && this.sYnGridMerge == "N")
    {
    	this.fnSetGird2Color(); 
		this.fnsetMergeCellGrid2();
		this.sYnGridMerge = "Y";
    }
	
	if(e.postindex == 1) {
		if(this.rdoSUBWRITE.value != "Y") {
			this.tabData.set_tabindex(0);
			this.gfnAlert("부표를 작성하시려면 부표작성함을 선택해 주십시오.");
		}
	}
	
	if(e.postindex == 2) {
		if(this.chkSINGO04.value != true) {
			this.tabData.set_tabindex(0);
			this.gfnAlert("환급신청서부표를 작성하시려면 환급신청을 선택해 주십시오.");
		}
	}
	
	if(e.postindex == 3) {
		if(this.chkSINGO05.value != true) {
			this.tabData.set_tabindex(0);
			this.gfnAlert("승계명세 작성하시려면 승계명세를 선택해 주십시오.");
		}
	}
	
	if(e.postindex == 4) {
		if(this.chkSINGO04.value != true) {
			this.tabData.set_tabindex(0);
			this.gfnAlert("기납부세액명세서를 작성하시려면 환급신청을 선택해 주십시오.");
		}
	}
	
	this.fnReadOnly(this.dsResult.getColumn(0, "YN_CLOSE"));
};

this.mask_onkillfocus = function(obj:nexacro.MaskEdit,e:nexacro.KillFocusEventInfo) {

//	var val = this.gfnIsNull(obj.value) ? "" : obj.value;
	
// 	if(val.length >= 15) {
// 		obj.set_value(0);
// 		obj.setFocus();
// 	}
	
	//this.sbAmCalSum();
};

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.dsList_oncolumnchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.columnid == "FLAG" || e.columnid == "NM_GUBUN" || e.columnid == "CD_GUBUN") {
		return;
	}
		
	trace("dsList_oncolumnchanged");
	this.dxGridValidate(e.row, e.columnid);
	
	if(e.columnid == "AM_NAPRESTAX"){
		trace("AM_NAPRESTAX 지방소득세");
		this.sbAmSumCalcA("AM_NAPRESTAX");
	}
	
	//당월조정환급세액
	if(e.columnid == "AM_RETURNTAX"){
		var amIncomTax  = nexacro.toNumber(obj.getColumn(obj.rowposition, "AM_INCOMETAX"),0) + nexacro.toNumber(obj.getColumn(obj.rowposition, "AM_ADDTAX"),0);	//소득세
		var amReturnTax = nexacro.toNumber(e.newvalue,0);	//당월조정환급세액
		
		if ( amIncomTax <= 0) {
		   obj.setColumn(e.row, "AM_RETURNTAX", 0);
		   obj.setColumn(e.row, "AM_NAPINCOMETAX", 0);
		 } else if (amIncomTax < amReturnTax) {
		   obj.setColumn(e.row, "AM_RETURNTAX", amIncomTax);
		   obj.setColumn(e.row, "AM_NAPINCOMETAX", 0);
		   amReturnTax = amIncomTax ;
		 } else {
		   obj.setColumn(e.row, "AM_NAPINCOMETAX", (amIncomTax - amReturnTax));
		 }	   
		   
		//당월조정환급세액 총계계산
		obj.setColumn(this.ucA['A99'], "AM_RETURNTAX", this.fnGetRowSum("AM_RETURNTAX"));
		this.mskAM_RETURNTAXSUM.set_value(this.fnGetRowSum("AM_RETURNTAX"));
		this.sbAmCalSum();
		//소득세등(가산세포함) 계산
 		//this.sbAmSumCalcA("AM_RETURNTAX");
// 		this.sbAmSumCalcA("AM_NAPINCOMETAX");
		//obj.setColumn(e.row, "AM_NAPINCOMETAX", (amIncomTax - amReturnTax));
		//소득세등(가산세포함) 총계 계산
		obj.setColumn(this.ucA['A99'], "AM_NAPINCOMETAX", this.fnGetRowSum("AM_NAPINCOMETAX"));
		
// 		if (e.row == this.ucA['A50'] || e.row == this.ucA['A60'] || e.row == this.ucA['A69'] || e.row == this.ucA['A70'] || e.row == this.ucA['A80'] ) // 부표의 있는 항목의 값수정시 
// 		{
// 		    trace(" 법인 원천세의 환급세액 변경시 e.row=>" + e.row);
// 			this.sbAmSumCalcB(e.row, e.columnid);
// 		}
	}
	
	if(this.gfnDsIsUpdated(obj)){
		this.dsList.setColumn(e.row, "FLAG" , "U");
		this.gfnSetFormStatus(this, "I");
	}

};


this.dsList2_oncolumnchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	trace("dsList2_oncolumnchanged!!!!");

	if(e.columnid == "FLAG" || e.columnid == "NM_GUBUN" || e.columnid == "CD_GUBUN") {
		return;
	}
		
	this.dxGrid2Validate(e.row, e.columnid);
	
	if(this.gfnDsIsUpdated(obj)){
		this.dsList2.setColumn(e.row, "FLAG" , "U");
		this.gfnSetFormStatus(this, "I");
	}
};

this.dsList3_oncolumnchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	trace("dsList3_oncolumnchanged!!!!");
	if(e.columnid == "FLAG" || e.columnid == "NM_GUBUN" || e.columnid == "CD_GUBUN") {
		return;
	}

	this.dxGrid3Validate(e.row, e.columnid);
	
	if(e.oldvalue != e.newvalue) {
		this.dsList3.setColumn(e.row, "FLAG" , "U");
		this.gfnSetFormStatus(this, "I");
	}
};

this.dsList4_oncolumnchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	trace("dsList4_oncolumnchanged!!!!");
	if(e.columnid == "CD_SEQ") {
		return;
	}

	this.dxGrid4Validate(e.row, e.columnid);
	
	if(e.oldvalue != e.newvalue) {
		this.dsList4.setColumn(e.row, "FLAG" , "U");
		this.gfnSetFormStatus(this, "I");
	}
};

this.dsList5_oncolumnchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	trace("dsList5_oncolumnchanged!!!!");
	if(e.columnid == "FLAG" || e.columnid == "NM_GUBUN" || e.columnid == "CD_GUBUN") {
		return;
	}

	this.dxGrid5Validate(e.row, e.columnid);
	
	if(e.columnid == "AM_INCOMETAX" || e.columnid == "AM_SPECIALTAX" ) {
	    this.fnSetJojung(e.columnid);
	}
	
// 	if(e.oldvalue != e.newvalue) {
// 		//this.dsList5.setColumn(e.row, "FLAG" , "U");
// 		this.gfnSetFormStatus(this, "I");
// 	}
};

this.dsList6_oncolumnchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	trace("dsList6_oncolumnchanged!!!!");
	if(e.columnid == "FLAG" || e.columnid == "NM_GUBUN" || e.columnid == "CD_GUBUN") {
		return;
	}

	this.dxGrid6Validate(e.row, e.columnid);
	
	if(e.columnid == "AM_INCOMETAX" || e.columnid == "AM_SPECIALTAX" ) {
	    this.fnSetJojung(e.columnid);
	}
	
// 	if(e.oldvalue != e.newvalue) {
// 		//this.dsList6.setColumn(e.row, "FLAG" , "U");
// 		this.gfnSetFormStatus(this, "I");
// 	}
};

this.dsList7_oncolumnchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
trace("dsList7_oncolumnchanged!!!!");
	if(e.columnid == "FLAG" ) {
		return;
	}

	if(this.gfnDsIsUpdated(obj)){
		var rowType = obj.getRowType(e.row);
		this.setJojungForm =  "U";
		this.gfnSetFormStatus(this, (rowType == 2 ? "I" : "U"));
	}
	//this.dxGrid7Validate(e.row, e.columnid);
	
// 	if(e.oldvalue != e.newvalue) {
// 		this.dsList7.setColumn(e.row, "FLAG" , "U");
// 		this.gfnSetFormStatus(this, "I");
// 	}
};

this.dsList8_oncolumnchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
    trace("dsList8_oncolumnchanged!!!!");
	if(e.columnid == "FLAG") {
		return;
	}

	if(e.columnid == "AM_RETURNTAX" || e.columnid == "AM_NAPBUTAX" ) {
	    var amUnSum = nexacro.toNumber(this.gfnIsNull(this.dsList8.getColumn(this.dsList8.rowposition, "AM_RETURNTAX")) ? 0 : this.dsList8.getColumn(this.dsList8.rowposition, "AM_RETURNTAX"));	
		var amGiSum =  nexacro.toNumber(this.gfnIsNull(this.dsList8.getColumn(this.dsList8.rowposition, "AM_NAPBUTAX")) ? 0 : this.dsList8.getColumn(this.dsList8.rowposition, "AM_NAPBUTAX"));	
		var amCha = amUnSum - amGiSum; // 차감잔액  = 전월미환급세액 - 기환급세액 
		
		this.dsList8.setColumn(this.dsList8.rowposition,"AM_BEFORETAX" , amCha); 	
	}	
};

this.dsList9_oncolumnchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
    trace("dsList9_oncolumnchanged!!!!");
	if(e.columnid == "FLAG") {
		return;
	}

	if(e.columnid == "AM_UNRETURN" || e.columnid == "AM_GIRETURN" || e.columnid=="AM_DANGRETURN" || e.columnid=="AM_DANGJOJUNGRETURN" ) {
	    var amUnSum = nexacro.toNumber(this.gfnIsNull(this.dsList9.getColumn(this.dsList9.rowposition, "AM_UNRETURN")) ? 0 : this.dsList9.getColumn(this.dsList9.rowposition, "AM_UNRETURN"));	
		var amGiSum =  nexacro.toNumber(this.gfnIsNull(this.dsList9.getColumn(this.dsList9.rowposition, "AM_GIRETURN")) ? 0 : this.dsList9.getColumn(this.dsList9.rowposition, "AM_GIRETURN"));	
		var amCha = amUnSum - amGiSum; // 차감잔액  = 전월미환급세액 - 기환급세액 
		
		var amDangSum =  nexacro.toNumber(this.gfnIsNull(this.dsList9.getColumn(this.dsList9.rowposition, "AM_DANGRETURN")) ? 0 : this.dsList9.getColumn(this.dsList9.rowposition, "AM_DANGRETURN"));	
		var amJoSum =  amCha + amDangSum; //조정대상환급세액  = 차감잔액 + 당월발생환급세액 
		
		var amDangJoSum =  nexacro.toNumber(this.gfnIsNull(this.dsList9.getColumn(this.dsList9.rowposition, "AM_DANGJOJUNGRETURN")) ? 0 : this.dsList9.getColumn(this.dsList9.rowposition, "AM_DANGJOJUNGRETURN"));	
		var amReSum =  amJoSum  - amDangJoSum; // 차월이월 환급세액 = 조정대상환급세액 - 당월조정환급세액 
		
		this.dsList9.setColumn(this.dsList9.rowposition,"AM_CHARETURN" , amCha); // 차감잔액 
		this.dsList9.setColumn(this.dsList9.rowposition,"AM_JOJUNGRETURN" , amJoSum); //조정대상환급세액 
		this.dsList9.setColumn(this.dsList9.rowposition,"AM_RETURNTAX" , amReSum); // 차월이월 환급세액 		
	}	
};
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.fn_OnChanged = function(obj:nexacro.MaskEdit,e:nexacro.ChangeEventInfo)
{
	if(e.postvalue != e.prevalue){
		if(this.dsResult.rowcount > 0){
			this.gfnSetFormStatus(this, "U");
		}
		this.sbAmCalSum();	
	}
};

this.divData_ccfDT_ENTER_onchanged = function(obj:nexacro.Calendar,e:nexacro.ChangeEventInfo)
{
	if(e.postvalue != e.prevalue){
		if(this.dsResult.rowcount > 0){
			this.gfnSetFormStatus(this, "U");
		}
	}
};
 
this.fn_onitemchanged = function(obj:nexacro.Radio,e:nexacro.ItemChangeEventInfo)
{
	if(e.postvalue != e.prevalue){
		if(this.dsResult.rowcount > 0){
			this.gfnSetFormStatus(this, "U");
		}
	}
};

this.fnCalAfterCDTextChanged = function (id)
{
	if(id == "ctclYM_SUPPY"){
		if(this.dsResult.rowcount > 0){
			this.gfnSetFormStatus(this, "U");
		}
	}
};

this.fn_chk_onchanged = function(obj:nexacro.CheckBox,e:nexacro.CheckBoxChangedEventInfo)
{
	if(e.postvalue != e.prevalue){
		if(this.dsResult.rowcount > 0){
			this.gfnSetFormStatus(this, "U");
		}
	}
};

this.fn_jojungItem_onchanged = function(obj:nexacro.CheckBox,e:nexacro.CheckBoxChangedEventInfo)
{
	if(e.postvalue != e.prevalue){
		if(this.dsGResult2.rowcount > 0){
			this.gfnSetFormStatus(this, "U");
		}
	}
};

this.divData_tabData_tab1_mskAM_RETURNTAXSUM_onchanged = function(obj:nexacro.MaskEdit,e:nexacro.ChangeEventInfo)
{
	if(e.postvalue != e.prevalue){
		if(this.dsResult.rowcount > 0){
			this.gfnSetFormStatus(this, "U");
			
			var amSettle =  nexacro.toNumber(this.mskAM_SETTLE.value,0);
			var amWolretuntex = amSettle - nexacro.toNumber(e.postvalue,0);
			
			this.mskAM_WOLRETURNTAX.set_value(amWolretuntex);
		}
	}
};

//원천징수신고내역 버튼 클릭 
this.divData_tabData_tab5_btnIncomtax_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var param = {};
	param.CD_CORP    = this.ccfCD_CORP.form.CDTextBox.value;
	param.DS_CORP    = this.ccfCD_CORP.form.DSTextBox.value;
	param.YR_WORK = this.dsSearch.getColumn(0, "YM_FROM").substr(0,4) - 1;
	
	var sPopupCallBack = "fnPopupCallback";
	this.gfnFormOpenNonAuth(this.FormInfo.CD_MODULE, "DHV_RETURNINCOMETAXDLG", sPopupCallBack, param, 800, 600);
};

//원천징수신고내역 팝업 콜백(확인 버튼)
this.fnPopupCallback = function(svcID, val) {
	this.fnPopupSetData(val);
};

//원천징수신고내역 팝업 콜백 데이터 셋팅
this.fnPopupSetData = function(val){
	var nIndex2 = this.dxGrid5.findEventHandler("onkeydown", this.fnGrid_onkeydown, this );
	if(nIndex2 == -1) this.dxGrid5.addEventHandler("onkeydown", this.fnGrid_onkeydown, this);
	var banFlag = "I";
	
	this.dsResultIncomeTax = new Dataset();	
	this.dsResultIncomeTax.clearData();
	
 	if(!this.gfnIsNull(val)) {
		this.dsResultIncomeTax.loadXML(val);
		
		var rowCnt = this.dsList5.rowcount;
		var rowPos = this.dsList5.rowposition;
		
		this.dsList5.set_enableevent(false);

		var nRow = 0;
		trace("원천징수신고내역 리턴->" + rowPos);
		trace("원천징수신고내역->" + this.dsResultIncomeTax.saveXML());

		for(var i = 0 ; i < this.dsResultIncomeTax.rowcount ; i++){					
					
			nRow = this.dsList5.addRow();
			banFlag = "I";
					
			this.dsList5.setColumn(nRow, "CD_GUBUN"   	, this.dsResultIncomeTax.getColumn(i, "CD_GUBUN"));	
			this.dsList5.setColumn(nRow, "NM_GUBUN"  	, this.dsResultIncomeTax.getColumn(i, "CD_GUBUN"));	
			this.dsList5.setColumn(nRow, "YM_WORK"  	, this.dsResultIncomeTax.getColumn(i, "YM_IMPUTE"));	
			this.dsList5.setColumn(nRow, "YM_JIGUB"  	,this.dsResultIncomeTax.getColumn(i, "YM_SUPPLY"));	
			this.dsList5.setColumn(nRow, "CD_CODE"	, this.dsResultIncomeTax.getColumn(i, "CD_CODE"));	
			this.dsList5.setColumn(nRow, "NO_INWON"   	, this.dsResultIncomeTax.getColumn(i, "NO_INWON"));	
			this.dsList5.setColumn(nRow, "AM_TOTSUPPLY"  , this.dsResultIncomeTax.getColumn(i, "AM_TOTSUPPLY"));	
			this.dsList5.setColumn(nRow, "AM_INCOMETAX"  , this.dsResultIncomeTax.getColumn(i, "AM_INCOMETAX"));	
			this.dsList5.setColumn(nRow, "AM_SPECIALTAX" , this.dsResultIncomeTax.getColumn(i, "AM_SPECIALTAX"));		
			this.dsList5.setColumn(nRow, "AM_ADDTAX"  	 , this.dsResultIncomeTax.getColumn(i, "AM_ADDTAX"));	
			
			this.dsList5.setColumn(nRow, this.ucFlag , banFlag);
		
	 	}
		//trace("FLAG 1 =>" + this.dsList.getColumn(this.dsList.rowposition, this.ucFlag));
		this.dsList5.set_enableevent(true);
		this.fnSetJojung("AM_INCOMETAX");
		
		this.gfnSetFormStatus(this, banFlag);	
		//trace("FLAG 2 =>" + this.dsList.getColumn(this.dsList.rowposition, this.ucFlag));
 	}
}
//기납부세액 불러오기 
this.divData_tabData_tab5_btnGiData_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var param = {};
	param.CD_CORP    = this.ccfCD_CORP.form.CDTextBox.value;
	param.DS_CORP    = this.ccfCD_CORP.form.DSTextBox.value;
	param.YR_WORK = this.dsSearch.getColumn(0, "YM_FROM").substr(0,4) -1;
	param.TY_GUBUN   = this.divData.form.tabData.tab5.form.rdoGiGubun2.value;
	
	var sPopupCallBack = "fnPaymentPopupCallback";
	this.gfnFormOpenNonAuth(this.FormInfo.CD_MODULE, "DHV_RETURNPAYMENTDLG", sPopupCallBack, param, 800, 600);
};

//기납부세액 팝업 콜백(확인 버튼)
this.fnPaymentPopupCallback = function(svcID, val) {
	this.fnPopupPaymentSetData(val);
};

//기납부세액 팝업 콜백 데이터 셋팅
this.fnPopupPaymentSetData = function(val){
// 	var nIndex2 = this.dxGrid6.findEventHandler("onkeydown", this.fnGrid_onkeydown, this );
// 	if(nIndex2 == -1) this.dxGrid6.addEventHandler("onkeydown", this.fnGrid_onkeydown, this);
	var banFlag = "I";
	
	this.dsResultPayment = new Dataset();	
	this.dsResultPayment.clearData();
	
 	if(!this.gfnIsNull(val)) {
		this.dsResultPayment.loadXML(val);
		
		var rowCnt = this.dsList6.rowcount;
		var rowPos = this.dsList6.rowposition;
		
		this.dsList6.set_enableevent(false);

		var nRow = 0;
		
		trace("기납부세액->" + this.dsResultPayment.saveXML());

		for(var i = 0 ; i < this.dsResultPayment.rowcount ; i++){					
					
			nRow = this.dsList6.addRow();
			banFlag = "I";
			trace("기납부세액 리턴->" + rowPos);		
			this.dsList6.setColumn(nRow, "CD_GUBUN"   	, this.dsResultPayment.getColumn(i, "CD_GUBUN"));	
			this.dsList6.setColumn(nRow, "NM_GUBUN"  	, this.dsResultPayment.getColumn(i, "CD_GUBUN"));	
			this.dsList6.setColumn(nRow, "ID_SABUN"  	, this.dsResultPayment.getColumn(i, "ID_SABUN"));	
			this.dsList6.setColumn(nRow, "DS_NAME"  	, this.dsResultPayment.getColumn(i, "DS_HNAME"));	
			this.dsList6.setColumn(nRow, "ID_RESIDENT"	, this.dsResultPayment.getColumn(i, "ID_RESIDENT"));	
			this.dsList6.setColumn(nRow, "TY_GUBUN"   	, "0");	
			this.dsList6.setColumn(nRow, "CD_PREPAY"  , "");	
			this.dsList6.setColumn(nRow, "DS_PREPAY"  , "");	
			this.dsList6.setColumn(nRow, "AM_INCOMETAX" , this.dsResultPayment.getColumn(i, "AM_INCTAXBEF"));		
			this.dsList6.setColumn(nRow, "AM_SPECIALTAX" , this.dsResultPayment.getColumn(i, "AM_SPECIALTAX"));	
			this.dsList6.setColumn(nRow, this.ucFlag , banFlag);
		    if (!this.gfnIsNull(this.dsResultPayment.getColumn(i, "DS_PREPAY1")))
		    {
		    	nRow = this.dsList6.addRow();
				this.dsList6.setColumn(nRow, "CD_GUBUN"   	, this.dsResultPayment.getColumn(i, "CD_GUBUN"));	
				this.dsList6.setColumn(nRow, "NM_GUBUN"  	, this.dsResultPayment.getColumn(i, "CD_GUBUN"));	
				this.dsList6.setColumn(nRow, "ID_SABUN"  	, this.dsResultPayment.getColumn(i, "ID_SABUN"));	
				this.dsList6.setColumn(nRow, "DS_NAME"  	, this.dsResultPayment.getColumn(i, "DS_HNAME"));	
				this.dsList6.setColumn(nRow, "ID_RESIDENT"	, this.dsResultPayment.getColumn(i, "ID_RESIDENT"));	
				this.dsList6.setColumn(nRow, "TY_GUBUN"   	, this.dsResultPayment.getColumn(i, "TY_GUBUN1"));	
				this.dsList6.setColumn(nRow, "CD_PREPAY"  , this.dsResultPayment.getColumn(i, "CD_PREPAY1").replace(/\-/gi,''));	
				this.dsList6.setColumn(nRow, "DS_PREPAY"  , this.dsResultPayment.getColumn(i, "DS_PREPAY1"));	
				this.dsList6.setColumn(nRow, "AM_INCOMETAX" , this.dsResultPayment.getColumn(i, "AM_INCTAXBEF1"));		
				this.dsList6.setColumn(nRow, "AM_SPECIALTAX", this.dsResultPayment.getColumn(i, "AM_SPECIALTAX1"));	
				this.dsList6.setColumn(nRow, this.ucFlag , banFlag);
		    }
		    if (!this.gfnIsNull(this.dsResultPayment.getColumn(i, "DS_PREPAY2")))
		    {
		    	nRow = this.dsList6.addRow();
				this.dsList6.setColumn(nRow, "CD_GUBUN"   	, this.dsResultPayment.getColumn(i, "CD_GUBUN"));	
				this.dsList6.setColumn(nRow, "NM_GUBUN"  	, this.dsResultPayment.getColumn(i, "CD_GUBUN"));	
				this.dsList6.setColumn(nRow, "ID_SABUN"  	, this.dsResultPayment.getColumn(i, "ID_SABUN"));	
				this.dsList6.setColumn(nRow, "DS_NAME"  	, this.dsResultPayment.getColumn(i, "DS_HNAME"));	
				this.dsList6.setColumn(nRow, "ID_RESIDENT"	, this.dsResultPayment.getColumn(i, "ID_RESIDENT"));	
				this.dsList6.setColumn(nRow, "TY_GUBUN"   	, this.dsResultPayment.getColumn(i, "TY_GUBUN2"));	
				this.dsList6.setColumn(nRow, "CD_PREPAY"  , this.dsResultPayment.getColumn(i, "CD_PREPAY2").replace(/\-/gi, ""));	
				this.dsList6.setColumn(nRow, "DS_PREPAY"  , this.dsResultPayment.getColumn(i, "DS_PREPAY2"));	
				this.dsList6.setColumn(nRow, "AM_INCOMETAX" , this.dsResultPayment.getColumn(i, "AM_INCTAXBEF2"));		
				this.dsList6.setColumn(nRow, "AM_SPECIALTAX", this.dsResultPayment.getColumn(i, "AM_SPECIALTAX2"));	
				this.dsList6.setColumn(nRow, this.ucFlag , banFlag);
		    }
	 	}
		trace("FLAG 1 =>" + this.dsList6.getColumn(this.dsList6.rowposition, this.ucFlag));
		this.dsList6.set_enableevent(true);
		this.fnSetJojung();
		
		this.gfnSetFormStatus(this, banFlag);	
		//trace("FLAG 2 =>" + this.dsList.getColumn(this.dsList.rowposition, this.ucFlag));
 	}
}
]]></Script>
    <Objects>
      <Dataset id="dsResult"/>
      <Dataset id="dsRResult"/>
      <Dataset id="dsSResult"/>
      <Dataset id="dsList" oncolumnchanged="dsList_oncolumnchanged">
        <ColumnInfo>
          <Column id="FLAG" type="STRING" size="256"/>
          <Column id="NM_GUBUN" type="STRING" size="256"/>
          <Column id="CD_GUBUN" type="STRING" size="256"/>
          <Column id="NO_INWON" type="BIGDECIMAL" size="256"/>
          <Column id="AM_TOTSUPPLY" type="BIGDECIMAL" size="256"/>
          <Column id="AM_INCOMETAX" type="BIGDECIMAL" size="256"/>
          <Column id="AM_RESTAX" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SPECIALTAX" type="BIGDECIMAL" size="256"/>
          <Column id="AM_ADDTAX" type="BIGDECIMAL" size="256"/>
          <Column id="AM_RETURNTAX" type="BIGDECIMAL" size="256"/>
          <Column id="AM_NAPINCOMETAX" type="BIGDECIMAL" size="256"/>
          <Column id="AM_NAPSPECIALTAX" type="BIGDECIMAL" size="256"/>
          <Column id="AM_NAPRESTAX" type="BIGDECIMAL" size="256"/>
          <Column id="DS_ETC1" type="STRING" size="256"/>
          <Column id="DS_ETC2" type="STRING" size="256"/>
          <Column id="DS_ORDER" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsList2" oncolumnchanged="dsList2_oncolumnchanged">
        <ColumnInfo>
          <Column id="FLAG" type="STRING" size="256"/>
          <Column id="NM_GUBUN" type="STRING" size="256"/>
          <Column id="CD_GUBUN" type="STRING" size="256"/>
          <Column id="NO_INWON" type="BIGDECIMAL" size="256"/>
          <Column id="AM_TOTSUPPLY" type="BIGDECIMAL" size="256"/>
          <Column id="AM_INCOMETAX" type="BIGDECIMAL" size="256"/>
          <Column id="AM_RESTAX" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SPECIALTAX" type="BIGDECIMAL" size="256"/>
          <Column id="AM_ADDTAX" type="BIGDECIMAL" size="256"/>
          <Column id="AM_RETURNTAX" type="BIGDECIMAL" size="256"/>
          <Column id="AM_NAPINCOMETAX" type="BIGDECIMAL" size="256"/>
          <Column id="AM_NAPSPECIALTAX" type="BIGDECIMAL" size="256"/>
          <Column id="DS_ETC1" type="STRING" size="256"/>
          <Column id="DS_ETC2" type="STRING" size="256"/>
          <Column id="DS_ETC3" type="STRING" size="256"/>
          <Column id="DS_ORDER" type="INT" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsList3" oncolumnchanged="dsList3_oncolumnchanged">
        <ColumnInfo>
          <Column id="FLAG" type="STRING" size="256"/>
          <Column id="NM_GUBUN" type="STRING" size="256"/>
          <Column id="CD_GUBUN" type="STRING" size="256"/>
          <Column id="NO_INWON" type="BIGDECIMAL" size="256"/>
          <Column id="AM_TOTSUPPLY" type="BIGDECIMAL" size="256"/>
          <Column id="AM_FIXTAX" type="BIGDECIMAL" size="256"/>
          <Column id="AM_BEFTAX" type="BIGDECIMAL" size="256"/>
          <Column id="AM_BEFTAX_NOW" type="BIGDECIMAL" size="256"/>
          <Column id="AM_BEFTAX_BEF" type="BIGDECIMAL" size="256"/>
          <Column id="AM_DEDCOLLECTTAX" type="BIGDECIMAL" size="256"/>
          <Column id="AM_RETURNTAX" type="BIGDECIMAL" size="256"/>
          <Column id="AM_RETURNAPPLY" type="BIGDECIMAL" size="256"/>
          <Column id="AM_PARTDECOTAX" type="BIGDECIMAL" size="256"/>
          <Column id="CD_CODE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsList4" oncolumnchanged="dsList4_oncolumnchanged">
        <ColumnInfo>
          <Column id="FLAG" type="STRING" size="256"/>
          <Column id="NO_SJC" type="STRING" size="256"/>
          <Column id="DS_SJC" type="STRING" size="256"/>
          <Column id="DT_SUCCESSION" type="STRING" size="256"/>
          <Column id="CD_SUCCESSION_BASIS" type="STRING" size="256"/>
          <Column id="YM_IMPUTE_SUCC" type="STRING" size="256"/>
          <Column id="YM_SUPPLY_SUCC" type="STRING" size="256"/>
          <Column id="AM_WOLRETURNTAX" type="BIGDECIMAL" size="256"/>
          <Column id="CD_SEQ" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DHVPR_PAYSTATUS_SELECT_NEW</Col>
          </Row>
          <Row>
            <Col id="TARGET">insert</Col>
            <Col id="SP">DHVPR_PAYSTATUS_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">r_select</Col>
            <Col id="SP">DHVPR_RETURNAPPLY_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">r_insert</Col>
            <Col id="SP">DHVPR_RETURNAPPLY_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">s_select</Col>
            <Col id="SP">DHVPR_SUCCESSIONSPEC_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">s_insert</Col>
            <Col id="SP">DHVPR_SUCCESSIONSPEC_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">e_select</Col>
            <Col id="SP">DAUPR_TAXSINGO_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">ESingo</Col>
            <Col id="SP">DHVPR_WITHHOLDING_FILE</Col>
          </Row>
          <Row>
            <Col id="TARGET">g_select1</Col>
            <Col id="SP">DHVPR_RETURNINCOMETAX_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">g_select2</Col>
            <Col id="SP">DHVPR_RETURNPAYMENT_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">g_select3</Col>
            <Col id="SP">DHVPR_RETURNJOJUNG_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">g_insert1</Col>
            <Col id="SP">DHVPR_RETURNINCOMETAX_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">g_insert2</Col>
            <Col id="SP">DHVPR_RETURNPAYMENT_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">g_insert3</Col>
            <Col id="SP">DHVPR_RETURNJOJUNG_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">g_delete1</Col>
            <Col id="SP">DHVPR_RETURNINCOMETAX_DELETE</Col>
          </Row>
          <Row>
            <Col id="TARGET">g_delete2</Col>
            <Col id="SP">DHVPR_RETURNPAYMENT_DELETE</Col>
          </Row>
          <Row>
            <Col id="TARGET">u_insert1</Col>
            <Col id="SP">DHVPR_UNRETURNLIST_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">u_insert2</Col>
            <Col id="SP">DHVPR_UNRETURNJOJUNG_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">u_delete1</Col>
            <Col id="SP">DHVPR_UNRETURNLIST_DELETE</Col>
          </Row>
          <Row>
            <Col id="TARGET">u_delete2</Col>
            <Col id="SP">DHVPR_UNRETURNJOJUNG_DELETE</Col>
          </Row>
          <Row>
            <Col id="TARGET">u_select1</Col>
            <Col id="SP">DHVPR_UNRETURNLIST_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">u_select2</Col>
            <Col id="SP">DHVPR_UNRETURNJOJUNG_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">r_delete</Col>
            <Col id="SP">DHVPR_RETURNAPPLY_DELETE</Col>
          </Row>
          <Row>
            <Col id="TARGET">selectGubun</Col>
            <Col id="SP">DHVPR_PAYGUBUN_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">s_delete</Col>
            <Col id="SP">DHVPR_SUCCESSIONSPEC_DELETE</Col>
          </Row>
          <Row>
            <Col id="TARGET">close</Col>
            <Col id="SP">DHVPR_PAYSTATUS_CLOSE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="YM_FROM" type="STRING" size="256"/>
          <Column id="YM_TO" type="STRING" size="256"/>
          <Column id="YM_JFROM" type="STRING" size="256"/>
          <Column id="YM_JTO" type="STRING" size="256"/>
          <Column id="CD_DEPT_SELFACNT" type="STRING" size="256"/>
          <Column id="DS_DEPT_SELFACNT" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CORP"/>
            <Col id="YM_FROM"/>
            <Col id="YM_TO"/>
            <Col id="YM_JFROM"/>
            <Col id="YM_JTO"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSINGO">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">1</Col>
            <Col id="VALUE">매월</Col>
          </Row>
          <Row>
            <Col id="CODE">2</Col>
            <Col id="VALUE">반기</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsBATCH">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">Y</Col>
            <Col id="VALUE">여</Col>
          </Row>
          <Row>
            <Col id="CODE">N</Col>
            <Col id="VALUE">부</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSAUPJA">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">Y</Col>
            <Col id="VALUE">여</Col>
          </Row>
          <Row>
            <Col id="CODE">N</Col>
            <Col id="VALUE">부</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSUBWRITE">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">Y</Col>
            <Col id="VALUE">부표작성함</Col>
          </Row>
          <Row>
            <Col id="CODE">N</Col>
            <Col id="VALUE">부표작성안함</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsText"/>
      <FileDownTransfer id="FileDownTransfer00"/>
      <Dataset id="dsList5" oncolumnchanged="dsList5_oncolumnchanged">
        <ColumnInfo>
          <Column id="FLAG" type="STRING" size="256"/>
          <Column id="CD_GUBUN" type="STRING" size="256"/>
          <Column id="YM_WORK" type="STRING" size="256"/>
          <Column id="YM_JIGUB" type="STRING" size="256"/>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="NO_INWON" type="STRING" size="256"/>
          <Column id="AM_TOTSUPPLY" type="BIGDECIMAL" size="256"/>
          <Column id="AM_INCOMETAX" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SPECIALTAX" type="BIGDECIMAL" size="256"/>
          <Column id="AM_ADDTAX" type="BIGDECIMAL" size="256"/>
          <Column id="NO_ID" type="BIGDECIMAL" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsGResult"/>
      <Dataset id="dsGResult1"/>
      <Dataset id="dsGiGubun">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">Y</Col>
            <Col id="VALUE">연말</Col>
          </Row>
          <Row>
            <Col id="CODE">N</Col>
            <Col id="VALUE">중도</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_GUBUN">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">Y</Col>
            <Col id="VALUE">0.주/현</Col>
          </Row>
          <Row>
            <Col id="CODE">N</Col>
            <Col id="VALUE">1.종/전</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsCD_GUBUN">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">14</Col>
            <Col id="VALUE">근로소득</Col>
          </Row>
          <Row>
            <Col id="CODE">21</Col>
            <Col id="VALUE">퇴직소득</Col>
          </Row>
          <Row>
            <Col id="CODE">13</Col>
            <Col id="VALUE">사업소득</Col>
          </Row>
          <Row>
            <Col id="CODE">16</Col>
            <Col id="VALUE">기타소득</Col>
          </Row>
          <Row>
            <Col id="CODE">17</Col>
            <Col id="VALUE">연금소득</Col>
          </Row>
          <Row>
            <Col id="CODE">11</Col>
            <Col id="VALUE">이자소득</Col>
          </Row>
          <Row>
            <Col id="CODE">12</Col>
            <Col id="VALUE">배당소득</Col>
          </Row>
          <Row>
            <Col id="CODE">22</Col>
            <Col id="VALUE">양도소득</Col>
          </Row>
          <Row>
            <Col id="CODE">31</Col>
            <Col id="VALUE">법인세</Col>
          </Row>
          <Row>
            <Col id="CODE">24</Col>
            <Col id="VALUE">금융투자소득세</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsGResult2">
        <ColumnInfo>
          <Column id="AM_INCOMETAX" type="BIGDECIMAL" size="256"/>
          <Column id="AM_INCOMETAX_GI" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SPECIALTAX" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SPECIALTAX_GI" type="BIGDECIMAL" size="256"/>
          <Column id="AM_INCOMETAX_CHA" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SPECIALTAX_CHA" type="BIGDECIMAL" size="256"/>
          <Column id="YN_REASON1" type="STRING" size="256"/>
          <Column id="YN_REASON2" type="STRING" size="256"/>
          <Column id="YN_REASON3" type="STRING" size="256"/>
          <Column id="YN_REASON4" type="STRING" size="256"/>
          <Column id="YN_REASON5" type="STRING" size="256"/>
          <Column id="DS_REASON" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsList6" oncolumnchanged="dsList6_oncolumnchanged">
        <ColumnInfo>
          <Column id="FLAG" type="STRING" size="256"/>
          <Column id="CD_GUBUN" type="STRING" size="256"/>
          <Column id="ID_SABUN" type="STRING" size="256"/>
          <Column id="DS_NAME" type="STRING" size="256"/>
          <Column id="ID_RESIDENT" type="STRING" size="256"/>
          <Column id="TY_GUBUN" type="STRING" size="256"/>
          <Column id="CD_PREPAY" type="STRING" size="256"/>
          <Column id="DS_PREPAY" type="STRING" size="256"/>
          <Column id="AM_INCOMETAX" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SPECIALTAX" type="BIGDECIMAL" size="256"/>
          <Column id="NO_ID" type="BIGDECIMAL" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsList7" oncolumnchanged="dsList7_oncolumnchanged">
        <ColumnInfo>
          <Column id="FLAG" type="STRING" size="256"/>
          <Column id="AM_INCOMETAX" type="BIGDECIMAL" size="256"/>
          <Column id="AM_INCOMETAX_GI" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SPECIALTAX" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SPECIALTAX_GI" type="BIGDECIMAL" size="256"/>
          <Column id="AM_INCOMETAX_CHA" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SPECIALTAX_CHA" type="BIGDECIMAL" size="256"/>
          <Column id="DS_PREPAY" type="STRING" size="256"/>
          <Column id="YN_REASON1" type="STRING" size="256"/>
          <Column id="YN_REASON2" type="STRING" size="256"/>
          <Column id="YN_REASON3" type="STRING" size="256"/>
          <Column id="YN_REASON4" type="STRING" size="256"/>
          <Column id="YN_REASON5" type="STRING" size="256"/>
          <Column id="DS_REASON" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsList8" oncolumnchanged="dsList8_oncolumnchanged"/>
      <Dataset id="dsList9" oncolumnchanged="dsList9_oncolumnchanged"/>
      <Dataset id="dsGubunA" oncolumnchanged="dsList3_oncolumnchanged"/>
      <Dataset id="dsGubunB" oncolumnchanged="dsList3_oncolumnchanged"/>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item1" compid="divSearch.form.ctclYM_FROM.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_FROM"/>
      <BindItem id="item2" compid="divSearch.form.ctclYM_TO.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_TO"/>
      <BindItem id="item3" compid="divSearch.form.ctclYM_JFROM.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_JFROM"/>
      <BindItem id="item4" compid="divSearch.form.ctclYM_JTO.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_JTO"/>
      <BindItem id="item5" compid="divSearch.form.ccfCD_DEPT_SELFACNT.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_DEPT_SELFACNT"/>
      <BindItem id="item6" compid="divSearch.form.ccfCD_DEPT_SELFACNT.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_DEPT_SELFACNT"/>
      <BindItem id="item7" compid="divData.form.tabData.tab5.form.divJojung.form.mskAM_INCOMTAX" propid="value" datasetid="dsList7" columnid="AM_INCOMETAX"/>
      <BindItem id="item8" compid="divData.form.tabData.tab5.form.divJojung.form.mskAM_INCOMTAX_GI" propid="value" datasetid="dsList7" columnid="AM_INCOMETAX_GI"/>
      <BindItem id="item9" compid="divData.form.tabData.tab5.form.divJojung.form.mskAM_INCOMTAX_DIFF" propid="value" datasetid="dsList7" columnid="AM_INCOMETAX_CHA"/>
      <BindItem id="item10" compid="divData.form.tabData.tab5.form.divJojung.form.mskAM_SPECIALTAX" propid="value" datasetid="dsList7" columnid="AM_SPECIALTAX"/>
      <BindItem id="item11" compid="divData.form.tabData.tab5.form.divJojung.form.mskAM_SPECIALTAX_GI" propid="value" datasetid="dsList7" columnid="AM_SPECIALTAX_GI"/>
      <BindItem id="item12" compid="divData.form.tabData.tab5.form.divJojung.form.mskAM_SPECIALTAX_DIFF" propid="value" datasetid="dsList7" columnid="AM_SPECIALTAX_CHA"/>
      <BindItem id="item14" compid="divData.form.tabData.tab5.form.divJojung.form.chkReson1" propid="value" datasetid="dsList7" columnid="YN_REASON1"/>
      <BindItem id="item15" compid="divData.form.tabData.tab5.form.divJojung.form.chkReson2" propid="value" datasetid="dsList7" columnid="YN_REASON2"/>
      <BindItem id="item16" compid="divData.form.tabData.tab5.form.divJojung.form.chkReson3" propid="value" datasetid="dsList7" columnid="YN_REASON3"/>
      <BindItem id="item17" compid="divData.form.tabData.tab5.form.divJojung.form.chkReson4" propid="value" datasetid="dsList7" columnid="YN_REASON4"/>
      <BindItem id="item18" compid="divData.form.tabData.tab5.form.divJojung.form.chkReson5" propid="value" datasetid="dsList7" columnid="YN_REASON5"/>
      <BindItem id="item13" compid="divData.form.tabData.tab5.form.divJojung.form.txtDS_REASON" propid="value" datasetid="dsList7" columnid="DS_REASON"/>
    </Bind>
  </Form>
</FDL>
