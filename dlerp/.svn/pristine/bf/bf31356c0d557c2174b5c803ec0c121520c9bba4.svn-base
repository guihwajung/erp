<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="New Form" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="sta00" taborder="0" text="사업지코드" left="0.0" top="10.0" width="105.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_ACNTUNIT" CodeFindName="DLX_CFLEASESITE_CODEFIND" CDTextWidth="70" taborder="1" left="sta00:0.0" top="10.0" width="350" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="sta03" taborder="3" text="동층호" left="ccfCD_ACNTUNIT:0.0" top="10.0" width="105.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Edit id="ctxtNO_DONG" taborder="5" left="sta03:0.0" top="10.0" width="40" height="24.0" onkillfocus="divSearch_ctxtNO_DONG_onkillfocus" maxlength="4" onkeyup="divSearch_ctxt_onkeyup"/>
              <Edit id="ctxtNO_FLOOR" taborder="6" left="ctxtNO_DONG:0.0" top="10.0" width="30" height="24.0" onkillfocus="divSearch_ctxtNO_FLOOR_onkillfocus" maxlength="2" onkeyup="divSearch_ctxt_onkeyup"/>
              <Edit id="ctxtNO_HO" taborder="7" left="ctxtNO_FLOOR:0.0" top="10.0" width="40" height="24.0" onkillfocus="divSearch_ctxtNO_HO_onkillfocus" maxlength="3" onkeyup="divSearch_ctxt_onkeyup"/>
              <Button id="cbtnNO_DONGHO" taborder="4" top="10.0" width="25" cssclass="btn_CF_Search" left="ctxtNO_HO:0.0" height="24.0" onclick="divSearch_cbtnNO_DONGHO_onclick"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Div id="divDataLeft" taborder="1" left="0" top="0" bottom="0" width="470" cssclass="div_DATA_Bg">
                <Layouts>
                  <Layout>
                    <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
                  </Layout>
                </Layouts>
              </Div>
              <Button id="btnRight" taborder="2" text="&gt;" left="divDataLeft:1" top="40%" width="30" height="30" onclick="divData_btnRight_onclick"/>
              <Div id="divDataRight" taborder="0" left="btnRight:1" top="0" bottom="0" right="0" cssclass="div_DATA_Bg">
                <Layouts>
                  <Layout>
                    <Grid id="objGrid1" taborder="0" left="0" top="0" bottom="0" right="0"/>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	
	
	this.divData.form.btnRight.set_enable(true);
	
	
	 //this.fnSelectLeft();
  
	
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {

};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {	
	this.dxGrid = this.divData.form.divDataLeft.form.objGrid;
	this.dxGrid1 = this.divData.form.divDataRight.form.objGrid1;
	
	this.ccfCD_ACNTUNIT = this.divSearch.form.ccfCD_ACNTUNIT;
	this.ctxtNO_DONG = this.divSearch.form.ctxtNO_DONG;
	this.ctxtNO_FLOOR = this.divSearch.form.ctxtNO_FLOOR;
	this.ctxtNO_HO = this.divSearch.form.ctxtNO_HO;
	this.cbtnNO_DONGHO = this.divSearch.form.cbtnNO_DONGHO;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	
	this.ccfCD_ACNTUNIT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsLeft, "DL", "DLC_IMPOSE_SUM1");
	this.gfnGridInit(this.dxGrid1, this.dsList, "DL", "DLC_IMPOSE_SUM");
	
	
	
	//this.dxGrid.addEventHandler("onselectchanged", this.fnGrid_RowCellChanged, this);
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelectLeft = new Dataset();
	this.dsSelectLeft.addColumn("CD_ACNTUNIT", "string");
	this.dsSelectLeft.addColumn("TY_GUBUN", "string");
	this.dsSelectLeft.addColumn("NO_CHASU", "string");
	
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_ACNTUNIT", "string");
	this.dsSelect.addColumn("TY_GUBUN", "string");
	this.dsSelect.addColumn("NO_CHASU", "string");
	this.dsSelect.addColumn("NO_DONG", "string");
	this.dsSelect.addColumn("NO_FLOOR", "string");
	this.dsSelect.addColumn("NO_HO", "string");

	this.dsInsert = new Dataset();
	this.dsInsert.addColumn("CD_ACNTUNIT", "string");
	this.dsInsert.addColumn("TY_GUBUN", "string");
	this.dsInsert.addColumn("NO_CHASU", "string");
	this.dsInsert.addColumn("NO_DONG_MAIN", "string");
	this.dsInsert.addColumn("NO_FLOOR_MAIN", "string");
	this.dsInsert.addColumn("NO_HO_MAIN", "string");
	this.dsInsert.addColumn("NO_DONG", "string");
	this.dsInsert.addColumn("NO_FLOOR", "string");
	this.dsInsert.addColumn("NO_HO", "string");
	this.dsInsert.addColumn("ID_INSERT", "string");

	

	this.dsDelete = new Dataset();
	this.dsDelete.addColumn("CD_ACNTUNIT", "string");
	this.dsDelete.addColumn("TY_GUBUN", "string");
	this.dsDelete.addColumn("NO_CHASU", "string");
	this.dsDelete.addColumn("NO_DONG_MAIN", "string");
	this.dsDelete.addColumn("NO_FLOOR_MAIN", "string");
	this.dsDelete.addColumn("NO_HO_MAIN", "string");
	this.dsDelete.addColumn("NO_DONG", "string");
	this.dsDelete.addColumn("NO_FLOOR", "string");
	this.dsDelete.addColumn("NO_HO", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
 */
  
this.fnSelectLeft = function()
{
    
	this.gfnGridBeforeSelect(this.dxGrid);

	this.dsSelectLeft.clearData();
	this.dsSelectLeft.addRow();	
	
	this.dsSelectLeft.setColumn(0, "CD_ACNTUNIT", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0, 6));
	this.dsSelectLeft.setColumn(0, "TY_GUBUN", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6, 1));
	this.dsSelectLeft.setColumn(0, "NO_CHASU", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7, 2));
	
	var strSvcId    = "selectleft";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "selectleft=dsSelectLeft";
	var outData     = "dsLeft=selectleft0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}


this.fnSelect = function() {
	
	this.gfnGridBeforeSelect(this.dxGrid1);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "CD_ACNTUNIT", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0, 6));
	this.dsSelect.setColumn(0, "TY_GUBUN", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6, 1));
	this.dsSelect.setColumn(0, "NO_CHASU", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7, 2));
	this.dsSelect.setColumn(0, "NO_DONG", this.dsSearch.getColumn(0, "NO_DONG"));
	this.dsSelect.setColumn(0, "NO_FLOOR", this.dsSearch.getColumn(0, "NO_FLOOR"));
	this.dsSelect.setColumn(0, "NO_HO", this.dsSearch.getColumn(0, "NO_HO"));
	
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	//var nrow = this.gfnGridAdd(this.dxGrid); // top (default), bottom, current
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid1);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	// 그리드 필수항목 체크
	if (!this.gfnGridValidate(this.dxGrid1)) return;	

	this.dxGrid1.updateToDataset();
		
	this.dsInsert.clearData();
	
	this.dsDelete.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
				var nrow = this.dsInsert.addRow();
				this.dsInsert.setColumn(nrow, "CD_ACNTUNIT", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0, 6));
	            this.dsInsert.setColumn(nrow, "TY_GUBUN", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6, 1));
	            this.dsInsert.setColumn(nrow, "NO_CHASU", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7, 2));
				this.dsInsert.setColumn(nrow, "NO_DONG_MAIN", this.dsList.getColumn(i, "NO_DONG_MAIN"));
				this.dsInsert.setColumn(nrow, "NO_FLOOR_MAIN", this.dsList.getColumn(i, "NO_FLOOR_MAIN"));
				this.dsInsert.setColumn(nrow, "NO_HO_MAIN", this.dsList.getColumn(i, "NO_HO_MAIN"));
				this.dsInsert.setColumn(nrow, "NO_DONG", this.dsSearch.getColumn(0, "NO_DONG"));
				this.dsInsert.setColumn(nrow, "NO_FLOOR", this.dsSearch.getColumn(0, "NO_FLOOR"));
				this.dsInsert.setColumn(nrow, "NO_HO", this.dsSearch.getColumn(0, "NO_HO"));
				this.dsInsert.setColumn(nrow, "ID_INSERT", this.AuthClient.ID_USER);
				break;
				
			case "U":
				break;
				
			case "D":
				var nrow = this.dsDelete.addRow();
				this.dsDelete.setColumn(nrow, "CD_ACNTUNIT", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0, 6));
	            this.dsDelete.setColumn(nrow, "TY_GUBUN", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6, 1));
	            this.dsDelete.setColumn(nrow, "NO_CHASU", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7, 2));
				this.dsInsert.setColumn(nrow, "NO_DONG_MAIN", this.dsList.getColumn(i, "NO_DONG_MAIN"));
				this.dsInsert.setColumn(nrow, "NO_FLOOR_MAIN", this.dsList.getColumn(i, "NO_FLOOR_MAIN"));
				this.dsInsert.setColumn(nrow, "NO_HO_MAIN", this.dsList.getColumn(i, "NO_HO_MAIN"));
				this.dsDelete.setColumn(nrow, "NO_DONG", this.dsSearch.getColumn(0, "NO_DONG"));
				this.dsDelete.setColumn(nrow, "NO_FLOOR", this.dsSearch.getColumn(0, "NO_FLOOR"));
				this.dsDelete.setColumn(nrow, "NO_HO", this.dsSearch.getColumn(0, "NO_HO"));		
				break;
		}
	}
	
	if (this.dsInsert.rowcount == 0 && this.dsDelete.rowcount == 0) return;
	
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "insert=dsInsert  delete=dsDelete";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;
	
	if (this.gfnIsNull(this.dsSearch.getColumn(0,"CD_ACNTUNIT"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.divSearch.form.ccfCD_ACNTUNIT.form.CDTextBox.setFocus();
		}
		this.gfnAlert("사업지코드를 입력하세요.", "fnVaidateCallback");
	}
	
	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid1);	
		this.fnSelectLeft();  
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
			//this.fnSelectRight();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if (id == "ccfCD_ACNTUNIT") {
		dsUserParam.setColumn(nrow, "FLAG", "A");
		dsUserParam.setColumn(nrow, "CD_DEPT", this.AuthClient.CD_DEPT);
		dsUserParam.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
		dsUserParam.setColumn(nrow, "ID_GROUP", this.FormInfo.ID_GROUP);
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "YN_TOTALCHASU", "");
	}	
	return true;
};

this.fnAfterCDTextChanged = function(id, codeFindData) {
	var arr = codeFindData; 
	
	switch(id){
		case "ccfCD_ACNTUNIT" : 
			this.dsSearch.setColumn(0, "NO_DONG", "");
			this.dsSearch.setColumn(0, "NO_FLOOR", "");
			this.dsSearch.setColumn(0, "NO_HO", "");
			break;
	}
}
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid1);	
	}
};


this.divSearch_ctxtNO_DONG_onkillfocus = function(obj:nexacro.Edit,e:nexacro.KillFocusEventInfo) {
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "NO_DONG"))) return;
	if (nexacro.isNumeric(this.dsSearch.getColumn(0, "NO_DONG"))) {
		this.dsSearch.setColumn(0, "NO_DONG", this.dsSearch.getColumn(0, "NO_DONG").padLeft(4, "0"));
	}
};

this.divSearch_ctxtNO_FLOOR_onkillfocus = function(obj:nexacro.Edit,e:nexacro.KillFocusEventInfo) {
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "NO_FLOOR"))) return;
	if (nexacro.isNumeric(this.dsSearch.getColumn(0, "NO_FLOOR"))) {
		this.dsSearch.setColumn(0, "NO_FLOOR", this.dsSearch.getColumn(0, "NO_FLOOR").padLeft(2, "0"));
	}
};

this.divSearch_ctxtNO_HO_onkillfocus = function(obj:nexacro.Edit,e:nexacro.KillFocusEventInfo) {
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "NO_HO"))) return;
	if (nexacro.isNumeric(this.dsSearch.getColumn(0, "NO_HO"))) {
		this.dsSearch.setColumn(0, "NO_HO", this.dsSearch.getColumn(0, "NO_HO").padLeft(3, "0"));
	}
};

this.divSearch_ctxt_onkeyup = function(obj:nexacro.Edit,e:nexacro.KeyEventInfo) {
//  	if (e.keycode == 112) {	//F1
//  		this.divSearch_cbtnNO_DONGHO_onclick();
//  	}
	if (obj.value.length == obj.maxlength) {
		switch (obj.id) {
			case "ctxtNO_DONG":
				this.ctxtNO_FLOOR.setFocus();
				break;
			case "ctxtNO_FLOOR":
				this.ctxtNO_HO.setFocus();
				break;
			case "ctxtNO_HO":
				this.cbtnNO_DONGHO.setFocus();
				break;
		}
	}
};

this.divSearch_cbtnNO_DONGHO_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "CD_ACNTUNIT"))) {
		this.fnVaidateCallback = function() {
			this.ccfCD_ACNTUNIT.form.CDTextBox.setFocus();
		}
		this.gfnAlert("사업지코드를 입력하세요!", "fnVaidateCallback");
		return;
	}
	
	var param = {};
	param.CD_ACNTUNIT = this.dsSearch.getColumn(0, "CD_ACNTUNIT");
	param.FLAG = "1";
	
	this.gfnFormOpen("DRI", "DRI_DONGHOCONTRACT", "fnDonghoPopupCallback", param);
};

this.fnDonghoPopupCallback = function(svcID, val) {
	if (!val) return;
	
	var json = JSON.parse(val);
	if (json.DONG.length > 0) {
		this.dsSearch.setColumn(0, "NO_DONG", json.DONG);
		this.dsSearch.setColumn(0, "NO_FLOOR", json.FLOOR);
		this.dsSearch.setColumn(0, "NO_HO", json.HO);
	}
}


// >  버튼 클릭
this.divData_btnRight_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	if(this.gfnIsNull(this.dsSearch.getColumn(0, "CD_ACNTUNIT")))
	{
		this.gfnAlert("조회 후 진행해주세요.");
		return false;
	}
	
	if(this.dsList.findRow("CD_ACNTUNIT", this.dsLeft.getColumn(this.dsLeft.rowposition, "CD_ACNTUNIT")) < 0)
	{
		var nrow = this.gfnGridAdd(this.dxGrid1, "bottom");
		this.dsList.setColumn(nrow, this.ucFlag, "I");
		this.dsList.setColumn(nrow, "NO_DONG", this.dsLeft.getColumn(this.dsLeft.rowposition, "NO_DONG"));
		this.dsList.setColumn(nrow, "NO_FLOOR", this.dsLeft.getColumn(this.dsLeft.rowposition, "NO_FLOOR"));
		this.dsList.setColumn(nrow, "NO_HO", this.dsLeft.getColumn(this.dsLeft.rowposition, "NO_HO"));
		this.dsList.setColumn(nrow, "DS_CONTRACTOR", this.dsLeft.getColumn(this.dsLeft.rowposition, "DS_CONTRACTOR"));
	}
	else
	{
		this.gfnAlert("이미 입력된 자료입니다.");
		return false;
	}
};

/*
// >> 버튼 클릭.
this.divData_btnAllRight_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if(this.gfnIsNull(this.dsSearch.getColumn(0, "CD_SITE")))
	{
		this.gfnAlert("조회 후 진행해주세요.");
		return false;
	}
	
	this.gfnConfirm("모든 자료를 이동 하겠습니까?", "fnAllRight_callback");
};


this.fnAllRight_callback = function(strID, val)
{
	if(val == true)
	{
		for(var i = 0; i < this.dsLeft.rowcount; i++)
		{
			var cd_code = this.dsLeft.getColumn(i, "CD_CODE");
			
			if(this.dsList.findRow("CD_SIL", cd_code) < 0)
			{
				var nrow = this.gfnGridAdd(this.dxGrid1, "bottom");
				this.dsList.setColumn(nrow, this.ucFlag, "I");
				this.dsList.setColumn(nrow, "CD_SIL", this.dsLeft.getColumn(i, "CD_CODE"));
				this.dsList.setColumn(nrow, "DS_SIL", this.dsLeft.getColumn(i, "DS_CODE"));
				this.dsList.setColumn(nrow, "YN_USE", "Y");
			}
		}
	}
}
*/
]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">selectleft</Col>
            <Col id="SP">DLCPR_CONTLIST_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DLCPR_IMPOSE_SUM_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">insert</Col>
            <Col id="SP">DLCPR_IMPOSE_SUM_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">delete</Col>
            <Col id="SP">DLCPR_IMPOSE_SUM_DELETE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_ACNTUNIT" type="STRING" size="256"/>
          <Column id="NO_DONG" type="STRING" size="256"/>
          <Column id="NO_FLOOR" type="STRING" size="256"/>
          <Column id="NO_HO" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsLeft"/>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_ACNTUNIT.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_ACNTUNIT"/>
      <BindItem id="item1" compid="divSearch.form.ctxtNO_DONG" propid="value" datasetid="dsSearch" columnid="NO_DONG"/>
      <BindItem id="item2" compid="divSearch.form.ctxtNO_FLOOR" propid="value" datasetid="dsSearch" columnid="NO_FLOOR"/>
      <BindItem id="item3" compid="divSearch.form.ctxtNO_HO" propid="value" datasetid="dsSearch" columnid="NO_HO"/>
    </Bind>
  </Form>
</FDL>
