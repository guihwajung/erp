<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="410" height="290" maxwidth="410" maxheight="365" titletext="리스크요청취소" onload="form_onload" onclick="form_onclick">
    <Layouts>
      <Layout>
        <Div id="divData" taborder="0" left="0" top="0" bottom="0" right="0" cssclass="div_DATA_Bg" text="">
          <Layouts>
            <Layout>
              <Static id="staTITLE" taborder="0" text="리스크 요청/취소" left="-10" top="0" width="102.44%" height="30" cssclass="sta_TITLE_Bg" textAlign="center" onclick="divData_staTITLE_onclick"/>
              <Static id="staCD_SITE" taborder="1" text="현장코드" left="0" top="staTITLE:10" width="87" height="30" cssclass="sta_WF_tablelabel" textAlign="right"/>
              <Static id="staNO_HADOCONT" taborder="2" text="리스크번호" left="0" top="staCD_SITE:-1" width="87" height="30" cssclass="sta_WF_tablelabel" textAlign="right"/>
              <Static id="staEP_NO" taborder="17" text="전자결재" left="0" top="staNO_HADOCONT:-2" width="87" height="30" textAlign="right" cssclass="sta_WF_tablelabelE"/>
              <Static id="staCD_PROCDIV" taborder="3" text="처리구분" left="0" top="staEP_NO:-1" width="87" height="30" textAlign="right" cssclass="sta_WF_tablelabelE"/>
              <Static id="staDS_RTNRSN" taborder="4" text="요청내용" left="0" top="staEP_NO:28" width="87" height="70" textAlign="right" cssclass="sta_WF_tablelabelE"/>
              <Static id="staBg1" taborder="5" left="staCD_SITE:-1" top="staTITLE:10" right="0%" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staBg2" taborder="6" left="staNO_HADOCONT:-1" top="staBg1:-1" right="0%" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staBg3_00" taborder="18" left="86" top="97" right="0.00%" height="30" cssclass="sta_WF_tablebg" text=""/>
              <Static id="staBg5" taborder="7" left="staCD_PROCDIV:-1" top="staBg3_00:-1" right="0.00%" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staBg6" taborder="8" left="staDS_RTNRSN:-1" top="staBg5:-1" right="0.00%" height="70" cssclass="sta_WF_tablebg"/>
              <Edit id="edtCD_SITE" taborder="9" left="staCD_SITE:5" top="staTITLE:15" width="90" height="20" readonly="true"/>
              <Edit id="edtDS_SITE" taborder="10" left="edtCD_SITE:3" top="staTITLE:15" right="5" height="20" readonly="true"/>
              <Edit id="edtNO_RISK" taborder="11" left="staNO_HADOCONT:5" top="74" width="90" height="20" readonly="true"/>
              <Edit id="edtNM_RISK" taborder="12" left="edtNO_RISK:3" top="74" right="5" height="20" readonly="true"/>
              <TextArea id="ctxtDS_RTNRSN" taborder="13" left="staDS_RTNRSN:5" top="160" right="4" height="60" value="" visible="true" enable="true"/>
              <Button id="btnOk" taborder="14" text="확인" left="32.44%" top="staDS_RTNRSN:40" width="60" height="20" onclick="divData_btnOk_onclick" cssclass="btnExt"/>
              <Button id="btnCancel" taborder="15" text="취소" left="52.44%" top="staDS_RTNRSN:40" width="60" height="20" onclick="divData_btnCancel_onclick" cssclass="btnExt"/>
              <Radio id="crdoCD_PROCDIV" taborder="16" left="92" top="132" height="20" innerdataset="dsCD_PROCDIV" direction="vertical" fittocontents="width" width="138" index="0" text="승인" value="APRV" codecolumn="NO_DGR" datacolumn="DS_DGR" onitemchanged="divData_crdoCD_PROCDIV_onitemchanged" enable="true"/>
              <Edit id="ctxtEP_NO" taborder="19" height="22" value="" top="staBg2:2" left="92" right="5"/>
              <Static id="sta00" taborder="20" text="* EP의 전자결재번호를 입력하십시오." left="0" top="228" height="29" color="blue" right="10"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();

	// 이전 화면에서 데이터 받기.
	this.dsData.setColumn(0, "CD_SITE", this.getOwnerFrame().CD_SITE);
	this.dsData.setColumn(0, "DS_SITE", this.getOwnerFrame().DS_SITE);
	this.dsData.setColumn(0, "NO_RISK", this.getOwnerFrame().NO_RISK);
	this.dsData.setColumn(0, "NM_RISK", this.getOwnerFrame().NM_RISK);
	this.dsData.setColumn(0, "CD_PROC", this.getOwnerFrame().CD_PROC) 
	this.dsData.setColumn(0, "BTN_APRVRSTOR", this.getOwnerFrame().BTN_APRVRSTOR);
	this.dsData.setColumn(0, "REQ_RSN", this.getOwnerFrame().REQ_RSN);
	this.dsData.setColumn(0, "EP_NO", this.getOwnerFrame().EP_NO);
	
	this.fnSetRadio();
	
	if(this.dsData.getColumn(0, "BTN_APRVRSTOR") == "Y")
	{
		this.divData.form.crdoCD_PROCDIV.set_enable(true);
	}
	else
	{
		this.divData.form.crdoCD_PROCDIV.set_enable(false);
	}

};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	//this.FormBtns.Select.set_enable(false);
} 

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {

};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {	
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsExecute = new Dataset();
	this.dsExecute.addColumn("TY_WRK", "string");
	this.dsExecute.addColumn("ID_USER", "string");
	this.dsExecute.addColumn("CD_SITE", "string");
	this.dsExecute.addColumn("NO_RISK", "string");
	this.dsExecute.addColumn("DS_RTNRSN", "string");
	this.dsExecute.addColumn("REQ_RSN", "string");
	this.dsExecute.addColumn("EP_NO", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 
 /************************************************************************
 * 콤보 이벤트
 ************************************************************************/
 
 
/************************************************************************
 * Validate
 ************************************************************************/
this.fnApproveValidate = function() {
	var validate = true;
	
	if (this.gfnIsNull(this.dsData.getColumn(0, "EP_NO")) && this.dsData.getColumn(0, "CD_PROC") == "OMGRREQ") {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.divData.form.ctxtEP_NO.setFocus();
		}
		this.gfnAlert("EP 전자결재번호를 입력하세요.", "fnVaidateCallback");
	}
	
	return validate;
}
/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "approve") {
		if(errorCode == 0)
		{
			// this.close()가 작동하지 않았고, 
			// 부모의 callback 함수로 데이터를 넘겨주기 위해 작성되었습니다.
			
			this.fnApprove_callback = function()
			{
				trace("####### CD_PROC:"+this.dsData.getColumn(0, "CD_PROC"));
				var rtn = this.dsData.getColumn(0, "CD_PROC");
				//this.getParentContext().close(true);
				this.getParentContext().close(rtn);
			}
			
			this.gfnAlert("리스크관리 "+this.divData.form.crdoCD_PROCDIV.text + " 정상 처리되었습니다.", "fnApprove_callback");
		}else
		{
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
 // 라디오 버튼 설정
 
 this.fnSetRadio = function()
 {
	// 라디오 값 세팅 및 폼 초기화
	this.gfnSetFormStatus(this);
	this.divData.form.resetScroll();
	
	this.divData.form.crdoCD_PROCDIV.set_value(this.dsData.getColumn(0, "CD_PROC"));

}
 

// 확인 버튼 클릭
this.divData_btnOk_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if(!this.fnApproveValidate()) return;

	this.dsExecute.clearData();
	var nrow = this.dsExecute.addRow();
	
	this.dsExecute.setColumn(nrow, "TY_WRK", this.dsData.getColumn(0, "CD_PROC"));
	this.dsExecute.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
	this.dsExecute.setColumn(nrow, "CD_SITE", this.dsData.getColumn(0, "CD_SITE"));
	this.dsExecute.setColumn(nrow, "NO_RISK", this.dsData.getColumn(0, "NO_RISK"));
	this.dsExecute.setColumn(nrow, "NM_RISK", this.dsData.getColumn(0, "NM_RISK"));
	this.dsExecute.setColumn(nrow, "DS_RTNRSN", this.dsData.getColumn(0, "DS_RTNRSN"));
	
	this.dsExecute.setColumn(nrow, "REQ_RSN", this.dsData.getColumn(0, "REQ_RSN"));
	this.dsExecute.setColumn(nrow, "EP_NO", this.dsData.getColumn(0, "EP_NO"));
				
	var strSvcId    = "approve";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "approve_ok=dsExecute";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
	
	
};

// 취소 버튼 클릭
this.divData_btnCancel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	// this.close()가 작동하지 않았고, 
	// 부모의 callback 함수로 데이터를 넘겨주기 위해 작성되었습니다.
	this.getParentContext().close(false);
};

this.dsData_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue)
	{
		if(e.columnid == "RSTOR")
		{
			if(e.newvalue == "APRV")
			{
				this.divData.form.ctxtDS_RTNRSN.set_enable(false);
				this.divData.form.resetScroll();
			}
			else
			{
				this.divData.form.ctxtDS_RTNRSN.set_enable(true);
				this.divData.form.resetScroll();
			}
		}
	}
};


this.divData_crdoCD_PROCDIV_onitemchanged = function(obj:nexacro.Radio,e:nexacro.ItemChangeEventInfo)
{
		if(this.dsData.getColumn(0, "CD_PROC") == "APRV")
	{
		this.divData.form.ctxtDS_RTNRSN.set_enable(false);
	}
	else
	{
		this.divData.form.ctxtDS_RTNRSN.set_enable(true);
	}
};
]]></Script>
    <Objects>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">approve_ok</Col>
            <Col id="SP">DWAPR_RISK_EXECUTE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsData" onvaluechanged="dsData_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="DS_SITE" type="STRING" size="256"/>
          <Column id="NO_RISK" type="STRING" size="256"/>
          <Column id="NM_RISK" type="STRING" size="256"/>
          <Column id="CD_PROC" type="STRING" size="256"/>
          <Column id="DS_RTNRSN" type="STRING" size="256"/>
          <Column id="BTN_APRVRSTOR" type="STRING" size="256"/>
          <Column id="REQ_RSN" type="STRING" size="256"/>
          <Column id="EP_NO" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsCD_PROCDIV">
        <ColumnInfo>
          <Column id="NO_DGR" type="STRING" size="256"/>
          <Column id="DS_DGR" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="NO_DGR">OMGRREQ</Col>
            <Col id="DS_DGR">승인요청</Col>
          </Row>
          <Row>
            <Col id="NO_DGR">REQCNC</Col>
            <Col id="DS_DGR">요청취소</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divData.form.edtCD_SITE" propid="value" datasetid="dsData" columnid="CD_SITE"/>
      <BindItem id="item1" compid="divData.form.edtDS_SITE" propid="value" datasetid="dsData" columnid="DS_SITE"/>
      <BindItem id="item4" compid="divData.form.edtNO_RISK" propid="value" datasetid="dsData" columnid="NO_RISK"/>
      <BindItem id="item5" compid="divData.form.edtNM_RISK" propid="value" datasetid="dsData" columnid="NM_RISK"/>
      <BindItem id="item6" compid="divData.form.crdoCD_PROCDIV" propid="value" datasetid="dsData" columnid="CD_PROC"/>
      <BindItem id="item2" compid="divData.form.ctxtDS_RTNRSN" propid="value" datasetid="dsData" columnid="REQ_RSN"/>
      <BindItem id="item3" compid="divData.form.ctxtEP_NO" propid="value" datasetid="dsData" columnid="EP_NO"/>
    </Bind>
  </Form>
</FDL>
