<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="DAB_EDUCATION" width="1280" height="720" titletext="교육관리" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0" top="0" height="78.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="staCD_CORP" taborder="7" text="법인" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_CORP" CDTextWidth="50" taborder="8" left="staCD_CORP:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DAX_CFCORP_CODEFIND"/>
              <Static id="staCD_EDU_TYPE" taborder="12" text="교육종류" left="ccfCD_CORP:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_EDU_TYPE" CDTextWidth="50" taborder="13" left="staCD_EDU_TYPE:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DAX_CFCOMMONCODE"/>
              <Static id="staCD_EDU_GUBUN" taborder="0" text="교육구분" left="ccfCD_EDU_TYPE:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Static id="staFR_EDUCATION" taborder="1" text="교육일자" left="0.0" top="staCD_CORP:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Calendar id="ctclFR_EDUCATION" taborder="2" left="staFR_EDUCATION:0.0" top="staCD_CORP:10.0" width="100" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" onchanged="fnSearchInit"/>
              <Static id="staTO_EDUCATION" taborder="3" text="~" left="ctclFR_EDUCATION:0.0" top="staCD_CORP:10.0" width="30.0" height="24.0" cssclass="sta_WF_AC"/>
              <Calendar id="ctclTO_EDUCATION" taborder="4" left="staTO_EDUCATION:0.0" top="staCD_CORP:10.0" width="100" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" onchanged="fnSearchInit"/>
              <Static id="staDS_EDUCATION" taborder="5" text="교육명" left="ctclTO_EDUCATION:20" top="staCD_CORP:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Edit id="txtDS_EDUCATION" taborder="6" left="staDS_EDUCATION:0.0" top="staCD_CORP:10.0" height="24.0" autoselect="true" width="250" textAlign="left"/>
              <Div id="ccfCD_EDU_GUBUN" CDTextWidth="50" taborder="9" left="staCD_EDU_GUBUN:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DAX_CFCOMMONCODE"/>
              <Static id="staDS_EDU_ORGAN" taborder="10" text="교육기관" left="txtDS_EDUCATION:0.0" top="staCD_CORP:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Edit id="txtDS_EDU_ORGAN" taborder="11" left="staDS_EDU_ORGAN:0.0" top="staCD_CORP:10.0" height="24.0" autoselect="true" width="250" textAlign="left"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo) {
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	this.fnInit();
}

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {

}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnAllproc = this.gfnFormButtonAdd("Allproc", "fnAllproc");	// 일괄등록
}

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	// 그리드영역
	this.dxGrid = this.divData.form.objGrid;
	
	// 검색영역
	this.ccfCD_CORP       = this.divSearch.form.ccfCD_CORP;
	this.ccfCD_EDU_TYPE   = this.divSearch.form.ccfCD_EDU_TYPE;
	this.ccfCD_EDU_GUBUN  = this.divSearch.form.ccfCD_EDU_GUBUN;
	this.ctclFR_EDUCATION = this.divSearch.form.ctclFR_EDUCATION;
	this.ctclTO_EDUCATION = this.divSearch.form.ctclTO_EDUCATION;
	this.txtDS_EDUCATION  = this.divSearch.form.txtDS_EDUCATION;
	this.txtDS_EDU_ORGAN  = this.divSearch.form.txtDS_EDU_ORGAN;
}

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	// 그리드영역
	this.gfnGridInit(this.dxGrid, this.dsList, "DA", "DAB_EDUCATION");
	this.dxGrid.BeforeUserDataSetParam = "fnGridBeforeUserDataSetParam";
	this.dxGrid.AfterCDTextChanged     = "fnGridAfterCDTextChanged";
	this.dxGrid.EnterCell              = "fnGridEnterCell";
	
	// 검색영역
	this.ccfCD_CORP.BeforeUserDataSetParam      = "fnBeforeUserDataSetParam";	// 법인
	this.ccfCD_CORP.AfterCDTextChanged          = "fnAfterCDTextChanged";
	this.ccfCD_EDU_TYPE.BeforeUserDataSetParam  = "fnBeforeUserDataSetParam";	// 교육종류
	this.ccfCD_EDU_TYPE.AfterCDTextChanged      = "fnAfterCDTextChanged";
	this.ccfCD_EDU_GUBUN.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";	// 교육구분
	this.ccfCD_EDU_GUBUN.AfterCDTextChanged     = "fnAfterCDTextChanged";
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	// 조회
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("CD_EDU_TYPE", "string");
	this.dsSelect.addColumn("CD_EDU_GUBUN", "string");
	this.dsSelect.addColumn("FR_EDUCATION", "string");
	this.dsSelect.addColumn("TO_EDUCATION", "string");
	this.dsSelect.addColumn("DS_EDUCATION", "string");
	this.dsSelect.addColumn("DS_EDU_ORGAN", "string");
	this.dsSelect.addColumn("GR_SEARCH", "string");
	this.dsSelect.addColumn("TY_AUTH", "string");
	this.dsSelect.addColumn("GR_DEPT", "string");
	this.dsSelect.addColumn("ID_USER", "string");
	
	// 저장
	this.dsSave = new Dataset();
	this.dsSave.addColumn("TY_SAVE", "string");
	this.dsSave.addColumn("ID_PERSON", "int");
	this.dsSave.addColumn("NO_SEQ", "int");
	this.dsSave.addColumn("CD_CORP", "string");
	this.dsSave.addColumn("ID_SABUN", "string");
	this.dsSave.addColumn("CD_DEPT", "string");
	this.dsSave.addColumn("CD_DUTY", "string");
	this.dsSave.addColumn("CD_POSITION", "string");
	this.dsSave.addColumn("FR_EDUCATION", "string");
	this.dsSave.addColumn("TO_EDUCATION", "string");
	this.dsSave.addColumn("CD_EDU_INOUT", "string");
	this.dsSave.addColumn("CD_EDU_TYPE", "string");
	this.dsSave.addColumn("CD_EDU_GUBUN", "string");
	this.dsSave.addColumn("DS_EDUCATION", "string");
	this.dsSave.addColumn("DS_EDU_ORGAN", "string");
	this.dsSave.addColumn("AM_EDUCATION", "bigdecimal");
	this.dsSave.addColumn("DS_EDU_PURPOSE", "string");
	this.dsSave.addColumn("YN_RETURN", "string");
	this.dsSave.addColumn("AM_RETURN", "bigdecimal");
	this.dsSave.addColumn("DS_REMARK", "string");
	this.dsSave.addColumn("QN_EDUCATION", "int");
	this.dsSave.addColumn("TM_EDUCATION", "int");
	this.dsSave.addColumn("DS_EDUCATION_WAY", "string");
	this.dsSave.addColumn("YN_EDUCATION", "string");
	this.dsSave.addColumn("CD_ACCOUNT", "string");
	this.dsSave.addColumn("CD_VENDOR", "string");
	this.dsSave.addColumn("GR_SEARCH", "string");
	this.dsSave.addColumn("TY_AUTH", "string");
	this.dsSave.addColumn("GR_DEPT", "string");
	this.dsSave.addColumn("ID_USER", "string");
}

/************************************************************************
 * 화면 및 검색영역 초기화
 ************************************************************************/
this.fnInit = function() {
	// 법인코드
	this.fnSetCodeFinder(this.ccfCD_CORP, this.AuthClient.CD_CORP);
	
	// 교육일자
	var ym = this.gfnGetDate().substring(0, 6);
	var begin =  ym + "01";
	var end = this.gfnGetLastDate(ym);
	this.fnSetObjectValue(this.ctclFR_EDUCATION, begin);
	this.fnSetObjectValue(this.ctclTO_EDUCATION, end);
		
	if (this.FormInfo.GR_SEARCH == "9") {
		this.ccfCD_CORP.set_enable(false);
	}
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.gfnSearchValidate(this.divSearch, this.dsSearch)) return false;
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
 	this.dsSelect.clearData();
 	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "CD_CORP"     , this.gfnNvl(this.dsSearch.getColumn(0, "CD_CORP"), ""));
	this.dsSelect.setColumn(0, "CD_EDU_TYPE" , this.gfnNvl(this.dsSearch.getColumn(0, "CD_EDU_TYPE"), ""));
	this.dsSelect.setColumn(0, "CD_EDU_GUBUN", this.gfnNvl(this.dsSearch.getColumn(0, "CD_EDU_GUBUN"), ""));
	this.dsSelect.setColumn(0, "FR_EDUCATION", this.gfnNvl(this.dsSearch.getColumn(0, "FR_EDUCATION"), ""));
	this.dsSelect.setColumn(0, "TO_EDUCATION", this.gfnNvl(this.dsSearch.getColumn(0, "TO_EDUCATION"), ""));
	this.dsSelect.setColumn(0, "DS_EDUCATION", this.gfnNvl(this.dsSearch.getColumn(0, "DS_EDUCATION"), ""));
	this.dsSelect.setColumn(0, "DS_EDU_ORGAN", this.gfnNvl(this.dsSearch.getColumn(0, "DS_EDU_ORGAN"), ""));
	this.dsSelect.setColumn(0, "GR_SEARCH"   , this.FormInfo.GR_SEARCH);
	this.dsSelect.setColumn(0, "TY_AUTH"     , this.FormInfo.TY_AUTH);
	this.dsSelect.setColumn(0, "GR_DEPT"     , this.AuthClient.CD_DEPT);
	this.dsSelect.setColumn(0, "ID_USER"     , this.AuthClient.ID_USER);

	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback"; 
	
	this.gfnTransaction(strSvcId,		// transaction을 구분하기 위한 svc id값
						strSvcType, 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData, 		// 입력값으로 보낼 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						outData, 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc);	// 통신방법 정의 [생략가능]
}

/*
 * 추가 버튼
 */
this.fnAdd = function() {
	var nrow = this.gfnGridAdd(this.dxGrid);
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "CD_CORP"))) {
		this.gfnAlert("법인을 선택하세요!");
		return;
	}
	this.dsList.setColumn(nrow, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));
	this.dsList.setColumn(nrow, "DS_CORP", this.dsSearch.getColumn(0, "DS_CORP"));
}

/*
 * 삭제 버튼
 */
this.fnDel = function() {
 	this.gfnGridDel(this.dxGrid);
}

/*
 * 저장 버튼
 */
this.fnSave = function() {
	// 그리드 필수항목 체크
	if (!this.gfnGridValidate(this.dxGrid)) return;	
	if (!this.fnSaveValid(this.dxGrid)) return;		

	this.dxGrid.updateToDataset();

	this.dsSave.clearData();
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
		case "I":
		case "U":
		case "D":
			var nrow = this.dsSave.addRow();
			this.dsSave.setColumn(nrow, "TY_SAVE"         , flag);
			this.dsSave.setColumn(nrow, "ID_PERSON"       , this.dsList.getColumn(i, "ID_PERSON"));
			this.dsSave.setColumn(nrow, "NO_SEQ"          , (flag == "I" ? 0 : this.dsList.getColumn(i, "NO_SEQ")));
			this.dsSave.setColumn(nrow, "CD_CORP"         , this.dsList.getColumn(i, "CD_CORP"));
			this.dsSave.setColumn(nrow, "ID_SABUN"        , this.dsList.getColumn(i, "ID_SABUN"));
			this.dsSave.setColumn(nrow, "CD_DEPT"         , this.dsList.getColumn(i, "CD_DEPT"));
			this.dsSave.setColumn(nrow, "CD_DUTY"         , this.dsList.getColumn(i, "CD_DUTY"));
			this.dsSave.setColumn(nrow, "CD_POSITION"     , this.dsList.getColumn(i, "CD_POSITION"));
			this.dsSave.setColumn(nrow, "FR_EDUCATION"    , this.dsList.getColumn(i, "FR_EDUCATION"));
			this.dsSave.setColumn(nrow, "TO_EDUCATION"    , this.dsList.getColumn(i, "TO_EDUCATION"));
			this.dsSave.setColumn(nrow, "CD_EDU_INOUT"    , this.dsList.getColumn(i, "CD_EDU_INOUT"));
			this.dsSave.setColumn(nrow, "CD_EDU_TYPE"     , this.dsList.getColumn(i, "CD_EDU_TYPE"));
			this.dsSave.setColumn(nrow, "CD_EDU_GUBUN"    , this.dsList.getColumn(i, "CD_EDU_GUBUN"));
			this.dsSave.setColumn(nrow, "DS_EDUCATION"    , this.dsList.getColumn(i, "DS_EDUCATION"));
			this.dsSave.setColumn(nrow, "DS_EDU_ORGAN"    , this.dsList.getColumn(i, "DS_EDU_ORGAN"));
			this.dsSave.setColumn(nrow, "AM_EDUCATION"    , this.dsList.getColumn(i, "AM_EDUCATION"));
			this.dsSave.setColumn(nrow, "DS_EDU_PURPOSE"  , this.dsList.getColumn(i, "DS_EDU_PURPOSE"));
			this.dsSave.setColumn(nrow, "YN_RETURN"       , this.dsList.getColumn(i, "YN_RETURN"));
			this.dsSave.setColumn(nrow, "AM_RETURN"       , this.dsList.getColumn(i, "AM_RETURN"));
			this.dsSave.setColumn(nrow, "DS_REMARK"       , this.dsList.getColumn(i, "DS_REMARK"));
			this.dsSave.setColumn(nrow, "QN_EDUCATION"    , this.dsList.getColumn(i, "QN_EDUCATION"));
			this.dsSave.setColumn(nrow, "TM_EDUCATION"    , this.dsList.getColumn(i, "TM_EDUCATION"));
			this.dsSave.setColumn(nrow, "DS_EDUCATION_WAY", this.dsList.getColumn(i, "DS_EDUCATION_WAY"));
			this.dsSave.setColumn(nrow, "YN_EDUCATION"    , this.dsList.getColumn(i, "YN_EDUCATION"));
			this.dsSave.setColumn(nrow, "CD_ACCOUNT"      , this.dsList.getColumn(i, "CD_ACCOUNT"));
			this.dsSave.setColumn(nrow, "CD_VENDOR"       , this.dsList.getColumn(i, "CD_VENDOR"));
			this.dsSave.setColumn(nrow, "GR_SEARCH"       , this.FormInfo.GR_SEARCH);
			this.dsSave.setColumn(nrow, "TY_AUTH"         , this.FormInfo.TY_AUTH);
			this.dsSave.setColumn(nrow, "GR_DEPT"         , this.AuthClient.CD_DEPT);
			this.dsSave.setColumn(nrow, "ID_USER"         , this.AuthClient.ID_USER);				
			break;
		}
	}
		
	if (this.dsSave.rowcount == 0) return;
	
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction(strSvcId,		// transaction을 구분하기 위한 svc id값
						strSvcType, 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData, 		// 입력값으로 보낼 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						outData, 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc);	// 통신방법 정의 [생략가능]
}

/*
 * 엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 * 출력 버튼
 */
this.fnPrint = function() {
	return true;
}

/************************************************************************
 * Validate
 ************************************************************************/
this.fnSelectValidate = function() {
	if (!this.gfnIsNull(this.ctclFR_EDUCATION.value) && !this.gfnIsNull(this.ctclTO_EDUCATION.value) ) {
		if ( this.ctclFR_EDUCATION.value > this.ctclTO_EDUCATION.value ) {
			this.gfnAlert("교육일자가 잘못 입력 되었습니다.");
			this.ctclFR_EDUCATION.setFocus();
			return false;
		}
	}
	return true;
};

this.fnSaveValid = function(pGrid) {
	var objDs = pGrid.getBindDataset();	
	
	var msg = "";	
	for (var i = 0; i < objDs.rowcount; i++) {	
		var flag = this.gfnGetFlag(objDs, i);
		switch(flag) {
		case "I":
		case "U":
			var frDate = objDs.getColumn(i, "FR_EDUCATION");
			var toDate = objDs.getColumn(i, "TO_EDUCATION");
			if (!this.gfnIsNull(frDate) && !this.gfnIsNull(toDate)) {
				if (frDate > toDate) {
					msg += i + "행 교육시작일이 종료일보다 클 수 없습니다.\n";
				}
			}
			break;
		}
	}
	
	if (this.gfnIsNull(msg)) {
		return true;
	} else {
		var arrError = [msg];
		this.gfnAlert(arrError);
		return false;
	}
};

/************************************************************************
 * 확장버튼 이벤트
 ************************************************************************/
// 일괄등록 버튼
this.fnAllproc = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if (!this.gfnSearchValidate(this.divSearch, this.dsSearch)) return false;
	if (!this.fnSelectValidate()) return false;
	
	var param = {};
	param.CD_CORP = this.ccfCD_CORP.form.CDTextBox.value;
	param.DS_CORP = this.ccfCD_CORP.form.DSTextBox.value;
	param.FR_EDUCATION = this.ctclFR_EDUCATION.value;
	param.TO_EDUCATION = this.ctclTO_EDUCATION.value;
		
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DAE_EDUCATION_ALL_REG", "fnAllprocCallback", param);	
}

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 * 기본 콜백
 */
this.fnCallback = function(svcID, errorCode, errorMsg) {
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
	}
	else if (svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

// 일괄등록 버튼 콜백
this.fnAllprocCallback = function(svcID, val) {
	if (val)  {
		this.FormBtns.Select.click();
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if (id == "ccfCD_CORP") {	// 법인코드
		dsUserParam.setColumn(nrow, "CD_CORP", this.AuthClient.CD_CORP);
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
	}
	else if (id == "ccfCD_EDU_TYPE") {	// 교육종류
		dsUserParam.setColumn(nrow, "CD_PREFIX", "S3");
	}
	else if (id == "ccfCD_EDU_GUBUN") {	// 교육구분
		dsUserParam.setColumn(nrow, "CD_PREFIX", "S4");
	}
	
	return true;
}
 
this.fnAfterCDTextChanged = function(id, codeFindData) {
	
}

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGridBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	var gridIdx = this.dxGrid.currentrow;
	
	if (id == "DAX_CFBASEINFO_ALL") {	// 사번
		var sCD_CORP = this.dsList.getColumn(this.dsList.rowposition, "CD_CORP");
		if(this.gfnIsNull(sCD_CORP)){
			this.gfnAlert("법인을 먼저 선택하세요.");
			return false;
		}
		dsUserParam.setColumn(nrow, "CD_DEPT"  , this.AuthClient.CD_DEPT);
		dsUserParam.setColumn(nrow, "CD_CORP"  , sCD_CORP);
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "YN_CORP"  , "N");
		dsUserParam.setColumn(nrow, "TY_RETIRE", "%");	
	}
	else if (id == "EF") {	// 직무
		dsUserParam.setColumn(nrow, "CD_PREFIX", "EF");
	}
	else if (id == "ED") {	// 직위
		dsUserParam.setColumn(nrow, "CD_PREFIX", "ED");
	}
	else if (id == "S3") {	// 교육종류
		dsUserParam.setColumn(nrow, "CD_PREFIX", "S3");
	}
	else if (id == "S4") {	// 교육구분
		dsUserParam.setColumn(nrow, "CD_PREFIX", "S4");
	}
	
	return true;
};

this.fnGrid_AfterCDTextChanged = function(id, codeFindData) {		
	
}

this.fnGridEnterCell = function(obj:nexacro.Grid, row, cell) {
	// cell 수정안되는것만 return false 할것
	// 마지막에 return true 해버리면 전체 컬럼 수정가능해져버림
	var sNO_GROUPWARE = this.dsList.getColumn(row, "NO_GROUPWARE");
	if (!this.gfnIsNull(sNO_GROUPWARE)) {
		return false;
	} else {
		// 화면 권한 TY_AUTH가 F 이면 CRUD가능
		if (this.FormInfo.TY_AUTH == "R") {
			return false;
		}
	}
}

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset, e:nexacro.DSColChangeEventInfo) {
	if (e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);
	}
}

// 코드파인더 초기화
this.fnResetCodeFinder = function(obj, dataset, columns) {
	obj.form.fnCodeFindClear();
	for (var i = 0; i < columns.length; i++) {
		dataset.setColumn(0, columns[i], "");
	}
}

// 코드파인더 설정
this.fnSetCodeFinder = function(obj, value) {
	obj.form.CDTextBox.set_value(value);
	obj.form.fnCodeFindLoad();
}

// 객체 초기화
this.fnResetObjectValue = function(obj, dataset, columns) {
	obj.set_value("");
	for (var i = 0; i < columns.length; i++) {
		dataset.setColumn(0, columns[i], "");
	}
}

// 객체 설정
this.fnSetObjectValue = function(obj, value) {
	obj.set_value(value);
}
]]></Script>
    <Objects>
      <Dataset id="dsList" onvaluechanged="dsList_onvaluechanged"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DABPR_EDUCATION_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DABPR_EDUCATION_SAVE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="DS_CORP" type="STRING" size="256"/>
          <Column id="CD_EDU_TYPE" type="STRING" size="256"/>
          <Column id="CD_EDU_GUBUN" type="STRING" size="256"/>
          <Column id="FR_EDUCATION" type="STRING" size="256"/>
          <Column id="TO_EDUCATION" type="STRING" size="256"/>
          <Column id="DS_EDUCATION" type="STRING" size="256"/>
          <Column id="DS_EDU_ORGAN" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CORP"/>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_CORP.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_CORP"/>
      <BindItem id="item2" compid="divSearch.form.ccfCD_EDU_TYPE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_EDU_TYPE"/>
      <BindItem id="item3" compid="divSearch.form.ccfCD_EDU_GUBUN.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_EDU_GUBUN"/>
      <BindItem id="item4" compid="divSearch.form.ctclFR_EDUCATION" propid="value" datasetid="dsSearch" columnid="FR_EDUCATION"/>
      <BindItem id="item5" compid="divSearch.form.ctclTO_EDUCATION" propid="value" datasetid="dsSearch" columnid="TO_EDUCATION"/>
      <BindItem id="item6" compid="divSearch.form.txtDS_EDUCATION" propid="value" datasetid="dsSearch" columnid="DS_EDUCATION"/>
      <BindItem id="item7" compid="divSearch.form.txtDS_EDU_ORGAN" propid="value" datasetid="dsSearch" columnid="DS_EDU_ORGAN"/>
    </Bind>
  </Form>
</FDL>
