<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="DWA_SILHENG" width="1280" height="720" titletext="현장겸직권한요청" onload="DWA_SILHENG_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrollbartype="auto auto">
          <Layouts>
            <Layout>
              <Static id="stabu" taborder="0" text="사용자" left="0.0" top="10.0" width="79.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfUser" CDTextWidth="70" taborder="1" left="stabu:0.0" top="10.0" width="200" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DWZPR_SITEGYUMJIK_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DWZPR_SITEGYUMJIK_SAVE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="ID_USER" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="ID_USER"/>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.DWA_SILHENG_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
	// 	this.FormBtns.Add.set_enable(false);
	// 	this.FormBtns.Del.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	//this.btn1 = this.gfnFormButtonAdd("Detail", "fnDetail1");
	this.btnAppr = this.gfnFormButtonAdd("btnAppr", "fnApprChk");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfUser = this.divSearch.form.ccfUser;
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.ccfUser.CodeFindName = "DZX_CFUSERBYCORP";
	this.ccfUser.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	this.gfnGridInit(this.dxGrid, this.dsList, "DW", "DWZ_SITEGYUMJIK");
	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
	this.dxGrid.setEventHandler("onheadclick", this.fnGrid_onheadclick, this); 	
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("ID_USER", "string");

	this.dsSave = new Dataset();
	this.dsSave.addColumn("TY_WRK", "string");
	this.dsSave.addColumn("ID_USER", "string");
	this.dsSave.addColumn("CD_DEPT", "string");
	this.dsSave.addColumn("CD_ROLE", "string");
	this.dsSave.addColumn("YN_APPR", "string");
	
	if(!this.gfnIsNull(this.getOwnerFrame().ID_USER)){
		this.ccfUser.form.DSTextBox.set_value(this.getOwnerFrame().DS_HNAME); 
		this.ccfUser.form.CDTextBox.set_value(this.getOwnerFrame().ID_USER);
		
		this.FormBtns.Select.click();
	}else{
		this.ccfUser.form.DSTextBox.set_value(this.AuthClient.DS_HNAME); 
		this.ccfUser.form.CDTextBox.set_value(this.AuthClient.ID_USER);
	}

	if(this.gfnIsNull(this.FormInfo.GR_SEARCH) || nexacro.toNumber(this.FormInfo.GR_SEARCH) >= 7) {
		this.ccfUser.set_enable(false);
	}
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if(!this.fnValidate()) return;

	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "ID_USER", this.ccfUser.form.CDTextBox.value);
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	var nrow = this.gfnGridAdd(this.dxGrid,"");
	this.dsList.setColumn(nrow, "CD_ROLE", "R51");
	this.dsList.setColumn(nrow, "NM_ROLE", "현장");
	this.dsList.setColumn(nrow, "YN_APPR", "N");
	this.dsList.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
		// 그리드 필수항목 체크
	if (!this.gfnGridValidate(this.dxGrid)) return;	

	this.dxGrid.updateToDataset();
	
	this.dsSave.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		
		switch(flag) {
			case "I":
			case "U":
			case "D":
				var nrow = this.dsSave.addRow();
				this.dsSave.setColumn(nrow, "TY_WRK", flag);
				this.dsSave.setColumn(nrow, "ID_USER", this.dsList.getColumn(i, "ID_USER"));
				this.dsSave.setColumn(nrow, "CD_DEPT", this.dsList.getColumn(i, "CD_DEPT"));
				this.dsSave.setColumn(nrow, "CD_ROLE", this.dsList.getColumn(i, "CD_ROLE"));
				this.dsSave.setColumn(nrow, "YN_APPR", this.dsList.getColumn(i, "YN_APPR"));
			break;
		}
	}

	if (this.dsSave.rowcount == 0) return;
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	/*var inData      = "insert=dsInsert update=dsUpdate delete=dsDelete";*/
	var inData      = "save=dsSave";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
	
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}
/************************************************************************
 * 확장버튼 이벤트
 ************************************************************************/
 this.fnApprChk = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	var msg = "승인하시겠습니까?";
			
	this.gfnConfirm(msg, "fnAppr");
}

 this.fnAppr = function(strId, val){
	if(val == true)
	{
		if (!this.gfnGridValidate(this.dxGrid)) return;	
		
		this.dxGrid.updateToDataset();
		
		this.dsSave.clearData();
		
		for (var i = 0; i < this.dsList.rowcount; i++) {
			if(this.dsList.getColumn(i, "TY_CHECK") == "Y")
			{
				var nrow = this.dsSave.addRow();
				this.dsSave.setColumn(nrow, "TY_WRK", "A");
				this.dsSave.setColumn(nrow, "ID_USER", this.dsList.getColumn(i, "ID_USER"));
				this.dsSave.setColumn(nrow, "CD_DEPT", this.dsList.getColumn(i, "CD_DEPT"));
				this.dsSave.setColumn(nrow, "CD_ROLE", this.dsList.getColumn(i, "CD_ROLE"));
				this.dsSave.setColumn(nrow, "YN_APPR", this.dsList.getColumn(i, "YN_APPR"));
			}
		}
		
		if (this.dsList.rowcount == 0) return;
			
		var strSvcId    = "save";
		var strSvcType  = "save";
		var inProc		= "_dsProc";
		var inData      = "save=dsSave";
		var outData     = "";
		var strArg      = "";
		var callBackFnc = "fnCallback";
		
		this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
							strSvcType , 	// transaction을 요청할 구분
							inProc,			// Procedure 정보 Dataset 이름
							inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
							outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
							strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
							callBackFnc); // 통신방법 정의 [생략가능]
	}
 }
/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnValidate = function() {
	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
	
	}else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
};

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if(id == "ccfUser"){
		dsUserParam.setColumn(nrow, "CD_CORP", this.AuthClient.CD_CORP);
	}
	return true;
};

this.fnAfterCDTextChanged = function(id, codeFindData) {
	if(id == "ccfCorp") {
		// 현장코드 변경시 초기화
		this.ccfUser.form.fnCodeFindClear();
	}
}

this.fnGrid_BeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	return true;
}
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 this.fnGrid_onheadclick = function(objGrid, e) {
	var cell = this._gfnGridGetBodyCellIndex(objGrid, e.cell);	
	var colnm = this.gfnGridGetBindColumnNameByIndex(objGrid, cell);
	// 체크박스 클릭한 경우.
	if(colnm == "TY_CHECK") {
		var sVal = objGrid.getCellProperty("head", e.cell, "text");
		var sChk;
		if (sVal == "1") {
			objGrid.setCellProperty("head", e.cell, "text", "0");
			sChk="0";
		} else {
			objGrid.setCellProperty("head", e.cell, "text", "1");
			sChk="1";
		}
		
		for(var i = 0; i < this.dsList.rowcount; i++)
		{
			if(this.dsList.getColumn(i, "YN_CHKVIEW") == "Y")
			{
				this.dsList.setColumn(i, "TY_CHECK", sChk);
			}
		}
	}
	// 체크박스를 클릭한게 아니라면 기존의 공통의 그리드 헤드 클릭 이벤트를 탄다.
	else {
		this.gfnGrid_onheadclick(objGrid, e);
	}
};
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		// 폼상태 초기화
		this.gfnSetFormStatus(this);	
		this.gfnGridClear(this.dxGrid);
	}
};

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};
]]></Script>
    <Bind>
      <BindItem id="item1" compid="divSearch.form.ccfUser.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="ID_USER"/>
    </Bind>
  </Form>
</FDL>
