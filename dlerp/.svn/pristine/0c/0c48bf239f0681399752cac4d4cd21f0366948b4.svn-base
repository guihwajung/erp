<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="신규발주서작성" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="78.0" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static id="staCD_SITE" taborder="0" text="현장코드" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_SITE" CodeFindName="DZX_CFSITE" CDTextWidth="80" taborder="1" FitToContents="true" top="10.0" width="300" height="24.0" AutoSet="false" url="cmm::cmmCodeFind.xfdl" left="staCD_SITE:0.0"/>
              <Static id="sta01" taborder="2" text="업체코드" top="staCD_SITE:10.0" width="92.0" height="24.0" textDecoration="none" left="ccfCD_SITE:0.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_VENDOR" CDTextWidth="70" taborder="3" left="sta01:0.0" top="10.0" width="300" height="24.0" onclick="Common_onclick" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DZX_INSSITE_CODEFIND"/>
              <Div id="ctclYM_WORK" taborder="4" left="ccfCD_VENDOR:0.0" top="10.0" width="80" height="24.0" url="cmm::cmmCalMM.xfdl"/>
              <Static id="staYM_WORK" taborder="5" text="기준년월" left="ctclYM_WORK:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="1" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	this.fnSetCombo();
	
	var today = this.gfnGetDate();
	this.dsSearch.setColumn(0, "YM_WORK", today.substr(0,6));
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	this.FormBtns.Add.set_enable(false);
	this.FormBtns.Del.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnSdinsItemCopy = this.gfnFormButtonAdd("btnSdinsItemCopy", "fnSdinsItemCopy");	// 단가복사
	this.btnSdinsitemCrt = this.gfnFormButtonAdd("btnSdinsitemCrt", "fnSdinsitemCrt");		// 단가생성
	this.btnConfirm = this.gfnFormButtonAdd("btnConfirm", "fnConfirm");		// 단가확정
	this.btnCancel = this.gfnFormButtonAdd("btnCancel", "fnCancel");		// 단가취소
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {	
	this.ccfCD_SITE = this.divSearch.form.ccfCD_SITE;
	this.ccfCD_VENDOR = this.divSearch.form.ccfCD_VENDOR;

	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {

	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DM", "DMA_SDINSITEM");
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("YM_WORK", "string");
	this.dsSelect.addColumn("CD_SITE", "string");
	this.dsSelect.addColumn("CD_VENDOR", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "YM_WORK", this.dsSearch.getColumn(0, "YM_WORK"));
	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsSelect.setColumn(0, "CD_VENDOR", this.dsSearch.getColumn(0, "CD_VENDOR"));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	this.fnSaveAction("gridSave");
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;
	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg, strArg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
	}
	else if(svcID == "conf") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};


this.fnSetCombo = function() {
};

this.fnConfirm = function() {
	this.fnSaveAction("save");
}

this.fnCancel = function() {
	this.fnSaveAction("cancel");
}


this.fnSaveAction = function(strIdVal) {		
	if (this.dsList.rowcount == 0) { return false; }
	
	var strIdValTxt = "확정";
	if(strIdVal == "gridSave"){ 
		strIdValTxt = "저장"; 
		if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	}else if(strIdVal == "cancel"){ 
		strIdValTxt = "확정취소"; 
	}
	
	this.gfnConfirm(strIdValTxt + " 하시겠습니까?", function(strId, val){
		if(val){
			this.dsConfirm = new Dataset();
			this.dsConfirm.addColumn("TY_WRK", "string");
			this.dsConfirm.addColumn("YN_END", "string");
			this.dsConfirm.addColumn("UP_ITEM", "string");
			this.dsConfirm.addColumn("RM_BIGO", "string");		
			
			this.dsConfirm.addColumn("YM_SDINS", "string");
			this.dsConfirm.addColumn("CD_SITE", "string");
			this.dsConfirm.addColumn("CD_VENDOR", "string");
			this.dsConfirm.addColumn("CD_ITEM", "string");

			this.dsConfirm.clearData();
			
			if(strIdVal == "gridSave"){
				for (var i = 0; i < this.dsList.rowcount; i++) {
					var flag = this.gfnGetFlag(this.dsList, i);
					switch(flag) {
						case "I":
						case "U":
						case "D":
							var nrow = this.dsConfirm.addRow();						
							this.dsConfirm.setColumn(nrow, "TY_WRK", 	flag);
							this.dsConfirm.setColumn(nrow, "YN_END", 	this.dsList.getColumn(i, "YN_END"));
							this.dsConfirm.setColumn(nrow, "UP_ITEM", 	this.dsList.getColumn(i, "UP_ITEM"));
							this.dsConfirm.setColumn(nrow, "RM_BIGO", 	this.dsList.getColumn(i, "RM_BIGO"));
							this.dsConfirm.setColumn(nrow, "YM_SDINS", 	this.dsList.getColumn(i, "YM_SDINS"));
							this.dsConfirm.setColumn(nrow, "CD_SITE", 	this.dsList.getColumn(i, "CD_SITE"));
							this.dsConfirm.setColumn(nrow, "CD_VENDOR", this.dsList.getColumn(i, "CD_VENDOR"));	
							this.dsConfirm.setColumn(nrow, "CD_ITEM", 	this.dsList.getColumn(i, "CD_ITEM"));	
							break;
					}
				}			
			}else{						
				var nrow = this.dsConfirm.addRow();
				var ynEnd = "N";
				
				if(strIdVal == "save"){ ynEnd = "Y" }
				
				this.dsConfirm.setColumn(nrow, "TY_WRK",	"U");
				this.dsConfirm.setColumn(nrow, "YN_END", 	ynEnd);
				this.dsConfirm.setColumn(nrow, "YM_SDINS", 	this.dsSelect.getColumn(0, "YM_WORK"));
				this.dsConfirm.setColumn(nrow, "CD_SITE", 	this.dsSelect.getColumn(0, "CD_SITE"));
				this.dsConfirm.setColumn(nrow, "CD_VENDOR", this.dsSelect.getColumn(0, "CD_VENDOR"));		
			}

			if (this.dsConfirm.rowcount == 0) return;
				
			var strSvcId    = "conf";
			var strSvcType  = "save";
			var inProc		= "_dsProc";
			var inData      = "conf=dsConfirm";
			var outData     = "";
			var strArg      = "";
			var callBackFnc = "fnCallback";
			
			this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
								strSvcType , 	// transaction을 요청할 구분
								inProc,			// Procedure 정보 Dataset 이름
								inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
								outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
								strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
								callBackFnc); // 통신방법 정의 [생략가능]
		}
	});
				
	
}

// 단가복사 팝업
this.fnSdinsItemCopy = function() {	
	var param = {};
	// 화면 오픈. 
	// CD_MODULE은 보통 같은 모듈에서 호출하는 경우가 많으니 this.FormInfo.CD_MODULE 사용
	// 타 모듈 화면 호출시 지정할것.
	
	this.gfnFormOpen("DMZ", "DMA_SDINSITEM_COPY", "fnSdinsItemCopyCallback", param, '300', '300');
}

this.fnSdinsItemCopyCallback = function(svcID, value) {
	if(value){
		this.gfnAlert("생성되었습니다.");
		this.FormBtns.Select.click();
	}
};

// 단가생성 팝업
this.fnSdinsitemCrt = function() {	
	var param = {};
	// 화면 오픈. 
	// CD_MODULE은 보통 같은 모듈에서 호출하는 경우가 많으니 this.FormInfo.CD_MODULE 사용
	// 타 모듈 화면 호출시 지정할것.
	
	this.gfnFormOpen("DMZ", "DMA_SDINSITEM_CRT", "fnSdinsitemCrtCallback", param, '500', '700');
}

this.fnSdinsitemCrtCallback = function(svcID, value) {
	if(value){
		this.gfnAlert("생성되었습니다.");
		this.FormBtns.Select.click();
	}
};

this.inZero = function(p1,p2){
	var zero ="";
	for(var i=0; i<p2;i++) zero +="0";
	return zero.toString().concat(p1).match(new RegExp("\\d{"+p2+"}$"));
};]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DMAPR_SDINSITEM_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo</Col>
            <Col id="SP">DZXPR_COMBO_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">conf</Col>
            <Col id="SP">DMAPR_SDINSITEM_SAVE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="CD_VENDOR" type="STRING" size="256"/>
          <Column id="YM_WORK" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="YM_WORK"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsYN_END">
        <ColumnInfo>
          <Column id="Column0" type="STRING" size="256"/>
          <Column id="Column1" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_VENDOR.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_VENDOR"/>
      <BindItem id="item2" compid="divSearch.form.ctclYM_WORK.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_WORK"/>
    </Bind>
  </Form>
</FDL>
