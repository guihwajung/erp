<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="작업지시관리" onload="form_onload">
    <Layouts>
      <Layout height="720" mobileorientation="landscape" width="1280">
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none" text="">
          <Layouts>
            <Layout>
              <Radio id="crdoCOLUMN" taborder="2" left="0.0" top="10.0" height="24.0" innerdataset="dsCOLUMN" direction="vertical" fittocontents="width" width="230" codecolumn="CODE" datacolumn="VALUE" value="A" text="전체" index="0"/>
              <Static id="staCD_SITE" taborder="1" text="현장코드" left="crdoCOLUMN:0.0" top="10.0" width="92.0" height="24.0" textDecoration="none" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_SITE" CodeFindName="DZX_CFSITE" CDTextWidth="80" taborder="0" left="staCD_SITE:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staCD_SITE00" taborder="5" text="지시일자" left="ccfCD_SITE:0.0" top="10.0" width="92.0" height="24.0" textDecoration="none" cssclass="sta_WF_SchLabel"/>
              <Calendar id="cal_STYMD" taborder="3" left="staCD_SITE00:0.0" top="10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" value="" enable="true"/>
              <Static id="sta00" taborder="6" text="~" left="cal_STYMD:0.0" top="10.0" width="30.0" height="24.0" cssclass="sta_WF_AC"/>
              <Calendar id="cal_ENYMD" taborder="4" left="sta00:0.0" top="10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" value="" enable="true"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="1" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0" oncelldblclick="divData_objGrid_oncelldblclick"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	var today = this.gfnGetDate();
	
	this.dsSearch.setColumn(0, "YN_BONSA", "Y");
	this.dsSearch.setColumn(0, "DT_FR", this.gfnAddMonth(today,-1));
	this.dsSearch.setColumn(0, "DT_TO", today);
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	this.FormBtns.Add.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {	
	
	this.btnWork = this.gfnFormButtonAdd("btnWork", "fnWorkOrder");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {	

	this.dxGrid = this.divData.form.objGrid;
	// BUTTON, BUTTON-IN 처리
	this.dxGrid.ExpandUp = "fnGrid_ExpandUp";
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {

	this.gfnGridInit(this.dxGrid, this.dsList, "DC", "DCH_WORKORDER");
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_SITE", "string");
	this.dsSelect.addColumn("TY_STATUS", "string");
	this.dsSelect.addColumn("DT_FR", "string");
	this.dsSelect.addColumn("DT_TO", "string");
	this.dsSelect.addColumn("YN_BONSA", "string");
	
	this.dsDelete = new Dataset();
	this.dsDelete.addColumn("NO_WORK", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;

	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsSelect.setColumn(0, "TY_STATUS", this.dsSearch.getColumn(0, "TY_STATUS"));
	this.dsSelect.setColumn(0, "DT_FR", this.dsSearch.getColumn(0, "DT_FR"));
	this.dsSelect.setColumn(0, "DT_TO", this.dsSearch.getColumn(0, "DT_TO"));
	this.dsSelect.setColumn(0, "YN_BONSA", this.dsSearch.getColumn(0, "YN_BONSA"));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc);   // 통신방법 정의 [생략가능]
			
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	var param = {};
	param.YN_BONSA 	= this.dsSearch.getColumn(this.dsSearch.rowposition, "YN_BONSA");
	// 화면 오픈. 
	// CD_MODULE은 보통 같은 모듈에서 호출하는 경우가 많으니 this.FormInfo.CD_MODULE 사용
	// 타 모듈 화면 호출시 지정할것.
	this.gfnFormOpenNonAuth("DCH", "DCH_WORKORDER_REQUEST", "fnWorkOrder_callback", param, 850, 770);
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
 
this.fnSave = function() {
	this.dsDelete.clearData();
	
	var dsCnt = this.dsList.getRowCount();
	for(var i = 0; i < dsCnt; i++)
	{
		if(this.gfnGetFlag(this.dsList, i) != "D") continue;
		var nrow = this.dsDelete.addRow();
		this.dsDelete.setColumn(nrow,"NO_WORK",this.dsList.getColumn(i,"NO_WORK"));
	};
	
	if(this.dsDelete.getRowCount() == 0) return;
	
	var strSvcId    = "delete";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "delete=dsDelete";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}


/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;
	
// 	if (this.gfnIsNull(this.dsSearch.getColumn(0,"CD_SITE"))) {
// 		validate = false;
// 		// Alert후 실행할 처리
// 		this.fnVaidateCallback = function() {
// 			this.ccfCD_SITE.form.CDTextBox.setFocus();
// 		}
// 		this.gfnAlert("현장코드를 입력하세요.", "fnVaidateCallback");
// 	}
	
	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
 /*
 콜백
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		if (errorCode == 0) {
			this.gfnGridAfterSelect(this.dxGrid);
		}
		else {
			this.gfnAlert(errorMsg);
		}	
	}
	
	if(svcID == "delete") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		}
		else {
			this.gfnAlert(errorMsg);
		}
	}
	
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};

this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		this.gfnSetFormStatus(this);
		this.gfnGridClear(this.dxGrid);
	}
};

this.fnGrid_RowCellChanged = function(obj:nexacro.Grid,e:nexacro.GridSelectEventInfo)
{
	 if ((obj.oldrow > -1 && obj.oldrow == e.row)
		|| (obj.oldrow == -1 && e.oldrow != e.row)) {
		obj.oldrow = -1;
	}
}
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
 this.fnWorkOrder = function(obj,e)
 {
	var param = {};

 	param.NO_WORK 	= this.dsList.getColumn(this.dsList.rowposition, "NO_WORK");
	param.YN_BONSA 	= this.dsSearch.getColumn(this.dsSearch.rowposition, "YN_BONSA");

	// 화면 오픈. 
	// CD_MODULE은 보통 같은 모듈에서 호출하는 경우가 많으니 this.FormInfo.CD_MODULE 사용
	// 타 모듈 화면 호출시 지정할것.
//	this.gfnFormOpenNonAuth("DCH", "DCH_WORKORDER_REQUEST", "fnWorkOrder_callback", param, 850, 700);
	this.gfnFormOpen("DCH", "DCH_WORKORDER_REQUEST", "fnWorkOrder_callback", param, 850, 770);
 };
 
 this.fnWorkOrder_callback = function(id,vel)
 {
	if(vel) this.FormBtns.Select.click();
 };
 
this.divData_objGrid_oncelldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	this.fnWorkOrder();
};

this.fnGrid_ExpandUp = function(obj:nexacro.Grid,e:nexacro.GridMouseEventInfo)
{
	if(this.gfnIsNull(this.dsList.getColumn(this.dsList.rowposition, "NO_WORK"))) return;
	
	var fileManager = {};
	fileManager.CD_GUBUN = "DC55";
	fileManager.CD_DIR = [this.dsList.getColumn(this.dsList.rowposition, "NO_WORK")];
	fileManager.IS_READONLY = this.dsList.getColumn(this.dsList.rowposition, "TY_STATUS") == 6 ? true : false;
	this.gfnFileManager(fileManager, "fnFileCallback");
};
]]></Script>
    <Objects>
      <Dataset id="dsCOLUMN">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="VALUE">전체</Col>
            <Col id="CODE"/>
          </Row>
          <Row>
            <Col id="VALUE">작업요청</Col>
            <Col id="CODE">0</Col>
          </Row>
          <Row>
            <Col id="CODE">1</Col>
            <Col id="VALUE">요청반려</Col>
          </Row>
          <Row>
            <Col id="CODE">2</Col>
            <Col id="VALUE">요청확인</Col>
          </Row>
          <Row>
            <Col id="CODE">4</Col>
            <Col id="VALUE">검수요청</Col>
          </Row>
          <Row>
            <Col id="CODE">5</Col>
            <Col id="VALUE">검수반려</Col>
          </Row>
          <Row>
            <Col id="CODE">6</Col>
            <Col id="VALUE">검수완료</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsList" cancolumnchange="dsList_cancolumnchange"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DCHPR_WORKORDER_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">delete</Col>
            <Col id="SP">DCHPR_WORKORDER_REQUEST_DELETE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="TY_STATUS" type="STRING" size="256"/>
          <Column id="DT_FR" type="STRING" size="256"/>
          <Column id="DT_TO" type="STRING" size="256"/>
          <Column id="DS_SITE" type="STRING" size="256"/>
          <Column id="YN_BONSA" type="STRING" size="1"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_SITE"/>
            <Col id="TY_STATUS"/>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.crdoCOLUMN" propid="value" datasetid="dsSearch" columnid="TY_STATUS"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item2" compid="divSearch.form.cal_STYMD" propid="value" datasetid="dsSearch" columnid="DT_FR"/>
      <BindItem id="item3" compid="divSearch.form.cal_ENYMD" propid="value" datasetid="dsSearch" columnid="DT_TO"/>
    </Bind>
  </Form>
</FDL>
