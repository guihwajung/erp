<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="DWA_SILHENG" width="1280" height="720" titletext="기성실적총괄표" onload="DWA_SILHENG_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static id="sta00" taborder="4" text="현장코드" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfSite" CodeFindName="DZX_CFSITE" CDTextWidth="70" taborder="0" left="sta00:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Combo id="cboNO_DGR" taborder="5" left="ccfSite:0.0" top="10.0" width="100" height="24.0" innerdataset="dsNO_DGR" datacolumn="DS_DGR" codecolumn="NO_DGR" value="" index="-1"/>
              <Static id="staYM_WORK" taborder="1" text="작업년월" left="cboNO_DGR:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYM_WORK" taborder="3" left="staYM_WORK:0.0" top="10.0" width="80" height="24.0" url="cmm::cmmCalMM.xfdl"/>
              <CheckBox id="cchkYN_TMON" taborder="2" text="금회기성" left="ctclYM_WORK:0.0" top="10.0" width="70" height="24.0" onchanged="divSearch_cchkAM_PREPAY_onchanged" falsevalue="N" truevalue="Y" value="Y"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0" oncelldblclick="divData_objGrid_oncelldblclick"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList" onvaluechanged="dsList_onvaluechanged"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DWBPR_EVALARSLTTB_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo</Col>
            <Col id="SP">DWBPR_HDGISUNGMONTH_MAX_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="YM_WORK" type="STRING" size="256"/>
          <Column id="NO_DGR" type="STRING" size="256"/>
          <Column id="YN_TMON" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_SITE"/>
            <Col id="YM_WORK"/>
            <Col id="NO_DGR"/>
            <Col id="YN_TMON"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsNO_DGR"/>
      <Dataset id="dsChangeColumn">
        <ColumnInfo>
          <Column id="AM_PREPAY" type="STRING" size="256"/>
          <Column id="AM_PAYSCHD" type="STRING" size="256"/>
          <Column id="AM_GONGJAE" type="STRING" size="256"/>
          <Column id="AM_REAL_TOT" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="AM_PREPAY">AM_PREPAY_PROV|AM_PREPAY_VAT|AM_PREPAY_TOT</Col>
            <Col id="AM_PAYSCHD">AM_PAYSCHD_TAX|AM_PAYSCHD_TXFR|AM_PAYSCHD_PROV|AM_PAYSCHD_VAT|AM_PAYSCHD_TOT</Col>
            <Col id="AM_GONGJAE">AM_GONGJAE1|AM_GONGJAE3|AM_GONGJAE5|AM_GONGJAE_TOT|AM_GONGJAE2|AM_GONGJAE3VAT|AM_GONGJAE4|AM_GONGJAE6|AM_GONGJAE6VAT</Col>
            <Col id="AM_REAL_TOT">AM_REAL_TOT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsAM_GONGJAE">
        <ColumnInfo>
          <Column id="AM_GONGJAE1" type="INT" size="256"/>
          <Column id="AM_GONGJAE3" type="INT" size="256"/>
          <Column id="AM_GONGJAE5" type="INT" size="256"/>
          <Column id="AM_GONGJAE_TOT" type="INT" size="256"/>
          <Column id="AM_GONGJAE2" type="INT" size="256"/>
          <Column id="AM_GONGJAE3VAT" type="INT" size="256"/>
          <Column id="AM_GONGJAE4" type="INT" size="256"/>
          <Column id="AM_GONGJAE6" type="INT" size="256"/>
          <Column id="AM_GONGJAE6VAT" type="INT" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.DWA_SILHENG_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();	
	
	if(!this.gfnIsNull(this.getOwnerFrame().CD_SITE) && !this.gfnIsNull(this.getOwnerFrame().YM_WORK))
	{
		this.dsSearch.setColumn(0,"CD_SITE", this.getOwnerFrame().CD_SITE);
		this.dsSearch.setColumn(0,"YM_WORK", this.getOwnerFrame().YM_WORK);
		this.ccfSite.form.DSTextBox.set_value(this.getOwnerFrame().CD_SITE);
		
	}else{
		var today = this.gfnGetDate();
		this.dsSearch.setColumn(0,"YM_WORK",today.substr(0,6));
	}
	this.dsSearch.setColumn(0,"YN_TMON", "Y");
	// 기성차수 조회조건 보이기/숨기기
	this.YN_DGR = this.gfnGetConfig("DW" , "YN_DGR");
	
	if(this.YN_DGR != "Y")
	{
		this.divSearch.form.cboNO_DGR.set_width(0);
		this.divSearch.form.cboNO_DGR.set_readonly(true);
		this.divSearch.form.resetScroll();
	}
	else if(this.YN_DGR == "Y")
	{
		this.divSearch.form.cboNO_DGR.set_width(100);
		this.divSearch.form.cboNO_DGR.set_readonly(false);
		this.divSearch.form.resetScroll();
	}
	
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
// 	this.FormBtns.Add.set_enable(false);
// 	this.FormBtns.Del.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnHdGisungMonthDtl = this.gfnFormButtonAdd("btnHdGisungMonthDtl", "fnHdGisungMonthDtl");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfSite = this.divSearch.form.ccfSite;
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {

	this.gfnGridInit(this.dxGrid, this.dsList, "DW", "DWB_EVALARSLTTB", "DS_COST", "GR_COST");
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("TY_WRK", "string");
	this.dsSelect.addColumn("CD_SITE", "string");
	this.dsSelect.addColumn("YM_WORK", "string");
	this.dsSelect.addColumn("NO_DGR", "string");
	this.dsSelect.addColumn("YN_TMON", "string");
	this.dsSelect.addColumn("DS_CONTMETHOD", "string");	
	
	this.dsCombo = new Dataset();
	this.dsCombo.addColumn("CD_SITE", "string");
	this.dsCombo.addColumn("YM_WORK", "string");
	this.dsCombo.addColumn("DS_CONTMETHOD", "string");	
	
};

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if(!this.fnSelectValidate())return;
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "TY_WRK", "Q");
	this.dsSelect.setColumn(0, "YM_WORK", this.dsSearch.getColumn(0, "YM_WORK").substr(0,6));
	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsSelect.setColumn(0, "NO_DGR", this.dsSearch.getColumn(0, "NO_DGR"));
	this.dsSelect.setColumn(0, "YN_TMON", this.dsSearch.getColumn(0, "YN_TMON"));
	if(!this.gfnIsNull(this.getOwnerFrame().DS_CONTMETHOD)){
		this.dsSelect.setColumn(0, "DS_CONTMETHOD", this.getOwnerFrame().DS_CONTMETHOD);
	}else{
		this.dsSelect.setColumn(0, "DS_CONTMETHOD", this.FormInfo.DS_PARAM);
	}

	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	//this.gfnGridAdd(this.dxGrid);
};

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	//this.gfnGridDel(this.dxGrid);
};

/*
 *	저장 버튼
 */
this.fnSave = function() {
	
};

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
this.fnSelectValidate = function(){
	if(this.gfnIsNull(this.dsSearch.getColumn(0, "CD_SITE"))){
		this.gfnAlert("현장코드를 입력하세요.");
		return false;
	}else if(this.gfnIsNull(this.dsSearch.getColumn(0, "YM_WORK"))){
		this.gfnAlert("작업년월을 입력하세요.");
		return false;
	}
	return true;
};
/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {	
		this.gfnGridAfterSelect(this.dxGrid);			
	}
};

this.fnCallbackCombo = function(svcID, errorCode, errorMsg)
{
	if(svcID == "combo") {
		this.divSearch.form.cboNO_DGR.set_index(0);	
	}
};

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		// 폼상태 초기화
		this.gfnSetFormStatus(this);	
		this.gfnGridClear(this.dxGrid);
	}
};

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
	
	if(e.columnid == "CD_SITE" || e.columnid == "YM_WORK"){
	  this.fnSetCombo();
   }
};

this.fnSetCombo = function() {
	
	this.dsCombo.clearData();
	
	this.dsCombo.addRow();
	this.dsCombo.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsCombo.setColumn(0, "YM_WORK", this.dsSearch.getColumn(0, "YM_WORK").substr(0,6));
	if(!this.gfnIsNull(this.getOwnerFrame().DS_CONTMETHOD)){
		this.dsCombo.setColumn(0, "DS_CONTMETHOD", this.getOwnerFrame().DS_CONTMETHOD);
	}else{
		this.dsCombo.setColumn(0, "DS_CONTMETHOD", this.FormInfo.DS_PARAM);
	}
	
	var strSvcId    = "combo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "combo=dsCombo";
	var outData     = "dsNO_DGR=combo0";
	var strArg      = "";
	var callBackFnc = "fnCallbackCombo";

	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};

this.fnHdGisungMonthDtl = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	var param = {};
	var rowposition = this.dsList.rowposition;

	param.CD_SITE = this.dsSearch.getColumn(0, "CD_SITE");
	param.DS_SITE = this.divSearch.form.ccfSite.form.DSTextBox.text;
	param.YM_WORK = this.dsSearch.getColumn(0, "YM_WORK");
		if(!this.gfnIsNull(this.getOwnerFrame().DS_CONTMETHOD)){
				param.DS_CONTMETHOD = this.getOwnerFrame().DS_CONTMETHOD;
		}else{
				param.DS_CONTMETHOD = this.FormInfo.DS_PARAM;
		}
	
	if(rowposition > -1){
		param.NO_HADOCONT = this.dsList.getColumn(rowposition, "NO_HADOCONT");
		param.DS_HADOCONT = this.dsList.getColumn(rowposition, "DS_HADOCONT");
		param.CD_VENDOR = this.dsList.getColumn(rowposition, "CD_VENDOR");
		param.DS_VENDOR = this.dsList.getColumn(rowposition, "DS_VENDOR");
	}
	param.NO_DGR = this.dsSearch.getColumn(0, "NO_DGR");
	
	this.gfnFormOpen("DWB", "DWB_HDGISUNGMONTH_DETAIL", "", param); 
};
this.divData_objGrid_oncelldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	this.fnHdGisungMonthDtl();
};
]]></Script>
    <Bind>
      <BindItem id="item1" compid="divSearch.form.ctclYM_WORK.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_WORK"/>
      <BindItem id="item0" compid="divSearch.form.ccfSite.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item2" compid="divSearch.form.cboNO_DGR" propid="value" datasetid="dsSearch" columnid="NO_DGR"/>
      <BindItem id="item3" compid="divSearch.form.cchkYN_TMON" propid="value" datasetid="dsSearch" columnid="YN_TMON"/>
    </Bind>
  </Form>
</FDL>
