<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="퇴직연금예치금" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0" top="0" height="46.0" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static id="staYM_SALARY" taborder="3" text="급여년월" left="0.0" top="10.0" width="144.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYM_SALARY" taborder="4" left="staYM_SALARY:0.0" top="10.0" width="90" height="24.0" url="cmm::cmmCalMM.xfdl"/>
              <Static id="staCD_CORP" taborder="1" text="법인" left="ctclYM_SALARY:0.0" top="10.0" width="144.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_CORP" CDTextWidth="30" taborder="2" left="staCD_CORP:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staCD_CORP00" taborder="5" text="퇴직연금지급구분" left="ccfCD_CORP:0.0" top="10.0" width="144.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Combo id="cboQN_RETIREPENSION" taborder="4" left="staCD_CORP00:0.0" top="10.0" height="24.0" innerdataset="dsQN_RETIREPENSION" codecolumn="CODE" datacolumn="VALUE" width="100"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DAUPR_RETPENSION_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DAUPR_RETPENSION_SAVE</Col>
          </Row>
          <Row>
            <Col id="TARGET">execute</Col>
            <Col id="SP">DAUPR_RETPENSION_CREATE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="YM_SALARY" type="STRING" size="256"/>
          <Column id="QN_RETIREPENSION" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CORP"/>
            <Col id="YM_SALARY"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsQN_RETIREPENSION">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="VALUE">전체</Col>
          </Row>
          <Row>
            <Col id="CODE">6</Col>
            <Col id="VALUE">반기납</Col>
          </Row>
          <Row>
            <Col id="CODE">12</Col>
            <Col id="VALUE">정기납</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();	
	
	//급여년월 셋팅 - 당월
	var today = this.gfnGetDate().substring(0,6);
	this.divSearch.form.ctclYM_SALARY.form.TextBox.set_value(today);
	
	// 법인 셋팅
	this.divSearch.form.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);
	this.divSearch.form.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP);
};   

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
// 	this.FormBtns.Add.set_enable(false);
// 	this.FormBtns.Del.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnRetpensionCreate = this.gfnFormButtonAdd("RetpensionCreate", "fnRetpensionCreate", "자료생성");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;
	this.ctclYM_SALARY = this.divSearch.form.ctclYM_SALARY;
	this.cboQN_RETIREPENSION = this.divSearch.form.cboQN_RETIREPENSION;

	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.ccfCD_CORP.CodeFindName = "DAX_CFCORP_CODEFIND";
	this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_CORP.AfterCDTextChanged = "codefind_AfterCDTextChanged";	
	
	this.gfnGridInit(this.dxGrid, this.dsList, "DA", "DAU_RETPENSION");
	
	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("YM_SALARY", "string");
	this.dsSelect.addColumn("QN_RETIREPENSION", "string");
	this.dsSelect.addColumn("ID_USER", "string");

	this.dsSave = new Dataset();
	this.dsSave.addColumn("TY_SAVE", "string");
	this.dsSave.addColumn("ID_PERSON", "int");
	this.dsSave.addColumn("YM_SALARY", "string");
	this.dsSave.addColumn("CD_CORP", "string");
	this.dsSave.addColumn("ID_SABUN", "string");
	this.dsSave.addColumn("QN_RETIREPENSION", "int");
	this.dsSave.addColumn("DT_START", "string");
	this.dsSave.addColumn("DT_END", "string");
	this.dsSave.addColumn("QN_SALARY", "int");
	this.dsSave.addColumn("AM_SALARY1", "bigdecimal");
	this.dsSave.addColumn("AM_SALARY2", "bigdecimal");
	this.dsSave.addColumn("AM_SALARY3", "bigdecimal");
	this.dsSave.addColumn("AM_BONUS", "bigdecimal");
	this.dsSave.addColumn("AM_YEARLYPAY", "bigdecimal");
	this.dsSave.addColumn("AM_NEWYEAR", "bigdecimal");
	this.dsSave.addColumn("AM_CHUSEOK", "bigdecimal");
	this.dsSave.addColumn("AM_AVERAGE", "bigdecimal");
	this.dsSave.addColumn("AM_RETIREPENSION", "bigdecimal");
	this.dsSave.addColumn("AM_PAYMENT", "bigdecimal");
	this.dsSave.addColumn("DS_REMARK", "string");
	this.dsSave.addColumn("ID_USER", "string");

	this.dsExecute = new Dataset();
	this.dsExecute.addColumn("CD_CORP", "string");
	this.dsExecute.addColumn("YM_SALARY", "string");
	this.dsExecute.addColumn("QN_RETIREPENSION", "int");
	this.dsExecute.addColumn("ID_USER", "string");

}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if(!this.fnValidate()) return;
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));
	this.dsSelect.setColumn(0, "YM_SALARY", this.dsSearch.getColumn(0, "YM_SALARY"));
	this.dsSelect.setColumn(0, "QN_RETIREPENSION", this.dsSearch.getColumn(0, "QN_RETIREPENSION"));
	this.dsSelect.setColumn(0, "ID_USER", this.AuthClient.ID_USER);
	
	//trace(this.dsSelect.saveXML());
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	var nrow = this.gfnGridAdd(this.dxGrid); 
	this.dsList.setColumn(nrow, "YM_SALARY", this.ctclYM_SALARY.form.TextBox.value);	
	this.dsList.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
// 그리드 필수항목 체크
	if (!this.gfnGridValidate(this.dxGrid)) return;	

	this.dxGrid.updateToDataset();

	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
			case "D":
			case "U":
				var nrow = this.dsSave.addRow();
				this.dsSave.setColumn(nrow, "TY_SAVE", flag);alert(flag);
				this.dsSave.setColumn(nrow, "ID_PERSON", this.dsList.getColumn(i, "ID_PERSON"));
				this.dsSave.setColumn(nrow, "YM_SALARY", this.dsList.getColumn(i, "YM_SALARY"));
				this.dsSave.setColumn(nrow, "CD_CORP", this.dsList.getColumn(i, "CD_CORP"));
				this.dsSave.setColumn(nrow, "ID_SABUN", this.dsList.getColumn(i, "ID_SABUN"));
				this.dsSave.setColumn(nrow, "QN_RETIREPENSION", this.dsList.getColumn(i, "QN_RETIREPENSION"));
				this.dsSave.setColumn(nrow, "DT_START", this.dsList.getColumn(i, "DT_START"));
				this.dsSave.setColumn(nrow, "DT_END", this.dsList.getColumn(i, "DT_END"));
				this.dsSave.setColumn(nrow, "QN_SALARY", this.dsList.getColumn(i, "QN_SALARY"));
				this.dsSave.setColumn(nrow, "AM_SALARY1", this.dsList.getColumn(i, "AM_SALARY1"));
				this.dsSave.setColumn(nrow, "AM_SALARY2", this.dsList.getColumn(i, "AM_SALARY2"));
				this.dsSave.setColumn(nrow, "AM_SALARY3", this.dsList.getColumn(i, "AM_SALARY3"));
				this.dsSave.setColumn(nrow, "AM_BONUS", this.dsList.getColumn(i, "AM_BONUS"));
				this.dsSave.setColumn(nrow, "AM_YEARLYPAY", this.dsList.getColumn(i, "AM_YEARLYPAY"));
				this.dsSave.setColumn(nrow, "AM_NEWYEAR", this.dsList.getColumn(i, "AM_NEWYEAR"));
				this.dsSave.setColumn(nrow, "AM_CHUSEOK", this.dsList.getColumn(i, "AM_CHUSEOK"));
				this.dsSave.setColumn(nrow, "AM_AVERAGE", this.dsList.getColumn(i, "AM_AVERAGE"));
				this.dsSave.setColumn(nrow, "AM_RETIREPENSION", this.dsList.getColumn(i, "AM_RETIREPENSION"));
				this.dsSave.setColumn(nrow, "AM_PAYMENT", this.dsList.getColumn(i, "AM_PAYMENT"));
				this.dsSave.setColumn(nrow, "DS_REMARK", this.dsList.getColumn(i, "DS_REMARK"));
				this.dsSave.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
		}
	}
	
	if (this.dsSave.rowcount == 0) return;
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnValidate = function() {
/*	법인 필수 해지 2019.11.11 */
	if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
		this.fnVaidateCallback = function() {
			this.this.ccfCD_CORP.form.CDTextBox.setFocus();
		}
		this.gfnAlert("법인코드를 입력하세요.");
		return false;
	}

	
	if (this.gfnIsNull(this.ctclYM_SALARY.form.TextBox.value)) {
		this.fnVaidateCallback = function() {
			this.this.ctclYM_SALARY.form.TextBox.setFocus();
		}
		this.gfnAlert("급여년월을 입력하세요.");
		return false;
	}
	
	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	else if(svcID == "execute") {
		this.gfnAlert("생성이 완료되었습니다.");
		this.FormBtns.Select.click();
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
 
this.codefind_AfterCDTextChanged = function(id) {
	this.fnSearchInit();
}

this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if(id == "ccfCD_CORP") {
		dsUserParam.setColumn(nrow, "CD_CORP", this.AuthClient.CD_CORP);
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
	}
	return true;
}
 
this.fnGrid_BeforeUserDataSetParam = function(id, dsUserParam, nrow){
	//trace('grid_코드파인드_식별id: ' + id); 
	
	switch(id) {	
		
		case "DAX_CFBASEINFO_ALL":	//사번 DAX_CFBASEINFO 			
			if(this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {		
				this.ccfCD_CORP.form.CDTextBox.setFocus();
				this.gfnAlert("법인을 먼저 선택하시기 바랍니다.");
				return false;
			}
			
			dsUserParam.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
			dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
			dsUserParam.setColumn(nrow, "CD_DEPT", this.AuthClient.CD_DEPT);
			dsUserParam.setColumn(nrow, "YN_CORP", "N");
			dsUserParam.setColumn(nrow, "TY_RETIRE", "%");   // 재직구분
		break;

		default:
	}		
	
	return true;
};

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {
	if(e.pretext != e.posttext) {
		// 폼상태 초기화
		this.gfnSetFormStatus(this);	
		this.gfnGridClear(this.dxGrid);
	}
};

this.fnRetpensionCreate = function () {
	if (!this.fnValidate()) return;
	
	if (!this.gfnGridValidate(this.dxGrid)) return;	

	this.gfnConfirm("기초정보를 생성하시겠습니까? \n이전에 작업된 기초정보는 삭제됩니다.", "btnRetpensionCreate_callback");
}


this.btnRetpensionCreate_callback = function (strId, val) {
	if(val == true) {
		this.dxGrid.updateToDataset();
		
		this.dsExecute.clearData();
		
		var nrow = this.dsExecute.addRow();
					
		this.dsExecute.setColumn(nrow, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));
		this.dsExecute.setColumn(nrow, "YM_SALARY", this.dsSearch.getColumn(0, "YM_SALARY"));
		this.dsExecute.setColumn(nrow, "QN_RETIREPENSION", this.dsSearch.getColumn(0, "QN_RETIREPENSION"));
		this.dsExecute.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
		
	//if (this.dsList.rowcount == 0) {
	//		this.gfnAlert("기초정보 대상 데이터가 존재하지 않습니다.");
	//		return;
	//	}
		
		var strSvcId    = "execute";
		var strSvcType  = "save";
		var inProc		= "_dsProc";
		var inData      = "execute=dsExecute";
		var outData     = "";
		var strArg      = "";
		var callBackFnc = "fnCallback";
		
		this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
							strSvcType , 	// transaction을 요청할 구분
							inProc,			// Procedure 정보 Dataset 이름
							inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
							outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
							strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
							callBackFnc); // 통신방법 정의 [생략가능]
	
	}
}

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
	
	//this.divSearch.form.ccfCD_CORP.form.DSTextBox.set_value('');
};

]]></Script>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item1" compid="divSearch.form.ctclYM_SALARY.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_SALARY"/>
      <BindItem id="item2" compid="divSearch.form.cboQN_RETIREPENSION" propid="value" datasetid="dsSearch" columnid="QN_RETIREPENSION"/>
    </Bind>
  </Form>
</FDL>
