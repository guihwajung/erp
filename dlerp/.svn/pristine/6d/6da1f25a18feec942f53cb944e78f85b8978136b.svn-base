<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="SMS송신결과" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="staTY_SMS" taborder="0" text="구분" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Radio id="rdoTY_SMS" taborder="0" left="staTY_SMS:0.0" top="10.0" width="120" height="24.0" innerdataset="innerdataset" codecolumn="codecolumn" datacolumn="datacolumn" direction="vertical" index="1" text="MMS" value="M">
                <Dataset id="innerdataset">
                  <ColumnInfo>
                    <Column id="codecolumn" size="256"/>
                    <Column id="datacolumn" size="256"/>
                  </ColumnInfo>
                  <Rows>
                    <Row>
                      <Col id="codecolumn">S</Col>
                      <Col id="datacolumn">SMS</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">M</Col>
                      <Col id="datacolumn">MMS</Col>
                    </Row>
                  </Rows>
                </Dataset>
              </Radio>
              <Static id="staDT_TO" taborder="2" text="송신일자" left="rdoTY_SMS:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Calendar id="ctclDT_FR" taborder="3" left="staDT_TO:0.0" top="10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" value=""/>
              <Calendar id="ctclDT_TO" taborder="3" left="ctclDT_FR:0.0" top="10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" value="" visible="false"/>
              <Static id="staTEXT" taborder="2" text="※ 데이타량이 많은 관계로 지정일만 조회 가능합니다." left="ctclDT_FR:0.0" color="red" top="10.0" width="92.0" height="24.0" textDecoration="none underline" onclick="divSearch_staTEXT_onclick" cssclass="sta_WF_SchLabel"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	this.rdoTY_SMS.set_index(1);
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {		
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.rdoTY_SMS = this.divSearch.form.rdoTY_SMS;	// 구분
	this.ctclDT_FR = this.divSearch.form.ctclDT_FR; // 송신일자 FR
	this.ctclDT_TO = this.divSearch.form.ctclDT_TO; // 송신일자 TO
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {			
	this.gfnGridInit(this.dxGrid, this.dsList, "DR", "DRB_SMS_RESULT");
	this.dxGrid.setFormatRowProperty( 1,"size", 60);
	this.dsSearch.setColumn(0, "DT_FR", this.gfnGetDate());
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("TY_MSG", "string");
	this.dsSelect.addColumn("DT_FR", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {

	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "TY_MSG", this.dsSearch.getColumn(0, "TY_MSG"));
	this.dsSelect.setColumn(0, "DT_FR" , this.dsSearch.getColumn(0, "DT_FR"));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction(strSvcId, 		// transaction을 구분하기 위한 svc id값
						strSvcType, 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData, 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData, 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
};

/*
 *	삭제 버튼
 */
this.fnDel = function() {
};

/*
 *	저장 버튼
 */
this.fnSave = function() {
};

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "DT_FR"))) {
		this.gfnAlert("송신일자를 입력해주세요.");
		return false;
	}	
	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg) {

	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
	}
	if (svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

//코드파인드의 파라미터 값을 넘겨줄때 사용하는 함수
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	
	// 사업지코드
	if (id == "ccfCD_ACNTUNIT") {
		dsUserParam.setColumn(nrow, "CD_DEPT"  , this.AuthClient.CD_DEPT);
		dsUserParam.setColumn(nrow, "ID_USER"  , this.AuthClient.ID_USER);
		dsUserParam.setColumn(nrow, "ID_GROUP" , this.FormInfo.ID_GROUP);
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
	}
	
	return true;
}

this.fnGrid_BeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	
	// 융자사코드
	if (id == "CD_VENDOR") {
		dsUserParam.setColumn(nrow, "CD_ACNTUNIT", this.dsSearch.getColumn(nrow, "CD_ACNTUNIT"));
		dsUserParam.setColumn(nrow, "YN_OPTION"  , "N");
	}
	
	return true;
}

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
//그리드 더블 클릭 이벤트 - 자산정보
this.fnGrid_Celldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo) {
	
	this.btnDetailView.click();
};

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};

// 엑셀업로드
this.fnExcelUpload = function() {
	this.gfnExcelImport("dsList", "Sheet1", "A2", "fnExcelImportCallback", "import", this);
}

this.fnExcelImportCallback = function(sImportId, dsOut, dsSheet) {
	
	for (var i = 0; i < this.dsList.getColCount(); ++i)
	{
		sColumnId = "Column" + i;
		var sColumnNm = this.gfnGridGetBindColumnNameByIndex(this.dxGrid, i);
		if (sColumnNm != "" && sColumnId != sColumnNm)
		{
			dsOut.updateColID(sColumnId, sColumnNm);
		}
	}
	
	// 양식이 일치하고 엑셀내역을 기존데이터에 Insert하지 않고
	// 엑셀내역 그대로 그리드 반영할 시 copyData
	//this.dsListSub.copyData(dsOut);
	
	this.dsList.set_enableevent(false);
	for (var i = 0; i < dsOut.rowcount; ++i) {
		var nrow = this.dsList.addRow();
		this.dsList.setColumn(nrow, this.ucFlag, "I");
		
		// 양식이 일치하는 경우 copyRow
		this.dsList.copyRow(nrow, dsOut, i);
	}
	this.dsList.set_enableevent(true);
	
	this.gfnSetFormStatus(this, "I");
};


this.divSearch_staTEXT_onclick = function(obj:nexacro.Static,e:nexacro.ClickEventInfo)
{
	
};
]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DZZPR_SMS_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="TY_MSG" type="STRING" size="256"/>
          <Column id="DT_FR" type="STRING" size="256"/>
          <Column id="DT_TO" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TY_MSG"/>
            <Col id="DT_FR"/>
            <Col id="DT_TO"/>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.rdoTY_SMS" propid="value" datasetid="dsSearch" columnid="TY_MSG"/>
      <BindItem id="item1" compid="divSearch.form.ctclDT_FR" propid="value" datasetid="dsSearch" columnid="DT_FR"/>
      <BindItem id="item2" compid="divSearch.form.ctclDT_TO" propid="value" datasetid="dsSearch" columnid="DT_TO"/>
    </Bind>
  </Form>
</FDL>
