<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="1280" height="720" titletext="출금요청 및 집행현황 조회" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="78.0" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static id="staCorpCd" taborder="1" text="법인코드" left="0" top="10.0" width="92" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCorpCd" CDTextWidth="50" taborder="0" left="staCorpCd:0.0" top="10.0" width="282" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Combo id="cboTY_SEARCH" taborder="4" text="집행요청일자" left="ccfCorpCd:10" top="10.0" width="103" height="24.0" innerdataset="innerdataset" codecolumn="codecolumn" datacolumn="datacolumn" index="0" value="0">
                <Dataset id="innerdataset">
                  <ColumnInfo>
                    <Column id="codecolumn" size="256"/>
                    <Column id="datacolumn" size="256"/>
                  </ColumnInfo>
                  <Rows>
                    <Row>
                      <Col id="codecolumn">0</Col>
                      <Col id="datacolumn">집행요청일자</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">1</Col>
                      <Col id="datacolumn">집행일자</Col>
                    </Row>
                  </Rows>
                </Dataset>
              </Combo>
              <Calendar id="calDtFromReq" taborder="5" left="cboTY_SEARCH:5" top="10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" onchanged="fnSearchInit"/>
              <Static id="staCD_TILDE" taborder="6" text="~" left="calDtFromReq:0.0" top="10.0" width="30.0" height="24.0" cssclass="sta_WF_AC"/>
              <Calendar id="calDtToReq" taborder="7" left="staCD_TILDE:0.0" top="10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" onchanged="fnSearchInit"/>
              <Static id="sta03" taborder="2" text="발행부서" left="0" top="staCorpCd:10.0" width="92" height="24.0" textDecoration="none" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfAcntUnitCd" CDTextWidth="70" taborder="3" left="sta03:0.0" top="staCorpCd:10.0" width="282" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="sta01" taborder="8" text="거래처코드" left="ccfAcntUnitCd:0.0" top="staCorpCd:10.0" width="118" height="24.0" textDecoration="none" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfVendorCd" CDTextWidth="80" taborder="9" left="sta01:0.0" top="staCorpCd:10.0" width="282" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0" oncelldblclick="divData_objGrid_oncelldblclick"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();				
	
	// 법인코드 포커스추가
	this.ccfCorpCd.form.CDTextBox.setFocus();
}; 

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 ************************************************************************/
this.fnSetButton = function() {
	// 입력,저장,삭제 버튼 비활성화 처리
	this.FormBtns.Add.set_enable(false);
	this.FormBtns.Save.set_enable(false);
	this.FormBtns.Del.set_enable(false);
};

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnPrintTrnsfRcpt = this.gfnFormButtonAdd("btnPrintTrnsfRcpt", "fnPrintTrnsfRcpt"); //이체영수증출력
	this.btnFormButtonGe = this.gfnFormButtonAdd("tbbGeSlip", "fnTbbGeSlip"); //계상전표조회
	this.btnFormButtonBan = this.gfnFormButtonAdd("tbbBanSlip", "fnTbbBanSlip"); //반제전표조회
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	
	this.ccfCorpCd = this.divSearch.form.ccfCorpCd;			// 법인코드
	this.ccfAcntUnitCd = this.divSearch.form.ccfAcntUnitCd;	// 발의부서코드
	this.ccfVendorCd = this.divSearch.form.ccfVendorCd;		// 거래처코드
	
	this.cboTY_SEARCH = this.divSearch.form.cboTY_SEARCH;
	this.calDtFromReq = this.divSearch.form.calDtFromReq;	// 집행요청시작일자
	this.calDtToReq = this.divSearch.form.calDtToReq;		// 집행요청종료일자
	
	this.dxGrid = this.divData.form.objGrid;				// 그리드
	this.grSearch = this.FormInfo.GR_SEARCH;				// 권한
	this.idGroup = this.FormInfo.ID_GROUP;					// 그룹코드(그룹ID)
	
	this.dxGrid.ExpandUp = "fnGrid_ExpandUp";
	
	//파일
	this.fileConfig = this.gfnGetFileConfig();
	
	//파일 업다운 경로 정보
	this.fnInfo();	
}

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	
	// 집행요청일자 현재부터 ~ 한달이후 까지 설정.
	var vToday = this.gfnGetDate();
	this.calDtFromReq.set_value(vToday);
	this.calDtToReq.set_value(this.gfnAddMonth(vToday, 1));
	
	
	// 코드파인드 정의 및 펑션 init
	this.ccfCorpCd.CodeFindName = "DZX_CFCORP";				// 법인코드
	this.ccfAcntUnitCd.CodeFindName = "DFX_CFACNTUNIT_GROUP";		// 발의부서코드
	this.ccfVendorCd.CodeFindName = "DFX_CFVENDOR";			// 거래처코드
	
	this.ccfCorpCd.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfAcntUnitCd.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfVendorCd.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	this.ccfCorpCd.AfterCDTextChanged = "codefind_AfterCDTextChanged";
	this.ccfAcntUnitCd.AfterCDTextChanged = "codefind_AfterCDTextChanged";
	this.ccfVendorCd.AfterCDTextChanged = "codefind_AfterCDTextChanged";
	

	//그리드 init 및 그리드펑션 int
	this.gfnGridInit(this.dxGrid, this.dsList, "DF", "DFB_REQUESTSTATUS");
	
	// 전체체크박스 체크/해제 이벤트
	this.dxGrid.AfterAllCheck = "fnGrid_AfterAllCheck";	

	// 법인코드 init
	if (this.gfnIsNull(this.ccfCorpCd.form.CDTextBox.value)) {
		this.ccfCorpCd.form.DSTextBox.set_value(this.AuthClient.DS_CORP); 
		this.ccfCorpCd.form.CDTextBox.set_value(this.AuthClient.CD_CORP);	
	}	
	
	// 발의부서코드 init
	this.ccfAcntUnitCd.form.DSTextBox.set_value(this.AuthClient.DS_DEPT);
	this.ccfAcntUnitCd.form.CDTextBox.set_value(this.AuthClient.CD_DEPT);
	
	if (nexacro.toNumber(this.FormInfo.GR_SEARCH) >= 7) {
		this.ccfAcntUnitCd.set_enable(false);
	}
	
	this.cboTY_SEARCH.set_index(0);
	
	// 권한체크
	//this.grSearch = "7";		
	
	if (nexacro.toNumber(this.grSearch) >= 7) {
		this.divSearch.form.sta03.set_textDecoration("underline");
	}
	this.btnFormButtonGe.set_enable(false);
	this.btnFormButtonBan.set_enable(false);
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("TY_PAYMENT", "string");
	this.dsSelect.addColumn("CD_DEPTOPER", "string");
	this.dsSelect.addColumn("DT_REQ_FR", "string");
	this.dsSelect.addColumn("DT_REQ_TO", "string");
	this.dsSelect.addColumn("CD_VENDOR", "string");
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("TY_SEARCH", "string");
	
	this.dsReport = new Dataset();
	this.dsReport.addColumn("SEQ_EXEC", "string");

}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "TY_PAYMENT", "");											// 출금구분코드
	this.dsSelect.setColumn(0, "CD_DEPTOPER", this.ccfAcntUnitCd.form.CDTextBox.value);		// 발의부서코드
	this.dsSelect.setColumn(0, "DT_REQ_FR", this.calDtFromReq.value);						// 집행요청시작일자
	this.dsSelect.setColumn(0, "DT_REQ_TO", this.calDtToReq.value);							// 집행요청종료일자
	this.dsSelect.setColumn(0, "CD_VENDOR", this.ccfVendorCd.form.CDTextBox.value);			// 거래처코드
	this.dsSelect.setColumn(0, "CD_CORP", this.ccfCorpCd.form.CDTextBox.value);				// 법인코드
	this.dsSelect.setColumn(0, "TY_SEARCH", this.dsSearch.getColumn(0, "TY_SEARCH"));		// 0 : 집행요청일자, 1 : 집행일자
	
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	var nRow = this.gfnGridAdd(this.dxGrid);
	this.dsList.setColumn(nRow, "TY_GUBUN", "법인");
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	if (this.gfnIsNull(this.ccfCorpCd.form.CDTextBox.text)) {
		this.gfnAlert("법인코드를 입력하세요!");
		this.ccfCorpCd.form.CDTextBox.setFocus();
		return false;
	}

	var SearchTitle = this.cboTY_SEARCH.text ;
	if (this.gfnIsNull(this.calDtFromReq.value)) {
		//this.gfnAlert("집행요청일(FROM)을 입력하세요!");
		this.gfnAlert(SearchTitle + " (FROM)을 입력하세요!");
		this.calDtFromReq.setFocus();
		return false;	
	}
	
	if (this.gfnIsNull(this.calDtToReq.value)) {
		//this.gfnAlert("집행요청일(TO)을 입력하세요!");
		this.gfnAlert(SearchTitle + " (TO)을 입력하세요!");
		this.calDtToReq.setFocus();
		return false;	
	}	
	
	if (nexacro.toNumber(this.grSearch) >= 7) {
		if (this.gfnIsNull(this.ccfAcntUnitCd.form.CDTextBox.text)) {
			this.gfnAlert("발의부서가 입력되지 않았습니다.");
			this.ccfAcntUnitCd.form.CDTextBox.setFocus();
			return false;
		}
	}	
	
	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		if (errorCode == 0) {
			if (this.dsList.rowcount == 0) {
				this.btnFormButtonGe.set_enable(false);
				this.btnFormButtonBan.set_enable(false);
			} else {
				this.gfnGridAfterSelect(this.dxGrid);
			}
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	else if (svcID == "fileinfo") {
		if(this.dsInfo.rowcount == 0) {
			this.gfnAlert("[" + this.dsInfoParam.getColumn(0, "CD_GUBUN") + "] 설정값이 없습니다.");
			return;
		}else{
			this.fileConfig.allowTypes = ["jpg","jpeg","gif","png","xls","doc","hwp","pdf","xlsx","ppt", "pptx"]; // 넥사브라우저 전용, 웹은 적용불가
			this.fileConfig.uploadUrl = this.fileConfig.uploadUrl.replace("path=", "path=" + this.dsInfo.getColumn(0, "DS_PATH"));
			this.fileConfig.downloadUrl = "/file/downloadFile.do";
		}	
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	switch(id) {
	
	case "ccfCorpCd": // 법인코드
		break;
		
	case "ccfAcntUnitCd": // 발의부서코드
		dsUserParam.setColumn(nrow, "CD_GROUP", "");
		//dsUserParam.setColumn(nrow, "CD_GROUP", this.idGroup);
		dsUserParam.setColumn(nrow, "CD_CORP", this.ccfCorpCd.form.CDTextBox.value);
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
		dsUserParam.setColumn(nrow, "CD_DEPT", this.AuthClient.CD_DEPT);
		break;
		
	case "ccfVendorCd": // 거래처코드
		dsUserParam.setColumn(nrow, "TY_VENDOR1", "전체");
		dsUserParam.setColumn(nrow, "CD_CORP", this.ccfCorpCd.form.CDTextBox.value);
		break;
		
	default:
	}	
	return true;	
	
} 
 
this.codefind_AfterCDTextChanged = function(id) {
	switch(id) {
	
	case "ccfCorpCd": // 법인코드
		this.gfnGridClear(this.dxGrid);
		this.ccfAcntUnitCd.form.DSTextBox.set_value("");
		this.ccfAcntUnitCd.form.CDTextBox.set_value("");
		break;
		
	case "ccfAcntUnitCd": // 발의부서코드
		this.gfnGridClear(this.dxGrid);
		break;
		
	case "ccfVendorCd": // 거래처코드
		this.gfnGridClear(this.dxGrid);
		break;
		
	default:
	}	
	this.btnFormButtonGe.set_enable(false);
	this.btnFormButtonBan.set_enable(false);
	return true;
} 


this.fnGrid_AfterAllCheck = function(obj:nexacro.Grid, cell, check) {
	var colnm = this.gfnGridGetBindColumnNameByIndex(obj, cell);
	if(colnm == "CHK") {
		//trace("fnGrid_AfterAllCheck] " + cell + "," + check);
	}
}
 
this.fnGrid_BeforuserDataSetParam = function(id, dsUserParam, nrow) {
}

this.fnGrid_AfterCDTextChanged = function(id, codeFindData) {
};
 
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
//파일 업로드
this.fnGrid_ExpandUp = function(obj:nexacro.Grid, e:nexacro.GridMouseEventInfo){ 
 	
	var colId = this.gfnGridGetBindColumnNameByIndex(obj, e.cell);
	switch(colId){
		case "DS_FILE":	//멀티 업로드 이체영수증
			var fileManager = {};
			fileManager.CD_GUBUN = "DH03";
			fileManager.CD_DIR = [ this.dsList.getColumn(this.dsList.rowposition, "CD_REF1")];
			// CD_DIR 만 지정시 CD_DIR 배열 순대로 키1,키2,키3 까지 자동지정
			// 저장되는 디렉토리와 키값이 다른경우 CD_REF 추가로 사용
			//fileManager.CD_REF = [ this.dsList.getColumn(this.dsList.rowposition, "CD_REF1") ];
			// 권한 및 상태에 따라 업로드,삭제 가능여부 지정 (기본: true)
			fileManager.IS_READONLY = true;
			
			this.gfnFileManager(fileManager, "fnFileCallback");
			break;
		
		default:
	}
};

this.fnFileCallback = function(strID, val) {
	// 파일개수를 다시 셋팅
	this.dsList.set_enableevent(false);
	if(val.Cnt == 0) {
		this.dsList.setColumn(this.dsList.rowposition, "DS_FILE", "첨부");
	} else {
		this.dsList.setColumn(this.dsList.rowposition, "DS_FILE", "첨부(" + val.Cnt + ")");
	}
	this.dsList.set_enableevent(true);
}; 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		this.gfnSetFormStatus(this);
		this.gfnGridClear(this.dxGrid);
		this.btnFormButtonGe.set_enable(false);
		this.btnFormButtonBan.set_enable(false);
	}
};

// 이체영수증출력
this.fnPrintTrnsfRcpt = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {

	if ( this.dsList.findRow("CHK", 1) <= -1 ) {
		this.gfnAlert("체크된 행이 없습니다.");
		return false;
	}
	var searchval = "";
	for(var i = 0; i < this.dsList.rowcount; i++) {
		if(this.dsList.getColumn(i, "CHK") == 1) {
			searchval+=this.dsList.getColumn(i, "SEQ_EXEC")+",";
		}
	}
	
	this.dsReport.clearData();
	this.dsReport.addRow();
	this.dsReport.setColumn(0, "SEQ_EXEC", searchval);

	var reportpath  = "/df/dfb/DFB_REQUESTSTATUS.ozr";
	var inProc		= "_dsProc";
	var inParam 	= "";	// 조회SP이외 사용할 정보
	//var inParam 	= "";						// 필요없는 경우 생략
	var inData      = "print=dsReport";
	gfnOpenReport(this, reportpath, inProc, inParam, inData);

}

this.fnTbbGeSlip = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	// 선택된 row가 있을 경우에만 팝업을 띄움
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	var param = {};
	// 계상전표번호
	var no_slip = this.dsList.getColumn(this.dsList.rowposition, "NO_SLIP1");

	if(no_slip == "" || this.gfnIsNull(no_slip))
	{
		this.gfnAlert("이관자료는 전표조회할 수 없습니다.");
		return false;
	}

	param.CD_TRADE = no_slip;
	param.IUD_FLAG = "S";
	param.strYN_JUNDO_START = "";
	
	this.gfnFormOpen("DHA", "DHA_ISSUESLIP", "", param);
}

this.fnTbbBanSlip = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	// 선택된 row가 있을 경우에만 팝업을 띄움
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	var param = {};
	// 반제전표번호
	var no_slip = this.dsList.getColumn(this.dsList.rowposition, "NO_SLIP");

	if(no_slip == "미분류전표")
	{
		this.gfnAlert("미분류전표는 조회할 수 없습니다.");
		return false;
	}

	param.CD_TRADE = no_slip;
	param.IUD_FLAG = "S";
	param.strYN_JUNDO_START = "";
	
	this.gfnFormOpen("DHA", "DHA_ISSUESLIP", "", param);

}

this.fnDetailCallback = function(strId, val) {
};


this.dsList_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue){
		
		if(e.columnid == "CHK"){

			if(e.newvalue == "1"){
				var DT_REQ_EXEC = this.gfnNvl(this.dsList.getColumn(e.row, "DT_REQ_EXEC"), ""); //집행일자
				
				if(this.dsList.getColumn(e.row, "YN_SLIP") == "N"){
					this.gfnAlert("집행된 행만 체크가능합니다.");
					this.dsList.setColumn(e.row, "CHK", "0");
				}else{
					for(var i=0;i<this.dsList.rowcount;i++){
						if(i == e.row) continue;
						if(this.dsList.getColumn(i, "CHK") != "1") continue;
						
						var DT_REQ_EXEC_COMPARE = this.gfnNvl(this.dsList.getColumn(i, "DT_REQ_EXEC"), "");
						if(DT_REQ_EXEC_COMPARE == DT_REQ_EXEC){
							; //ok
						}else{
							this.gfnAlert("집행일자가 동일한 행만 체크가능합니다.");
							this.dsList.setColumn(e.row, "CHK", "0");
							break;
						}
					}
				}
			}
		}
	}
};

//파일 저장 경로 조회
this.fnInfo = function() {
		
	this.dsInfoParam.clearData();
	this.dsInfoParam.addRow();
	
	this.dsInfoParam.setColumn(0, "CD_GUBUN", "DH03");
	
	var strSvcId    = "fileinfo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "fileinfo=dsInfoParam";
	var outData     = "dsInfo=fileinfo0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};

this.divData_objGrid_oncelldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	var colId = this.gfnGridGetBindColumnNameByIndex(obj, e.cell);
	
	switch(colId){
		case "DS_FILE":
			if (this.gfnIsNull(this.dsList.getColumn(this.dsList.rowposition, "CD_REF1"))) { return false; }
	
			var sFilename = this.dsList.getColumn(this.dsList.rowposition, "CD_REF1");
			var encodeFileName = encodeURIComponent(sFilename);

			var svrPath = this.dsList.getColumn(this.dsList.rowposition, "CD_REF1").replace(/\//g, "\\") + "\\";
			var filePath = svrPath.replace(/\\\\/g, "\\");

			var surl = this.fileConfig.host+ this.fileConfig.downloadUrl;
			this.FileDownTransfer00.set_url(surl);
			this.FileDownTransfer00.setPostData("path", filePath);
			this.FileDownTransfer00.setPostData("fileName", sFilename);
			
			if( system.navigatorname =="nexacro"){
				this.FileDownTransfer00.set_downloadfilename(sFilename);
			}

			this.FileDownTransfer00.download();
			
			break;
		case "DS_FILE_PATH_ETC":
			break;
		
		default:
	}
};

this.dsList_onrowposchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSRowPosChangeEventInfo)
{
	if (!this.gfnGridIsRow(this.dxGrid)) { 
		this.btnFormButtonGe.set_enable(false);
		this.btnFormButtonBan.set_enable(false);
		return false;
	}

	// 계상전표번호
	if( this.gfnIsNull(this.dsList.getColumn(e.newrow , "NO_SLIP1")) ) {
		this.btnFormButtonGe.set_enable(false);
	} else {
		this.btnFormButtonGe.set_enable(true);
	}
	// 반제전표번호
	if( this.gfnIsNull(this.dsList.getColumn(e.newrow , "NO_SLIP")) ) {
		this.btnFormButtonBan.set_enable(false);
	} else {
		this.btnFormButtonBan.set_enable(true);
	}
};
]]></Script>
    <Objects>
      <Dataset id="dsList" onvaluechanged="dsList_onvaluechanged" onrowposchanged="dsList_onrowposchanged"/>
      <FileDownTransfer id="FileDownTransfer00"/>
      <Dataset id="dsInfoParam">
        <ColumnInfo>
          <Column id="CD_GUBUN" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsInfo"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DFBPR_REQUEST_STATUS_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">print</Col>
            <Col id="SP">DFBPR_REQUEST_STATUS_PRINT</Col>
          </Row>
          <Row>
            <Col id="TARGET">fileinfo</Col>
            <Col id="SP">DZUPR_FILEMANAGER_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="TY_PAYMENT" type="STRING" size="256"/>
          <Column id="CD_DEPTOPER" type="STRING" size="256"/>
          <Column id="DS_DEPTOPER" type="STRING" size="256"/>
          <Column id="TY_SEARCH" type="STRING" size="256"/>
          <Column id="DT_REQ_FR" type="STRING" size="256"/>
          <Column id="DT_REQ_TO" type="STRING" size="256"/>
          <Column id="CD_VENDOR" type="STRING" size="256"/>
          <Column id="DS_VENDOR" type="STRING" size="256"/>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="DS_CORP" type="STRING" size="256"/>
          <Column id="DS_SEARCH" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCorpCd.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item1" compid="divSearch.form.ccfCorpCd.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_CORP"/>
      <BindItem id="item2" compid="divSearch.form.cboTY_SEARCH" propid="value" datasetid="dsSearch" columnid="TY_SEARCH"/>
      <BindItem id="item3" compid="divSearch.form.ccfAcntUnitCd.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_DEPTOPER"/>
      <BindItem id="item4" compid="divSearch.form.ccfAcntUnitCd.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_DEPTOPER"/>
      <BindItem id="item5" compid="divSearch.form.calDtFromReq" propid="value" datasetid="dsSearch" columnid="DT_REQ_FR"/>
      <BindItem id="item6" compid="divSearch.form.calDtToReq" propid="value" datasetid="dsSearch" columnid="DT_REQ_TO"/>
      <BindItem id="item7" compid="divSearch.form.ccfVendorCd.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_VENDOR"/>
      <BindItem id="item8" compid="divSearch.form.ccfVendorCd.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_VENDOR"/>
      <BindItem id="item9" compid="divSearch.form.cboTY_SEARCH" propid="text" datasetid="dsSearch" columnid="DS_SEARCH"/>
    </Bind>
  </Form>
</FDL>
