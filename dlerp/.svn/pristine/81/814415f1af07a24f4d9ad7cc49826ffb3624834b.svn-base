<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="현장별 기성 집계표" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static id="staYM_WORK" taborder="1" text="조회년월" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="calYM_WORK" taborder="0" left="staYM_WORK:0.0" top="10.0" width="80" height="24.0" url="cmm::cmmCalMM.xfdl"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="1" left="0" top="40" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);
	// ---------------------------//
	//this.fnSetButton();
	//this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {	
	// 서브 버튼 사용
	//this.gfnUseSubBtn(true, this.divData, this.divData.form.divSplitter); // divSplitter sync
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결
 ************************************************************************/
this.fnSetExtendButton = function() {
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.calYM_WORK = this.divSearch.form.calYM_WORK;    // 작업년월
	this.dxGrid = this.divData.form.objGrid;
	
	//작업일자 셋팅
	var today = this.gfnGetDate().substring(0,6);
	this.calYM_WORK.form.TextBox.set_value(today);
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.gfnGridInit(this.dxGrid, this.dsList, "DB", "DBS_CORP_COSTSUM_SITE");  // pForm.gfnGridInit = function(objGrid, objDs, cd_system, id_grid, tree_column, level_column, is_manual) 
	this.dxGrid.setCellProperty( "summary", this.dxGrid.getBindCellIndex("body","DS_CORP"), "textAlign", "center");
	this.dxGrid.setCellProperty( "summary", this.dxGrid.getBindCellIndex("body","DS_CORP"), "text", "합  계");
	
	this.dxGrid.setCellProperty( "summary", this.dxGrid.getBindCellIndex("body","DS_DIFF"), "textAlign", "center");
	this.dxGrid.setCellProperty( "summary", this.dxGrid.getBindCellIndex("body","DS_DIFF"), "text", "expr:nexacro.toNumber(dataset.getCaseSum('"+this.ucFlag+" != \"#\"','AM_DIFF'),0) == 0 ? '':(nexacro.toNumber(dataset.getCaseSum('"+this.ucFlag+" != \"#\"','AM_DIFF'),0) > 0 ? '증가':'감소')");
	
	this.dsSearch.addEventHandler("onvaluechanged", this.dsSearch_onvaluechanged, this);
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("YM_WORK", "string");
	this.dsSelect.addColumn("DT_WORK", "string");
	this.dsSelect.addColumn("YM_WORK_THIS", "string");
	this.dsSelect.addColumn("YM_WORK_PRE", "string");
	this.dsSelect.addColumn("CONFIRMOR", "string");
	this.dsSelect.addColumn("WRITER", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsList.clearData();
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	var sYmWork = this.dsSearch.getColumn(0,"YM_WORK");
	var sYmWorkPrv = this.gfnAddMonth(this.dsSearch.getColumn(0,"YM_WORK")+"01",-1);
	this.dsSelect.setColumn(0, "YM_WORK", sYmWork);
	this.dsSelect.setColumn(0, "YM_WORK_THIS", sYmWork.substr(0,4)+"년 "+sYmWork.substr(4,2)+"월");
	this.dsSelect.setColumn(0, "YM_WORK_PRE", sYmWorkPrv.substr(0,4)+"년 "+sYmWorkPrv.substr(4,2)+"월");
	
	var sLastDate = this.gfnGetLastDate(this.dsSearch.getColumn(0,"YM_WORK"));
	this.dsSelect.setColumn(0, "DT_WORK", this.dsSearch.getColumn(0,"YM_WORK").substr(4)+". 01 ~ "+sLastDate.substr(4,2)+". "+sLastDate.substr(6,2));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
	
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	보고서 팝업
 */
this.fnPopupCallBack = function(svcID, value) {
	
	if( !this.gfnIsNull(value) ){
		this.dsReportParam.loadXML(value);
		if( this.dsReportParam.rowcount > 0 ){
			this.dsSelect.setColumn(0,"CONFIRMOR",this.gfnNvl(this.dsReportParam.getColumn(0,"CONFIRMOR"),""));
			this.dsSelect.setColumn(0,"WRITER",this.gfnNvl(this.dsReportParam.getColumn(0,"WRITER"),""));
		}
		var inProc		= "_dsProc";
		var inParam 	= "params=dsSelect";
		var inData      = "select=dsSelect";
		var reportpath  = "/db/dbs/DBS_CORP_COSTSUM_SITE.ozr";
		gfnOpenReport(this, reportpath, inProc, inParam, inData);
	}
};

/*
 *	출력 버튼
 */
this.fnPrint = function() {
	if (!this.fnSelectValidate()) return false;
	
	var options = {
		resizable: true
	}
	this.gfnOpenPopup("DBS_RPT_INPUT_POPUP","dbs::DBS_RPT_INPUT_POPUP.xfdl",{},"fnPopupCallBack",options);
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;
	if (this.gfnIsNull(this.calYM_WORK.form.TextBox.value)) {
		validate = false;
		this.fnVaidateCallback = function() {
			this.calYM_WORK.form.TextBox.setFocus();
			return false;
		}
		this.gfnAlert("조회년월을 입력하셔야 합니다.", "fnVaidateCallback"); // gfnAlert = function (sMsgId, arrArg, sPopId, sCallback)
	}
	return validate;
}
/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/

/************************************************************************
 * 확장버튼 이벤트
 ************************************************************************/

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);
	}	
};]]></Script>
    <Objects>
      <Dataset id="dsList" />
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DBSPR_CORP_COSTSUM_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch">
        <ColumnInfo>
          <Column id="YM_WORK" type="STRING" size="256"/>
          <Column id="DT_WORK_FROM" type="STRING" size="256"/>
          <Column id="DT_WORK_TO" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsReportParam" >
        <ColumnInfo>
          <Column id="CONFIRMOR" type="STRING" size="256"/>
          <Column id="WRITER" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item2" compid="divSearch.form.calYM_WORK.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_WORK"/>
    </Bind>
  </Form>
</FDL>
