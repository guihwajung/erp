<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="1280" height="720" titletext="사직서_LIST" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0" top="0" height="46" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static cssclass="sta_WF_SchLabelE" id="staCD_CORP" taborder="1" text="법인코드" left="10" top="10" width="92" height="24"/>
              <Div id="ccfCD_CORP" FitToContents="true" CDTextWidth="50" taborder="0" left="staCD_CORP:0" top="10" width="200" height="24" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DZX_CFCORP_STD"/>
              <Static id="staDT_WORK" taborder="2" text="조회기간" left="ccfCD_CORP:0" top="10" width="92" height="24" cssclass="sta_WF_SchLabelE"/>
              <Calendar id="ctclDT_START" taborder="3" left="staDT_WORK:0" top="10" width="110" height="24" dateformat="yyyy-MM-dd" editformat="yyyy-MM-dd" autoselect="true" onchanged="divSearch_ctclDT_START_onchanged"/>
              <Static id="staCdCorp01" taborder="4" text="~" left="ctclDT_START:0" top="10" width="20" height="24" textAlign="center"/>
              <Calendar id="ctclDT_END" taborder="5" left="staCdCorp01:0" top="10" width="110" height="24" dateformat="yyyy-MM-dd" editformat="yyyy-MM-dd" autoselect="true" onchanged="divSearch_ctclDT_END_onchanged"/>
              <Static id="staID_SABUN" taborder="6" text="사번" left="ctclDT_END:0" top="10" width="66" height="24" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfID_SABUN" FitToContents="true" CDTextWidth="90" taborder="7" left="staID_SABUN:0" top="10" width="200" height="24" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DAX_CFBASEINFO_ALL"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:20" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0" autofittype="none" oncellposchanged="fnGridCellPosChanged" oncelldblclick="divData_objGrid_oncelldblclick"/>
              <Grid id="objGridChk" taborder="0" left="0" top="0" bottom="0" right="0" autofittype="none" oncellposchanged="fnGridCellPosChanged" oncelldblclick="divData_objGrid_oncelldblclick" visible="false"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[
this.objApp = this.gfnGetApplication();
this.paramSeq = 0;	//사직서 SEQ 전역변수
//사직서 안내 권한설정 ( true = readonly )
this.access = true;
this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{	
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	this.fnSetButton();			//버튼 공통 설정
	this.fnSetExtendButton();	//화면별 버튼 id 설정
	this.fnSetVariable();		//변수선언
	this.fnSetEvent();			//이벤트 설정
	this.fnSetParameter();		//파라미터 설정
	// 확장버튼 상태 변경
	this.fnUpdateStatusExtendButton();
	
	//this.fnSelect();
	this.FormBtns.Select.click();
};

/************************************************************************
 * 버튼 설정 
 * 서브버튼 사용 처리. 공통 및 확장버튼 버튼관리화면에서 셋팅.
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {

	this.btnInfo 	= this.gfnFormButtonAdd("BTN_INFO"	, "fnFile"); 				// 사직서 안내
	this.btnNew 	= this.gfnFormButtonAdd("BTN_NEW"	, "fnRetireRequestNew"); 	// 사직서 작성
	this.btnSearch 	= this.gfnFormButtonAdd("BTN_SEARCH", "fnRetireRequestSearch"); // 사직서 보기
	this.btnCopy 	= this.gfnFormButtonAdd("BTN_COPY"	, "fnRetireRequestCopy"); 	// 사직서 복사
	this.btnDocQ    = this.gfnFormButtonAdd("btnDocQ"   , "fnAprvDocQ");			// 결재문서조회 버튼
	this.btnInit    = this.gfnFormButtonAdd("BTN_INIT"  , "fnAprvInit");			// 결재문서초기화 버튼
};

this.fnUpdateStatusExtendButton = function() {
	var nrow = this.dsList.rowposition;
	
 	this.btnDocQ.set_enable(this.dsList.getColumn(nrow, "BTN_DOC_Q") == "Y");
 	this.btnInit.set_enable(this.dsList.getColumn(nrow, "BTN_INIT") == "Y");
}
/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	/**********  검색조건  **********/
	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;			//소속법인
	this.ctclDT_START =  this.divSearch.form.ctclDT_START;		//조회기간_시작일자
	this.ctclDT_END = this.divSearch.form.ctclDT_END;			//조회기간_종료일자
	this.ccfID_SABUN = this.divSearch.form.ccfID_SABUN;			//사번
	
	/**********  그리드  **********/
	this.dxGrid = this.divData.form.objGrid;
	this.dxGridChk = this.divData.form.objGridChk;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	/******** 초기셋팅 ****************/
	this.dsSearch.setColumn(0,"CD_CORP", this.AuthClient.CD_CORP);
	this.dsSearch.setColumn(0,"DS_CORP", this.AuthClient.DS_CORP);
	this.dsSearch.setColumn(0,"DT_START", this.gfnAddMonth(this.gfnGetDate(), -1).substr(0, 8));
	this.dsSearch.setColumn(0,"DT_END", this.gfnGetLastDate(this.gfnAddMonth(this.gfnGetDate("date"), 1)));
	this.dsSearch.setColumn(0,"ID_SABUN", this.AuthClient.ID_SABUN);
	this.dsSearch.setColumn(0,"DS_HNAME", this.AuthClient.DS_HNAME);
	
	/******* Before 이벤트 **********/
	//사번_조회조건
	this.ccfID_SABUN.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfID_SABUN.AfterCDTextChanged = "codefind_AfterCDTextChanged";	

	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DA", "DAW_RETIRE_REQUEST_LIST");
	this.gfnGridInit(this.dxGridChk, this.dsListchk, "DA", "DAW_RETIRE_REQUEST_LIST_CHK");
	this.dxGrid.ExpandUp = "fnGrid_ExpandUp";
	
	// 셀 수정가능 여부
	this.dxGrid.EnterCell = "fnGrid_EnterCell";
	// 셀 변경 후 이벤트
	this.dxGrid.AfterEdit = "fnGrid_AfterEdit";
	
	//그리드 초기화 위한 구분자
	this.searchReset = true;
};

// 셀 값 변경 후 이벤트
this.fnGrid_AfterEdit = function(obj,e) {	
	//trace("fnGrid_AfterEdit >>>>>>"+e.columnid);	
}

this.fnGridCellPosChanged = function(obj:nexacro.Grid, e:nexacro.GridSelectEventInfo) {
	this.fnUpdateStatusExtendButton();
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	//조회조건 Dataset
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("DT_START", "string");
	this.dsSelect.addColumn("DT_END", "string");
	this.dsSelect.addColumn("ID_SABUN", "string");
	this.dsSelect.addColumn("GR_SEARCH", "string");
	this.dsSelect.addColumn("ID_USER", "string");
	
	this.dsSelectChk = new Dataset();
	this.dsSelectChk.addColumn("CD_CORP", "string");
	this.dsSelectChk.addColumn("ID_SABUN", "string");
	this.dsSelectChk.addColumn("NO_SEQ", "string");
	
	this.dsCopy = new Dataset();
	this.dsCopy.addColumn("CD_CORP", "string");
	this.dsCopy.addColumn("ID_SABUN", "string");
	this.dsCopy.addColumn("NO_SEQ", "string");
	this.dsCopy.addColumn("ID_INSERT", "string");
	
	this.dsSave = new Dataset();
	this.dsSave.addColumn("CD_CORP", "string");
	this.dsSave.addColumn("ID_SABUN", "string");
	this.dsSave.addColumn("NO_SEQ", "string");
	this.dsSave.addColumn("ID_INSERT", "string");
	
	// 결재
	this.dsApproval = new Dataset();
	this.dsApproval.addColumn("TY_WRK", "string");
	this.dsApproval.addColumn("CD_CORP", "string");
	this.dsApproval.addColumn("ID_SABUN", "string");
	this.dsApproval.addColumn("NO_SEQ", "bigdecimal");
	this.dsApproval.addColumn("ID_APRV", "string");
	this.dsApproval.addColumn("NO_APRV", "int");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {

	if (!this.fnSelectValidate()) return false;

	this.gfnGridBeforeSelect(this.dxGrid);	
	
	this.dsList.clearData();
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();

	this.dsSelect.setColumn(0, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));
	this.dsSelect.setColumn(0, "DT_START", this.dsSearch.getColumn(0, "DT_START"));
	this.dsSelect.setColumn(0, "DT_END", this.dsSearch.getColumn(0, "DT_END"));
	this.dsSelect.setColumn(0, "ID_SABUN", this.dsSearch.getColumn(0, "ID_SABUN"));
	this.dsSelect.setColumn(0, "GR_SEARCH", this.FormInfo.GR_SEARCH);
	this.dsSelect.setColumn(0, "ID_USER", this.AuthClient.ID_USER);
	
	var strSvcId    = "select";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

this.fnSelectChk = function() {

	this.gfnGridBeforeSelect(this.dxGridChk);	
	this.dsListchk.clearData();
	
	this.dsSelectChk.clearData();
	this.dsSelectChk.addRow();
	
	this.dsSelectChk.setColumn(0, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));
	this.dsSelectChk.setColumn(0, "ID_SABUN", this.dsSearch.getColumn(0, "ID_SABUN"));
	this.dsSelectChk.setColumn(0, "NO_SEQ", 0);

	var strSvcId    = "check";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "selectchk=dsSelectChk";
	var outData     = "dsListchk=selectchk0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	// 그리드 필수항목 체크
	if (!this.gfnGridValidate(this.dxGrid)) return;

	this.dxGrid.updateToDataset();

	this.dsSave.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
			case "U":
			case "D":
				var nrow = this.dsSave.addRow();				
				this.dsSave.setColumn(nrow, "TY_SAVE", flag);
				this.dsSave.setColumn(nrow, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));
				this.dsSave.setColumn(nrow, "ID_SABUN", this.dsList.getColumn(i, "ID_SABUN"));
				this.dsSave.setColumn(nrow, "NO_SEQ", this.dsList.getColumn(i, "NO_SEQ"));
				break;		
		}
	}

	if (this.dsSave.rowcount == 0) return;

	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";

	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
};

/*
  *	복사 버튼
  */
this.fnCopy = function() {

	if (!this.fnSelectValidate()) return false;
	
	this.dsCopy.clearData();
	this.dsCopy.addRow();

	this.dsCopy.setColumn(0, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));
	this.dsCopy.setColumn(0, "ID_SABUN", this.dsList.getColumn(this.dsList.rowposition, "ID_SABUN"));	
	this.dsCopy.setColumn(0, "NO_SEQ", this.dsList.getColumn(this.dsList.rowposition, "NO_SEQ"));
	this.dsCopy.setColumn(0, "ID_INSERT", this.AuthClient.ID_USER);
	
	var strSvcId    = "copy";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "copy=dsCopy";
	var outData     = "dsOutput=copy";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}
/*
 *	입력 버튼
 */
this.fnAdd = function() {
	//사직서 작성 버튼 클릭
	this.fnRetireRequest();
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}



/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {	
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "CD_CORP"))) {
		this.ccfCD_CORP.form.CDTextBox.setFocus();
		this.gfnAlert("법인코드를 입력하세요.");
		return false;
	}else if (this.gfnIsNull(this.dsSearch.getColumn(0, "DT_START"))) {
		this.ctclDT_START.setFocus();
		this.gfnAlert("시작일자를 입력하세요.");
		return false;
	}else if (this.gfnIsNull(this.dsSearch.getColumn(0, "DT_END"))) {
		this.ctclDT_END.setFocus();
		this.gfnAlert("종료일자를 입력하세요.");
		return false;
	}
	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if( svcID == "select" ){
	}else if( svcID == "check" ){	
		
		//사직서 팝업 실행
		this.fnRetirePop(0, this.dsSearch.getColumn(0, "ID_SABUN"), this.dsSearch.getColumn(0, "DS_HNAME"));
		//this.msg = this.dsListchk.getColumn(0, "MSG");
	}else if( svcID == "copy" ){	
		
		
		this.fnWorkAfter = function(){		
			if(this.dsOutput.rowcount > 0){
				//사직서 팝업 실행
				var noSeq = this.dsOutput.getColumn(0, "NO_SEQ_RETURN");
				var idSabun = this.dsList.getColumn(this.dsList.rowposition, "ID_SABUN" );
				var dsHname = this.dsList.getColumn(this.dsList.rowposition, "DS_NAME" );
				
				if(!this.gfnIsNull(noSeq)){
					this.fnRetirePop(noSeq, idSabun, dsHname);
				}
			}
		}
		this.gfnAlert("사직서가 복사 되었습니다.", "fnWorkAfter");
	}else if (svcID == "APRVINIT") {
		this.fnSelect();
	}else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.fnSaveAfter = function(){
				this.FormBtns.Select.click();
			}
			this.gfnAlert(errorMsg, "fnSaveAfter");
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
 /**************** 조회조건 *****************/
 //변경 전 이벤트
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
//부서코드
	if (id == "ccfCD_DEPT") {			
		dsUserParam.setColumn(nrow, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));		
		dsUserParam.setColumn(nrow, "DT_YEAR", this.dsSearch.getColumn(0, "DT_END").substr(0, 4));		
	}
	else if( id == "ccfID_SABUN") {			
		dsUserParam.setColumn(nrow, "CD_CORP", this.dsSearch.getColumn(0,"CD_CORP"));
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "CD_DEPT", this.FormInfo.GR_SEARCH==1? "":this.gfnNvl(this.AuthClient.CD_DEPT,""));		
		dsUserParam.setColumn(nrow, "YN_CORP", "N");
		dsUserParam.setColumn(nrow, "TY_RETIRE", "%");
	}
	return true;
}
//변경 후 이벤트
this.codefind_AfterCDTextChanged = function(id,codeFindData) {

   	if( id == "ccfID_SABUN" ) {
		//ID_PERSON 값 바인딩
		var arr = codeFindData;
		if(arr.length > 0) {
			this.dsSearch.setColumn(0,"ID_SABUN",arr[0]["ID_SABUN"]);
			this.dsSearch.setColumn(0,"DS_HNAME",arr[0]["DS_HNAME"]);
		}else{
			this.dsSearch.setColumn(0,"ID_SABUN","");
			this.dsSearch.setColumn(0,"DS_HNAME","");
		}
	}
}

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
 //결재문서 초기화
this.fnAprvInit = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if (!this.gfnGridIsRow(this.dxGrid)) return;
	
	var msg = "사직서에 대하여 " + obj.text + "하시겠습니까?\n";
	this.gfnConfirm(msg, function(strId, isOk) {
		if (isOk == false) {
			return;
		}
		this.fnAprvCallback("APRVINIT");
	});
	//this.gfnConfirm(msg, "fnAprvCallback", "APRVINIT");
};

// 결재상신 버튼 콜백
// 취소결재상신 버튼 콜백
// 결재상태초기화 버튼 콜백
this.fnAprvCallback = function(strId, val) {	
	this.dsApproval.clearData();
	this.dsApproval.addRow();
		
	this.dsApproval.setColumn(0, "TY_WRK",  strId);
	this.dsApproval.setColumn(0, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));
	this.dsApproval.setColumn(0, "ID_SABUN", this.dsList.getColumn(this.dsList.rowposition, "ID_SABUN" ));
	this.dsApproval.setColumn(0, "NO_SEQ", this.dsList.getColumn(this.dsList.rowposition, "NO_SEQ" ));
	this.dsApproval.setColumn(0, "ID_APRV", this.AuthClient.ID_SABUN);
	if (strId == "APRV" || strId == "APRVCNC") {
		this.dsApproval.setColumn(0, "NO_APRV", this.dsAprvOut.getColumn(0, "NO_APRV"));
	} else {
		this.dsApproval.setColumn(0, "NO_APRV", this.dsList.getColumn(this.dsList.rowposition, "NO_APRV" ));
	}
		
	var strSvcId    = strId;
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "aprv_execute=dsApproval";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction(strSvcId,		// transaction을 구분하기 위한 svc id값
						strSvcType, 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData, 		// 입력값으로 보낼 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						outData, 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc);	// 통신방법 정의 [생략가능]
}

// 결재문서조회 버튼
this.fnAprvDocQ = function(obj:nexacro.Button, e:nexacro.ClickEventInfo) {
	var oParams = {
		CD_CORP: this.dsList.getColumn(this.dsList.rowposition, "CD_CORP"),
		NO_APRV: this.dsList.getColumn(this.dsList.rowposition, "NO_APRV"),
	}
	this.gfnAprvDoc(oParams, this.fnAprvDocQCallback);
}

//사직서 버튼 클릭 이벤트
this.fnRetireRequestNew= function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {	
	
	this.fnSelectChk();
	//사직서 팝업 실행
	//this.fnRetirePop(0, this.dsSearch.getColumn(0, "ID_SABUN"), this.dsSearch.getColumn(0, "DS_HNAME"));
}

//사직서 보기 버큰 클릭 이벤트
this.fnRetireRequestSearch= function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	//사직서 팝업 실행
	var noSeq = this.dsList.getColumn(this.dsList.rowposition, "NO_SEQ" );
	var idSabun = this.dsList.getColumn(this.dsList.rowposition, "ID_SABUN" );
	var dsHname = this.dsList.getColumn(this.dsList.rowposition, "DS_NAME" );
	
	if(!this.gfnIsNull(noSeq)){
		this.fnRetirePop(noSeq, idSabun, dsHname);
	}else{
		this.gfnAlert("대상을 선택해 주시기 바랍니다.");
	}
}

//사직서 복사 버튼 클릭 이벤트
this.fnRetireRequestCopy= function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {

	var noSeq = this.dsList.getColumn(this.dsList.rowposition, "NO_SEQ" );
	if(!this.gfnIsNull(noSeq)){			
		this.fnCopy();	
	}else{
		this.gfnAlert("전자결재 반려 건의 내용을 복사합니다.\n반려 건을 선택해 주시기 바랍니다.");
	}
}

//사직서 팝업 실행
this.fnRetirePop = function(noSeq, idSabun, dsHname)
{
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "CD_CORP"))) {
		this.ccfCD_CORP.form.CDTextBox.setFocus();
		this.gfnAlert("법인코드를 입력하세요.");
		return false;
	}
	if( noSeq == 0 ){
		if(this.gfnIsNull(this.dsSearch.getColumn(0, "ID_SABUN"))) {
			this.ccfID_SABUN.form.CDTextBox.setFocus();
			this.gfnAlert("사번을 입력하세요.");
			return false;
		}
		var msg = this.dsListchk.getColumn(0, "MSG");
		if( !this.gfnIsNull(msg)){
			this.gfnAlert(msg);
			return false;
		} 
	}

	var param = {};

	param.CD_CORP  = this.dsSearch.getColumn(0, "CD_CORP");
	param.DS_CORP  = this.dsSearch.getColumn(0, "DS_CORP");
	param.ID_SABUN = idSabun;
	param.DS_HNAME = dsHname;
	param.NO_SEQ   = noSeq;
	
	//결재버튼 시에만 적용되는 유저
	param.SIGN_ID_SABUN = this.dsSearch.getColumn(0, "ID_SABUN");
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DAW_RETIRE_REQUEST", "fnSaveCallback", param , 1000 ,800 );
};

// 셀 수정가능 여부
this.fnGrid_EnterCell = function(obj:nexacro.Grid, row, cell)
{

}

//사직서에서 저장 후 콜백 
this.fnSaveCallback = function (svcId, value)
{
	if( !this.gfnIsNull(value) ){
		//parsing
		var json = JSON.parse(value);
		if( json.gubun == "Y" ){
			this.gfnAlert('정상 처리 되었습니다.');
		}
		//메세지가 존재 시 메세지 리턴
		if( !this.gfnIsNull(json.msg) ){
			this.gfnAlert(json.msg);
		}
	}
	//바로 조회
	this.FormBtns.Select.click();
};
//조회조건 변경 시 이벤트 발생
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if( this.searchReset == true ){
		if(e.oldvalue != e.newvalue){
			this.gfnSetFormStatus(this);
			this.gfnGridClear(this.dxGrid);
		}
	}
};

//그리드 더블 클릭 시
this.divData_objGrid_oncelldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	var noSeq = this.dsList.getColumn( e.row, "NO_SEQ" );
	var idSabun = this.dsList.getColumn( e.row, "ID_SABUN" );
	var dsHname = this.dsList.getColumn( e.row, "DS_NAME" );
	
	if(!this.gfnIsNull(noSeq)){
		this.fnRetirePop(noSeq, idSabun, dsHname);
	}
};

//첨부파일 팝업 
this.fnGrid_ExpandUp = function(obj:nexacro.Grid, e:nexacro.GridMouseEventInfo){
	var param = {};

	param.CD_CORP  = this.dsSearch.getColumn(0, "CD_CORP");
	param.ID_SABUN = this.dsList.getColumn( e.row, "ID_SABUN" );
	param.ID_PERSON = this.dsList.getColumn( e.row, "ID_PERSON" );
	param.NO_SEQ   = this.dsList.getColumn( e.row, "NO_SEQ" );
	param.TY_GUBUN = "ERP";
	param.READONLY = "true";
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DAW_RETIRE_REQUEST_FILE", "fnFileCallback", param , 635 ,289 );
}	

//첨부파일 버튼 클릭
this.fnFile = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var cdGubun = "DAW1";
	var cdDir1 = this.ccfCD_CORP.form.CDTextBox.value;
	var cdDir2 = this.dsSearch.getColumn(0, "ID_SABUN");
	var cdDir3 = this.dsList.getColumn(this.dsList.rowposition, "NO_SEQ");
	
	var fileManager = {};
	fileManager.CD_GUBUN = cdGubun;
	fileManager.CD_DIR = [cdDir1,cdDir2,cdDir3];	
	// CD_DIR 만 지정시 CD_DIR 배열 순대로 키1,키2,키3 까지 자동지정
	// 저장되는 디렉토리와 키값이 다른경우 CD_REF 추가로 사용
	//fileManager.CD_REF = [ this.dsList.getColumn(this.dsList.rowposition, "CD_REF1") ];
	// 권한 및 상태에 따라 업로드,삭제 가능여부 지정 (기본: true)
	//로그인 유저가 erp1 이거나 퇴직담당자 지정 화면에서 관리자인 사람만 fileManager.IS_READONLY = false;
	fileManager.IS_READONLY = this.access;
	
	this.gfnFileManager(fileManager, "fnFileCallback");
};

//첨부파일 콜백
this.fnFileCallback = function(strID, val) {
// 	//파일첨부 갯수
// 	this.fileCnt = val.Cnt;
// 	//셋팅 갯수 조절
// 	this.dsList.setColumn(0, "FILE_CNT", this.fileCnt);
// 
// 	// 파일개수를 다시 셋팅
// 	this.dsList.set_enableevent(false);
// 	if(val.Cnt == 0) {
// 		this.dsList.setColumn(0, "NM_FILE", "첨부(0)");
// 	} else {
// 		this.dsList.setColumn(0, "NM_FILE", "첨부(" + val.Cnt + ")");
// 	}
// 	this.dsList.set_enableevent(true);
}; ]]></Script>
    <Objects>
      <Dataset id="dsList" useclientlayout="false">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="DS_CORP" type="STRING" size="256"/>
          <Column id="NO_SEQ" type="BIGDECIMAL" size="256"/>
          <Column id="ID_PERSON" type="INT" size="256"/>
          <Column id="ID_SABUN" type="STRING" size="256"/>
          <Column id="DS_NAME" type="STRING" size="256"/>
          <Column id="CD_DEPT" type="STRING" size="256"/>
          <Column id="DS_DEPT" type="STRING" size="256"/>
          <Column id="CD_EMPTYPE" type="STRING" size="256"/>
          <Column id="DS_EMPTYPE" type="STRING" size="256"/>
          <Column id="CD_OCCUPATION" type="STRING" size="256"/>
          <Column id="DS_OCCUPATION" type="STRING" size="256"/>
          <Column id="CD_POSITION" type="STRING" size="256"/>
          <Column id="DS_POSITION" type="STRING" size="256"/>
          <Column id="NO_RETIRE" type="STRING" size="256"/>
          <Column id="DS_RETIRE" type="STRING" size="256"/>
          <Column id="DT_RETIRE" type="STRING" size="256"/>
          <Column id="CD_BANK" type="STRING" size="256"/>
          <Column id="DS_BANK" type="STRING" size="256"/>
          <Column id="NO_IRP" type="STRING" size="256"/>
          <Column id="DT_BIRTHDAY" type="STRING" size="256"/>
          <Column id="NO_APRV" type="STRING" size="256"/>
          <Column id="ST_APRV" type="STRING" size="256"/>
          <Column id="NM_FILE" type="STRING" size="256"/>
          <Column id="ID_INSERT" type="STRING" size="256"/>
          <Column id="ID_UPDATE" type="STRING" size="256"/>
          <Column id="DT_INSERT" type="STRING" size="256"/>
          <Column id="DT_UPDATE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsListchk">
        <ColumnInfo>
          <Column id="MSG" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DAWPR_RETIRE_REQUEST_LIST_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">selectchk</Col>
            <Col id="SP">DAWPR_RETIRE_REQUEST_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DAWPR_RETIRE_REQUEST_DELETE</Col>
          </Row>
          <Row>
            <Col id="TARGET">copy</Col>
            <Col id="SP">DAWPR_RETIRE_REQUEST_COPY</Col>
          </Row>
          <Row>
            <Col id="TARGET">aprv_execute</Col>
            <Col id="SP">DAWPR_RETIRE_REQUEST_APRV_EXECUTE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="DS_CORP" type="STRING" size="256"/>
          <Column id="DT_START" type="STRING" size="256"/>
          <Column id="DT_END" type="STRING" size="256"/>
          <Column id="ID_SABUN" type="STRING" size="256"/>
          <Column id="DS_HNAME" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsOutput"/>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_CORP.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_CORP"/>
      <BindItem id="item2" compid="divSearch.form.ctclDT_START" propid="value" datasetid="dsSearch" columnid="DT_START"/>
      <BindItem id="item3" compid="divSearch.form.ctclDT_END" propid="value" datasetid="dsSearch" columnid="DT_END"/>
      <BindItem id="item4" compid="divSearch.form.ccfID_SABUN.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="ID_SABUN"/>
      <BindItem id="item5" compid="divSearch.form.ccfID_SABUN.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_HNAME"/>
    </Bind>
  </Form>
</FDL>
