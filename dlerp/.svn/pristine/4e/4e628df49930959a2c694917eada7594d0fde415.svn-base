<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1100" height="600" titletext="New Form" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="sta00" taborder="0" text="현장코드" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_SITE" CodeFindName="DZX_CFSITE" CDTextWidth="80" taborder="1" left="sta00:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" enable="false"/>
              <Static id="sta01" taborder="2" text="계약번호" left="ccfCD_SITE:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfNO_CONT" CDTextWidth="100" taborder="3" left="sta01:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" enable="false"/>
              <Static id="sta02" taborder="4" text="차수" left="ccfNO_CONT:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfSN_SEQ" CDTextWidth="80" taborder="5" left="sta02:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" enable="false"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="40" right="0"/>
              <Div id="divData01" taborder="1" left="0" top="objGrid:6" width="892" height="30" text="">
                <Layouts>
                  <Layout>
                    <Static id="sta11" taborder="0" text="계약 물량을 초과하는 추가 소요 Mast에 대한 임대료는 일금 ￦" left="9" top="5" width="351" height="20" textDecoration="none"/>
                    <MaskEdit id="txtDS_GISUNGMETHOD" taborder="1" left="352" top="5" height="20" width="90" format="9,990"/>
                    <Static id="sta03" taborder="2" text="원/EA는 왕복 운반비를 포함한다." left="447" top="5" width="215" height="20" textDecoration="none" onclick="divData_divData00_sta03_onclick"/>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	if(!this.gfnIsNull(this.getOwnerFrame().CD_SITE) && !this.gfnIsNull(this.getOwnerFrame().NO_CONT) && !this.gfnIsNull(this.getOwnerFrame().SN_SEQ)) {
		this.dsSearch.setColumn(0, "CD_SITE", this.getOwnerFrame().CD_SITE);
		//this.divSearch.form.ccfCD_SITE.form.DSTextBox.set_value(this.getOwnerFrame().DS_SITE);	
		this.dsSearch.setColumn(0, "NO_CONT", this.getOwnerFrame().NO_CONT);
		//this.divSearch.form.ccfNO_CONT.form.DSTextBox.set_value(this.getOwnerFrame().DS_SUBCON);	
		this.dsSearch.setColumn(0, "SN_SEQ", this.getOwnerFrame().SN_SEQ);
		//this.divSearch.form.ccfSN_SEQ.form.DSTextBox.set_value(this.getOwnerFrame().TY_CONT);	
		
		this.ccfCD_SITE.form.fnCodeFindLoad();
		this.ccfNO_CONT.form.fnCodeFindLoad();
		this.ccfSN_SEQ.form.fnCodeFindLoad();
		
		this.FormBtns.Select.click();
	}	
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
	//this.FormBtns.Select.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {

};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_SITE = this.divSearch.form.ccfCD_SITE;
	this.ccfNO_CONT = this.divSearch.form.ccfNO_CONT;
	this.ccfSN_SEQ = this.divSearch.form.ccfSN_SEQ;
	
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {	
	this.ccfNO_CONT.CodeFindName = "DCX_CFCONTRACT_01";
	this.ccfSN_SEQ.CodeFindName = "DCX_CFSNSEQ_01";
	
	this.ccfNO_CONT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfSN_SEQ.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";

	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DC", "DCC_RENTAL_OBJECT");
	
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_SITE", "string");
	this.dsSelect.addColumn("NO_CONT", "string");
	this.dsSelect.addColumn("SN_SEQ", "string");

	this.dsSave = new Dataset();
	this.dsSave.addColumn("CD_SITE", "string");
	this.dsSave.addColumn("NO_CONT", "string");
	this.dsSave.addColumn("SN_SEQ", "string");
	this.dsSave.addColumn("CD_CODE", "string");
	this.dsSave.addColumn("DS_NO", "string");
	this.dsSave.addColumn("DS_SPEC", "string");
	this.dsSave.addColumn("UP_RENTAL", "bigdecimal");
	this.dsSave.addColumn("QN_MONTH", "int");
	this.dsSave.addColumn("QN_OBJECT", "int");
	this.dsSave.addColumn("DS_FROMTO", "string");
	this.dsSave.addColumn("DS_DESC", "string");
	
	this.dsSaveAm = new Dataset();
	this.dsSaveAm.addColumn("CD_SITE", "string");
	this.dsSaveAm.addColumn("NO_CONT", "string");
	this.dsSaveAm.addColumn("SN_SEQ", "string");
	this.dsSaveAm.addColumn("AM_ADDITIONAL_COST", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;

	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsSelect.setColumn(0, "NO_CONT", this.dsSearch.getColumn(0, "NO_CONT"));
	this.dsSelect.setColumn(0, "SN_SEQ", this.dsSearch.getColumn(0, "SN_SEQ"));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect select_am=dsSelect";
	var outData     = "dsList=select0 dsListAm=select_am0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	var nrow = this.gfnGridAdd(this.dxGrid); // top (default), bottom, current	
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	// 그리드 필수항목 체크``
	if (!this.gfnGridValidate(this.dxGrid)) return;	
	
	this.dxGrid.updateToDataset();
	
	var arr_in = [];
	
	this.dsSave.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
			case "U":
			case "D":
				var nrow = this.dsSave.addRow();
				this.dsSave.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
				this.dsSave.setColumn(nrow, "NO_CONT", this.dsSearch.getColumn(0, "NO_CONT"));
				this.dsSave.setColumn(nrow, "SN_SEQ", this.dsSearch.getColumn(0, "SN_SEQ"));
				this.dsSave.setColumn(nrow, "CD_CODE", this.dsList.getColumn(i, "CD_CODE"));
				this.dsSave.setColumn(nrow, "DS_NO", this.dsList.getColumn(i, "DS_NO"));
				this.dsSave.setColumn(nrow, "DS_SPEC", this.dsList.getColumn(i, "DS_SPEC"));
				this.dsSave.setColumn(nrow, "UP_RENTAL", this.dsList.getColumn(i, "UP_RENTAL"));
				this.dsSave.setColumn(nrow, "QN_MONTH", this.dsList.getColumn(i, "QN_MONTH"));
				this.dsSave.setColumn(nrow, "QN_OBJECT", this.dsList.getColumn(i, "QN_OBJECT"));
				this.dsSave.setColumn(nrow, "DS_FROMTO", this.dsList.getColumn(i, "DS_FROMTO"));
				this.dsSave.setColumn(nrow, "DS_DESC", this.dsList.getColumn(i, "DS_DESC"));
				break;						
		}
	}
	
	if(this.dsSave.rowcount > 0) {
		arr_in.push("save=dsSave");
	}
	
	
	var update = false;
	if (this.dsListAm.rowcount > 0) {
		// 싱글폼쪽 update 유무 체크		
		if(this.dsListAm.getRowType(0) == Dataset.ROWTYPE_UPDATE) {
			update = true;
		}
	}
	
	if (update) {
		arr_in.push("save_am=dsSaveAm");
		
		this.dsSaveAm.clearData();
		this.dsSaveAm.addRow();
		
		this.dsSaveAm.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
		this.dsSaveAm.setColumn(0, "NO_CONT", this.dsSearch.getColumn(0, "NO_CONT"));
		this.dsSaveAm.setColumn(0, "SN_SEQ", this.dsSearch.getColumn(0, "SN_SEQ"));
		this.dsSaveAm.setColumn(0, "AM_ADDITIONAL_COST", this.dsListAm.getColumn(0, "AM_ADDITIONAL_COST"));
	}
	
	if (this.dsSave.rowcount == 0 && this.dsSaveAm.rowcount == 0) return;
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = arr_in.join(' ');
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {	
	var validate = true;
	
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "CD_SITE"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.divSearch.form.ccfCD_SITE.form.CDTextBox.setFocus();
		}
		this.gfnAlert("현장코드를 입력하세요.", "fnVaidateCallback");
	}else if (this.gfnIsNull(this.dsSearch.getColumn(0, "NO_CONT"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.divSearch.form.ccfNO_CONT.form.CDTextBox.setFocus();
		}
		this.gfnAlert("계약번호를 입력하세요.", "fnVaidateCallback");
	}else if (this.gfnIsNull(this.dsSearch.getColumn(0, "SN_SEQ"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.divSearch.form.ccfSN_SEQ.form.CDTextBox.setFocus();
		}
		this.gfnAlert("차수를 입력하세요.", "fnVaidateCallback");
	}
	
	return validate;
	
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);		
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}	
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
//코드파인드의 파라미터 값을 넘겨줄때 사용하는 함수
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	
	if (id == "ccfNO_CONT") {
		if (this.gfnIsNull(this.dsSearch.getColumn(0, "CD_SITE"))) {
 			this.gfnAlert("현장코드를 먼저 입력하세요.");
 			return false;
 		}
		
		dsUserParam.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	}
	else if (id == "ccfSN_SEQ"){
 		if (this.gfnIsNull(this.dsSearch.getColumn(0, "NO_CONT"))) {
 			this.gfnAlert("계약번호를 먼저 입력하세요.");
 			return false;
 		}
  
		dsUserParam.setColumn(nrow, "VALUE1", this.dsSearch.getColumn(0, "NO_CONT"));
	}	
	
	return true;
}
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/

/************************************************************************
 * 기타 이벤트
 ************************************************************************/ 
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
		
		if(e.columnid == "CD_SITE"){
			this.divSearch.form.ccfNO_CONT.form.fnCodeFindClear();
		}else if(e.columnid == "NO_CONT"){
			this.divSearch.form.ccfSN_SEQ.form.fnCodeFindClear();
		}
	}
};


this.dsListAm_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this, "U");	// 폼상태 초기화	
	}
};
]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DCCPR_RENTAL_OBJECT_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DCCPR_RENTAL_OBJECT_SAVE</Col>
          </Row>
          <Row>
            <Col id="TARGET">select_am</Col>
            <Col id="SP">DCCPR_RENTAL_OBJECT_ADDITIONAL_COST_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save_am</Col>
            <Col id="SP">DCCPR_RENTAL_OBJECT_ADDITIONAL_COST_SAVE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="NO_CONT" type="STRING" size="256"/>
          <Column id="SN_SEQ" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_SITE"/>
            <Col id="NO_CONT"/>
            <Col id="SN_SEQ"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsListAm" onvaluechanged="dsListAm_onvaluechanged">
        <ColumnInfo>
          <Column id="AM_ADDITIONAL_COST" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item2" compid="divSearch.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item0" compid="divSearch.form.ccfNO_CONT.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="NO_CONT"/>
      <BindItem id="item1" compid="divSearch.form.ccfSN_SEQ.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="SN_SEQ"/>
      <BindItem id="item3" compid="divData.form.divData01.form.txtDS_GISUNGMETHOD" propid="value" datasetid="dsListAm" columnid="AM_ADDITIONAL_COST"/>
    </Bind>
  </Form>
</FDL>
