/**
*  컨설팅 표준화 작업
*  @FileName 	Popup.js 
*  @Creator 	consulting
*  @CreateDate 	2017.03.08
*  @Desction   		
************** 소스 수정 이력 ***********************************************
*  date          		Modifier                Description
*******************************************************************************
*  2017.03.08     	consulting 	           	    최초 생성 
*  2017.10.17     	consulting  	           	주석 정비
*  2018.01.16		consulting					gfnGetApplication 공통함수 변경
*******************************************************************************
*/

var pForm = nexacro.Form.prototype;
 
/**
 * @class 팝업오픈
 * @param {String} sPopupId	- 팝업ID
 * @param {String} sUrl	 - 팝업URL
 * @param {String} [oArg] - 전달값
 * @param {String} [sPopupCallback] - 팝업콜백
 * @param {Object} [oOption] - 팝업옵션 <br>
 *	oOption.top : 상단 좌표 <br>
 *	oOption.left : 좌측 좌표 <br>
 *	oOption.width : 넓이 <br>
 *	oOption.height : 높이 <br>
 *	oOption.popuptype : 팝업종류(modal:showModal, modeless:application.open, modalsync:showModalSync, modalwindow:showModalWindow) <br>
 *	oOption.layered : 투명 윈도우 <br>
 *	oOption.opacity : 투명도 <br>
 *	oOption.autosize : autosize <br>
 * @return N/A
 * @example
 * this.gfnOpenPopup(this);
 */
pForm.gfnOpenPopup = function ( sPopupId, sUrl, oArg, sPopupCallback, oOption)
{
    var objApp = pForm.gfnGetApplication();
	var nLeft = -1;
	var nTop = -1;
	var nWidth = -1;
	var nHeight = -1;
	var bShowTitle = true;	
	var bShowStatus = false;	
	var sPopupType = "modal";
	var bLayered = false;
	var nOpacity = 100;
	var bAutoSize = false;
	var bResizable = false;
	var bShowCloseButton = true;

	var sTitleText = "";
	var callbackFunction = null;
	
	if (this.gfnIsFunction(sPopupCallback)) {
		callbackFunction = sPopupCallback;		
	} else {
		callbackFunction = this[this.gfnIsNull(sPopupCallback) ? "_gfnPopupAfter" : sPopupCallback];
	}

	for (var key in oOption) {
       if (oOption.hasOwnProperty(key)) {
            switch (key) 
			{
				case "top":				
					nTop = parseInt(oOption[key]);
					break;
				case "left":
					nLeft = parseInt(oOption[key]);
					break;
				case "width":
					nWidth = parseInt(oOption[key]);
					break;
				case "height":
					nHeight = parseInt(oOption[key]);
					break;
				case "popuptype":
					sPopupType = oOption[key];
					break;
				case "layered":
					bLayered = oOption[key];
					break;
				case "opacity":
					nOpacity =oOption[key];
					break
				case "autosize":
					bAutoSize = oOption[key];
					break;
				case "resizable":
					bResizable = oOption[key];
					break;
				case "titlebar":
					if (""+oOption[key] == "false")	bShowTitle = false;		
					break;
				case "title":					
					sTitleText = oOption[key];	
					break;		
				case "closebutton":					
					if (""+oOption[key] == "false")	bShowCloseButton = false;	
					break;			
			}	
        }
    }

	var sOpenalign = "";
	var curX = 0;
	var curY = 0;
	if(nLeft == -1 && nTop == -1) 
	{		
		sOpenalign = "center middle";
		if (system.navigatorname == "nexacro") {
			curX = objApp.mainframe.left;
			curY = objApp.mainframe.top;
		}else{
			curX = window.screenLeft;
			curY = window.screenTop;
		}
		
        nLeft   =  curX + (Number(new String(objApp.mainframe.width).replace("px","")) / 2) - Math.round(nWidth / 2);
	    nTop    = curY + (Number(new String(objApp.mainframe.height).replace("px","")) / 2) - Math.round(nHeight / 2) ;		
		
	}else{
		nLeft   =  this.getOffsetLeft() + nLeft;
		nTop   =  this.getOffsetTop() + nTop;
	}
		
	if(nWidth == -1 || nHeight == -1)
	{
		bAutoSize = true;
	}
	
	if(nHeight > 0) {
		nHeight += 25;
	}
	
	var comp = this.gfnLookup(this, sPopupId)
	if(comp != null) {
		comp.destroy();
	}	
	var objParentFrame = this.getOwnerFrame();

    if(sPopupType == "modeless")
    {
        var sOpenStyle= "showtitlebar=true showstatusbar=false showontaskbar=true showcascadetitletext=false resizable=true autosize="+bAutoSize+" titletext="+sTitleText;
		var arrPopFrame = nexacro.getPopupFrames();

		if (arrPopFrame[sPopupId]) {	
			if (system.navigatorname == "nexacro") {
				arrPopFrame[sPopupId].setFocus();
			} else {	
				arrPopFrame[sPopupId]._getWindowHandle().focus();
			}
		}
		else {
			nexacro.open(sPopupId,sUrl,objParentFrame,oArg,sOpenStyle,nLeft, nTop, nWidth, nHeight, this);
		}
    }
	else if(sPopupType == "modalsync")
    {
		newChild = new nexacro.ChildFrame;
		newChild.init(sPopupId, nLeft, nTop, nWidth, nHeight, null, null, sUrl);
		
		//newChild.set_dragmovetype("all");
		newChild.set_showcascadetitletext(false);
		newChild.set_showtitlebar(bShowTitle);    //titlebar는 안보임
		newChild.set_autosize(bAutoSize);	
		newChild.set_resizable(bResizable);    //resizable 안됨
		if(!this.gfnIsNull(sTitleText)) newChild.set_titletext(sTitleText);
		newChild.set_showstatusbar(bShowStatus);    //statusbar는 안보임
		newChild.set_openalign(sOpenalign);
		newChild.set_layered(bLayered);
		newChild.set_overlaycolor("RGBA(0, 0, 0, 0.2)");
		system.showModalSync(newChild, objParentFrame, oArg);	
	}
	else if(sPopupType == "modalwindow")
    {
		newChild = new nexacro.ChildFrame;
		newChild.init(sPopupId, nLeft, nTop, nWidth, nHeight, null, null, sUrl);
		
		//newChild.set_dragmovetype("all");
		newChild.set_showcascadetitletext(false);
		newChild.set_showtitlebar(bShowTitle);    //titlebar는 안보임
		newChild.set_autosize(bAutoSize);	
		newChild.set_resizable(bResizable);    //resizable 안됨
		if(!this.gfnIsNull(sTitleText)) newChild.set_titletext(sTitleText);
		newChild.set_showstatusbar(bShowStatus);    //statusbar는 안보임
		newChild.set_openalign(sOpenalign);
		newChild.set_layered(bLayered);
		newChild.set_overlaycolor("RGBA(0, 0, 0, 0.2)");
		var rtn = system.showModalWindow(newChild, sPopupId, objParentFrame, oArg);		
        return rtn;
//         var objCF = new ChildFrame();
// 
// 		objCF .init("CF_modal", 0, 0, 500, 500);
// 		objCF .set_formurl("cmm::cmmPopup.xfdl");
// 		var ret = system.showModalWindow(objCF , "CF_modal", this.getOwnerFrame(), {a:'aaa', b:'bbb'}, this);

	}
    else if(sPopupType == "codefind")
    {
		newChild = new nexacro.ChildFrame;
		newChild.init(sPopupId, nLeft, nTop, nWidth, nHeight, null, null, sUrl);
		
		//newChild.set_dragmovetype("all");
		newChild.set_titlebarheight(35);
		newChild.set_showcascadetitletext(true);
		newChild.set_showtitlebar(bShowTitle);    //titlebar는 안보임
		newChild.set_autosize(false);	
		newChild.set_resizable(true);
		if(!this.gfnIsNull(sTitleText)) newChild.set_titletext(sTitleText);
		newChild.set_showstatusbar(bShowStatus);    //statusbar는 안보임
		newChild.set_openalign(sOpenalign);
		newChild.set_layered(bLayered);
		newChild.set_overlaycolor("RGBA(0, 0, 0, 0)");
		newChild.set_border("1px solid #000000");
		newChild.showModal(objParentFrame, oArg, this, function(svcId, strRtn){
			if (this.gfnIsFunction(callbackFunction))
			{
				callbackFunction.call(this, svcId, strRtn);		
			}
		});

		//newChild.titlebar.closebutton.set_visible(false);	//close버튼 visible false 처리
		//newChild.style.set_bordertype("round 10 10");
		//newChild.style.set_background("white");    
		//newChild.style.set_opacity(nOpacity);
		return newChild;
    }	
    else if(sPopupType == "form")
    {
		if(nWidth == -1 || nHeight == -1)
		{
			if(sPopupId.startsWith("DIALOG#")) {
				bAutoSize = true;
			} else {
				if (nexacro.getEnvironmentVariable("evQuikView") == "Y") {
					nWidth = Number(new String(objApp.mainframe.width).replace("px","")) - 180;
					nHeight = Number(new String(objApp.mainframe.height).replace("px","")) - 80;
					bAutoSize = false;
				} else {
					nWidth = this.objApp.gvWorkFrame.width;
					nHeight = this.objApp.gvWorkFrame.height;
					if(nHeight == 0) {
						nHeight = this.objApp.gvMainFrame.height - 86;
					}
					bAutoSize = false;
					
					if(objApp.gvHFrame.separatesize == "0,*") {
						nWidth -= 250;
					}
				}
			}
		}
		newChild = new nexacro.ChildFrame;
		newChild.init(sPopupId, nLeft, nTop, nWidth, nHeight, null, null, sUrl);
		
		//newChild.set_dragmovetype("all");
		newChild.set_titlebarheight(35);
		newChild.set_showcascadetitletext(true);
		newChild.set_showtitlebar(bShowTitle);    //titlebar는 안보임
		newChild.set_autosize(bAutoSize);	
		newChild.set_resizable(true);    //resizable 안됨
		if(!this.gfnIsNull(sTitleText)) newChild.set_titletext(sTitleText);
		newChild.set_showstatusbar(bShowStatus);    //statusbar는 안보임
		newChild.set_openalign(sOpenalign);
		newChild.set_layered(bLayered);
		newChild.set_overlaycolor("RGBA(0, 0, 0, 0.2)");
		return newChild;
    }
    else if(sPopupType == "notice")
    {
		newChild = new nexacro.ChildFrame;
		newChild.init(sPopupId, nLeft, nTop, nWidth, nHeight, null, null, sUrl);
		
		//newChild.set_dragmovetype("all");
		newChild.set_titlebarheight(20);
		newChild.set_showcascadetitletext(true);
		newChild.set_showtitlebar(bShowTitle);    
		newChild.set_autosize(bAutoSize);	
		newChild.set_resizable(bResizable);    
		if(!this.gfnIsNull(sTitleText)) newChild.set_titletext(sTitleText);
		newChild.set_showstatusbar(bShowStatus);    //statusbar는 안보임
		newChild.set_openalign(sOpenalign);
		newChild.set_layered(bLayered);
		newChild.set_overlaycolor("RGBA(0, 0, 0, 0)");
		newChild.set_border("1px solid #000000");
		this.addChild(sPopupId, newChild);
		for (p in oArg)
		{
			if (oArg.hasOwnProperty(p))
			{
				newChild[p] = oArg[p];
			}
		}
		newChild.show();
		newChild.titlebar.minbutton.set_visible(false);
		newChild.titlebar.maxbutton.set_visible(false);
		newChild.titlebar.normalbutton.set_visible(false);
    }
    else
    {
		newChild = new nexacro.ChildFrame;
		newChild.init(sPopupId, nLeft, nTop, nWidth, nHeight, null, null, sUrl);
		
		//newChild.set_dragmovetype("all");
		newChild.set_titlebarheight(35);
		newChild.set_showcascadetitletext(true);
		newChild.set_showtitlebar(bShowTitle);    //titlebar는 안보임
		newChild.set_autosize(bAutoSize);	
		newChild.set_resizable(bResizable);    //resizable 안됨
		if(!this.gfnIsNull(sTitleText)) newChild.set_titletext(sTitleText);
		newChild.set_showstatusbar(bShowStatus);    //statusbar는 안보임
		newChild.set_openalign(sOpenalign);
		newChild.set_layered(bLayered);
		newChild.set_overlaycolor("RGBA(0, 0, 0, 0.2)");
		newChild.showModal(objParentFrame, oArg, this, function(svcId, strRtn){			
			if (this.gfnIsFunction(callbackFunction))
			{
				callbackFunction.call(this, svcId, strRtn);
			}
		});
		newChild.titlebar.closebutton.set_visible(bShowCloseButton);	//close버튼 visible false 처리
    }
};

pForm._gfnPopupAfter = function() {
};

/*
 *	권한 체크 후 화면 오픈
 */ 
pForm.gfnFormOpen = function(cd_module, id_form, callback, param, width, height) {
	//if(this.gfnIsNull(cd_module)) return;
	if(this.gfnIsNull(id_form)) return;
	//if(this.gfnIsNull(callback)) return;
	
	var args = [];
	args.push("type=popup");
	args.push("cd_module=" + cd_module);
	args.push("id_form=" + id_form);
	if(callback!=null) args.push("callback=" + callback);
	if(width!=null) args.push("dwidth=" + width);
	if(height!=null) args.push("dheight=" + height);
	
	if(!this.gfnIsNull(param)) {
		for (var key in param) {
			if (param.hasOwnProperty(key)) {
				if(!this.gfnIsNull(param[key])) {
					if(param[key] instanceof nexacro.Decimal) {
						param[key] = Number(param[key]);
					}					
				}
			}
		}
	}
	
// 	if(!this.gfnIsNull(param)) {
// 		for (var key in param) {
// 			if (param.hasOwnProperty(key)) {
// 				if(this.gfnIsNull(param[key])) {
// 					args.push(key + "=");
// 				} else {
// 					if(typeof(param[key]) == "string") {
// 						args.push(key + "=" + param[key].replace(/ /g, "%20").replace(/\=/g, "%3D"));
// 					} else if(typeof(param[key]) == "object") {
// 						if(param[key] instanceof nexacro.Decimal) {
// 							args.push(key + "=" + param[key]);
// 						} 
// 						else {
// 							args.push(key + "=obj://" + JSON.stringify(param[key]).replace(/ /g, "%20").replace(/\=/g, "%3D")); //.replace(/ /g, "%20").replace(/\=/g, "%3D"));
// 						}
// 					} else {
// 						args.push(key + "=" + param[key]);
// 					}		
// 				}
// 			}
// 		}
// 	}
	
	var objApp = pForm.gfnGetApplication();
	
	if (nexacro.getEnvironmentVariable("evQuikView") == "Y") {
		objApp._gfnGetFormAuthQV(this.getOwnerFrame(), this, cd_module, id_form, args.join(' '), param);
	} else {
		objApp.gvLeftFrame.form.fnAuthForm(this, cd_module, id_form, args.join(' '), param);
	}
};

/*
 *	권한체크 필요없는 화면 오픈
 *	=> 19.10.06 권한체크로 변경
 */ 
pForm.gfnFormOpenNonAuth = function(cd_module, id_form, callback, param, width, height) {
	this.gfnFormOpen(cd_module, id_form, callback, param, width, height);
	
// 	var objForm = {
// 	};
// 
// 	param.type = "dialog";
// 	objForm.CUR_FORM = this;
// 	objForm.CD_MODULE = cd_module;
// 	objForm.ID_FORM = id_form;
// 	objForm.POP_WIDTH = this.gfnIsNull(width) ? 0: nexacro.toNumber(width);
// 	objForm.POP_HEIGHT = this.gfnIsNull(height) ? 0: nexacro.toNumber(height);
// 	objForm.POP_CALLBACK = this.gfnIsNull(callback) ? "": callback;
// 	objForm.POP_ARGS = param;
// 	
// 	this.gfnCallPopup(objForm, param.type);
	
};

/*
 *	파일 관리자 오픈
 */ 
pForm.gfnFileManager = function(fileManager, callback) {
	var param = {};
	param.FileManager = fileManager;
	var options = {
		title: "첨부파일",
		resizable: true
	}
	this.gfnOpenPopup("filemanager", "cmm::cmmFileManager.xfdl", param, callback, options);
};

pForm.gfnClosePopup = function(oRtn)
{
	if (this.opener)
	{		
		//팝업이 열려있으면 정리..
		if (this.hasPopupFrame())
		{
			var oPopFrame = this.getOwnerFrame();		
			var arrPopFrame = nexacro.getPopupFrames(oPopFrame) ;			
			
			for (var i=arrPopFrame.length-1; i>=0; i--) 
			{			
				var rObj = arrPopFrame[i];	
				rObj.destroy();
				rObj = null;
			}
		}
		
		this.close(oRtn);		
	} 
	else
	{
		if(this.getOwnerFrame().opener) 
		{
  			this.getOwnerFrame().form.fnWorkFrameClose(oRtn);
  		} 
  		else 
		{
  			var winID = this.objApp.gvWorkFrame.getActiveFrame().arguments["ID_WIN"];
  			if(this.objApp.gvWorkFrame.getActiveFrame().form.fnWorkFrameClose(oRtn)) 
			{
  				this.objApp.gvMdiFrame.form.fnTabOnClose(winID);
  			}
  		}
	}
};

pForm.gfnOpenNotice = function(id, title, content, center, left, top, width, height, mLeft, mTop) {
	
	var divPopId = "divNoticePopup"+id;	
	var oArg = {paramContents:content, paramView: true};
	var oOption = {popuptype:"notice", title:title, width: width, height: height, left: left, top: top};
	if(center) {
		oOption = {popuptype:"notice", title:title, width: width, height: height};
	}
	this.gfnOpenPopup(divPopId,"cmm::cmmNotice.xfdl",oArg,"",oOption);
	if(mLeft != null) {
		this[divPopId].set_left(this[divPopId].left+mLeft);
	}
	if(mTop != null) {
		this[divPopId].set_top(this[divPopId].top+mTop);
	}
	return divPopId;
};

pForm.gfnOpenNoticePop = function(id, title, content, wruser, wrdate, center, left, top, width, height, mLeft, mTop) {
	
	var divPopId = "divNoticePopup"+id;	
	var oArg = {paramContents:content, paramTitle:title, paramWrUser:wruser, paramWrDate:wrdate, paramSnSeq:id};
	var oOption = {popuptype:"notice", title:false, width: 354, height:260, left: left, top: top};
	
	this.gfnOpenPopup(divPopId,"dz::dzz/DZZ_MAIN_NOTICE_POP.xfdl",oArg,"",oOption);
	
	if(mLeft != null) {
		this[divPopId].set_left(this[divPopId].left+mLeft);
	}
	
	if(mTop != null) {
		this[divPopId].set_top(this[divPopId].top+mTop);
	}
	return divPopId;
};

pForm.gfnOpenSearchComboPop = function(args) {
	
	var form = this;

	if(typeof args.BIND_DIV == "object") form = args.BIND_DIV;
	
	var objp = args.BIND_OBJECT;
	var tleft = 0,ttop = 0;
	while(form != objp) {
		tleft += nexacro.toNumber(objp.getOffsetLeft());
		ttop  += nexacro.toNumber(objp.getOffsetTop());
		objp = objp.parent;
	};
	
	//Search Combo div 생성
    var divSearchCombo = new Div();
	divSearchCombo
		.init(
			"divSearchCombo" + args.BIND_OBJECT.taborder,
			tleft,
			ttop + nexacro.toNumber(args.BIND_OBJECT.getOffsetHeight()),
			args.COMBO_WIDTH  == null ? nexacro.toNumber(args.BIND_OBJECT.width) : args.COMBO_WIDTH, 
			args.COMBO_HEIGHT == null ? 200 : args.COMBO_HEIGHT
		);
	
	divSearchCombo
		._comboBindDataset 	= args.BIND_DATASET;
	divSearchCombo
		._comboBindColumn 	= args.BIND_COLUMN;
	divSearchCombo
		._comboExecColumn 	= args.EXEC_COLUMN;
	divSearchCombo
		._comboBindObject	= args.BIND_OBJECT;
	divSearchCombo
		._comboBindWidths	= args.BIND_WIDTHS;
	divSearchCombo
		._comboRowSize		= args.COMBO_ROWSIZE;
	divSearchCombo
		._comboFilter		= args.COMBO_FILTER == null ? false : args.COMBO_FILTER;
	divSearchCombo
		.set_async(false);
	divSearchCombo
		.set_url("cmm::cmmSearchCombo.xfdl");
	
	form
		.addChild(
			divSearchCombo.name, 
			divSearchCombo
		);
    divSearchCombo
		.show();
};

pForm.gfnOpenAppr = function(callbackFunc, oParams) {
	var context = "/";
	if (nexacro.getEnvironmentVariable("evContextPath") != undefined) {
		context = nexacro.getEnvironmentVariable("evContextPath");
	}
	var url = window.location.protocol + "//" + window.location.host + context + "api/approval/pid.do?" +
				"CD_CORP=" + this.dsAprvOut.getColumn(0, "CD_CORP") +
				"&NO_APRV=" + this.dsAprvOut.getColumn(0, "NO_APRV") +
				"&CD_CORP_SUFFIX=" + this.dsAprvOut.getColumn(0, "CD_CORP_SUFFIX");
	fetch(url, {
		method: "GET",
		headers: {
			"Content-Type": "application/x-www-form-urlencoded",
			"Accept": "*/*",
		},
	})
 	.then(response => response.json())
 	.then(res => {
		var w = res.width;
		var h = res.height;
		
		var dualScreenLeft = window.screenLeft !==  undefined ? window.screenLeft : window.screenX;
		var dualScreenTop = window.screenTop !==  undefined   ? window.screenTop  : window.screenY;
		var width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;
		var height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;
		var systemZoom = width / window.screen.availWidth;
		var left = (width - w) / 2 / systemZoom + dualScreenLeft;
		var top = (height - h) / 2 / systemZoom + dualScreenTop;
		
		var win = window.open(
			res.url,
			'전자결재',
			'toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=yes, resizable=no, copyhistory=no, ' +
			'width=' + (w / systemZoom) + ', height=' + (h / systemZoom) + ', top=' + top + ', left=' + left
		);
		
		if (win == null || typeof(win) == "undefined" || (win == null && win.outerWidth == 0) || (win != null && win.outerHeight == 0) || win.test == "undefined") {
			alert("팝업 차단 기능이 설정되어있습니다\n\n차단 기능을 해제(팝업허용) 한 후 다시 이용해 주십시오.");
		}
	});
};

pForm._gfnAprvInit = function(oParam) {
	var nrow = this._dsProc.findRow("TARGET", "aprv_init");
	if (nrow < 0) {
		nrow = this._dsProc.addRow();
		this._dsProc.setColumn(nrow, "TARGET", "aprv_init");
		this._dsProc.setColumn(nrow, "SP", "DZZPR_APRV_INIT_INSERT")
	}
	
	if (this.dsAprv == undefined) {
		this.dsAprv = new Dataset();
		this.dsAprv.addColumn("CD_CORP", "string");			// 법인코드
		this.dsAprv.addColumn("ID_AP_TYPE", "string");		// 결재유형ID
		this.dsAprv.addColumn("TY_WRK", "string");			// 작업유형
		this.dsAprv.addColumn("ID_APRV", "string");			// 결재상신ID
		this.dsAprv.addColumn("CD_DEPT_BH", "string");		// 발행부서코드
		this.dsAprv.addColumn("TT_DOC", "string");			// 문서제목
		this.dsAprv.addColumn("AM_APROV", "int");			// 결재금액
		this.dsAprv.addColumn("NO_APRV", "int");			// 결재번호
		this.dsAprv.addColumn("CD_CORP_SUFFIX", "string");	// 법인구분코드
	}
	
	if (this.dsAprvOut == undefined) {
		this.dsAprvOut = new Dataset();
		this.dsAprvOut.addColumn("CD_CORP", "string");			// 법인코드
		this.dsAprvOut.addColumn("ID_AP_TYPE", "string");		// 결재유형ID
		this.dsAprvOut.addColumn("TY_WRK", "string");			// 작업유형
		this.dsAprvOut.addColumn("ID_APRV", "string");			// 결재상신ID
		this.dsAprvOut.addColumn("CD_DEPT_BH", "string");		// 발행부서코드
		this.dsAprvOut.addColumn("TT_DOC", "string");			// 문서제목
		this.dsAprvOut.addColumn("AM_APROV", "int");			// 결재금액
		this.dsAprvOut.addColumn("NO_APRV", "int");				// 결재번호
		this.dsAprvOut.addColumn("CD_CORP_SUFFIX", "string");	// 법인구분코드
	}
	
	this.dsAprv.clearData();
	this.dsAprv.addRow();
	
	this.dsAprv.setColumn(0, "CD_CORP"       , oParam.CD_CORP == undefined ? "" : oParam.CD_CORP);					// 법인코드
	this.dsAprv.setColumn(0, "ID_AP_TYPE"    , oParam.ID_AP_TYPE == undefined ? "" : oParam.ID_AP_TYPE);			// 결재유형ID
	this.dsAprv.setColumn(0, "TY_WRK"        , oParam.TY_WRK == undefined ? "" : oParam.TY_WRK);					// 작업유형
	this.dsAprv.setColumn(0, "ID_APRV"       , oParam.ID_APRV == undefined ? "" : oParam.ID_APRV);					// 결재상신ID
	this.dsAprv.setColumn(0, "CD_DEPT_BH"    , oParam.CD_DEPT_BH == undefined ? "" : oParam.CD_DEPT_BH);			// 발행부서코드
	//this.dsAprv.setColumn(0, "TT_DOC"        , oParam.TT_DOC == undefined ? "" : oParam.TT_DOC);					// 문서제목
	this.dsAprv.setColumn(0, "TT_DOC"        , oParam.TT_DOC == undefined ? "" : encodeURI(oParam.TT_DOC.replaceAll("&","&amp;")));					// 문서제목
	this.dsAprv.setColumn(0, "AM_APROV"      , oParam.AM_APROV == undefined ? 0 : oParam.AM_APROV);					// 결재금액
	this.dsAprv.setColumn(0, "NO_APRV"       , oParam.NO_APRV == undefined ? 0 : oParam.NO_APRV);					// 결재번호
	this.dsAprv.setColumn(0, "CD_CORP_SUFFIX", oParam.CD_CORP_SUFFIX == undefined ? "" : oParam.CD_CORP_SUFFIX);	// 법인구분코드
};

pForm.gfnAprv = function(oParam, callbackFunc, svcId) {
	this._gfnAprvInit(oParam);
		
	var strSvcId    = svcId;
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "aprv_init=dsAprv";
	var outData     = "dsAprvOut=aprv_init"; 
	var strArg      = "";
	var callBackFnc = callbackFunc;
	
	this.gfnTransaction(strSvcId,		// transaction을 구분하기 위한 svc id값
						strSvcType, 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData, 		// 입력값으로 보낼 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						outData, 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc, true);	// 통신방법 정의 [생략가능]
};

pForm.gfnAprvDoc = function(oParams, callbackFunc) {
	var context = "/";
	if (nexacro.getEnvironmentVariable("evContextPath") != undefined) {
		context = nexacro.getEnvironmentVariable("evContextPath");
	}
	var url = window.location.protocol + "//" + window.location.host + context + "api/approval/piid.do?" +
				"CD_CORP=" + oParams.CD_CORP +
				"&NO_APRV=" + oParams.NO_APRV;
	fetch(url, {
		method: "GET",
		headers: {
			"Content-Type": "application/x-www-form-urlencoded",
			"Accept": "*/*",
		},
	})
 	.then(response => response.json())
 	.then(res => {
		var w = res.width;
		var h = res.height;
		
		var dualScreenLeft = window.screenLeft !==  undefined ? window.screenLeft : window.screenX;
		var dualScreenTop = window.screenTop !==  undefined   ? window.screenTop  : window.screenY;
		var width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;
		var height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;
		var systemZoom = width / window.screen.availWidth;
		var left = (width - w) / 2 / systemZoom + dualScreenLeft;
		var top = (height - h) / 2 / systemZoom + dualScreenTop;
		
		var win = window.open(
			res.url,
			'결재문서 조회',
			'toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=yes, resizable=no, copyhistory=no, ' +
			'width=' + (w / systemZoom) + ', height=' + (h / systemZoom) + ', top=' + top + ', left=' + left
		);
				
		if (win == null || typeof(win) == "undefined" || (win == null && win.outerWidth == 0) || (win != null && win.outerHeight == 0) || win.test == "undefined") {
			alert("팝업 차단 기능이 설정되어있습니다\n\n차단 기능을 해제(팝업허용) 한 후 다시 이용해 주십시오.");
		}
	});
};

pForm.gfnCardBill = function(NO_SEQ, callback) {
	var param = {};
	param.NO_SEQ = NO_SEQ;
	var options = {
		title: "법인카드 사용내역",
		resizable: false,
		width: 360,
		height: 390,
	}
	this.gfnOpenPopup("cardbill", "cmm::cmmCardBill.xfdl", param, callback, options);
};