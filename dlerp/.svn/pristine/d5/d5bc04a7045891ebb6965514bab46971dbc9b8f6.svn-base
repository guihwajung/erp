<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="총괄현황" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="78.0" right="0" cssclass="div_SEARCH_Bg" text="">
          <Layouts>
            <Layout>
              <Div id="ccfCD_SITE" CodeFindName="DBX_CFMAINSITE" CDTextWidth="70" taborder="1" left="0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" onclick="Common_onclick" text=""/>
              <Static id="staCD_CORP" taborder="0" text="현장코드" left="ccfCD_SITE:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Static id="staTY_JAJIK" taborder="2" text="센터코드" left="ccfCD_SITE:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_BUNSO" CodeFindName="DBX_CFBUNSO" CDTextWidth="70" taborder="3" left="staTY_JAJIK:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" onclick="Common_onclick" text=""/>
              <Static id="staTY_UMGB00" taborder="4" text="구분" left="0.0" top="ccfCD_SITE:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Combo id="ccboGUBUN" taborder="5" left="staTY_UMGB00:0.0" top="ccfCD_SITE:10.0" height="24.0" innerdataset="dsGUBUN" datacolumn="DS_CODE" codecolumn="CD_CODE" index="-1" value="" width="80"/>
              <Div id="divSearchDong" taborder="8" left="ccboGUBUN:0.0" top="ccfCD_SITE:10.0" width="649" height="24.0" text="">
                <Layouts>
                  <Layout>
                    <Static id="staTY_JAJIK02" taborder="0" text="동" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
                    <Div id="ccfCD_DONG" CodeFindName="DBX_CFASDONGHO" CDTextWidth="70" taborder="1" left="staTY_JAJIK02:0.0" top="10.0" width="99" height="24.0" url="cmm::cmmCodeFind.xfdl" onclick="Common_onclick" text=""/>
                    <Static id="staTY_JAJIK03" taborder="2" text="호" left="ccfCD_DONG:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
                    <Div id="ccfCD_HO" CodeFindName="DBX_CFASDONGHO" CDTextWidth="70" taborder="3" left="staTY_JAJIK03:0.0" top="10.0" width="99" height="24.0" url="cmm::cmmCodeFind.xfdl" onclick="Common_onclick" text=""/>
                    <Static id="staCN_ROW" taborder="4" text="조회건수:" left="ccfCD_HO:0.0" top="10.0" width="92.0" height="24.0" fittocontents="width" cssclass="sta_WF_SchLabel"/>
                    <Combo id="ccboTY_HAJAJS" taborder="5" left="staCN_ROW:0.0" top="10.0" height="24.0" innerdataset="dsTY_HAJAJS" datacolumn="DS_CODE" codecolumn="CD_CODE" index="-1" value="" width="100" text=""/>
                    <Static id="staTY_JAJIK00" taborder="6" text="접수구분" left="ccboTY_HAJAJS:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
                  </Layout>
                </Layouts>
              </Div>
              <Button id="btnfileimg" taborder="9" text="점검전후/완료사인 사진보기" top="10.0" width="179" height="24.0" left="ccfCD_BUNSO:0.0" onclick="divSearch_btnfileimg_onclick"/>
              <Static id="staTY_UMGB02" taborder="6" text="접수처" left="0.0" top="ccfCD_SITE:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Combo id="ccboMETHOD" taborder="7" left="staTY_UMGB02:0.0" top="ccfCD_SITE:10.0" height="24.0" innerdataset="dsMETHOD" datacolumn="DS_CODE" codecolumn="CD_CODE" index="-1" value="" width="100"/>
              <Div id="divSearchCtm" taborder="10" left="ccboMETHOD:0.0" top="ccfCD_SITE:10.0" width="279" height="24.0" text="">
                <Layouts>
                  <Layout>
                    <Static id="staTY_JAJIK02" taborder="0" text="협력업체" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
                    <Div id="ccfCD_CTM" CodeFindName="DBX_CFHADO" CDTextWidth="70" taborder="1" left="staTY_JAJIK02:0.0" top="10.0" width="99" height="24.0" url="cmm::cmmCodeFind.xfdl" onclick="Common_onclick" text=""/>
                  </Layout>
                </Layouts>
              </Div>
              <Div id="divSearchJob" taborder="11" left="divSearchCtm:0.0" top="ccfCD_SITE:10.0" width="229" height="24.0" text="">
                <Layouts>
                  <Layout>
                    <Static id="staTY_JAJIK02" taborder="0" text="작업코드" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
                    <Div id="ccfCD_JOB" CodeFindName="DBX_CFJOB" CDTextWidth="70" taborder="1" left="staTY_JAJIK02:0.0" top="10.0" width="99" height="24.0" url="cmm::cmmCodeFind.xfdl" onclick="Common_onclick" text=""/>
                  </Layout>
                </Layouts>
              </Div>
              <Static id="staCD_CORP00" taborder="12" text="유형" left="divSearchJob:0.0" top="ccfCD_SITE:10.0" width="92.0" height="24.0" visible="false" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_WI" CodeFindName="DBX_CFCOMM" CDTextWidth="70" taborder="13" left="staCD_CORP00:0.0" top="ccfCD_SITE:10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" onclick="Common_onclick" text="" visible="false"/>
              <Static id="staTY_JAJIK00" taborder="14" text="검색조건" left="ccfCD_WI:0.0" top="ccfCD_SITE:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Combo id="ccboSEARCH" taborder="15" left="staTY_JAJIK00:0.0" top="ccfCD_SITE:10.0" height="24.0" innerdataset="dsSEARCH" datacolumn="DS_CODE" codecolumn="CD_CODE" index="-1" value="" width="100"/>
              <Static id="staTY_JAJIK02" taborder="16" text="공종" left="ccboSEARCH:0.0" top="ccfCD_SITE:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_ACT" CodeFindName="DBX_CFACT_ALL" CDTextWidth="70" taborder="17" left="staTY_JAJIK02:0.0" top="ccfCD_SITE:10.0" width="465" height="24.0" url="cmm::cmmCodeFind.xfdl" onclick="Common_onclick" text=""/>
              <Calendar id="ctclDT_FROM" taborder="20" left="ccfCD_ACT:0.0" top="ccfCD_SITE:10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true"/>
              <Static id="sta00" taborder="18" text="~" left="ctclDT_FROM:0.0" top="ccfCD_SITE:10.0" width="30.0" height="24.0" cssclass="sta_WF_AC"/>
              <Calendar id="ctclDT_TO" taborder="19" left="sta00:0.0" top="ccfCD_SITE:10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true"/>
              <Static id="staDT" taborder="21" text="접수일자" left="ctclDT_TO:0.0" top="ccfCD_SITE:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Calendar id="ctclDT_VISITPLAN_FROM" taborder="24" left="staDT:0.0" top="ccfCD_SITE:10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true"/>
              <Static id="sta01" taborder="22" text="~" left="ctclDT_VISITPLAN_FROM:0.0" top="ccfCD_SITE:10.0" width="30.0" height="24.0" cssclass="sta_WF_AC"/>
              <Calendar id="ctclDT_VISITPLAN_TO" taborder="23" left="sta01:0.0" top="ccfCD_SITE:10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true"/>
              <Static id="staDT00" taborder="25" text="완료일자" left="ctclDT_VISITPLAN_TO:0.0" top="ccfCD_SITE:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Static id="staTY_UMGB01" taborder="26" text="년차" left="staDT00:0.0" top="ccfCD_SITE:10.0" width="92.0" height="24.0" visible="false" cssclass="sta_WF_SchLabel"/>
              <Combo id="ccboTY_HAJA" taborder="27" left="staTY_UMGB01:0.0" top="ccfCD_SITE:10.0" height="24.0" innerdataset="dsTY_HAJA" datacolumn="DS_CODE" codecolumn="CD_CODE" index="-1" value="" width="80" visible="false"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="1" left="0" top="160" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);
	// ---------------------------//
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	this.ccboGUBUN.set_index(0);
	this.ccboMETHOD.set_index(0);
	this.ccboTY_HAJA.set_index(0);
	this.ccboSEARCH.set_index(0);
	
	if(this.FormInfo.GR_SEARCH >= 7){
		this.dsSearch.setColumn(0, "CD_SITE", this.AuthClient.CD_DEPT);
		this.divSearch.form.ccfCD_SITE.form.DSTextBox.set_value(this.AuthClient.DS_DEPT);	
		this.ccfCD_SITE.set_enable(false);
	}else{
		var toDay = this.gfnGetDate();
		this.dsSearch.setColumn(0, "DT_FROM", this.gfnGetFirstDate(toDay));
		this.dsSearch.setColumn(0, "DT_TO", toDay);
	}
	
	this.fnSearchGb();
	
	this.fnButtonEnable();
	
	this.fnSetCombo();
};





/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {	
	// 서브 버튼 사용
	//this.gfnUseSubBtn(true, this.divData, this.divData.form.divSplitter); // divSplitter sync
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnJobHistory = this.gfnFormButtonAdd("btnJobHistory", "fnJobHistory");
	this.btnJobPrint = this.gfnFormButtonAdd("btnJobPrint", "fnJobPrint");
	this.btnJobEnd = this.gfnFormButtonAdd("btnJobEnd", "fnJobEnd");
	this.btnWarnAdd = this.gfnFormButtonAdd("btnWarnAdd", "fnWarnAdd");
	this.btnAsPrint = this.gfnFormButtonAdd("btnAsPrint", "fnAsPrint");
	
	if(this.FormInfo.ID_GROUP == "0" || this.FormInfo.ID_GROUP == "2"){
		this.btnInit = this.gfnFormButtonAdd("btnInit", "fnInit");
	}

	this.btnFile = this.gfnFormButtonAdd("btnFile", "fnFile");
	this.btnRmNy = this.gfnFormButtonAdd("btnRmNy", "fnRmNy");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_SITE = this.divSearch.form.ccfCD_SITE;
	this.ccfCD_BUNSO = this.divSearch.form.ccfCD_BUNSO;
	this.ccfCD_WI = this.divSearch.form.ccfCD_WI;
	this.ccfCD_ACT = this.divSearch.form.ccfCD_ACT;
	this.ccboGUBUN = this.divSearch.form.ccboGUBUN;
	this.ccboMETHOD = this.divSearch.form.ccboMETHOD;
	this.ctclDT_FROM = this.divSearch.form.ctclDT_FROM;
	this.ctclDT_TO = this.divSearch.form.ctclDT_TO;
	this.ctclDT_VISITPLAN_FROM = this.divSearch.form.ctclDT_VISITPLAN_FROM;
	this.ctclDT_VISITPLAN_TO = this.divSearch.form.ctclDT_VISITPLAN_TO;
	this.ccboTY_HAJA = this.divSearch.form.ccboTY_HAJA;
	this.ccboSEARCH = this.divSearch.form.ccboSEARCH;
	this.ccfCD_JOB = this.divSearch.form.divSearchJob.form.ccfCD_JOB;	
	this.ccfCD_CTM = this.divSearch.form.divSearchCtm.form.ccfCD_CTM;	
	this.ccfCD_DONG = this.divSearch.form.divSearchDong.form.ccfCD_DONG;
	this.ccfCD_HO = this.divSearch.form.divSearchDong.form.ccfCD_HO;
	this.ccboTY_HAJAJS = this.divSearch.form.divSearchDong.form.ccboTY_HAJAJS;
	this.staCN_ROW = this.divSearch.form.divSearchDong.form.staCN_ROW;
	
	this.btnfileimg = this.divSearch.form.btnfileimg;
	
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.ccfCD_SITE.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_SITE.AfterCDTextChanged = "fnAfterCDTextChanged";	
	
	//this.ccfCD_ACT.AfterCDTextChanged = "fnAfterCDTextChanged";	
	
	//this.ccfCD_BUNSO.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_WI.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	this.ccfCD_ACT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_CTM.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_JOB.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_DONG.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_HO.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	this.gfnGridInit(this.dxGrid, this.dsList, "DB", "DBS_AFTERWORKSTATE");
	this.dxGrid.set_selecttype("cell");	// IE경우만 multiarea모드에서 master선택후 마우스 이동 빠르게 할 경우 버그가 있어서 cell 모드로 변경
	
	this.dsSearch.addEventHandler("onvaluechanged", this.dsSearch_onvaluechanged, this);
	
	// 그리드 글자색 변경
	var colNO_MI_DAY = this.dxGrid.getBindCellIndex("body", "NO_MI_DAY");
	this.dxGrid.setCellProperty( "body", colNO_MI_DAY, "cssclass", "expr:dataset.getColumn(currow, 'NO_MI_DAY')>30 && dataset.getColumn(currow, 'NO_MI_DAY')<=70 ?'blue':(dataset.getColumn(currow, 'NO_MI_DAY')>70 ?'red':'black')" );		
	
	// 툴팁추가
	var colRM_NY = this.dxGrid.getBindCellIndex("body", "RM_NY");
	this.dxGrid.setCellProperty("body", colRM_NY, "tooltiptext", "expr:RM_NY==''?'':RM_NY" );
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_SITE", "string");
	this.dsSelect.addColumn("TY_SEARCH", "int");
	this.dsSelect.addColumn("DS_DONG", "string");
	this.dsSelect.addColumn("DS_CUNG", "string");
	this.dsSelect.addColumn("DS_HO", "string");
	this.dsSelect.addColumn("CD_CTM", "string");
	this.dsSelect.addColumn("CD_JOB", "string");
	this.dsSelect.addColumn("TY_GBN", "int");
	this.dsSelect.addColumn("CD_WI", "string");
	this.dsSelect.addColumn("CD_UH", "string");
	this.dsSelect.addColumn("CD_ACT", "string");
	this.dsSelect.addColumn("DT_FROM", "string");
	this.dsSelect.addColumn("DT_TO", "string");
	this.dsSelect.addColumn("TY_HAJA", "string");
	this.dsSelect.addColumn("TY_APPLY", "string");
	this.dsSelect.addColumn("CD_BUNSO", "string");
	this.dsSelect.addColumn("TY_HAJAJS", "string");
	this.dsSelect.addColumn("DT_VISITPLAN_FROM", "string");
	this.dsSelect.addColumn("DT_VISITPLAN_TO", "string");
	
	this.dsExec = new Dataset();
	this.dsExec.addColumn("CD_SITE", "string");
	this.dsExec.addColumn("CD_JOB", "string");
	this.dsExec.addColumn("TY_UMGB", "string");
	this.dsExec.addColumn("ID_UPDATE", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsList.clearData();
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	var cdHo = "";
	var cdCung = "";
	
	if(!this.gfnIsNull(this.dsSearch.getColumn(0, "DS_HO")) && this.dsSearch.getColumn(0, "DS_HO") != "공용"){
		cdCung = this.dsSearch.getColumn(0, "DS_HO").substr(0, 2); //층을 넣어둔다.
        cdHo = "0" + this.dsSearch.getColumn(0, "DS_HO").substr(2, 2); //호를 넣어 둔다. 
	}else if(this.dsSearch.getColumn(0, "DS_HO") == "공용"){
		cdCung = "00";
        cdHo = "000";
	}
	
	var tyApply = "";
	
	if( this.ccboMETHOD.index != 0){
		tyApply = this.ccboMETHOD.index - 1;
	}
	
	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsSelect.setColumn(0, "TY_SEARCH", this.dsSearch.getColumn(0, "TY_SEARCH"));
	this.dsSelect.setColumn(0, "DS_DONG", this.dsSearch.getColumn(0, "DS_DONG"));
	this.dsSelect.setColumn(0, "DS_CUNG", cdCung);
	this.dsSelect.setColumn(0, "DS_HO", cdHo);
	this.dsSelect.setColumn(0, "CD_CTM", this.dsSearch.getColumn(0, "CD_CTM"));
	this.dsSelect.setColumn(0, "CD_JOB", this.dsSearch.getColumn(0, "CD_JOB"));
	this.dsSelect.setColumn(0, "TY_GBN", this.dsSearch.getColumn(0, "TY_GBN"));
	this.dsSelect.setColumn(0, "CD_WI", this.dsSearch.getColumn(0, "CD_WI"));
	this.dsSelect.setColumn(0, "CD_UH", "");
	this.dsSelect.setColumn(0, "CD_ACT", this.dsSearch.getColumn(0, "CD_ACT"));
	this.dsSelect.setColumn(0, "DT_FROM", nexacro.replaceAll(this.dsSearch.getColumn(0, "DT_FROM"), "-", ""));
	this.dsSelect.setColumn(0, "DT_TO", nexacro.replaceAll(this.dsSearch.getColumn(0, "DT_TO"), "-", ""));
	this.dsSelect.setColumn(0, "TY_HAJA", this.dsSearch.getColumn(0, "TY_HAJA"));
	this.dsSelect.setColumn(0, "TY_APPLY", tyApply);
	this.dsSelect.setColumn(0, "CD_BUNSO", this.dsSearch.getColumn(0, "CD_BUNSO"));
	this.dsSelect.setColumn(0, "TY_HAJAJS", this.dsSearch.getColumn(0, "TY_HAJAJS"));
	this.dsSelect.setColumn(0, "DT_VISITPLAN_FROM", nexacro.replaceAll(this.dsSearch.getColumn(0, "DT_VISITPLAN_FROM"), "-", ""));
	this.dsSelect.setColumn(0, "DT_VISITPLAN_TO", nexacro.replaceAll(this.dsSearch.getColumn(0, "DT_VISITPLAN_TO"), "-", ""));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
	
}


this.fnSave = function() {
						
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;
	
	if (this.gfnIsNull(this.dsSearch.getColumn(0,"CD_SITE"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.ccfCD_SITE.form.CDTextBox.setFocus();
		}
		this.gfnAlert("현장코드는 반드시 입력 하셔야 합니다.", "fnVaidateCallback");
	}
	
	if(this.dsSearch.getColumn(0, "TY_SEARCH") == "1"){
		if (this.gfnIsNull(this.dsSearch.getColumn(0,"CD_CTM"))) {
			validate = false;
			// Alert후 실행할 처리
			this.fnVaidateCallback = function() {
				this.ccfCD_CTM.form.CDTextBox.setFocus();
			}
			this.gfnAlert("협력업체는 반드시 입력 하셔야 합니다.", "fnVaidateCallback");
		}
	}else if(this.dsSearch.getColumn(0, "TY_SEARCH") == "2"){
		if (this.gfnIsNull(this.dsSearch.getColumn(0,"CD_JOB"))) {
			validate = false;
			// Alert후 실행할 처리
			this.fnVaidateCallback = function() {
				this.ccfCD_JOB.form.CDTextBox.setFocus();
			}
			this.gfnAlert("작업코드는 반드시 입력 하셔야 합니다.", "fnVaidateCallback");
		}
	}

	return validate;
}
/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") { 
		this.gfnGridAfterSelect(this.dxGrid);
		
		//if(this.dsList.rowcount > 0){
		if(this.gfnGetFormStatus(this) == "X") {
			this.staCN_ROW.set_text("조회건수: 0");
			
			//this.btnfileDocu.set_enable(false);
			//this.btnfileSign.set_enable(false);
		}else{
			this.staCN_ROW.set_text("조회건수: " + (this.dsList.rowcount-1).toString());	// 필터로우를 row카운트에 포함시키기때문에 -1 해준다
			
			//this.btnfileDocu.set_enable(true);
			//this.btnfileSign.set_enable(true);
		}	
		this.divSearch.form.divSearchDong.form.resetScroll();
		
		this.fnButtonEnable();
		
	} else if(svcID == "exec") {
		if (errorCode == 0) {
			this.fnExecMsg_callback = function()
			{
				this.FormBtns.Select.click();
			}	
			this.gfnAlert("미완료 처리되었습니다.", "fnExecMsg_callback");
		} else {
			this.gfnAlert(errorMsg);
		}
	} else if (svcID == "combo") {
		this.dsTY_HAJAJS.insertRow(0);		
		this.dsTY_HAJAJS.setColumn(0,"CD_CODE","");
		this.dsTY_HAJAJS.setColumn(0,"DS_CODE","전체");
		this.ccboTY_HAJAJS.set_index(0);
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
			
	if(id == "ccfCD_SITE") {
		dsUserParam.setColumn(nrow, "CD_AUTHDEPT", this.AuthClient.CD_DEPT);
	}
	
	if(id == "ccfCD_CTM") { 
		var CD_SITE = this.dsSearch.getColumn(0, "CD_SITE");
		if(this.gfnIsNull(CD_SITE)){
			this.gfnAlert("현장코드를 먼저 선택하세요.");
			return false;
		}
		
		dsUserParam.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	}	
	
	if(id == "ccfCD_WI") {
		dsUserParam.setColumn(nrow, "CD_GUBUN", "S1");
	}
	
	if(id == "ccfCD_ACT") {
		dsUserParam.setColumn(nrow, "CD_GUBUN", "S5");
	}
	if(id == "ccfCD_JOB") {
		var CD_SITE = this.dsSearch.getColumn(0, "CD_SITE");
		if(this.gfnIsNull(CD_SITE)){
			this.gfnAlert("현장코드를 먼저 선택하세요.");
			return false;
		}
		
		dsUserParam.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
		dsUserParam.setColumn(nrow, "TY_UMGB", "002");
	}
	if(id == "ccfCD_DONG") {
		var CD_SITE = this.dsSearch.getColumn(0, "CD_SITE");
		if(this.gfnIsNull(CD_SITE)){
			this.gfnAlert("현장코드를 먼저 선택하세요.");
			return false;
		}
		
		dsUserParam.setColumn(nrow, "TY_TYPE", "DONG");
		dsUserParam.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
		dsUserParam.setColumn(nrow, "VALUE1", "");
		dsUserParam.setColumn(nrow, "VALUE2", "");
	}
	if(id == "ccfCD_HO") {
		var CD_SITE = this.dsSearch.getColumn(0, "CD_SITE");
		if(this.gfnIsNull(CD_SITE)){
			this.gfnAlert("현장코드를 먼저 선택하세요.");
			return false;
		}
		
		dsUserParam.setColumn(nrow, "TY_TYPE", "HO");
		dsUserParam.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
		dsUserParam.setColumn(nrow, "VALUE1", this.dsSearch.getColumn(0, "DS_DONG"));
		dsUserParam.setColumn(nrow, "VALUE2", "");
	}
	
	return true;
};

this.fnAfterCDTextChanged = function(id, codeFindData) {
	var arrData = codeFindData;
	if(id == "ccfCD_SITE") {
		this.dsSearch.setColumn(0, "DT_FROM", arrData[0]["MIN_DT_JEOBSU"]);
		
		this.ccfCD_ACT.form.fnCodeFindClear();
		this.ccfCD_CTM.form.fnCodeFindClear();
		this.ccfCD_JOB.form.fnCodeFindClear();
		this.ccfCD_DONG.form.fnCodeFindClear();
		this.ccfCD_HO.form.fnCodeFindClear();
	}
}
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/

/************************************************************************
 * 확장버튼 이벤트
 ************************************************************************/

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);
		
		this.staCN_ROW.set_text("조회건수:");
		this.divSearch.form.resetScroll();
		
		if(e.columnid == "TY_SEARCH"){
			this.fnSearchGb();
		}
		
		this.fnButtonEnable();
	}
};

// 검색조건콤보 변경시 이벤트
this.fnSearchGb = function() {
	if(this.dsSearch.getColumn(0, "TY_SEARCH") == "0"){
		this.divSearch.form.divSearchDong.set_visible(true);
		this.divSearch.form.divSearchJob.set_visible(false);
		this.divSearch.form.divSearchCtm.set_visible(false);
		
		this.dsSearch.setColumn(0, "CD_JOB", "");
		this.dsSearch.setColumn(0, "CD_CTM", "");
	}else if(this.dsSearch.getColumn(0, "TY_SEARCH") == "1"){
		this.divSearch.form.divSearchDong.set_visible(false);
		this.divSearch.form.divSearchJob.set_visible(false);
		this.divSearch.form.divSearchCtm.set_visible(true);
		
		this.dsSearch.setColumn(0, "DS_DONG", "");
		this.dsSearch.setColumn(0, "DS_HO", "");
		this.dsSearch.setColumn(0, "CD_JOB", "");
	}else if(this.dsSearch.getColumn(0, "TY_SEARCH") == "2"){
		this.divSearch.form.divSearchDong.set_visible(false);
		this.divSearch.form.divSearchJob.set_visible(true);
		this.divSearch.form.divSearchCtm.set_visible(false);
		
		this.dsSearch.setColumn(0, "DS_DONG", "");
		this.dsSearch.setColumn(0, "DS_HO", "");
		this.dsSearch.setColumn(0, "CD_CTM", "");
	}
};

// 확장버튼 활성화 or 비활성화 처리
this.fnButtonEnable = function() {
	this.btnJobHistory.set_enable(false);
	this.btnJobPrint.set_enable(false);
	this.btnJobEnd.set_enable(false);
	this.btnWarnAdd.set_enable(false);
	this.btnAsPrint.set_enable(false);
	this.btnInit.set_enable(false);
	this.btnFile.set_enable(false);
	this.btnRmNy.set_enable(false);
		
	if(this.gfnGetFormStatus(this) == "Q") {
		this.btnJobHistory.set_enable(true);
		this.btnJobPrint.set_enable(true);
		this.btnJobEnd.set_enable(true);
		this.btnWarnAdd.set_enable(true);
		this.btnAsPrint.set_enable(true);
		this.btnInit.set_enable(true);
		this.btnFile.set_enable(true);
		this.btnRmNy.set_enable(true);
	}else if(this.gfnGetFormStatus(this) == "X"){
		this.btnWarnAdd.set_enable(true);
	}
};



// 하자접수 버튼 클릭시 팝업화면 호출
this.fnWarnAdd = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	// 선택된 row가 있을 경우에만 팝업을 띄움
	//if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	var param = {};
	
	param.CD_SITE = this.dsSearch.getColumn(0, "CD_SITE");
    param.DS_SITE = this.ccfCD_SITE.form.DSTextBox.value;
	
	if(this.dsList.rowcount > 0){
		var cdDong = this.dsList.getColumn(this.dsList.rowposition, "DS_DONG");
		var cdHo = this.dsList.getColumn(this.dsList.rowposition, "DS_CUNGHO");
		
		if(cdDong.length == 1){
			cdDong = this.dsSearch.getColumn(0, "DS_DONG");
		}
		if(cdHo == "공용"){
			cdHo = "공용";
		}else if(cdHo.length == 1){
			cdHo = this.dsSearch.getColumn(0, "DS_HO");
		}
		
		param.CD_DONG = cdDong;
		param.CD_HO = cdHo;
	}else{
		param.CD_DONG = "";
		param.CD_HO = "";
	}

	// 화면 오픈. 
	// CD_MODULE은 보통 같은 모듈에서 호출하는 경우가 많으니 this.FormInfo.CD_MODULE 사용
	// 타 모듈 화면 호출시 지정할것.
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DBS_AFTERASRECEIPTTO", "", param);
}


// 작업지시서출력 버튼 클릭시 팝업화면 호출
this.fnJobPrint = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	// 선택된 row가 있을 경우에만 팝업을 띄움
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	var param = {};
	
	param.CD_SITE = this.dsSearch.getColumn(0, "CD_SITE");
    param.DS_SITE = this.ccfCD_SITE.form.DSTextBox.value;
	param.CD_CTM = "";
	param.DS_CTM = "";
	param.CD_ACT = "";
	param.DS_ACT = "";
	param.DT_FR = this.dsSearch.getColumn(0, "DT_FROM");
	param.DT_TO = this.dsSearch.getColumn(0, "DT_TO");
	param.CD_JOB = "";
	param.CD_DONG = this.dsList.getColumn(this.dsList.rowposition, "DS_DONG");
	param.CD_HO = this.dsList.getColumn(this.dsList.rowposition, "DS_CUNGHO");

	// 화면 오픈. 
	// CD_MODULE은 보통 같은 모듈에서 호출하는 경우가 많으니 this.FormInfo.CD_MODULE 사용
	// 타 모듈 화면 호출시 지정할것.
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DBS_WORKDOCU", "", param);
}

// 작업완료입력 버튼 클릭시 팝업화면 호출
this.fnJobEnd = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	// 선택된 row가 있을 경우에만 팝업을 띄움
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	var param = {};
	
	param.CD_BUNSO = this.dsSearch.getColumn(0, "CD_BUNSO");
    param.DS_BUNSO = this.ccfCD_BUNSO.form.DSTextBox.value;
	param.CD_SITE = this.dsSearch.getColumn(0, "CD_SITE");
    param.DS_SITE = this.ccfCD_SITE.form.DSTextBox.value;
	param.CD_CTM = this.dsList.getColumn(this.dsList.rowposition, "CD_CTM");
	param.DS_CTM = this.dsList.getColumn(this.dsList.rowposition, "DS_CTM");
	param.CD_JOB = this.dsSearch.getColumn(0, "CD_JOB");
	param.CD_DONG = this.dsSearch.getColumn(0, "DS_DONG");
	param.CD_HO = this.dsSearch.getColumn(0, "DS_HO");
	param.cmbSearch = this.dsSearch.getColumn(0, "TY_SEARCH");
	param.cmbGubun = this.ccboGUBUN.getSelectedText();
	param.cmbGr = "000";

	// 화면 오픈. 
	// CD_MODULE은 보통 같은 모듈에서 호출하는 경우가 많으니 this.FormInfo.CD_MODULE 사용
	// 타 모듈 화면 호출시 지정할것.
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DBS_WORKEND", "fnJobEndCallback", param);
}

this.fnJobEndCallback =  function(svcID, val) {
	//if(val == true) {
	this.FormBtns.Select.click();
	//}
};


// 완료확인서출력 버튼 클릭시 팝업화면 호출
this.fnAsPrint = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {

	this.dsReport = new Dataset();
	this.dsReport.addColumn("CD_SITE", "string");
	this.dsReport.addColumn("NO_JOB", "string");
	this.dsReport.addColumn("GUBUN", "string");

	this.dsReport.clearData();
	this.dsReport.addRow();
	
	this.dsReport.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsReport.setColumn(0, "NO_JOB", this.dsList.getColumn(this.dsList.rowposition, "CD_JOB"));
	this.dsReport.setColumn(0, "GUBUN", "N");
	
	var strSvcId    = "report";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "report=dsReport";
	var outData     = "dsList2=report0";
	var strArg      = "";
	var callBackFnc = "fnCallback";

	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 	    // 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
						
	var inProc		= "_dsProc";
	//var inParam 	= "params=dsReport1";	// 조회SP이외 사용할 정보
	var inParam 	= "";						// 필요없는 경우 생략
	var inData      = "report=dsReport";
	var reportpath  = "/db/dbs/DBS_WORKDONE.ozr";
	
	gfnOpenReport(this, reportpath, inProc, inParam, inData);

}


// 세대별작업현황 버튼 클릭시 팝업화면 호출
this.fnJobHistory = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	// 선택된 row가 있을 경우에만 팝업을 띄움
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	var param = {};
	
	param.CF_CD_SITE = this.dsSearch.getColumn(0, "CD_SITE");
    param.CF_DS_SITE = this.ccfCD_SITE.form.DSTextBox.value;
	param.CF_DS_DONG = this.dsList.getColumn(this.dsList.rowposition, "DS_DONG");
	param.CF_DS_HO = this.dsList.getColumn(this.dsList.rowposition, "DS_CUNGHO");

	// 화면 오픈. 
	// CD_MODULE은 보통 같은 모듈에서 호출하는 경우가 많으니 this.FormInfo.CD_MODULE 사용
	// 타 모듈 화면 호출시 지정할것.
	
	this.gfnFormOpen("DBU", "DBS_WORKHOUSE", "", param);
}


// 하자완료초기화 버튼 클릭시 팝업화면 호출
this.fnInit = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	// 선택된 row가 있을 경우에만 팝업을 띄움
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	this.dsExec.clearData();
	
	this.dsExec.addRow();
	
	this.dsExec.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsExec.setColumn(0, "CD_JOB", this.dsList.getColumn(this.dsList.rowposition, "CD_JOB"));
	this.dsExec.setColumn(0, "TY_UMGB", this.dsList.getColumn(this.dsList.rowposition, "TY_UMGB"));
	this.dsExec.setColumn(0, "ID_UPDATE", this.AuthClient.ID_USER);

	if (this.dsExec.rowcount == 0) return;
	
	var strSvcId    = "exec";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "exec=dsExec";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}


// 첨부파일 버튼 클릭시 팝업화면 호출
this.fnFile = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	// 선택된 row가 있을 경우에만 팝업을 띄움
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	var nRow = this.dsList.rowposition;
	var fileManager = {};
	fileManager.CD_GUBUN = "DB99";
	fileManager.CD_DIR = [this.dsSearch.getColumn(0,"CD_SITE"), this.dsList.getColumn(nRow, "CD_JOB")];
	
	if(this.FormInfo.TY_AUTH == "R") {
		fileManager.IS_READONLY = true;
	} else {
		fileManager.IS_READONLY = false;
	}
	
	this.gfnFileManager(fileManager, "fnFileCallback");
}

this.fnFileCallback = function(strID, val) {
	// val.IsChange : 변경여부, val.Cnt : 파일개수
	/*
	// 파일개수를 다시 셋팅
	this.dsList.set_enableevent(false);
	if(val.Cnt == 0) {
		this.dsList.setColumn(this.dsList.rowposition, "FILE_ATTACH", "첨부");
	} else {
		this.dsList.setColumn(this.dsList.rowposition, "FILE_ATTACH", "첨부(" + val.Cnt + ")");
	}
	this.dsList.set_enableevent(true);
	*/
};


// 하자내용변경 버튼 클릭시 팝업화면 호출
this.fnRmNy = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	// 선택된 row가 있을 경우에만 팝업을 띄움
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	//if (this.dsListSub.rowcount < 1) { return false; }
	
	var param = {};
	var nRow = this.dsList.rowposition;
	
	param.CD_SITE = this.dsSearch.getColumn(0, "CD_SITE");
    param.CD_JOB = this.dsList.getColumn(nRow, "CD_JOB");
	param.RM_NY = this.dsList.getColumn(nRow, "RM_NY");

	// 화면 오픈. 
	// CD_MODULE은 보통 같은 모듈에서 호출하는 경우가 많으니 this.FormInfo.CD_MODULE 사용
	// 타 모듈 화면 호출시 지정할것.
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DBS_RMNY_DLG", "fnRmNyCallback", param);
}

this.fnRmNyCallback =  function(svcID, val) {
	if(val == true) {
		this.FormBtns.Select.click();
	}
};



// 점검전후/완료사인 사진보기 클릭 이벤트
this.divSearch_btnfileimg_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	// 선택된 row가 있을 경우에만 팝업을 띄움
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	var param = {};
	
	param.CD_SITE = this.dsSearch.getColumn(0, "CD_SITE");
    param.CD_JOB = this.dsList.getColumn(this.dsList.rowposition, "CD_JOB");
	param.TY_UMGB = this.dsList.getColumn(this.dsList.rowposition, "TY_UMGB");
		
	// 화면 오픈. 
	// CD_MODULE은 보통 같은 모듈에서 호출하는 경우가 많으니 this.FormInfo.CD_MODULE 사용
	// 타 모듈 화면 호출시 지정할것.
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DBS_WORKPICPOPUP", "", param);
};



/*
 *	콤보박스 값 설정
 */
this.fnSetCombo = function() {
	
	this.dsCombo = new Dataset();
	this.dsCombo.addColumn("CD_SYSTEM", "string");
	this.dsCombo.addColumn("CD_TYPE", "string");
	
	this.dsCombo.addRow();
	this.dsCombo.setColumn(0, "CD_SYSTEM", "DB");
	this.dsCombo.setColumn(0, "CD_TYPE", "K1");
	
	var strSvcId    = "combo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "combo=dsCombo";
	var outData     = "dsTY_HAJAJS=combo0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]

};

]]></Script>
    <Objects>
      <Dataset id="dsList" enableevent="false"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DBSPR_AFTERWORKSTATE_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo</Col>
            <Col id="SP">DZXPR_COMBO_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">exec</Col>
            <Col id="SP">DBSPR_WORKEND_INIT</Col>
          </Row>
          <Row>
            <Col id="SP">DBSPR_AS_PRINT</Col>
            <Col id="TARGET">report</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch">
        <ColumnInfo>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="TY_SEARCH" type="STRING" size="256"/>
          <Column id="DS_DONG" type="STRING" size="256"/>
          <Column id="DS_CUNG" type="STRING" size="256"/>
          <Column id="DS_HO" type="STRING" size="256"/>
          <Column id="CD_CTM" type="STRING" size="256"/>
          <Column id="CD_JOB" type="STRING" size="256"/>
          <Column id="TY_GBN" type="STRING" size="256"/>
          <Column id="CD_WI" type="STRING" size="256"/>
          <Column id="CD_ACT" type="STRING" size="256"/>
          <Column id="DT_FROM" type="STRING" size="256"/>
          <Column id="DT_TO" type="STRING" size="256"/>
          <Column id="TY_HAJA" type="STRING" size="256"/>
          <Column id="METHOD" type="STRING" size="256"/>
          <Column id="CD_BUNSO" type="STRING" size="256"/>
          <Column id="TY_HAJAJS" type="STRING" size="256"/>
          <Column id="DT_VISITPLAN_FROM" type="STRING" size="256"/>
          <Column id="DT_VISITPLAN_TO" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_SITE"/>
            <Col id="TY_SEARCH"/>
            <Col id="DS_DONG"/>
            <Col id="DS_CUNG"/>
            <Col id="DS_HO"/>
            <Col id="CD_CTM"/>
            <Col id="CD_JOB"/>
            <Col id="TY_GBN"/>
            <Col id="CD_WI"/>
            <Col id="CD_ACT"/>
            <Col id="DT_FROM"/>
            <Col id="DT_TO"/>
            <Col id="TY_HAJA"/>
            <Col id="METHOD"/>
            <Col id="CD_BUNSO"/>
            <Col id="TY_HAJAJS"/>
            <Col id="DT_VISITPLAN_FROM"/>
            <Col id="DT_VISITPLAN_TO"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsGUBUN">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">0</Col>
            <Col id="DS_CODE">전체</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">1</Col>
            <Col id="DS_CODE">완료</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">2</Col>
            <Col id="DS_CODE">미완료</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">3</Col>
            <Col id="DS_CODE">재접수</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsMETHOD">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">0</Col>
            <Col id="DS_CODE">전체</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">1</Col>
            <Col id="DS_CODE">고객센터</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">2</Col>
            <Col id="DS_CODE">AS팀</Col>
          </Row>
          <Row>
            <Col id="DS_CODE">PDA</Col>
            <Col id="CD_CODE">3</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_HAJA">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE"/>
            <Col id="DS_CODE">전체</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">1</Col>
            <Col id="DS_CODE">1년차</Col>
          </Row>
          <Row>
            <Col id="DS_CODE">2년차</Col>
            <Col id="CD_CODE">2</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">3</Col>
            <Col id="DS_CODE">3년차</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">4</Col>
            <Col id="DS_CODE">4년차</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">5</Col>
            <Col id="DS_CODE">5년차</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">10</Col>
            <Col id="DS_CODE">10년차</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSEARCH">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">0</Col>
            <Col id="DS_CODE">동호정보</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">1</Col>
            <Col id="DS_CODE">협력업체</Col>
          </Row>
          <Row>
            <Col id="DS_CODE">작업코드</Col>
            <Col id="CD_CODE">2</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_HAJAJS"/>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item4" compid="divSearch.form.ccfCD_BUNSO.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_BUNSO"/>
      <BindItem id="item6" compid="divSearch.form.ccboGUBUN" propid="value" datasetid="dsSearch" columnid="TY_GBN"/>
      <BindItem id="item2" compid="divSearch.form.ccboMETHOD" propid="value" datasetid="dsSearch" columnid="METHOD"/>
      <BindItem id="item7" compid="divSearch.form.divSearchDong.form.ccfCD_DONG.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="DS_DONG"/>
      <BindItem id="item8" compid="divSearch.form.divSearchDong.form.ccfCD_HO.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="DS_HO"/>
      <BindItem id="item3" compid="divSearch.form.divSearchCtm.form.ccfCD_CTM.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CTM"/>
      <BindItem id="item9" compid="divSearch.form.divSearchJob.form.ccfCD_JOB.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_JOB"/>
      <BindItem id="item10" compid="divSearch.form.ccfCD_WI.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_WI"/>
      <BindItem id="item12" compid="divSearch.form.ccfCD_ACT.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_ACT"/>
      <BindItem id="item1" compid="divSearch.form.ctclDT_TO" propid="value" datasetid="dsSearch" columnid="DT_TO"/>
      <BindItem id="item5" compid="divSearch.form.ctclDT_FROM" propid="value" datasetid="dsSearch" columnid="DT_FROM"/>
      <BindItem id="item11" compid="divSearch.form.ctclDT_VISITPLAN_TO" propid="value" datasetid="dsSearch" columnid="DT_VISITPLAN_TO"/>
      <BindItem id="item13" compid="divSearch.form.ctclDT_VISITPLAN_FROM" propid="value" datasetid="dsSearch" columnid="DT_VISITPLAN_FROM"/>
      <BindItem id="item14" compid="divSearch.form.divSearchDong.form.ccboTY_HAJAJS" propid="value" datasetid="dsSearch" columnid="TY_HAJAJS"/>
      <BindItem id="item15" compid="divSearch.form.ccboTY_HAJA" propid="value" datasetid="dsSearch" columnid="TY_HAJA"/>
      <BindItem id="item16" compid="divSearch.form.ccboSEARCH" propid="value" datasetid="dsSearch" columnid="TY_SEARCH"/>
    </Bind>
  </Form>
</FDL>
