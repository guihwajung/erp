<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="1270" height="720" titletext="자산이동(일괄)" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="1" left="0" top="10.0" height="78" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none" text="">
          <Layouts>
            <Layout>
              <Static id="staCD_CORP" taborder="0" text="법인코드" left="0" top="10" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_CORP" CodeFindName="DHX_CFCORP" CDTextWidth="70" taborder="1" left="staCD_CORP:-2" top="staCD_CORP:-22" width="300" height="24.0" url="cmm::cmmCodeFind.xfdl" onclick="Common_onclick" text=""/>
              <Static id="staCD_ACASSET" taborder="2" text="자산코드" left="390" top="10" width="92.0" height="24.0" onclick="Common_onclick" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_ACASSET" CodeFindName="DHX_CFASSETINFO" CDTextWidth="70" taborder="3" left="staCD_ACASSET:4" top="staCD_ACASSET:-24" width="300" height="24.0" url="cmm::cmmCodeFind.xfdl" onclick="Common_onclick" text=""/>
              <Static id="staCD_ASSETSEMOK" taborder="4" text="자산세목" left="791" top="10" width="92.0" height="24.0" onclick="Common_onclick" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_ASSETSEMOK" CodeFindName="DHX_CFASSETSEMOK" CDTextWidth="70" taborder="5" left="staCD_ASSETSEMOK:4" top="staCD_ASSETSEMOK:-24" width="300" height="24.0" url="cmm::cmmCodeFind.xfdl" onclick="Common_onclick" text=""/>
              <Static id="staCD_GETDEPT" taborder="6" text="보유부서" left="-6" top="41" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_GETDEPT" CodeFindName="DHX_CFACNTUNIT" CDTextWidth="70" taborder="7" left="staCD_GETDEPT:4" top="staCD_GETDEPT:-21" width="300" height="24.0" url="cmm::cmmCodeFind.xfdl" onclick="Common_onclick" text=""/>
              <Static id="staCD_GETDEPT00" taborder="8" text="이동일자" left="390" top="41" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Calendar id="ctclDT_MOVE" taborder="9" left="486" top="41" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg" ondragmove="divData_ondragmove">
          <Layouts>
            <Layout>
              <Div id="divSplitter" taborder="1" left="0" top="60%" width="100%" height="5" cursor="ns-resize" ondrag="divData_divSplitter_ondrag" cssclass="div_Splitter"/>
              <Div id="divDataTop" taborder="2" left="0" top="0" bottom="divSplitter:3" right="0" text="">
                <Layouts>
                  <Layout>
                    <Grid id="objGrid" taborder="0" left="0" top="27" right="0" bottom="60"/>
                    <Static id="staBgDT_GET" taborder="5" left="102" top="objGrid:4" height="27" cssclass="sta_WF_tablebg" width="327"/>
                    <Static id="staBgID_MAINMAG" taborder="7" left="102" top="objGrid:30" height="27" cssclass="sta_WF_tablebg" width="327"/>
                    <Static id="staBgCD_FRDEPT" taborder="10" left="530" top="objGrid:4" height="27" cssclass="sta_WF_tablebg" width="327"/>
                    <Static id="staBgID_SUBMAG" taborder="13" left="530" top="objGrid:30" height="27" cssclass="sta_WF_tablebg" width="327"/>
                    <Static id="staTITLE" taborder="1" text="전출자산내역" left="0" top="-5" height="30" cssclass="sta_TITLE_Bg" textAlign="left" width="1260"/>
                    <Static id="staID_MAINMAG" taborder="3" text="관리자(정)" left="0" top="objGrid:30" width="110" height="27" cssclass="sta_WF_tablelabel" textAlign="center"/>
                    <Div id="cfID_MAINMAG" CodeFindName="DHX_CFIDSABUN" CDTextWidth="90" taborder="6" left="staID_MAINMAG:5" top="objGrid:34" width="300" height="20" url="cmm::cmmCodeFind.xfdl" onclick="Common_onclick" text=""/>
                    <Static id="staCD_FRDEPT" taborder="8" text="전입부서" left="428" top="objGrid:4" width="110" height="27" textAlign="center" cssclass="sta_WF_tablelabelE"/>
                    <Div id="cfID_SUBMAG" CodeFindName="DHX_CFIDSABUN" CDTextWidth="90" taborder="12" left="543" top="objGrid:34" width="300" height="20" url="cmm::cmmCodeFind.xfdl" onclick="Common_onclick" text=""/>
                    <Button id="btnMove" taborder="14" text="자산이동" left="883" top="objGrid:5" width="80" height="22" onclick="btnOnclick"/>
                    <Calendar id="calDT_GET" taborder="4" left="115" top="objGrid:8" width="120" height="20" onchanged="divData_cal00_onchanged"/>
                    <Div id="cfCD_FRDEPT" CodeFindName="DHX_CFACNTUNIT" CDTextWidth="70" taborder="9" left="staCD_FRDEPT:5" top="objGrid:8" width="300" height="20" url="cmm::cmmCodeFind.xfdl" onclick="Common_onclick" text=""/>
                    <Static id="staDT_GET" taborder="2" text="전입일자" left="0" top="objGrid:4" width="110" height="27" textAlign="center" cssclass="sta_WF_tablelabelE"/>
                    <Static id="staID_SUBMAG" taborder="11" text="관리자(부)" left="428" top="objGrid:30" width="110" height="27" cssclass="sta_WF_tablelabel" textAlign="center"/>
                  </Layout>
                </Layouts>
              </Div>
              <Div id="divDataBottom" taborder="0" left="0" top="divSplitter:5" bottom="0" right="0" text="">
                <Layouts>
                  <Layout>
                    <!--
					<Button id="btnSlipConnect" taborder="5" text="전표연결" top="63" width="80" right="btnSlip:5" height="22" onclick="btnSlipConnect_onclick" visible="false"/>
					-->
                    <!--
					<Button id="btnBranchDelete" taborder="15" text="전송전삭제" top="63" width="80" right="btnOfflineInsert:5" height="22" onclick="btnBranchDelete_onclick"/>
					-->
                    <Static id="staTITLE00" taborder="1" text="자산이동내역" top="2" cssclass="sta_TITLE_Bg" textAlign="left" width="300" left="0" height="28"/>
                    <Grid id="objGrid2" taborder="0" left="0" top="staTITLE00:0" bottom="0" right="0"/>
                    <Button id="btnSlipCancel" taborder="5" text="전표취소" top="2" onclick="btnOnclick" height="22" width="80" right="0"/>
                    <Button id="btnSlipSearch" taborder="4" text="전표조회" top="2" height="22" onclick="btnOnclick" width="80" right="btnSlipCancel:5"/>
                    <Button id="btnSlip" taborder="2" text="전표발행" top="2" height="22" onclick="btnOnclick" right="btnSlipSearch:5" width="80"/>
                    <Button id="btnCancel" taborder="3" text="이동취소" top="2" height="22" onclick="btnOnclick" width="80" right="btnSlip:5"/>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
    this.dsSearch.setColumn(0, "CD_CORP", this.AuthClient.CD_CORP);
	this.dsSearch.setColumn(0, "DS_CORP", this.AuthClient.DS_CORP);
	
	if (nexacro.toNumber(this.FormInfo.GR_SEARCH) > 1) {
 		this.ccfCD_CORP.set_enable(false);
 	}
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnAssetMoveAll  = this.gfnFormButtonAdd("AssetMove", "fnAssetMoveInfo"); 	// 자산이동정보
	this.btnViewAssetInfo = this.gfnFormButtonAdd("ViewAssetInfo", "fnViewAssetInfo"); 	// 자산정보
	this.btnAssetChg = this.gfnFormButtonAdd("AssetChg", "fnAssetChgInfo");  		//자산변동정보 
	this.btnAssetInfo = this.gfnFormButtonAdd("AssetInfo", "fnAssetInfo");  		//자산변동정보 
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {

	this.ccfCD_CORP       = this.divSearch.form.ccfCD_CORP;
	this.ccfCD_ACASSET    = this.divSearch.form.ccfCD_ACASSET;
	this.ccfCD_ASSETSEMOK = this.divSearch.form.ccfCD_ASSETSEMOK;
	this.ccfCD_GETDEPT    = this.divSearch.form.ccfCD_GETDEPT;
	this.ctclDT_MOVE      = this.divSearch.form.ctclDT_MOVE;
	
	this.calDT_GET        = this.divData.form.divDataTop.form.calDT_GET;
	this.cfCD_FRDEPT      = this.divData.form.divDataTop.form.cfCD_FRDEPT;
	this.cfID_MAINMAG     = this.divData.form.divDataTop.form.cfID_MAINMAG;
	this.cfID_SUBMAG      = this.divData.form.divDataTop.form.cfID_SUBMAG;
	
	this.btnMove          = this.divData.form.divDataTop.form.btnMove;
	
	//this.btnMoveAll       = this.divData.form.divDataBottom.form.btnMoveAll;
	this.btnCancel        = this.divData.form.divDataBottom.form.btnCancel;
	//this.btnCancelAll     = this.divData.form.divDataBottom.form.btnCancelAll;
	this.btnSlip 	      = this.divData.form.divDataBottom.form.btnSlip;
	this.btnSlipSearch 	  = this.divData.form.divDataBottom.form.btnSlipSearch;
	this.btnSlipCancel 	  = this.divData.form.divDataBottom.form.btnSlipCancel;

	this.dxGrid  = this.divData.form.divDataTop.form.objGrid;
	this.dxGrid2 = this.divData.form.divDataBottom.form.objGrid2;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	
	//법인코드
	this.ccfCD_CORP.BeforeUserDataSetParam       = "fnBeforeUserDataSetParam";
	this.ccfCD_CORP.AfterCDTextChanged           = "fnAfterCDTextChanged";
	
	//자산코드
	this.ccfCD_ACASSET.BeforeUserDataSetParam    = "fnBeforeUserDataSetParam";
	this.ccfCD_ACASSET.AfterCDTextChanged        = "fnAfterCDTextChanged";
		
	//자산세목
	this.ccfCD_ASSETSEMOK.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_ASSETSEMOK.AfterCDTextChanged     = "fnAfterCDTextChanged";
		
	//보유부서
	this.ccfCD_GETDEPT.BeforeUserDataSetParam    = "fnBeforeUserDataSetParam";
	this.ccfCD_GETDEPT.AfterCDTextChanged        = "fnAfterCDTextChanged";
		
	//전입부서
	this.cfCD_FRDEPT.BeforeUserDataSetParam      = "fnBeforeUserDataSetParam";
	this.cfCD_FRDEPT.AfterCDTextChanged          = "fnAfterCDTextChanged";
	
	//관리자(정)
	this.cfID_MAINMAG.BeforeUserDataSetParam     = "fnBeforeUserDataSetParam";
	this.cfID_MAINMAG.AfterCDTextChanged         = "fnAfterCDTextChanged";
	
	//관리자(부)
	this.cfID_SUBMAG.BeforeUserDataSetParam      = "fnBeforeUserDataSetParam";
	this.cfID_SUBMAG.AfterCDTextChanged          = "fnAfterCDTextChanged";
		
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid , this.dsList , "DH", "DHN_ASSETMOVEMULTI");
	this.gfnGridInit(this.dxGrid2, this.dsList2, "DH", "DHN_ASSETMOVEMULTI_1");
	
	this.dxGrid2.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
	
	this.btnMove.set_enable(false);
	//this.btnMoveAll.set_enable(false);
	this.btnCancel.set_enable(false);
	//this.btnCancelAll.set_enable(false);
};

this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	
	var cdCorp    = this.dsSearch.getColumn(0, "CD_CORP");
	var cdAcasset = this.dsSearch.getColumn(0, "CD_ACASSET");

	if(id == "ccfCD_ACASSET" || id == "ccfCD_ASSETSEMOK" || id == "ccfCD_GETDEPT" || id == "cfCD_FRDEPT" || id == "cfID_MAINMAG" || id == "cfID_SUBMAG") {
		if(this.gfnIsNull(cdCorp)) {
			this.gfnAlert("법인코드를 먼저 입력하세요.");
			return false;
		}
	}
	
	//법인코드
	if(id == "ccfCD_CORP") { 
		//dsUserParam.setColumn(nrow, "LEVLV_DEPT_ACNT", this.UserInfo.LEVLV_DEPT_ACNT);
		//dsUserParam.setColumn(nrow, "LEVCD_DEPT_ACNT", this.UserInfo.LEVCD_DEPT_ACNT);
		dsUserParam.setColumn(nrow, "ID_SABUN", this.AuthClient.ID_USER);
	}
	
	//자산코드
	if(id == "ccfCD_ACASSET") {
		dsUserParam.setColumn(nrow, "CD_CORP", cdCorp);
		dsUserParam.setColumn(nrow, "YN_CORP", "Y");
	}
	
	//자산세목
	if(id == "ccfCD_ASSETSEMOK") {
		if(this.gfnIsNull(cdAcasset)) {
			this.gfnAlert("자산코드를 먼저 입력하세요.");
			return false;
		}
	
		dsUserParam.setColumn(nrow, "CD_ACASSET"   , cdAcasset);
		dsUserParam.setColumn(nrow, "CD_CORP"      , cdCorp);
	}
	
	//보유부서 //전입부서
	if(id == "ccfCD_GETDEPT" || id == "cfCD_FRDEPT") {
		if(this.gfnIsNull(cdCorp)){
			this.gfnAlert("법인코드를 선택하세요.");
			return false;
		}
		
		dsUserParam.setColumn(nrow, "CD_DEPT_UPPER"	, "");						//상위부서
		dsUserParam.setColumn(nrow, "YN_SLIPACCEPT"	, "Y");						//전표발행여부
		dsUserParam.setColumn(nrow, "CD_CORP"		, cdCorp);					//법인코드
		dsUserParam.setColumn(nrow, "YN_USE"		, "Y");						//사용여부
		dsUserParam.setColumn(nrow, "GR_DEPT_ACNT"	, "");						//현장/본사여부	
		dsUserParam.setColumn(nrow, "LEVCD_DEPT_UPPER", this.AuthClient.LEVCD_DEPT_UPPER);
		dsUserParam.setColumn(nrow, "ID_USER"	    , this.AuthClient.ID_USER);
		dsUserParam.setColumn(nrow, "GR_SEARCH"     , this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "CD_DEPT"	    , this.AuthClient.CD_DEPT);	
	}
	
	//관리자
	if(id == "cfID_MAINMAG" || id == "cfID_SUBMAG") {
		dsUserParam.setColumn(nrow, "YN_OFFICER"   , "N");
		dsUserParam.setColumn(nrow, "CD_CORP"      , cdCorp);
	}
	
	return true;
}

this.fnAfterCDTextChanged = function(id, codeFindData) {
	
	var arrData = codeFindData;
	
	switch(id) {
		case "ccfCD_CORP":			//법인코드
			this.ccfCD_ACASSET.form.fnCodeFindClear();
			this.ccfCD_ASSETSEMOK.form.fnCodeFindClear();
			this.ccfCD_GETDEPT.form.fnCodeFindClear();
		break;
		case "ccfCD_ACASSET":	    //자산코드
			this.ccfCD_ASSETSEMOK.form.fnCodeFindClear();
			this.ccfCD_GETDEPT.form.fnCodeFindClear();
		break;
		case "ccfCD_ASSETSEMOK":	//자산세목
			this.ccfCD_GETDEPT.form.fnCodeFindClear();
		break;
	}
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CORP"      , "string");
	this.dsSelect.addColumn("CD_ACASSET"   , "string");
	this.dsSelect.addColumn("CD_ASSETSEMOK", "string");
	this.dsSelect.addColumn("CD_GETDEPT"   , "string");
	
	this.dsSelectMove = new Dataset();
	this.dsSelectMove.addColumn("CD_CORP"      , "string");
	this.dsSelectMove.addColumn("CD_ACASSET"   , "string");
	this.dsSelectMove.addColumn("CD_ASSETSEMOK", "string");
	this.dsSelectMove.addColumn("CD_GETDEPT"   , "string");	
	this.dsSelectMove.addColumn("DT_MOVE"    , "string");	
	
	this.dsInsert = new Dataset();
	this.dsInsert.addColumn("CD_ASSET"     , "string");
	this.dsInsert.addColumn("NO_SEQ"       , "int");
	this.dsInsert.addColumn("DT_FRTAKE"    , "string");
	this.dsInsert.addColumn("CD_FRDEPT"    , "string");
	this.dsInsert.addColumn("AM_GETNATION" , "bigdecimal");
	this.dsInsert.addColumn("YN_GET"       , "string");
	this.dsInsert.addColumn("ID_TRANS"     , "string");
	this.dsInsert.addColumn("NO_DOC"       , "string");
	this.dsInsert.addColumn("ID_MAINMAG"   , "string");
	this.dsInsert.addColumn("ID_SUBMAG"    , "string");
	this.dsInsert.addColumn("TY_FRDEPT"    , "string");
	this.dsInsert.addColumn("YN_MULTI"     , "string");
	this.dsInsert.addColumn("CD_ACASSET"   , "string");
	this.dsInsert.addColumn("CD_CORP"      , "string");
	
	this.dsUpdate = new Dataset();		
	this.dsUpdate.addColumn("CD_ASSET"			, "string");
	this.dsUpdate.addColumn("NO_SEQ"			, "BIGDECIMAL");	
	this.dsUpdate.addColumn("DT_FRTAKE"			, "string");
	this.dsUpdate.addColumn("CD_FRDEPT"			, "string");	
	this.dsUpdate.addColumn("AM_GETNATION"		, "BIGDECIMAL");
	this.dsUpdate.addColumn("YN_GET"			, "string");
	this.dsUpdate.addColumn("ID_TRANS"			, "string");
	this.dsUpdate.addColumn("NO_DOC"			, "string");
	this.dsUpdate.addColumn("ID_MAINMAG"		, "string");
	this.dsUpdate.addColumn("ID_SUBMAG"			, "string");
	this.dsUpdate.addColumn("TY_FRDEPT"			, "string");
	this.dsUpdate.addColumn("CD_CORP"			, "string");
	
	this.dsDelete = new Dataset();
	this.dsDelete.addColumn("CD_CORP"      , "string");
	this.dsDelete.addColumn("CD_ASSET"     , "string");
	this.dsDelete.addColumn("NO_SEQ"       , "int");
		
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {

	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	this.gfnGridBeforeSelect(this.dxGrid2);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "CD_CORP"      , this.dsSearch.getColumn(0, "CD_CORP"));
	this.dsSelect.setColumn(0, "CD_ACASSET"   , this.dsSearch.getColumn(0, "CD_ACASSET"));
	this.dsSelect.setColumn(0, "CD_ASSETSEMOK", this.dsSearch.getColumn(0, "CD_ASSETSEMOK"));
	this.dsSelect.setColumn(0, "CD_GETDEPT"   , this.dsSearch.getColumn(0, "CD_GETDEPT"));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
}

this.fnSelectMove = function ()
{
	if (!this.fnSelectValidate()) return false;
	
	this.dsSelectMove.clearData();
	this.dsSelectMove.addRow();
	
	this.dsSelectMove.setColumn(0, "CD_CORP"      , this.dsSearch.getColumn(0, "CD_CORP"));
	this.dsSelectMove.setColumn(0, "CD_ACASSET"   , this.dsSearch.getColumn(0, "CD_ACASSET"));
	this.dsSelectMove.setColumn(0, "CD_ASSETSEMOK", this.dsSearch.getColumn(0, "CD_ASSETSEMOK"));
	this.dsSelectMove.setColumn(0, "CD_GETDEPT"   , this.dsSearch.getColumn(0, "CD_GETDEPT"));
	this.dsSelectMove.setColumn(0, "DT_MOVE"   , this.dsSearch.getColumn(0, "DT_MOVE"));
	
	var strSvcId    = "selectMove";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "selectMove=dsSelectMove";
	var outData     = "dsList2=selectMove0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
};

/*
 *	입력 버튼
 */
this.fnAdd = function() {	
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
}

/*
 *	저장 버튼
 */
this.fnSave = function() {	
	if (!this.gfnGridValidate(this.dxGrid2)) return;
	
	if (!this.fnSaveValidate()) return;

	this.dxGrid2.updateToDataset();
	
	this.dsUpdate.clearData();

	for (var i = 0; i < this.dsList2.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList2, i);
		switch(flag) {						
			case "U":
				var nrow = this.dsUpdate.addRow();
				this.dsUpdate.setColumn(nrow, "CD_ASSET"		, this.dsList2.getColumn(i, "CD_ASSET"));											//자산번호
				this.dsUpdate.setColumn(nrow, "NO_SEQ"			, this.dsList2.getColumn(i, "NO_SEQ"));				//순번
				this.dsUpdate.setColumn(nrow, "DT_FRTAKE"		, this.dsList2.getColumn(i, "DT_FRTAKE"));			//전입일자
				this.dsUpdate.setColumn(nrow, "CD_FRDEPT"		, this.dsList2.getColumn(i, "CD_FRDEPT"));			//전입부서
				this.dsUpdate.setColumn(nrow, "AM_GETNATION"	, this.dsList2.getColumn(i, "AM_GETNATION"));		//취득금액
				this.dsUpdate.setColumn(nrow, "YN_GET"			, "N");												//취득여부
				this.dsUpdate.setColumn(nrow, "ID_TRANS"		, this.AuthClient.ID_USER);							//등록자ID
				this.dsUpdate.setColumn(nrow, "ID_MAINMAG"		, this.dsList2.getColumn(i, "ID_MAINMAG"));			//사번
				this.dsUpdate.setColumn(nrow, "ID_SUBMAG"		, this.dsList2.getColumn(i, "ID_SUBMAG"));			//사번(부)			
				this.dsUpdate.setColumn(nrow, "CD_CORP"			, this.dsSearch.getColumn(0, "CD_CORP"));    		//법인코드
				this.dsUpdate.setColumn(nrow, "TY_FRDEPT"		, "B");  //부서구분
				
				break;
		}
	}
	
	if (this.dsUpdate.rowcount == 0 ) return;
		
	var strSvcId    = "update";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "update=dsUpdate";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
	

}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {

	if (this.gfnIsNull(this.dsSearch.getColumn(0, "CD_CORP"))) {
		this.gfnAlert("법인코드를 입력하지 않았습니다.");
		return false;
	}
	
	return true;
};

this.fnSaveValidate = function() {
	var strMsg = "";
	var bInEmpty = true;
	
	var cntCdChange = 0;
	
	var rowCnt = this.dsList2.rowcount;
	
	for(var i = 0 ; i < this.dsList2.rowcount ; i++) {
		var flag = this.gfnGetFlag(this.dsList2, i);
		
		if(this.gfnIsNull(flag) || flag != "U") {
			continue;
		}
			
		if( i > 0) {
			if(this.gfnGetDiffDate(this.dsList2.getColumn(i, "DT_FRTAKE"), this.dsList2.getColumn(i, "DT_TOTAKE")) >= 0) {
				strMsg += "최종 전입일자보다 커야합니다.\n";
				bInEmpty = false;
			}
			
			if(this.dsList2.getColumn(i, "CD_FRDEPT") == this.dsList2.getColumn(i, "CD_TODEPT")){
			strMsg += "전입부서와 전출부서는 달라야합니다\n";
			bInEmpty = false;
			}
		}		
		
		if(!bInEmpty) {
			this.gfnAlert(strMsg);
			return bInEmpty;
		}
	}
	return bInEmpty;
}
/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);		
		this.fnSelectMove();
	}
	
	if (svcID == "selectMove") {
		this.gfnGridAfterSelect(this.dxGrid2);
	}
	
	if (svcID == "save") {
		if (errorCode == 0) {
			this.ctclDT_MOVE.set_value(this.calDT_GET.value);
			this.FormBtns.Select.click();
			this.gfnAlert("정상적으로 처리되었습니다.");		
			
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	
	if (svcID == "update") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	
	if (svcID == "delete") {
		if (errorCode == 0) {				
			this.gfnAlert("정상적으로 처리되었습니다.");
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	if (svcID =="slipN")
	{	if (errorCode == 0) {
		this.fnAutoSlip("Y", true);	
		}
	}
	if (svcID =="slipY")
	{
		if (errorCode == 0) {
			this.FormBtns.Select.click();
			this.gfnAlert(" 전표발행이 정상적으로 처리되었습니다.", "", "전표발행", "fnMsgCallback");
		}		
		
	}
	if (svcID =="autoslipX")
	{
		if (errorCode == 0) {
			this.FormBtns.Select.click();
			this.gfnAlert(" 전표취소가 정상적으로 처리되었습니다.", "", "전표취소", "fnMsgCallback");
		}		
		
	}
	
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
this.fnGrid_BeforeUserDataSetParam = function(id, dsUserParam, nrow) {		
	if(id == "DHX_CFACNTUNIT_FIXEDASSET") {	//전입부서
		dsUserParam.setColumn(nrow, "LV_DEPT"		, this.UserInfo.LEVLV_DEPT_ACNT);
		dsUserParam.setColumn(nrow, "CD_DEPT_UPPER"	, this.UserInfo.LEVCD_DEPT_ACNT);
		dsUserParam.setColumn(nrow, "YN_SELECT"		, "A");
		dsUserParam.setColumn(nrow, "CD_CORP"		, this.AuthClient.CD_CORP);
	} else if(id == "DHX_CFIDSABUN1" || id == "DHX_CFIDSABUN2") {	//관리자
 		dsUserParam.setColumn(nrow, "YN_OFFICER", "N");							
 		dsUserParam.setColumn(nrow, "CD_CORP"	, this.AuthClient.CD_CORP);		//구분
	}
	if(id == "DHX_CFACNTUNIT_T0" || id == "DHX_CFACNTUNIT_FR") {	//전입/전출부서
	
		dsUserParam.setColumn(nrow, "CD_DEPT_UPPER"	, "");			//상위부서
		dsUserParam.setColumn(nrow, "YN_SLIPACCEPT"	, "Y");			//전표발행여부
		dsUserParam.setColumn(nrow, "CD_CORP"		, this.AuthClient.CD_CORP);		//법인코드
		dsUserParam.setColumn(nrow, "YN_USE"		, "Y");			//사용여부
		dsUserParam.setColumn(nrow, "GR_DEPT_ACNT"	, "");			//현장/본사여부	
		dsUserParam.setColumn(nrow, "LEVCD_DEPT_UPPER" , this.AuthClient.CD_CORP);
	}
	  
	return true;
};
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo) {

	if(e.oldvalue != e.newvalue) {
	
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);
		this.gfnGridClear(this.dxGrid2);
		this.clearDivData();
   }
}

this.btnOnclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) { 
 
	var rows, nrow, i = 0;
	
	switch(obj.id) {
	
		case "btnMove" :
		
			var chkCnt = this.dsList.getCaseCount("CHK == 1");
			if (chkCnt <= 0) {
				this.gfnAlert("이동처리할 자산을 선택하세요.");
				return false;
			}			
		
			if (this.gfnIsNull(this.calDT_GET.value)) {
				this.gfnAlert("전입일자를 입력하지 않았습니다.");
				return false;
			}
			
			if (this.gfnIsNull(this.cfCD_FRDEPT.form.CDTextBox.value)) {
				this.gfnAlert("전입부서를 입력하지 않았습니다.");
				return false;
			}
			var now = this.dsList.findRowExpr("CD_TAKEDEPT == '"+ this.cfCD_FRDEPT.form.CDTextBox.value+"'");
			if (now != -1)
			{
				this.gfnAlert("보유부서와 전입부서가 동일한 자료가 존재합니다. 이동처리할 수 없습니다.");
				return false;
			}
			
			var cnow = this.dsList.findRowExpr("DT_FRTAKE >= '"+ this.calDT_GET.value+"'");
			
			trace("자산이동 =>" + now + "," + cnow);
			if (cnow != -1)
			{
				this.gfnAlert("이동일자 이후 이동자료가 존재합니다. 이동처리할 수 없습니다.");
				return false;
			}
						
			//Grid Validation
			
			this.gfnConfirm("자산이동을 하시겠습니까?", "assetMove");
			
			break;
			
		case "btnCancel" :
		
			var chkCnt = this.dsList2.getCaseCount("CHK == 1");
			if (chkCnt <= 0) {
				this.gfnAlert("이동취소 처리할 자산을 선택하세요.");
				return false;
			}					
						
			//Grid Validation
			
			this.gfnConfirm("자산이동을 취소 하시겠습니까?", "assetMoveCancel");
			
			break;			
			
		case "btnSlip" :
		    this.gfnConfirm("자산이동 전표발행 하시겠습니까?", "fnAutoSlip", "N");
			//this.fnAutoSlip("N");
		
			break;
		case "btnSlipSearch" :
			this.fnSlipSearch(); 
			break;
		
		case "btnSlipCancel" :
			if(!this.gfnGridIsRow(this.dxGrid2)) return;

			var NO_SLIP = this.dsList2.getColumn(this.dsList2.rowposition, "CD_TRADE_FR");
			
			if ( this.gfnIsNull(NO_SLIP) ) {
				this.gfnAlert("발행된 전표가 없습니다.");
				return false;
			}

			this.gfnConfirm("자산이동 전표취소 하시겠습니까?", "fnSlipCancel");
			break;
			
	} 
 }
 
this.dsRowPosChanged = function(obj:nexacro.NormalDataset,e:nexacro.DSRowPosChangeEventInfo) {
		
	if(this.dsList.rowcount == 0) {
		this.btnMove.set_enable(false);
// 		this.btnMoveAll.set_enable(false);
// 		this.btnViewAssetInfo.set_enable(false);
	} else {
		this.btnMove.set_enable(true);
// 		this.btnMoveAll.set_enable(true);
// 		this.btnViewAssetInfo.set_enable(true);
	}
	
	if(this.dsList2.rowcount == 0) {
		this.btnCancel.set_enable(false);
		this.btnSlip.set_enable(false);
		this.btnSlipCancel.set_enable(false);
		this.btnSlipSearch.set_enable(false);
// 		this.btnCancelAll.set_enable(false);
// 		this.btnAssetMoveAll.set_enable(false);
	} else {
		this.btnCancel.set_enable(true);
		this.btnSlip.set_enable(true);
		this.btnSlipCancel.set_enable(true);
		this.btnSlipSearch.set_enable(true);
// 		this.btnCancelAll.set_enable(true);
// 		this.btnAssetMoveAll.set_enable(true);
	}
}

//자산정보
this.fnAssetInfo = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {

	var objDs   = this.dxGrid.getBindDataset();
	var selRows = this.dxGrid.getSelectedRows();
	
	if(selRows.length > 0) {
		
		//DHN_ASSETREG 자산취득
		if(!this.gfnGridIsRow(this.dxGrid)) {return false;}
	
		var param = {};
		
		param.CD_CORP    = objDs.getColumn(selRows[0], "CD_CORP");
		param.DS_CORP    = objDs.getColumn(selRows[0], "DS_CORP");
		param.CD_ACASSET = objDs.getColumn(selRows[0], "CD_ACASSET");
		param.DS_ACASSET = objDs.getColumn(selRows[0], "DS_ACASSET");
		param.CD_ASSET   = objDs.getColumn(selRows[0], "CD_ASSET");
		param.DS_ASSET   = objDs.getColumn(selRows[0], "DS_ASSET");
		
		this.gfnFormOpen(this.FormInfo.CD_MODULE, "DHN_ASSETREGINFO", "", param);
	}
}

//자산취득정보
this.fnViewAssetInfo = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {

	var objDs   = this.dxGrid.getBindDataset();
	var selRows = this.dxGrid.getSelectedRows();
	
	if(selRows.length > 0) {
		
		//DHN_ASSETREG 자산취득
		if(!this.gfnGridIsRow(this.dxGrid)) {return false;}
	
		var param = {};
		
		param.CD_CORP    = objDs.getColumn(selRows[0], "CD_CORP");
		param.DS_CORP    = objDs.getColumn(selRows[0], "DS_CORP");
		param.CD_ACASSET = objDs.getColumn(selRows[0], "CD_ACASSET");
		param.DS_ACASSET = objDs.getColumn(selRows[0], "DS_ACASSET");
		param.CD_ASSET   = objDs.getColumn(selRows[0], "CD_ASSET");
		param.DS_ASSET   = objDs.getColumn(selRows[0], "DS_ASSET");
		
		this.gfnFormOpen(this.FormInfo.CD_MODULE, "DHN_ASSETREG", "", param);
	}
}
//자산이동정보 
this.fnAssetMoveInfo = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {

	var objDs   = this.dxGrid.getBindDataset();
	var selRows = this.dxGrid.getSelectedRows();
	
	if(selRows.length > 0) {
		
		//DHN_ASSETMOVE 자산이동 정보 
		if(!this.gfnGridIsRow(this.dxGrid)) {return false;}
	
		var param = {};
		
		param.CD_CORP    = objDs.getColumn(selRows[0], "CD_CORP");
		param.DS_CORP    = objDs.getColumn(selRows[0], "DS_CORP");
		param.CD_ACASSET = objDs.getColumn(selRows[0], "CD_ACASSET");
		param.DS_ACASSET = objDs.getColumn(selRows[0], "DS_ACASSET");
		param.CD_ASSET   = objDs.getColumn(selRows[0], "CD_ASSET");
		param.DS_ASSET   = objDs.getColumn(selRows[0], "DS_ASSET");
		
		this.gfnFormOpen(this.FormInfo.CD_MODULE, "DHN_ASSETMOVE", "", param);
	}
}


//자산변동정보 
this.fnAssetChgInfo = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {

	var objDs   = this.dxGrid.getBindDataset();
	var selRows = this.dxGrid.getSelectedRows();
	
	if(selRows.length > 0) {
		
		//DHN_ASSETMOVE 자산이동 정보 
		if(!this.gfnGridIsRow(this.dxGrid)) {return false;}
	
		var param = {};
		
		param.CD_CORP    = objDs.getColumn(selRows[0], "CD_CORP");
		param.DS_CORP    = objDs.getColumn(selRows[0], "DS_CORP");
		param.CD_ACASSET = objDs.getColumn(selRows[0], "CD_ACASSET");
		param.DS_ACASSET = objDs.getColumn(selRows[0], "DS_ACASSET");
		param.CD_ASSET   = objDs.getColumn(selRows[0], "CD_ASSET");
		param.DS_ASSET   = objDs.getColumn(selRows[0], "DS_ASSET");
		
		this.gfnFormOpen(this.FormInfo.CD_MODULE, "DHN_ASSETCHG", "", param);
	}
}

//자산이동 처리 
this.assetMove = function(strId, val) {
	//trace(" assetMove=>" + val);
	if (!val) return;
		
	if(this.dsList.getCaseCount("CHK == 1") <= 0) return;

	this.dsInsert.clearData();
	
	for (var i=0; i < this.dsList.rowcount; i++) {
		if (this.dsList.getColumn(i, "CHK") == 1) {	
	
			var nrow = this.dsInsert.addRow();
			
			this.dsInsert.setColumn(nrow, "CD_ASSET"    , this.dsList.getColumn(i, "CD_ASSET"));
			this.dsInsert.setColumn(nrow, "NO_SEQ"      , 0);
			this.dsInsert.setColumn(nrow, "DT_FRTAKE"   , this.calDT_GET.value);
			this.dsInsert.setColumn(nrow, "CD_FRDEPT"   , this.cfCD_FRDEPT.form.CDTextBox.value);
			this.dsInsert.setColumn(nrow, "AM_GETNATION", this.dsList2.getColumn(i, "AM_GET"));
			this.dsInsert.setColumn(nrow, "YN_GET"      , "N");
			this.dsInsert.setColumn(nrow, "ID_TRANS"    , this.AuthClient.ID_USER);
			this.dsInsert.setColumn(nrow, "NO_DOC"      , "");
			this.dsInsert.setColumn(nrow, "ID_MAINMAG"  , this.cfID_MAINMAG.form.CDTextBox.value);
			this.dsInsert.setColumn(nrow, "ID_SUBMAG"   , this.cfID_SUBMAG.form.CDTextBox.value);
			this.dsInsert.setColumn(nrow, "TY_FRDEPT"   , "B");
			this.dsInsert.setColumn(nrow, "YN_MULTI"    , "Y");
			this.dsInsert.setColumn(nrow, "CD_ACASSET"  , "");
			this.dsInsert.setColumn(nrow, "CD_CORP"     , this.ccfCD_CORP.form.CDTextBox.value);	
		}
	}	
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "insert=dsInsert";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]

}
// 자산이동 취소
this.assetMoveCancel = function(strId, val) {
	if (!val) return;
	
	if(this.dsList2.getCaseCount("CHK == 1") <= 0) return;

	this.dsDelete.clearData();
	
	for (var i=0; i < this.dsList2.rowcount; i++) {
		if (this.dsList2.getColumn(i, "CHK") == 1) {	
	
			var nrow = this.dsDelete.addRow();
			this.dsDelete.setColumn(nrow, "CD_CORP"     , this.ccfCD_CORP.form.CDTextBox.value);
			this.dsDelete.setColumn(nrow, "CD_ASSET"    , this.dsList2.getColumn(i, "CD_ASSET"));
			this.dsDelete.setColumn(nrow, "NO_SEQ"    , this.dsList2.getColumn(i, "NO_SEQ"));
		}
	}
	var strSvcId    = "delete";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "delete=dsDelete";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
};

//전표조회
this.fnSlipSearch = function() {

    if(!this.gfnGridIsRow(this.dxGrid2)) return;

	var NO_SLIP = this.dsList2.getColumn(this.dsList2.rowposition, "CD_TRADE_FR");
	
	if ( this.gfnIsNull(NO_SLIP) ) {
		this.gfnAlert("발행된 전표가 없습니다.");
		return false;
	}

	var param = {};
	param.CD_TRADE = NO_SLIP;
	param.IUD_FLAG = "S";
	param.strYN_JUNDO_START = "";
	
	this.gfnFormOpen("DHA", "DHA_ISSUESLIP", "fnPopCallBack", param);
}

// 전표발행 (slipYn:Y/N)
this.fnAutoSlip = function(strId, val) { 

	if(!val) return;
	
	this.dsSlips.clearData();
	trace("fnAutoSlip =>" + strId);
	
	// 전표발행
	if (strId == "N") {
	
		tmSlip = this.AuthClient.ID_USER + this.gfnGetDate("milli");
		
		for (var i=0; i < this.dsList2.rowcount; i++) {		   
			if (this.dsList2.getColumn(i, "CHK") == 1) {	
			 trace( "CHK : " + i + "=" + this.dsList2.getColumn(i, "CHK")); 
				var nrow = this.dsSlips.addRow();					
				this.dsSlips.setColumn(nrow, "CD_ASSET", this.dsList2.getColumn(i, "CD_ASSET"));
				this.dsSlips.setColumn(nrow, "NO_SEQ", this.dsList2.getColumn(i, "NO_SEQ"));
				this.dsSlips.setColumn(nrow, "TM_SLIP", tmSlip);
				this.dsSlips.setColumn(nrow, "YN_SLIP", strId);
				this.dsSlips.setColumn(nrow, "CD_CORP", this.dsList2.getColumn(i, "CD_CORP"));
				this.dsSlips.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
				cdCorp = this.dsList2.getColumn(i, "CD_CORP");
			}
		}	
	// 전표발행후처리
	} else {
		var nrow = this.dsSlips.addRow();
		this.dsSlips.setColumn(nrow, "TM_SLIP", tmSlip);
		this.dsSlips.setColumn(nrow, "CD_ASSET", "");
		this.dsSlips.setColumn(nrow, "NO_SEQ", 0);
		this.dsSlips.setColumn(nrow, "YN_SLIP", strId);
		this.dsSlips.setColumn(nrow, "CD_CORP", cdCorp);
		this.dsSlips.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);		
	}
	
	trace("dsSlips =>" + this.dsSlips.rowcount);
	if (this.dsSlips.rowcount == 0) return;

	var strSvcId    = "slip" + strId;
	var strSvcType  = "savesel";
	var inProc		= "_dsProc";
	var inData      = "autoslip=dsSlips";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
}

//전표취소
this.fnSlipCancel = function(strId, val) { 
	
	if(!val) return;

    this.dsSlipCancel = new Dataset();
	this.dsSlipCancel.addColumn("CD_TRADE", "string");
	this.dsSlipCancel.addColumn("CD_CORP", "string");
	
	this.dsSlipCancel.clearData();
	for (var i=0; i < this.dsList2.rowcount; i++) {
		if (this.dsList2.getColumn(i, "CHK") == 1) {	
			var nrow = this.dsSlipCancel.addRow();
			this.dsSlipCancel.setColumn(nrow, "CD_TRADE", this.dsList2.getColumn(i, "CD_TRADE_FR"));
			this.dsSlipCancel.setColumn(nrow, "CD_CORP", this.dsList2.getColumn(i, "CD_CORP"));
		}
	}

	if (this.dsSlipCancel.rowcount == 0) return;

	var strSvcId    = "autoslipX";
	var strSvcType  = "savesel";
	var inProc		= "_dsProc";
	var inData      = "autoslipX=dsSlipCancel";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc);   // 통신방법 정의 [생략가능]
};


/**
	자산이동 DIV 초기화.
*/
this.clearDivData = function() {
		
	this.calDT_GET.set_value("");
	this.cfCD_FRDEPT.form.CDTextBox.set_value("");
	this.cfCD_FRDEPT.form.DSTextBox.set_value("");
	
	this.cfID_MAINMAG.form.CDTextBox.set_value("");
	this.cfID_MAINMAG.form.DSTextBox.set_value("");
	
	this.cfID_SUBMAG.form.CDTextBox.set_value("");
	this.cfID_SUBMAG.form.DSTextBox.set_value("");
		
	this.btnMove.set_enable(false);
	//this.btnMoveAll.set_enable(false);
	this.btnCancel.set_enable(false);
	this.btnSlip.set_enable(false);
	this.btnSlipCancel.set_enable(false); 
	this.btnSlipSearch.set_enable(false); 
	//this.btnCancelAll.set_enable(false);	
	//this.btnAssetMoveAll.set_enable(false);
	//this.btnViewAssetInfo.set_enable(false);
}

this.divData_divSplitter_ondrag = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
	e.set_userdata("splitter");
	return true;
};

this.divData_ondragmove = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
	if(e.userdata == "splitter") {
		this.divData.form.divSplitter.set_top(e.clienty);
		this.divData.form.resetScroll();	
	}
}]]></Script>
    <Objects>
      <Dataset id="dsList" onrowposchanged="dsRowPosChanged"/>
      <Dataset id="dsList2" onrowposchanged="dsRowPosChanged"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DHNPR_ASSETMOVEMULTI_STATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">insert</Col>
            <Col id="SP">DHNPR_ASSETMOVE_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">selectMove</Col>
            <Col id="SP">DHNPR_ASSETMOVEMULTI_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">autoslip</Col>
            <Col id="SP">DHNPR_ASSETMOVEMULTI_AUTOSLIP</Col>
          </Row>
          <Row>
            <Col id="TARGET">autoslipX</Col>
            <Col id="SP">DHNPR_ASSETMOVEMULTI_AUTOSLIPX</Col>
          </Row>
          <Row>
            <Col id="TARGET">delete</Col>
            <Col id="SP">DHNPR_ASSETMOVE_DELETE</Col>
          </Row>
          <Row>
            <Col id="TARGET">update</Col>
            <Col id="SP">DHNPR_ASSETMOVE_UPDATE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="DS_CORP" type="STRING" size="256"/>
          <Column id="CD_ACASSET" type="STRING" size="256"/>
          <Column id="DS_ACASSET" type="STRING" size="256"/>
          <Column id="CD_ASSETSEMOK" type="STRING" size="256"/>
          <Column id="DS_ASSETSEMOK" type="STRING" size="256"/>
          <Column id="CD_GETDEPT" type="STRING" size="256"/>
          <Column id="DS_GETDEPT" type="STRING" size="256"/>
          <Column id="DT_MOVE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CORP"/>
            <Col id="CD_ACASSET"/>
            <Col id="CD_ASSETSEMOK"/>
            <Col id="CD_GETDEPT"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSlips" onrowposchanged="dsRowPosChanged">
        <ColumnInfo>
          <Column id="CD_ASSET" type="STRING" size="256"/>
          <Column id="NO_SEQ" type="BIGDECIMAL" size="256"/>
          <Column id="TM_SLIP" type="STRING" size="256"/>
          <Column id="YN_SLIP" type="STRING" size="256"/>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="ID_USER" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_ACASSET.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_ACASSET"/>
      <BindItem id="item2" compid="divSearch.form.ccfCD_ASSETSEMOK.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_ASSETSEMOK"/>
      <BindItem id="item3" compid="divSearch.form.ccfCD_GETDEPT.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_GETDEPT"/>
      <BindItem id="item4" compid="divSearch.form.ccfCD_CORP.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_CORP"/>
      <BindItem id="item5" compid="divSearch.form.ccfCD_ACASSET.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_ACASSET"/>
      <BindItem id="item6" compid="divSearch.form.ccfCD_ASSETSEMOK.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_ASSETSEMOK"/>
      <BindItem id="item7" compid="divSearch.form.ccfCD_GETDEPT.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_GETDEPT"/>
      <BindItem id="item8" compid="divSearch.form.ctclDT_MOVE" propid="value" datasetid="dsSearch" columnid="DT_MOVE"/>
    </Bind>
  </Form>
</FDL>
