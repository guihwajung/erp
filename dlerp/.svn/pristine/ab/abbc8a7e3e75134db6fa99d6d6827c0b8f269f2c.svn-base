<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="AS 기성 집계" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static id="staYM_WORK" taborder="5" text="작업년월" left="0.0" top="10.0" width="118.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="calYM_WORK" taborder="0" left="staYM_WORK:0.0" top="10.0" width="80" height="24.0" url="cmm::cmmCalMM.xfdl"/>
              <Static id="staCD_CORP" taborder="6" text="법인" left="calYM_WORK:0.0" top="10.0" width="118.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_CORP" CDTextWidth="30" taborder="1" left="staCD_CORP:0.0" top="10.0" width="180" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staCD_BUNSO" taborder="7" text="AS사무소" left="ccfCD_CORP:0.0" top="10.0" width="118.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_BUNSO" CDTextWidth="70" taborder="2" left="staCD_BUNSO:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staCD_SITE" taborder="8" text="단지코드" left="ccfCD_BUNSO:0.0" top="10.0" width="118.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_SITE" CDTextWidth="70" taborder="3" left="staCD_SITE:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <CheckBox id="chkTY_ALL" taborder="4" left="ccfCD_SITE:0.0" top="10.0" width="90" height="24.0" text="전체단지여부" falsevalue="N" truevalue="Y"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="1" left="0" top="40" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);
	// ---------------------------//
	//this.fnSetButton();
	//this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	this.fnSetCombo();
	
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {	
	// 서브 버튼 사용
	//this.gfnUseSubBtn(true, this.divData, this.divData.form.divSplitter); // divSplitter sync
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결
 ************************************************************************/
this.fnSetExtendButton = function() {
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.calYM_WORK = this.divSearch.form.calYM_WORK;    // 작업년월
	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;
	this.ccfCD_BUNSO = this.divSearch.form.ccfCD_BUNSO;
	this.ccfCD_SITE = this.divSearch.form.ccfCD_SITE;
	this.dxGrid = this.divData.form.objGrid;
	
	//작업일자 셋팅
	var today = this.gfnGetDate().substring(0,6);
	this.calYM_WORK.form.TextBox.set_value(today);
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.ccfCD_CORP.CodeFindName = "DAX_CFCORP";
	this.ccfCD_BUNSO.CodeFindName = "DBX_CFBUNSO";
	this.ccfCD_SITE.CodeFindName = "DBX_CFMAINSITE";
	this.ccfCD_SITE.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	this.gfnGridInit(this.dxGrid, this.dsList, "DB", "DBS_COSTSUM_SITE");  // pForm.gfnGridInit = function(objGrid, objDs, cd_system, id_grid, tree_column, level_column, is_manual) 
	this.dxGrid.set_selecttype("cell");	// IE경우만 multiarea모드에서 master선택후 마우스 이동 빠르게 할 경우 버그가 있어서 cell 모드로 변경
	this.dxGrid.setCellProperty( "body", 0, "cssclass", "");
	this.dxGrid.setCellProperty( "body", this.dxGrid.getBindCellIndex("body","DS_CORP"), "cssclass", "expr:dataset.getRowLevel(currow) == 2 ? 'update':''");
	this.dxGrid.setCellProperty( "body", this.dxGrid.getBindCellIndex("body","DS_CORP"), "text", "expr:dataset.getRowLevel(currow) == 2 ? '합계':dataset.lookup( 'CD_CORP', CD_CORP, 'DS_CORP' )");
	this.dxGrid.setCellProperty("body", this.dxGrid.getBindCellIndex("body","DS_BUNSO"), "cssclass", "expr:dataset.getRowLevel(currow) == 1 ? 'update':(dataset.getRowLevel(currow) == 2 ? 'BACK_ChongKe':'')");	
	this.dxGrid.setCellProperty("body", this.dxGrid.getBindCellIndex("body","SEQ"), "cssclass", "expr:dataset.getRowLevel(currow) == 1 ? 'subtotal':(dataset.getRowLevel(currow) == 2 ? 'BACK_ChongKe':'')");	
	this.dxGrid.setCellProperty("body", this.dxGrid.getBindCellIndex("body","DS_SITE"), "cssclass", "expr:dataset.getRowLevel(currow) == 1 ? 'subtotal':(dataset.getRowLevel(currow) == 2 ? 'BACK_ChongKe':'')");	
	this.dxGrid.setCellProperty("body", this.dxGrid.getBindCellIndex("body","DS_BUNSO"), "subsumtext", "expr:dataset.getRowLevel(currow) == 2 ? '':'소계'");
	this.dxGrid.setFormatRowProperty( 0, "size", 48);
	this.dsSearch.addEventHandler("onvaluechanged", this.dsSearch_onvaluechanged, this);
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("YM_WORK", "string");
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("CD_BUNSO", "string");
	this.dsSelect.addColumn("CD_SITE", "string");
	this.dsSelect.addColumn("TY_ALL", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsList.clearData();
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "YM_WORK", this.dsSearch.getColumn(0,"YM_WORK"));
	this.dsSelect.setColumn(0, "CD_CORP", this.dsSearch.getColumn(0,"CD_CORP"));
	this.dsSelect.setColumn(0, "CD_BUNSO", this.dsSearch.getColumn(0,"CD_BUNSO"));
	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0,"CD_SITE"));
	this.dsSelect.setColumn(0, "TY_ALL", this.dsSearch.getColumn(0,"TY_ALL"));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
	
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
	
	var inProc		= "_dsProc";
	//var inParam 	= "params=dsReportParam";	// 조회SP이외 사용할 정보
	var inParam 	= "";						// 필요없는 경우 생략
	var inData      = "select=dsSelect";
	var reportpath  = "/db/dbs/DBS_COSTSUM_SITE.ozr";
	gfnOpenReport(this, reportpath, inProc, inParam, inData);
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;
	if (this.gfnIsNull(this.calYM_WORK.form.TextBox.value)) {
		validate = false;
		this.fnVaidateCallback = function() {
			this.calYM_WORK.form.TextBox.setFocus();
			return false;
		}
		this.gfnAlert("접수년월을 입력하셔야 합니다.", "fnVaidateCallback"); // gfnAlert = function (sMsgId, arrArg, sPopId, sCallback)
	}
	return validate;
}
/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
	} else if (svcID == "combo") {
		this.dsColList1.insertRow(0);
		this.dsColList1.setColumn(0,"CD_CODE","S10");
		this.dsColList1.setColumn(0,"DS_CODE","합계");
		this.fnSetGridColunm();

		if(this.FormInfo.ID_GROUP != "0" && this.FormInfo.ID_GROUP != "A" && this.FormInfo.ID_GROUP != "3" && this.FormInfo.ID_GROUP != "W"  ){
			if( this.FormInfo.ID_GROUP == "2" ){
				this.ccfCD_BUNSO.form.CDTextBox.set_value(this.AuthClient.CD_DEPT.substr(1));
				this.ccfCD_BUNSO.form.fnCodeFindLoad();
			}
			if( this.FormInfo.ID_GROUP == "6" || this.FormInfo.ID_GROUP == "C" ){
				this.ccfCD_SITE.form.CDTextBox.set_value(this.AuthClient.CD_DEPT);
				this.ccfCD_SITE.form.fnCodeFindLoad();
				this.ccfCD_SITE.form.set_readonly(true);
			}
			this.ccfCD_BUNSO.form.set_readonly(true);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
 this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	
	if (id == "ccfCD_SITE") {
		dsUserParam.setColumn(nrow, "CD_AUTHDEPT", "");
		dsUserParam.setColumn(nrow, "CD_BUNSO", this.gfnNvl(this.dsSearch.getColumn(0,"CD_BUNSO"),"")); 
		dsUserParam.setColumn(nrow, "ID_GROUP", this.FormInfo.ID_GROUP);
		dsUserParam.setColumn(nrow, "CD_DEPT", this.AuthClient.CD_DEPT);
	}
	return true;
};
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/

/************************************************************************
 * 확장버튼 이벤트
 ************************************************************************/

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);
	}
	
	if( e.columnid == "CD_BUNSO"){
		this.ccfCD_SITE.form.CDTextBox.set_value("");
		this.ccfCD_SITE.form.DSTextBox.set_value("");
	}
};

this.fnSetGridColunm = function (){
	var nIndex = 0;
	var nCol1 = 0;
	var strDsCode = "";
	var nIdx = -1;
	for( var i=0; i < this.dsColList1.rowcount; i++) {
		var objColinfo = new ColumnInfo() ;
		objColinfo.set_type( "BIGDECIMAL" );
		objColinfo.set_size( 256 );
		// 합계 컬럼인 경우 처리
		if( this.dsColList1.getColumn(i,"CD_CODE") == "S10") {
			this.dsList.addColumnInfo(this.dsColList1.getColumn(i,"CD_CODE"),objColinfo);
		} else {
			this.dsList.addColumnInfo("B"+this.dsColList1.getColumn(i,"CD_CODE"),objColinfo);
		}
		nCol1 = this.dxGrid.appendContentsCol();
		this.dxGrid.setFormatColProperty(nCol1, "size", 100);
		strDsCode = this.dsColList1.getColumn(i,"DS_CODE");
		nIdx = strDsCode.lastIndexOf(" ");
		strDsCode = nIdx == -1 ? strDsCode : strDsCode.substr(0,nIdx)+"\n"+ strDsCode.substr(nIdx);
		this.dxGrid.setCellProperty("head", nCol1, "text", strDsCode);
		this.dxGrid.setCellProperty("body", nCol1, "displaytype", "number");
		
		this.dxGrid.setCellProperty( "summary", nCol1, "displaytype", "mask");
		this.dxGrid.setCellProperty( "summary", nCol1, "maskedittype", "number" );
		this.dxGrid.setCellProperty( "summary", nCol1, "maskeditformat","#,###,##0.##") ;
		// 합계 컬럼인 경우 처리
		if( this.dsColList1.getColumn(i,"CD_CODE") == "S10") {
			this.dxGrid.setCellProperty("body", nCol1, "text", "bind:" + this.dsColList1.getColumn(i,"CD_CODE"));
			this.dxGrid.setCellProperty( "summary", nCol1, "text", "expr:dataset.getSum('"+this.dsColList1.getColumn(i,"CD_CODE")+"')");
		} else {
			this.dxGrid.setCellProperty("body", nCol1, "text", "bind:B"+this.dsColList1.getColumn(i,"CD_CODE"));
			this.dxGrid.setCellProperty( "summary", nCol1, "text", "expr:dataset.getSum('B"+this.dsColList1.getColumn(i,"CD_CODE")+"')");
		}
		this.dxGrid.setCellProperty("body", nCol1, "cssclass", "expr:dataset.getRowLevel(currow) == 1 ? 'subtotal':(dataset.getRowLevel(currow) == 2 ? 'BACK_ChongKe':'')");	
	}

	for( var i=0; i < this.dsColList2.rowcount; i++) {
		var objColinfo = new ColumnInfo() ;
		objColinfo.set_type( "BIGDECIMAL" );
		objColinfo.set_size( 256 );
		
		this.dsList.addColumnInfo("C"+this.dsColList2.getColumn(i,"CD_CODE"),objColinfo);
		
		nCol1 = this.dxGrid.appendContentsCol();
		this.dxGrid.setFormatColProperty(nCol1, "size", 100);
		strDsCode = this.dsColList2.getColumn(i,"DS_CODE");
		nIdx = strDsCode.lastIndexOf(" ");
		strDsCode = nIdx == -1 ? strDsCode : strDsCode.substr(0,nIdx)+"\n"+ strDsCode.substr(nIdx);
		this.dxGrid.setCellProperty("head", nCol1, "text", strDsCode);
		this.dxGrid.setCellProperty("body", nCol1, "displaytype", "number");
		this.dxGrid.setCellProperty( "summary", nCol1, "displaytype", "mask");
		this.dxGrid.setCellProperty( "summary", nCol1, "maskedittype", "number" );
		this.dxGrid.setCellProperty( "summary", nCol1, "maskeditformat","#,###,##0.##") ;

		this.dxGrid.setCellProperty("body", nCol1, "text", "bind:C"+this.dsColList2.getColumn(i,"CD_CODE"));
		this.dxGrid.setCellProperty( "summary", nCol1, "text", "expr:dataset.getSum('C"+this.dsColList2.getColumn(i,"CD_CODE")+"')");

		this.dxGrid.setCellProperty("body", nCol1, "cssclass", "expr:dataset.getRowLevel(currow) == 1 ? 'subtotal':(dataset.getRowLevel(currow) == 2 ? 'BACK_ChongKe':'')");
	}
	
	// 팝업 오픈시 조회
	if(!this.gfnIsNull(this.getOwnerFrame().CF_CD_BUNSO) ) {
		this.ccfCD_BUNSO.form.CDTextBox.set_value(this.gfnNvl(this.getOwnerFrame().CF_CD_BUNSO,""));
		this.ccfCD_BUNSO.form.DSTextBox.set_value(this.gfnNvl(this.getOwnerFrame().CF_DS_BUNSO,""));
		this.dsSearch.setColumn(0,"YM_WORK",this.gfnNvl(this.getOwnerFrame().CF_YM_WORK,""));
		this.FormBtns.Select.click();
	}
}
/*
 *	콤보박스 값 설정
 */
this.fnSetCombo = function() {
	this.dsCombo = new Dataset();
	this.dsCombo.addColumn("CD_SYSTEM", "string");
	this.dsCombo.addColumn("CD_TYPE", "string");
	
	this.dsCombo.addRow();
	this.dsCombo.setColumn(0, "CD_SYSTEM", "DB");
	this.dsCombo.setColumn(0, "CD_TYPE", "H1");      // 유지관리비 비목
	
	this.dsCombo2 = new Dataset();
	this.dsCombo2.addColumn("CD_SYSTEM", "string");
	this.dsCombo2.addColumn("CD_TYPE", "string");
	
	this.dsCombo2.addRow();
	this.dsCombo2.setColumn(0, "CD_SYSTEM", "DB");
	this.dsCombo2.setColumn(0, "CD_TYPE", "C1");      // 발주구분
	
	var strSvcId    = "combo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "combo=dsCombo combo2=dsCombo2";
	var outData     = "dsColList1=combo0 dsColList2=combo20";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]

};]]></Script>
    <Objects>
      <Dataset id="dsList" />
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DBSPR_COSTSUM_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo</Col>
            <Col id="SP">DZXPR_COMBO_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo2</Col>
            <Col id="SP">DZXPR_COMBO_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch">
        <ColumnInfo>
          <Column id="YM_WORK" type="STRING" size="256"/>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="CD_BUNSO" type="STRING" size="256"/>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="TY_ALL" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsColList1" enableevent="false">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsColList2" enableevent="false">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item2" compid="divSearch.form.calYM_WORK.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_WORK"/>
      <BindItem id="item0" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_BUNSO.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_BUNSO"/>
      <BindItem id="item3" compid="divSearch.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item4" compid="divSearch.form.chkTY_ALL" propid="value" datasetid="dsSearch" columnid="TY_ALL"/>
    </Bind>
  </Form>
</FDL>
