<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="매입총괄집계표" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static id="staCD_CORP" taborder="0" text="법인코드" left="0.0" top="10.0" width="105.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_CORP" CodeFindName="DHX_CFCORP" CDTextWidth="50" taborder="1" left="staCD_CORP:0.0" top="10.0" width="240" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staCD_SELFACNT" taborder="2" text="세무단위" left="ccfCD_CORP:0.0" top="10.0" width="105.0" height="24.0" usedecorate="false" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_SELFACNT" CodeFindName="DHX_CFSELFACNT" CDTextWidth="80" taborder="3" left="staCD_SELFACNT:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staYM_MAGAM" taborder="4" text="작성년도" left="ccfCD_SELFACNT:0.0" top="10.0" width="105.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYM_MAGAM" taborder="5" left="staYM_MAGAM:0.0" top="10.0" width="80" height="24.0" url="cmm::cmmCalYY.xfdl" enableevent="true"/>
              <Static id="staNO_TAX" taborder="6" text="작성기수" left="ctclYM_MAGAM:0.0" top="10.0" width="105.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Combo id="ccboNO_TAX" taborder="7" text="1기예정" left="staNO_TAX:0.0" top="10.0" width="100" height="24.0" innerdataset="dsNO_TAX" codecolumn="CD_CODE" datacolumn="DS_CODE" index="0" value="1"/>
              <Div id="ctclDT_FROM" taborder="8" left="ccboNO_TAX:0.0" top="10.0" width="80" height="24.0" url="cmm::cmmCalMM.xfdl" enable="false"/>
              <Static id="staWAVE" taborder="9" text="~" left="ctclDT_FROM:0.0" top="10.0" width="30.0" height="24.0" cssclass="sta_WF_AC"/>
              <Div id="ctclDT_TO" taborder="10" left="staWAVE:0.0" top="10.0" width="80" height="24.0" url="cmm::cmmCalMM.xfdl" enable="false"/>
              <Static id="staTY_SALEBUY" taborder="11" text="매입/매출" left="ctclDT_TO:0.0" top="10.0" width="105.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Radio id="crdoTY_SALEBUY" taborder="12" left="staTY_SALEBUY:0.0" top="10.0" width="120" height="24.0" innerdataset="dsTY_SALEBUY" codecolumn="CD_CODE" datacolumn="DS_CODE" direction="vertical" value="" text="" index="-1" onitemchanged="fnSetCombo"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="10" right="0" visible="false" bottom="0"/>
              <Grid id="objGrid2" taborder="1" left="0" top="10" right="0" visible="false" bottom="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	
	this.dsSearch.setColumn(0, "YM_MAGAM", this.gfnGetDate().substr(0, 4));
	this.crdoTY_SALEBUY.set_index(0);
	
	var month = nexacro.toNumber(this.gfnGetDate().substr(4,2),0);
	
	var selectedIndex = 0;
	if(month >= 4 && month <= 6)
	{
		selectedIndex = 1;
	}
	else if(month >= 7 && month <= 9)
	{
		selectedIndex = 2;
	}
	else if(month >= 10 && month <= 12)
	{
		selectedIndex = 3;
	}
	
	this.ccboNO_TAX.set_index(selectedIndex);

	this.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP); 
	this.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);
	
	this.dsSearch.setColumn(0, "CD_SELFACNT", this.UserInfo.LEVCD_DEPT_SELFACNT);
	this.divSearch.form.ccfCD_SELFACNT.form.fnCodeFindLoad();

	if(!this.gfnIsNull(this.dsSearch.getColumn(0, "CD_SELFACNT"))
	&& !this.gfnIsNull(this.dsSearch.getColumn(0, "YM_MAGAM"))
	&& !this.gfnIsNull(this.dsSearch.getColumn(0, "NO_TAX")))
	{
		this.FormBtns.Select.click();
	}

};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {

}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnCreate = this.gfnFormButtonAdd("btnCreate", "fnCreate"); 
	this.btnDelete = this.gfnFormButtonAdd("btnDelete", "fnDelete"); 
 		
// 	this.btnCreate.set_enable(false);
// 	this.btnDelete.set_enable(false);		
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;	// 법인코드
	this.ccfCD_SELFACNT = this.divSearch.form.ccfCD_SELFACNT;
	this.ctclYM_MAGAM = this.divSearch.form.ctclYM_MAGAM;
	this.ccboNO_TAX = this.divSearch.form.ccboNO_TAX;
	this.ctclDT_FROM = this.divSearch.form.ctclDT_FROM;
	this.ctclDT_TO = this.divSearch.form.ctclDT_TO;
	this.crdoTY_SALEBUY = this.divSearch.form.crdoTY_SALEBUY;
	

	this.dxGrid = this.divData.form.objGrid;
	this.dxGrid2 = this.divData.form.objGrid2;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.ccfCD_SELFACNT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";

	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DH", "DHV_TOTALBUYING");
	this.gfnGridInit(this.dxGrid2, this.dsList2, "DH", "DHV_TOTALSALE");
	
	this.gfnGridColumnColor(this.dxGrid, "CD_DEPT_ACNT","BACK_Soke", "TY_GUBUN2 == '002'", true);
	this.gfnGridColumnColor(this.dxGrid, "CD_DEPT_ACNT","BACK_ChongKe", "TY_GUBUN2 == '003'", true);
	
	this.ccfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_SELFACNT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_SELFACNT", "string");
	this.dsSelect.addColumn("YM_MAGAM", "string");
	this.dsSelect.addColumn("ID_INSERT", "string");
	this.dsSelect.addColumn("CD_CORP", "string");
	
	this.dsSelect2 = new Dataset();
	this.dsSelect2.addColumn("CD_SELFACNT", "string");
	this.dsSelect2.addColumn("YM_MAGAM", "string");
	this.dsSelect2.addColumn("CD_CORP", "string");
	
	this.dsDelete = new Dataset();
	this.dsDelete.addColumn("CD_SELFACNT", "string");
	this.dsDelete.addColumn("YM_MAGAM", "string");	
	
	this.dsSelectUser = new Dataset();
	this.dsSelectUser.addColumn("ID_USER", "string");
	this.dsSelectUser.addColumn("CD_DEPT", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	
	if (!this.fnSelectValidate()) return false;

	if(this.dsSearch.getColumn(0, "TY_SALEBUY") == "BUY") {	//매입
		this.gfnGridBeforeSelect(this.dxGrid);
		
		this.dsSelect.clearData();
		this.dsSelect.addRow();
			
		this.dsSelect.setColumn(0, "CD_SELFACNT", this.dsSearch.getColumn(0, "CD_SELFACNT"));
		this.dsSelect.setColumn(0, "YM_MAGAM", this.dsSearch.getColumn(0, "DT_TO"));
		this.dsSelect.setColumn(0, "ID_INSERT", this.AuthClient.ID_USER);
		this.dsSelect.setColumn(0, "CD_CORP", this.AuthClient.CD_CORP);

		var inData      = "b_select=dsSelect";
		var outData     = "dsList=b_select0";

	}else{
		this.gfnGridBeforeSelect(this.dxGrid2);
		
		this.dsSelect2.clearData();
		this.dsSelect2.addRow();
		
		this.dsSelect2.setColumn(0, "CD_SELFACNT", this.dsSearch.getColumn(0, "CD_SELFACNT"));
		this.dsSelect2.setColumn(0, "YM_MAGAM", this.dsSearch.getColumn(0, "DT_TO"));
		this.dsSelect2.setColumn(0, "CD_CORP", this.AuthClient.CD_CORP);	
		
		var inData      = "s_select=dsSelect2";
		var outData     = "dsList2=s_select0";

	}
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	//var inData      = "b_select=dsSelect s_select=dsSelect2";
	//var outData     = "dsList=b_select0 dsList2=s_select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
						
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	if(this.crdoTY_SALEBUY.value == "BUY"){
		this.gfnExcelExport(this.dxGrid);
	}else{
		this.gfnExcelExport(this.dxGrid2);
	}
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;
	
	if(this.gfnIsNull(this.dsSearch.getColumn(0, "CD_SELFACNT"))) {
		this.gfnAlert("세무단위를 입력하세요!");
		validate = false;
	}
	else if(this.gfnIsNull(this.dsSearch.getColumn(0, "YM_MAGAM"))) {
		this.gfnAlert("작성년도를 입력하세요!");
		validate = false;
	}
	else if(this.gfnIsNull(this.dsSearch.getColumn(0, "NO_TAX"))) {
		this.gfnAlert("작성기수를 선택하세요!");
		validate = false;
	}
	
	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
this.fnCallback = function(svcID, errorCode, errorMsg) {
	if (svcID == "select") {
		if(this.dsSearch.getColumn(0, "TY_SALEBUY") == "BUY") {
			this.gfnGridAfterSelect(this.dxGrid);
			
			if(this.dsList.rowcount <= 1) {
				this.btnCreate.set_enable(true);
				this.btnDelete.set_enable(false);
			} else {
				this.btnCreate.set_enable(false);
				this.btnDelete.set_enable(true);
			}
		} else {
			this.gfnGridAfterSelect(this.dxGrid2);

			if(this.dsList2.rowcount <= 1) {
				this.btnCreate.set_enable(true);
				this.btnDelete.set_enable(false);
			} else {
				this.btnCreate.set_enable(false);
				this.btnDelete.set_enable(true);
			}	
		}
	}
	else if(svcID == "create") {
		if (errorCode == 0) {
			this.gfnAlert("마감 작업이 완료되었습니다.");
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	else if(svcID == "delete") {
		if (errorCode == 0) {
			this.gfnAlert("마감취소 작업이 완료되었습니다.");
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}	
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	var cdCorp = this.dsSearch.getColumn(0, "CD_CORP");
	switch(id) {
		case "ccfCD_CORP": // 법인코드
			dsUserParam.setColumn(nrow, "ID_SABUN", this.AuthClient.ID_USER);
			break;
		case "ccfCD_SELFACNT": // 세무단위
			if (this.gfnIsNull(cdCorp)) {
				this.gfnAlert("법인코드를 먼저 선택하세요.");
				this.ccfCD_CORP.form.CDTextBox.setFocus();
				return false;
			}
			dsUserParam.setColumn(nrow, "CD_CORP", cdCorp);
			break;
	}
	return true;
};

 this.fnAfterCDTextChanged = function(id, codeFindData) {
	var arrData = codeFindData;
	
	switch(id) {
	
	case "ccfCD_CORP": // 법인코드
		this.ccfCD_SELFACNT.form.fnCodeFindClear();
		
		break;	
	}
	return true;
};

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo) {
	
	if(e.oldvalue != e.newvalue) {
		switch(e.columnid) {
			case "YM_MAGAM" :
				this.fnSetDt(e.newvalue, this.dsSearch.getColumn(0, "NO_TAX"));
				break;
			case "NO_TAX" :
				this.fnSetDt(this.dsSearch.getColumn(0, "YM_MAGAM"), e.newvalue);
				break;
			case "TY_SALEBUY" : 
				if(e.newvalue == "BUY") { 
					this.dxGrid.set_visible(true);
					this.dxGrid2.set_visible(false);
				} else {
					this.dxGrid.set_visible(false);
					this.dxGrid2.set_visible(true);
				}
				break;
		}
	
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);
		this.gfnGridClear(this.dxGrid2);
	
	}	
}
 
this.fnSetDt = function(ymMagam, noTax) {
	var dtFrom;
	var dtTo;
	
	if(this.gfnIsNull(ymMagam) || this.gfnIsNull(noTax)) {
	
		dtFrom = "";
		dtTo = "";
	} else {
	
		switch(noTax) {
			case "1" :
				dtFrom = ymMagam + "01";
				dtTo = ymMagam + "03";
				break;
			case "2" :
				dtFrom = ymMagam + "04";
				dtTo = ymMagam + "06";
				break;
			case "3" :
				dtFrom = ymMagam + "07";
				dtTo = ymMagam + "09";
				break;
			case "4" :
				dtFrom = ymMagam + "10";
				dtTo = ymMagam + "12";
				break;
			default :
				dtFrom = "";
				dtTo = "";
				break;
		}
	}
	
	this.dsSearch.setColumn(0, "DT_FROM", dtFrom);
	this.dsSearch.setColumn(0, "DT_TO", dtTo);
}

this.fnCreate = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if(this.gfnIsNull(this.dsSearch.getColumn(0, "CD_SELFACNT"))) {
		this.gfnAlert("세무단위를 입력하세요!");
		return false;
	}
	else if(this.gfnIsNull(this.dsSearch.getColumn(0, "YM_MAGAM"))) {
		this.gfnAlert("작성년도를 입력하세요!");
		return false;
	}
	
	this.gfnConfirm("마감작업을 하시겠습니까?", "fnCreateCallBack");
}

this.fnCreateCallBack = function(strId, val) {

	if(val == false) return;
	
	this.dsCreate = new Dataset();
	this.dsCreate.addColumn("CD_SELFACNT", "string");
	this.dsCreate.addColumn("YM_MAGAM", "string");
	
	if(this.dsSearch.getColumn(0, "TY_SALEBUY") == "BUY")
	{
		this.dsCreate.addColumn("ID_INSERT", "string");
	}
	
	this.dsCreate.clearData();
	this.dsCreate.addRow();
	
	this.dsCreate.setColumn(0, "CD_SELFACNT", this.dsSearch.getColumn(0, "CD_SELFACNT"));
	this.dsCreate.setColumn(0, "YM_MAGAM"   , this.dsSearch.getColumn(0, "DT_TO"));
	
	var inData      = "s_create=dsCreate";
	
	if(this.dsSearch.getColumn(0, "TY_SALEBUY") == "BUY")
	{
		this.dsCreate.setColumn(0, "ID_INSERT"  , this.AuthClient.ID_USER);
		inData      = "b_create=dsCreate";
	
	}
	
	var strSvcId    = "create";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
	
}

this.fnDeleteCallBack = function(strId, val) {

	if(val == false) return;
	
	this.dsDelete.clearData();
	this.dsDelete.addRow();
	
	this.dsDelete.setColumn(0, "CD_SELFACNT", this.dsSearch.getColumn(0, "CD_SELFACNT"));
	this.dsDelete.setColumn(0, "YM_MAGAM"	, this.dsSearch.getColumn(0, "DT_TO"));
	
	var inData      = "s_delete=dsDelete";
	if(this.dsSearch.getColumn(0, "TY_SALEBUY") == "BUY")
	{
		inData      = "b_delete=dsDelete";
	}
	
	var strSvcId    = "delete";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
	
}

this.fnDelete = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if(this.gfnIsNull(this.dsSearch.getColumn(0, "CD_SELFACNT"))) {
		this.gfnAlert("세무단위를 입력하세요!");
		return false;
	}
	else if(this.gfnIsNull(this.dsSearch.getColumn(0, "YM_MAGAM"))) {
		this.gfnAlert("작성년도를 입력하세요!");
		return false;
	}
	
	this.gfnConfirm("마감 취소 작업을 하시겠습니까?", "fnDeleteCallBack");
}
]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="dsList2"/>
      <Dataset id="dsNO_TAX">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">1</Col>
            <Col id="DS_CODE">1기예정</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">2</Col>
            <Col id="DS_CODE">1기확정</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">3</Col>
            <Col id="DS_CODE">2기예정</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">4</Col>
            <Col id="DS_CODE">2기확정</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_SALEBUY">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">BUY</Col>
            <Col id="DS_CODE">매입</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">SALE</Col>
            <Col id="DS_CODE">매출</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">b_select</Col>
            <Col id="SP">DHVPR_TOTALBUYING_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">s_select</Col>
            <Col id="SP">DHVPR_TOTALSALE_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">b_create</Col>
            <Col id="SP">DHVPR_TOTALBUYING_CREATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">s_create</Col>
            <Col id="SP">DHVPR_TOTALSALE_CREATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">b_delete</Col>
            <Col id="SP">DHVPR_TOTALBUYING_DELETE</Col>
          </Row>
          <Row>
            <Col id="TARGET">s_delete</Col>
            <Col id="SP">DHVPR_TOTALSALE_DELETE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_SELFACNT" type="STRING" size="256"/>
          <Column id="YM_MAGAM" type="STRING" size="256"/>
          <Column id="NO_TAX" type="STRING" size="256"/>
          <Column id="TY_SALEBUY" type="STRING" size="256"/>
          <Column id="DT_FROM" type="STRING" size="256"/>
          <Column id="DT_TO" type="STRING" size="256"/>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="DS_CORP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_SELFACNT"/>
            <Col id="YM_MAGAM"/>
            <Col id="NO_TAX"/>
            <Col id="TY_SALEBUY"/>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_SELFACNT.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SELFACNT"/>
      <BindItem id="item1" compid="divSearch.form.ctclYM_MAGAM.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_MAGAM"/>
      <BindItem id="item2" compid="divSearch.form.ccboNO_TAX" propid="value" datasetid="dsSearch" columnid="NO_TAX"/>
      <BindItem id="item3" compid="divSearch.form.crdoTY_SALEBUY" propid="value" datasetid="dsSearch" columnid="TY_SALEBUY"/>
      <BindItem id="item4" compid="divSearch.form.ctclDT_FROM.form.TextBox" propid="value" datasetid="dsSearch" columnid="DT_FROM"/>
      <BindItem id="item5" compid="divSearch.form.ctclDT_TO.form.TextBox" propid="value" datasetid="dsSearch" columnid="DT_TO"/>
      <BindItem id="item6" compid="divSearch.form.ccfCD_CORP.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_CORP"/>
      <BindItem id="item7" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
    </Bind>
  </Form>
</FDL>
