<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="400" height="350" maxwidth="400" maxheight="370" titletext="원천세전자신고" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divData" taborder="0" left="0" top="0" bottom="0" right="0" cssclass="div_DATA_Bg" text="">
          <Layouts>
            <Layout>
              <Static id="staTITLE" taborder="15" text="원천세 전자신고 생성" left="0" top="10" height="30" cssclass="sta_TITLE_Bg" textAlign="left" right="0"/>
              <Static id="sta04" taborder="18" left="0" top="staTITLE:11" width="100" height="30" text="법인코드" cssclass="sta_WF_tablelabelE"/>
              <Static id="sta05" taborder="19" left="99" top="staTITLE:11" height="30" cssclass="sta_WF_tablebg" right="0"/>
              <Static id="sta00" taborder="2" left="0" top="sta04:-1" width="100" height="30" text="세무단위" cssclass="sta_WF_tablelabelE"/>
              <Static id="sta01" taborder="3" left="sta00:-1" top="sta05:-1" height="30" cssclass="sta_WF_tablebg" right="0"/>
              <Static id="sta15" taborder="13" left="0" top="sta00:-1" height="30" text="귀속년도" width="100" cssclass="sta_WF_tablelabelE"/>
              <Static id="sta18" taborder="14" left="sta15:-1" top="sta01:-1" height="30" cssclass="sta_WF_tablebg" right="0"/>
              <Static id="sta02" taborder="4" left="0" top="sta15:-1" width="100" height="30" text="지급년도" cssclass="sta_WF_tablelabelE"/>
              <Static id="sta03" taborder="5" left="sta02:-1" top="sta18:-1" height="30" cssclass="sta_WF_tablebg" right="0"/>
              <Static id="sta06" taborder="6" left="0" top="sta02:-1" width="100" height="30" text="제출일자" cssclass="sta_WF_tablelabelE"/>
              <Static id="sta07" taborder="7" left="sta06:-1" top="sta03:-1" height="30" cssclass="sta_WF_tablebg" right="0"/>
              <Static id="sta08" taborder="8" left="0" top="sta06:-1" width="100" height="30" text="구분" cssclass="sta_WF_tablelabelE"/>
              <Static id="sta09" taborder="9" left="sta08:-1" top="sta07:-1" height="30" cssclass="sta_WF_tablebg" right="0"/>
              <Div id="cfCD_CORP" CodeFindName="DHX_CFCORP" CDTextWidth="70" taborder="10" left="sta00:5" top="staTITLE:15" height="20" url="cmm::cmmCodeFind.xfdl" right="20"/>
              <Div id="tclYR_TAX" taborder="16" left="sta15:5" top="sta01:4" width="60" height="20" url="cmm::cmmCalYY.xfdl"/>
              <Div id="tclYR_PAY" taborder="17" left="sta02:5" top="sta18:4" width="60" height="20" url="cmm::cmmCalYY.xfdl"/>
              <Calendar id="tclDT_ACCOUNT" taborder="11" left="sta06:5" top="sta03:4" width="105" height="20" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" value="" enable="true"/>
              <Combo id="cboTY_INCOME_TYPE" taborder="12" left="105" top="sta07:4" width="155" height="20" datacolumn="DS_CODE" codecolumn="CD_CODE" innerdataset="dsTY_INCOME_TYPE"/>
              <Button id="btnSave" taborder="0" text="확인" left="36.00%" width="50" onclick="divData_btnSave_onclick" height="20" bottom="30"/>
              <Button id="btnCancel" taborder="1" text="취소" left="52.00%" width="50" height="20" onclick="divData_btnCancel_onclick" bottom="30"/>
              <Div id="ccfCD_SELFACNT" CodeFindName="DHX_CFSELFACNT" CDTextWidth="70" taborder="20" left="105" top="85" height="20" url="cmm::cmmCodeFind.xfdl" right="20"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

var context = "/";
if (nexacro.getEnvironmentVariable("evContextPath") != undefined) {
	context = nexacro.getEnvironmentVariable("evContextPath");
}

this.fileConfig = {
	host : this.gfnGetServerUrl(),
	downloadUrl : context + "file/downloadText.do",
	allowTypes : ["txt"],
	maxCount : 1,
	maxSize : "200MB",
	maxTotalSize : "200MB"
};
		
this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//

	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();

	this.fnGetNoCorp();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {

}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {

};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.cfCD_CORP = this.divData.form.cfCD_CORP;
	this.ccfCD_SELFACNT = this.divData.form.ccfCD_SELFACNT;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.cfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.cfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";
	
// 	this.ccfCD_SELFACNT.CodeFindName = "DHX_CFSELFACNT";
// 	this.ccfCD_SELFACNT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
// 	this.ccfCD_SELFACNT.AfterCDTextChanged = "fnAfterCDTextChanged";
	
	this.ccfCD_SELFACNT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";	

	this.dsList.setColumn(0, "CD_SELFACNT", this.UserInfo.CD_DEPT_SELFACNT);
	this.dsList.setColumn(0, "DS_SELFACNT", this.UserInfo.DS_DEPT_SELFACNT);
 	this.dsList.setColumn(0, "CD_CORP", this.AuthClient.CD_CORP);
 	this.dsList.setColumn(0, "DS_CORP", this.AuthClient.DS_CORP);
 	this.dsList.setColumn(0, "YR_TAX", this.gfnGetDate().substr(0,4));
	this.dsList.setColumn(0, "YR_PAY", this.gfnGetDate().substr(0,4));
	this.dsList.setColumn(0, "DT_ACCOUNT", this.gfnGetDate());
 	this.dsList.setColumn(0, "TY_INCOME_TYPE", "30");
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_DEPT_SELFACNT", "string");
	this.dsSelect.addColumn("YR_TAX", "string");
	this.dsSelect.addColumn("DT_ACCOUNT", "string");
	this.dsSelect.addColumn("TY_INCOME_TYPE", "string");
	this.dsSelect.addColumn("YR_PAY", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 
/************************************************************************
 * Validate
 ************************************************************************/

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
*/
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
	
		trace(this.dsText.saveXML());
		if (this.dsText.rowcount <= 2) {
			this.gfnAlert("생성할 자료가 존재하지 않습니다.");
			return;
		}
		else {
			this.fnFileDownload();
			
// 			var GUBUN = "";
// 			switch(this.dsList.getColumn(0, "TY_INCOME_TYPE")) {
// 				case "30":
// 					GUBUN = "F";
// 					break;
// 				case "40":
// 					GUBUN = "G";
// 					break;
// 				case "50":
// 					GUBUN = "B";
// 					break;
// 				default:
// 			}
// 		
// 			var fileManager = {};
// 			//텍스트로 변환할 DATASET..
// 			fileManager.DS_TEXT = this.dsText;	
// 			//미리보기 여부 true, false
// 			fileManager.IS_VISIBLE = false;
// 			//CELL & ROW 사이 구분자 및 이스케이프 시퀀스.. 예) 줄바꿈 : "\n", 수평탭 : "\t", 수직탭 : "\f" 등 특수문자 및 일반문자..
// 			fileManager.ES_CELL = "/";	
// 			fileManager.ES_ROW  = "\n";	
// 			//확인영역(TEXTAREA) 수정 가능 여부... true / false(default)
// 			fileManager.IS_READONLY  = true;
// 			//Download 시 기본 파일명 지정.. default : TEXT_FILE_DOWNLOAD
// 			fileManager.NM_FILE  = GUBUN + this.strSaupNo.substr(0, this.strSaupNo.length-3) + "." + this.strSaupNo.substr(this.strSaupNo.length-3, 3);
// 			//TEXT 적용 할 CELL INDEX 선택.. default : 전체, [] : 전체, [0,3,5] : 선택된 CELL
// 			fileManager.INX_CELL  = [];
// 				
// 			this.gfnTextManager(fileManager, "fnFileCallback");


		}
	}
	
	else if (svcID == "nocorp") {
		var nRow = this.dsNoCorp.findRow("CD_CORP", this.dsList.getColumn(0, "CD_CORP"));
		this.strSaupNo = this.dsNoCorp.getColumn(nRow, "NO_CORP");
		trace("nocorp 콜백=>" + this.strSaupNo);		
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if (id == "cfCD_CORP") {
		dsUserParam.setColumn(nrow, "ID_SABUN", this.AuthClient.ID_USER);
	}

	if (id == "ccfCD_SELFACNT") {	// 세무단위
		var cdCorp = this.cfCD_CORP.form.CDTextBox.value;
		if (this.gfnIsNull(cdCorp)) {
			this.cfCD_CORP.form.CDTextBox.setFocus();
			this.gfnAlert("법인코드를 먼저 선택하세요.");
			return false;
		}
		dsUserParam.setColumn(nrow, "CD_CORP", cdCorp);
	}

	return true;
}; 

this.fnAfterCDTextChanged = function(id, codeFindData) {
	if (id == "cfCD_CORP") {
		var arr = codeFindData;
		if(arr.length > 0) {
			this.strSaupNo = arr[0]["NO_CORP"];
		}
		// this.ccfCD_SELFACNT.form.fnCodeFindClear();
	}	
}

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
 this.dsList_oncolumnchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
};

// 저장 버튼 클릭
this.divData_btnSave_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if(!this.fnSaveValidate()) return;

	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "CD_DEPT_SELFACNT", this.dsList.getColumn(0, "CD_SELFACNT"));
	this.dsSelect.setColumn(0, "YR_TAX", this.dsList.getColumn(0, "YR_TAX"));
	this.dsSelect.setColumn(0, "DT_ACCOUNT", this.dsList.getColumn(0, "DT_ACCOUNT"));
	this.dsSelect.setColumn(0, "TY_INCOME_TYPE", this.dsList.getColumn(0, "TY_INCOME_TYPE"));
	this.dsSelect.setColumn(0, "YR_PAY", this.dsList.getColumn(0, "YR_PAY"));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsText=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};


// 취소 버튼 클릭
this.divData_btnCancel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	// this.close()가 작동하지 않았고, 
	// 부모의 callback 함수로 데이터를 넘겨주기 위해 작성되었습니다.
	this.getParentContext().close(false);
};

this.fnSaveValidate = function() {

	var strMsg = "";
	
	if(this.gfnIsNull(this.dsList.getColumn(0, "CD_CORP"))){
		strMsg += "법인코드는 반드시 입력 하셔야 합니다.\n";
	}
	if(this.gfnIsNull(this.dsList.getColumn(0, "YR_TAX"))) {
		strMsg += "귀속년도는 반드시 입력 하셔야 합니다.\n";
	}
	if(this.gfnIsNull(this.dsList.getColumn(0, "YR_PAY"))) {
		strMsg += "지급년도는 반드시 입력 하셔야 합니다.\n";
	}
	if(this.gfnIsNull(this.dsList.getColumn(0, "DT_ACCOUNT"))) {
		strMsg += "제출일자는 반드시 입력 하셔야 합니다.\n";
	}
	if(this.gfnIsNull(this.dsList.getColumn(0, "TY_INCOME_TYPE"))) {
		strMsg += "구분은 반드시 입력 하셔야 합니다.\n";
	}
	
	if(strMsg.length > 0) {
		this.gfnAlert(strMsg);
		return false;
	}

	return true;
}

this.fnGetNoCorp = function() {
	this.dsGetNoCorp = new Dataset();
	
	
	this.dsGetNoCorp.addColumn("ID_SABUN", "string");
	this.dsGetNoCorp.addColumn("TY_GUBUN", "string");
	this.dsGetNoCorp.addColumn("CN_ROW", "string");
	this.dsGetNoCorp.addColumn("VALUE", "string");
	this.dsGetNoCorp.addColumn("MIN_VALUE", "string");
	
	this.dsGetNoCorp.clearData();
	this.dsGetNoCorp.addRow();
	this.dsGetNoCorp.setColumn(0, "TY_GUBUN", "");
	this.dsGetNoCorp.setColumn(0, "CN_ROW", "");
	this.dsGetNoCorp.setColumn(0, "VALUE", this.dsList.getColumn(0, "CD_CORP"));
	this.dsGetNoCorp.setColumn(0, "MIN_VALUE", "");
	this.dsGetNoCorp.setColumn(0, "ID_SABUN", this.AuthClient.ID_USER);
	
	var strSvcId    = "nocorp";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "nocorp=dsGetNoCorp";
	var outData     = "dsNoCorp=nocorp0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
	
}

this.fnFileDownload = function () {
	if (this.dsText.rowcount <= 0) {
		return false;
	}
	
	var data="";
	for(var i=0;i<this.dsText.rowcount;i++){
		data = data + this.dsText.getColumn(i,"LIST");
		if(i == this.dsText.rowcount -1){
			;
		}else{
			data = data + "\n";
		}
	}
	//trace("data==>", data);

	var GUBUN = "";
	switch(this.dsList.getColumn(0, "TY_INCOME_TYPE")) {
		case "30":
			GUBUN = "F";
			break;
		case "40":
			GUBUN = "G";
			break;
		case "50":
			GUBUN = "B";
			break;
		default:
	}
	
	var sFilename = GUBUN + this.strSaupNo.substr(0, this.strSaupNo.length-3) + "." + this.strSaupNo.substr(this.strSaupNo.length-3, 3);
	var sFilecont = data;
	var encodeFileName = encodeURIComponent(sFilename);
		
	var surl = this.fileConfig.host+ this.fileConfig.downloadUrl; // + encodeFileName;
	this.FileDownTransfer00.set_url(surl);
	this.FileDownTransfer00.setPostData("fileCont", sFilecont);
	this.FileDownTransfer00.setPostData("fileName", encodeFileName);
	if( system.navigatorname =="nexacro"){
		this.FileDownTransfer00.set_downloadfilename(sFilename);
	}
	this.FileDownTransfer00.download();
}
]]></Script>
    <Objects>
      <Dataset id="dsList" oncolumnchanged="dsList_oncolumnchanged">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="DS_CORP" type="STRING" size="256"/>
          <Column id="NO_CORP" type="STRING" size="256"/>
          <Column id="YR_TAX" type="STRING" size="256"/>
          <Column id="YR_PAY" type="STRING" size="256"/>
          <Column id="DT_ACCOUNT" type="STRING" size="256"/>
          <Column id="TY_INCOME_TYPE" type="STRING" size="256"/>
          <Column id="CD_SELFACNT" type="STRING" size="256"/>
          <Column id="DS_SELFACNT" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DHVPR_ORIGINTAX_SINGO_CREATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">nocorp</Col>
            <Col id="SP">DHXPR_CORP_CODEFIND</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_INCOME_TYPE">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">30</Col>
            <Col id="DS_CODE">사업소득</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">40</Col>
            <Col id="DS_CODE">기타소득</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">50</Col>
            <Col id="DS_CODE">이자배당소득</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">90</Col>
            <Col id="DS_CODE">비거주자 사업.기타소득</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsText"/>
      <Dataset id="dsNoCorp"/>
      <FileDownTransfer id="FileDownTransfer00"/>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divData.form.cfCD_CORP.form.CDTextBox" propid="value" datasetid="dsList" columnid="CD_CORP"/>
      <BindItem id="item1" compid="divData.form.cfCD_CORP.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_CORP"/>
      <BindItem id="item2" compid="divData.form.tclYR_TAX.form.TextBox" propid="value" datasetid="dsList" columnid="YR_TAX"/>
      <BindItem id="item3" compid="divData.form.tclYR_PAY.form.TextBox" propid="value" datasetid="dsList" columnid="YR_PAY"/>
      <BindItem id="item4" compid="divData.form.tclDT_ACCOUNT" propid="value" datasetid="dsList" columnid="DT_ACCOUNT"/>
      <BindItem id="item5" compid="divData.form.cboTY_INCOME_TYPE" propid="value" datasetid="dsList" columnid="TY_INCOME_TYPE"/>
      <BindItem id="item6" compid="divData.form.ccfCD_SELFACNT.form.CDTextBox" propid="value" datasetid="dsList" columnid="CD_SELFACNT"/>
      <BindItem id="item7" compid="divData.form.ccfCD_SELFACNT.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_SELFACNT"/>
    </Bind>
  </Form>
</FDL>
