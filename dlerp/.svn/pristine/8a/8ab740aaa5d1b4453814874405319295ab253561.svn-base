<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="전표승인" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divData" taborder="0" left="0" top="130" bottom="0" right="0" cssclass="div_DATA_Bg" ondragmove="divData_ondragmove">
          <Layouts>
            <Layout>
              <Div id="divSplitter" taborder="1" left="0" top="50%" width="100%" height="5" cssclass="div_Splitter" cursor="ns-resize" ondrag="divData_divSplitter_ondrag"/>
              <Div id="divDataTop" taborder="0" left="0" top="0" bottom="divSplitter:5" right="0">
                <Layouts>
                  <Layout>
                    <Grid id="objGrid" taborder="0" left="0" top="28" bottom="5" right="0" oncelldblclick="divData_divDataTop_objGrid_oncelldblclick"/>
                  </Layout>
                </Layouts>
              </Div>
              <Div id="divDataBottom" taborder="0" left="0" top="divSplitter:5" bottom="0" right="0">
                <Layouts>
                  <Layout>
                    <Grid id="objGridSub" taborder="0" left="0" top="3" bottom="0" right="0"/>
                    <Div id="divTotal" taborder="1" left="0" right="0" height="32" bottom="8">
                      <Layouts>
                        <Layout>
                          <Static id="sta03" taborder="0" left="0" top="2" height="30" cssclass="sta_WF_tablebg" right="0" visible="false"/>
                          <MaskEdit id="mskSUM_CRDR01" taborder="8" left="297" top="7" width="75" height="20" enable="false" format="#,###" visible="false"/>
                          <Static id="sta01" taborder="10" text="승인합계" left="mskSUM_CRDR01:21" top="7" width="60" height="20" visible="false"/>
                          <MaskEdit id="mskSUM_CRDR00" taborder="7" left="sta01:-6" top="7" width="145" height="20" enable="false" format="#,###" visible="false"/>
                          <Static id="sta04" taborder="6" text="미승인건수" left="mskSUM_CRDR00:21" top="7" width="60" height="20" visible="false"/>
                          <MaskEdit id="mskAM_DR" taborder="5" left="sta04:14" top="7" width="75" height="20" limitbymask="both" readonly="true" format="#,###" visible="false"/>
                          <Static id="sta05" taborder="4" text="미승인합계" left="mskAM_DR:21" top="7" width="60" height="20" visible="false"/>
                          <MaskEdit id="mskAM_CR" taborder="3" left="sta05:14" top="7" width="115" height="20" readonly="true" limitbymask="both" format="#,###" visible="false"/>
                          <Static id="sta06" taborder="2" text="차대변합계" left="mskAM_CR:21" top="7" width="60" height="20" visible="false"/>
                          <MaskEdit id="mskCOUNT" taborder="1" left="sta06:14" top="7" width="115" height="20" format="#,###" limitbymask="both" readonly="true" visible="false"/>
                          <Static id="sta00" taborder="9" text="승인건수" left="233" top="7" width="60" height="20" visible="false"/>
                        </Layout>
                      </Layouts>
                    </Div>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divSearch" taborder="1" left="divData:0.0" top="10.0" height="78.0" right="0" cssclass="div_SEARCH_Bg" text="">
          <Layouts>
            <Layout>
              <Static id="staCD_CORP" taborder="0" text="법인코드" left="0.0" top="10.0" width="118.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_CORP" CodeFindName="DHX_CFCORP" CDTextWidth="50" taborder="1" left="staCD_CORP:0.0" top="10.0" width="300" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staDT_REQ" taborder="19" text="자동전표코드" left="0.0" top="staCD_CORP:10.0" width="118.0" height="24.0" textDecoration="none" cssclass="sta_WF_SchLabel"/>
              <Calendar id="ctclDT_REQ_FROM" taborder="5" left="staDT_REQ:0.0" top="staCD_CORP:10.0" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" width="105"/>
              <Static id="staDT_REQ00" taborder="20" text="~" left="ctclDT_REQ_FROM:0.0" top="staCD_CORP:10.0" width="30.0" height="24.0" cssclass="sta_WF_AC"/>
              <Calendar id="ctclDT_REQ_TO" taborder="6" left="staDT_REQ00:0.0" top="staCD_CORP:10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true"/>
              <Static id="staCD_SYSTEM" taborder="21" text="전표구분" left="ctclDT_REQ_TO:0.0" top="staCD_CORP:10.0" width="118.0" height="24.0" textDecoration="none" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_DEPT_BH" CodeFindName="DHX_CFACNTUNIT2" CDTextWidth="70" taborder="2" left="0.0" top="10.0" width="280" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staCD_VENDOR" taborder="22" text="발행자" left="0.0" top="staCD_CORP:10.0" width="118.0" height="24.0" textAlign="center" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_VENDOR" CodeFindName="DHX_CFIDSABUN" CDTextWidth="70" taborder="7" left="staCD_VENDOR:0.0" top="staCD_CORP:10.0" width="280" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staACC_CD" taborder="23" text="계정코드" left="ccfCD_VENDOR:0.0" top="staCD_CORP:10.0" width="118.0" height="24.0" textAlign="center" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfACC_CD" CodeFindName="DHX_CFACNT_SLIP_AND_TRIAL" CDTextWidth="70" taborder="10" left="staACC_CD:0.0" top="staCD_CORP:10.0" width="280" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Div id="ccfCD_VENDOR01" CodeFindName="DHX_CFAUTOSLIP" CDTextWidth="70" taborder="16" left="ccfACC_CD:0.0" top="staCD_CORP:10.0" width="280" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Combo id="ccboCD_SYSTEM" taborder="18" left="ccfCD_VENDOR01:0.0" top="staCD_CORP:10.0" width="83" height="24.0" innerdataset="dsCD_SYSTEM" datacolumn="VALUE" codecolumn="CODE" value="" onitemchanged="fnSearchInit" text="전체" index="0" visible="false"/>
              <Combo id="ccboCD_SYSTEM01" taborder="12" left="ccboCD_SYSTEM:0.0" top="staCD_CORP:10.0" width="73" height="24.0" innerdataset="dsObj2" datacolumn="VALUE" codecolumn="CODE" value="" onitemchanged="fnSearchInit" text="전체" index="0"/>
              <Div id="ccfACC_CD00" CodeFindName="DHX_CFALLVENDOR_CODEFIND" CDTextWidth="70" taborder="13" left="ccboCD_SYSTEM01:0.0" top="staCD_CORP:10.0" width="300" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staCD_SYSTEM00" taborder="24" text="승인여부" left="ccfACC_CD00:0.0" top="staCD_CORP:10.0" width="118.0" height="24.0" textDecoration="none" cssclass="sta_WF_SchLabel"/>
              <Radio id="ccrdTY_GUBUN" taborder="8" left="staCD_SYSTEM00:0.0" top="staCD_CORP:10.0" width="230" height="24.0" innerdataset="dsTY_GUBUN" codecolumn="CODE" datacolumn="VALUE" columncount="3"/>
              <Static id="staACC_CD00" taborder="25" text="전표번호" left="ccrdTY_GUBUN:0.0" top="staCD_CORP:10.0" width="118.0" height="24.0" textAlign="center" cssclass="sta_WF_SchLabel"/>
              <Combo id="ccboTY_PAY" taborder="15" left="staACC_CD00:0.0" top="staCD_CORP:10.0" width="70" height="24.0" innerdataset="dsTY_PAY" datacolumn="VALUE" codecolumn="CODE" value="" text="전체" index="0" onitemchanged="divSearch_ccboTY_PAY_onitemchanged"/>
              <Radio id="ccrdTY_GUBUN01" taborder="11" left="ccboTY_PAY:0.0" top="staCD_CORP:10.0" width="304" height="24.0" columncount="4" direction="horizontal" innerdataset="dsTY_GUBUN1" codecolumn="CODE" datacolumn="VALUE"/>
              <Static id="staACC_CD01" taborder="26" text="적요" top="staCD_CORP:10.0" width="118.0" height="24.0" left="ccrdTY_GUBUN01:0.0" cssclass="sta_WF_SchLabel"/>
              <Radio id="ccrdTY_GUBUN02" taborder="4" left="staACC_CD01:0.0" top="staCD_CORP:10.0" width="140" height="24.0" innerdataset="dsTY_GUBUN2" codecolumn="CODE" datacolumn="VALUE" columncount="2"/>
              <Edit id="txtCD_TRADE" taborder="14" left="staACC_CD00:0.0" top="staCD_CORP:10.0" width="280" height="24.0"/>
              <Edit id="txtDS_REM" taborder="17" left="staACC_CD01:0.0" top="staCD_CORP:10.0" width="300" height="24.0"/>
              <Static id="staACC_CD02" taborder="27" text="계정코드" left="txtDS_REM:0.0" top="staCD_CORP:10.0" width="118.0" height="24.0" textAlign="center" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfACC_CD01" CodeFindName="DHX_CFACNT_SLIP_AND_TRIAL" CDTextWidth="70" taborder="9" left="staACC_CD02:0.0" top="staCD_CORP:10.0" width="300" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Div id="ccfCD_DEPT_BE" CodeFindName="DHX_CFACNTUNIT" CDTextWidth="70" taborder="3" left="0.0" top="10.0" width="280" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staCD_DEPT_BH" taborder="28" text="발행부서" left="ccfCD_DEPT_BE:0.0" top="10.0" width="118.0" height="24.0" textAlign="center" cssclass="sta_WF_SchLabel"/>
              <Static id="staCD_DEPT_BE" taborder="29" text="귀속부서" left="staCD_DEPT_BH:0.0" top="10.0" width="118.0" height="24.0" textAlign="center" cssclass="sta_WF_SchLabel"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	this.ccfCD_VENDOR01.form.set_readonly(true);
	
	this.ccfCD_CORP.form.CDTextBox.setFocus();
	
	if (nexacro.toNumber(this.FormInfo.GR_SEARCH) >= 7) {
		this.ccfCD_DEPT_BH.form.CDTextBox.set_value(this.AuthClient.CD_DEPT);	
		this.ccfCD_DEPT_BH.form.DSTextBox.set_value(this.AuthClient.DS_DEPT); 
		this.staCD_DEPT_BH.set_textDecoration("underline");
	}
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 ************************************************************************/
this.fnSetButton = function() {
 
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnApprove     = this.gfnFormButtonAdd("Approve"   , "fnApprove");			//전표결제
	this.btnSchApprove  = this.gfnFormButtonAdd("SchApprove", "fnSchApprove");		//결제조회
	this.btnSlipDelete  = this.gfnFormButtonAdd("SlipDelete", "fnSlipDelete");		//전표삭제
	this.btnSlipDetail  = this.gfnFormButtonAdd("SlipDetail", "fnSlipDetail");		//전표상세조회
	
	this.btnApprove.set_enable(false);
	this.btnSchApprove.set_enable(false);
	this.btnSlipDelete.set_enable(false);
	this.btnSlipDetail.set_enable(false);
	
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.dxGrid = this.divData.form.divDataTop.form.objGrid;
	this.dxGridSub = this.divData.form.divDataBottom.form.objGridSub;
		
	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;
	this.ccfCD_DEPT_BH = this.divSearch.form.ccfCD_DEPT_BH;
	this.ccfCD_DEPT_BE = this.divSearch.form.ccfCD_DEPT_BE;
	this.ccfCD_VENDOR = this.divSearch.form.ccfCD_VENDOR;
	this.ccfCD_VENDOR01 = this.divSearch.form.ccfCD_VENDOR01;
	this.ccfACC_CD = this.divSearch.form.ccfACC_CD;
	this.ccfACC_CD00 = this.divSearch.form.ccfACC_CD00;
	this.ccfACC_CD01 = this.divSearch.form.ccfACC_CD01;
	
	this.ccboTY_PAY = this.divSearch.form.ccboTY_PAY;
	this.ccboCD_SYSTEM = this.divSearch.form.ccboCD_SYSTEM;
	this.ccboCD_SYSTEM01 = this.divSearch.form.ccboCD_SYSTEM01;
	
	this.ccrdTY_GUBUN = this.divSearch.form.ccrdTY_GUBUN;
	this.ccrdTY_GUBUN01 = this.divSearch.form.ccrdTY_GUBUN01;
	this.ccrdTY_GUBUN02 = this.divSearch.form.ccrdTY_GUBUN02;
	
	this.ctclDT_REQ_FROM = this.divSearch.form.ctclDT_REQ_FROM;
	this.ctclDT_REQ_TO = this.divSearch.form.ctclDT_REQ_TO;
	
	this.txtCD_TRADE = this.divSearch.form.txtCD_TRADE;
	this.txtDS_REM = this.divSearch.form.txtDS_REM;
	
	this.staCD_DEPT_BH = this.divSearch.form.staCD_DEPT_BH;
	
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {	
	this.gfnGridInit(this.dxGrid, this.dsList, "DH", "DHA_SLIPAPPRREVER");		
	this.gfnGridInit(this.dxGridSub, this.dsListSub, "DH", "DHA_SLIPDETAIL");

	this.ccboTY_PAY.set_index(0);
	//this.ccboCD_SYSTEM.set_index(0);
	this.ccboCD_SYSTEM01.set_index(0);
	
	this.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);
	this.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP);
	this.ctclDT_REQ_FROM.set_value(this.gfnGetFirstDate(this.gfnGetDate()));
	this.ctclDT_REQ_TO.set_value(this.gfnGetDate());
	this.ccfCD_DEPT_BH.form.CDTextBox.set_value(this.AuthClient.CD_DEPT);
	this.ccfCD_DEPT_BH.form.DSTextBox.set_value(this.AuthClient.DS_DEPT);
	
	this.ccrdTY_GUBUN.set_index(0);
	this.ccrdTY_GUBUN01.set_index(0);
	this.ccrdTY_GUBUN02.set_index(0);
	
	this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_DEPT_BH.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_DEPT_BE.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_VENDOR.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfACC_CD.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfACC_CD00.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfACC_CD01.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_VENDOR01.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	this.ccfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged"
	this.ccfCD_DEPT_BH.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.ccfCD_DEPT_BE.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.ccfCD_VENDOR.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.ccfACC_CD.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.ccfACC_CD00.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.ccfACC_CD01.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.ccfCD_VENDOR01.AfterCDTextChanged = "fnAfterCDTextChanged";
	
	this.dxGrid.set_selecttype("cell");	
	this.dxGrid.addEventHandler("onselectchanged", this.fnGrid_RowCellChanged, this);
	// 셀 변경 후 이벤트
	this.dxGrid.AfterEdit = "fnGrid_AfterEdit";
	// 전체체크박스 체크/해제 이벤트
	this.dxGrid.AfterAllCheck = "fnGrid_AfterAllCheck";
	/*this.dsList.addEventHandler("canrowposchange", this.dsList_canrowposchange, this);*/
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("TY_DEPT", "string");
	this.dsSelect.addColumn("CD_DEPT", "string");
	this.dsSelect.addColumn("CD_DEPT2", "string");
	this.dsSelect.addColumn("YN_APPR", "string");
	this.dsSelect.addColumn("YN_PAPER", "string");
	this.dsSelect.addColumn("TY_DATE", "string");
	this.dsSelect.addColumn("DT_DATE_FR", "string");
	this.dsSelect.addColumn("DT_DATE_TO", "string");
	this.dsSelect.addColumn("CD_AUTOSLIP", "string");
	this.dsSelect.addColumn("TY_AUTOSLIP", "string");
	this.dsSelect.addColumn("CD_TRADE", "string");
	this.dsSelect.addColumn("CD_TRADE_APPR", "string");
	this.dsSelect.addColumn("CD_ACCOUNT", "string");
	this.dsSelect.addColumn("CD_SEMOK", "string");
	this.dsSelect.addColumn("CD_TOACCOUNT", "string");
	this.dsSelect.addColumn("CD_TOSEMOK", "string");
	this.dsSelect.addColumn("CD_VENDOR", "string");
	this.dsSelect.addColumn("TY_VENDOR", "string");	
	this.dsSelect.addColumn("TY_COMBO", "string");
	this.dsSelect.addColumn("DS_REM", "string");
	this.dsSelect.addColumn("ID_SABUN", "string");
	
	this.dsSelectSub = new Dataset();
	this.dsSelectSub.addColumn("CD_TRADE", "string");
	
	this.dsInsert = new Dataset();
	this.dsInsert.addColumn("IN_CD_TRADE", "string");
	this.dsInsert.addColumn("IN_TY_SLIP", "string");
	this.dsInsert.addColumn("ID_APPR", "string");
	this.dsInsert.addColumn("ID_TRANS", "string");
	this.dsInsert.addColumn("CD_TRADE", "string");
	
	this.dsSelectDtReq = new Dataset();
	this.dsSelectDtReq.addColumn("CD_TRADE", "string");
}

/************************************************************************
 * 버튼 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {

	if (!this.fnSelectValidate()) return false;
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0,"CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
	//this.dsSelect.setColumn(0,"TY_DEPT", this.ccboCD_SYSTEM.value);
	this.dsSelect.setColumn(0,"CD_DEPT", this.ccfCD_DEPT_BE.form.CDTextBox.text);
	this.dsSelect.setColumn(0,"CD_DEPT2", this.ccfCD_DEPT_BH.form.CDTextBox.text);
	this.dsSelect.setColumn(0,"YN_APPR", this.ccrdTY_GUBUN01.value);
	/*this.dsSelect.setColumn(0,"YN_PAPER", this.ccrdTY_GUBUN.value);*/
	this.dsSelect.setColumn(0,"TY_DATE", this.ccrdTY_GUBUN02.value);
	this.dsSelect.setColumn(0,"DT_DATE_FR", this.ctclDT_REQ_FROM.value);
	this.dsSelect.setColumn(0,"DT_DATE_TO", this.ctclDT_REQ_TO.value);
	this.dsSelect.setColumn(0,"CD_AUTOSLIP", this.ccboTY_PAY.value == "%" ? this.ccfCD_VENDOR01.form.CDTextBox.text :  (this.ccfCD_VENDOR01.form.CDTextBox.text == "" ? this.ccboTY_PAY.value : this.ccfCD_VENDOR01.form.CDTextBox.text));
	this.dsSelect.setColumn(0,"TY_AUTOSLIP", this.ccrdTY_GUBUN.value);
	this.dsSelect.setColumn(0,"CD_TRADE", nexacro.replaceAll(this.gfnTrim(this.gfnNvl(this.txtCD_TRADE.value,"")), "-",""));
	/*this.dsSelect.setColumn(0,"CD_TRADE_APPR",this.txtCD_TRADE.value);*/
	this.dsSelect.setColumn(0,"CD_ACCOUNT", this.ccfACC_CD01.form.CDTextBox.text);
	/*this.dsSelect.setColumn(0,"CD_SEMOK", "");*/
	this.dsSelect.setColumn(0,"CD_TOACCOUNT", this.ccfACC_CD.form.CDTextBox.text);
	/*this.dsSelect.setColumn(0,"CD_TOSEMOK", "");*/
	this.dsSelect.setColumn(0,"CD_VENDOR", this.ccfACC_CD00.form.CDTextBox.text);
	/*this.dsSelect.setColumn(0,"TY_VENDOR", this.ccboCD_SYSTEM01.value);	*/
	this.dsSelect.setColumn(0,"TY_COMBO", this.dsSearch.getColumn(0, "TY_COMBO"));
	this.dsSelect.setColumn(0,"DS_REM", this.txtDS_REM.value);
	this.dsSelect.setColumn(0,"ID_SABUN", this.ccfCD_VENDOR.form.CDTextBox.text);
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0"; 
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

this.fnSelectSub = function() {
	this.dsListSub.clearData();
	
	if (this.dxGrid.rowcount == 0 || this.dxGrid.currentrow < 0) return false;
	
	if (!this.gfnGridIsRow(this.dxGrid)) return;

	var cd_trade = this.dsList.getColumn(this.dsList.rowposition, "CD_TRADE").replace(/-/gi, "");
	if (this.gfnIsNull(cd_trade)) {
		return false;
	}
	
	this.gfnGridBeforeSelect(this.dxGridSub);
	
	this.dsSelectSub.clearData();
	this.dsSelectSub.addRow();
	
	this.dsSelectSub.setColumn(0, "CD_TRADE", cd_trade);
	
	var strSvcId    = "detail";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "d_select=dsSelectSub";
	var outData     = "dsListSub=d_select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
}

/*
 *	삭제 버튼
 */ 
this.fnDel = function() {
}

/*
 *	저장 버튼
 */ 
this.fnSave = function() {
}

/*
 *	엑셀 버튼
 */ 
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}
 
/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;
	if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.ccfCD_CORP.form.CDTextBox.setFocus();
		}
		this.gfnAlert("법인코드를 입력하세요.", "fnVaidateCallback");
	}
	if (this.gfnIsNull(this.ctclDT_REQ_FROM.value)||this.gfnIsNull(this.ctclDT_REQ_TO.value)) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			if(this.gfnIsNull(this.ctclDT_REQ_FROM.value)){
			this.ctclDT_REQ_FROM.setFocus();
			} else if(this.gfnIsNull(this.ctclDT_REQ_FROM.value)) {
			this.ctclDT_REQ_TO.setFocus();
			}
		}
		this.gfnAlert("발의 일자를 입력하세요!", "fnVaidateCallback");
	} 
	
	if (nexacro.toNumber(this.FormInfo.GR_SEARCH) >= 7) {
		if (this.gfnIsNull(this.ccfCD_DEPT_BH.form.CDTextBox.value)) {
			validate = false;
			// Alert후 실행할 처리
			this.fnVaidateCallback = function() {
				this.ccfCD_DEPT_BH.form.CDTextBox.setFocus();
			}
			this.gfnAlert("발행부서를 입력하세요!", "fnVaidateCallback");
		}
	}
	
	return validate;
};
/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
		/*this.gfnGridAfterSelect(this.dxGridSub);*/	
		if (this.dsList.rowcount > 0) {
			this.btnSlipDetail.set_enable(true);
		}
		
		this.btnApprove.set_enable(false);
		this.btnSchApprove.set_enable(false);		
	}
	else if (svcID == "detail") {
		var cdApp = this.dsList.getColumn(this.dsList.rowposition, "CD_APP");
	
		trace("### cdApp :: "+cdApp);
		
		if(!this.gfnIsNull(cdApp) && (cdApp == "1" || cdApp == "2")){		
			this.btnApprove.set_enable(false);
			this.btnSchApprove.set_enable(true);
		} else {
			this.btnApprove.set_enable(true);
			this.btnSchApprove.set_enable(false);
		}
	
	
		if (this.dsList.rowcount < 1) {
			this.dsListSub.clearData();
		}
		this.gfnGridAfterSelect(this.dxGridSub);	
	}
	else if (svcID == "appr") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	else if(svcID == "cancel") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	else if(svcID == "delete") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}	
	else if(svcID == "selectDtReq") {	
		if (errorCode == 0) {
			
			var dtReq = "";
			if(this.dsDtReq.rowcount > 0){
				dtReq = this.dsDtReq.getColumn(0, "DT_REQ");
			}
			
			var cdApp = "";
			if(this.dsCdApp.rowcount > 0){
				cdApp = this.dsCdApp.getColumn(0, "CD_APP");
			}
			
			if(cdApp == "1" || cdApp == "2"){
				this.gfnAlert("이미 결재상신 중 입니다.");
				return;
			}	
			
			var rowPos = this.dsList.rowposition;
			var dtAccount = this.dsList.getColumn(rowPos, "DT_ACCOUNT");
			dtAccount = dtAccount.substr(0,4)+"-" + dtAccount.substr(4,2) + "-" + dtAccount.substr(6,2);

			var txtSubject = this.gfnNvl(this.dsList.getColumn(rowPos, "DS_CORP"),"");										//법인명
			txtSubject += " / "+ (this.gfnIsNull(this.dsList.getColumn(rowPos, "CD_AUTOSLIP")) ? "일반전표" : this.dsList.getColumn(rowPos, "CD_AUTOSLIP"));
			txtSubject += " / "+ this.gfnNvl(this.dsList.getColumn(rowPos, "DS_HNAME"),"");									//작성자
			txtSubject += " / "+ nexacro.replaceAll(this.gfnNvl(this.dsList.getColumn(rowPos, "DS_DEPT_BH"),""),"&","");	//발행부서
			txtSubject += " / "+ this.gfnNvl(dtAccount,"");		                                    						//회계일자
			txtSubject += " / 자금 : "+ this.gfnNvl(dtReq,"");																//자금요청일
			txtSubject += " / "+ nexacro.replaceAll(this.gfnNvl(this.dsList.getColumn(rowPos, "REM"),""),"&","");			//대표적요
			txtSubject += " / "+ this.gfnAppendComma(nexacro.toNumber(this.dsList.getColumn(rowPos, "AM_DRSUM"),0));		//금액
			
			var url = this.gfnGetConfig("DZ" , "GW_APROVAL_URL");
			url = url+"approval/legacy/goFormLink.do?mode=DRAFT&legacyFormID=WF_FORM_ERP_SLIP";
			url += "&subject="+encodeURI(txtSubject);
			url += "&dataType=proc";
			url += "&empno="+this.AuthClient.ID_USER;
			url += "&P_DS_KEY1="+nexacro.replaceAll(this.gfnNvl(this.dsList.getColumn(rowPos , "CD_TRADE"),""),"-","");  // 전표번호
			url += "&P_DS_KEY2=&P_DS_KEY3=&P_DS_KEY4=&P_DS_KEY5="; 
			
			trace("### 전표결재 url :: "+url);

			window.open(url, "_blank", "width=790,height=1000,menubar=no,scrollbars=no,resizable=no,status=no");
		}else{
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow)  {

	if (id == "ccfCD_CORP") {
		dsUserParam.setColumn(nrow, "ID_SABUN", this.AuthClient.ID_USER);
	}

	if (id == "ccfCD_DEPT_BH") {
		if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
			// Alert후 실행할 처리
			this.fnVaidateCallback = function() {
				this.ccfCD_CORP.form.CDTextBox.setFocus();
			}
			this.gfnAlert("법인코드를 입력하세요!", "fnVaidateCallback");
			return false;
		}
		
		dsUserParam.setColumn(nrow, "CD_DEPT_UPPER", "0000000");
		dsUserParam.setColumn(nrow, "YN_SLIPACCEPT", "");
		dsUserParam.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.text);
		dsUserParam.setColumn(nrow, "YN_USE", "Y");
		dsUserParam.setColumn(nrow, "GR_DEPT_ACNT", "");
		dsUserParam.setColumn(nrow, "ID_USER"	    , this.AuthClient.ID_USER);
		dsUserParam.setColumn(nrow, "GR_SEARCH"	    , this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "CD_DEPT"	    , this.AuthClient.CD_DEPT);
	}
	if (id == "ccfCD_DEPT_BE") {
		if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
			// Alert후 실행할 처리
			this.fnVaidateCallback = function() {
				this.ccfCD_CORP.form.CDTextBox.setFocus();
			}
			this.gfnAlert("법인코드를 입력하세요!", "fnVaidateCallback");
			return false;
		}
		
		dsUserParam.setColumn(nrow, "CD_DEPT_UPPER", "0000000");
		dsUserParam.setColumn(nrow, "YN_SLIPACCEPT", "");
		dsUserParam.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.text);
		dsUserParam.setColumn(nrow, "YN_USE", "Y");
		dsUserParam.setColumn(nrow, "GR_DEPT_ACNT", "");
	}
	if (id == "ccfACC_CD") {
		dsUserParam.setColumn(nrow, "TY_VENDOR" , "X");		//X   CD_VENDOR
		dsUserParam.setColumn(nrow, "YN_RELATED", "");		//X   CD_VENDOR
	}
	if (id == "ccfACC_CD00") {
		if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
			// Alert후 실행할 처리
			this.fnVaidateCallback = function() {
				this.ccfCD_CORP.form.CDTextBox.setFocus();
			}
			this.gfnAlert("법인코드를 입력하세요!", "fnVaidateCallback");
			return false;
		}
		
		dsUserParam.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.text);
	}
	if (id == "ccfACC_CD01") {
		dsUserParam.setColumn(nrow, "TY_VENDOR" , "X");		//X   CD_VENDOR
		dsUserParam.setColumn(nrow, "YN_RELATED", "");		//X   CD_VENDOR
	}
	if (id == "ccfCD_VENDOR01") {
		dsUserParam.setColumn(nrow, "TY_AUTOSLIP", this.ccboTY_PAY.value); 
	}
	if (id == "ccfCD_VENDOR") {
// 		if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
// 			// Alert후 실행할 처리
// 			this.fnVaidateCallback = function() {
// 				this.ccfCD_CORP.form.CDTextBox.setFocus();
// 			}
// 			this.gfnAlert("법인코드를 입력하세요!", "fnVaidateCallback");
// 			return false;
// 		}
		
		dsUserParam.setColumn(nrow, "YN_OFFICER", "01");
		//dsUserParam.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.text);
	}
	return true;
}


this.fnAfterCDTextChanged = function(id, codeFindData) {
// 	if(!this.gfnIsNull(this.ccfSite.form.CDTextBox.value)) {
// 		this.objApp.DW_SPACE01 = this.ccfSite.form.CDTextBox.value;
// 		this.objApp.DW_SPACE02 = this.ccfSite.form.DSTextBox.value;
// 	}
	if(id == "ccfCD_CORP") {
		this.ccfCD_DEPT_BH.form.fnCodeFindClear();
		this.ccfCD_DEPT_BE.form.fnCodeFindClear();
		this.ccfACC_CD00.form.fnCodeFindClear();
		this.ccfCD_VENDOR.form.fnCodeFindClear();
	}
	this.fnSearchInit();
	
}
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 this.fnGrid_RowCellChanged = function(obj:nexacro.Grid,e:nexacro.GridSelectEventInfo)
{	
	if ((obj.oldrow > -1 && obj.oldrow == e.row)
		|| (obj.oldrow == -1 && e.oldrow != e.row)) {
		this.FormBtns.SubSelect.click();
		obj.oldrow = -1;
	}

};

this.fnGrid_AfterEdit = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo) {
	/*if (!this.gfnGridIsRow(this.dxGrid)) return;*/
	var appr = this.ccrdTY_GUBUN01.value;
	
	var arrChk = [];
	var grdYNAPPRsY = [];
	var grdYNAPPRsN = [];
	var grdYNAPPRs = [];
	var grdYNCANCEL = [];
	
	for(var i = 0; i < this.dsList.rowcount; i++) {
		if(this.dsList.getColumn(i, "chk") == 1) {
			arrChk.push(i);
			var YN_APPR = this.dsList.getColumn(i,"YN_APPR");
			if(YN_APPR == "승인") {
				grdYNAPPRsY.push(YN_APPR);
			} else if(YN_APPR == "미승인") {
				grdYNAPPRsN.push(YN_APPR);
			}
			
			var YN_CANCEL = this.dsList.getColumn(i,"YN_CANCEL");
			if(YN_CANCEL == "Y"){
				grdYNCANCEL.push(YN_CANCEL);
			}
		}
	}
	
	if(e.columnid == "chk") {
	   if(e.oldvalue != e.newvalue) {
		trace("$$$ arrChk.length :: "+arrChk.length);
		trace("$$$ grdYNAPPRsY.length :: "+grdYNAPPRsY.length);
		trace("$$$ grdYNAPPRsN.length :: "+grdYNAPPRsN.length);
		trace("$$$ grdYNCANCEL.length :: "+grdYNCANCEL.length);
	   
		if(arrChk.length < 1 || (grdYNAPPRsY.length > 0 && grdYNAPPRsN.length > 0)) {
// 				this.btnSlipAppr.set_enable(false);
// 				this.btnSlipCancel.set_enable(false);
				this.btnSlipDelete.set_enable(false);
		} else if(grdYNAPPRsN.length > 0 && grdYNAPPRsY.length < 1) {
// 				this.btnSlipAppr.set_enable(true);
// 				this.btnSlipCancel.set_enable(false);
				this.btnSlipDelete.set_enable(true);
		} else if(grdYNAPPRsY.length > 0 &&  grdYNAPPRsN.length < 1) {
			trace("$$$ 들어옴 ");
		
			if(grdYNCANCEL.length > 0){		
// 				this.btnSlipAppr.set_enable(false);
// 				this.btnSlipCancel.set_enable(false);
				this.btnSlipDelete.set_enable(true);
			}else{
// 				this.btnSlipAppr.set_enable(false);
// 				this.btnSlipCancel.set_enable(true);
				this.btnSlipDelete.set_enable(false);
			}
		}
		
		if(e.oldvalue == 1) return false;
		if(grdYNAPPRsN.length >= 1 && grdYNAPPRsY.length < 1) {
		
// 			this.btnSlipAppr.set_enable(true);
// 			this.btnSlipCancel.set_enable(false);
			this.btnSlipDelete.set_enable(true);
		}
		else if(grdYNAPPRsY.length >= 1 && grdYNAPPRsN.length < 1) {
			if(grdYNCANCEL.length > 0){
// 				this.btnSlipAppr.set_enable(false);
// 				this.btnSlipCancel.set_enable(false);
				this.btnSlipDelete.set_enable(true);
			}else{
// 				this.btnSlipAppr.set_enable(false);
// 				this.btnSlipCancel.set_enable(true);
				this.btnSlipDelete.set_enable(false);
			}
		} 
		else {
// 			if(arrChk.length > 1 && this.dsList.getColumn(e.row, "chk") == 1 && this.dsList.getColumn(e.row,"YN_APPR")=="미승인" && grdYNAPPRsN.length == 1) {
// 				this.gfnAlert("동일한 승인구분으로 선택하셔야 합니다.");
// 				this.dsList.setColumn(e.row, "chk", 0);
// 				this.btnSlipAppr.set_enable(false);
// 				this.btnSlipCancel.set_enable(true);
// 				this.btnSlipDelete.set_enable(false);
// 			}
// 			else if(arrChk.length > 1 && this.dsList.getColumn(e.row, "chk") == 1 && this.dsList.getColumn(e.row,"YN_APPR")=="승인" && grdYNAPPRsY.length == 1) {
// 				this.gfnAlert("동일한 승인구분으로 선택하셔야 합니다.");
// 				this.dsList.setColumn(e.row, "chk", 0);
// 				this.btnSlipAppr.set_enable(true);
// 				this.btnSlipCancel.set_enable(false);
// 				this.btnSlipDelete.set_enable(true);
// 			}
		}
	  }	
	}
}

this.fnGrid_AfterAllCheck = function(obj:nexacro.Grid, cell, check) {
	var appr = this.ccrdTY_GUBUN01.value;
	var arrChk = [];
	var grdYNAPPRsY = [];
	var grdYNAPPRsN = [];
	
	for(var i = 0; i < this.dsList.rowcount; i++) {
		if(this.dsList.getColumn(i, "chk") == 1) {
			var YN_APPR = this.dsList.getColumn(i,"YN_APPR");
			arrChk.push(i);
			if(YN_APPR == "승인") {
				grdYNAPPRsY.push(YN_APPR);
			} else if(YN_APPR == "미승인") {
				grdYNAPPRsN.push(YN_APPR);
			}
		}
	}
	
	trace("### appr :: "+appr);
	trace("### grdYNAPPRsY.length :: "+grdYNAPPRsY.length);
	trace("### grdYNAPPRsN.length :: "+grdYNAPPRsN.length);
	
	if(appr == "") {		
		if(grdYNAPPRsY.length>0 && grdYNAPPRsN.length<1) {
// 			this.btnSlipAppr.set_enable(false);
// 			this.btnSlipCancel.set_enable(true);
			this.btnSlipDelete.set_enable(false);
		} else if(grdYNAPPRsY.length<1 && grdYNAPPRsN.length>0) {
// 			this.btnSlipAppr.set_enable(true);
// 			this.btnSlipCancel.set_enable(false);
			this.btnSlipDelete.set_enable(true);
		} else {
// 			this.btnSlipAppr.set_enable(false);
// 			this.btnSlipCancel.set_enable(false);
			this.btnSlipDelete.set_enable(false);
		}
	} 
	else if(appr == "Y") {
		if(grdYNAPPRsY.length>0) {
// 			this.btnSlipAppr.set_enable(false);
// 			this.btnSlipCancel.set_enable(true);
			this.btnSlipDelete.set_enable(false);
		} else {
// 			this.btnSlipAppr.set_enable(false);
// 			this.btnSlipCancel.set_enable(false);
			this.btnSlipDelete.set_enable(false);
		}
	}
	
	else if(appr == "N") {
		if(grdYNAPPRsN.length>0) {
// 			this.btnSlipAppr.set_enable(true);
// 			this.btnSlipCancel.set_enable(false);
			this.btnSlipDelete.set_enable(true);
		} else {
// 			this.btnSlipAppr.set_enable(false);
// 			this.btnSlipCancel.set_enable(false);
			this.btnSlipDelete.set_enable(false);
		}
	} else if(appr == "X") {
		if(grdYNAPPRsY.length>0) {
// 			this.btnSlipAppr.set_enable(false);
// 			this.btnSlipCancel.set_enable(false);
			this.btnSlipDelete.set_enable(true);
		} else {
// 			this.btnSlipAppr.set_enable(false);
// 			this.btnSlipCancel.set_enable(false);
			this.btnSlipDelete.set_enable(false);
		}
	}

// 	var colnm = this.gfnGridGetBindColumnNameByIndex(obj, cell);
// 	if(colnm == "CHK") {
// 		trace("fnGrid_AfterAllCheck] " + cell + "," + check);
// 	}
}


// this.dsList_canrowposchange = function(obj:nexacro.NormalDataset,e:nexacro.DSRowPosChangeEventInfo) {
// 	var can_rowchange = true;
// 	for (var i = 0; i < this.dsListSub.rowcount; i++) {
// 		var flag = this.gfnGetFlag(this.dsListSub, i);
// 		if (flag == "I" || flag == "U" || flag == "D") {
// 			can_rowchange = false;
// 			break;
// 		}
// 	}
// 	if(!can_rowchange) {
// 		this._row = e.newrow;
// 		this.gfnConfirm("변경된 데이터가 있습니다.\r\n계속 진행하시겠습니까?", "dsList_canrowposchange_callback");
// 	}
// 	return can_rowchange;
// }
// 
// this.dsList_canrowposchange_callback = function(strId, val) 
// {
// 	if(val == true) {
// 		this.dsList.set_enableevent(false);
// 		this.dsList.set_rowposition(this._row);
// 		this.dsList.set_enableevent(true);
// 	}	
// }

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		this.gfnSetFormStatus(this);
		this.gfnGridClear(this.dxGrid);
		this.gfnGridClear(this.dxGridSub);
	}
}

this.divData_ondragmove = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
	if(e.userdata == "splitter") {
		this.divData.form.divSplitter.set_top(e.clienty);
		this.divData.form.resetScroll();	
	}
};

this.divData_divSplitter_ondrag = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
	e.set_userdata("splitter");
	return true;
};


// 
// this.fnValidUser = function(r) {
// 	var msg = "";
// 	var blnEmpty = true;
// 	if ((this.dsList.getColumn(r, "CD_SYSTEM") == "DSB" || this.dsList.getColumn(r, "CD_SYSTEM") == "DSC") && this.dsList.getColumn(r, "AM_NOTES") > 0) {
// 		msg += "노무비는 [어음(전자)지급]을 할 수가 없습니다!!!\r\n";
// 		blnEmpty = false;
// 	}
// 	if (this.dsList.getColumn(r, "CD_SYSTEM") == "DAU" && this.dsList.getColumn(r, "AM_NOTES") > 0) {
// 		msg += "급여는 [어음(전자)지급]을 할 수가 없습니다!!!\r\n";
// 		blnEmpty = false;
// 	}
// 	if (this.dsList.getColumn(r, "AM_REMAIN") + this.dsList.getColumn(r, "AM_REQUEST") < this.dsList.getColumn(r, "AM_CASH") + this.dsList.getColumn(r, "AM_NOTES")) {
// 		msg += "청구금액이 청구가능금액을 초과하였습니다.\r\n";
// 		blnEmpty = false;
// 	}
// 	if (this.dsList.getColumn(r, "AM_CASH") == 0 && this.dsList.getColumn(r, "AM_NOTES") == 0) {
// 		msg += "청구할 금액(현금+어음)이 입력되지 않았습니다.\r\n";
// 		blnEmpty = false;
// 	}
// 	if (this.dsList.getColumn(r, "AM_REMAIN") < this.dsList.getColumn(r, "AM_REQUEST") + this.dsList.getColumn(r, "AM_CASH") + this.dsList.getColumn(r, "AM_NOTES")) {
// 		msg += "청구금액(현금+어음)은 (잔액-청구중)금액을 초과할수 없습니다.\r\n";
// 		blnEmpty = false;
// 	}
// 	if (this.dsList.getColumn(r, "AM_NOTES") != 0) {
// 		if (this.gfnIsNull(this.dsList.getColumn(r, "DT_REQ_N"))) {
// 			msg += "청구금액(어음)이 존재하므로 집행요청일(어음)은 필수입력 항목입니다.\r\n";
// 			blnEmpty = false;
// 		}
// 		if (this.gfnIsNull(this.dsList.getColumn(r, "DT_EXPIRY"))) {
// 			msg += "청구금액(어음)이 존재하므로 만기일자는 필수입력 항목입니다.\r\n";
// 			blnEmpty = false;
// 		}
// 		if (!this.gfnIsNull(this.dsList.getColumn(r, "DT_EFDTE")) && !this.gfnIsNull(this.dsList.getColumn(r, "DT_EXPIRY"))) {
// 			if (this.dsList.getColumn(r, "DT_EFDTE") > this.dsList.getColumn(r, "DT_EXPIRY")) {
// 				msg += "어음 만기일자는 계상일자보다 이전일 수 없습니다.\r\n";
// 				blnEmpty = false;
// 			}
// 		}
// 	}
// 	
// 	if (!blnEmpty) {
// 		this.gfnAlert(msg);
// 		return false;
// 	}
// 	
// 	return true;
// }

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
		this.gfnGridClear(this.dxGridSub);	
		
		this.btnApprove.set_enable(false);
		this.btnSchApprove.set_enable(false);
// 		this.btnSlipAppr.set_enable(false);
// 		this.btnSlipCancel.set_enable(false);
		this.btnSlipDelete.set_enable(false);
		this.btnSlipDetail.set_enable(false);
	}
	
};
//전표 상세조회
this.fnSlipDetail = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if(!this.gfnGridIsRow(this.dxGrid)) {return false;}
	
	var param = {};
	
	param.IUD_FLAG = this.dsList.getColumn(this.dsList.rowposition, "YN_APPR")  == "미승인" ? "U" : "S";
	param.CD_TRADE = this.dsList.getColumn(this.dsList.rowposition, "CD_TRADE").replace(/-/gi, "");
	
	this.gfnFormOpen("DHA", "DHA_ISSUESLIP", "", param);
};

this.divData_divDataTop_objGrid_oncelldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	if(!this.gfnGridIsRow(this.dxGrid)) {return false;}
	
	var param = {};
	
	param.IUD_FLAG = this.dsList.getColumn(this.dsList.rowposition, "YN_APPR")  == "미승인" ? "U" : "S";
	param.CD_TRADE = this.dsList.getColumn(this.dsList.rowposition, "CD_TRADE").replace(/-/gi, "");
	
	this.gfnFormOpen("DHA", "DHA_ISSUESLIP", "", param);
};

//승인
this.fnSlipAppr = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if(!this.gfnGridIsRow(this.dxGrid)) {return false;}
	
		var arrChk = [], arrYNAPPR = [];;
	for(var i = 0; i < this.dsList.rowcount; i++) {
		if(this.dsList.getColumn(i, "chk") == 1) {
			arrChk.push(i);
			
			if(this.dsList.getColumn(i, "YN_APPR") == "승인"){
				arrYNAPPR.push(i);
			}
		}
	}
	if(arrChk.length < 1){
		this.gfnAlert("작업할 내역이 없습니다.");
		return;
	}	
	if(arrYNAPPR.length > 0){
		this.gfnAlert("미승인 데이터만 처리 할수있습니다.");
		return;
	}	
	if(arrChk.length ==1) this.gfnConfirm("선택한 자료를 미승인전표에서 승인전표로 만듭니다.","fnSlipAppr_callback");
	if(arrChk.length > 1) this.gfnConfirm("선택한" + arrChk.length + "건의 자료를 미승인전표에서 승인전표로 만듭니다.", "fnSlipAppr_callback");
};

this.fnSlipAppr_callback = function(strId, val) 
{
	if(val == true) {
		var arrChk = [];
		for(var i = 0; i < this.dsList.rowcount; i++) {
			if(this.dsList.getColumn(i, "chk") == 1) {
				arrChk.push(i);
			}
		}	
		
		if(arrChk.length > 0) { 
			this.dsInsert.clearData();
			
			// 체크행 처리
			/*this.gfnAlert("체크행:" + arrChk.join(','));*/
			for(var i = 0; i < arrChk.length; i++) {
				var nrow = this.dsInsert.addRow();
				this.dsInsert.setColumn(nrow, "IN_CD_TRADE", this.dsList.getColumn(arrChk[i], "CD_TRADE").replace(/-/gi, ""));
				this.dsInsert.setColumn(nrow, "IN_TY_SLIP", this.gfnIsNull(this.dsList.getColumn(arrChk[i], "CD_AUTOSLIP"))==true ? "M" : "A");
				this.dsInsert.setColumn(nrow, "ID_APPR", this.AuthClient.ID_USER);
			}		
		
			if (this.dsInsert.rowcount == 0) return;
		
			var strSvcId    = "appr";
			var strSvcType  = "save";
			var inProc		= "_dsProc";
			var inData      = "appr=dsInsert";
			var outData     = "";
			var strArg      = "";
			var callBackFnc = "fnCallback";
			
			this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
								strSvcType , 	// transaction을 요청할 구분
								inProc,			// Procedure 정보 Dataset 이름
								inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
								outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
								strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
								callBackFnc); // 통신방법 정의 [생략가능]
		
		} else {
			this.gfnAlert("체크된 행이 없습니다.");
		}
	}
};

//취소요청
this.fnSlipCancel = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if(!this.gfnGridIsRow(this.dxGrid)) {return false;}	
	
	var arrChk = [], arrYNAPPR = [];
	for(var i = 0; i < this.dsList.rowcount; i++) {
		if(this.dsList.getColumn(i, "chk") == 1) {
			arrChk.push(i);
			
			if(this.dsList.getColumn(i, "YN_APPR") == "미승인" || this.dsList.getColumn(i, "YN_CANCEL") == "Y"){
				arrYNAPPR.push(i);
			}
		}
	}
	if(arrChk.length < 1){ 
		this.gfnAlert("작업할 내역이 없습니다.");
		return;
	}
	if(arrYNAPPR.length > 0){
		this.gfnAlert("취소요청이 안된 승인 데이터만 처리할수 있습니다.");
		return;
	}
	if(arrChk.length ==1) this.gfnConfirm("선택한 자료를 승인전표에서 취소요청전표로 만듭니다.","fnSlipCancel_callback");
	if(arrChk.length > 1) this.gfnConfirm("선택한" + arrChk.length + "건의 자료를 승인전표에서 취소요청전표로 만듭니다.", "fnSlipCancel_callback");
};

this.fnSlipCancel_callback = function(strId, val) 
{
	if(val == true) {
		var arrChk = [];
		for(var i = 0; i < this.dsList.rowcount; i++) {
			if(this.dsList.getColumn(i, "chk") == 1) {
				arrChk.push(i);
			}
		}
		
		if(arrChk.length > 0) { 
			this.dsInsert.clearData();
			
			// 체크행 처리
			for(var i = 0; i < arrChk.length; i++) {
				var nrow = this.dsInsert.addRow();
				this.dsInsert.setColumn(nrow, "IN_CD_TRADE", this.dsList.getColumn(arrChk[i], "CD_TRADE").replace(/-/gi, ""));
				this.dsInsert.setColumn(nrow, "IN_TY_SLIP", this.gfnIsNull(this.dsList.getColumn(arrChk[i], "CD_AUTOSLIP"))==true ? "M" : "A");
				//this.dsInsert.setColumn(nrow, "IN_TY_SLIP", this.dsList.getColumn(arrChk[i], "CD_AUTOSLIP") == null ? "M" : "A");
				this.dsInsert.setColumn(nrow, "ID_TRANS", this.AuthClient.ID_USER);
			}
			
			if (this.dsInsert.rowcount == 0) return;
		
			var strSvcId    = "cancel";
			var strSvcType  = "save";
			var inProc		= "_dsProc";
			var inData      = "cancel=dsInsert";
			var outData     = "";
			var strArg      = "";
			var callBackFnc = "fnCallback";
			
			this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
								strSvcType , 	// transaction을 요청할 구분
								inProc,			// Procedure 정보 Dataset 이름
								inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
								outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
								strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
								callBackFnc); // 통신방법 정의 [생략가능]
		
		} else {
			this.gfnAlert("체크된 행이 없습니다.");
		}
	}
}

//전표 취소
this.fnSlipDelete = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if(!this.gfnGridIsRow(this.dxGrid)) {return false;}
	
	var arrChk = [], arrYNAPPR = [], arrYN_CANCEL = [];
	for(var i = 0; i < this.dsList.rowcount; i++) {
		if(this.dsList.getColumn(i, "chk") == 1) {
			arrChk.push(i);
			
			if(this.dsList.getColumn(i, "YN_APPR") == "승인" && this.dsList.getColumn(i, "YN_CANCEL") == "N"){
				arrYNAPPR.push(i);
			}
			if(this.dsList.getColumn(i, "YN_CANCEL") == "Y"){
				arrYN_CANCEL.push(i);
			}
		}
	}
	if(arrChk.length < 1){
		this.gfnAlert("작업할 내역이 없습니다.");
		return;
	}
	
	if(arrYNAPPR.length > 0){
		this.gfnAlert("미승인/취소요청 데이터만 처리 가능합니다.");
		return;
	}
	
	var msg = "전표를 삭제하시겠습니까?";	
	if(arrYN_CANCEL.length > 0){
		msg = "전표 마이너스 전표 발행하시겠습니까?";
	}
	
	if(arrChk.length ==1) this.gfnConfirm("선택한 "+msg,"fnSlipDelete_callback");
	if(arrChk.length > 1) this.gfnConfirm("선택한 " + arrChk.length + "건의 "+msg, "fnSlipDelete_callback");
};

this.fnSlipDelete_callback = function(strId, val) 
{
	if(val == true) {
		var arrChk = [];
		for(var i = 0; i < this.dsList.rowcount; i++) {
			if(this.dsList.getColumn(i, "chk") == 1) {
				arrChk.push(i);
			}
		}
		
		if(arrChk.length > 0) { 
			this.dsInsert.clearData();
			
			// 체크행 처리
			for(var i = 0; i < arrChk.length; i++) {
				var nrow = this.dsInsert.addRow();
				this.dsInsert.setColumn(nrow, "CD_TRADE", this.dsList.getColumn(arrChk[i], "CD_TRADE").replace(/-/gi, ""));
			}
			
			if (this.dsInsert.rowcount == 0) return;
			
			var strSvcId    = "delete";
			var strSvcType  = "save";
			var inProc		= "_dsProc";
			var inData      = "delete=dsInsert";
			var outData     = "";
			var strArg      = "";
			var callBackFnc = "fnCallback";
			
			this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
								strSvcType , 	// transaction을 요청할 구분
								inProc,			// Procedure 정보 Dataset 이름
								inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
								outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
								strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
								callBackFnc); // 통신방법 정의 [생략가능]
		
		} else {
			this.gfnAlert("체크된 행이 없습니다.");
		}
	}
}


this.divSearch_ccboTY_PAY_onitemchanged = function(obj:nexacro.Combo,e:nexacro.ItemChangeEventInfo)
{	
	this.ccfCD_VENDOR01.form.fnCodeFindClear();
	this.fnSearchInit();
	
	if(e.postvalue == "%"){
		this.ccfCD_VENDOR01.form.set_readonly(true);
	}else{
		this.ccfCD_VENDOR01.form.set_readonly(false);
	}
};

// 전표결제 버튼 클릭
this.fnApprove = function (obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if(!this.gfnGridIsRow(this.dxGrid)) return;
	
	var cdTrade  = nexacro.replaceAll(this.gfnNvl(this.dsList.getColumn(this.dsList.rowposition , "CD_TRADE"),""),"-","");
	if(this.gfnIsNull(cdTrade)){
		this.gfnAlert("전표번호는 필수입니다.");
		return;
	}
	
	this.dsSelectDtReq.clearData();
	var nRow = this.dsSelectDtReq.addRow();

	this.dsSelectDtReq.setColumn(nRow, "CD_TRADE", cdTrade);

	var strSvcId    = "selectDtReq";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "selectDtReq=dsSelectDtReq";
	var outData     = "dsDtReq=selectDtReq0 dsCdApp=selectDtReq1";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]	
	

};

// 결제조회 버튼 클릭
this.fnSchApprove = function (obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if(!this.gfnGridIsRow(this.dxGrid)) return;
	
	if(this.gfnIsNull(this.dsList.getColumn(this.dsList.rowposition , "NO_DOC"))){
		this.gfnAlert("결재 정보가 존재하지 않습니다.");
		return;
	}
	
	var url = this.gfnGetConfig("DZ" , "GW_APROVAL_URL");
	url = url+"approval/approval_Form.do?";
	url +="forminstanceID="+this.dsList.getColumn(this.dsList.rowposition , "NO_DOC");
	url +="&processID="+this.dsList.getColumn(this.dsList.rowposition , "DS_DOC");
	
	trace("### 결재조회 url :: "+url);
		
	window.open(url, "_blank", "width=790,height=1000,menubar=no,scrollbars=no,resizable=no,status=no");
};]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DHAPR_SLIPLIST_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">d_select</Col>
            <Col id="SP">DHAPR_SLIP_DETAIL</Col>
          </Row>
          <Row>
            <Col id="SP">DHAPR_SLIP_TRANSFER</Col>
            <Col id="TARGET">appr</Col>
          </Row>
          <Row>
            <Col id="TARGET">cancel</Col>
            <Col id="SP">DHAPR_SLIP_REVERSE</Col>
          </Row>
          <Row>
            <Col id="TARGET">delete</Col>
            <Col id="SP">DHAPR_SLIP_CANCEL</Col>
          </Row>
          <Row>
            <Col id="TARGET">selectDtReq</Col>
            <Col id="SP">DHAPR_SLIP_DT_MIBUL_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsListSub"/>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="TY_DEPT" type="STRING" size="256"/>
          <Column id="CD_DEPT" type="STRING" size="256"/>
          <Column id="YN_APPR" type="STRING" size="256"/>
          <Column id="YN_PAPER" type="STRING" size="256"/>
          <Column id="TY_DATE" type="STRING" size="256"/>
          <Column id="DT_DATE_FR" type="STRING" size="256"/>
          <Column id="DT_DATE_TO" type="STRING" size="256"/>
          <Column id="CD_AUTOSLIP" type="STRING" size="256"/>
          <Column id="TY_AUTOSLIP" type="STRING" size="256"/>
          <Column id="CD_TRADE" type="STRING" size="256"/>
          <Column id="CD_TRADE_APPR" type="STRING" size="256"/>
          <Column id="CD_ACCOUNT" type="STRING" size="256"/>
          <Column id="CD_SEMOK" type="STRING" size="256"/>
          <Column id="CD_TOACCOUNT" type="STRING" size="256"/>
          <Column id="CD_TOSEMOK" type="STRING" size="256"/>
          <Column id="CD_VENDOR" type="STRING" size="256"/>
          <Column id="TY_VENDOR" type="STRING" size="256"/>
          <Column id="TY_COMBO" type="STRING" size="256"/>
          <Column id="DS_REM" type="STRING" size="256"/>
          <Column id="ID_SABUN" type="STRING" size="256"/>
          <Column id="CD_DEPT2" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_PAY">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="VALUE">전체</Col>
            <Col id="CODE">%</Col>
          </Row>
          <Row>
            <Col id="VALUE">인사</Col>
            <Col id="CODE">DA</Col>
          </Row>
          <Row>
            <Col id="VALUE">공사</Col>
            <Col id="CODE">DW</Col>
          </Row>
          <Row>
            <Col id="CODE">DC</Col>
            <Col id="VALUE">외주</Col>
          </Row>
          <Row>
            <Col id="CODE">DM</Col>
            <Col id="VALUE">자재</Col>
          </Row>
          <Row>
            <Col id="CODE">DS</Col>
            <Col id="VALUE">노무</Col>
          </Row>
          <Row>
            <Col id="CODE">DF</Col>
            <Col id="VALUE">자금</Col>
          </Row>
          <Row>
            <Col id="CODE">DH</Col>
            <Col id="VALUE">회계</Col>
          </Row>
          <Row>
            <Col id="CODE">DL</Col>
            <Col id="VALUE">영업</Col>
          </Row>
          <Row>
            <Col id="CODE">DB</Col>
            <Col id="VALUE">하자</Col>
          </Row>
          <Row>
            <Col id="CODE">DG</Col>
            <Col id="VALUE">총무</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsCD_SYSTEM">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="VALUE">발행부서</Col>
            <Col id="CODE">BH</Col>
          </Row>
          <Row>
            <Col id="VALUE">귀속부서</Col>
            <Col id="CODE">BE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_GUBUN">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE"/>
            <Col id="VALUE">전체</Col>
          </Row>
          <Row>
            <Col id="CODE">M</Col>
            <Col id="VALUE">일반</Col>
          </Row>
          <Row>
            <Col id="CODE">A</Col>
            <Col id="VALUE">자동</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_GUBUN1">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE"/>
            <Col id="VALUE">전체</Col>
          </Row>
          <Row>
            <Col id="CODE">Y</Col>
            <Col id="VALUE">승인</Col>
          </Row>
          <Row>
            <Col id="CODE">N</Col>
            <Col id="VALUE">미승인</Col>
          </Row>
          <Row>
            <Col id="CODE">X</Col>
            <Col id="VALUE">취소요청</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_GUBUN2">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">BH</Col>
            <Col id="VALUE">발행일자</Col>
          </Row>
          <Row>
            <Col id="CODE">BE</Col>
            <Col id="VALUE">회계일자</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsObj2">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">Y</Col>
            <Col id="VALUE">거래처</Col>
          </Row>
          <Row>
            <Col id="CODE">E</Col>
            <Col id="VALUE">기타1</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsDtReq"/>
      <Dataset id="dsCdApp"/>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccboCD_SYSTEM" propid="text" datasetid="dsSearch" columnid="TY_DEPT"/>
      <BindItem id="item1" compid="divSearch.form.ccboCD_SYSTEM01" propid="value" datasetid="dsSearch" columnid="TY_VENDOR"/>
      <BindItem id="item2" compid="divSearch.form.ccboTY_PAY" propid="value" datasetid="dsSearch" columnid="TY_AUTOSLIP"/>
      <BindItem id="item4" compid="divSearch.form.ccboCD_SYSTEM" propid="value" datasetid="dsSearch" columnid="TY_DEPT"/>
      <BindItem id="item8" compid="divSearch.form.ccrdTY_GUBUN" propid="value" datasetid="dsSearch" columnid="YN_APPR"/>
      <BindItem id="item9" compid="divSearch.form.ccrdTY_GUBUN01" propid="value" datasetid="dsSearch" columnid="YN_PAPER"/>
      <BindItem id="item10" compid="divSearch.form.ccrdTY_GUBUN02" propid="value" datasetid="dsSearch" columnid="TY_DATE"/>
      <BindItem id="item11" compid="divSearch.form.txtDS_REM" propid="value" datasetid="dsSearch" columnid="DS_REM"/>
      <BindItem id="item12" compid="divSearch.form.txtCD_TRADE" propid="value" datasetid="dsSearch" columnid="CD_TRADE"/>
      <BindItem id="item3" compid="divSearch.form.ccfCD_DEPT_BE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_DEPT"/>
      <BindItem id="item5" compid="divSearch.form.ccfCD_DEPT_BH.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_DEPT2"/>
    </Bind>
  </Form>
</FDL>
