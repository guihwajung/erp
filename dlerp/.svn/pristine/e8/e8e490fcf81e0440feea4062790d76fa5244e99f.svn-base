<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="DAW_RETIREAVGSALARY" width="1280" height="720" titletext="퇴직평균임금관리" onload="form_onload" onclick="DAW_RETIRE_onclick" scrolltype="none">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0" top="0" height="46.0" right="0" cssclass="div_SEARCH_Bg" text="">
          <Layouts>
            <Layout>
              <Static id="staYM_RETIRE" taborder="0" text="적용년월" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ctclYM_BASE" taborder="1" left="staYM_RETIRE:0.0" top="10.0" width="80" height="24.0" url="cmm::cmmCalMM.xfdl" enableevent="true" text="2019"/>
              <Static id="staTY_GUBUN" taborder="2" text="구분" left="ctclYM_BASE:0.0" top="10.0" width="92.0" height="24.0" rtl="false" cssclass="sta_WF_SchLabel"/>
              <Radio id="rdoTY_GUBUN" taborder="3" left="staTY_GUBUN:0.0" top="10.0" height="24.0" direction="vertical" fittocontents="width" width="120" index="0" value="E" onitemchanged="fnSearchInit" text="임직원" innerdataset="innerdataset" codecolumn="codecolumn" datacolumn="datacolumn">
                <Dataset id="innerdataset">
                  <ColumnInfo>
                    <Column id="codecolumn" size="256"/>
                    <Column id="datacolumn" size="256"/>
                  </ColumnInfo>
                  <Rows>
                    <Row>
                      <Col id="codecolumn">E</Col>
                      <Col id="datacolumn">임직원</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">T</Col>
                      <Col id="datacolumn">노무자</Col>
                    </Row>
                  </Rows>
                </Dataset>
              </Radio>
              <Static id="staID_SABUN" taborder="4" text="사번" left="rdoTY_GUBUN:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfID_SABUN" CodeFindName="DAX_CFBASEINFO" CDTextWidth="80" taborder="5" left="staID_SABUN:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" BeforeUserDataSetParam="fnBeforeUserDataSetParam" AfterCDTextChanged="fnAfterCDTextChanged"/>
              <Static id="staCD_CORP" taborder="6" text="법인" left="ccfID_SABUN:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_CORP" CDTextWidth="70" taborder="7" left="staCD_CORP:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" CodeFindName="DAX_CFCORP2" BeforeUserDataSetParam="fnBeforeUserDataSetParam" AfterCDTextChanged="fnAfterCDTextChanged"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" right="0" cssclass="div_DATA_Bg" text="" bottom="0" background="WHITE" formscrolltype="vertical">
          <Layouts>
            <Layout>
              <Static id="staTITLE" taborder="0" text="기본사항" left="19" top="0" width="516" height="30" cssclass="sta_TITLE_Bg" textAlign="left"/>
              <Static id="staID_SABUN" taborder="1" text="사번" left="19" top="35" width="90" height="30" cssclass="sta_WF_tablelabel" visible="true"/>
              <Static id="sta02" taborder="2" left="108" top="35" width="108" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Edit id="edtID_SABUN" taborder="3" left="112" top="40" width="100" height="20" readonly="true" textAlign="left"/>
              <Static id="sta00" taborder="4" left="108" top="64" width="108" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Edit id="edtDS_HNAME" taborder="5" left="112" top="69" width="100" height="20" readonly="true" textAlign="left"/>
              <Static id="staDS_HNAME" taborder="6" text="성명" left="19" top="64" width="90" height="30" cssclass="sta_WF_tablelabel" visible="true"/>
              <Static id="sta01" taborder="7" left="304" top="63" width="304" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Edit id="edtDS_DEPT" taborder="8" left="308" top="68" width="296" height="20" readonly="true" textAlign="left"/>
              <Static id="staDS_DEPT" taborder="9" text="부서" left="215" top="63" width="90" height="30" cssclass="sta_WF_tablelabel" visible="true"/>
              <Static id="sta03" taborder="10" left="304" top="35" width="108" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Edit id="edtYM_RETIRE" taborder="11" left="308" top="40" width="100" height="20" readonly="true" textAlign="center"/>
              <Static id="staYM_RETIRE" taborder="12" text="퇴직년월" left="215" top="35" width="90" height="30" cssclass="sta_WF_tablelabel" visible="true"/>
              <Static id="sta06" taborder="13" left="500" top="35" width="108" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Edit id="edtDT_JOIN" taborder="14" left="504" top="40" width="100" height="20" readonly="true" textAlign="center"/>
              <Static id="staDT_JOIN" taborder="15" text="입사일자" left="411" top="35" width="90" height="30" cssclass="sta_WF_tablelabel" visible="true"/>
              <Static id="sta10" taborder="16" left="696" top="35" width="108" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Edit id="edtDT_START" taborder="17" left="700" top="40" width="100" height="20" readonly="true" textAlign="center"/>
              <Static id="staDT_START" taborder="18" text="기산일자" left="607" top="35" width="90" height="30" cssclass="sta_WF_tablelabel" visible="true"/>
              <Static id="sta14" taborder="19" left="696" top="64" width="108" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Edit id="edtDT_RETIRE" taborder="20" left="700" top="69" width="100" height="20" readonly="true" textAlign="center"/>
              <Static id="staDT_RETIRE" taborder="21" text="퇴직일자" left="607" top="64" width="90" height="30" cssclass="sta_WF_tablelabel" visible="true"/>
              <Static id="staTITLE00" taborder="22" text="급여내역" left="19" top="103" width="516" height="30" cssclass="sta_TITLE_Bg" textAlign="left"/>
              <Static id="staID_SABUN00" taborder="23" text="사번" left="19" top="138" width="90" height="30" cssclass="sta_WF_tablelabel" visible="true"/>
              <Static id="staDT_FROM" taborder="24" text="FROM" left="109" top="138" width="100" height="30" visible="true" cssclass="sta_WF_tablelabelE"/>
              <Static id="staDT_TO" taborder="25" text="TO" left="109" top="167" width="100" height="30" visible="true" cssclass="sta_WF_tablelabelE"/>
              <Static id="staAM_INCOME" taborder="26" text="급여" left="109" top="196" width="100" height="30" visible="true" cssclass="sta_WF_tablelabelE"/>
              <Static id="staQN_WORK" taborder="27" text="일수" left="109" top="225" width="100" height="30" cssclass="sta_WF_tablelabel" visible="true"/>
              <Static id="staAM_INCOMESUM" taborder="28" text="3개월급여합계" left="109" top="254" width="100" height="30" cssclass="sta_WF_tablelabel" visible="true"/>
              <Static id="sta04" taborder="29" left="208" top="138" width="520" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Static id="sta05" taborder="30" left="208" top="167" width="520" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Static id="sta07" taborder="31" left="208" top="196" width="520" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Static id="sta08" taborder="32" left="208" top="225" width="520" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Static id="sta09" taborder="33" left="208" top="254" width="520" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Calendar id="edtDT_FROM1" taborder="34" left="213" top="143" width="120" height="20" editformat="yyyyMMdd" dateformat="yyyy-MM-dd"/>
              <Calendar id="edtDT_FROM2" taborder="35" left="343" top="143" width="120" height="20" editformat="yyyyMMdd" dateformat="yyyy-MM-dd"/>
              <Calendar id="edtDT_FROM3" taborder="36" left="473" top="143" width="120" height="20" editformat="yyyyMMdd" dateformat="yyyy-MM-dd"/>
              <Calendar id="edtDT_FROM4" taborder="37" left="603" top="143" width="120" height="20" editformat="yyyyMMdd" dateformat="yyyy-MM-dd"/>
              <Calendar id="edtDT_TO1" taborder="38" left="213" top="172" width="120" height="20" editformat="yyyyMMdd" dateformat="yyyy-MM-dd"/>
              <Calendar id="edtDT_TO2" taborder="39" left="343" top="172" width="120" height="20" editformat="yyyyMMdd" dateformat="yyyy-MM-dd"/>
              <Calendar id="edtDT_TO3" taborder="40" left="473" top="172" width="120" height="20" editformat="yyyyMMdd" dateformat="yyyy-MM-dd"/>
              <Calendar id="edtDT_TO4" taborder="41" left="603" top="172" width="120" height="20" editformat="yyyyMMdd" dateformat="yyyy-MM-dd"/>
              <Edit id="edtQN_WORK1" taborder="42" left="213" top="230" width="30" height="20" readonly="true" textAlign="center"/>
              <Edit id="edtQN_WORK2" taborder="43" left="343" top="230" width="30" height="20" readonly="true" textAlign="center"/>
              <Edit id="edtQN_WORK3" taborder="44" left="473" top="230" width="30" height="20" readonly="true" textAlign="center"/>
              <Edit id="edtQN_WORK4" taborder="45" left="603" top="230" width="30" height="20" readonly="true" textAlign="center"/>
              <Static id="staTITLE01" taborder="46" text="상여내역" left="19" top="293" width="100" height="30" cssclass="sta_TITLE_Bg" textAlign="left"/>
              <Static id="staAM_ANNUALBONUS" taborder="47" text="1년분 상여" left="19" top="328" width="90" height="30" visible="true" cssclass="sta_WF_tablelabelE"/>
              <Static id="sta11" taborder="48" left="108" top="328" width="148" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Static id="sta12" taborder="49" left="364" top="328" width="148" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Static id="staAM_VACAALLOW" taborder="50" text="1년분 연차수당" left="255" top="328" width="110" height="30" cssclass="sta_WF_tablelabel" visible="true"/>
              <Static id="sta13" taborder="51" left="620" top="328" width="148" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Static id="staAM_ETCAALLOW" taborder="52" text="1년분 기타수당" left="511" top="328" width="110" height="30" cssclass="sta_WF_tablelabel" visible="true"/>
              <Static id="staTITLE02" taborder="53" text="연차수당내역" left="259" top="293" width="100" height="30" cssclass="sta_TITLE_Bg" textAlign="left"/>
              <Static id="staTITLE03" taborder="54" text="기타수당내역" left="515" top="293" width="100" height="30" cssclass="sta_TITLE_Bg" textAlign="left"/>
              <Static id="staQN_BONUS" taborder="55" text="개월수" left="19" top="357" width="90" height="30" cssclass="sta_WF_tablelabel" visible="true"/>
              <Static id="sta15" taborder="56" left="108" top="357" width="148" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Static id="sta16" taborder="57" left="364" top="357" width="148" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Static id="staAM_AVGVACAALLOW" taborder="58" text="월평균 연차수당" left="255" top="357" width="110" height="30" cssclass="sta_WF_tablelabel" visible="true"/>
              <Static id="sta17" taborder="59" left="620" top="357" width="148" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Static id="staAM_AVGETCAALLOW" taborder="60" text="월평균 기타수당" left="511" top="357" width="110" height="30" cssclass="sta_WF_tablelabel" visible="true"/>
              <Static id="staAM_AVGBONUS" taborder="61" text="월평균 상여" left="19" top="386" width="90" height="30" cssclass="sta_WF_tablelabel" visible="true"/>
              <Static id="sta18" taborder="62" left="108" top="386" width="148" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Static id="staTITLE04" taborder="63" text="퇴직금 외" left="19" top="445" width="100" height="30" cssclass="sta_TITLE_Bg" textAlign="left"/>
              <Static id="sta19" taborder="65" left="111" top="475" width="148" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Static id="staAM_HOPERETIRE" taborder="64" text="퇴직위로금" left="22" top="475" width="90" height="30" cssclass="sta_WF_tablelabel" visible="true"/>
              <MaskEdit id="edtAM_HOPERETIRE" taborder="66" left="114" top="480" width="140" height="20" format="#,##0" canchange="divData_edtAM_HOPERETIRE_canchange"/>
              <MaskEdit id="edtAM_ANNUALBONUS" taborder="67" left="staAM_ANNUALBONUS:2" top="333" width="140" height="20" format="#,##0" enable="true"/>
              <MaskEdit id="edtQN_BONUS" taborder="68" left="staQN_BONUS:2" top="362" width="140" height="20" format="#,##0" enable="false"/>
              <MaskEdit id="edtAM_AVGBONUS" taborder="69" left="111" top="391" width="140" height="20" format="#,##0" enable="false"/>
              <MaskEdit id="edtAM_INCOME1" taborder="70" left="213" top="202" width="120" height="20" format="#,##0" enable="true" canchange="divData_edtAM_INCOME1_canchange"/>
              <MaskEdit id="edtAM_INCOME2" taborder="71" left="343" top="200" width="120" height="20" format="#,##0" enable="true"/>
              <MaskEdit id="edtAM_INCOME3" taborder="72" left="473" top="200" width="120" height="20" format="#,##0" enable="true"/>
              <MaskEdit id="edtAM_INCOME4" taborder="73" left="603" top="200" width="120" height="20" format="#,##0" enable="true"/>
              <MaskEdit id="edtAM_INCOMESUM" taborder="74" left="213" top="259" width="120" height="20" format="#,##0" enable="false"/>
              <MaskEdit id="edtAM_VACAALLOW" taborder="75" left="368" top="333" width="140" height="20" format="#,##0" enable="true"/>
              <MaskEdit id="edtAM_AVGVACAALLOW" taborder="76" left="368" top="362" width="140" height="20" format="#,##0" enable="false"/>
              <MaskEdit id="edtAM_ETCAALLOW" taborder="77" left="623" top="333" width="140" height="20" format="#,##0" enable="false"/>
              <MaskEdit id="edtAM_AVGETCAALLOW" taborder="78" left="staAM_AVGETCAALLOW:2" top="361" width="140" height="20" format="#,##0" enable="false"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList" onvaluechanged="dsList_onvaluechanged">
        <ColumnInfo>
          <Column id="YM_RETIRE" type="STRING" size="256"/>
          <Column id="ID_SABUN" type="STRING" size="256"/>
          <Column id="DS_HNAME" type="STRING" size="256"/>
          <Column id="DS_ORG2" type="STRING" size="256"/>
          <Column id="DT_JOIN" type="STRING" size="256"/>
          <Column id="DT_START" type="STRING" size="256"/>
          <Column id="DT_RETIRE" type="STRING" size="256"/>
          <Column id="NO_RETIRE" type="STRING" size="256"/>
          <Column id="AM_INCOMESUM" type="STRING" size="256"/>
          <Column id="AM_ANNUALBONUS" type="STRING" size="256"/>
          <Column id="QN_BONUS" type="STRING" size="256"/>
          <Column id="AM_AVGBONUS" type="STRING" size="256"/>
          <Column id="AM_VACAALLOW" type="STRING" size="256"/>
          <Column id="AM_AVGVACAALLOW" type="STRING" size="256"/>
          <Column id="AM_ETCALLOW" type="STRING" size="256"/>
          <Column id="AM_AVGETCALLOW" type="STRING" size="256"/>
          <Column id="AM_HOPERETIRE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsList2" onvaluechanged="dsList2_onvaluechanged">
        <ColumnInfo>
          <Column id="DT_FROM" type="STRING" size="256"/>
          <Column id="DT_TO" type="STRING" size="256"/>
          <Column id="AM_INCOME" type="STRING" size="256"/>
          <Column id="QN_WORK" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DAWPR_RETIRE_BASE_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">select2</Col>
            <Col id="SP">DAWPR_SALARY_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">update</Col>
            <Col id="SP">DAWPR_RETIREINCOME_UPDATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">dsAuthForm</Col>
            <Col id="SP">DZZPR_DOTNET_AUTHORITYFORM_SELECT_NEW</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSalary" onvaluechanged="dsSalary_onvaluechanged" cancolumnchange="dsSalary_cancolumnchange">
        <ColumnInfo>
          <Column id="DT_FROM1" type="STRING" size="256"/>
          <Column id="DT_TO1" type="STRING" size="256"/>
          <Column id="AM_INCOME1" type="bigdecimal" size="256"/>
          <Column id="QN_WORK1" type="STRING" size="256"/>
          <Column id="DT_FROM2" type="STRING" size="256"/>
          <Column id="DT_TO2" type="STRING" size="256"/>
          <Column id="AM_INCOME2" type="bigdecimal" size="256"/>
          <Column id="QN_WORK2" type="STRING" size="256"/>
          <Column id="DT_FROM3" type="STRING" size="256"/>
          <Column id="DT_TO3" type="STRING" size="256"/>
          <Column id="AM_INCOME3" type="bigdecimal" size="256"/>
          <Column id="QN_WORK3" type="STRING" size="256"/>
          <Column id="DT_FROM4" type="STRING" size="256"/>
          <Column id="DT_TO4" type="STRING" size="256"/>
          <Column id="AM_INCOME4" type="bigdecimal" size="256"/>
          <Column id="QN_WORK4" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);
	this.gfnFormInfo(this);
	// ---------------------------//

	this.fnSetButton();
	//this.fnSetExtendButton(); 
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	//this.gfnIsNull(this.getOwnerFrame().arguments.Args.ID_SABUN	//openMenu로 열었을때 
	var YM_BASE = this.gfnNvl(this.getOwnerFrame().YM_RETIRE, this.gfnGetDate().substr(0,6));
	var CD_CORP = this.gfnNvl(this.getOwnerFrame().CD_CORP, this.AuthClient.CD_CORP);
	var DS_CORP = this.gfnNvl(this.getOwnerFrame().DS_CORP, this.AuthClient.DS_CORP);
	var ID_SABUN = this.getOwnerFrame().ID_SABUN;
	var DS_HNAME = this.getOwnerFrame().DS_HNAME;
	var TY_GUBUN = this.gfnNvl(this.getOwnerFrame().TY_GUBUN, "E");

	this.ccfCD_CORP.form.CDTextBox.set_value(CD_CORP);
	this.ccfCD_CORP.form.DSTextBox.set_value(DS_CORP);
	this.ctclYM_BASE.form.TextBox.set_value(YM_BASE);
	this.rdoTY_GUBUN.set_value(TY_GUBUN);

	if(!this.gfnIsNull(ID_SABUN)) {
		this.ccfID_SABUN.form.CDTextBox.set_value(ID_SABUN);
		this.ccfID_SABUN.form.DSTextBox.set_value(DS_HNAME);
	}
	
	//임직원 구분 - 일용직 삭제
	this.rdoTY_GUBUN.getInnerDataset().deleteRow(1);
		
	this.FormBtns.Select.click();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
	this.FormBtns.Add.set_enable(false);
	this.FormBtns.Del.set_enable(false);
	this.FormBtns.Excel.set_enable(false);
	this.FormBtns.Print.set_enable(false);
};

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {

	//적용년월
	this.ctclYM_BASE = this.divSearch.form.ctclYM_BASE;
	//임직원구분
	this.rdoTY_GUBUN = this.divSearch.form.rdoTY_GUBUN;
	//법인코드
	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;
	//사번
	this.ccfID_SABUN = this.divSearch.form.ccfID_SABUN;

	this.edtAM_INCOME1 = this.divData.form.edtAM_INCOME1;
	this.edtAM_INCOME2 = this.divData.form.edtAM_INCOME2;
	this.edtAM_INCOME3 = this.divData.form.edtAM_INCOME3;
	this.edtAM_INCOME4 = this.divData.form.edtAM_INCOME4;
	
	this.grSearch = this.FormInfo.GR_SEARCH;					          // 권한
	this.cdGroup = this.AuthClient.CD_GROUP;					          // 그룹코드
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {

};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	
	//조회
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("YM_RETIRE", "string");   	//퇴직년월
	this.dsSelect.addColumn("CD_CORP", "string");  		//법인
	this.dsSelect.addColumn("ID_SABUN", "string");  	//주민등록번호
	
	this.dsSelect2 = new Dataset();
	this.dsSelect2.addColumn("YM_RETIRE", "string");   	//퇴직년월
	this.dsSelect2.addColumn("ID_SABUN", "string");  	//주민등록번호		
	this.dsSelect2.addColumn("CD_CORP", "string");  	//법인
	
	//수정
	this.dsUpdate = new Dataset();
	this.dsUpdate.addColumn("YM_RETIRE", "string");
	this.dsUpdate.addColumn("ID_SABUN", "string");
	this.dsUpdate.addColumn("FR_SALARY1", "string");
	this.dsUpdate.addColumn("TO_SALARY1", "string");
	this.dsUpdate.addColumn("AM_SALARY1", "bigdecimal");
	this.dsUpdate.addColumn("FR_SALARY2", "string");
	this.dsUpdate.addColumn("TO_SALARY2", "string");
	this.dsUpdate.addColumn("AM_SALARY2", "bigdecimal");
	this.dsUpdate.addColumn("FR_SALARY3", "string");
	this.dsUpdate.addColumn("TO_SALARY3", "string");
	this.dsUpdate.addColumn("AM_SALARY3", "bigdecimal");
	this.dsUpdate.addColumn("FR_SALARY4", "string");
	this.dsUpdate.addColumn("TO_SALARY4", "string");
	this.dsUpdate.addColumn("AM_SALARY4", "bigdecimal");
	this.dsUpdate.addColumn("TT_BONUS", "bigdecimal");
	this.dsUpdate.addColumn("CT_BONUS", "bigdecimal");
	this.dsUpdate.addColumn("AM_VACAALLOW", "bigdecimal");
	this.dsUpdate.addColumn("AM_ETCALLOW", "bigdecimal");
	this.dsUpdate.addColumn("ID_UPDATE", "string");
	this.dsUpdate.addColumn("CD_CORP", "string");
	this.dsUpdate.addColumn("AM_HOPERETIRE", "bigdecimal");
	// 수정전값
	this.dsUpdate.addColumn("DT_FROM1", "string");
	this.dsUpdate.addColumn("DT_TO1", "string");
	this.dsUpdate.addColumn("AM_INCOME1", "bigdecimal");
	this.dsUpdate.addColumn("DT_FROM2", "string");
	this.dsUpdate.addColumn("DT_TO2", "string");
	this.dsUpdate.addColumn("AM_INCOME2", "bigdecimal");
	this.dsUpdate.addColumn("DT_FROM3", "string");
	this.dsUpdate.addColumn("DT_TO3", "string");
	this.dsUpdate.addColumn("AM_INCOME3", "bigdecimal");
	this.dsUpdate.addColumn("DT_FROM4", "string");
	this.dsUpdate.addColumn("DT_TO4", "string");
	this.dsUpdate.addColumn("AM_INCOME4", "bigdecimal");

};

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {

	if (!this.fnSelectValidate()) return false;

	this.dsSelect.clearData();
	this.dsSelect.addRow();

	this.dsSelect.setColumn(0, "YM_RETIRE", this.ctclYM_BASE.form.TextBox.value);   	//적용년도
	this.dsSelect.setColumn(0, "ID_SABUN", this.ccfID_SABUN.form.CDTextBox.value);  	//사번
	this.dsSelect.setColumn(0, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);  		//법인


	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";

	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 	    // 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]

};

this.fnSelectSalary = function() {
	this.dsSelect2.clearData();
	this.dsSelect2.addRow();

	this.dsSelect2.setColumn(0, "YM_RETIRE", this.ctclYM_BASE.form.TextBox.value);  //적용년도
	this.dsSelect2.setColumn(0, "ID_SABUN", this.ccfID_SABUN.form.CDTextBox.value); //사번
	this.dsSelect2.setColumn(0, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);  	//법인

	var strSvcId    = "select2";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select2=dsSelect2";
	var outData     = "dsList2=select20";
	var strArg      = "";
	var callBackFnc = "fnCallback";

	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 	    // 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
};

/*
 *	입력 버튼
 */
this.fnAdd = function() {
//	this.gfnGridAdd(this.dxGrid);
};

/*
 *	삭제 버튼
 */
this.fnDel = function() {
//	this.gfnGridDel(this.dxGrid);
};

/*
 *	저장 버튼
 */
this.fnSave = function() {

	if (!this.fnSaveValidate()) return false;

	this.dsUpdate.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
	var nrow = this.dsUpdate.addRow();
		this.dsUpdate.setColumn(nrow, "YM_RETIRE", this.dsList.getColumn(i, "YM_RETIRE"));
		this.dsUpdate.setColumn(nrow, "ID_SABUN", this.dsList.getColumn(i, "ID_SABUN"));
		
		
		// 수정후

		this.dsUpdate.setColumn(nrow, "FR_SALARY1",  this.dsSalary.getColumn(0, "DT_FROM1"));
		this.dsUpdate.setColumn(nrow, "TO_SALARY1",  this.dsSalary.getColumn(0, "DT_TO1"));
		this.dsUpdate.setColumn(nrow, "AM_SALARY1",  this.dsSalary.getColumn(0, "AM_INCOME1"));
		this.dsUpdate.setColumn(nrow, "FR_SALARY2",  this.dsSalary.getColumn(0, "DT_FROM2"));
		this.dsUpdate.setColumn(nrow, "TO_SALARY2",  this.dsSalary.getColumn(0, "DT_TO2"));
		this.dsUpdate.setColumn(nrow, "AM_SALARY2",  this.dsSalary.getColumn(0, "AM_INCOME2"));
		this.dsUpdate.setColumn(nrow, "FR_SALARY3",  this.dsSalary.getColumn(0, "DT_FROM3"));
		this.dsUpdate.setColumn(nrow, "TO_SALARY3",  this.dsSalary.getColumn(0, "DT_TO3"));
		this.dsUpdate.setColumn(nrow, "AM_SALARY3",  this.dsSalary.getColumn(0, "AM_INCOME3"));
		this.dsUpdate.setColumn(nrow, "FR_SALARY4",  this.dsSalary.getColumn(0, "DT_FROM4"));
		this.dsUpdate.setColumn(nrow, "TO_SALARY4",  this.dsSalary.getColumn(0, "DT_TO4"));
		this.dsUpdate.setColumn(nrow, "AM_SALARY4",  this.dsSalary.getColumn(0, "AM_INCOME4"));

// 		this.dsUpdate.setColumn(nrow, "FR_SALARY1",  this.dsSalary.getColumn(0, "DT_FROM4"));
// 		this.dsUpdate.setColumn(nrow, "TO_SALARY1",  this.dsSalary.getColumn(0, "DT_TO4"));
// 		this.dsUpdate.setColumn(nrow, "AM_SALARY1",  this.dsSalary.getColumn(0, "AM_INCOME4"));
// 		this.dsUpdate.setColumn(nrow, "FR_SALARY2",  this.dsSalary.getColumn(0, "DT_FROM3"));
// 		this.dsUpdate.setColumn(nrow, "TO_SALARY2",  this.dsSalary.getColumn(0, "DT_TO3"));
// 		this.dsUpdate.setColumn(nrow, "AM_SALARY2",  this.dsSalary.getColumn(0, "AM_INCOME3"));
// 		this.dsUpdate.setColumn(nrow, "FR_SALARY3",  this.dsSalary.getColumn(0, "DT_FROM2"));
// 		this.dsUpdate.setColumn(nrow, "TO_SALARY3",  this.dsSalary.getColumn(0, "DT_TO2"));
// 		this.dsUpdate.setColumn(nrow, "AM_SALARY3",  this.dsSalary.getColumn(0, "AM_INCOME2"));
// 		this.dsUpdate.setColumn(nrow, "FR_SALARY4",  this.dsSalary.getColumn(0, "DT_FROM1"));
// 		this.dsUpdate.setColumn(nrow, "TO_SALARY4",  this.dsSalary.getColumn(0, "DT_TO1"));
// 		this.dsUpdate.setColumn(nrow, "AM_SALARY4",  this.dsSalary.getColumn(0, "AM_INCOME1")); 20200309 수정
		
		// 수정전
// 		this.dsUpdate.setColumn(nrow, "DT_TO1" , this.dsList2.getColumn(3, "DT_TO"));
// 		this.dsUpdate.setColumn(nrow, "DT_FROM1" , this.dsList2.getColumn(3, "DT_FROM"));
// 		this.dsUpdate.setColumn(nrow, "AM_INCOME1" , this.dsList2.getColumn(3, "AM_INCOME"));			
// 		
// 		this.dsUpdate.setColumn(nrow, "DT_TO2" , this.dsList2.getColumn(2, "DT_TO"));
// 		this.dsUpdate.setColumn(nrow, "DT_FROM2" , this.dsList2.getColumn(2, "DT_FROM"));
// 		this.dsUpdate.setColumn(nrow, "AM_INCOME2" , this.dsList2.getColumn(2, "AM_INCOME"));
// 		
// 		this.dsUpdate.setColumn(nrow, "DT_TO3" , this.dsList2.getColumn(1, "DT_TO"));
// 		this.dsUpdate.setColumn(nrow, "DT_FROM3" , this.dsList2.getColumn(1, "DT_FROM"));
// 		this.dsUpdate.setColumn(nrow, "AM_INCOME3" , this.dsList2.getColumn(1, "AM_INCOME"));
// 		
// 		this.dsUpdate.setColumn(nrow, "DT_TO4" , this.dsList2.getColumn(0, "DT_TO"));
// 		this.dsUpdate.setColumn(nrow, "DT_FROM4" , this.dsList2.getColumn(0, "DT_FROM"));
// 		this.dsUpdate.setColumn(nrow, "AM_INCOME4" , this.dsList2.getColumn(0, "AM_INCOME"));

	// 수정전
		trace("this.dsList2.rowcount:"+this.dsList2.rowcount);
		trace(this.dsList2.saveXML());
		trace("this.dsList2.getColumn(0, 'DT_TO') : "+this.dsList2.getColumn(0, "DT_TO"));
		if (this.dsList2.rowcount == 4) {
		
			this.dsUpdate.setColumn(nrow, "DT_TO1" , this.dsList2.getColumn(0, "DT_TO"));
			this.dsUpdate.setColumn(nrow, "DT_FROM1" , this.dsList2.getColumn(0, "DT_FROM"));
			this.dsUpdate.setColumn(nrow, "AM_INCOME1" , this.dsList2.getColumn(0, "AM_INCOME"));			
			
			this.dsUpdate.setColumn(nrow, "DT_TO2" , this.dsList2.getColumn(1, "DT_TO"));
			this.dsUpdate.setColumn(nrow, "DT_FROM2" , this.dsList2.getColumn(1, "DT_FROM"));
			this.dsUpdate.setColumn(nrow, "AM_INCOME2" , this.dsList2.getColumn(1, "AM_INCOME"));
			
			this.dsUpdate.setColumn(nrow, "DT_TO3" , this.dsList2.getColumn(2, "DT_TO"));
			this.dsUpdate.setColumn(nrow, "DT_FROM3" , this.dsList2.getColumn(2, "DT_FROM"));
			this.dsUpdate.setColumn(nrow, "AM_INCOME3" , this.dsList2.getColumn(2, "AM_INCOME"));
			
			this.dsUpdate.setColumn(nrow, "DT_TO4" , this.dsList2.getColumn(3, "DT_TO"));
			this.dsUpdate.setColumn(nrow, "DT_FROM4" , this.dsList2.getColumn(3, "DT_FROM"));
			this.dsUpdate.setColumn(nrow, "AM_INCOME4" , this.dsList2.getColumn(3, "AM_INCOME"));
		} else if (this.dsList2.rowcount == 3) {
		
			this.dsUpdate.setColumn(nrow, "DT_TO1" , "");
			this.dsUpdate.setColumn(nrow, "DT_FROM1" , "");
			this.dsUpdate.setColumn(nrow, "AM_INCOME1" , "");			

			this.dsUpdate.setColumn(nrow, "DT_TO2" , this.dsList2.getColumn(0, "DT_TO"));
			this.dsUpdate.setColumn(nrow, "DT_FROM2" , this.dsList2.getColumn(0, "DT_FROM"));
			this.dsUpdate.setColumn(nrow, "AM_INCOME2" , this.dsList2.getColumn(0, "AM_INCOME"));
			
			this.dsUpdate.setColumn(nrow, "DT_TO3" , this.dsList2.getColumn(1, "DT_TO"));
			this.dsUpdate.setColumn(nrow, "DT_FROM3" , this.dsList2.getColumn(1, "DT_FROM"));
			this.dsUpdate.setColumn(nrow, "AM_INCOME3" , this.dsList2.getColumn(1, "AM_INCOME"));
			
			this.dsUpdate.setColumn(nrow, "DT_TO4" , this.dsList2.getColumn(2, "DT_TO"));
			this.dsUpdate.setColumn(nrow, "DT_FROM4" , this.dsList2.getColumn(2, "DT_FROM"));
			this.dsUpdate.setColumn(nrow, "AM_INCOME4" , this.dsList2.getColumn(2, "AM_INCOME"));
		}
		
		this.dsUpdate.setColumn(nrow, "TT_BONUS", this.dsList.getColumn(i, "AM_ANNUALBONUS"));
		this.dsUpdate.setColumn(nrow, "CT_BONUS", this.dsList.getColumn(i, "QN_BONUS"));
		this.dsUpdate.setColumn(nrow, "AM_VACAALLOW", this.dsList.getColumn(i, "AM_VACAALLOW"));
		this.dsUpdate.setColumn(nrow, "AM_ETCALLOW", this.dsList.getColumn(i, "AM_ETCALLOW"));
		this.dsUpdate.setColumn(nrow, "ID_UPDATE", this.AuthClient.ID_USER);
		this.dsUpdate.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
		this.dsUpdate.setColumn(nrow, "AM_HOPERETIRE", this.dsList.getColumn(i, "AM_HOPERETIRE"));

	}

	/*
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		trace("flag->" + flag);
		switch(flag) {
			case "I":
			case "U":
				var nrow = this.dsUpdate.addRow();
				this.dsUpdate.setColumn(nrow, "YM_RETIRE", this.dsList.getColumn(i, "YM_RETIRE"));
				this.dsUpdate.setColumn(nrow, "ID_SABUN", this.dsList.getColumn(i, "ID_SABUN"));
				
				// 수정후
				this.dsUpdate.setColumn(nrow, "FR_SALARY1",  this.dsSalary.getColumn(0, "DT_FROM1"));
				this.dsUpdate.setColumn(nrow, "TO_SALARY1",  this.dsSalary.getColumn(0, "DT_TO1"));
				this.dsUpdate.setColumn(nrow, "AM_SALARY1",  this.dsSalary.getColumn(0, "AM_INCOME1"));
				this.dsUpdate.setColumn(nrow, "FR_SALARY2",  this.dsSalary.getColumn(0, "DT_FROM2"));
				this.dsUpdate.setColumn(nrow, "TO_SALARY2",  this.dsSalary.getColumn(0, "DT_TO2"));
				this.dsUpdate.setColumn(nrow, "AM_SALARY2",  this.dsSalary.getColumn(0, "AM_INCOME2"));
				this.dsUpdate.setColumn(nrow, "FR_SALARY3",  this.dsSalary.getColumn(0, "DT_FROM3"));
				this.dsUpdate.setColumn(nrow, "TO_SALARY3",  this.dsSalary.getColumn(0, "DT_TO3"));
				this.dsUpdate.setColumn(nrow, "AM_SALARY3",  this.dsSalary.getColumn(0, "AM_INCOME3"));
				this.dsUpdate.setColumn(nrow, "FR_SALARY4",  this.dsSalary.getColumn(0, "DT_FROM4"));
				this.dsUpdate.setColumn(nrow, "TO_SALARY4",  this.dsSalary.getColumn(0, "DT_TO4"));
				this.dsUpdate.setColumn(nrow, "AM_SALARY4",  this.dsSalary.getColumn(0, "AM_INCOME4"));

				// 수정전
				this.dsUpdate.setColumn(nrow, "DT_TO1" , this.dsList2.getColumn(0, "DT_TO"));
				this.dsUpdate.setColumn(nrow, "DT_FROM1" , this.dsList2.getColumn(0, "DT_FROM"));
				this.dsUpdate.setColumn(nrow, "AM_INCOME1" , this.dsList2.getColumn(0, "AM_INCOME"));			
				
				this.dsUpdate.setColumn(nrow, "DT_TO2" , this.dsList2.getColumn(1, "DT_TO"));
				this.dsUpdate.setColumn(nrow, "DT_FROM2" , this.dsList2.getColumn(1, "DT_FROM"));
				this.dsUpdate.setColumn(nrow, "AM_INCOME2" , this.dsList2.getColumn(1, "AM_INCOME"));
				
				this.dsUpdate.setColumn(nrow, "DT_TO3" , this.dsList2.getColumn(2, "DT_TO"));
				this.dsUpdate.setColumn(nrow, "DT_FROM3" , this.dsList2.getColumn(2, "DT_FROM"));
				this.dsUpdate.setColumn(nrow, "AM_INCOME3" , this.dsList2.getColumn(2, "AM_INCOME"));
				
				this.dsUpdate.setColumn(nrow, "DT_TO4" , this.dsList2.getColumn(3, "DT_TO"));
				this.dsUpdate.setColumn(nrow, "DT_FROM4" , this.dsList2.getColumn(3, "DT_FROM"));
				this.dsUpdate.setColumn(nrow, "AM_INCOME4" , this.dsList2.getColumn(3, "AM_INCOME"));

				
				this.dsUpdate.setColumn(nrow, "TT_BONUS", this.dsList.getColumn(i, "AM_ANNUALBONUS"));
				this.dsUpdate.setColumn(nrow, "CT_BONUS", this.dsList.getColumn(i, "QN_BONUS"));
				this.dsUpdate.setColumn(nrow, "AM_VACAALLOW", this.dsList.getColumn(i, "AM_VACAALLOW"));
				this.dsUpdate.setColumn(nrow, "AM_ETCALLOW", this.dsList.getColumn(i, "AM_ETCALLOW"));
				this.dsUpdate.setColumn(nrow, "ID_UPDATE", this.AuthClient.ID_USER);
				this.dsUpdate.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
				this.dsUpdate.setColumn(nrow, "AM_HOPERETIRE", this.dsList.getColumn(i, "AM_HOPERETIRE"));

				break;
			case "D":
				break;
		}
	}
	*/
	
	if (this.dsUpdate.rowcount == 0) return;

	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "update=dsUpdate";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";

	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	//this.gfnExcelExport(this.dxGrid);
};

/*
 *	출력 버튼
 */
this.fnPrint = function() {
};

/************************************************************************
 * Validate
 ************************************************************************/
this.fnSelectValidate = function() {

 	var validate = true;
	
	//적용년월
	if (this.gfnIsNull(this.ctclYM_BASE.form.TextBox.value)) {
		this.fnVaidateCallback = function() {
			this.ctclYM_BASE.form.TextBox.setFocus();
		}
		this.gfnAlert("적용년월 입력하세요.");
		return false;
	}
	
	//법인
	if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
		validate = false;
		this.fnVaidateCallback = function() {
			this.ccfCD_CORP.form.CDTextBox.setFocus();
		}
		this.gfnAlert("법인코드를 입력하세요.", "fnVaidateCallback");
	}
	
	//사번
	if (this.gfnIsNull(this.ccfID_SABUN.form.CDTextBox.value)) {
		validate = false;
		this.fnVaidateCallback = function() {
			this.ccfID_SABUN.form.CDTextBox.setFocus();
		}
		this.gfnAlert("사번을 입력하세요.", "fnVaidateCallback");
	}

 	return validate;
};

this.fnSaveValidate = function() {

 	var validate = true;
	
	var DT_FROM1 = this.dsSalary.getColumn(0, "DT_FROM1");
	var DT_TO1 = this.dsSalary.getColumn(0, "DT_TO1");
	var DT_FROM2 = this.dsSalary.getColumn(0, "DT_FROM2");
	var DT_TO2 = this.dsSalary.getColumn(0, "DT_TO2");
	var DT_FROM3 = this.dsSalary.getColumn(0, "DT_FROM3");
	var DT_TO3 = this.dsSalary.getColumn(0, "DT_TO3");
	var DT_FROM4 = this.dsSalary.getColumn(0, "DT_FROM4");
	var DT_TO4 = this.dsSalary.getColumn(0, "DT_TO4");

	//법인
	if (this.gfnIsNull(DT_FROM2) || this.gfnIsNull(DT_TO2) || 
		this.gfnIsNull(DT_FROM3) || this.gfnIsNull(DT_TO3) || 
		this.gfnIsNull(DT_FROM4) || this.gfnIsNull(DT_TO4) ) {
		validate = false;
		this.fnVaidateCallback = function() {
			//this.ccfCD_CORP.form.CDTextBox.setFocus();
		}
		this.gfnAlert("급여내역 기간을 입력하세요.", "fnVaidateCallback");
	}

 	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.fnSetButton();	
		this.fnSelectSalary();
	}
	else if (svcID == "select2") {

		this.dsSalary.updatecontrol = false;

		if(this.dsList2.rowcount == 4 ){
		
			this.dsSalary.setColumn(0, "DT_TO1" , this.dsList2.getColumn(0, "DT_TO"));
			this.dsSalary.setColumn(0, "DT_FROM1" , this.dsList2.getColumn(0, "DT_FROM"));
			this.dsSalary.setColumn(0, "AM_INCOME1" , this.dsList2.getColumn(0, "AM_INCOME"));
			this.dsSalary.setColumn(0, "QN_WORK1" , this.dsList2.getColumn(0, "QN_WORK"));
			
			this.dsSalary.setColumn(0, "DT_TO2" , this.dsList2.getColumn(1, "DT_TO"));
			this.dsSalary.setColumn(0, "DT_FROM2" , this.dsList2.getColumn(1, "DT_FROM"));
			this.dsSalary.setColumn(0, "AM_INCOME2" , this.dsList2.getColumn(1, "AM_INCOME"));
			this.dsSalary.setColumn(0, "QN_WORK2" , this.dsList2.getColumn(1, "QN_WORK"));
			
			this.dsSalary.setColumn(0, "DT_TO3" , this.dsList2.getColumn(2, "DT_TO"));
			this.dsSalary.setColumn(0, "DT_FROM3" , this.dsList2.getColumn(2, "DT_FROM"));
			this.dsSalary.setColumn(0, "AM_INCOME3" , this.dsList2.getColumn(2, "AM_INCOME"));
			this.dsSalary.setColumn(0, "QN_WORK3" , this.dsList2.getColumn(2, "QN_WORK"));
			
			this.dsSalary.setColumn(0, "DT_TO4" , this.dsList2.getColumn(3, "DT_TO"));
			this.dsSalary.setColumn(0, "DT_FROM4" , this.dsList2.getColumn(3, "DT_FROM"));
			this.dsSalary.setColumn(0, "AM_INCOME4" , this.dsList2.getColumn(3, "AM_INCOME"));
			this.dsSalary.setColumn(0, "QN_WORK4" , this.dsList2.getColumn(3, "QN_WORK"));	
			
		} else if (this.dsList2.rowcount == 3){
		
			this.dsSalary.setColumn(0, "DT_TO2" , this.dsList2.getColumn(0, "DT_TO"));
			this.dsSalary.setColumn(0, "DT_FROM2" , this.dsList2.getColumn(0, "DT_FROM"));
			this.dsSalary.setColumn(0, "AM_INCOME2" , this.dsList2.getColumn(0, "AM_INCOME"));
			this.dsSalary.setColumn(0, "QN_WORK2" , this.dsList2.getColumn(0, "QN_WORK"));
			
			this.dsSalary.setColumn(0, "DT_TO3" , this.dsList2.getColumn(1, "DT_TO"));
			this.dsSalary.setColumn(0, "DT_FROM3" , this.dsList2.getColumn(1, "DT_FROM"));
			this.dsSalary.setColumn(0, "AM_INCOME3" , this.dsList2.getColumn(1, "AM_INCOME"));
			this.dsSalary.setColumn(0, "QN_WORK3" , this.dsList2.getColumn(1, "QN_WORK"));
			
			this.dsSalary.setColumn(0, "DT_TO4" , this.dsList2.getColumn(2, "DT_TO"));
			this.dsSalary.setColumn(0, "DT_FROM4" , this.dsList2.getColumn(2, "DT_FROM"));
			this.dsSalary.setColumn(0, "AM_INCOME4" , this.dsList2.getColumn(2, "AM_INCOME"));
			this.dsSalary.setColumn(0, "QN_WORK4" , this.dsList2.getColumn(2, "QN_WORK"));	
			
		}


		var bSucc = this.dsSalary.setRowType(0, Dataset.ROWTYPE_NORMAL);	// 1 초기 행의 상태 2추가 4수정 8삭제
		this.dsSalary.updatecontrol = true;
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.gfnAlert("작업이 완료되었습니다.");
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
};

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {

 	switch(id) {
		case "ccfCD_CORP": // 법인코드
			dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
			dsUserParam.setColumn(nrow, "CD_DEPT", this.AuthClient.CD_DEPT);
			break;

		case "ccfID_SABUN"://사번
			if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
				this.fnBeforeUserCallback = function() {
						this.ccfCD_CORP.form.CDTextBox.setFocus();
					}
					this.gfnAlert("법인코드를 입력하세요.", "fnBeforeUserCallback");
					return false;
			}
			dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
 			dsUserParam.setColumn(nrow, "CD_DEPT", "%");
 			dsUserParam.setColumn(nrow, "TY_RETIRE", "04");		
			break;

		default:
 	}
 	return true;
};

this.fnAfterCDTextChanged = function(id, codeFindData) {

	var arr = codeFindData;
	
	switch(id) {
		case "ccfCD_CORP": // 법인코드
			this.ccfID_SABUN.form.CDTextBox.set_value("");
			this.ccfID_SABUN.form.DSTextBox.set_value("");
			break;
			
		default:
	}

	this.fnSearchInit();
};

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/

 /************************************************************************
 * 확장버튼 이벤트
 ************************************************************************/
 this.fnExtBtnEvent = function(btn){
 };
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		// 폼상태 초기화
		this.gfnSetFormStatus(this);
		
		var compArr = this.divData.form.components;
		for(var i=0; i < compArr.length; i++){
			if(compArr[i] instanceof nexacro.Edit){
				compArr[i].set_value("");
			}
		}
	}
};
this.dsList_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		if(this.dsList.getRowType(0) == Dataset.ROWTYPE_UPDATE){
			this.FormBtns.Save.set_enable(true);
		}
	}
	//this.dsList.setColumn(e.row, this.ucFlag, "U");
};
this.dsList2_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	//this.dsList2.setColumn(e.row, this.ucFlag, "U");
};
this.dsSalary_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		if(this.dsSalary.getRowType(0) == Dataset.ROWTYPE_UPDATE){
			this.FormBtns.Save.set_enable(true);
		}
		
		// 일수계산 1
		if( e.columnid == "DT_FROM1" || e.columnid == "DT_TO1"){
			var QN_WORK = 0;
			var DT_FROM = this.dsSalary.getColumn(0, "DT_FROM1");
			var DT_TO = this.dsSalary.getColumn(0, "DT_TO1");
			if(!this.gfnIsNull(DT_FROM) && !this.gfnIsNull(DT_TO)){
				QN_WORK = nexacro.toNumber(DT_TO) - nexacro.toNumber(DT_FROM) + 1
			}
			this.dsSalary.setColumn(0, "QN_WORK1", QN_WORK);
		}

		// 일수계산 2
		if( e.columnid == "DT_FROM2" || e.columnid == "DT_TO2"){
			var QN_WORK = 0;
			var DT_FROM = this.dsSalary.getColumn(0, "DT_FROM2");
			var DT_TO = this.dsSalary.getColumn(0, "DT_TO2");
			if(!this.gfnIsNull(DT_FROM) && !this.gfnIsNull(DT_TO)){
				QN_WORK = nexacro.toNumber(DT_TO) - nexacro.toNumber(DT_FROM) + 1
			}
			this.dsSalary.setColumn(0, "QN_WORK2", QN_WORK);
		}

		// 일수계산 3
		if( e.columnid == "DT_FROM3" || e.columnid == "DT_TO3"){
			var QN_WORK = 0;
			var DT_FROM = this.dsSalary.getColumn(0, "DT_FROM3");
			var DT_TO = this.dsSalary.getColumn(0, "DT_TO3");
			if(!this.gfnIsNull(DT_FROM) && !this.gfnIsNull(DT_TO)){
				QN_WORK = nexacro.toNumber(DT_TO) - nexacro.toNumber(DT_FROM) + 1
			}
			this.dsSalary.setColumn(0, "QN_WORK3", QN_WORK);
		}

		// 일수계산 4
		if( e.columnid == "DT_FROM4" || e.columnid == "DT_TO4"){
			var QN_WORK = 0;
			var DT_FROM = this.dsSalary.getColumn(0, "DT_FROM4");
			var DT_TO = this.dsSalary.getColumn(0, "DT_TO4");
			
			if(!this.gfnIsNull(DT_FROM) && !this.gfnIsNull(DT_TO)){
				QN_WORK = nexacro.toNumber(DT_TO) - nexacro.toNumber(DT_FROM) + 1
			}
			this.dsSalary.setColumn(0, "QN_WORK4", QN_WORK);
		}
	}
};

this.divData_edtAM_HOPERETIRE_canchange = function(obj:nexacro.MaskEdit,e:nexacro.ChangeEventInfo)
{
	this.FormBtns.Save.set_enable(true);
};]]></Script>
    <Bind>
      <BindItem id="item0" compid="divData.form.edtID_SABUN" propid="value" datasetid="dsList" columnid="ID_SABUN"/>
      <BindItem id="item1" compid="divData.form.edtDS_HNAME" propid="value" datasetid="dsList" columnid="DS_HNAME"/>
      <BindItem id="item2" compid="divData.form.edtYM_RETIRE" propid="value" datasetid="dsList" columnid="DT_RETIRE"/>
      <BindItem id="item3" compid="divData.form.edtDT_JOIN" propid="value" datasetid="dsList" columnid="DT_JOIN"/>
      <BindItem id="item4" compid="divData.form.edtDS_DEPT" propid="value" datasetid="dsList" columnid="DS_ORG2"/>
      <BindItem id="item5" compid="divData.form.edtDT_START" propid="value" datasetid="dsList" columnid="DT_START"/>
      <BindItem id="item6" compid="divData.form.edtDT_RETIRE" propid="value" datasetid="dsList" columnid="DT_RETIRE"/>
      <BindItem id="item7" compid="divData.form.edtAM_INCOMESUM" propid="value" datasetid="dsList" columnid="AM_INCOMESUM"/>
      <BindItem id="item8" compid="divData.form.edtAM_ANNUALBONUS" propid="value" datasetid="dsList" columnid="AM_ANNUALBONUS"/>
      <BindItem id="item9" compid="divData.form.edtQN_BONUS" propid="value" datasetid="dsList" columnid="QN_BONUS"/>
      <BindItem id="item10" compid="divData.form.edtAM_AVGBONUS" propid="value" datasetid="dsList" columnid="AM_AVGBONUS"/>
      <BindItem id="item11" compid="divData.form.edtAM_VACAALLOW" propid="value" datasetid="dsList" columnid="AM_VACAALLOW"/>
      <BindItem id="item12" compid="divData.form.edtAM_AVGVACAALLOW" propid="value" datasetid="dsList" columnid="AM_AVGVACAALLOW"/>
      <BindItem id="item13" compid="divData.form.edtAM_ETCAALLOW" propid="value" datasetid="dsList" columnid="AM_ETCALLOW"/>
      <BindItem id="item14" compid="divData.form.edtAM_AVGETCAALLOW" propid="value" datasetid="dsList" columnid="AM_AVGETCALLOW"/>
      <BindItem id="item15" compid="divData.form.edtAM_HOPERETIRE" propid="value" datasetid="dsList" columnid="AM_HOPERETIRE"/>
      <BindItem id="item16" compid="divData.form.ctclDT_JOIN" propid="value" datasetid="dsList" columnid="DT_JOIN"/>
      <BindItem id="item17" compid="divData.form.edtDT_FROM1" propid="value" datasetid="dsSalary" columnid="DT_FROM1"/>
      <BindItem id="item18" compid="divData.form.edtDT_TO1" propid="value" datasetid="dsSalary" columnid="DT_TO1"/>
      <BindItem id="item19" compid="divData.form.edtDT_FROM2" propid="value" datasetid="dsSalary" columnid="DT_FROM2"/>
      <BindItem id="item20" compid="divData.form.edtDT_TO2" propid="value" datasetid="dsSalary" columnid="DT_TO2"/>
      <BindItem id="item21" compid="divData.form.edtDT_FROM3" propid="value" datasetid="dsSalary" columnid="DT_FROM3"/>
      <BindItem id="item22" compid="divData.form.edtDT_TO3" propid="value" datasetid="dsSalary" columnid="DT_TO3"/>
      <BindItem id="item23" compid="divData.form.edtDT_FROM4" propid="value" datasetid="dsSalary" columnid="DT_FROM4"/>
      <BindItem id="item24" compid="divData.form.edtDT_TO4" propid="value" datasetid="dsSalary" columnid="DT_TO4"/>
      <BindItem id="item25" compid="divData.form.edtAM_INCOME1" propid="value" datasetid="dsSalary" columnid="AM_INCOME1"/>
      <BindItem id="item26" compid="divData.form.edtAM_INCOME2" propid="value" datasetid="dsSalary" columnid="AM_INCOME2"/>
      <BindItem id="item27" compid="divData.form.edtAM_INCOME3" propid="value" datasetid="dsSalary" columnid="AM_INCOME3"/>
      <BindItem id="item28" compid="divData.form.edtAM_INCOME4" propid="value" datasetid="dsSalary" columnid="AM_INCOME4"/>
      <BindItem id="item29" compid="divData.form.edtQN_WORK1" propid="value" datasetid="dsSalary" columnid="QN_WORK1"/>
      <BindItem id="item30" compid="divData.form.edtQN_WORK2" propid="value" datasetid="dsSalary" columnid="QN_WORK2"/>
      <BindItem id="item31" compid="divData.form.edtQN_WORK3" propid="value" datasetid="dsSalary" columnid="QN_WORK3"/>
      <BindItem id="item32" compid="divData.form.edtQN_WORK4" propid="value" datasetid="dsSalary" columnid="QN_WORK4"/>
    </Bind>
  </Form>
</FDL>
