<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="기성미지급분할(긴급자금)" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Div id="ccfCD_SITE" CodeFindName="DZX_CFSITE" CDTextWidth="80" taborder="0" left="0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Combo id="cboNO_DGR" taborder="4" left="ccfCD_SITE:0.0" top="10.0" width="100" height="24.0" innerdataset="dsNO_DGR" datacolumn="DS_DGR" codecolumn="NO_DGR" value="" index="-1"/>
              <Static id="staYM_WORK" taborder="1" text="기성년월" left="cboNO_DGR:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYM_WORK" taborder="2" left="staYM_WORK:0.0" top="10.0" width="80" height="24.0" dateformat="yyyy-mm" editformat="yyyymm" url="cmm::cmmCalMM.xfdl"/>
              <Static id="staCD_SITE" taborder="3" text="현장코드" left="ctclYM_WORK:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Static id="staNO_HADOCONT" taborder="5" text="계약번호" left="ctclYM_WORK:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfNO_HADOCONT" CodeFindName="DWX_CFHADO_01" CDTextWidth="100" taborder="6" left="staNO_HADOCONT:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staCD_VENDOR" taborder="7" text="업체코드" left="ccfNO_HADOCONT:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_VENDOR" CodeFindName="DWX_CFHADOVENDOR_01" CDTextWidth="100" taborder="8" left="staCD_VENDOR:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg" ondragmove="divData_ondragmove">
          <Layouts>
            <Layout>
              <Div id="divSplitter" taborder="1" left="0" right="0" cursor="ns-resize" ondrag="divData_divSplitter_ondrag" height="3" top="130" background="navy"/>
              <Div id="divDataTop" taborder="0" left="0" top="0" bottom="divSplitter:5" right="0">
                <Layouts>
                  <Layout>
                    <Grid id="objGrid" taborder="0" left="0" top="0" right="0" bottom="35" scrollbartype="none none"/>
                    <Static id="sta02" taborder="1" text="기성미지급분할내역" left="0" top="103" right="0" height="22" cssclass="sta_TITLE_Bg"/>
                  </Layout>
                </Layouts>
              </Div>
              <Div id="divDataBottom" taborder="1" left="0" right="0" top="divSplitter:5" bottom="0" text="">
                <Layouts>
                  <Layout>
                    <Grid id="objGridSub" taborder="1" left="0" top="0" right="0" bottom="0"/>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	this.fnSetCombo();
	
	// 기성차수 조회조건 보이기/숨기기
	this.YN_DGR = this.gfnGetConfig("DW" , "YN_DGR");
	if(this.YN_DGR == "Y")
	{
		this.divSearch.form.cboNO_DGR.set_width(100);
		this.divSearch.form.cboNO_DGR.set_readonly(false);
		this.divSearch.form.resetScroll();
	}
	else
	{
		this.divSearch.form.cboNO_DGR.set_width(0);
		this.divSearch.form.cboNO_DGR.set_readonly(true);
		this.divSearch.form.resetScroll();
	}
	
	if(!this.gfnIsNull(this.getOwnerFrame().CD_SITE) && !this.gfnIsNull(this.getOwnerFrame().YM_WORK))
	{
		this.dsSearch.setColumn(0,"CD_SITE", this.getOwnerFrame().CD_SITE);
		this.ccfCD_SITE.form.DSTextBox.set_value(this.getOwnerFrame().DS_SITE);
		this.dsSearch.setColumn(0,"YM_WORK", this.getOwnerFrame().YM_WORK);
		this.dsSearch.setColumn(0,"NO_HADOCONT", this.getOwnerFrame().NO_HADOCONT);
		this.ccfNO_HADOCONT.form.DSTextBox.set_value(this.getOwnerFrame().DS_HADOCONT);	
		this.dsSearch.setColumn(0,"CD_VENDOR", this.getOwnerFrame().CD_VENDOR);
		this.ccfCD_VENDOR.form.DSTextBox.set_value(this.getOwnerFrame().DS_VENDOR);	
		this.dsSearch.setColumn(0,"NO_DGR", this.getOwnerFrame().NO_DGR);
		
		this.FormBtns.Select.click();
	}else{
		var today = this.gfnGetDate();
		this.dsSearch.setColumn(0,"YM_WORK",today.substr(0,6));
	}
	
	//this.ccfCD_VENDOR.form.fnCodeFindLoad();
	//this.FormBtns.Select.click();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결
 ************************************************************************/
this.fnSetExtendButton = function() {

};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_SITE = this.divSearch.form.ccfCD_SITE;
	this.ctclYM_WORK = this.divSearch.form.ctclYM_WORK;
	this.ccfNO_HADOCONT = this.divSearch.form.ccfNO_HADOCONT;
	this.ccfCD_VENDOR = this.divSearch.form.ccfCD_VENDOR;
	this.cboNO_DGR =  this.divSearch.form.cboNO_DGR;
	
	this.dxGrid = this.divData.form.divDataTop.form.objGrid;
	this.dxGridSub = this.divData.form.divDataBottom.form.objGridSub;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {	
	this.ccfCD_SITE.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.ccfNO_HADOCONT.CodeFindName = "DWX_CFHADO_01";
	this.ccfNO_HADOCONT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfNO_HADOCONT.AfterCDTextChanged = "ccfNO_HADOCONT_AfterCDTextChanged";
	this.ccfCD_VENDOR.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";	
	this.ccfCD_VENDOR.AfterCDTextChanged = "ccfCD_VENDOR_AfterCDTextChanged";
	
	this.gfnGridInit(this.dxGrid, this.dsList, "DW", "DWB_HDLEDGERSPLTLDGR");	
	this.gfnGridInit(this.dxGridSub, this.dsListSub, "DW", "DWB_HDLEDGERSPLT");

	this.dxGridSub.EnterCell = "fnGridSub_EnterCell";	
	this.dxGridSub.BeforeUserDataSetParam = "fnGridSub_BeforeUserDataSetParam";

};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("TY_WRK", "string");
	this.dsSelect.addColumn("CD_SITE", "string");
	this.dsSelect.addColumn("NO_HADOCONT", "string");
	this.dsSelect.addColumn("YM_WORK", "string");
	this.dsSelect.addColumn("NO_DGR", "string");
	this.dsSelect.addColumn("CD_VENDOR", "string");
	this.dsSelect.addColumn("DS_CONTMETHOD", "string");
	
	this.dsSelectSub = new Dataset();
	this.dsSelectSub.addColumn("TY_WRK", "string");
	this.dsSelectSub.addColumn("CD_SITE", "string");
	this.dsSelectSub.addColumn("NO_HADOCONT", "string");
	this.dsSelectSub.addColumn("YM_WORK", "string");
	this.dsSelectSub.addColumn("NO_DGR", "string");
	this.dsSelectSub.addColumn("CD_VENDOR", "string");
	this.dsSelectSub.addColumn("DS_CONTMETHOD", "string");

	this.dsSave = new Dataset();
	this.dsSave.addColumn("TY_WRK", "string");
	this.dsSave.addColumn("ID_USER", "string");
	this.dsSave.addColumn("CD_SITE", "string");
	this.dsSave.addColumn("NO_HADOCONT", "string");
	this.dsSave.addColumn("YM_WORK", "string");
	this.dsSave.addColumn("NO_DGR", "string");
	this.dsSave.addColumn("CD_VENDOR", "string");
	this.dsSave.addColumn("NO_SPLT", "string");
	this.dsSave.addColumn("YN_TXVOL", "string");
	this.dsSave.addColumn("AM_SPLT", "bigdecimal");
	this.dsSave.addColumn("CD_PAYMENT", "string");
	this.dsSave.addColumn("DT_PAYMENT", "string");
	this.dsSave.addColumn("DS_OLN", "string");
	this.dsSave.addColumn("DS_RMKS", "string");

	this.dsExec = new Dataset();
	this.dsExec.addColumn("TY_WRK", "string");
	this.dsExec.addColumn("ID_USER", "string");
	this.dsExec.addColumn("CD_SITE", "string");
	this.dsExec.addColumn("NO_HADOCONT", "string");
	this.dsExec.addColumn("YM_WORK", "string");
	this.dsExec.addColumn("NO_DGR", "string");
	this.dsExec.addColumn("CD_VENDOR", "string");
	
	this.dsCombo = new Dataset();
	this.dsCombo.addColumn("CD_SITE", "string");
	this.dsCombo.addColumn("YM_WORK", "string");
	this.dsCombo.addColumn("DS_CONTMETHOD", "string");
};

/************************************************************************
 * 버튼 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	this.gfnGridBeforeSelect(this.dxGridSub);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "TY_WRK", "Q");
	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsSelect.setColumn(0, "NO_HADOCONT", this.dsSearch.getColumn(0, "NO_HADOCONT"));
	this.dsSelect.setColumn(0, "YM_WORK", this.dsSearch.getColumn(0, "YM_WORK"));
	this.dsSelect.setColumn(0, "NO_DGR", this.dsSearch.getColumn(0, "NO_DGR"));
	this.dsSelect.setColumn(0, "CD_VENDOR", this.dsSearch.getColumn(0, "CD_VENDOR"));
	if(!this.gfnIsNull(this.getOwnerFrame().DS_CONTMETHOD)){
		this.dsSelect.setColumn(0, "DS_CONTMETHOD", this.getOwnerFrame().DS_CONTMETHOD);
	}else{
		this.dsSelect.setColumn(0, "DS_CONTMETHOD", this.FormInfo.DS_PARAM);
	}
	
	
	// 디테일 파마리터 데이터셋 셋팅
	this.dsSelectSub.clearData();
	this.dsSelectSub.addRow();

	this.dsSelectSub.setColumn(0, "TY_WRK", "Q");
	this.dsSelectSub.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsSelectSub.setColumn(0, "NO_HADOCONT", this.dsSearch.getColumn(0, "NO_HADOCONT"));
	this.dsSelectSub.setColumn(0, "YM_WORK", this.dsSearch.getColumn(0, "YM_WORK"));
	this.dsSelectSub.setColumn(0, "NO_DGR", this.dsSearch.getColumn(0, "NO_DGR"));
	this.dsSelectSub.setColumn(0, "CD_VENDOR", this.dsSearch.getColumn(0, "CD_VENDOR"));
	if(!this.gfnIsNull(this.getOwnerFrame().DS_CONTMETHOD)){
		this.dsSelectSub.setColumn(0, "DS_CONTMETHOD", this.getOwnerFrame().DS_CONTMETHOD);
	}else{
		this.dsSelectSub.setColumn(0, "DS_CONTMETHOD", this.FormInfo.DS_PARAM);
	}
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect d_select=dsSelectSub";
	var outData     = "dsList=select0 dsListSub=d_select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/************************************************************************
 * 서브 버튼 이벤트
 ************************************************************************/

/*
 *	서브 저장 버튼
 */
this.fnSave = function() {
      if(this.dsListSub.rowcount < 1) return;
      if (!this.gfnGridValidate(this.dxGridSub)) return;

      this.dxGridSub.updateToDataset();
      this.dsSave.clearData();
   
      for (var i = 0; i < this.dsListSub.rowcount; i++) {
         var flag = this.gfnGetFlag(this.dsListSub, i);
         switch(flag) {
         case "I":
         case "U":
         case "D":
         var nrow = this.dsSave.addRow();      
            this.dsSave.setColumn(nrow, "TY_WRK", flag);
            this.dsSave.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
            this.dsSave.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
            this.dsSave.setColumn(nrow, "NO_HADOCONT", this.dsSearch.getColumn(0, "NO_HADOCONT"));
            this.dsSave.setColumn(nrow, "YM_WORK", this.dsSearch.getColumn(0, "YM_WORK"));
            this.dsSave.setColumn(nrow, "NO_DGR", this.dsSearch.getColumn(0, "NO_DGR"));
            this.dsSave.setColumn(nrow, "CD_VENDOR", this.dsSearch.getColumn(0, "CD_VENDOR"));
            this.dsSave.setColumn(nrow, "NO_SPLT", this.dsListSub.getColumn(i, "NO_SPLT"));
            this.dsSave.setColumn(nrow, "YN_TXVOL", this.dsListSub.getColumn(i, "YN_TXVOL"));
            this.dsSave.setColumn(nrow, "AM_SPLT", this.dsListSub.getColumn(i, "AM_SPLT"));
            this.dsSave.setColumn(nrow, "CD_PAYMENT", this.dsListSub.getColumn(i, "CD_PAYMENT"));
            this.dsSave.setColumn(nrow, "DT_PAYMENT", this.dsListSub.getColumn(i, "DT_PAYMENT"));
            this.dsSave.setColumn(nrow, "DS_OLN", this.dsListSub.getColumn(i, "DS_OLN"));
            this.dsSave.setColumn(nrow, "DS_RMKS", this.dsListSub.getColumn(i, "DS_RMKS"));
         break;
      }
   }
   
  if (this.dsSave.rowcount == 0) return;
  
  
   this.dsExec.clearData();
   this.dsExec.addRow();
   
   this.dsExec.setColumn(0, "TY_WRK", "CHK");
   this.dsExec.setColumn(0, "ID_USER", this.AuthClient.ID_USER);
   this.dsExec.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
   this.dsExec.setColumn(0, "NO_HADOCONT", this.dsSearch.getColumn(0, "NO_HADOCONT"));
   this.dsExec.setColumn(0, "YM_WORK", this.dsSearch.getColumn(0, "YM_WORK"));
   this.dsExec.setColumn(0, "NO_DGR", this.dsSearch.getColumn(0, "NO_DGR"));
   this.dsExec.setColumn(0, "CD_VENDOR", this.dsSearch.getColumn(0, "CD_VENDOR"));
   
   var strSvcId    = "save";
   var strSvcType  = "save";
   var inProc      = "_dsProc";
    var inData     = "d_save=dsSave d_exec=dsExec";
   var outData     = "";
   var strArg      = "";
   var callBackFnc = "fnCallback";
   
   this.gfnTransaction( strSvcId ,    // transaction을 구분하기 위한 svc id값
                  strSvcType ,    // transaction을 요청할 구분
                  inProc,         // Procedure 정보 Dataset 이름
                  inData ,       // 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
                  outData ,       // 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
                  strArg,          // 입력갑스로 보낼 arguments, strFormData="20120607"
                  callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
   var nrow = this.gfnGridAdd(this.dxGridSub, "bottom"); // top (default), bottom, current

   this.dsListSub.set_enableevent(false);
   this.dsListSub.setColumn(nrow, "YN_EDIT", "Y");
   this.dsListSub.setColumn(nrow, "CD_PAYMENT", this.dsList.getColumn(this.dsList.rowposition, "CD_PAYMENT"));
   this.dsListSub.setColumn(nrow, "DS_PAYMENT", this.dsList.getColumn(this.dsList.rowposition, "DS_PAYMENT"));
   this.dsListSub.setColumn(nrow, "DT_PAYMENT", this.dsList.getColumn(this.dsList.rowposition, "DT_PAYMENT")); 
   this.dsListSub.set_enableevent(true);  
}


/*
 *   삭제 버튼
*/
this.fnDel = function() {
	this.gfnGridDel(this.dxGridSub);
}

this.fnExcel = function() {
	this.gfnExcelExport(this.dxGridSub);
}

/************************************************************************
 * Validate
 ************************************************************************/
this.fnSelectValidate = function() {
	var validate = true;
	
	if (this.gfnIsNull(this.dsSearch.getColumn(0,"CD_SITE"))) {
		validate = false;
	
		this.fnVaidateCallback = function() {
			this.divSearch.form.ccfCD_SITE.form.CDTextBox.setFocus();
		}
		this.gfnAlert("현장코드를 입력하세요.", "fnVaidateCallback");
	}else if(this.gfnIsNull(this.dsSearch.getColumn(0,"YM_WORK"))){
		validate = false;
	
		this.fnVaidateCallback = function() {
			this.divSearch.form.ctclYM_WORK.form.TextBox.setFocus();
		}
		this.gfnAlert("기성년월을 입력하세요.", "fnVaidateCallback");
	}else if(this.gfnIsNull(this.dsSearch.getColumn(0,"NO_HADOCONT"))){
		validate = false;
	
		this.fnVaidateCallback = function() {
			this.divSearch.form.ccfNO_HADOCONT.CDTextBox.setFocus();
		}
		this.gfnAlert("계약번호를 입력하세요.", "fnVaidateCallback");
	}else if(this.gfnIsNull(this.dsSearch.getColumn(0,"CD_VENDOR"))){
		validate = false;
	
		this.fnVaidateCallback = function() {
			this.divSearch.form.ccfCD_VENDOR.CDTextBox.setFocus();
		}
		this.gfnAlert("업체코드를 입력하세요.", "fnVaidateCallback");
	}
	
	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *   콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
   if (svcID == "select") {
      this.gfnGridAfterSelect(this.dxGrid);   
   }
		else if(svcID == "save"){
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
};
/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if (id == "ccfNO_HADOCONT") {
		dsUserParam.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));	// 현장코드
		dsUserParam.setColumn(nrow, "YM_WORK", this.dsSearch.getColumn(0, "YM_WORK"));	// 기성년월
		dsUserParam.setColumn(nrow, "TY_DIV", "APRV");		
		if(!this.gfnIsNull(this.getOwnerFrame().DS_CONTMETHOD)){
			dsUserParam.setColumn(nrow, "DS_CONTMETHOD", this.getOwnerFrame().DS_CONTMETHOD);	
		}else{
			dsUserParam.setColumn(nrow, "DS_CONTMETHOD", "");			
		}	
		dsUserParam.setColumn(nrow, "CD_VENDOR", "");

	}
	else if(id == "ccfCD_VENDOR") {
		if(this.gfnIsNull(this.dsSearch.getColumn(0, "CD_SITE")))
		{
			this.gfnAlert("현장코드를 먼저 입력하십시오.");
			return false;
		}
		else if(this.gfnIsNull(this.dsSearch.getColumn(0, "YM_WORK")))
		{
			this.gfnAlert("기성년월을 먼저 입력하십시오.");
			return false;
		}
		else if(this.gfnIsNull(this.dsSearch.getColumn(0, "NO_HADOCONT")))
		{
			this.gfnAlert("계약번호를 먼저 입력하십시오.");
			return false;
		}
		
		dsUserParam.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
		dsUserParam.setColumn(nrow, "YM_WORK", this.dsSearch.getColumn(0, "YM_WORK"));
		dsUserParam.setColumn(nrow, "NO_HADOCONT", this.dsSearch.getColumn(0, "NO_HADOCONT"));
	}
	
	return true;
}

this.ccfNO_HADOCONT_AfterCDTextChanged = function(id, codeFindData) {
	
	var arr = this.ccfNO_HADOCONT.form.SelectedData;
	
	if(arr.length > 0)
	{
		this.dsSearch.setColumn(0, "CD_VENDOR", arr[0]["CD_VENDOR"]);
		this.ccfCD_VENDOR.form.DSTextBox.set_value(arr[0]["DS_VENDOR"]);
	}
	else
	{
		this.dsSearch.setColumn(0, "CD_VENDOR", "");
		this.ccfCD_VENDOR.form.DSTextBox.set_value("");
	}
}

this.ccfCD_VENDOR_AfterCDTextChanged = function(id, codeFindData) {
   
	   var arr = this.ccfCD_VENDOR.form.SelectedData;
	   
	   this.dsSearch.set_enableevent(false);
	   if(arr.length > 0)
	   {
		  this.dsSearch.setColumn(0, "CD_VENDOR", arr[0]["CD_VENDOR"]);
		  this.ccfCD_VENDOR.form.DSTextBox.set_value(arr[0]["DS_VENDOR"]);
	   }
	   else
	   {
		  this.dsSearch.setColumn(0, "CD_VENDOR", "");
		  this.ccfCD_VENDOR.form.DSTextBox.set_value("");
	   }   
	   
	   this.dsSearch.set_enableevent(true);
}

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGridSub_BeforeUserDataSetParam = function(id, dsUserParam, nrow) 
 {
	if(id == "DWX_CFPAYMENT_01")
		{
			var cd_site = this.dsSearch.getColumn(0, "CD_SITE");
			if(this.gfnIsNull(cd_site)) {
				this.gfnAlert("현장코드를 먼저 입력하세요.");
				return false;
			}		
			
		dsUserParam.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
		dsUserParam.setColumn(nrow, "TY_DIV", "DWB03");
	}
	
	return true;
 }

this.fnGridSub_EnterCell = function(obj:nexacro.Grid, row, cell) {
	// 수정가능 true, false 처리하려는 컬럼에 대해서만 return 처리할것. 
	var colnm = this.gfnGridGetBindColumnNameByIndex(this.dxGridSub, cell);	// 클릭한 cell의 컬럼명
	
	// 클릭했을때 클릭한 cell을 수정 가능 or 불가능 상태로 만든다.
	// YN_EDIT 값이 Y일때만 수정가능상태
	if(this.dsListSub.getColumn(row, "YN_EDIT") == "N") {
		return false;
	}
	return;
}
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		this.gfnSetFormStatus(this);
		this.gfnGridClear(this.dxGrid);
		this.gfnGridClear(this.dxGridSub);
	}
}

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);
		this.gfnGridClear(this.dxGridSub);
	}
};

// 기성차수 콤보 셋팅
this.fnSetCombo = function() {
	
	this.dsCombo.clearData();
	
	this.dsCombo.addRow();
	this.dsCombo.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsCombo.setColumn(0, "YM_WORK", this.dsSearch.getColumn(0, "YM_WORK").substr(0,6));
	if(!this.gfnIsNull(this.getOwnerFrame().DS_CONTMETHOD)){
		this.dsCombo.setColumn(0, "DS_CONTMETHOD", this.getOwnerFrame().DS_CONTMETHOD);
	}else{
		this.dsCombo.setColumn(0, "DS_CONTMETHOD", this.FormInfo.DS_PARAM);
	}
	
	var strSvcId    = "combo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "combo=dsCombo";
	var outData     = "dsNO_DGR=combo0";
	var strArg      = "";
	var callBackFnc = "fnCallbackCombo";

	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};

this.fnCallbackCombo = function(svcID, errorCode, errorMsg)
{
	if(svcID == "combo") {		
		/*
		this.dsNO_DGR.insertRow(0);		
		this.dsNO_DGR.setColumn(0, "CD_DGR", "");
		this.dsNO_DGR.setColumn(0, "DS_DGR", "전체");
 		*/
		this.divSearch.form.cboNO_DGR.set_index(0);
		
	}
};

this.fnAfterCDTextChanged = function(id, codeFindData) {
	if(id == "ccfCD_SITE") {
		// 현장코드 변경시 초기화
		this.ccfNO_HADOCONT.form.fnCodeFindClear();
		this.ccfCD_VENDOR.form.fnCodeFindClear();
		this.ccfCD_SITE.setFocus();
		}
}]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DWBPR_HDLEDGERSPLTLDGR_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">d_select</Col>
            <Col id="SP">DWBPR_HDLEDGERSPLT_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo</Col>
            <Col id="SP">DWBPR_HDGISUNGMONTH_MAX_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">d_save</Col>
            <Col id="SP">DWBPR_HDLEDGERSPLT_SAVE</Col>
          </Row>
          <Row>
            <Col id="TARGET">d_exec</Col>
            <Col id="SP">DWBPR_HDLEDGERSPLT_EXECUTE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsListSub" oncolumnchanged="dsListSub_oncolumnchanged"/>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="NO_HADOCONT" type="STRING" size="256"/>
          <Column id="YM_WORK" type="STRING" size="256"/>
          <Column id="NO_DGR" type="STRING" size="256"/>
          <Column id="CD_VENDOR" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_SITE"/>
            <Col id="NO_HADOCONT"/>
            <Col id="YM_WORK"/>
            <Col id="NO_DGR"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsNO_DGR"/>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item1" compid="divSearch.form.ctclYM_WORK.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_WORK"/>
      <BindItem id="item2" compid="divSearch.form.ccfNO_HADOCONT.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="NO_HADOCONT"/>
      <BindItem id="item5" compid="divSearch.form.cboNO_DGR" propid="value" datasetid="dsSearch" columnid="NO_DGR"/>
      <BindItem id="item6" compid="divSearch.form.ccfCD_VENDOR.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_VENDOR"/>
    </Bind>
  </Form>
</FDL>
