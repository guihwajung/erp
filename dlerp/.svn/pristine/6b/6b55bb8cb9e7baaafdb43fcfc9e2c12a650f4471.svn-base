(function()
{
    return function()
    {
        if (!this._is_form)
            return;
        
        var obj = null;
        
        this.on_create = function()
        {
            this.set_name("DAA_PERSCARD_DLG");
            this.set_titletext("인사기록카드");
            this.getSetter("maxwidth").set("390");
            this.getSetter("maxheight").set("255");
            if (Form == this.constructor)
            {
                this._setFormPosition(347,178);
            }
            
            // Object(Dataset, ExcelExportObject) Initialize
            obj = new Dataset("dsList", this);
            obj._setContents("<ColumnInfo><Column id=\"CD_CORP\" type=\"STRING\" size=\"256\"/><Column id=\"DS_CORP\" type=\"STRING\" size=\"256\"/><Column id=\"CD_DEPT\" type=\"STRING\" size=\"256\"/><Column id=\"DS_DEPT\" type=\"STRING\" size=\"256\"/><Column id=\"ID_SABUN\" type=\"STRING\" size=\"256\"/><Column id=\"DS_HNAME\" type=\"STRING\" size=\"256\"/><Column id=\"ID_PERSON\" type=\"STRING\" size=\"256\"/><Column id=\"TY_RETIRE\" type=\"STRING\" size=\"256\"/></ColumnInfo><Rows><Row/></Rows>");
            this.addChild(obj.name, obj);


            obj = new Dataset("dsImageFile", this);
            obj._setContents("<ColumnInfo><Column id=\"filepath\" type=\"STRING\" size=\"256\"/><Column id=\"filename\" type=\"STRING\" size=\"256\"/><Column id=\"filereturn\" type=\"STRING\" size=\"10000\"/></ColumnInfo>");
            this.addChild(obj.name, obj);


            obj = new Dataset("_dsProc", this);
            obj._setContents("<ColumnInfo><Column id=\"TARGET\" type=\"STRING\" size=\"256\"/><Column id=\"SP\" type=\"STRING\" size=\"256\"/></ColumnInfo><Rows><Row><Col id=\"TARGET\">selectRpt</Col><Col id=\"SP\">DAAPR_BASEINFO_CARD_PRINT</Col></Row><Row><Col id=\"TARGET\">combo</Col><Col id=\"SP\">DAZPR_COMMONCODE_COMBO</Col></Row></Rows>");
            this.addChild(obj.name, obj);


            obj = new Dataset("dsTY_RETIRE", this);
            obj._setContents("<ColumnInfo><Column id=\"CD_CODE\" type=\"STRING\" size=\"256\"/><Column id=\"DS_CODE\" type=\"STRING\" size=\"256\"/></ColumnInfo>");
            this.addChild(obj.name, obj);
            
            // UI Components Initialize
            obj = new Div("divData","0","0",null,null,"0","0",null,null,null,null,this);
            obj.set_taborder("0");
            obj.set_cssclass("div_DATA_Bg");
            this.addChild(obj.name, obj);

            obj = new Static("staTITLE","0","-4",null,"30","6",null,null,null,null,null,this.divData.form);
            obj.set_taborder("0");
            obj.set_text("출력범위 지정");
            obj.set_cssclass("sta_TITLE_Bg");
            obj.set_textAlign("left");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staCD_CORP","0","staTITLE:0","87","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("2");
            obj.set_text("법인");
            obj.set_visible("true");
            obj.set_cssclass("sta_WF_tablelabelE");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staCD_CORP_bg","staCD_CORP:-1","staCD_CORP:-30","261","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("7");
            obj.set_cssclass("sta_WF_tablebg");
            obj.set_text("");
            obj.set_visible("true");
            this.divData.addChild(obj.name, obj);

            obj = new Div("ccfCD_CORP","staCD_CORP:5","staCD_CORP:-25","250","20",null,null,null,null,null,null,this.divData.form);
            obj.getSetter("CodeFindName").set("DAX_CFCORP_CODEFIND");
            obj.getSetter("CDTextWidth").set("50");
            obj.set_taborder("1");
            obj.set_url("cmm::cmmCodeFind.xfdl");
            obj.set_text("");
            obj.set_visible("true");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staCD_DEPT","0","staCD_CORP:-1","87","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("4");
            obj.set_text("부서");
            obj.set_cssclass("sta_WF_tablelabel");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staCD_DEPT_bg","staCD_DEPT:-1","staCD_DEPT:-30","261","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("8");
            obj.set_cssclass("sta_WF_tablebg");
            obj.set_text("");
            this.divData.addChild(obj.name, obj);

            obj = new Div("ccfCD_DEPT","staCD_DEPT:5","staCD_DEPT:-25","250","20",null,null,null,null,null,null,this.divData.form);
            obj.getSetter("CodeFindName").set("DAX_CFDEPT");
            obj.getSetter("CDTextWidth").set("80");
            obj.set_taborder("3");
            obj.set_url("cmm::cmmCodeFind.xfdl");
            obj.set_text("");
            obj.set_visible("true");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staID_SABUN","0","staCD_DEPT:-1","87","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("9");
            obj.set_text("성명");
            obj.set_cssclass("sta_WF_tablelabel");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staID_SABUN_bg","staID_SABUN:-1","staID_SABUN:-30","261","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("10");
            obj.set_cssclass("sta_WF_tablebg");
            obj.set_text("");
            this.divData.addChild(obj.name, obj);

            obj = new Div("ccfID_SABUN","staID_SABUN:5","staID_SABUN:-25","250","20",null,null,null,null,null,null,this.divData.form);
            obj.getSetter("CodeFindName").set("DAX_CFBASEINFO_ALL");
            obj.getSetter("CDTextWidth").set("90");
            obj.set_taborder("3");
            obj.set_url("cmm::cmmCodeFind.xfdl");
            obj.set_text("");
            obj.set_visible("true");
            this.divData.addChild(obj.name, obj);

            obj = new Edit("edtID_PERSON","356","99","60","20",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("14");
            obj.set_visible("false");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staTY_RETIRE","0","staID_SABUN:-1","87","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("12");
            obj.set_text("재직여부");
            obj.set_cssclass("sta_WF_tablelabel");
            this.divData.addChild(obj.name, obj);

            obj = new Static("staTY_RETIRE_bg","staTY_RETIRE:-1","staTY_RETIRE:-30","261","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("13");
            obj.set_cssclass("sta_WF_tablebg");
            obj.set_text("");
            this.divData.addChild(obj.name, obj);

            obj = new Combo("cboTY_RETIRE","staTY_RETIRE:5","staTY_RETIRE:-25","250","20",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("11");
            obj.set_datacolumn("DS_CODE");
            obj.set_codecolumn("CD_CODE");
            obj.set_innerdataset("dsTY_RETIRE");
            obj.set_text("전체");
            obj.set_value("%");
            obj.set_index("0");
            this.divData.addChild(obj.name, obj);

            obj = new Div("divBtns","110","staTY_RETIRE:5","130","30",null,null,null,null,null,null,this.divData.form);
            obj.set_taborder("6");
            this.divData.addChild(obj.name, obj);

            obj = new Button("btnOK","0","3","60","27",null,null,null,null,null,null,this.divData.form.divBtns.form);
            obj.set_taborder("16");
            obj.set_text("확인");
            this.divData.form.divBtns.addChild(obj.name, obj);

            obj = new Button("btnCANCLE","btnOK:10","3","60","27",null,null,null,null,null,null,this.divData.form.divBtns.form);
            obj.set_taborder("17");
            obj.set_text("취소");
            this.divData.form.divBtns.addChild(obj.name, obj);
            // Layout Functions
            //-- Default Layout : this
            obj = new Layout("default","",this._adjust_width,this._adjust_height,this,function(p){});
            this.addLayout(obj.name, obj);
            
            // BindItem Information
            obj = new BindItem("item0","divData.form.ccfCD_CORP.form.CDTextBox","value","dsList","CD_CORP");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item1","divData.form.ccfCD_CORP.form.DSTextBox","value","dsList","DS_CORP");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item2","divData.form.ccfCD_DEPT.form.CDTextBox","value","dsList","CD_DEPT");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item3","divData.form.ccfCD_DEPT.form.DSTextBox","value","dsList","DS_DEPT");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item4","divData.form.ccfID_SABUN.form.CDTextBox","value","dsList","ID_SABUN");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item5","divData.form.ccfID_SABUN.form.DSTextBox","visible","dsList","DS_HNAME");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item6","divData.form.edtID_PERSON","value","dsList","ID_PERSON");
            this.addChild(obj.name, obj);
            obj.bind();

            obj = new BindItem("item7","divData.form.cboTY_RETIRE","value","dsList","TY_RETIRE");
            this.addChild(obj.name, obj);
            obj.bind();
            
            // TriggerItem Information

        };
        
        this.loadPreloadList = function()
        {
            this._addPreloadList("fdl","cmm::cmmCodeFind.xfdl");
        };
        
        // User Script
        this.registerScript("DAA_PERSCARD_DLG.xfdl", function() {
        this.objApp = this.gfnGetApplication();

        this.filepath = "";		//"/DA/BASEINFO/";

        this.form_onload = function(obj, e) {
        	// -- 필수 -------------------//
        	this.gfnFormOnLoad(this);
        	this.gfnFormInfo(this);
        	// ---------------------------//

        	this.fnSetButton();
        	this.fnSetExtendButton();
        	this.fnSetVariable();
        	this.fnSetEvent();
        	this.fnSetParameter();
        	this.fnSetCombo();
        	this.fnInit();

        	this.filepath = this.fnGetfilepath("DA00");
        }

        /************************************************************************
         * 버튼 설정 : 화면(Tab) 전환시 마다 호출
         * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
         ************************************************************************/
        this.fnSetButton = function() {

        }

        /************************************************************************
         * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
         ************************************************************************/
        this.fnSetExtendButton = function() {

        }

        /************************************************************************
         * 변수 선언
         ************************************************************************/
        this.fnSetVariable = function() {
        	this.ccfCD_CORP   = this.divData.form.ccfCD_CORP;		// 법인코드
        	this.ccfCD_DEPT   = this.divData.form.ccfCD_DEPT;		// 부서코드
        	this.ccfID_SABUN  = this.divData.form.ccfID_SABUN;		// 성명
        	this.cboTY_RETIRE = this.divData.form.cboTY_RETIRE;		// 재직여부
        }

        /************************************************************************
         * 이벤트 설정
         ************************************************************************/
        this.fnSetEvent = function() {
        	this.ccfCD_CORP.BeforeUserDataSetParam  = "fnBeforeUserDataSetParam";	// 법인
        	this.ccfCD_CORP.AfterCDTextChanged      = "fnAfterCDTextChanged";
        	this.ccfCD_DEPT.BeforeUserDataSetParam  = "fnBeforeUserDataSetParam";	// 부서
        	this.ccfCD_DEPT.AfterCDTextChanged      = "fnAfterCDTextChanged";
        	this.ccfID_SABUN.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";	// 사번
        	this.ccfID_SABUN.AfterCDTextChanged     = "fnAfterCDTextChanged";
        }

        /************************************************************************
         * 파라미터 설정
         ************************************************************************/
        this.fnSetParameter = function() {
        	// 보고서 조회
        	this.dsSelectRpt = new Dataset();
        	this.dsSelectRpt.addColumn("CD_CORP", "string");
        	this.dsSelectRpt.addColumn("ID_SABUN", "string");
        	this.dsSelectRpt.addColumn("CD_DEPT", "string");
        	this.dsSelectRpt.addColumn("TY_RETIRE", "string");
        	this.dsSelectRpt.addColumn("ID_USER", "string");

        	this.dsReportParam = new Dataset();
        	this.dsReportParam.addColumn("IMG", "STRING");
        }

        /************************************************************************
         * 콤보 데이터 조회 및 설정
         ************************************************************************/
        this.fnSetCombo = function() {
        	this.dsCombo = new Dataset();
        	this.dsCombo.addColumn("TY_SEL", "string");
        	this.dsCombo.addColumn("CD_PREFIX", "string");
        	this.dsCombo.addColumn("CD_UPPREFIX", "string");

        	this.dsCombo.addRow();
        	this.dsCombo.setColumn(0, "TY_SEL", "A");
        	this.dsCombo.setColumn(0, "CD_PREFIX", "AE");
        	this.dsCombo.setColumn(0, "CD_UPPREFIX", "");

        	var strSvcId    = "combo";
        	var strSvcType  = "select";
        	var inProc		= "_dsProc";
        	var inData      = "combo=dsCombo";
        	var outData     = "dsTY_RETIRE=combo0";
        	var strArg      = "";
        	var callBackFnc = "fnCallback";

        	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
        						strSvcType , 	// transaction을 요청할 구분
        						inProc,			// Procedure 정보 Dataset 이름
        						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
        						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
        						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
        						callBackFnc); // 통신방법 정의 [생략가능]
        };

        /************************************************************************
         * 화면 및 검색영역 초기화
         ************************************************************************/
        this.fnInit = function() {
        	this.dsList.setColumn(0, "CD_CORP", this.AuthClient.CD_CORP);
        	this.dsList.setColumn(0, "DS_CORP", this.AuthClient.DS_CORP);
        }

        /************************************************************************
         * 컨트롤 이벤트
         ************************************************************************/
        /*
         * 조회 버튼
         */
        this.fnSelect = function() {

        }

        /*
         * 입력 버튼
         */
        this.fnAdd = function() {

        }

        /*
         * 삭제 버튼
         */
        this.fnDel = function() {

        }

        /*
         * 저장 버튼
         */
        this.fnSave = function() {

        }

        /*
         * 엑셀 버튼
         */
        this.fnExcel = function() {

        }

        /*
         * 출력 버튼
         */
        this.fnPrint = function() {
        	return true;
        }

        this.fnSelectRpt2 = function() {
        	this.dsSelectRpt.clearData();
        	this.dsSelectRpt.addRow();
        	this.dsSelectRpt.setColumn(0, "CD_CORP"  , this.dsList.getColumn(0, "CD_CORP"));
        	this.dsSelectRpt.setColumn(0, "ID_SABUN" , this.dsList.getColumn(0, "ID_SABUN"));
        	this.dsSelectRpt.setColumn(0, "CD_DEPT"  , this.dsList.getColumn(0, "CD_DEPT"));
        	this.dsSelectRpt.setColumn(0, "TY_RETIRE", this.dsList.getColumn(0, "TY_RETIRE"));
        	this.dsSelectRpt.setColumn(0, "ID_USER"  , this.AuthClient.ID_USER);

        	var inProc     = "_dsProc";
        	var inParam    = "";
        	var inData     = "selectRpt=dsSelectRpt";
        	var reportpath = "/da/daa/DAA_PERSCARD_DSC.ozr";

        	gfnOpenReport(this, reportpath, inProc, inParam, inData);
        }
        this.fnSelectRpt = function()
        {
        	//if(!this.fnSelectValidate()) return false;

        	this.dsReportParam.clearData();
        	this.dsReportParam.addRow();

        	this.dsImageFile.clearData();
        	this.dsImageFile.addRow();

        	this.dsImageFile.setColumn(0, "filepath", this.filepath);
        	//this.dsImageFile.setColumn(0, "filename", this.dsList.getColumn(0, "PIC"));
        	//this.dsImageFile.setColumn(0, "filepath", "/DA/CORP/01");
        	this.dsImageFile.setColumn(0, "filename", "STAMP_IMG.png");

        	// 서버 이미지파일 base64 로 받아오기
        	var strSvcId    = "selectIMG";
        	var strSvcType  = "file/imageFile";
        	var inProc      = "";
        	var inData      = "input=dsImageFile";
        	var outData     = "dsImageFile=input";
        	var strArg      = "";
        	var callBackFnc = "fnCallback";

        	this.gfnTransaction(strSvcId,   	// transaction을 구분하기 위한 svc id값
        						strSvcType, 	// transaction을 요청할 구분
        						inProc,  		// Procedure 정보 Dataset 이름
        						inData,  		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
        						outData, 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
        						strArg,  		// 입력갑스로 보낼 arguments, strFormData="20120607"
        						callBackFnc,
        						false); 		// 통신방법 정의 [생략가능]

        };

        //리포트 인쇄
        this.reportPrint = function (){

        	this.dsSelectRpt.clearData();

        	var nrow = this.dsSelectRpt.addRow();
        	this.dsSelectRpt.setColumn(0, "CD_CORP", this.dsList.getColumn(0, "CD_CORP"));
        	this.dsSelectRpt.setColumn(0, "ID_SABUN", this.dsList.getColumn(0, "ID_SABUN"));
        	this.dsSelectRpt.setColumn(0, "CD_DEPT", this.dsList.getColumn(0, "CD_DEPT"));
        	this.dsSelectRpt.setColumn(0, "TY_RETIRE", this.dsList.getColumn(0, "TY_RETIRE"));
        	this.dsSelectRpt.setColumn(0, "ID_USER", this.AuthClient.ID_USER);

        	var inProc		= "_dsProc";
        	var inParam 	= "params=dsReportParam";	// 조회SP이외 사용할 정보
        	var inData      = "selectRpt=dsSelectRpt";
        	//var reportpath  = "/da/daa/DAA_PERSCARD_DSC.ozr";
        	var reportpath  = "/da/daa/DAA_PERSCARD_NEW.ozr";

        	gfnOpenReport(this, reportpath, inProc, inParam, inData);

        	//this.getParentContext().close(true);
        }
        /************************************************************************
         * Validate
         ************************************************************************/
        this.fnSelectValid = function() {
        	if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
        		this.ccfCD_CORP.form.CDTextBox.setFocus();
        		this.gfnAlert("법인을 입력해주세요");
        		return false;
        	}

        	return true;
        }

        /************************************************************************
         * 확장버튼 이벤트
         ************************************************************************/
        // 확인 버튼
        this.btnOK_onclick = function(obj, e) {
        	if (!this.fnSelectValid()) return;
        	this.fnSelectRpt();
        }

        // 취소 버튼
        this.btnCANCLE_onclick = function(obj, e) {
        	this.getParentContext().close(false);
        }

        /************************************************************************
         * 콜백 이벤트
         ************************************************************************/
        /*
         * 기본 콜백
         */
        this.fnCallback = function(svcID, errorCode, errorMsg) {
        	if (errorCode != 0) {
        		this.gfnAlert(errorMsg);
        		return;
        	}

        	if (svcID == "save") {
        		if (errorCode == 0) {
        			this.parent.parent.opener.divWork.form.fnSelect();
        			this.getParentContext().close(true);
        		} else {
        			this.gfnAlert(errorMsg);
        		}
        	}
        	else if(svcID == "selectIMG"){
        		this.dsReportParam.setColumn(0, "IMG", this.dsImageFile.getColumn(0, "filereturn"));
        		//리포트 호출
        		this.reportPrint();
        	}
        }

        /************************************************************************
         * 코드파인드 이벤트
         ************************************************************************/
        this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
        	if (id == "ccfCD_CORP") {	// 법인
        		dsUserParam.setColumn(nrow, "CD_CORP", this.AuthClient.CD_CORP);
        		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
        		dsUserParam.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
        	} else if (id == "ccfCD_DEPT") {	// 부서
        		if (this.gfnIsNull(this.dsList.getColumn(0, "CD_CORP"))) {
         			this.ccfCD_CORP.form.CDTextBox.setFocus();
         			this.gfnAlert("법인을 먼저 선택하시기 바랍니다.");
         			return false;
         		}
        		dsUserParam.setColumn(nrow, "GR_SEARCH" , this.FormInfo.GR_SEARCH);		// 사용자 권한
        		dsUserParam.setColumn(nrow, "CD_DEPT"   , this.AuthClient.CD_DEPT);		// 로그인부서
        		dsUserParam.setColumn(nrow, "CD_CORP"   , this.dsList.getColumn(0, "CD_CORP"));	// 조회조건에 있는 소속법인
        		dsUserParam.setColumn(nrow, "YN_CURRENT",  "");
        	} else if (id == "ccfID_SABUN") {	// 사번
        		if (this.gfnIsNull(this.dsList.getColumn(0, "CD_CORP"))) {
         			this.ccfCD_CORP.form.CDTextBox.setFocus();
         			this.gfnAlert("법인을 먼저 선택하시기 바랍니다.");
         			return false;
         		}
        		dsUserParam.setColumn(nrow, "CD_CORP"  , this.dsList.getColumn(0, "CD_CORP"));
        		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
        		dsUserParam.setColumn(nrow, "CD_DEPT"  , this.AuthClient.CD_DEPT);
        		dsUserParam.setColumn(nrow, "YN_CORP"  , "N");
        		dsUserParam.setColumn(nrow, "TY_RETIRE", "%");   // 재직구분
        	}

        	return true;
        }

        this.fnAfterCDTextChanged = function(id, codeFindData) {
        	var arr = codeFindData;
        	switch (id) {
        	case "ccfCD_CORP":
        		this.dsList.setColumn(0, "CD_DEPT", "");
        		this.dsList.setColumn(0, "CD_DEPT", "");
        		this.dsList.setColumn(0, "ID_SABUN", "");
        		this.dsList.setColumn(0, "DS_HNAME", "");
        		this.dsList.setColumn(0, "ID_PERSON", "");
        		break;

        	case "ccfCD_DEPT":
        		this.dsList.setColumn(0, "ID_SABUN", "");
        		this.dsList.setColumn(0, "DS_HNAME", "");
        		this.dsList.setColumn(0, "ID_PERSON", "");
        		break;

        	case "ccfID_SABUN" :
        		if (arr.length > 0) {
        			this.dsList.setColumn(0, "ID_PERSON", arr[0]["ID_PERSON"]);
        		} else {
        			this.dsList.setColumn(0, "ID_PERSON", "");
        		}
        		break;
        	}
        }

        /************************************************************************
         * 기타 이벤트
         ************************************************************************/

        /************************************************************************
         * 기타 함수
         ************************************************************************/

        });
        
        // Regist UI Components Event
        this.on_initEvent = function()
        {
            this.addEventHandler("onload",this.form_onload,this);
            this.divData.form.cboTY_RETIRE.addEventHandler("onitemchanged",this.fnSearchInit,this);
            this.divData.form.divBtns.form.btnOK.addEventHandler("onclick",this.btnOK_onclick,this);
            this.divData.form.divBtns.form.btnCANCLE.addEventHandler("onclick",this.btnCANCLE_onclick,this);
            this.dsList.addEventHandler("onvaluechanged",this.dsList_onvaluechanged,this);
        };
        this.loadIncludeScript("DAA_PERSCARD_DLG.xfdl");
        this.loadPreloadList();
        
        // Remove Reference
        obj = null;
    };
}
)();
