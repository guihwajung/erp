<?xml version="1.0" encoding="utf-8"?>
<ADL version="2.0">
  <Application id="erp-nxui" onload="Application_onload" onerror="Application_onerror" screenid="ScreenDeskTop,ScreenMobile" licenseurl="../install/license/nexacro17_client_license.xml">
    <Layout>
      <MainFrame id="mainframe" showtitlebar="true" showstatusbar="false" width="1280" height="984" titletext="DL ERP" showtitleicon="true" showcascadetitletext="false" openalign="center middle" statusbarheight="33">
        <VFrameSet id="VFrameSet" separatesize="*,0,0" showcascadetitletext="true">
          <Frames>
            <ChildFrame id="frameLogin" formurl="" showtitlebar="false" showtitleicon="false" dragmovetype="none"/>
            <HFrameSet id="HFrameSet" separatesize="270,*">
              <Frames>
                <VFrameSet id="VFrameSet2" separatesize="*">
                  <Frames>
                    <ChildFrame id="frameLeft" showtitlebar="false" showstatusbar="false" formurl="frame::frameLeft.xfdl" dragmovetype="none"/>
                  </Frames>
                </VFrameSet>
                <VFrameSet id="VFrameSet1" separatesize="54,0,*,0">
                  <Frames>
                    <ChildFrame id="frameTop" showtitlebar="false" showstatusbar="false" formurl="frame::frameTop.xfdl" showtitleicon="false" dragmovetype="none"/>
                    <ChildFrame id="frameNavi" showtitlebar="false" showtitleicon="false" dragmovetype="none" formurl="frame::frameMDI.xfdl"/>
                    <ChildFrame id="frameMain" formurl="frame::frameMain.xfdl" showtitlebar="false" dragmovetype="none"/>
                    <FrameSet id="framesetWork" showtitlebar="false" showtitleicon="false">
                      <Frames/>
                    </FrameSet>
                  </Frames>
                </VFrameSet>
              </Frames>
            </HFrameSet>
            <ChildFrame id="frameBottom" showtitlebar="false" showstatusbar="false" formurl="frame::frameBottom.xfdl" showtitleicon="false" dragmovetype="none"/>
          </Frames>
        </VFrameSet>
      </MainFrame>
    </Layout>
  </Application>
  <Script type="xscript5.1"><![CDATA[/**
*  컨설팅 표준화 작업
*  @MenuPath    
*  @FileName 	
*  @Creator 	consulting
*  @CreateDate 	2017.03.09
*  @Desction    Application
************** 소스 수정 이력 ***********************************************
*  date          		Modifier                Description
*******************************************************************************
*  2017.03.09     	consulting 	           최초 생성 
*  2017.10.17     	consulting             주석 정비
*******************************************************************************
*/

/************************************************************************************************
 * application 변수 선언 영역
************************************************************************************************/
this.gvVFrameSet   = "";
this.gvLoginFrame  = "";
this.gvHFrame      = "";
this.gvLeftFrame   = "";
this.gvVFrameSet1  = "";
this.gvTopFrame    = "";
this.gvWorkFrame   = "";
this.gvMainFrame   = "";
this.gvMdiFrame    = "";
this.gvExtCommonPath  = "";
this.gvActiveForm = "";
this.gvMax        = 15;     //열린 메뉴 최대 갯수
this.gvFormLimit  = 1;		//중복화면 가능 갯수
this.gvRealTrace = trace;
this.gvMaxWidth = 1150;		//최소사이즈
this.gvConfig = {};
this.gvUserConfig = {};
this.gvUserInfo = {};

/***********************************************************************************************
* Application EVENT 영역(onload, onbeforeclose)
/***********************************************************************************************/

/**
 * @description Applicaton onload시 처리내역
*/
this.Application_onload = function(obj:nexacro.Application,e:nexacro.LoadEventInfo)
{	
	var objApp = nexacro.getApplication();

	// Frame 변수 저장
	this.gvVFrameSet	= objApp.mainframe.VFrameSet;                                			//VFrameSet	
	this.gvLoginFrame	= objApp.mainframe.VFrameSet.frameLogin; 				   				//LoginFrame
	this.gvHFrame       = objApp.mainframe.VFrameSet.HFrameSet;                      			//HFrame
	this.gvLeftFrame    = objApp.mainframe.VFrameSet.HFrameSet.VFrameSet2.frameLeft;            			//leftFrame
	this.gvVFrameSet1   = objApp.mainframe.VFrameSet.HFrameSet.VFrameSet1;           			//VFrameSet1
	this.gvTopFrame     = objApp.mainframe.VFrameSet.HFrameSet.VFrameSet1.frameTop;  								//TopFrame
	this.gvWorkFrame    = objApp.mainframe.VFrameSet.HFrameSet.VFrameSet1.framesetWork;         //WorkForm
	this.gvMainFrame    = objApp.mainframe.VFrameSet.HFrameSet.VFrameSet1.frameMain;  			//mainform
	this.gvMdiFrame     = objApp.mainframe.VFrameSet.HFrameSet.VFrameSet1.frameNavi;  			//mdi frame
	
	this.afnSetApplication(objApp);
	
// 	var url;
// 	if(system.navigatorname == "nexacro") { 
// 		url = nexacro.getApplication().xadl;
// 	} else {
// 		url = window.location.href;
// 	}
	
	this.gvLoginFrame.set_formurl("frame::frameLogin.xfdl");
};

this.afnSetApplication = function(objApp) {
	// 접속경로 확인 및 설정
	trace("===== 접속경로 : " + nexacro.getProjectPath());	
    var nRunMode = 0;
	var objEnv = nexacro.getEnvironment();
	
	// 런타임 접속
	if (system.navigatorname == "nexacro") 
	{	
		var xadl = nexacro.getProjectPath();
		
		// studio로 실행
		if (xadl.indexOf("file://") != -1) {        
			nRunMode = "0";
			objApp.mainframe.set_titletext("로컬(파일) - " + objApp.mainframe.titletext);
		}
		// 웹 접속
		else {
			var urlPath  = xadl.substring(0, xadl.lastIndexOf("erp"));
			urlPath = urlPath.replace("/erp/", "");
		
			// service URL 설정
			var objSrv = objEnv.services["svcUrl"];
			objSrv.set_url(urlPath);
				
			//로컬(웹)
			if (xadl.indexOf("localhost") > -1 || xadl.indexOf("127.0.0.1") > -1 ) {
				nRunMode = "1";
				objApp.mainframe.set_titletext("로컬(웹)  - " + objApp.mainframe.titletext);
			}
			//개발
			else if (xadl.indexOf("dev") > -1) {
				nRunMode = "1";
				objApp.mainframe.set_titletext("개발  - " + objApp.mainframe.titletext);
			}
			//운영
			else {
				nRunMode = "2";
				
				// trace 정지 설정
				this.afnSetTraceMode(true);
			}
		}
	}
	// 웹 접속
	else {
		nexacro._isTouchInteraction = false;
		//var form = this;
		//this.fnAddScript("./lib/jquery/jquery-1.11.3.js", function() {
			//form.fnAddScript("./lib/jquery/jquery.minicolors.min.js");
		//});
		
		// 브라우저에서 Javascript 로딩 순서에 따라 CustomPatch 적용이 안되는 경우가 발생할수 있음.
		// script defer 를 이용하면 되지만 넥사크로에서는 불가능하므로 CustomPatch를 한번더 불러주는 것으로 처리.
		var customScripts = ["CustomPatch.js", "CustomPatch/CompBase_Element_HTML5.js", "CustomPatch/nexacroCustom.js"];
		var docHead = window.document.head.innerHTML;
		for(var i = 0; i < customScripts.length; i++) {
			var js = customScripts[i];
			if(docHead.indexOf(js) > -1) {
				var tmp = docHead.substring(docHead.indexOf(js));
				tmp = tmp.substring(0,tmp.indexOf("\""));
				this.fnAddScript("./nexacro17lib/component/" + tmp, false);
			} 
		}
		
		this.fnAddStyleSheet("./css/force.css");
		this.fnAddStyleSheet("./css/force_"+getDisplayTheme()+".css");
		
		var _contextPath = "";
		/*
		if (window.location.href.indexOf("localhost") == -1) {
			//_contextPath = "/FSPServer";
			//nexacro.setEnvironmentVariable("evContextPath", _contextPath);
			
			this.fnAddScript("./lib/info.js?ver="+(new Date().getTime()));
		}
		*/
		
		var urlPath = window.location.protocol + "//" + window.location.host;
		
		// service URL 설정
		var objSrv = objEnv.services["svcUrl"];
		objSrv.set_url(urlPath + _contextPath);
				
		//로컬(웹)
	    if (objSrv.url.indexOf("localhost") > -1 || objSrv.url.indexOf("127.0.0.1") > -1 ) {
			nRunMode = "1";
			objApp.mainframe.set_titletext("로컬(웹)  - " + objApp.mainframe.titletext);
		}
		//개발
		else if (objSrv.url.indexOf("dev") > -1 || objSrv.url.indexOf("112.169.9.") > -1 
				|| objSrv.url.indexOf("e-novator.co.kr") > -1 || objSrv.url.indexOf("10.211.200.68") > -1
				|| objSrv.url.indexOf("dlerp.daelimcloudtest.com") > -1) {
			nRunMode = "1";
			objApp.mainframe.set_titletext("개발 - " + objApp.mainframe.titletext);
		}
		// 운영(임시)
		else if (objSrv.url.indexOf("dlerp.daelimcloud.com") > -1) {
			nRunMode = "1";
		}
		//운영
		else {
		    nRunMode = "2";
			
			// trace 정지 설정
			this.afnSetTraceMode(false);
		}
		
		window.document.onkeydown = function() 
		{ 
			//새로고침 F5 
			if(event.keyCode == 116) 
			{ 
				event.preventDefault();
				return false; 
			} 
			// CTRL+R 새로 고침
			else if (event.ctrlKey == true && event.keyCode == 82) 
			{ 
				event.preventDefault();
				return false; 
			} 
			
// 			// 윈도우 창이 닫힐 경우 
// 			if(event.keyCode == 505) {  			
// 			} 
// 			// 창 닫기( Alt+F4 ) 방지  
// 			if( event.altKey == true && event.keyCode == 115) {
// 			} 		
		}
	}	
	nexacro.setEnvironmentVariable("evRunMode", nRunMode);
}

/**
 * @description trace 재정의하여 trace로그 생성 방지
*/
this.afnSetTraceMode = function(bTrace)
{
	trace("★★ 운영접속시에는 trace 로그를 남기지 않도록 설정되었습니다.");
	
    nexacro.setEnvironmentVariable("evTraceMode", bTrace);
    if (bTrace)
    {
		trace = this.gvRealTrace;
    }
    else {
        trace = function trace(){};
    }
}

/**
 * @description ESC 통신중단 방지(10월 16일 버전에서는 작동하지 않음)
*/
this.Application_onerror = function(obj:nexacro.Application,e:nexacro.ErrorEventInfo)
{
	trace("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!Application_onerror!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
	trace("e.statuscode : " + e.statuscode);
	trace("e.errormsg : " + e.errormsg);
	
	// 사용자가 ESC키를 눌렀을 경우 ESC통신 중단 방지처리
	if (e.errorcode == -2147418039) {
		return true;
	}
};

this.fnAddScript = function(loc, isVersion, afterCall) {
	if(isVersion==null) isVersion = true;
	if(loc.indexOf("?") == -1 && isVersion) {
		var version = this.fnGetResourceVersion();
		loc = loc + "?version="+version;
	}
				
	var script = document.createElement('script');
	script.setAttribute('src', loc);
	script.onload = function () {
		if(typeof(afterCall) == "function") {
			afterCall();
		}
	};
	document.head.appendChild(script); 
}

this.fnAddStyleSheet = function(loc) {

	var version = this.fnGetResourceVersion();
				
	var linkElement = document.createElement('link');
	linkElement.setAttribute('rel', 'stylesheet');
	linkElement.setAttribute('type', 'text/css');
	linkElement.setAttribute('href', loc + "?version="+version);
	document.head.appendChild(linkElement); 
}

this.fnGetResourceVersion = function() {
	if(this["rversion"] == null) {		
		var service = nexacro._getServiceObject("theme::");
		this["rversion"] = service.version;
	}
	return this["rversion"];
}

/************************************************************************
 * 퀵뷰 셋팅용
 ************************************************************************/
this._gfnSetFormQV = function(frame, objForm) {	
	nexacro.setEnvironmentVariable("evQuikView", "Y");
	
	frame.form.set_padding("7px 15px 15px 15px");
	
	var objApp = nexacro.getApplication();
	
	this.afnSetApplication(objApp);
	
	var url;
	if(system.navigatorname == "nexacro") { 
		url = nexacro.getApplication().xadl;
	} else {
		url = window.location.href;
	}
	
	// 파라미터 셋팅
	var param = objForm.gfnGetUrlParam(url);
	var frm = objForm.getOwnerFrame();
	if (param["param"] != null) {
		var decodeParam = decodeURIComponent(param["param"]);
		var rparam = objForm.gfnGetUrlParam("sso?"+nexacro.base64Decode(decodeParam));
		var keys = Object.keys(rparam);
		for(var i = 0; i < keys.length; i++) {
			frm[keys[i]] = rparam[keys[i]];
		}	
	} else {
		var keys = Object.keys(param);
		for(var i = 0; i < keys.length; i++) {
			if(keys[i] == "tk") continue;
			if(keys[i] == "formname") continue;
			frm[keys[i]] = param[keys[i]];
		}
	}
	
	var frameQuickView = new Div();
	frameQuickView.set_async(false);
	frameQuickView.set_url("frame::frameQuickView.xfdl");
	//if (url.indexOf("localhost") > -1 && url.indexOf("tk=") == -1) {
		frameQuickView.init( "frameQuickView", 0, 0, null, 40, 0 );
	//} else {
//		frameQuickView.init( "frameQuickView", 0, 0, null, 0, 0 );
	//}
	
	objForm.insertChild(0, "frameQuickView", frameQuickView);
	frameQuickView.show();
	frameQuickView.form.SetQuickViewUser(url);
	
	
	var formurl = nexacro._quickview_formurl;
	var id_form = formurl.substring(formurl.indexOf("::")+2);
	id_form = id_form.substring(0, id_form.lastIndexOf("."));
	if(id_form.indexOf("/") > -1) {
		id_form = id_form.substring(id_form.indexOf("/")+1);
	}
	
	var cd_module = "";
	if(param["CD_MODULE"] != null) cd_module = param["CD_MODULE"];	
	this._gfnGetFormAuthQV(frame, objForm, cd_module, id_form);
}

this._gfnGetFormAuthQV = function(frame, objForm, cd_module, id_form, strArg, param) {

	if(strArg == null) strArg = "";
	
	objForm.__dsProc = new Dataset();
	objForm.__dsProc.addColumn("TARGET", "string");
	objForm.__dsProc.addColumn("SP", "string");
	objForm.__dsProc.addRow();
	objForm.__dsProc.addRow();
	objForm.__dsProc.addRow();
	objForm.__dsProc.setColumn(0, "TARGET", "dsAuthForm");
	objForm.__dsProc.setColumn(0, "SP", "DZZPR_AUTHORITYFORM_SELECT_NEW");
	objForm.__dsProc.setColumn(1, "TARGET", "dsBtnInfo");
	objForm.__dsProc.setColumn(1, "SP", "DZZPR_USERBUTTON_SELECT");
	objForm.__dsProc.setColumn(2, "TARGET", "dsConfig");
	objForm.__dsProc.setColumn(2, "SP", "DZZPR_CONFIG_SELECT");
	
	objForm.__dsParamAuthForm = new Dataset();
	objForm.__dsParamAuthForm.addColumn("ID_USER", "string");
	objForm.__dsParamAuthForm.addColumn("CD_DEPT", "string");
	objForm.__dsParamAuthForm.addColumn("CD_CORP", "string");
	objForm.__dsParamAuthForm.addColumn("ID_FORM", "string");
	objForm.__dsParamAuthForm.addColumn("CD_MODULE", "string");
	
	objForm.__dsParamAuthForm.addRow();
	objForm.__dsParamAuthForm.setColumn(0, "ID_USER", this.gvUserInfo.ID_USER);
	objForm.__dsParamAuthForm.setColumn(0, "CD_DEPT", this.gvUserInfo.CD_DEPT);
	objForm.__dsParamAuthForm.setColumn(0, "CD_CORP", this.gvUserInfo.CD_CORP);
	objForm.__dsParamAuthForm.setColumn(0, "ID_FORM", id_form);
	objForm.__dsParamAuthForm.setColumn(0, "CD_MODULE", cd_module);
	
	objForm.__dsParamBtnInfo = new Dataset();
	objForm.__dsParamBtnInfo.addColumn("CD_CORP", "string");
	objForm.__dsParamBtnInfo.addColumn("CD_DEPT", "string");
	objForm.__dsParamBtnInfo.addColumn("ID_SABUN", "string");
	objForm.__dsParamBtnInfo.addColumn("CD_MODULE", "string");
	objForm.__dsParamBtnInfo.addColumn("ID_FORM", "string");
	
	objForm.__dsParamBtnInfo.addRow();
	objForm.__dsParamBtnInfo.setColumn(0, "CD_CORP", this.gvUserInfo.CD_CORP);
	objForm.__dsParamBtnInfo.setColumn(0, "CD_DEPT", this.gvUserInfo.CD_DEPT);
	objForm.__dsParamBtnInfo.setColumn(0, "ID_SABUN", this.gvUserInfo.ID_USER);
	objForm.__dsParamBtnInfo.setColumn(0, "CD_MODULE", cd_module);
	objForm.__dsParamBtnInfo.setColumn(0, "ID_FORM", id_form);
	
	objForm._dsParamConfig = new Dataset();
	objForm._dsParamConfig.addColumn("ID_USER", "string");
	objForm._dsParamConfig.addColumn("CD_DEPT", "string");
	
	objForm._dsParamConfig.addRow();
	objForm._dsParamConfig.setColumn(0, "ID_USER", this.gvUserInfo.ID_USER);
	objForm._dsParamConfig.setColumn(0, "CD_DEPT", this.gvUserInfo.CD_DEPT);
	
	objForm.dsAuthForm = new Dataset();
	objForm.dsBtnInfo = new Dataset();
	objForm.dsConfig = new Dataset();
	
	var strSvcId    = "_authform";
	var strSvcType  = "select";
	var inProc		= "__dsProc";
	var inData      = "dsAuthForm=__dsParamAuthForm dsBtnInfo=__dsParamBtnInfo dsConfig=_dsParamConfig";
	var outData     = "dsAuthForm=dsAuthForm0 dsBtnInfo=dsBtnInfo0 dsConfig=dsConfig0";
	var callBackFnc = "";

	objForm.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc, false); // 통신방법 정의 [생략가능]

	// 공통 환경변수
	var jsonConfig = {};
	for(var i = 0; i< objForm.dsConfig.rowcount; i++) {
		var key = objForm.dsConfig.getColumn(i, "HASH_KEY");
		var val = objForm.dsConfig.getColumn(i, "HASH_VALUE");
		jsonConfig[key] = val;
	}
	this.gvConfig = jsonConfig;
		
	if (objForm.dsAuthForm.rowcount > 0) {
	
		// 폼 정보
		var oObj = {};
		oObj.CUR_FORM = objForm;
		oObj.CD_MODULE = objForm.dsAuthForm.getColumn(0, "CD_MODULE");
		oObj.ID_FORM = objForm.dsAuthForm.getColumn(0, "ID_FORM");
		oObj.NM_FORM = objForm.dsAuthForm.getColumn(0, "NM_FORM");
		oObj.ID_GROUP = objForm.dsAuthForm.getColumn(0, "ID_GROUP");
		oObj.GR_SEARCH = objForm.dsAuthForm.getColumn(0, "GR_SEARCH");
		oObj.TY_AUTH = objForm.dsAuthForm.getColumn(0, "TY_AUTH");
		oObj.DS_FORM = objForm.dsAuthForm.getColumn(0, "DS_FORM");
		oObj.CD_ROLE = objForm.dsAuthForm.getColumn(0, "CD_ROLE");
		oObj.TY_MENU = objForm.dsAuthForm.getColumn(0, "TY_MENU");
		oObj.DS_PARAM = objForm.dsAuthForm.getColumn(0, "DS_PARAM");
		oObj.DS_NOTICE = objForm.dsAuthForm.getColumn(0, "DS_NOTICE");
		oObj.DS_HELP = objForm.dsAuthForm.getColumn(0, "DS_HELP");
		oObj.Args = strArg;
			
		// 버튼 정보
		var BtnInfo = [];
		for(var i = 0; i < objForm.dsBtnInfo.rowcount; i++) {
			var json = {};
			json.ID_BUTTON = objForm.dsBtnInfo.getColumn(i, "ID_BUTTON");
			json.DS_BUTTON = objForm.dsBtnInfo.getColumn(i, "DS_BUTTON");
			json.TY_BUTTON = objForm.dsBtnInfo.getColumn(i, "TY_BUTTON");
			json.RM_BUTTON = objForm.dsBtnInfo.getColumn(i, "RM_BUTTON");
			json.YN_VISIBLE = objForm.dsBtnInfo.getColumn(i, "YN_VISIBLE");
			json.YN_ENABLED = objForm.dsBtnInfo.getColumn(i, "YN_ENABLED");
			json.YN_QUERYX = objForm.dsBtnInfo.getColumn(i, "YN_QUERYX");
			json.YN_UPDATEBLOCK = objForm.dsBtnInfo.getColumn(i, "YN_UPDATEBLOCK");
			json.SN_ORDER = objForm.dsBtnInfo.getColumn(i, "SN_ORDER");
			json.LR_BUTTON = objForm.dsBtnInfo.getColumn(i, "LR_BUTTON");
			json.NM_COLUMN = objForm.dsBtnInfo.getColumn(i, "NM_COLUMN");
			json.NM_GROUP = objForm.dsBtnInfo.getColumn(i, "NM_GROUP");
			BtnInfo.push(json);
		}
		oObj.BtnInfo = BtnInfo;
		
		var json = objForm.gfnArgsToJson(strArg);
		if (json.type == "popup" || json.type == "dialog") {	
			if(oObj.TY_MENU == "Dialog") {
				json.type = "dialog";
			}
			if(!objForm.gfnIsNull(param)) {
				for (var key in param) {
					if (param.hasOwnProperty(key)) {
						json[key] = param[key];
					}
				}
			}
			
			oObj.POP_WIDTH = objForm.gfnIsNull(json.dwidth) ? 0: nexacro.toNumber(json.dwidth);
			oObj.POP_HEIGHT = objForm.gfnIsNull(json.dheight) ? 0: nexacro.toNumber(json.dheight);
			oObj.POP_CALLBACK = objForm.gfnIsNull(json.callback) ? "": json.callback;
			oObj.POP_ARGS = json;
			
			objForm.gfnCallPopup(oObj, json.type);
		} else {
			var id_win = oObj.CD_MODULE + "#" + oObj.ID_FORM;
			var pageSystem = oObj.ID_FORM.substr(0, 2).toLocaleLowerCase();	
			var pageModule = oObj.ID_FORM.substr(0, 3).toLocaleLowerCase();
			var idForm = oObj.ID_FORM.toUpperCase();
			if(idForm.indexOf('$') > -1) {
				idForm = idForm.substring(0, idForm.indexOf('$'));
			}
			if(pageSystem == "dx") pageSystem = "dz";
			var sPageUrl = pageSystem + "::" + pageModule + "/" +idForm + ".xfdl";
			
			frame.arguments = [];
			frame.arguments["ID_WIN"] = id_win;
			frame.arguments["CD_MODULE"] = oObj.CD_MODULE;
			frame.arguments["ID_FORM"] = oObj.ID_FORM;
			frame.arguments["NM_FORM"] = oObj.NM_FORM;
			frame.arguments["ID_GROUP"] = oObj.ID_GROUP;
			frame.arguments["GR_SEARCH"] = oObj.GR_SEARCH;
			frame.arguments["TY_AUTH"] = oObj.TY_AUTH;
			frame.arguments["DS_FORM"] = oObj.DS_FORM;
			frame.arguments["CD_ROLE"] = oObj.CD_ROLE;
			frame.arguments["DS_PARAM"] = oObj.DS_PARAM;
			frame.arguments["DS_NOTICE"] = oObj.DS_NOTICE;
			frame.arguments["DS_HELP"] = oObj.DS_HELP;
			frame.arguments["pageUrl"] = sPageUrl;
			frame.arguments["Args"] = oObj.Args;
			frame.arguments["BTN_INFO"] = oObj.BtnInfo;
			frame.arguments["TY_MENU"] = oObj.TY_MENU;
		}
	} else {	
		var url;
		if(system.navigatorname == "nexacro") { 
			url = nexacro.getApplication().xadl;
		} else {
			url = window.location.href;
		}
		if (url.indexOf("localhost") > -1 || url.indexOf("carbonco") > -1 || url.indexOf("127.0.0.1") > -1 || url.indexOf("10.211.200.68") > -1) {
			frame.arguments = [];
			frame.arguments["ID_WIN"] = objForm.id;
			frame.arguments["CD_MODULE"] = cd_module;
			frame.arguments["ID_FORM"] = id_form;
			frame.arguments["NM_FORM"] = "";
			frame.arguments["ID_GROUP"] = "0";
			frame.arguments["GR_SEARCH"] = "1";
			frame.arguments["TY_AUTH"] = "F";
			frame.arguments["DS_FORM"] = "";
			frame.arguments["CD_ROLE"] = "R99";
			frame.arguments["DS_PARAM"] = "";
			frame.arguments["DS_NOTICE"] = "";
			frame.arguments["DS_HELP"] = "";
			frame.arguments["pageUrl"] = "";
			frame.arguments["Args"] = "";
			frame.arguments["BTN_INFO"] = [];
			frame.arguments["TY_MENU"] = "화면";
		} else {
			objForm.set_visible(false);
			frame.arguments = [];
			frame.arguments["ID_WIN"] = objForm.id;
			frame.arguments["CD_MODULE"] = cd_module;
			frame.arguments["ID_FORM"] = id_form;
			frame.arguments["NM_FORM"] = "";
			frame.arguments["ID_GROUP"] = "";
			frame.arguments["GR_SEARCH"] = "";
			frame.arguments["TY_AUTH"] = ""; // R
			frame.arguments["DS_FORM"] = "";
			frame.arguments["CD_ROLE"] = "";
			frame.arguments["DS_PARAM"] = "";
			frame.arguments["DS_NOTICE"] = "";
			frame.arguments["DS_HELP"] = "";
			frame.arguments["pageUrl"] = "";
			frame.arguments["Args"] = "";
			frame.arguments["BTN_INFO"] = [];
			frame.arguments["TY_MENU"] = "화면";
		}
	}
}
]]></Script>
</ADL>
