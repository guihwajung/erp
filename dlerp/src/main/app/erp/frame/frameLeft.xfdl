<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="LeftFrame" left="0" top="0" width="270" height="638" onsize="Form_onsize" onload="form_onload" titletext="frameLeft" background="#eeeeee" scrollbartype="none">
    <Layouts>
      <Layout>
        <Static id="staLogo" taborder="1" left="0" top="0" width="270" height="65" onclick="staLogo_onclick" cursor="pointer" cssclass="sta_LF_logo" background="" text=" "/>
        <Button id="btn00" taborder="2" left="staLogo:-53" top="0" width="53" height="54" cssclass="btn_TF_home01" onclick="staLogo_onclick" visible="false"/>
        <Div id="divModule" taborder="3" left="0" top="staLogo:0" formscrollbarsize="0" formscrolltype="vertical" formscrollindicatorsize="0" formscrollbartrackbarsize="0" formscrollbarincbuttonsize="0" formscrollbardecbuttonsize="0" formscrollbarbarminsize="0" background="#17426A" width="270" bottom="0">
          <Layouts>
            <Layout/>
          </Layouts>
        </Div>
        <Div id="divLeft" taborder="0" left="270" top="0" bottom="0" width="270">
          <Layouts>
            <Layout width="230" height="958">
              <Grid id="grdTree" taborder="2" left="0" top="0" width="270" height="500" binddataset="dsMenu" autofittype="col" treeinitstatus="collapse,null" treeuseimage="true" treeusebutton="use" treeusecheckbox="false" treeuseline="false" cssclass="grd_WF_leftTree" scrollbarsize="5" visible="true">
                <Formats>
                  <Format id="default">
                    <Columns>
                      <Column size="15"/>
                      <Column size="168"/>
                      <Column size="0"/>
                      <Column size="0"/>
                      <Column size="0"/>
                    </Columns>
                    <Rows>
                      <Row size="34"/>
                    </Rows>
                    <Band id="body">
                      <Cell/>
                      <Cell col="1" edittype="tree" text="bind:NM_FORM" cssclass="expr:TY_MENU!=&quot;메뉴&quot; ? &quot;&quot; : NO_LEVEL==1 ? &quot;level0&quot; : NO_LEVEL==2 ? &quot;level1&quot; : NO_LEVEL==3 ?  &quot;level2&quot; : NO_LEVEL==4 ?  &quot;level3&quot; : &quot;&quot;" treestartlevel="1" treelevel="bind:NO_LEVEL" tooltiptext="bind:NM_FORM" textAlign="left" displaytype="treeitemcontrol"/>
                      <Cell col="2" displaytype="none" text="bind:TY_MENU"/>
                      <Cell col="3" displaytype="none" text="bind:CD_MODULE"/>
                      <Cell col="4" displaytype="none" text="bind:ID_FORM"/>
                    </Band>
                  </Format>
                </Formats>
              </Grid>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsMenu" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="CD_MODULE" type="STRING" size="0"/>
          <Column id="TY_MENU" type="STRING" size="0"/>
          <Column id="ID_FORM" type="STRING" size="0"/>
          <Column id="NM_FORM" type="STRING" size="0"/>
          <Column id="NO_LEVEL" type="INT" size="0"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="_dsParam">
        <ColumnInfo>
          <Column id="ID_USER" type="STRING" size="256"/>
          <Column id="CD_DEPT" type="STRING" size="256"/>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="CD_SYSTEM" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsModule">
        <ColumnInfo>
          <Column id="Column0" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">dsModule</Col>
            <Col id="SP">DZZPR_SYSTEM_SELECT_UXMAIN_NEW</Col>
          </Row>
          <Row>
            <Col id="TARGET">dsMenu</Col>
            <Col id="SP">DZZPR_MENU_SELECT_NEW</Col>
          </Row>
          <Row>
            <Col id="TARGET">dsAuthForm</Col>
            <Col id="SP">DZZPR_AUTHORITYFORM_SELECT_NEW</Col>
          </Row>
          <Row>
            <Col id="TARGET">dsBtnInfo</Col>
            <Col id="SP">DZZPR_USERBUTTON_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">dsConfig</Col>
            <Col id="SP">DZZPR_CONFIG_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">dsUserConfig</Col>
            <Col id="SP">DZZPR_USERINFO_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">dsMyMenu</Col>
            <Col id="SP">DZZPR_MYMENU_DETAIL_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="_dsParamAuthForm">
        <ColumnInfo>
          <Column id="ID_USER" type="STRING" size="256"/>
          <Column id="CD_DEPT" type="STRING" size="256"/>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="ID_FORM" type="STRING" size="256"/>
          <Column id="CD_MODULE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsAuthForm"/>
      <Dataset id="dsBtnInfo"/>
      <Dataset id="_dsParamBtnInfo">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="CD_DEPT" type="STRING" size="256"/>
          <Column id="ID_SABUN" type="STRING" size="256"/>
          <Column id="CD_MODULE" type="STRING" size="256"/>
          <Column id="ID_FORM" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsConfig"/>
      <Dataset id="dsUserConfig"/>
      <Dataset id="_dsParamMyMenu">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="CD_DEPT" type="STRING" size="256"/>
          <Column id="ID_USER" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsMenu_MM"/>
    </Objects>
    <Script type="xscript5.1"><![CDATA[/**
*  컨설팅 표준화 작업
*  @MenuPath    frame > frameLeft
*  @FileName 	frameLeft.xfdl 
*  @Creator 	consulting
*  @CreateDate 	2017.03.09
*  @Desction    
************** 소스 수정 이력 ***********************************************
*  date          		Modifier                Description
*******************************************************************************
*  2017.03.09     	consulting 	                최초 생성 
*  2017.10.17     	consulting       	        주석 정비
*  2018.01.16		consulting					gfnGetApplication 공통함수 변경
*******************************************************************************
*/

/************************************************************************************************
 * FORM 변수 선언 영역
 ************************************************************************************************/
this.objApp = this.gfnGetApplication();
this.objBtns;
this.objForm = {};


/************************************************************************************************
 * FORM EVENT 영역(onload, onbeforeclose)
 ************************************************************************************************/
/**
 * @description 화면 onload시 처리내역(필수)
*/
this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
};

this.fnSetModule = function() {

	this.fnGetMyMenu(true);
	
	var dsUser = this.objApp.gdsUserInfo;
	this.objApp.gvConfig = {};
	
	this._dsParam.clearData();
	this._dsParam.addRow();
	this._dsParam.setColumn(0, "ID_USER", dsUser.getColumn(0, "ID_USER"));
	this._dsParam.setColumn(0, "CD_DEPT", dsUser.getColumn(0, "CD_DEPT"));
	this._dsParam.setColumn(0, "CD_CORP", dsUser.getColumn(0, "CD_CORP"));
	this._dsParam.setColumn(0, "CD_SYSTEM", "");
	
	this._dsParamConfig = new Dataset();
	this._dsParamConfig.addColumn("ID_USER", "string");
	this._dsParamConfig.addColumn("CD_DEPT", "string");
	this._dsParamConfig.addRow();
	this._dsParamConfig.setColumn(0, "ID_USER", dsUser.getColumn(0, "ID_USER"));
	this._dsParamConfig.setColumn(0, "CD_DEPT", dsUser.getColumn(0, "CD_DEPT"));
	
	var strSvcId    = "module";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "dsModule=_dsParam dsConfig=_dsParamConfig";
	var outData     = "dsModule=dsModule0 dsConfig=dsConfig0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]


}


this.fnSetUserConfig = function() {

	var dsUser = this.objApp.gdsUserInfo;
	
	this._dsParamUserConfig = new Dataset();
	this._dsParamUserConfig.addColumn("ID_USER", "string");
	this._dsParamUserConfig.addColumn("CD_DEPT", "string");
	this._dsParamUserConfig.addColumn("CD_CORP", "string");
	this._dsParamUserConfig.addRow();
	this._dsParamUserConfig.setColumn(0, "ID_USER", dsUser.getColumn(0, "ID_USER"));
	this._dsParamUserConfig.setColumn(0, "CD_DEPT", dsUser.getColumn(0, "CD_DEPT"));
	this._dsParamUserConfig.setColumn(0, "CD_CORP", dsUser.getColumn(0, "CD_CORP"));
		
	var strSvcId    = "userconfig";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "dsUserConfig=_dsParamUserConfig";
	var outData     = "dsUserConfig=dsUserConfig0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]


}

this.fnGetMyMenu = function(first)
{	
	var gdsUserInfo = this.objApp.gdsUserInfo;
	this._dsParamMyMenu.clearData();
	
	var nRow = this._dsParamMyMenu.addRow();
	this._dsParamMyMenu.setColumn(nRow, 'ID_USER', gdsUserInfo.getColumn(gdsUserInfo.rowposition, 'ID_USER'));
	this._dsParamMyMenu.setColumn(nRow, 'CD_DEPT', gdsUserInfo.getColumn(gdsUserInfo.rowposition, 'CD_DEPT'));
	this._dsParamMyMenu.setColumn(nRow, 'CD_CORP', gdsUserInfo.getColumn(gdsUserInfo.rowposition, 'CD_CORP'));
	
	var strSvcId    = "mymenu";
	if(first) strSvcId = "mymenu_first";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "dsMyMenu=_dsParamMyMenu";
	var outData     = "dsMenu_MM=dsMyMenu0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction(strSvcId, strSvcType, inProc, inData, outData, strArg, callBackFnc);
};

this.btnModule_onclick = function(obj:Button,  e:nexacro.ClickEventInfo)
{
	var cd_system = obj.val;
	var cssclass = obj.cssclass;
	var grdID = "grdMenu_"+cd_system;
	obj.setSelectStatus(true);
	
	var isClose = false;
	if(cssclass.substring(cssclass.length-1) == "S") {
		var arrClss = cssclass.split(',');
		var clss = [];
		for (var i = 0; i < arrClss.length; i++)
		{
			var tmp = arrClss[i].trim();
			clss.push(tmp.substring(0, tmp.length-1));
		}
		obj.set_cssclass(clss.join(", "));
		
		if(this.divModule.form[grdID] != null) {
			this.divModule.form[grdID].set_height(0);
		}
		isClose = true;
	} else {
		var arrClss = cssclass.split(',');
		var clss = [];
		for (var i = 0; i < arrClss.length; i++)
		{
			clss.push(arrClss[i].trim() + "S");;
		}
		obj.set_cssclass(clss.join(", "));
		obj.set_top(String(obj.top).replace(":10",":-10"));
		if(this.divModule.form[grdID] != null) {
			this.divModule.form[grdID].set_height(this.divModule.form._adjust_height-236);
		}
	}
	
	// 버튼 선택 상태
	var isNext = false;
	for(var i = 0; i < this.objBtns.length; i++) {
		if(this.objBtns[i].id == obj.id) {
			isNext = true;
			continue;
		}
		this.objBtns[i].setSelectStatus(false);
		
		if(i > 0) {
			var btnTop = this.objBtns[i].top;
			if(isNext && !isClose) {
				this.objBtns[i].set_top(String(btnTop).replace(":-10",":10"));
				isNext = false;
			} else {
				this.objBtns[i].set_top(String(btnTop).replace(":10",":-10"));
			}
		}
		
		var cssclass = this.objBtns[i].cssclass;
		if(cssclass.substring(cssclass.length-1) == "S") {
			var arrClss = cssclass.split(',');
			var clss = [];
			for (var x = 0; x < arrClss.length; x++)
			{
				var tmp = arrClss[x].trim();
				clss.push(tmp.substring(0, tmp.length-1));
			}
			this.objBtns[i].set_cssclass(clss.join(", "));
			var grdID = "grdMenu_"+this.objBtns[i].val;
			if(this.divModule.form[grdID] != null) {
				this.divModule.form[grdID].set_height(0);
			}
		}
	}
	this.divModule.form.resetScroll();
	
	if (isClose) {
		return;
	} else {
		this.divModule.form.scrollTo(0, obj._adjust_top-54);
	}
	
	if (cd_system == 'MM')
	{
		this.fnGetMyMenu();
		return;
	}
	
	var dsUser = this.objApp.gdsUserInfo;
	this._dsParam.clearData();
	this._dsParam.addRow();
	this._dsParam.setColumn(0, "ID_USER", dsUser.getColumn(0, "ID_USER"));
	this._dsParam.setColumn(0, "CD_DEPT", dsUser.getColumn(0, "CD_DEPT"));
	this._dsParam.setColumn(0, "CD_CORP", dsUser.getColumn(0, "CD_CORP"));
	this._dsParam.setColumn(0, "CD_SYSTEM", cd_system);
	
	var strSvcId    = "menu";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "dsMenu=_dsParam";
	var outData     = "dsMenu_"+cd_system+"=dsMenu0";
	var strArg      = "cd_system=" + cd_system;
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

this.fnAuthForm = function(objForm, cd_module, id_form, strArg, param) 
{
	if(strArg == null) strArg = "";
	this.objForm.CUR_FORM = objForm;
	this.objForm.CUR_PARAM = param;
	
	var dsUser = this.objApp.gdsUserInfo;
	this._dsParamAuthForm.clearData();
	this._dsParamAuthForm.addRow();
	this._dsParamAuthForm.setColumn(0, "ID_USER", dsUser.getColumn(0, "ID_USER"));
	this._dsParamAuthForm.setColumn(0, "CD_DEPT", dsUser.getColumn(0, "CD_DEPT"));
	this._dsParamAuthForm.setColumn(0, "CD_CORP", dsUser.getColumn(0, "CD_CORP"));
	this._dsParamAuthForm.setColumn(0, "ID_FORM", id_form);
	this._dsParamAuthForm.setColumn(0, "CD_MODULE", cd_module);
	
	this._dsParamBtnInfo.clearData();
	this._dsParamBtnInfo.addRow();
	this._dsParamBtnInfo.setColumn(0, "CD_CORP", dsUser.getColumn(0, "CD_CORP"));
	this._dsParamBtnInfo.setColumn(0, "CD_DEPT", dsUser.getColumn(0, "CD_DEPT"));
	this._dsParamBtnInfo.setColumn(0, "ID_SABUN", dsUser.getColumn(0, "ID_USER"));
	this._dsParamBtnInfo.setColumn(0, "CD_MODULE", cd_module);
	this._dsParamBtnInfo.setColumn(0, "ID_FORM", id_form);
	
	var strSvcId    = "authform";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "dsAuthForm=_dsParamAuthForm dsBtnInfo=_dsParamBtnInfo";
	var outData     = "dsAuthForm=dsAuthForm0 dsBtnInfo=dsBtnInfo0"; //"dsList=dsLogin1 dsList2=dsLogin2";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};	

this.fnCallback = function(svcID, errorCode, errorMsg, args)
{
	if(svcID == "module") {
		this.objBtns = new Array();
		this.objGrds = new Array();
		
		var comps = this.divModule.form.components;
		for(var i = comps.length - 1; i >= 0; i--) {
			if(comps[i] instanceof nexacro.Button) {
				comps[i].destroy();
			}
		}
		// 즐겨찾기 추가 2021.01.21
		var nRow = this.dsModule.insertRow(0);
		this.dsModule.setColumn(nRow, 'CD_SYSTEM', 'MM');
		this.dsModule.setColumn(nRow, 'DS_SYSTEM', '즐겨찾기');
		
		var beforeGrdID = "";
		var lastGrdID = "";
		for(var i = 0; i < this.dsModule.rowcount; i++) {
			var cd_system = this.dsModule.getColumn(i, "CD_SYSTEM");
			var ds_system = this.dsModule.getColumn(i, "DS_SYSTEM");
			
			var btn = new Button();
			var btnID = "btn" + cd_system;
			//btn.init(btnID, 0, (i * 34), "100%", 34);
			var btnTop = beforeGrdID+":0";
			if (i==0) btnTop = 0;
			btn.init(btnID, 0, btnTop, "100%", 45);
			
			if(this.divModule.form[btnID] != null) {
				this.divModule.form.removeChild(btnID);
			}
			this.divModule.form.addChild(btnID, btn);
			btn.set_text(ds_system);
			btn.set_cssclass("btn_LF_default, btn_LF_"+cd_system.toLowerCase());
			//btn.set_cssclass("btn_LF_mm, btn_LF_"+cd_system.toLowerCase());
			btn.val = cd_system;
			//btn.set_icon( 'URL("./_resource_/_theme_/nexacro17/images/leftmenu_' + cd_system.toLowerCase() + '.png")' );
			btn.addEventHandler("onclick", this.btnModule_onclick, this);
			
			var ds = new Dataset();
			var dsID = "dsMenu_" + cd_system;
			if(this[dsID] == null) {
				this.addChild(dsID, ds);	
			}
			
			var grd = new Grid();
			var grdID = "grdMenu_" + cd_system;
			beforeGrdID = grdID;
			lastGrdID = grdID;
			grd.init(grdID, 0, btnID+":0", "100%", 0);
			
			if(this.divModule.form[grdID] != null) {
				this.divModule.form.removeChild(grdID);
			}
			this.divModule.form.addChild(grdID, grd);
			grd.val = cd_system;
			grd.set_binddataset(dsID);
			grd.set_cssclass("grd_WF_leftTree");
			grd.set_autofittype("col");
			grd.set_treeinitstatus("collapse,null");
			grd.set_treeuseimage(true);
			grd.set_treeusebutton("use");
			grd.set_treeusecheckbox(false);
			grd.set_treeuseline(false);
			//grd.set_nodataimage("url('theme://images/Nodata.png')");
			grd.set_scrollbarsize(5);
			//grd.set_formats('<Formats><Format id="default"><Columns><Column size="15"/><Column size="168"/><Column size="0"/><Column size="0"/><Column size="0"/></Columns><Rows><Row size="34"/></Rows><Band id="body"><Cell/><Cell col="1" text="bind:NM_FORM" cssclass="expr:NO_LEVEL==1? &quot;lev0&quot;:NO_LEVEL==2? &quot;lev2&quot;:NO_LEVEL&gt;2? &quot;lev3&quot;:&quot;&quot;" edittype="tree" treestartlevel="1" treelevel="bind:NO_LEVEL" tooltiptext="bind:NM_FORM" textAlign="left" displaytype="treeitemcontrol"/><Cell col="2" text="bind:TY_MENU"/><Cell col="3" text="bind:CD_MODULE"/><Cell col="4" text="bind:ID_FORM"/></Band></Format></Formats>');
			grd.set_formats(this.divLeft.form.grdTree.formats);
			//grd.addEventHandler("oncellclick", this.grdMenu_oncellclick, this);
			grd.addEventHandler("oncellclick", this.grdMenu_oncellclick, this);
			
			this.objBtns.push(btn);
			this.objGrds.push(grd);
		}
		for(var i = 0; i < this.objBtns.length; i++) {
			this.objBtns[i].show();
			this.objGrds[i].show();
		}
		
// 		var divBlank = new Div();
// 		divBlank.init("divBlank", 0, lastGrdID+":0", "100%", "300px");
// 		this.divModule.form.addChild("divBlank", divBlank);
// 		divBlank.show();
		
		this.divModule.form.resetScroll();
		// 첫번째 모듈 열어두기
		//if(this.objBtns.length > 0) this.objBtns[0].click();
		
		// 공통 환경변수
		var json = {};
		for(var i = 0; i< this.dsConfig.rowcount; i++) {
			var key = this.dsConfig.getColumn(i, "HASH_KEY");
			var val = this.dsConfig.getColumn(i, "HASH_VALUE");
			json[key] = val;
		}
		this.objApp.gvConfig = json;
		
		var form_max = this.gfnGetConfig("DZ", "FORM_MAX");
		var form_limit = this.gfnGetConfig("DZ", "FORM_LIMIT");
		if(!this.gfnIsNull(form_max)) {
			this.objApp.gvMax = nexacro.toNumber(form_max);
		}
		if(!this.gfnIsNull(form_limit)) {
			this.objApp.gvFormLimit = nexacro.toNumber(form_limit);
		}
		
//		this.objBtns[0].click();
		
// 		var yn_userinfo = this.gfnGetConfig("DZ", "YN_USERINFO");
// 		if(yn_userinfo == "Y") {
			this.fnSetUserConfig();
//		}
	}
	else if (svcID == "userconfig") {
		// 사용자 환경변수
		var jsonUserConfig = {};
		for(var c = 0; c < this.dsUserConfig.colinfos.length; c++) {
			var colid = this.dsUserConfig.colinfos[c].name;
			var val = "";
			if(this.dsUserConfig.rowcount > 0) {
				val = this.dsUserConfig.getColumn(0, colid);
			}
			jsonUserConfig[colid] = val;
		}
		this.objApp.gvUserConfig = jsonUserConfig;
	}
	else if (svcID == "menu")
	{
		var json = this.gfnArgsToJson(args);
		var grdID = "grdMenu_"+json.cd_system;
// 		if(this.divModule.form[grdID] != null) {
// 			this.divModule.form[grdID].set_height(500);
// 			this.divModule.form.resetScroll();
// 		}
		if(!this.gfnIsNull(this.AfterMenuSelect)) {
			var func = this.objApp.gvTopFrame.form.lookupFunc(this.AfterMenuSelect);
			if (func != null) {
				func.call();
			}
		}
	}
	else if (svcID == "authform")
	{
		if (this.dsAuthForm.rowcount > 0) {
			
			// 폼 정보
			this.objForm.CD_MODULE = this.dsAuthForm.getColumn(0, "CD_MODULE");
			this.objForm.ID_FORM = this.dsAuthForm.getColumn(0, "ID_FORM");
			this.objForm.NM_FORM = this.dsAuthForm.getColumn(0, "NM_FORM");
			this.objForm.ID_GROUP = this.dsAuthForm.getColumn(0, "ID_GROUP");
			this.objForm.GR_SEARCH = this.dsAuthForm.getColumn(0, "GR_SEARCH");
			this.objForm.TY_AUTH = this.dsAuthForm.getColumn(0, "TY_AUTH");
			this.objForm.DS_FORM = this.dsAuthForm.getColumn(0, "DS_FORM");
			this.objForm.CD_ROLE = this.dsAuthForm.getColumn(0, "CD_ROLE");
			this.objForm.TY_MENU = this.dsAuthForm.getColumn(0, "TY_MENU");
			this.objForm.DS_PARAM = this.dsAuthForm.getColumn(0, "DS_PARAM");
			this.objForm.DS_NOTICE = this.dsAuthForm.getColumn(0, "DS_NOTICE");
			this.objForm.DS_HELP = this.dsAuthForm.getColumn(0, "DS_HELP");
			
			// 버튼 정보
			this.objForm.BtnInfo = [];
			for(var i = 0; i < this.dsBtnInfo.rowcount; i++) {
				var json = {};
				json.ID_BUTTON = this.dsBtnInfo.getColumn(i, "ID_BUTTON");
				json.DS_BUTTON = this.dsBtnInfo.getColumn(i, "DS_BUTTON");
				json.TY_BUTTON = this.dsBtnInfo.getColumn(i, "TY_BUTTON");
				json.RM_BUTTON = this.dsBtnInfo.getColumn(i, "RM_BUTTON");
				json.YN_VISIBLE = this.dsBtnInfo.getColumn(i, "YN_VISIBLE");
				json.YN_ENABLED = this.dsBtnInfo.getColumn(i, "YN_ENABLED");
				json.YN_QUERYX = this.dsBtnInfo.getColumn(i, "YN_QUERYX");
				json.YN_UPDATEBLOCK = this.dsBtnInfo.getColumn(i, "YN_UPDATEBLOCK");
				json.SN_ORDER = this.dsBtnInfo.getColumn(i, "SN_ORDER");
				json.LR_BUTTON = this.dsBtnInfo.getColumn(i, "LR_BUTTON");
				json.NM_COLUMN = this.dsBtnInfo.getColumn(i, "NM_COLUMN");
				json.NM_GROUP = this.dsBtnInfo.getColumn(i, "NM_GROUP");
				this.objForm.BtnInfo.push(json);
			}
			
			var json = this.gfnArgsToJson(args);
			if (json.type == "popup" || json.type == "dialog") {	
				if(this.objForm.TY_MENU == "Dialog") {
					json.type = "dialog";
				}
				if(!this.gfnIsNull(this.objForm.CUR_PARAM)) {
					var param = this.objForm.CUR_PARAM;
					for (var key in param) {
			 			if (param.hasOwnProperty(key)) {
							json[key] = param[key];
						}
					}
				}
				this.objForm.CD_MODULE = json.cd_module;
				this.objForm.ID_FORM = json.id_form;
				this.objForm.POP_WIDTH = this.gfnIsNull(json.dwidth) ? 0: nexacro.toNumber(json.dwidth);
				this.objForm.POP_HEIGHT = this.gfnIsNull(json.dheight) ? 0: nexacro.toNumber(json.dheight);
				this.objForm.POP_TOP = this.gfnIsNull(json.top) ? 0: nexacro.toNumber(json.top);
				this.objForm.POP_LEFT = this.gfnIsNull(json.left) ? 0: nexacro.toNumber(json.left);
				this.objForm.POP_CALLBACK = this.gfnIsNull(json.callback) ? "": json.callback;
				this.objForm.POP_ARGS = json;
				
				this.gfnCallPopup(this.objForm, json.type);
			} 
			else if (json.type == "ext") {
				// 외부 다이렉트 화면 접근
				var func = this.objApp.gvMainFrame.form.lookupFunc(json.callback);
				if (func != null) {
					func.call(this.objForm);
				}
			}
			else {
				this.gfnCallNew(this.objForm);
			}
		}
	}
	else if (svcID == "mymenu") 
	{
		this.fnCallback('menu', 0, '', 'cd_system=MM');
 		this.objApp.gdsMyMenu.copyData(this.dsMenu_MM);
// 		
// 		// 버튼 선택 상태
// 		for(var i = 0; i < this.objBtns.length; i++) 
// 		{
// 			var objBtn = this.objBtns[i];
// 			if (objBtn.val == 'MM' && objBtn.getSelectStatus())
// 			{
// 				this.dsMenu.copyData(this.dsMyMenu);
// 				this.fnCallback('menu', 0, '', null);
// 				break;
// 			}
// 		}
	}
	else if (svcID == "mymenu_first") 
	{
 		this.objApp.gdsMyMenu.copyData(this.dsMenu_MM);
	}
}

/************************************************************************************************
 * CALLBACK 콜백 처리부분(Transaction, Popup)
 ************************************************************************************************/
 
/************************************************************************************************
 * CRUD 및 TRANSACTION 서비스 호출 처리
 ************************************************************************************************/

/************************************************************************************************
 * 사용자 FUNCTION 영역
 ************************************************************************************************/
/**
 * @description 상단 top메뉴 변경시 left메뉴 변경 처리
*/
this.fnChangeMenu = function (topMenuId)
{
	//var filterExpr = this.objApp.gvMenuColumns.groupId + "==" + nexacro.wrapQuote(topMenuId) + "&&" + this.objApp.gvMenuColumns.menuLevel + "!=0";
	//this.objApp.gdsMenu.set_enableevent(false);
	//this.dsMenu.set_enableevent(false);
	//this.objApp.gdsMenu.filter(filterExpr);
	//this.dsMenu.copyData(this.objApp.gdsMenu, true);
	//this.objApp.gdsMenu.filter("");
	//this.objApp.gdsMenu.set_enableevent(true);
	//this.dsMenu.set_enableevent(true);
};

 /**
 * @description FORM오픈 [공통함수호출]
*/
this.fnFormOpen = function (objDs,nTargetRow,objArg)
{
	if( this.gfnIsNull(objDs) ) return;
	if( this.gfnIsNull(nTargetRow) ) return;
	if( this.gfnIsNull(objArg) ) objArg = [];

	var oObj = {
		ds    : objDs,  			// 메뉴 dataset
		nRow  : nTargetRow,      	// 선택된
		oArgs : objArg       		// 넘길 argument
	};
	this.gfnCall(oObj);

};

/************************************************************************************************
 * 각 COMPONENT 별 EVENT 영역
 ************************************************************************************************/
/**
 * @description 트리더블클릭이벤트
*/
this.grdMenu_oncellclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	if(e.clickitem != "treeitembutton") {
		this.fnMenuOpen(obj, e.row, true);
	}
};
this.grdMenu_oncelldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	this.fnMenuOpen(obj, e.row);
};

this.fnMenuOpen = function(obj:nexacro.Grid, dsrow, isMenu) {
	//if(isMenu==null) isMenu = false;
	var row = obj.getTreeRow(dsrow);
	
	var menuType = obj.getCellValue(row, 2);
	//if(isMenu && menuType == "메뉴") {
	if(menuType == "메뉴") {
		obj.setTreeStatus(row, !obj.getTreeStatus(row));
	}
	//else if(!isMenu && menuType == "화면" || menuType == "Dialog" || menuType == "Link") {
	else if(menuType == "화면" || menuType == "Dialog" || menuType == "Link") {
		var cd_system = obj.val;
		var dsMenu = this["dsMenu_"+cd_system];
		var cd_module = dsMenu.getColumn(dsrow, dsMenu.getColIndex("CD_MODULE"));
		var id_form = dsMenu.getColumn(dsrow, dsMenu.getColIndex("ID_FORM"));
		var nm_form = dsMenu.getColumn(dsrow, dsMenu.getColIndex("NM_FORM"));
		var objArg = [];
		var authArg = "";
		
		var id_win = cd_module + "#" + id_form;
		var winid = this.objApp.gdsOpenMenu.lookup("ID_WIN", id_win, "ID_WIN");

		if (menuType == "화면" || menuType == "Link") {
			if (!this.gfnIsNull(winid))
			{
				if (this.objApp.gvFormLimit == 1 && this.objApp.gvMdiFrame.form.isActiveFrame(winid) == true)
				{
					//this.objApp.gvMdiFrame.form.fnMoveTab(winid);
					return false;
				}
				else if (this.objApp.gvFormLimit > 1 && this.objApp.gvFormLimit <= this.objApp.gvMdiFrame.form.isActiveFrameCount(winid)) {
					this.objApp.gvMdiFrame.form.isActiveFrame(winid);
					alert(this.objApp.gvFormLimit + "개 초과하여 같은 화면을 열수 없습니다");
					return false;			
				}
			}
			
			//열린메뉴 체크( application.gvMax = 8)	
			if( this.objApp.gvMax <= this.objApp.gdsOpenMenu.getRowCount() ){
						  
				alert(this.objApp.gvMax +"개 초과하여 화면을 열수 없습니다");
				return false;
			}
		}
		else if (menuType == "Dialog") {	
			var args = [];
			args.push("type=dialog");
			args.push("cd_module=" + cd_module);
			args.push("id_form=" + id_form);
			authArg = args.join(' ');
		}
		if (menuType == "Link") {	
			var args = [];
			args.push("type=link");
			args.push("cd_module=" + cd_module);
			args.push("id_form=" + id_form);
			authArg = args.join(' ');
		}
		
		this.objForm = {
			CD_MODULE: cd_module,
			ID_FORM: id_form,
			NM_FORM: nm_form,
			DS_FORM: "",
			ID_GROUP: "",
			GR_SEARCH: "",
			TY_AUTH: "",
			CD_ROLE: "",
			Args : objArg
		};

		// 인증정보
		this.fnAuthForm(this, cd_module, id_form, authArg);
	
	}
};

this.staLogo_onclick = function(obj:nexacro.Static,e:nexacro.ClickEventInfo)
{
	// Main 페이지
	if(this.objApp.gvVFrameSet1.separatesize == "54,0,*,0") {
		// 메인 페이지에서 다시 로고를 눌렀을때 화면이 있으면 화면으로 전화
		if(this.objApp.gvMdiFrame.form.dsTab.rowcount > 0) {
			this.objApp.gvVFrameSet1.set_separatesize("54,42,0,*");	
		} else {
			this.objApp.gvMainFrame.form.fnShowWork(false);
			this.objApp.gvMainFrame.form.fnSelect();
		}
	} else {
		this.objApp.gvVFrameSet1.set_separatesize("54,0,*,0");	
		this.objApp.gvMainFrame.form.fnShowWork(false);
		this.objApp.gvMainFrame.form.fnSelect();
	}
	
};
]]></Script>
  </Form>
</FDL>
