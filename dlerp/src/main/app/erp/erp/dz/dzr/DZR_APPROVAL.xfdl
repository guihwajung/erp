<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="1120" height="550" titletext="전자결재 상신" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divData" taborder="0" text="div00" left="0" top="0" right="0" bottom="0">
          <Layouts>
            <Layout>
              <Static id="staTT_DOC" taborder="1" left="10" top="10" width="730" height="35" cssclass="sta_TITLE_Bg" fittocontents="none"/>
              <WebBrowser id="webView" taborder="0" left="10" top="staTT_DOC:0" right="10" bottom="10" onusernotify="divData_web00_onusernotify"/>
              <Div id="divButton" taborder="2" text="div00" top="10" height="35" right="10" width="380" enable="false" visible="false" urlchangeeffect="W">
                <Layouts>
                  <Layout>
                    <Button id="btnConfirm" taborder="0" text="결재" top="4" width="76" cssclass="btn_WF_function" enable="false" right="0" bottom="5" visible="true" onclick="divData_divButton_btnConfirm_onclick"/>
                    <Button id="btnReject" taborder="1" text="반려" top="4" width="52" right="btnConfirm:3" cssclass="btn_WF_action" enable="false" bottom="5" onclick="divData_divButton_btnReject_onclick"/>
                    <Button id="btnCancle" taborder="2" text="상신취소" top="4" width="76" right="btnReject:3" enable="false" bottom="5" cssclass="btn_WF_action" onclick="divData_divButton_btnCancle_onclick"/>
                    <Button id="btnRequest" taborder="3" text="결재상신" top="4" width="76" right="btnCancle:3" enable="false" bottom="5" onclick="divData_divButton_btnRequest_onclick"/>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	//this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();	
	this.fnSearch();
};

/************************************************************************
 * 버튼 설정 
 * 서브버튼 사용 처리. 공통 및 확장버튼 버튼관리화면에서 셋팅.
 ************************************************************************/
this.fnSetButton = function() 
{
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
	//this.FormBtns.Select.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() 
{
	//this.btn1 = this.gfnFormButtonAdd("BTN_EXTENSION", "fnExtension");  

};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() 
{
	this.btnRequest = this.divData.form.divButton.form.btnRequest;
	this.btnCancle = this.divData.form.divButton.form.btnCancle;
	this.btnReject = this.divData.form.divButton.form.btnReject;
	this.btnConfirm = this.divData.form.divButton.form.btnConfirm;
				
	this.webView = this.divData.form.webView;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() 
{
	// 그리드 초기화
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function()  
{
	var CD_CORP = this.gfnGetParam('CD_CORP');
	var NO_APRV = this.gfnGetParam('NO_APRV');
	
	if (this.gfnIsNull(CD_CORP))
	{
		CD_CORP = this.objApp.gdsUserInfo.getColumn(this.objApp.gdsUserInfo.rowposition, 'CD_CORP');
	}

	this.dsSearch.setColumn(this.dsSearch.rowposition, 'CD_CORP', CD_CORP);
	this.dsSearch.setColumn(this.dsSearch.rowposition, 'NO_APRV', NO_APRV);
};

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
this.fnSearch = function ()
{
	var strSvcId = "select";
    var strSvcType = "select";
    var inProc = "_dsProc";
    var inData = "select=dsSearch";
    var outData = "dsList=select0"; 
    var strArg = "";
    var callBackFnc = "fnCallback";
	
	this.gfnTransaction(strSvcId, strSvcType, inProc, inData, outData, strArg, callBackFnc);
};

this.fnExecute = function(ST_APRV)
{	
	var date = this.gfnGetDate("milli");
	
	var CD_CORP = this.dsList.getColumn(this.dsList.rowposition, "CD_CORP");
	var NO_APRV = this.dsList.getColumn(this.dsList.rowposition, "NO_APRV");
	var NO_DOC = this.dsList.getColumn(this.dsList.rowposition, "NO_DOC");
	var ID_USER = this.objApp.gdsUserInfo.getColumn(this.objApp.gdsUserInfo.rowposition, 'ID_USER');
	var CD_DEPT_ACNT = this.objApp.gdsUserInfo.getColumn(this.objApp.gdsUserInfo.rowposition, 'CD_DEPT_ACNT');
	
	this.dsExecute.clearData();
	
	if (this.gfnIsNull(NO_DOC))
	{
		NO_DOC = "TEST_DOC_" + date;
	}
	
	var nRow = this.dsExecute.addRow();
	this.dsExecute.setColumn(nRow, "CD_CORP", CD_CORP);
	this.dsExecute.setColumn(nRow, "NO_APRV", NO_APRV);
	this.dsExecute.setColumn(nRow, "ST_APRV", ST_APRV);
	this.dsExecute.setColumn(nRow, "NO_DOC", NO_DOC);
	this.dsExecute.setColumn(nRow, "ID_APRV", ID_USER);
	this.dsExecute.setColumn(nRow, "DEPT_APRV", CD_DEPT_ACNT);
			
	var strSvcId    = "execute";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "execute=dsExecute";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
			
	this.gfnTransaction(strSvcId, strSvcType, inProc, inData, outData, strArg, callBackFnc);
}
/************************************************************************
 * Validate
 ************************************************************************/


/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") 
	{
		var staTT_DOC = this.divData.form.staTT_DOC;
		var divButton = this.divData.form.divButton;
		
		var SVC_ID = this.gfnGetParam('DOORAY_SVC_ID');
		
		if (!this.gfnIsNull(SVC_ID))
		{
			staTT_DOC.set_visible(false);
			divButton.set_visible(false);
			this.set_visible(false);
			var that = this;
			var sUrl = this.gfnGetConfig('DZ', 'AP_DOMAIN');
			var sUri = this.gfnGetConfig('DZ', SVC_ID);
			if (this.gfnIsNull(sUri))
			{
				this.gfnAlert('존재하지 않는 페이지 입니다.[' + SVC_ID + ']');
				return false;
			}
			
			var oParam = this.gfnDataSetToJson(this.dsList, this.dsList.rowposition);
			if (nexacro.getEnvironmentVariable("evRunMode") == '2') 
			{
				oParam.POST_URL = encodeURIComponent(this.gfnGetServerUrl() + "/quickview.html?screenid=ScreenDeskTop&formname=dzr::DZR_APRV_RELOAD.xfdl");
			}
			else 
			{
				if (location.hostname == "localhost" || location.hostname == "127.0.0.1") 
				{
					oParam.POST_URL = encodeURIComponent(this.gfnGetServerUrl() + "/erp/quickview.html?screenid=ScreenDeskTop&formname=dzr::DZR_APRV_RELOAD.xfdl");
				}
				else
				{
					oParam.POST_URL = encodeURIComponent(this.gfnGetServerUrl() + "/quickview.html?screenid=ScreenDeskTop&formname=dzr::DZR_APRV_RELOAD.xfdl");
				}
			}
			
			sUrl += sUri.replace(/\{(\w+)\}/g, function(idx, val) {
				var sValue = that.gfnGetParam(val);
				if (that.gfnIsNull(sValue))
				{
					return that.gfnNvl(oParam[val], '');
				}
				
				return sValue;
			});
						
			var nWidth = 1028;
			var nHeight = 760;
			var nLeft = Math.ceil(( window.screen.width - nWidth )/2);
			var nTop = Math.ceil(( window.screen.height - nHeight )/2); 

			var win = window.open(sUrl, 'approval', "toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=yes, resizable=no, copyhistory=no, width=" + nWidth + ", height=" + nHeight + ", left=" + nLeft + ", top=" + nTop);
			
			if (win == null || typeof(win) == "undefined" || (win == null && win.outerWidth == 0) || (win != null && win.outerHeight == 0) || win.test == "undefined")
			{
				alert("팝업 차단 기능이 설정되어있습니다\n\n차단 기능을 해제(팝업허용) 한 후 다시 이용해 주십시오.");
			}

			this.close();
		}
		else
		{
			staTT_DOC.set_visible(true);
			divButton.set_visible(true);
		
			var ST_APRV = this.dsList.getColumn(this.dsList.rowposition, 'ST_APRV');
			var TT_DOC = this.dsList.getColumn(this.dsList.rowposition, 'TT_DOC');
			var DS_DOC = this.dsList.getColumn(this.dsList.rowposition, 'DS_DOC');
			
			this.divData.form.staTT_DOC.set_text(TT_DOC);
			this.webView.getProperty("document").getProperty("body").setProperty("innerHTML", DS_DOC);
				
			this.btnConfirm.set_text('결재');
				
			if (ST_APRV == '1')
			{
				this.btnRequest.set_enable(true);
				this.btnCancle.set_enable(false);
				this.btnReject.set_enable(false);
				this.btnConfirm.set_enable(false);
			}
			else if (ST_APRV == '2')
			{
				this.btnRequest.set_enable(false);
				this.btnCancle.set_enable(true);
				this.btnReject.set_enable(true);
				this.btnConfirm.set_enable(true);
			}
			else if (ST_APRV == '3')
			{
				this.btnRequest.set_enable(false);
				this.btnCancle.set_enable(false);
				this.btnReject.set_enable(true);
				this.btnConfirm.set_enable(true);
				this.btnConfirm.set_text('결재완료');
			}
			else
			{
				this.btnRequest.set_enable(false);
				this.btnCancle.set_enable(false);
				this.btnReject.set_enable(false);
				this.btnConfirm.set_enable(false);
			}
			
			this.resetScroll();
		}
	}
	else if (svcID == "execute") 
	{
		this.fnSearch();
	}
}

/************************************************************************
 * 기타 이벤트
 ************************************************************************/

this.divData_divButton_btnRequest_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.fnExecute('2');
};

this.divData_divButton_btnCancle_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.fnExecute('6');
};

this.divData_divButton_btnReject_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.fnExecute('5');
};

this.divData_divButton_btnConfirm_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if (obj.text == '결재완료')
	{
		this.fnExecute('4');
	}
	else
	{
		this.fnExecute('3');
	}
};
]]></Script>
    <Objects>
      <Dataset id="dsList">
        <ColumnInfo>
          <Column id="DS_NOTE" type="STRING" size="3000"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="DS_NOTE"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="SP">DZZPR_APRV_VIEW_SELECT</Col>
            <Col id="TARGET">select</Col>
          </Row>
          <Row>
            <Col id="TARGET">execute</Col>
            <Col id="SP">DZZPR_APRV_STAT_UPDATE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="NO_APRV" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CORP"/>
            <Col id="NO_APRV"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsExecute">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="NO_APRV" type="STRING" size="256"/>
          <Column id="ST_APRV" type="STRING" size="256"/>
          <Column id="NO_DOC" type="STRING" size="256"/>
          <Column id="ID_APRV" type="STRING" size="256"/>
          <Column id="DEPT_APRV" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
  </Form>
</FDL>
