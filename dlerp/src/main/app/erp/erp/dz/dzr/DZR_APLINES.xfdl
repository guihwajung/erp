<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1000" height="600" titletext="New Form" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divData" taborder="0" left="0" top="0" bottom="0" cssclass="div_DATA_Bg" right="0">
          <Layouts>
            <Layout>
              <Static id="sta00" taborder="1" text="결재선조회" left="0" top="9" height="22" cssclass="sta_TITLE_Bg" width="800"/>
              <Div id="divTop" taborder="2" left="0" top="sta00:9" cssclass="div_DATA_Bg" text="" height="60" right="0">
                <Layouts>
                  <Layout>
                    <Static id="staDS_SITE" taborder="1" text="제목" left="0" top="0" width="100" height="30" cssclass="sta_WF_tablelabel" textAlign="left" onclick="divData_staDS_SITE_onclick"/>
                    <Static id="staDS_SILHENG" taborder="2" text="기안자" left="0" top="staDS_SITE:-1" width="100" height="30" cssclass="sta_WF_tablelabel" textAlign="left"/>
                    <Static id="staBg1" taborder="3" left="staDS_SITE:-1" top="0" height="30" cssclass="sta_WF_tablebg" right="0"/>
                    <Static id="staBg2" taborder="4" left="staDS_SILHENG:-1" top="staBg1:-1" height="30" cssclass="sta_WF_tablebg" width="391"/>
                    <Edit id="edtID_USER_NM" taborder="0" left="104" top="34" height="20" readonly="true" width="356" background="transparent"/>
                    <Static id="staDS_SILHENG00" taborder="5" text="결재상태" left="489" top="29" width="100" height="30" cssclass="sta_WF_tablelabel" textAlign="left"/>
                    <Static id="staBg00" taborder="6" left="587" top="29" height="30" cssclass="sta_WF_tablebg" right="0"/>
                    <Edit id="edtST_APPR" taborder="7" left="592" top="34" height="20" readonly="true" width="378" background="transparent" color="red"/>
                    <Edit id="edtID_AP" taborder="8" left="104" top="5" height="20" readonly="true" width="866" background="transparent"/>
                  </Layout>
                </Layouts>
              </Div>
              <Button id="btnUpt" taborder="3" text="결재의견수정" top="8" height="25" width="88" right="0" visible="true" onclick="divData_btnUpt_onclick"/>
              <Grid id="objGrid" taborder="0" left="0" top="divTop:10" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();
this.popupVal = "";

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	// 타화면에서 오픈시 넘어오는 파라미터 처리
	if(!this.gfnIsNull(this.getOwnerFrame().ID_AP)) {
		this.dsSearch.setColumn(0, "ID_AP", this.getOwnerFrame().ID_AP);
		
		this.FormBtns.Select.click();
	}	

};

/************************************************************************
 * 버튼 설정 
 * 서브버튼 사용 처리. 공통 및 확장버튼 버튼관리화면에서 셋팅.
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
	//this.FormBtns.Select.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	//this.btn1 = this.gfnFormButtonAdd("BTN_EXTENSION", "fnExtension");  

};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.btnUpt = this.divData.form.btnUpt;
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {	
	this.dxGrid.ExpandUp = "fnGrid_ExpandUp";
	
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DZ", "DZR_APLINES_CM");
	
	this.dxGrid.set_autosizingtype("row");
	
	this.dxGrid.set_selecttype("cell");	
	this.dxGrid.addEventHandler("onselectchanged", this.fnGrid_RowCellChanged, this);
	
	// 그리드 코드파인드 설정
	//this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
	
	// 그리드 onkeyup 이벤트
	//this.dxGrid.addEventHandler("onkeyup", this.fnGrid_OnKeyUp, this);
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("ID_AP", "string");
	
	this.dsSave = new Dataset();
	this.dsSave.addColumn("ID_AP", "string");
	this.dsSave.addColumn("ID_USER", "string");
	this.dsSave.addColumn("SN_ORDER", "string");
	this.dsSave.addColumn("DS_NOTE", "string");
	
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;

	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "ID_AP", this.dsSearch.getColumn(0, "ID_AP"));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0 dsListIdap=select1";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	//var nrow = this.gfnGridAdd(this.dxGrid); // top (default), bottom, current
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	//this.gfnGridDel(this.dxGrid);
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {	
	var validate = true;
	/*
	if (this.gfnIsNull(this.dsSearch.getColumn(0,"CD_SITE"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.ccfCD_SITE.form.CDTextBox.setFocus();
		}
		this.gfnAlert("현장코드는 반드시 입력 하셔야 합니다.", "fnVaidateCallback");
	}else if (this.gfnIsNull(this.dsSearch.getColumn(0,"NO_ID"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.ccfNO_ID.form.CDTextBox.setFocus();
		}
		this.gfnAlert("성명은 반드시 입력 하셔야 합니다.", "fnVaidateCallback");
	}
	*/
	
	return validate;
	
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
		
		this.fnBtnCheck();
	}	
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGrid_ExpandUp = function(obj:nexacro.Grid, e:nexacro.GridMouseEventInfo) {
   var colnm = this.gfnGridGetBindColumnNameByIndex(obj, e.cell);
  
   if(colnm == "ATTACH_FILE") {
      var fileManager = {};
      fileManager.CD_GUBUN = "DZAP";
      fileManager.CD_DIR = [this.dsList.getColumn(e.row, "ID_AP") + "_" + this.dsList.getColumn(e.row, "ID_AP_USER")];
	  if(this.FormInfo.TY_AUTH == "R") {
		  fileManager.IS_READONLY = true;
	  } else {
		  fileManager.IS_READONLY = false;
      }
	  
	  fileManager.IS_READONLY = true;
	  
      this.gfnFileManager(fileManager, "fnFileCallback");
   }   
};

this.fnGrid_RowCellChanged = function(obj:nexacro.Grid,e:nexacro.GridSelectEventInfo)
{
    if ((obj.oldrow > -1 && obj.oldrow == e.row)
		|| (obj.oldrow == -1 && e.oldrow != e.row)) {
		this.fnBtnCheck();

		obj.oldrow = -1;
	}
};

this.fnBtnCheck = function()
{
	if(this.dsListIdap.rowcount < 1) return;
	
	this.btnUpt.set_enable(false);
	
	var ap_state = this.dsListIdap.getColumn(0, "AP_STATE");
	if(ap_state == "01" || ap_state == "02"){
		if(this.dsList.getColumn(this.dsList.rowposition, "ID_AP_USER") == this.AuthClient.ID_USER){
			this.btnUpt.set_enable(true);
		}
	}	
} 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};

this.divData_btnUpt_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var param = {};
	param.DS_NOTE = this.dsList.getColumn(this.dsList.rowposition, "DS_NOTE");
	param.ID_AP = this.dsList.getColumn(this.dsList.rowposition, "ID_AP");
	param.ID_AP_USER = this.dsList.getColumn(this.dsList.rowposition, "ID_AP_USER");
	
	this.gfnFormOpenNonAuth("DZR", "DZR_APLINES_DLG", "fnDetailCallback", param, 1150, 590);
};


this.fnDetailCallback = function(strId, val) {
	if(val == true){		
		this.dsSave.clearData();
	
		this.dsSave.addRow();
		
		var nRow = this.dsList.rowposition;
		
		this.dsSave.setColumn(0, "ID_AP",  this.dsList.getColumn(nRow, "ID_AP"));
		this.dsSave.setColumn(0, "ID_USER", this.AuthClient.ID_USER);
		this.dsSave.setColumn(0, "SN_ORDER", this.dsList.getColumn(nRow, "SN_ORDER"));
		this.dsSave.setColumn(0, "DS_NOTE", this.popupVal);
		
		if (this.dsSave.rowcount == 0) return;
		
		var strSvcId    = "save";
		var strSvcType  = "save";
		var inProc		= "_dsProc";
		var inData      = "save=dsSave";
		var outData     = "";
		var strArg      = "";
		var callBackFnc = "fnCallback";
		
		this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
							strSvcType , 	// transaction을 요청할 구분
							inProc,			// Procedure 정보 Dataset 이름
							inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
							outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
							strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
							callBackFnc); // 통신방법 정의 [생략가능]
	}else{
		this.FormBtns.Select.click();
	}	
};	]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DZRPR_APPLINES_INFO_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DZRPR_APPLINES_NOTE_UPDATE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="ID_AP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="ID_AP"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsListIdap">
        <ColumnInfo>
          <Column id="DS_TITLE" type="STRING" size="256"/>
          <Column id="DS_HNAME" type="STRING" size="256"/>
          <Column id="ST_APPR" type="STRING" size="256"/>
          <Column id="AP_STATE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divData.form.divTop.form.edtID_USER_NM" propid="value" datasetid="dsListIdap" columnid="DS_HNAME"/>
      <BindItem id="item2" compid="divData.form.divTop.form.edtST_APPR" propid="value" datasetid="dsListIdap" columnid="ST_APPR"/>
      <BindItem id="item3" compid="divData.form.divTop.form.edtID_AP" propid="value" datasetid="dsListIdap" columnid="DS_TITLE"/>
    </Bind>
  </Form>
</FDL>
