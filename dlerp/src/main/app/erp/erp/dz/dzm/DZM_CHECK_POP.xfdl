<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="500" height="300" titletext="New Form" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divData" taborder="0" left="0" top="5" bottom="0" right="0" cssclass="div_DATA_Bg" text="">
          <Layouts>
            <Layout>
              <CheckBox id="chk00" taborder="0" text="chk00" left="109" top="139" width="100" height="74"/>
              <CheckBox id="chk01" taborder="0" text="chk00" left="159" top="139" width="100" height="74"/>
              <CheckBox id="chk02" taborder="0" text="chk00" left="209" top="139" width="100" height="74"/>
              <CheckBox id="chk03" taborder="0" text="chk00" left="259" top="139" width="100" height="74"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();

	this.dsSearch.setColumn(0, "CD_SITE", this.getOwnerFrame().CD_SITE);	
	this.FormBtns.Select.click();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.BTN_APP_PRINT = this.gfnFormButtonAdd("BTN_APP_PRINT", "fnAPP_PRINT");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {	
	this.dxGrid = this.divData.form.divData02.form.objGrid;
	this.dxGrid1 = this.divData.form.divData03.form.objGrid1;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList1, "DS", "DSG_HDC_JONGHAP1");
	this.gfnGridInit(this.dxGrid1, this.dsList2, "DS", "DSG_HDC_JONGHAP2");
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_SITE", "string");		
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0 dsList1=select1 dsList2=select2";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	
}


/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
	
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;
	/*
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "CD_SITE"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.divSearch.form.ccfCD_SITE.form.CDTextBox.setFocus();
		}
		this.gfnAlert("현장코드를 입력하세요.", "fnVaidateCallback");
	}
	*/
	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}	
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.dsList.clearData();	// 싱글폼데이터 초기화
		this.dsList1.clearData();	// 싱글폼데이터 초기화
		this.dsList2.clearData();	// 싱글폼데이터 초기화
	}
};

this.fnAPP_PRINT = function() {
	// 선택된 row가 있을 경우에만 팝업을 띄움
	//if (!this.gfnGridIsRow(this.dxGrid)) { return false; }C1062C
	
	this.dsReport = new Dataset();
	this.dsReport.addColumn("CD_SITE", "string");	
	
	this.dsReport.addRow();

	this.dsReport.setColumn(0, "CD_SITE", this.getOwnerFrame().CD_SITE);
	
	var inProc		= "_dsProc";
	//var inParam 	= "params=dsReportParam";	// 조회SP이외 사용할 정보
	var inParam 	= "";						// 필요없는 경우 생략
	var inData      = "report=dsReport";
	var reportpath  = "/ds/dsg/DSG_HDC_JONGHAP.ozr";
	
	// 일반: gfnOpenReport(this, reportpath, inProc, inParam, inData);
	// SAP : gfnOpenReport(this, reportpath, inProc, inParam, inData, true);
	// SAP 호출시 마지막인자 추가 true 설정	
	
	gfnOpenReport(this, reportpath, inProc, inParam, inData);
}
]]></Script>
    <Objects>
      <Dataset id="dsList">
        <ColumnInfo>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="DS_SITE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DSGPR_HDC_JONGHAP</Col>
          </Row>
          <Row>
            <Col id="TARGET">report</Col>
            <Col id="SP">DSGPR_HDC_JONGHAP_REPORT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_SITE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_SITE"/>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item24" compid="divData.form.divData01.form.tclDT_EBGT_FROM" propid="value" datasetid="dsList" columnid="DT_EBGT_FROM"/>
      <BindItem id="item25" compid="divData.form.divData01.form.tclDT_EBGT_TO" propid="value" datasetid="dsList" columnid="DT_EBGT_TO"/>
      <BindItem id="item0" compid="divData.form.divData01.form.txtAM_DOGEUB_PROV" propid="value" datasetid="dsList" columnid="AM_DOGEUB_PROV"/>
      <BindItem id="item1" compid="divData.form.divData01.form.txtAM_DOGEUB_VAT" propid="value" datasetid="dsList" columnid="AM_DOGEUB_VAT"/>
      <BindItem id="item2" compid="divData.form.divData01.form.txtRT_JIBUN" propid="value" datasetid="dsList" columnid="RT_JIBUN"/>
      <BindItem id="item3" compid="divData.form.divData01.form.tclDT_JUNGSAN" propid="value" datasetid="dsList" columnid="DT_JUNGSAN"/>
      <BindItem id="item4" compid="divData.form.divData01.form.txtCD_SITE" propid="value" datasetid="dsList" columnid="CD_SITE"/>
      <BindItem id="item5" compid="divData.form.divData01.form.txtDS_SITE" propid="value" datasetid="dsList" columnid="DS_SITE"/>
      <BindItem id="item6" compid="divData.form.divData01.form.txtDS_SOJANG" propid="value" datasetid="dsList" columnid="DS_SOJANG"/>
      <BindItem id="item7" compid="divData.form.divData01.form.txtDS_CHONGMU" propid="value" datasetid="dsList" columnid="DS_CHONGMU"/>
      <BindItem id="item8" compid="divData.form.divData01.form.txtDS_VENDOR" propid="value" datasetid="dsList" columnid="DS_VENDOR"/>
      <BindItem id="item9" compid="divData.form.divData01.form.txtDS_GONGSA" propid="value" datasetid="dsList" columnid="DS_GONGSA"/>
    </Bind>
  </Form>
</FDL>
