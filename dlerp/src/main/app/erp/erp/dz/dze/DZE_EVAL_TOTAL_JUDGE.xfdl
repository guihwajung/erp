<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="DWA_SILHENG" width="1280" height="720" titletext="New Form" onload="DWA_SILHENG_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0" top="0" height="45" right="0" cssclass="div_SEARCH_Bg" formscrollbartype="auto auto">
          <Layouts>
            <Layout>
              <Static id="staYY_WORK" taborder="1" text="평가년도" left="10" top="10" width="50" height="25" textDecoration="underline"/>
              <Div id="ctcYY_WORK" taborder="0" left="staYY_WORK:10" top="10" width="100" height="25" url="cmm::cmmCalYY.xfdl"/>
              <Div id="ccfMagam" CDTextWidth="50" CodeFindName="DCX_CFEVALUE_MAGAM_SITE_VENDOR" taborder="2" left="ctcYY_WORK:10" top="10" width="98" height="25" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staCD_SITE" taborder="3" text="현장코드" left="ccfMagam:20" top="10" width="50" height="25" textDecoration="underline"/>
              <Div id="ccfCD_SITE" CodeFindName="DZX_CFSITE" CDTextWidth="70" taborder="4" left="staCD_SITE:10" top="10" width="200" height="25" url="cmm::cmmCodeFind.xfdl"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0" oncelldblclick="divData_objGrid_oncelldblclick"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DZFPR_EVAL_TOTAL_JUDGE_SELECT</Col>
          </Row>
          <Row>
            <Col id="SP">DZFPR_EVAL_TOTAL_MAGAM_SAVE</Col>
            <Col id="TARGET">magam</Col>
          </Row>
          <Row>
            <Col id="TARGET">cancel</Col>
            <Col id="SP">DZFPR_EVAL_TOTAL_MAGAM_CANCEL_SAVE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="EVAL_YEAR" type="STRING" size="256"/>
          <Column id="EVAL_TYPE" type="STRING" size="256"/>
          <Column id="CD_SITE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="EVAL_YEAR"/>
            <Col id="EVAL_TYPE"/>
            <Col id="CD_SITE"/>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.DWA_SILHENG_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	var dt = new Date();
	this.divSearch.form.ctcYY_WORK.form.TextBox.set_value(dt.getFullYear());
	//this.dsSearch.setColumn(0, "YR_EVALUE", dt.getFullYear());
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
	this.FormBtns.Add.set_enable(false);
	this.FormBtns.Save.set_enable(false);
	this.FormBtns.Del.set_enable(false);
};

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
// 	this.btn1 = this.gfnFormButtonAdd("btnEvalue", "fnEvalue");
 	this.btnConfirm = this.gfnFormButtonAdd("btnConfirm", "fnConfirm");
 	this.btnCancel = this.gfnFormButtonAdd("btnCancel", "fnCancel");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfMagam = this.divSearch.form.ccfMagam;
	this.ccfCD_SITE = this.divSearch.form.ccfCD_SITE;
	
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {

	this.ccfMagam.form.DSTextBox.set_width("0");
	this.ccfMagam.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";

	this.gfnGridInit(this.dxGrid, this.dsList, "DZ", "DZF_EVAL_TOTAL_JUDGE");
	
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_SITE", "string");
	this.dsSelect.addColumn("EVAL_YEAR", "string");
	this.dsSelect.addColumn("EVAL_TYPE", "string");
	
	this.dsMagam = new Dataset();
	this.dsMagam.addColumn("EVAL_YEAR", "string");
	this.dsMagam.addColumn("EVAL_TYPE", "string");
	this.dsMagam.addColumn("CD_SITE", "string");

};

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if(!this.fnValidate()) return;

	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsSelect.setColumn(0, "EVAL_YEAR", this.dsSearch.getColumn(0, "EVAL_YEAR"));
	this.dsSelect.setColumn(0, "EVAL_TYPE", this.dsSearch.getColumn(0, "EVAL_TYPE"));

	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {

};

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	//this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	
};

 
/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnValidate = function() {

	if (this.gfnIsNull(this.dsSearch.getColumn(0, "EVAL_YEAR"))) {
		this.fnVaidateCallback = function() {
			this.divSearch.form.ctcYY_WORK.form.TextBox.setFocus();
		}
		this.gfnAlert("평가년도를 입력하세요.");
		return false;
	}
	else if (this.gfnIsNull(this.dsSearch.getColumn(0, "EVAL_TYPE"))){
		this.fnVaidateCallback = function() {
			this.ccfMagam.form.CDTextBox.setFocus();
		}
		this.gfnAlert("회차를 입력하세요.");
		return false;
	}
// 		else if (this.gfnIsNull(this.dsSearch.getColumn(0, "CD_SITE"))){
// 		this.fnVaidateCallback = function() {
// 			this.ccfCD_SITE.form.CDTextBox.setFocus();
// 		}
// 		this.gfnAlert("현장코드를 입력하세요.");
// 		return false;
//	}
	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
// 		this.FormBtns.Add.set_enable(false);
// 		this.FormBtns.Save.set_enable(false);
// 		this.FormBtns.Del.set_enable(false);
		this.fnBtnCheckAll();
	}
	else if(svcID == "magam") {
		if (errorCode == 0) {
			this.fnCallback_callback = function()
			{
				this.FormBtns.Select.click();
			}	
		
			this.gfnAlert("마감 정상처리하였습니다.", "fnCallback_callback");
		} 
		else {
			this.gfnAlert(errorMsg);			
		}
	}
	else if(svcID == "cancel") {
		if (errorCode == 0) {
			this.fnCallback_callback = function()
			{
				this.FormBtns.Select.click();
			}	
		
			this.gfnAlert("마감취소 정상처리하였습니다.", "fnCallback_callback");
		} 
		else {
			this.gfnAlert(errorMsg);			
		}
	}
};

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if(id == "ccfMagam"){
		dsUserParam.setColumn(nrow, "YR_EVALUE", this.dsSearch.getColumn(0, "EVAL_YEAR"));
		dsUserParam.setColumn(nrow, "ID_EVALUE", this.AuthClient.ID_USER);	
	}
	return true;
};

this.fnAfterCDTextChanged = function(id){
};


/************************************************************************
 * 그리드 이벤트
 ************************************************************************/

this.fnConfirm = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if(!this.fnValidate()) return false;
	
	var nCnt = this.dsList.getCaseCount( "CHK == '1'")   
	
	if( nCnt == 0 ) {
		this.gfnAlert("선택된 대상이 없습니다.");
		return false
	}

	var msg = "평가년도 : [" + this.dsSearch.getColumn(0, "EVAL_YEAR") + "]"
			+ "\n회차 : [" + this.dsSearch.getColumn(0, "EVAL_TYPE") + "]"
	if( nCnt == 1 ) {
		+ "\n현장코드 : [" + this.dsList.getColumn(this.dsList.rowposition , "CD_SITE") + "] " + this.dsList.getColumn(this.dsList.rowposition , "DS_SITE")
		+ "\n\n마감을 진행하시겠습니까?" ;
	}else if( nCnt > 1 ){ 
		+ "\n선택한 ["+ nCnt + "]개의 현장을 마감하시겠습니까?"
	}
			
		
	
	this.gfnConfirm(msg, "fnConfirm_callback");
}

this.fnConfirm_callback = function(strID, val)
{
	if(val == true)
	{
		this.dsMagam.clearData();
	
		for (var i = 0; i < this.dsList.rowcount; i++) {
			if(this.dsList.getColumn(i, "CHK") == "1") {
				var nrow = this.dsMagam.addRow();
		
				this.dsMagam.setColumn(nrow, "EVAL_YEAR", this.dsSearch.getColumn(0, "EVAL_YEAR"));
				this.dsMagam.setColumn(nrow, "EVAL_TYPE", this.dsSearch.getColumn(0, "EVAL_TYPE"));
				this.dsMagam.setColumn(nrow, "CD_SITE", this.dsList.getColumn(i , "CD_SITE"));
			}
		}
	
	
		var strSvcId    = "magam";
		var strSvcType  = "save";
		var inProc		= "_dsProc";
		var inData      = "magam=dsMagam";
		var outData     = "";
		var strArg      = "";
		var callBackFnc = "fnCallback";
		
		this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
							strSvcType , 	// trabsaction을 요청할 구분
							inProc,			// Procedure 정보 Dataset 이름
							inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
							outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
							strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
							callBackFnc); // 통신방법 정의 [생략가능]
	}
}

this.fnCancel = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if(!this.fnValidate()) return false;
	
	var nCnt = this.dsList.getCaseCount( "CHK == '1'")   
	
	if( nCnt == 0 ) {
		this.gfnAlert("선택된 대상이 없습니다.");
		return false
	}

	var msg = "평가년도 : [" + this.dsSearch.getColumn(0, "EVAL_YEAR") + "]"
			+ "\n회차 : [" + this.dsSearch.getColumn(0, "EVAL_TYPE") + "]"
	if( nCnt == 1 ) {
		+ "\n현장코드 : [" + this.dsList.getColumn(this.dsList.rowposition , "CD_SITE") + "] " + this.dsList.getColumn(this.dsList.rowposition , "DS_SITE")
		+ "\n\n마감취소를 진행하시겠습니까?" ;
	}else if( nCnt > 1 ){ 
		+ "\n선택한 ["+ nCnt + "]개의 현장을 마감취소 하시겠습니까?";
	}
	
	this.gfnConfirm(msg, "fnCancel_callback");
}

this.fnCancel_callback = function(strID, val)
{
	if(val == true)
	{
		this.dsMagam.clearData();
		
		for (var i = 0; i < this.dsList.rowcount; i++) {
			if(this.dsList.getColumn(i, "CHK") == "1") {
				var nrow = this.dsMagam.addRow();
		
				this.dsMagam.setColumn(nrow, "EVAL_YEAR", this.dsSearch.getColumn(0, "EVAL_YEAR"));
				this.dsMagam.setColumn(nrow, "EVAL_TYPE", this.dsSearch.getColumn(0, "EVAL_TYPE"));
				this.dsMagam.setColumn(nrow, "CD_SITE", this.dsList.getColumn(i , "CD_SITE"));
			}
		}
	
		var strSvcId    = "cancel";
		var strSvcType  = "save";
		var inProc		= "_dsProc";
		var inData      = "cancel=dsMagam";
		var outData     = "";
		var strArg      = "";
		var callBackFnc = "fnCallback";
		
		this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
							strSvcType , 	// trabsaction을 요청할 구분
							inProc,			// Procedure 정보 Dataset 이름
							inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
							outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
							strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
							callBackFnc); // 통신방법 정의 [생략가능]
	}
}



/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
// this.fnSearchInit = function(obj,e) {
// 	if(e == null || (e.pretext != e.posttext)) {
// 		// 폼상태 초기화
// 		this.gfnSetFormStatus(this);	
// 		this.gfnGridClear(this.dxGrid);
// 	}
// };


this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
		
		if(e.columnid == "EVAL_YEAR")
		{
			this.dsSearch.setColumn(0, "EVAL_TYPE", "");
		}
	}
};


this.fnBtnCheckAll = function()
{
	this.gfnBtnCheck(this.btn1, this.dsList);
	this.gfnBtnCheck(this.btnConfirm, this.dsList);
	this.gfnBtnCheck(this.btnCancel, this.dsList);
}]]></Script>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ctcYY_WORK.form.TextBox" propid="value" datasetid="dsSearch" columnid="EVAL_YEAR"/>
      <BindItem id="item1" compid="divSearch.form.ccfMagam.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="EVAL_TYPE"/>
      <BindItem id="item2" compid="divSearch.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
    </Bind>
  </Form>
</FDL>
