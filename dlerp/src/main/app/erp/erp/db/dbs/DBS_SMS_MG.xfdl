<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="결산기수" onload="form_onload">
    <Layouts>
      <Layout stepcount="0">
        <Div id="divData" taborder="0" left="0" top="0" bottom="0" right="0" cssclass="div_DATA_Bg" text="">
          <Layouts>
            <Layout>
              <Static id="staBg1" taborder="13" top="31" height="312" cssclass="sta_WF_tablebg" right="0" width="262"/>
              <Grid id="objGrid" taborder="0" left="390" top="32" right="staBg1:18" bottom="0"/>
              <Static id="staBg01" taborder="1" left="109" top="32" height="27" cssclass="sta_WF_tablebg" width="262"/>
              <Static id="staBg02" taborder="2" left="109" top="62" height="27" cssclass="sta_WF_tablebg" width="262"/>
              <Static id="staBg03" taborder="3" left="109" top="92" height="27" cssclass="sta_WF_tablebg" width="262"/>
              <Static id="staBg04" taborder="4" left="109" top="122" height="27" cssclass="sta_WF_tablebg" width="262"/>
              <Static id="staBg05" taborder="5" left="108" top="152" height="307" cssclass="sta_WF_tablebg" width="262"/>
              <Edit id="txtSEND_NAME" taborder="6" left="115" top="36" width="250" height="20" readonly="false" textAlign="left" inputtype="normal"/>
              <Static id="staDS_CONTENT05" taborder="7" text="메시지" left="0" top="152" width="109" height="307" textAlign="center" cssclass="sta_WF_tablelabelE"/>
              <Static id="staDS_CONTENT04" taborder="8" text="수신자번호" left="0" top="122" width="110" height="27" textAlign="center" cssclass="sta_WF_tablelabelE"/>
              <Static id="staDS_CONTENT03" taborder="9" text="수신자명" left="0" top="92" width="110" height="27" textAlign="center" cssclass="sta_WF_tablelabelE"/>
              <Static id="staDS_CONTENT02" taborder="10" text="송신자번호" left="0" top="62" width="110" height="27" textAlign="center" cssclass="sta_WF_tablelabelE"/>
              <Static id="staDS_CONTENT01" taborder="11" text="송신자명" left="0" top="32" width="110" height="27" textAlign="center" cssclass="sta_WF_tablelabelE"/>
              <Static id="sta01" taborder="12" text="SMS 송신" left="0" top="0" height="22" cssclass="sta_TITLE_Bg" width="300"/>
              <TextArea id="txtRM_MSG" taborder="14" top="37" height="300" right="7" width="249" readonly="true" enable="true" background="#f3f3f3"/>
              <Static id="sta00" taborder="15" text="자주사용하는 메시지" left="390" top="0" height="22" cssclass="sta_TITLE_Bg" width="230"/>
              <Static id="sta02" taborder="16" text="메시지상세" top="0" height="22" cssclass="sta_TITLE_Bg" right="0" width="262"/>
              <TextArea id="txtMESSAGE" taborder="17" left="114" top="155" width="250" height="300"/>
              <Edit id="txtRECV_NAME" taborder="18" left="115" top="95" width="250" height="20" readonly="false" textAlign="left"/>
              <Edit id="txtSEND_NUMBER" taborder="19" left="115" top="65" width="250" height="20" readonly="false" textAlign="left" inputtype="number"/>
              <Edit id="txtRECV_NUMBER" taborder="20" left="115" top="125" width="250" height="20" readonly="false" textAlign="left" inputtype="number"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetVariable();
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetParameter();
	this.fnSetEvent();  
	
	this.dsSearch.setColumn(0, "SEND_NAME", this.AuthClient.DS_HNAME);	
	
	// 타화면에서 오픈시 넘어오는 파라미터 처리
	if(!this.gfnIsNull(this.getOwnerFrame().RECV_NUMBER) && !this.gfnIsNull(this.getOwnerFrame().RECV_NAME) && !this.gfnIsNull(this.getOwnerFrame().MESSAGE)) {	
		this.dsSearch.setColumn(0, "RECV_NUMBER", this.getOwnerFrame().RECV_NUMBER);
		this.dsSearch.setColumn(0, "RECV_NAME", this.getOwnerFrame().RECV_NAME);
		this.dsSearch.setColumn(0, "MESSAGE", this.getOwnerFrame().MESSAGE);
		this.dsSearch.setColumn(0, "SEND_NUMBER", this.getOwnerFrame().SEND_NUMBER);
	}
	
	this.FormBtns.Select.click();
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.txtSEND_NAME = this.divData.form.txtSEND_NAME;
	this.txtSEND_NUMBER = this.divData.form.txtSEND_NUMBER;
	this.txtRECV_NAME = this.divData.form.txtRECV_NAME;
	this.txtRECV_NUMBER = this.divData.form.txtRECV_NUMBER;
	this.txtMESSAGE = this.divData.form.txtMESSAGE;
	
	this.dxGrid = this.divData.form.objGrid;
};

this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
}

this.fnSetExtendButton = function() {
	this.btnSendSms = this.gfnFormButtonAdd("btnSendSms", "fnSendSms");  // SMS송신
	this.btnViewSendRslt = this.gfnFormButtonAdd("btnViewSendRslt", "fnViewSendRslt");  // 송신결과
	this.btnSelMsg = this.gfnFormButtonAdd("btnSelMsg", "fnSelMsg");  	// 메시지선택
	this.btnAddMsg = this.gfnFormButtonAdd("btnAddMsg", "fnAddMsg");  	// 메시지등록
	this.btnRemoveMsg = this.gfnFormButtonAdd("btnRemoveMsg", "fnRemoveMsg");  // 메시지삭제
};


this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("TY_WORK", "string");

	this.dsSend = new Dataset();
	this.dsSend.addColumn("TR_PHONE", "string");
	this.dsSend.addColumn("TR_CALLBACK", "string");
	this.dsSend.addColumn("TR_MSG", "string");
	this.dsSend.addColumn("TRAN_DESC", "string");
	this.dsSend.addColumn("ID_USER", "string");

	this.dsAdd = new Dataset();
	this.dsAdd.addColumn("RM_MSG", "string");

	this.dsDelete = new Dataset();
	this.dsDelete.addColumn("NO_SEQ", "int");
}

this.fnSetEvent = function() {	
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DB", "DBS_SMS_NEW");
	
	this.dxGrid.set_selecttype("cell");	
}

this.fnCallback = function(svcID, errorCode, errorMsg) {
	if(svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);					
	} else if(svcID == "send") {
		if (errorCode == 0) {
			//this.FormBtns.Select.click();
			this.gfnAlert("SMS전송이 완료 되었습니다.");
		} else {
			this.gfnAlert(errorMsg);
		}
	} else if(svcID == "add") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	} else if(svcID == "delete") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

this.fnSelectValidation = function() {
	
	var validate = true;
	
	
	
	return validate;
}

this.fnSelect = function() {

	//if (!this.fnSelectValidation()) return;
	
	this.gfnGridBeforeSelect(this.dxGrid);

	this.dsSelect.clearData();
	this.dsSelect.addRow(); 
	
	this.dsSelect.setColumn(0, "TY_WORK", "Q");
		
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect"; 
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

this.fnAdd = function() {
	var nrow = this.gfnGridAdd(this.dxGrid);		
}

this.fnDel = function() {	
	this.gfnGridDel(this.dxGrid);

}

this.fnSave = function() {
						
}

this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

this.fnPrint = function() {

}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo) {
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 정보를 입력,수정해도 폼상태는 초기화시킨다(화면닫을때 변경정보있다는 메시지 안뜨게 함)
	}
};


// SMS송신 버튼 클릭시 팝업화면 호출
this.fnSendSms = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	// 선택된 row가 있을 경우에만 팝업을 띄움
	//if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	var strSEND_NUMBER = nexacro.replaceAll(this.dsSearch.getColumn(0,"SEND_NUMBER"), "-", "");
	
	if (!this.gfnIsNull(strSEND_NUMBER) && strSEND_NUMBER.length >= 7) {
	}else{
		this.fnVaidateCallback = function() {
			this.txtSEND_NUMBER.setFocus();			
		}
		this.gfnAlert("송신자번호가 올바르지 않습니다.", "fnVaidateCallback");
		return;
	}
	
	var strRECV_NUMBER = nexacro.replaceAll(this.dsSearch.getColumn(0,"RECV_NUMBER"), "-", "");
	
	if (!this.gfnIsNull(strRECV_NUMBER) && strRECV_NUMBER.length >= 10) {
	}else{
		this.fnVaidateCallback = function() {
			this.txtRECV_NUMBER.setFocus();
		}
		this.gfnAlert("수신자번호가 올바르지 않습니다.", "fnVaidateCallback");
		return;
	}
	
	if (this.gfnIsNull(this.dsSearch.getColumn(0,"SEND_NAME"))) {
		this.fnVaidateCallback = function() {
			this.txtSEND_NAME.setFocus();
		}
		this.gfnAlert("송신자명을 입력하세요.", "fnVaidateCallback");
		return;
	}
	
	if (this.gfnIsNull(this.dsSearch.getColumn(0,"RECV_NAME"))) {
		this.fnVaidateCallback = function() {
			this.txtRECV_NAME.setFocus();
		}
		this.gfnAlert("수신자명을 입력하세요.", "fnVaidateCallback");
		return;
	}
	
	if (this.gfnIsNull(this.dsSearch.getColumn(0,"MESSAGE"))) {
		this.fnVaidateCallback = function() {
			this.txtMESSAGE.setFocus();
		}
		this.gfnAlert("메시지를 입력하세요.", "fnVaidateCallback");
		return;
	}
	
	
	this.gfnConfirm("SMS를 전송하시겠습니까?", "fnSmsSend_callback");
}


this.fnSmsSend_callback = function(strId, val) 
{
	if(val == true) {
		this.dsSend.clearData();
	
		this.dsSend.addRow();
		
		this.dsSend.setColumn(0, "TR_PHONE", this.dsSearch.getColumn(0, "RECV_NUMBER"));
		this.dsSend.setColumn(0, "TR_CALLBACK", this.dsSearch.getColumn(0, "SEND_NUMBER"));
		this.dsSend.setColumn(0, "TR_MSG", this.dsSearch.getColumn(0, "MESSAGE"));
		this.dsSend.setColumn(0, "TRAN_DESC", "");
		this.dsSend.setColumn(0, "ID_USER", this.AuthClient.ID_USER);
		
		if (this.dsSend.rowcount == 0) return;
		
		var strSvcId    = "send";
		var strSvcType  = "save";
		var inProc		= "_dsProc";
		var inData      = "send=dsSend";
		var outData     = "";
		var strArg      = "";
		var callBackFnc = "fnCallback";
		
		this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
							strSvcType , 	// transaction을 요청할 구분
							inProc,			// Procedure 정보 Dataset 이름
							inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
							outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
							strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
							callBackFnc); // 통신방법 정의 [생략가능]
	}
}


// 송신결과 버튼 클릭시 팝업화면 호출
this.fnViewSendRslt = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	// 선택된 row가 있을 경우에만 팝업을 띄움
	//if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	var param = {};
	//param.SEND_NUMBER = this.dsSearch.getColumn(0, "SEND_NUMBER");
	//param.RECV_NUMBER = this.dsSearch.getColumn(0, "RECV_NUMBER");

	// 화면 오픈. 
	// CD_MODULE은 보통 같은 모듈에서 호출하는 경우가 많으니 this.FormInfo.CD_MODULE 사용
	// 타 모듈 화면 호출시 지정할것.
	
	this.gfnFormOpen("DBV", "DRB_SMS_RESULT", "", param);
}


// 메시지선택 버튼 클릭시 팝업화면 호출
this.fnSelMsg = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	// 선택된 row가 있을 경우에만 팝업을 띄움
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	this.dsSearch.setColumn(0, "MESSAGE", this.dsList.getColumn(this.dsList.rowposition, "RM_MSG"));
}


// 메시지등록 버튼 클릭시 팝업화면 호출
this.fnAddMsg = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	// 선택된 row가 있을 경우에만 팝업을 띄움
	//if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	if(this.gfnIsNull(this.dsSearch.getColumn(0, "MESSAGE"))) {	
		this.fnVaidateCallback = function() {
			this.txtMESSAGE.setFocus();
		}
		this.gfnAlert("메시지를 입력하세요.","fnVaidateCallback");
		return;
	}
	
	this.dsAdd.clearData();
	
	this.dsAdd.addRow();
	
	this.dsAdd.setColumn(0, "RM_MSG", this.dsSearch.getColumn(0, "MESSAGE"));
	
	if (this.dsAdd.rowcount == 0) return;
	
	var strSvcId    = "add";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "add=dsAdd";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}


// 메시지삭제 버튼 클릭시 팝업화면 호출
this.fnRemoveMsg = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	// 선택된 row가 있을 경우에만 팝업을 띄움
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	this.gfnConfirm("삭제하시겠습니까?", "fnRemoveMsg_callback");
}

this.fnRemoveMsg_callback = function(strId, val) 
{
	if(val == true) {
		this.dsDelete.clearData();
	
		this.dsDelete.addRow();
		
		this.dsDelete.setColumn(0, "NO_SEQ", this.dsList.getColumn(this.dsList.rowposition, "NO_SEQ"));
		
		if (this.dsDelete.rowcount == 0) return;
		
		var strSvcId    = "delete";
		var strSvcType  = "save";
		var inProc		= "_dsProc";
		var inData      = "delete=dsDelete";
		var outData     = "";
		var strArg      = "";
		var callBackFnc = "fnCallback";
		
		this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
							strSvcType , 	// transaction을 요청할 구분
							inProc,			// Procedure 정보 Dataset 이름
							inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
							outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
							strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
							callBackFnc); // 통신방법 정의 [생략가능]
	}
}
]]></Script>
    <Objects>
      <Dataset id="dsList">
        <ColumnInfo>
          <Column id="RM_MSG" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DBSPR_SMS_NEW_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">send</Col>
            <Col id="SP">DZZPR_SMS_TRANSMISSION_KSBJ</Col>
          </Row>
          <Row>
            <Col id="SP">DBSPR_SMS_NEW_ADD</Col>
            <Col id="TARGET">add</Col>
          </Row>
          <Row>
            <Col id="SP">DBSPR_SMS_NEW_DELETE</Col>
            <Col id="TARGET">delete</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="SEND_NAME" type="STRING" size="256"/>
          <Column id="SEND_NUMBER" type="STRING" size="256"/>
          <Column id="RECV_NAME" type="STRING" size="256"/>
          <Column id="RECV_NUMBER" type="STRING" size="256"/>
          <Column id="MESSAGE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="SEND_NAME"/>
            <Col id="SEND_NUMBER"/>
            <Col id="RECV_NAME"/>
            <Col id="RECV_NUMBER"/>
            <Col id="MESSAGE"/>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divData.form.txtRM_MSG" propid="value" datasetid="dsList" columnid="RM_MSG"/>
      <BindItem id="item1" compid="divData.form.txtSEND_NAME" propid="value" datasetid="dsSearch" columnid="SEND_NAME"/>
      <BindItem id="item3" compid="divData.form.txtRECV_NAME" propid="value" datasetid="dsSearch" columnid="RECV_NAME"/>
      <BindItem id="item5" compid="divData.form.txtMESSAGE" propid="value" datasetid="dsSearch" columnid="MESSAGE"/>
      <BindItem id="item6" compid="divData.form.txtSEND_NUMBER" propid="value" datasetid="dsSearch" columnid="SEND_NUMBER"/>
      <BindItem id="item2" compid="divData.form.txtRECV_NUMBER" propid="value" datasetid="dsSearch" columnid="RECV_NUMBER"/>
    </Bind>
  </Form>
</FDL>
