<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="동호정보" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="1" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" text="">
          <Layouts>
            <Layout>
              <Static id="staMODULE" taborder="1" text="현장코드" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_SITE" CodeFindName="DBX_CFMAINSITE" CDTextWidth="70" taborder="1" left="staMODULE:0.0" top="10.0" width="300" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="1" left="0" top="40" bottom="0" right="0" cssclass="div_DATA_Bg" ondragmove="divData_ondragmove">
          <Layouts>
            <Layout>
              <Div id="divSplitter" taborder="1" left="57%" top="0" width="5" height="100%" background="skyblue" cursor="ew-resize" ondrag="divData_divSplitter_ondrag"/>
              <Div id="divDataLeft" taborder="0" left="0" top="0" bottom="0" right="divSplitter:5">
                <Layouts>
                  <Layout>
                    <Static id="staTitle01" taborder="0" text="동호정보" left="0" top="0" width="100%" height="22" cssclass="sta_TITLE_Bg"/>
                    <Grid id="objGrid" taborder="0" left="0" top="staTitle01:5" bottom="0" right="0"/>
                    <Button id="btnFileDownload" taborder="2" text="엑셀자료올리기" right="4" top="2" width="120" height="24" onclick="divData_divDataBottom_btnFileDownload_onclick"/>
                  </Layout>
                </Layouts>
              </Div>
              <Div id="divDataRight" taborder="0" left="divSplitter:5" top="0" bottom="0" right="0">
                <Layouts>
                  <Layout>
                    <Static id="staTitle02" taborder="0" text="동호정보생성" left="0" top="0" width="100%" height="22" cssclass="sta_TITLE_Bg"/>
                    <Button id="btnDongHoCreate" taborder="2" text="동호생성" right="0" top="0" width="120" height="22" onclick="divData_divDataBottom_btnDongHoCreate_onclick"/>
                    <Static id="staItem01" taborder="1" text="시작동수" left="0" top="staTitle02:8" width="87" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="staBar01" taborder="2" left="staItem01:-1" top="30" width="90" height="30" cssclass="sta_WF_tablebg"/>
                    <Static id="staItem02" taborder="3" text="증가동수" left="staBar01:-1" top="30" width="87" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="staBar02" taborder="4" left="staItem02:-1" top="30" width="90" height="30" cssclass="sta_WF_tablebg"/>
                    <Static id="staItem03" taborder="5" text="생성동수" left="staBar02:-1" top="30" width="87" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="staBar03" taborder="6" left="staItem03:-1" top="30" width="90" height="30" cssclass="sta_WF_tablebg"/>
                    <Edit id="edtDS_DONG" taborder="7" left="staItem01:5" top="35" width="78" height="20" inputtype="digit" maxlength="4" inputmode="upper"/>
                    <Edit id="edtAD_DONG" taborder="8" left="staItem02:5" top="35" width="78" height="20" inputtype="digit" maxlength="4" inputmode="upper"/>
                    <Edit id="edtCT_DONG" taborder="9" left="staItem03:5" top="35" width="78" height="20" inputtype="digit" maxlength="4" inputmode="upper"/>
                    <Static id="staItem04" taborder="10" text="시작층수" left="0" top="staItem01:-1" width="87" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="staBar04" taborder="11" left="staItem04:-1" top="staBar01:-1" width="90" height="30" cssclass="sta_WF_tablebg"/>
                    <Edit id="edtDS_CUNG" taborder="12" left="staItem04:5" top="staBar01:4" width="78" height="20" inputtype="digit" maxlength="2" inputmode="upper"/>
                    <Static id="staItem05" taborder="13" text="증가층수" left="staBar04:-1" top="staItem02:-1" width="87" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="staBar05" taborder="14" left="staItem05:-1" top="staBar02:-1" width="90" height="30" cssclass="sta_WF_tablebg"/>
                    <Edit id="edtAD_CUNG" taborder="15" left="staItem05:5" top="staBar02:4" width="78" height="20" inputtype="digit" maxlength="2" inputmode="upper"/>
                    <Static id="staItem06" taborder="16" text="생성층수" left="staBar05:-1" top="staItem03:-1" width="87" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="staBar06" taborder="17" left="staItem06:-1" top="staBar03:-1" width="90" height="30" cssclass="sta_WF_tablebg"/>
                    <Edit id="edtCT_CUNG" taborder="18" left="442" top="staBar03:4" width="78" height="20" inputtype="digit" maxlength="2" inputmode="upper"/>
                    <Static id="staItem07" taborder="19" text="시작호수" left="0" top="staItem04:-1" width="87" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="staBar07" taborder="20" left="staItem07:-1" top="staBar04:-1" width="90" height="30" cssclass="sta_WF_tablebg"/>
                    <Edit id="edtDS_HO" taborder="21" left="staItem07:5" top="staBar04:4" width="78" height="20" inputtype="digit" maxlength="2" inputmode="upper"/>
                    <Static id="staItem08" taborder="22" text="증가호수" left="staBar07:-1" top="staItem05:-1" width="87" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="staBar08" taborder="23" left="staItem08:-1" top="staBar05:-1" width="90" height="30" cssclass="sta_WF_tablebg"/>
                    <Edit id="edtAD_HO" taborder="24" left="staItem08:5" top="staBar05:4" width="78" height="20" inputtype="digit" maxlength="2" inputmode="upper"/>
                    <Static id="staItem09" taborder="25" text="생성호수" left="staBar08:-1" top="88" width="87" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="staBar09" taborder="26" left="436" top="88" width="90" height="30" cssclass="sta_WF_tablebg"/>
                    <Edit id="edtCT_HO" taborder="27" left="staItem09:5" top="staBar06:5" width="78" height="20" inputtype="digit" maxlength="2" inputmode="upper"/>
                    <Static id="staTitle03" taborder="28" text="공용정보생성" left="0" top="staItem07:8" width="100.00%" height="22" cssclass="sta_TITLE_Bg"/>
                    <Button id="btnDongHoPublicCreate" taborder="2" text="공용부위생성" right="0" top="staItem07:8" width="120" height="22" onclick="divData_divDataBottom_btnDongHoPublicCreate_onclick"/>
                    <Static id="staBar99" taborder="26" text="동호 정보를 생성, 저장하신 후에 공용부위를 생성 하세요." right="0" top="staTitle03:8" width="100.00%" height="22" background="#ceddf7" padding="0px 0px 0px 10px"/>
                    <Static id="staBar98" taborder="26" text="주차장, 엘리베이터 등 공용부위 정보가 추가 됩니다." right="0" top="staBar99:0" width="100.00%" height="22" background="#ceddf7" padding="0px 0px 0px 10px"/>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);
	// ---------------------------//
	//this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	this.fnBtnCtrl(false);
	
	if( this.FormInfo.ID_GROUP == "6" || this.FormInfo.ID_GROUP == "C" ){
		this.dsSearch.setColumn(0, "CD_SITE", this.AuthClient.CD_DEPT);
		this.ccfCD_SITE.form.DSTextBox.set_value(this.AuthClient.DS_DEPT);
		this.ccfCD_SITE.form.set_readonly(true);
		
		if(this.gfnIsNull(this.getOwnerFrame().CF_CD_SITE) ) {
			this.FormBtns.Select.click();
		}
	}
	
	if(!this.gfnIsNull(this.getOwnerFrame().CF_CD_SITE)) {
		this.dsSearch.setColumn(0, "CD_SITE", this.getOwnerFrame().CF_CD_SITE);
		this.ccfCD_SITE.form.DSTextBox.set_value(this.getOwnerFrame().CF_DS_SITE);
		this.FormBtns.Select.click();
	}	
};

/************************************************************************
* 버튼 설정 : 화면(Tab) 전환시 마다 호출
* 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
************************************************************************/
this.fnSetButton = function() {	
};

/************************************************************************
* 확장 버튼 : 화면별 버튼 설정 ID, function 연결
************************************************************************/
this.fnSetExtendButton = function() {	
};

/************************************************************************
* 변수 선언
************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_SITE = this.divSearch.form.ccfCD_SITE;
	this.dxGrid = this.divData.form.divDataLeft.form.objGrid;	
	
	this.edtDS_DONG = this.divData.form.divDataRight.form.edtDS_DONG;
	this.edtAD_DONG = this.divData.form.divDataRight.form.edtAD_DONG;
	this.edtCT_DONG = this.divData.form.divDataRight.form.edtCT_DONG;
	
	this.edtDS_CUNG = this.divData.form.divDataRight.form.edtDS_CUNG;
	this.edtAD_CUNG = this.divData.form.divDataRight.form.edtAD_CUNG;
	this.edtCT_CUNG = this.divData.form.divDataRight.form.edtCT_CUNG;
	
	this.edtDS_HO = this.divData.form.divDataRight.form.edtDS_HO;
	this.edtAD_HO = this.divData.form.divDataRight.form.edtAD_HO;
	this.edtCT_HO = this.divData.form.divDataRight.form.edtCT_HO;
};

/************************************************************************
* 이벤트 설정
************************************************************************/
this.fnSetEvent = function() {
	this.ccfCD_SITE.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_SITE.AfterCDTextChanged = "fnAfterCDTextChanged";
	
	this.gfnGridInit(this.dxGrid, this.dsList, "DB", "DBZ_DONGHO");
	this.dsSearch.addEventHandler("onvaluechanged", this.dsSearch_onvaluechanged, this);	
	
	this.edtDS_DONG.clearEventHandler( "onkeydown" );
	this.edtAD_DONG.clearEventHandler( "onkeydown" );
	this.edtCT_DONG.clearEventHandler( "onkeydown" );
	this.edtDS_CUNG.clearEventHandler( "onkeydown" );
	this.edtAD_CUNG.clearEventHandler( "onkeydown" );
	this.edtCT_CUNG.clearEventHandler( "onkeydown" );
	this.edtDS_HO.clearEventHandler( "onkeydown" );
	this.edtAD_HO.clearEventHandler( "onkeydown" );
	this.edtCT_HO.clearEventHandler( "onkeydown" );
};

/************************************************************************
* 파라미터 설정
************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_SITE", "string");
	
	this.dsInsert = new Dataset();
	this.dsInsert.addColumn("CD_SITE", "string");
	this.dsInsert.addColumn("DS_DONG", "string");
	this.dsInsert.addColumn("DS_CUNG", "string");
	this.dsInsert.addColumn("DS_HO", "string");
	
	this.dsDelete = new Dataset();
	this.dsDelete.addColumn("CD_SITE", "string");
	this.dsDelete.addColumn("DS_DONG", "string");
	this.dsDelete.addColumn("DS_CUNG", "string");
	this.dsDelete.addColumn("DS_HO", "string");
	
	this.dsApply = new Dataset();
	this.dsApply.addColumn("CD_SITE", "string");
};

/************************************************************************
* 컨트롤 이벤트
************************************************************************/
/*
*	조회 버튼
*/
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0,"CD_SITE"));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
		strSvcType , 	// trabsaction을 요청할 구분
		inProc,			// Procedure 정보 Dataset 이름
		inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
		outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
		strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
		callBackFnc); // 통신방법 정의 [생략가능]
	
};

/*
*	저장 버튼
*/ 
this.fnSave = function() {
	
	this.dsInsert.clearData();
	this.dsDelete.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
		case "I":			
			var nrow = this.dsInsert.addRow();
			this.dsInsert.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0,"CD_SITE"));
			this.dsInsert.setColumn(nrow, "DS_DONG", this.dsList.getColumn(i, "DS_DONG"));
			this.dsInsert.setColumn(nrow, "DS_CUNG", this.dsList.getColumn(i, "DS_CUNG"));
			this.dsInsert.setColumn(nrow, "DS_HO", this.dsList.getColumn(i, "DS_HO"));	
			break;
		case "D":
			var nrow = this.dsDelete.addRow();
			this.dsDelete.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0,"CD_SITE"));
			this.dsDelete.setColumn(nrow, "DS_DONG", this.dsList.getColumn(i, "DS_DONG"));
			this.dsDelete.setColumn(nrow, "DS_CUNG", this.dsList.getColumn(i, "DS_CUNG"));
			this.dsDelete.setColumn(nrow, "DS_HO", this.dsList.getColumn(i, "DS_HO"));
			break;
		}
	}
	if (this.dsInsert.rowcount == 0 && this.dsDelete.rowcount == 0) return;
	
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "insert=dsInsert delete=dsDelete";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
		strSvcType , 	// transaction을 요청할 구분
		inProc,			// Procedure 정보 Dataset 이름
		inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
		outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
		strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
		callBackFnc); // 통신방법 정의 [생략가능]
};

/*
*	엑셀 버튼
*/
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
};

/*
*	출력 버튼
*/
this.fnPrint = function() {
};
/*
*	입력 버튼
*/
this.fnAdd = function() {	
	this.gfnGridAdd(this.dxGrid);
};
/*
*	삭제 버튼
*/ 
this.fnDel = function() {
	if( !this.gfnGridIsRow(this.dxGrid) ) return;	
	this.gfnGridDel(this.dxGrid);	
	// 	var aDSRowidx = this.dxGrid.getSelectedDatasetRows();// 	
	// 	var strMsg = "";
	// 	for ( var idx in aDSRowidx ){
	// 		if( this.dsList.getColumn(aDSRowidx[idx],"TY_WORK") == "DL" ){
	// 			this.dsList.setColumn(aDSRowidx[idx], this.ucFlag, "");
	// 			strMsg += " - 동 : "+ this.dsList.getColumn(aDSRowidx[idx],"DS_DONG")+" , 호 : "+ this.dsList.getColumn(aDSRowidx[idx],"DS_HO") +"\n";
	// 		}
	// 	}// 	
	// 	if ( strMsg != "" ){
	// 		this.gfnAlert("단지생성시 등록된 정보는 삭제할 수 없습니다.\n"+strMsg.substr(0,strMsg.length-1));
	// 	}
};
/************************************************************************
* Validate
************************************************************************/
/*
*	조회 Validate
*/
this.fnSelectValidate = function() {
	var validate = true;
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "CD_SITE"))) {
		validate = false;
		this.fnVaidateCallback = function() {
			this.ccfCD_SITE.form.CDTextBox.setFocus();
		}
		this.gfnAlert("현장코드는 반드시 입력하셔야 합니다.", "fnVaidateCallback"); // gfnAlert = function (sMsgId, arrArg, sPopId, sCallback)
	}
	return validate;
}
/************************************************************************
* 콜백 이벤트
************************************************************************/
/*
*	콜백 처리
*/
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (errorCode != 0) {
		this.gfnAlert(errorMsg);
		return false;
	}
	
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
		if(this.dsList.rowcount > 0){
			this.fnBtnCtrl(true);
		}else {
			this.fnBtnCtrl(false);
		}
	}else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
* 코드파인드 이벤트
************************************************************************/
/*
* 코드파인드 변경전
*/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if (id == "ccfCD_SITE") {
		dsUserParam.setColumn(nrow, "CD_GROUP", this.AuthClient.CD_DEPT);
	}
	return true;
};

/*
* 코드파인드 변경후
*/
this.fnAfterCDTextChanged = function(id, codeFindData) {	
	if (id == "ccfCD_SITE") {
		var arr = codeFindData;
		if(arr.length > 0) {
		}
	}
};

/************************************************************************
* 그리드 이벤트
************************************************************************/

/************************************************************************
* 확장버튼 이벤트
************************************************************************/
/*
* 동호 생성 버튼 클릭
*/
this.fnCreateDongHo = function(){
	// 화면(Form) Status 설정 => 조회 : Q , 0건 : X
	var status = this.gfnGetFormStatus(this);
	if( status == "I" || status == "U" || status == "D" ) {
		this.gfnAlert("추가/수정/삭제인 행을 저장한 후 생성하세요.");
		return false;
	} else if( status != "Q" && status != "X") {
		this.gfnAlert("조회후 동호 생성 가능합니다.");
		return false;
	}
	
	// 필수 입력 요소 체크
	if( this.gfnIsNull(this.dsDongHo.getColumn(0, "DS_DONG")) || this.gfnIsNull(this.dsDongHo.getColumn(0, "AD_DONG")) || this.gfnIsNull(this.dsDongHo.getColumn(0, "CT_DONG")) ||
	    this.gfnIsNull(this.dsDongHo.getColumn(0, "DS_CUNG")) || this.gfnIsNull(this.dsDongHo.getColumn(0, "AD_CUNG")) || this.gfnIsNull(this.dsDongHo.getColumn(0, "CT_CUNG")) ||
	    this.gfnIsNull(this.dsDongHo.getColumn(0, "DS_HO")) || this.gfnIsNull(this.dsDongHo.getColumn(0, "AD_HO")) || this.gfnIsNull(this.dsDongHo.getColumn(0, "CT_HO")) )	{
		
		this.gfnAlert("동호 생성을 위한 필수 입력 요소가 없습니다. 확인해주세요!");
		this.edtDS_DONG.setFocus();
		return false;
	}
	
	var intAdDong = nexacro.toNumber(this.dsDongHo.getColumn(0, "AD_DONG"));
	var	intAdCung = nexacro.toNumber(this.dsDongHo.getColumn(0, "AD_CUNG"));
	var intAdHo = nexacro.toNumber(this.dsDongHo.getColumn(0, "AD_HO"));
	
	var rsCnt  = nexacro.toNumber(this.dsDongHo.getColumn(0, "CT_DONG"),0) * nexacro.toNumber(this.dsDongHo.getColumn(0, "CT_CUNG"),0) * nexacro.toNumber(this.dsDongHo.getColumn(0, "CT_HO"),0);
	
	if (rsCnt > 0) {
		this.dsList.set_enableevent(false);
		
		this.gfnGridClear(this.dxGrid);
		
		// 동 정보 초기화
		var strDsDong = this.dsDongHo.getColumn(0, "DS_DONG").padLeft(4, '0');
		for (var d = 1; d <= nexacro.toNumber(this.dsDongHo.getColumn(0, "CT_DONG"),0); d++) {  //동
			// 층 정보 초기화
			var strDsCung = this.dsDongHo.getColumn(0, "CT_CUNG").padLeft(2, '0');
			
			for (var c = 1; c <= nexacro.toNumber(this.dsDongHo.getColumn(0, "CT_CUNG"),0); c++) {  //층					
				// 호 정보 초기화
				var strDsHo = this.dsDongHo.getColumn(0, "DS_HO").padLeft(2, '0');
				
				for (var h = 1; h <= nexacro.toNumber(this.dsDongHo.getColumn(0, "CT_HO"),0); h++) { // 호
					var nRow = this.dsList.addRow();
					this.dsList.setColumn(nRow,this.ucFlag,"I");
					this.dsList.setColumn(nRow,"DS_DONG",strDsDong);
					this.dsList.setColumn(nRow,"DS_HO",strDsCung+strDsHo);
					this.dsList.setColumn(nRow,"TY_WORK","DB");
					strDsHo = (nexacro.toNumber(strDsHo,0) + intAdHo).toString().padLeft(2, '0');
				}
				
				strDsCung = (nexacro.toNumber(strDsCung,0) + intAdCung).toString().padLeft(2, '0');
			}
			
			strDsDong = (nexacro.toNumber(strDsDong,0) + intAdDong).toString().padLeft(4, '0');
			
		}
		this.dsList.set_enableevent(true);
		this.gfnSetFormStatus(this, "I");	// 폼상태 추가
	}
};

/*
* 공용부위생성 버튼 클릭
*/
this.fnApplyDongHo = function (){	
	for (var i = 0; i < this.dsList.rowcount; i++) {		
		var flag = this.gfnGetFlag(this.dsList, i);	
		if( flag == "I"  || flag == "U" || flag == "D"){
			this.gfnAlert("수정중인 데이터가 존재합니다.");
			return false;
		}
	}
	this.dxGrid.updateToDataset();	
	this.dsApply.clearData();
	var nrow = this.dsApply.addRow();
	this.dsApply.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0,"CD_SITE"));	
	
	var strSvcId    = "apply";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "apply=dsApply";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
		strSvcType , 	// transaction을 요청할 구분
		inProc,			// Procedure 정보 Dataset 이름
		inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
		outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
		strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
		callBackFnc); // 통신방법 정의 [생략가능]
	
	
};

// 엑셀업로드버튼
this.fnExcelImportCallback = function(sImportId, dsOut, dsSheet) {
	
	for (var i = 0; i < this.dsList.getColCount(); ++i)
	{
		sColumnId = "Column" + i;
		var sColumnNm = this.gfnGridGetBindColumnNameByIndex(this.dxGrid, i);
		if (sColumnNm != "" && sColumnId != sColumnNm)
		{
			dsOut.updateColID(sColumnId, sColumnNm);
		}
	}
	
	// 양식이 일치하고 엑셀내역을 기존데이터에 Insert하지 않고
	// 엑셀내역 그대로 그리드 반영할 시 copyData
	//this.dsListSub.copyData(dsOut);
	
	this.dsList.set_enableevent(false);
	for (var i = 0; i < dsOut.rowcount; ++i) {
		var nrow = this.dsList.addRow();
		this.dsList.setColumn(nrow, this.ucFlag, "I");
		
		// 양식이 일치하는 경우 copyRow
		this.dsList.copyRow(nrow, dsOut, i);
	}
	this.dsList.set_enableevent(true);	
	this.gfnSetFormStatus(this, "I");
};

/************************************************************************
* 기타 이벤트
************************************************************************/
/*
*	조회 조건 변경시 초기화
*/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);
	}
};

this.divData_ondragmove = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
	if(e.userdata == "splitter") {
		this.divData.form.divSplitter.set_left(e.clientx);
		this.divData.form.resetScroll();
	}
};

this.divData_divSplitter_ondrag = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
	e.set_userdata("splitter");
	return true;
};

//동호생성 버튼
this.divData_divDataBottom_btnDongHoCreate_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.fnCreateDongHo();
};

//공용부위생성
this.divData_divDataBottom_btnDongHoPublicCreate_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.fnApplyDongHo();
};

//엑셀 업로드 버튼
this.divData_divDataBottom_btnFileDownload_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{	
	this.gfnExcelImport("dsList", "Sheet1", "A2", "fnExcelImportCallback", "import", this);
};

//확장버튼컨트롤
this.fnBtnCtrl = function(val){
	this.divData.form.divDataLeft.form.btnFileDownload.set_enable(val);
	this.divData.form.divDataRight.form.btnDongHoCreate.set_enable(val);
	this.divData.form.divDataRight.form.btnDongHoPublicCreate.set_enable(val);	
};]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DBZPR_DONGHO_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">insert</Col>
            <Col id="SP">DBZPR_DONGHO_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">delete</Col>
            <Col id="SP">DBZPR_DONGHO_DELETE</Col>
          </Row>
          <Row>
            <Col id="TARGET">apply</Col>
            <Col id="SP">DBZPR_DONGHOPUBLIC_INSERT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch">
        <ColumnInfo>
          <Column id="CD_SITE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsDongHo">
        <ColumnInfo>
          <Column id="DS_DONG" type="STRING" size="256"/>
          <Column id="AD_DONG" type="STRING" size="256"/>
          <Column id="CT_DONG" type="STRING" size="256"/>
          <Column id="DS_CUNG" type="STRING" size="256"/>
          <Column id="AD_CUNG" type="STRING" size="256"/>
          <Column id="CT_CUNG" type="STRING" size="256"/>
          <Column id="DS_HO" type="STRING" size="256"/>
          <Column id="AD_HO" type="STRING" size="256"/>
          <Column id="CT_HO" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="DS_DONG"/>
            <Col id="AD_DONG"/>
            <Col id="CT_DONG"/>
            <Col id="DS_CUNG"/>
            <Col id="AD_CUNG"/>
            <Col id="CT_CUNG"/>
            <Col id="DS_HO"/>
            <Col id="AD_HO"/>
            <Col id="CT_HO"/>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item1" compid="divData.form.divDataRight.form.edtDS_DONG" propid="value" datasetid="dsDongHo" columnid="DS_DONG"/>
      <BindItem id="item2" compid="divData.form.divDataRight.form.edtAD_DONG" propid="value" datasetid="dsDongHo" columnid="AD_DONG"/>
      <BindItem id="item3" compid="divData.form.divDataRight.form.edtCT_DONG" propid="value" datasetid="dsDongHo" columnid="CT_DONG"/>
      <BindItem id="item4" compid="divData.form.divDataRight.form.edtDS_CUNG" propid="value" datasetid="dsDongHo" columnid="DS_CUNG"/>
      <BindItem id="item5" compid="divData.form.divDataRight.form.edtAD_CUNG" propid="value" datasetid="dsDongHo" columnid="AD_CUNG"/>
      <BindItem id="item6" compid="divData.form.divDataRight.form.edtCT_CUNG" propid="value" datasetid="dsDongHo" columnid="CT_CUNG"/>
      <BindItem id="item7" compid="divData.form.divDataRight.form.edtDS_HO" propid="value" datasetid="dsDongHo" columnid="DS_HO"/>
      <BindItem id="item8" compid="divData.form.divDataRight.form.edtAD_HO" propid="value" datasetid="dsDongHo" columnid="AD_HO"/>
      <BindItem id="item9" compid="divData.form.divDataRight.form.edtCT_HO" propid="value" datasetid="dsDongHo" columnid="CT_HO"/>
    </Bind>
  </Form>
</FDL>
