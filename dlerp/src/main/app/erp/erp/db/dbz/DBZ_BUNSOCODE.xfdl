<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="AS사무소 등록" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="1" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static id="staMODULE" taborder="1" text="센터코드" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_MODULE" CodeFindName="DBX_CFBUNSO" CDTextWidth="50" taborder="1" left="staMODULE:0.0" top="10.0" width="300" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="1" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결
 ************************************************************************/
this.fnSetExtendButton = function() {
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_MODULE = this.divSearch.form.ccfCD_MODULE;
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.gfnGridInit(this.dxGrid, this.dsList, "DB", "DBZ_BUNSOCODE");
	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforuserDataSetParam";  // 학력 코드파인더 연동
	this.dxGrid.AfterCDTextChanged = "fnGrid_AfterCDTextChanged";
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_BUNSO", "string");
	
	this.dsInsert = new Dataset();
	this.dsInsert.addColumn("CD_BUNSO", "string");
	this.dsInsert.addColumn("DS_BUNSO", "string");
	this.dsInsert.addColumn("AT_SITE", "string");
	this.dsInsert.addColumn("NO_TEL", "string");
	this.dsInsert.addColumn("NO_FAX", "string");
	this.dsInsert.addColumn("YN_USE", "string");
	this.dsInsert.addColumn("NM_INSERT", "string");
	this.dsInsert.addColumn("DT_END", "string");
	this.dsInsert.addColumn("CD_DEPT_ACNT", "string");
	
	this.dsUpdate = new Dataset();
	this.dsUpdate.addColumn("CD_BUNSO", "string");
	this.dsUpdate.addColumn("DS_BUNSO", "string");
	this.dsUpdate.addColumn("AT_SITE", "string");
	this.dsUpdate.addColumn("NO_TEL", "string");
	this.dsUpdate.addColumn("NO_FAX", "string");
	this.dsUpdate.addColumn("YN_USE", "string");
	this.dsUpdate.addColumn("DT_END", "string");
	this.dsUpdate.addColumn("CD_DEPT_ACNT", "string");
	
	this.dsDelete = new Dataset();
	this.dsDelete.addColumn("CD_BUNSO", "string");
	
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "CD_BUNSO", this.dsSearch.getColumn(0, "CD_BUNSO"));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
	
}

/*
 *	저장 버튼
 */ 
this.fnSave = function() {
	if (!this.gfnGridValidate(this.dxGrid)) return;

	this.dxGrid.updateToDataset();
	
	this.dsInsert.clearData();
	this.dsUpdate.clearData();
	this.dsDelete.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
				var nrow = this.dsInsert.addRow();
				this.dsInsert.setColumn(nrow, "CD_BUNSO", this.dsList.getColumn(i, "CD_BUNSO"));
				this.dsInsert.setColumn(nrow, "DS_BUNSO", this.dsList.getColumn(i, "DS_BUNSO"));
				this.dsInsert.setColumn(nrow, "AT_SITE", this.dsList.getColumn(i, "AT_SITE"));
				this.dsInsert.setColumn(nrow, "NO_TEL", this.dsList.getColumn(i, "NO_TEL"));
				this.dsInsert.setColumn(nrow, "NO_FAX", this.dsList.getColumn(i, "NO_FAX"));
				this.dsInsert.setColumn(nrow, "YN_USE", this.dsList.getColumn(i, "YN_USE"));
				this.dsInsert.setColumn(nrow, "NM_INSERT", this.AuthClient.ID_USER);
				this.dsInsert.setColumn(nrow, "CD_DEPT_ACNT", this.dsList.getColumn(i, "CD_DEPT_ACNT"));
				this.dsInsert.setColumn(nrow, "DT_END", this.dsList.getColumn(i, "DT_END"));			
				break;
				
			case "U":
				var nrow = this.dsUpdate.addRow();
				this.dsUpdate.setColumn(nrow, "CD_BUNSO", this.dsList.getColumn(i, "CD_BUNSO"));
				this.dsUpdate.setColumn(nrow, "DS_BUNSO", this.dsList.getColumn(i, "DS_BUNSO"));
				this.dsUpdate.setColumn(nrow, "AT_SITE", this.dsList.getColumn(i, "AT_SITE"));
				this.dsUpdate.setColumn(nrow, "NO_TEL", this.dsList.getColumn(i, "NO_TEL"));
				this.dsUpdate.setColumn(nrow, "NO_FAX", this.dsList.getColumn(i, "NO_FAX"));
				this.dsUpdate.setColumn(nrow, "YN_USE", this.dsList.getColumn(i, "YN_USE"));
				this.dsUpdate.setColumn(nrow, "CD_DEPT_ACNT", this.dsList.getColumn(i, "CD_DEPT_ACNT"));
				this.dsUpdate.setColumn(nrow, "DT_END", this.dsList.getColumn(i, "DT_END"));
				break;
				
			case "D":
				var nrow = this.dsDelete.addRow();
				this.dsDelete.setColumn(nrow, "CD_BUNSO", this.dsList.getColumn(i, "CD_BUNSO"));
				break;
		}
	}
	
	if (this.dsInsert.rowcount == 0 && this.dsUpdate.rowcount == 0 && this.dsDelete.rowcount == 0) return;
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "insert=dsInsert update=dsUpdate delete=dsDelete";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	var nrow = this.gfnGridAdd(this.dxGrid);
	
	this.dsList.setColumn(nrow, "YN_USE", "Y");
}

/*
 *	삭제 버튼
 */ 
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
	} else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
 // 그리드 코드파인드
this.fnGrid_BeforuserDataSetParam = function(id, dsUserParam, nrow) {
	switch(id) {
		case "DFX_CFACNTUNIT":	
			dsUserParam.setColumn(nrow, "CD_GROUP", "");
			dsUserParam.setColumn(nrow, "CD_CORP", "");
			break;
			
		default:
		}	
		return true;
}

this.fnGrid_AfterCDTextChanged = function(id, codeFindData) {		
	switch(id) {
	case "DFX_CFACNTUNIT": 
		break;
		
	default:
	}	
	return true;
};

	
 
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo) {
	if (e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);
	}
};]]></Script>
    <Objects>
      <Dataset id="dsList" onvaluechanged="dsList_onvaluechanged"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DBZPR_BUNSOCODE_SELECT</Col>
          </Row>
          <Row>
            <Col id="SP">DBZPR_BUNSOCODE_INSERT</Col>
            <Col id="TARGET">insert</Col>
          </Row>
          <Row>
            <Col id="SP">DBZPR_BUNSOCODE_UPDATE</Col>
            <Col id="TARGET">update</Col>
          </Row>
          <Row>
            <Col id="SP">DBZPR_BUNSOCODE_DELETE</Col>
            <Col id="TARGET">delete</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_BUNSO" type="STRING" size="256"/>
          <Column id="DS_BUNSO" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_MODULE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_BUNSO"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_MODULE.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_BUNSO"/>
    </Bind>
  </Form>
</FDL>
