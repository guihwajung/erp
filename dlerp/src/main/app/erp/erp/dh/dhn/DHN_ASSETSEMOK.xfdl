<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="1400" height="720" titletext="자산세목관리" onload="form_onload">
    <Layouts>
      <Layout stepcount="0">
        <Div id="divSearch" taborder="0" left="0" top="10.0" height="46" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none" text="">
          <Layouts>
            <Layout>
              <Static id="staCD_CORP" taborder="1" text="법인코드" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_CORP" CDTextWidth="50" taborder="0" left="staCD_CORP:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" onclick="Common_onclick" text="" CodeFindName="DHX_CFCORP"/>
              <Static id="staCD_ACASSET" taborder="2" text="자산코드" left="ccfCD_CORP:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_ACASSET" CDTextWidth="70" taborder="3" left="staCD_ACASSET:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" onclick="Common_onclick" text="" CodeFindName="DHX_CFASSETINFO"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg" text="">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" right="0" bottom="0"/>
              <Radio id="rdoYN_DEP" taborder="1" left="75" top="-34" width="200" height="20" onitemchanged="rdo00_onitemchanged" index="-1" text="" value="" innerdataset="dsYN_DEP" datacolumn="VALUE" codecolumn="CODE" fittocontents="width" direction="vertical"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetVariable();
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetParameter();
	this.fnSetEvent();  
	
	
	//타화면에서 호출되었을 경우
	if(!this.gfnIsNull(this.getOwnerFrame().CD_ACASSET)){
		
		this.dsSearch.setColumn(0, "CD_CORP", this.getOwnerFrame().CD_CORP);
		this.dsSearch.setColumn(0, "DS_CORP", this.getOwnerFrame().DS_CORP);
		
		this.dsSearch.setColumn(0, "CD_ACASSET", this.getOwnerFrame().CD_ACASSET);
		this.dsSearch.setColumn(0, "DS_ACASSET", this.getOwnerFrame().DS_ACASSET);		
	
		this.FormBtns.Select.click();
	}else{
		this.dsSearch.setColumn(0, "CD_CORP", this.AuthClient.CD_CORP);
		this.dsSearch.setColumn(0, "DS_CORP", this.AuthClient.DS_CORP);
	}
	
	if (nexacro.toNumber(this.FormInfo.GR_SEARCH) > 1) {
 		this.ccfCD_CORP.set_enable(false);
 	}
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {

}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
 
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {

	//조회
	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;
	this.ccfCD_ACASSET = this.divSearch.form.ccfCD_ACASSET;
		
	//그리드
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DH", "DHN_ASSETSEMOK");
	
	this.dxGrid.set_selecttype("cell");	
	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";

	this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";
	
	this.ccfCD_ACASSET.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_ACASSET.AfterCDTextChanged = "fnAfterCDTextChanged";
	
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();	
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("CD_ACASSET", "string");
	
	this.dsInsert = new Dataset();		
	this.dsInsert.addColumn("CD_CORP", "string");		
	this.dsInsert.addColumn("CD_ACASSET", "string");			
	this.dsInsert.addColumn("CD_ASSETSEMOK", "string");			
	this.dsInsert.addColumn("DS_ASSETSEMOK", "string");	
	this.dsInsert.addColumn("ID_INSERT", "string");
	
	this.dsUpdate = new Dataset();		
	this.dsUpdate.addColumn("CD_CORP", "string");		
	this.dsUpdate.addColumn("CD_ACASSET", "string");			
	this.dsUpdate.addColumn("CD_ASSETSEMOK", "string");			
	this.dsUpdate.addColumn("DS_ASSETSEMOK", "string");	
	this.dsUpdate.addColumn("ID_UPDATE", "string");		
	
	this.dsDelete = new Dataset();		
	this.dsDelete.addColumn("CD_CORP", "string");		
	this.dsDelete.addColumn("CD_ACASSET", "string");			
	this.dsDelete.addColumn("CD_ASSETSEMOK", "string");	

}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
/*
 *	조회 버튼
 */
this.fnSelect = function() {

	if (!this.fnSelectValidate()) return;
	
	this.gfnGridBeforeSelect(this.dxGrid);

	this.dsSelect.clearData();
	this.dsSelect.addRow(); 
	
	this.dsSelect.setColumn(0, "CD_CORP"   , this.dsSearch.getColumn(0, "CD_CORP"));
	this.dsSelect.setColumn(0, "CD_ACASSET", this.dsSearch.getColumn(0, "CD_ACASSET"));
		
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect"; 
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	
	var nrow = this.gfnGridAdd(this.dxGrid);	
	
	this.dsList.set_enableevent(false);
	this.dsList.setColumn(nrow, "CD_CORP"   	, this.dsSearch.getColumn(0, "CD_CORP"));
	this.dsList.setColumn(nrow, "DS_CORP"   	, this.dsSearch.getColumn(0, "DS_CORP"));
	this.dsList.setColumn(nrow, "CD_ACASSET"	, this.dsSearch.getColumn(0, "CD_ACASSET"));
	this.dsList.setColumn(nrow, "DS_ACASSET"	, this.dsSearch.getColumn(0, "DS_ACASSET"));
	this.dsList.setColumn(nrow, "CD_ASSETSEMOK"	, "");
	this.dsList.setColumn(nrow, "DS_ASSETSEMOK"	, "");
	this.dsList.set_enableevent(true);	
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	
	if (!this.gfnGridValidate(this.dxGrid)) return;

	this.dxGrid.updateToDataset();
	
	this.dsInsert.clearData();
	this.dsUpdate.clearData();
	this.dsDelete.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
				var nrow = this.dsInsert.addRow();
				this.dsInsert.setColumn(nrow, "CD_CORP", this.dsList.getColumn(i, "CD_CORP"));
				this.dsInsert.setColumn(nrow, "CD_ACASSET", this.dsList.getColumn(i, "CD_ACASSET"));
				this.dsInsert.setColumn(nrow, "CD_ASSETSEMOK", this.dsList.getColumn(i, "CD_ASSETSEMOK"));
				this.dsInsert.setColumn(nrow, "DS_ASSETSEMOK", this.dsList.getColumn(i, "DS_ASSETSEMOK"));	
				this.dsInsert.setColumn(nrow, "ID_INSERT", this.AuthClient.ID_USER);
				break;
				
			case "U":
				var nrow = this.dsUpdate.addRow();
				this.dsUpdate.setColumn(nrow, "CD_CORP", this.dsList.getColumn(i, "CD_CORP"));
				this.dsUpdate.setColumn(nrow, "CD_ACASSET", this.dsList.getColumn(i, "CD_ACASSET"));
				this.dsUpdate.setColumn(nrow, "CD_ASSETSEMOK", this.dsList.getColumn(i, "CD_ASSETSEMOK"));
				this.dsUpdate.setColumn(nrow, "DS_ASSETSEMOK", this.dsList.getColumn(i, "DS_ASSETSEMOK"));
				this.dsUpdate.setColumn(nrow, "ID_UPDATE", this.AuthClient.ID_USER);
				break;
				
			case "D":
				var nrow = this.dsDelete.addRow();
				this.dsDelete.setColumn(nrow, "CD_CORP", this.dsList.getColumn(i, "CD_CORP"));
				this.dsDelete.setColumn(nrow, "CD_ACASSET", this.dsList.getColumn(i, "CD_ACASSET"));
				this.dsDelete.setColumn(nrow, "CD_ASSETSEMOK", this.dsList.getColumn(i, "CD_ASSETSEMOK"));
				break;
		}
	}
	
	if (this.dsInsert.rowcount == 0 && this.dsUpdate.rowcount == 0 && this.dsDelete.rowcount == 0) return;
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "insert=dsInsert update=dsUpdate delete=dsDelete";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
						
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {

}

/************************************************************************
 * Validate
 ************************************************************************/
 /*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	
	if(this.gfnIsNull(this.dsSearch.getColumn(0, "CD_CORP"))) {		
		this.gfnAlert("법인코드는 반드시 입력하셔야 합니다.");
		this.ccfCD_CORP.form.CDTextBox.setFocus();
		return false;
	}
	
	return true;
}


/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
this.fnCallback = function(svcID, errorCode, errorMsg) {

	if(svcID == "select") {
	
		this.gfnGridAfterSelect(this.dxGrid);	
		
	} else if(svcID == "save") {
	
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
		
	}
	
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if (id == "ccfCD_CORP") {
		dsUserParam.setColumn(nrow, "ID_SABUN", this.AuthClient.ID_USER);
		//dsUserParam.setColumn(nrow, "LEVLV_DEPT", this.FormInfo.TY_AUTH);
		//dsUserParam.setColumn(nrow, "LEVCD_DEPT", this.FormInfo.TY_AUTH);
	}else if(id == "ccfCD_ACASSET") {
		if(this.gfnIsNull(this.dsSearch.getColumn(0, "CD_CORP"))){
			this.gfnAlert("법인코드를 선택하세요.");
			return false;
		}	
		dsUserParam.setColumn(nrow, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));  
		dsUserParam.setColumn(nrow, "YN_CORP", "Y");
	}
	
	return true;
};

this.fnAfterCDTextChanged = function(id, codeFindData) {

	if(id == "ccfCD_CORP") {
		this.ccfCD_ACASSET.form.fnCodeFindClear();
	}
}


/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGrid_EnterCell = function(obj:nexacro.Grid, row, cell) {
	return true; 
}

this.fnGrid_BeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	//자산코드 
	if(id == "DHX_CFASSETINFO") {
		dsUserParam.setColumn(nrow, "CD_CORP", this.dsList.getColumn(this.dsList.rowposition, "CD_CORP")); 
		dsUserParam.setColumn(nrow, "YN_CORP", "Y");
	}
	
	return true;
};


/************************************************************************
 * 기타 이벤트
 ************************************************************************/

this.fnSetCombo = function(obj,e) {

};

/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {

	if(e == null || (e.pretext != e.posttext)) {
		// 폼상태 초기화
		this.gfnSetFormStatus(this);	
		this.gfnGridClear(this.dxGrid);
	}
};

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo) {
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};
]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DHNPR_ASSETSEMOK_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">insert</Col>
            <Col id="SP">DHNPR_ASSETSEMOK_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">update</Col>
            <Col id="SP">DHNPR_ASSETSEMOK_UPDATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">delete</Col>
            <Col id="SP">DHNPR_ASSETSEMOK_DELETE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="DS_CORP" type="STRING" size="256"/>
          <Column id="CD_ACASSET" type="STRING" size="256"/>
          <Column id="DS_ACASSET" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CORP"/>
            <Col id="CD_ACASSET"/>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_ACASSET.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_ACASSET"/>
      <BindItem id="item2" compid="divSearch.form.ccfCD_CORP.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_CORP"/>
      <BindItem id="item3" compid="divSearch.form.ccfCD_ACASSET.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_ACASSET"/>
    </Bind>
  </Form>
</FDL>
