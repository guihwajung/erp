<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="주상복합안분확정" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="sta01" taborder="3" text="법인코드" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCORP" CDTextWidth="70" taborder="0" left="sta01:0.0" top="10.0" width="269" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="sta02" taborder="4" text="현장" left="ccfCORP:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfDEPT" CDTextWidth="70" taborder="1" left="sta02:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="sta03" taborder="5" text="작업년월" left="ccfDEPT:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclDT_WORK" taborder="2" left="sta03:0.0" top="10.0" width="80" height="24.0" url="cmm::cmmCalMM.xfdl"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="1" left="0" top="40" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Tab id="tabData" taborder="1" tabindex="0" left="0" top="0" right="0" bottom="0">
                <Tabpages>
                  <Tabpage id="tab1" text="주상복합안분확정">
                    <Layouts>
                      <Layout>
                        <Grid id="objGrid1" taborder="0" left="0" top="0" bottom="0" right="0" binddataset="dsList1">
                          <Formats>
                            <Format id="default"/>
                          </Formats>
                        </Grid>
                      </Layout>
                    </Layouts>
                  </Tabpage>
                  <Tabpage id="tab2" text="상가임대수입">
                    <Layouts>
                      <Layout>
                        <Grid id="objGrid2" taborder="0" left="0" top="0" bottom="0" right="0"/>
                      </Layout>
                    </Layouts>
                  </Tabpage>
                  <Tabpage id="tab3" text="보증금 연체료 수입">
                    <Layouts>
                      <Layout>
                        <Grid id="objGrid3" taborder="0" left="0" top="0" bottom="0" right="0"/>
                      </Layout>
                    </Layouts>
                  </Tabpage>
                  <Tabpage id="tab4" text="분양선수금">
                    <Layouts>
                      <Layout>
                        <Grid id="objGrid4" taborder="0" left="0" top="0" bottom="0" right="0"/>
                      </Layout>
                    </Layouts>
                  </Tabpage>
                </Tabpages>
              </Tab>
              <PopupDiv id="pdvCdSlip" text="pdiv00" visible="false" left="837" top="27" width="433" height="245" background="#ffffff" border="1px solid #6b6b6b">
                <Layouts>
                  <Layout>
                    <Static id="sta00" taborder="0" text="전표번호를 선택하세요." left="41" top="10" height="17" right="42" textAlign="center"/>
                    <Grid id="grd" taborder="1" left="10" top="40" right="13" bottom="45" binddataset="dsCdSlip" oncelldblclick="pdvCdSlip_grd_oncelldblclick">
                      <Formats>
                        <Format id="default">
                          <Columns>
                            <Column size="80"/>
                            <Column size="120"/>
                            <Column size="150"/>
                          </Columns>
                          <Rows>
                            <Row size="24" band="head"/>
                            <Row size="24"/>
                          </Rows>
                          <Band id="head">
                            <Cell text="현장코드"/>
                            <Cell col="1" text="전표번호"/>
                            <Cell col="2" text="거래처"/>
                          </Band>
                          <Band id="body">
                            <Cell text="bind:CD_DEPT" textAlign="center"/>
                            <Cell col="1" text="bind:CD_TRADE" textAlign="center"/>
                            <Cell col="2" text="bind:DS_VENDOR"/>
                          </Band>
                        </Format>
                      </Formats>
                    </Grid>
                    <Button id="btnConfirm" taborder="2" text="확인" left="160" top="210" width="60" height="21" onclick="pdvCdSlip_btnConfirm_onclick"/>
                    <Button id="btnCancel" taborder="3" text="취소" left="230" top="210" width="60" height="21" onclick="pdvCdSlip_btnCancel_onclick"/>
                  </Layout>
                </Layouts>
              </PopupDiv>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	this.ccfCORP.setFocus();
	//작업년월(현재월)
	this.ctclDT_WORK.form.TextBox.set_value(this.gfnGetDate().substr(0,6));
	//법인코드 세션에 코드로 셋팅
	this.ccfCORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP); 
	this.ccfCORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);	
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
};

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnDataCreate= this.gfnFormButtonAdd("DataCreate", "fnDataCreate"); 	//집계표생성 버튼
	this.btnSearchSlip = this.gfnFormButtonAdd("SearchSlip", "fnSearchSlip"); 	//전표조회 버튼
	this.btnIssueSlip  = this.gfnFormButtonAdd("IssueSlip" , "fnIssueSlip"); 	//전표발행 버튼
	this.btnCancelSlip = this.gfnFormButtonAdd("CancelSlip", "fnCancelSlip"); 	//전표취소 버튼
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCORP = this.divSearch.form.ccfCORP;
	this.ccfDEPT = this.divSearch.form.ccfDEPT;
	this.ctclDT_WORK = this.divSearch.form.ctclDT_WORK;
	this.tabData = this.divData.form.tabData;
	this.dxGrid1 = this.divData.form.tabData.tab1.form.objGrid1;
	this.dxGrid2 = this.divData.form.tabData.tab2.form.objGrid2;
	this.dxGrid3 = this.divData.form.tabData.tab3.form.objGrid3;
	this.dxGrid4 = this.divData.form.tabData.tab4.form.objGrid4;
	this.pdvCdSlip = this.divData.form.pdvCdSlip;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.ccfCORP.CodeFindName = "DHX_CFCORP";
	this.ccfCORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCORP.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.ccfDEPT.CodeFindName = "DHX_BUIDING_JOIN";
	this.ccfDEPT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid1, this.dsList1, "DH", "DHA_BUIDING_JOIN_ASSIGN");
	this.dxGrid1.setCellProperty( "body", this.dxGrid1.getBindCellIndex("body","DS_ACCOUNT"), "cssclass", "expr:DS_ACCOUNT=='계'? 'update':''");
	this.dxGrid1.setCellProperty( "body", this.dxGrid1.getBindCellIndex("body","AM_ASSIGN"), "cssclass", "expr:DS_ACCOUNT=='계'? 'update':''");	
	
	this.gfnGridInit(this.dxGrid2, this.dsList2, "DH", "DHA_BUIDING_JOIN_ASSIGN2");
	this.dxGrid2.setCellProperty( "body", this.dxGrid2.getBindCellIndex("body","DS_DISP"), "cssclass", "expr:DS_DISP=='계'||DS_DISP=='합계'? 'update':''");
	this.dxGrid2.setCellProperty( "body", this.dxGrid2.getBindCellIndex("body","AM_ASSIGN"), "cssclass", "expr:DS_DISP=='계'||DS_DISP=='합계'? 'update':''");	
	this.gfnGridInit(this.dxGrid3, this.dsList3, "DH", "DHA_BUIDING_JOIN_ASSIGN3");
	this.dxGrid3.setCellProperty( "body", this.dxGrid3.getBindCellIndex("body","DS_DISP"), "cssclass", "expr:DS_DISP=='계'? 'update':''");
	this.dxGrid3.setCellProperty( "body", this.dxGrid3.getBindCellIndex("body","AM_ASSIGN"), "cssclass", "expr:DS_DISP=='계'? 'update':''");	

	this.gfnGridInit(this.dxGrid4, this.dsList4, "DH", "DHA_BUIDING_JOIN_ASSIGN4");
	this.dxGrid4.setCellProperty( "body", this.dxGrid4.getBindCellIndex("body","DS_DISP"), "cssclass", "expr:DS_DISP=='계'? 'update':''");
	this.dxGrid4.setCellProperty( "body", this.dxGrid4.getBindCellIndex("body","AM_ASSIGN"), "cssclass", "expr:DS_DISP=='계'? 'update':''");	

	// 이벤트 추가
	this.dsSearch.addEventHandler("onvaluechanged", this.dsSearch_onvaluechanged, this);
	
	//헤더 클릭 이벤트 삭제(소팅 막기 위해 처리)
	this.dxGrid3.removeEventHandlerLookup("onheadclick", "gfnGrid_onheadclick", this);
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("CD_DEPT", "string");
	this.dsSelect.addColumn("DT_WORK", "string");
	
	this.dsCreate = new Dataset();
	this.dsCreate.addColumn("CD_CORP", "string");
	this.dsCreate.addColumn("CD_DEPT", "string");
	this.dsCreate.addColumn("DT_WORK", "string");
	this.dsCreate.addColumn("SABUN", "string");	
	
	this.dsCdSlipSelect = new Dataset();
	this.dsCdSlipSelect.addColumn("CD_CORP", "string");	
	this.dsCdSlipSelect.addColumn("CD_DEPT", "string");	
	this.dsCdSlipSelect.addColumn("DT_WORK", "string");	
	
	//전표발행용 데이터셋
	this.dsIssueSlip = new Dataset();
	this.dsIssueSlip.addColumn("CD_CORP"   	, "string");	//법인코드
	this.dsIssueSlip.addColumn("CD_DEPT"	, "string");	//현장코드
	this.dsIssueSlip.addColumn("DT_WORK"	, "string");	//작업년월
	this.dsIssueSlip.addColumn("ID_TRANS"	, "string");	//사용자 아이디
	
	//전표취소용 데이터셋
	this.dsCancelSlip = new Dataset();
	this.dsCancelSlip.addColumn("CD_CORP"   , "string");	//법인코드
	this.dsCancelSlip.addColumn("CD_DEPT"	, "string");	//현장코드
	this.dsCancelSlip.addColumn("DT_WORK"	, "string");	//작업년월
	this.dsCancelSlip.addColumn("ID_TRANS"	, "string");	//사용자 아이디
};

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	헤더 조회 버튼
  */
this.fnSelect = function() {	
	
	if (!this.fnSelectValidate()) return false;
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "CD_DEPT"	, this.dsSearch.getColumn(0,"CD_DEPT"));
	
	var strSvcId    = "header";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "selectHeader=dsSelect";
	var outData     = "dsHeader=selectHeader0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};

//데이터 조회 처리
this.fnDataSelect = function()
{
	this.gfnGridBeforeSelect(this.dxGrid1);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "CD_CORP"	, this.dsSearch.getColumn(0,"CD_CORP"));
	this.dsSelect.setColumn(0, "CD_DEPT"	, this.dsSearch.getColumn(0,"CD_DEPT"));
	this.dsSelect.setColumn(0, "DT_WORK"	, this.dsSearch.getColumn(0,"DT_WORK"));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect select1=dsSelect select2=dsSelect select3=dsSelect";
	var outData     = "dsList1=select0 dsList2=select10 dsList3=select20 dsList4=select30";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};


/*
 *	입력 버튼
 */
this.fnAdd = function() {
};

/*
 *	삭제 버튼
 */
this.fnDel = function() {
};

/*
 *	저장 버튼
 */
this.fnSave = function() {
};

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	var arrGrid = [], arrSheetName = [];
	arrGrid[0] = this.dxGrid1;
	arrGrid[1] = this.dxGrid2;
	arrGrid[2] = this.dxGrid3;
	arrGrid[3] = this.dxGrid4;
	
	arrSheetName[0] = this.tabData.tab1.text;
	arrSheetName[1] = this.tabData.tab2.text;
	arrSheetName[2] = this.tabData.tab3.text;
	arrSheetName[3] = this.tabData.tab4.text;
	this.gfnExcelExportMulti(arrGrid,  arrSheetName, this.titletext);
};

/*
 *	출력 버튼
 */
this.fnPrint = function() {
};

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;

	if (this.gfnIsNull(this.ccfCORP.form.CDTextBox.text)) {
		this.gfnAlert("법인코드가 입력되지 않았습니다.");
		this.ccfCORP.form.CDTextBox.setFocus();
		validate = false;
	}
	
	if (this.gfnIsNull(this.ccfDEPT.form.CDTextBox.text)) {
		this.gfnAlert("현장코드가 입력되지 않았습니다.");
		this.ccfDEPT.form.CDTextBox.setFocus();
		validate = false;
	}

	if (this.gfnIsNull(this.ctclDT_WORK.form.TextBox.value)) {
		this.gfnAlert("작업년월이 입력되지 않았습니다.");
		this.ctclDT_WORK.form.TextBox.setFocus();
		validate = false;
	}

	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	
	if(svcID == "header"){	
		//그리드 데이터 셋팅 작업
		this.fnGridDataSetting(this.dxGrid1);
		this.fnGridDataSetting(this.dxGrid2);
		this.fnGridDataSetting(this.dxGrid3);
		this.fnGridDataSetting(this.dxGrid4);
	} else if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid1);
		
		this.FormBtns.Excel.set_enable(false);
		if(this.dsList1.getCaseCount(this.ucFlag +" !='#'") > 0 || this.dsList2.getCaseCount(this.ucFlag +" !='#'") > 0 || this.dsList3.getCaseCount(this.ucFlag +" !='#'") > 0){
			this.FormBtns.Excel.set_enable(true);
		}

		//dsList1=select0 dsList2=select10 dsList3=select20
	} else if(svcID == "create") {
		if (errorCode == 0) {
			this.gfnAlert("안분확정 처리 되었습니다.");
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	} else if(svcID == "cdSlipSelect") {	
		this.fnCdSlipPopup();
	}else if(svcID == "issueSlip"){	
		if (errorCode == 0) {
			this.gfnAlert("전표가 발행 되었습니다.");
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}else if(svcID == "cancelSlip"){	
		if (errorCode == 0) {
			this.gfnAlert("전표가 취소 되었습니다.");
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if (id == "ccfCORP") {
		dsUserParam.setColumn(nrow, "ID_SABUN", this.AuthClient.ID_USER);
	}

	if (id == "ccfDEPT") {	//현장
		var cdCorp = this.ccfCORP.form.CDTextBox.text;
		if(this.gfnIsNull(cdCorp)){
			this.gfnAlert("법인코드를 먼저 선택하세요.");
			return false;
		}	
		dsUserParam.setColumn(nrow, "TY_GUBUN"	, "02");			//구분
		dsUserParam.setColumn(nrow, "CD_CORP"	, cdCorp);			//법인코드

	}
	return true;
}; 

this.fnAfterCDTextChanged = function(id, codeFindData) {

	switch(id) {
		case "ccfCORP":	//법인코드
			this.ccfDEPT.form.fnCodeFindClear();
		break;
	}
}

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
		
// 집계표 생성 처리
this.fnDataCreate = function (obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if (!this.fnSelectValidate()) return false;
	
	this.gfnConfirm("안분확정 하시겠습니까?", "dataCreate_callback");
};

// 집계표 생성 처리 callback
this.dataCreate_callback = function(strId, val) 
{
	if(val == true) {
		this.dsCreate.clearData();
		var nRow = this.dsCreate.addRow();
		
		//처리할 데이터 담기
		this.dsCreate.setColumn(nRow, "CD_CORP"  , this.dsSearch.getColumn(0,"CD_CORP"));
		this.dsCreate.setColumn(nRow, "CD_DEPT"  , this.dsSearch.getColumn(0,"CD_DEPT"));
		this.dsCreate.setColumn(nRow, "DT_WORK"	 , this.dsSearch.getColumn(0,"DT_WORK"));
		this.dsCreate.setColumn(nRow, "SABUN"  , this.AuthClient.ID_USER);
		
		var strSvcId    = "create";
		var strSvcType  = "save";
		var inProc		= "_dsProc";
		var inData      = "create=dsCreate";
		var outData     = "";
		var strArg      = "";
		var callBackFnc = "fnCallback";
		
		this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
							strSvcType , 	// transaction을 요청할 구분
							inProc,			// Procedure 정보 Dataset 이름
							inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
							outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
							strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
							callBackFnc); 	// 통신방법 정의 [생략가능]
	}
};


//전표 조회 
this.fnSearchSlip = function (obj:nexacro.Button,e:nexacro.ClickEventInfo)
{	
	this.dsCdSlipSelect.clearData();
	this.dsCdSlipSelect.addRow();
	
	this.dsCdSlipSelect.setColumn(0, "CD_CORP", this.ccfCORP.form.CDTextBox.value);
	this.dsCdSlipSelect.setColumn(0, "CD_DEPT", this.ccfDEPT.form.CDTextBox.value);
	this.dsCdSlipSelect.setColumn(0, "DT_WORK", this.ctclDT_WORK.form.TextBox.value);
	
	var strSvcId    = "cdSlipSelect";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "cdSlipSelect=dsCdSlipSelect";
	var outData     = "dsCdSlip=cdSlipSelect0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
		
};

//전표번호 팝업 호출
this.fnCdSlipPopup = function() {
	var nTop  = this.btnSearchSlip.getOffsetHeight()-30; 
	var nLeft = this.btnSearchSlip.getOffsetLeft(); 

	//팝업 레이터 호출
	this.pdvCdSlip.trackPopupByComponent(this, nLeft, nTop, null, null, "");
};

//전표번호 팝업 확인 버튼 클릭
this.pdvCdSlip_btnConfirm_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if(this.gfnIsNull(this.dsCdSlip.getColumn(this.dsCdSlip.rowposition, "CD_TRADE"))){
		this.gfnAlert("전표번호는 필수입니다.");
	}else{
		//전표조회 팝업 호출
		this.fnIssueSlipPopup(this.dsCdSlip.getColumn(this.dsCdSlip.rowposition,"CD_TRADE"));
		
		this.pdvCdSlip.closePopup();
	}
};

//전표번호 팝업 취소 버튼 클릭
this.pdvCdSlip_btnCancel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.pdvCdSlip.closePopup();
};

//전표번호 팝업 그리드 더블클릭 
this.pdvCdSlip_grd_oncelldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	if(this.gfnIsNull(this.dsCdSlip.getColumn(e.row,"CD_TRADE"))){
		this.gfnAlert("전표번호는 필수입니다.");
	}else{	
		//전표조회 팝업 호출
		this.fnIssueSlipPopup(this.dsCdSlip.getColumn(e.row,"CD_TRADE"));
		this.pdvCdSlip.closePopup();
	}
};

//전표조회 팝업 호출
this.fnIssueSlipPopup = function (cdTerade)
{
	var param = {};
	param.IUD_FLAG = "S";
	param.CD_TRADE = this.gfnTrim(cdTerade);
	this.gfnFormOpen("DHA", "DHA_ISSUESLIP", "fnPopupCallBack", param, this.getOffsetWidth(), this.getOffsetHeight());
};

//그리드 셋팅
this.fnGridDataSetting = function (objGrid)
{
	
	var ncol1 = 0;
	var ncol2 = 0;
	var ncol3 = 0;
	
	var objDs = objGrid.getBindDataset();
	
	objGrid.set_enableredraw(false);
	objDs.set_enableevent(false);
	
	// 동적으로 생성한 그리드 컬럼 삭제
	for ( var i =objGrid.getCellCount("body")-1; -1 < i ; i--){
		if( this.gfnGridGetBindColumnNameByIndex( objGrid, i) != "AM_ASSIGN" && this.gfnGridGetBindColumnNameByIndex( objGrid, i).search("AM_ASSIGN") > -1){
			objGrid.deleteContentsCol("body",i);
		}		
	}
	
	// 동적으로 생성한 데이터셋 컬럼 삭제
	for ( var i =objDs.colcount-1; -1 < i ; i--){
		if( objDs.getColID(i) != "AM_ASSIGN" && objDs.getColID(i).search("AM_ASSIGN") > -1 ){
			objDs.deleteColumn(i);
		}
	}
	
	// 머지할 컬럼 시작 위치
	ncol3 = objGrid.getCellCount("head");
	
	// 그리드,데이터셋에 동적컬럼 생성
	
	for( var i = 0; i < this.dsHeader.rowcount; i++ ){
		var objColinfo = new ColumnInfo() ;
		objColinfo.set_type( "BIGDECIMAL" );
		objColinfo.set_size( 256 );

		objDs.addColumnInfo("AM_ASSIGN"+this.dsHeader.getColumn(i,"NO"),objColinfo);
		
		ncol1 = objGrid.appendContentsCol();
		
		objGrid.setFormatColProperty(ncol1, "size", 170);
		objGrid.setCellProperty("body", ncol1, "displaytype", "number");
		objGrid.setCellProperty("body", ncol1, "text", "bind:" + "AM_ASSIGN"+this.dsHeader.getColumn(i,"NO"));
		if( objGrid.id == "objGrid1"){
			objGrid.setCellProperty("body", ncol1, "cssclass", "expr:DS_ACCOUNT=='계'? 'update':''");
		} else {				
			objGrid.setCellProperty("body", ncol1, "cssclass", "expr:DS_DISP=='계'||DS_DISP=='합계'? 'update':''");
		}
		objGrid.setCellProperty("head", (ncol1+ncol2), "text", this.dsHeader.getColumn(i,"DS_VENDOR"));

		ncol2++;
	}
	
	var rtn = objGrid.mergeContentsCell("head", 0, (ncol3+1), 0,(ncol3+ncol2), ncol3, false);
	if(rtn > -1) {
		objGrid.setCellProperty("head", rtn, "text", "안분금액");
	}
	
	objGrid.set_enableredraw(true);
	objDs.set_enableevent(true);
	
	this.fnDataSelect();
};

//검색조건 변경 이벤트
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{	
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid1);	
		this.gfnGridClear(this.dxGrid2);
		this.gfnGridClear(this.dxGrid3);
		this.gfnGridClear(this.dxGrid4);
	}
};


//전표발행 처리
this.fnIssueSlip = function (obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if (this.gfnIsNull(this.gfnTrim(this.ccfCORP.form.CDTextBox.value))) {
		this.gfnAlert("법인코드는 필수입니다.");
		this.ccfCORP.form.CDTextBox.setFocus();
		return;
	}
	
	if (this.gfnIsNull(this.gfnTrim(this.ccfDEPT.form.CDTextBox.value))) {
		this.gfnAlert("현장은 필수입니다.");
		this.ccfDEPT.form.CDTextBox.setFocus();
		return;
	}

	if(this.gfnIsNull(this.ctclDT_WORK.form.TextBox.value)){
		this.gfnAlert("작업년월은 필수입니다.");
		this.ctclDT_WORK.form.TextBox.setFocus();
		return;
	}	
	
	this.gfnConfirm("전표발행 하시겠습니까?", "fnIssueSlip_callback");
	
};

this.fnIssueSlip_callback = function(strId, val) 
{
	if(val == true) {
		this.dsIssueSlip.clearData();
		var nRow = this.dsIssueSlip.addRow();
		
		//처리할 데이터 담기
		this.dsIssueSlip.setColumn(nRow, "CD_CORP"	  , this.ccfCORP.form.CDTextBox.value);
		this.dsIssueSlip.setColumn(nRow, "CD_DEPT"	  , this.ccfDEPT.form.CDTextBox.value);
		this.dsIssueSlip.setColumn(nRow, "DT_WORK" 	  , this.ctclDT_WORK.form.TextBox.value);
		this.dsIssueSlip.setColumn(nRow, "ID_TRANS"   , this.AuthClient.ID_USER);
		
		var strSvcId    = "issueSlip";
		var strSvcType  = "save";
		var inProc		= "_dsProc";
		var inData      = "issueSlip=dsIssueSlip";
		var outData     = "";
		var strArg      = "";
		var callBackFnc = "fnCallback";
		
		this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
							strSvcType , 	// transaction을 요청할 구분
							inProc,			// Procedure 정보 Dataset 이름
							inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
							outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
							strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
							callBackFnc); 	// 통신방법 정의 [생략가능]
	}
};

//전표취소 처리
this.fnCancelSlip = function (obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if (this.gfnIsNull(this.gfnTrim(this.ccfCORP.form.CDTextBox.value))) {
		this.gfnAlert("법인코드는 필수입니다.");
		this.ccfCORP.form.CDTextBox.setFocus();
		return;
	}
	
	if (this.gfnIsNull(this.gfnTrim(this.ccfDEPT.form.CDTextBox.value))) {
		this.gfnAlert("현장은 필수입니다.");
		this.ccfDEPT.form.CDTextBox.setFocus();
		return;
	}

	if(this.gfnIsNull(this.ctclDT_WORK.form.TextBox.value)){
		this.gfnAlert("작업년월은 필수입니다.");
		this.ctclDT_WORK.form.TextBox.setFocus();
		return;
	}
	
	this.gfnConfirm("전표를 취소하시겠습니까?", "fnCancelSlip_callback");
	
};

this.fnCancelSlip_callback = function(strId, val) 
{
	if(val == true) {
		this.dsCancelSlip.clearData();
		var nRow = this.dsCancelSlip.addRow();
		
		//처리할 데이터 담기
		this.dsCancelSlip.setColumn(nRow, "CD_CORP"	  , this.ccfCORP.form.CDTextBox.value);
		this.dsCancelSlip.setColumn(nRow, "CD_DEPT"	  , this.ccfDEPT.form.CDTextBox.value);
		this.dsCancelSlip.setColumn(nRow, "DT_WORK"   , this.ctclDT_WORK.form.TextBox.value);
		this.dsCancelSlip.setColumn(nRow, "ID_TRANS"  , this.AuthClient.ID_USER);
		
		var strSvcId    = "cancelSlip";
		var strSvcType  = "save";
		var inProc		= "_dsProc";
		var inData      = "cancelSlip=dsCancelSlip";
		var outData     = "";
		var strArg      = "";
		var callBackFnc = "fnCallback";
		
		this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
							strSvcType , 	// transaction을 요청할 구분
							inProc,			// Procedure 정보 Dataset 이름
							inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
							outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
							strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
							callBackFnc); 	// 통신방법 정의 [생략가능]
	}
};]]></Script>
    <Objects>
      <Dataset id="dsList1"/>
      <Dataset id="dsList2"/>
      <Dataset id="dsList3"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DHAPR_BUIDING_JOIN_ASSIGN_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">select1</Col>
            <Col id="SP">DHAPR_BUIDING_JOIN_ASSIGN_SELECT1</Col>
          </Row>
          <Row>
            <Col id="TARGET">select2</Col>
            <Col id="SP">DHAPR_BUIDING_JOIN_ASSIGN_SELECT2</Col>
          </Row>
          <Row>
            <Col id="TARGET">select3</Col>
            <Col id="SP">DHAPR_BUIDING_JOIN_ASSIGN_SELECT3</Col>
          </Row>
          <Row>
            <Col id="TARGET">create</Col>
            <Col id="SP">DHAPR_BUIDING_JOIN_ASSIGN_WRITE</Col>
          </Row>
          <Row>
            <Col id="SP">DHAPR_BUIDING_JOIN_ASSIGN_SELECT_HEAD</Col>
            <Col id="TARGET">selectHeader</Col>
          </Row>
          <Row>
            <Col id="TARGET">cdSlipSelect</Col>
            <Col id="SP">DHAPR_BUIDING_DIV_COST2_AUTOSLIP_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">issueSlip</Col>
            <Col id="SP">DHAPR_BUIDING_DIV_COST2_AUTOSLIP</Col>
          </Row>
          <Row>
            <Col id="TARGET">cancelSlip</Col>
            <Col id="SP">DHAPR_BUIDING_DIV_COST2_AUTOSLIP_DELETE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsHeader"/>
      <Dataset id="dsSearch">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="CD_DEPT" type="STRING" size="256"/>
          <Column id="DT_WORK" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CORP"/>
            <Col id="CD_DEPT"/>
            <Col id="DT_WORK"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsCdSlip">
        <ColumnInfo>
          <Column id="CD_DEPT" type="STRING" size="256"/>
          <Column id="CD_TRADE" type="STRING" size="256"/>
          <Column id="DS_VENDOR" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsList4"/>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item1" compid="divSearch.form.ccfDEPT.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_DEPT"/>
      <BindItem id="item2" compid="divSearch.form.ctclDT_WORK.form.TextBox" propid="value" datasetid="dsSearch" columnid="DT_WORK"/>
    </Bind>
  </Form>
</FDL>
