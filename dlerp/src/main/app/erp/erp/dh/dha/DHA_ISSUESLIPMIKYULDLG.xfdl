<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="1500" height="500" maxwidth="1500" maxheight="580" titletext="반제전표(팝업)" onload="form_onload">
    <Layouts>
      <Layout>
        <Static id="staTitle" taborder="4" text="반제전표" left="0" top="10" height="22" cssclass="sta_TITLE_Bg" right="0"/>
        <Div id="divSearch" taborder="5" left="0" top="staTitle:10.0" height="78" right="0" cssclass="div_SEARCH_Bg" text="">
          <Layouts>
            <Layout>
              <Static id="sta01" taborder="0" text="법인코드" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_CORP" CDTextWidth="70" taborder="1" left="sta01:0.0" top="10.0" width="259" height="24.0" url="cmm::cmmCodeFind.xfdl" text="" enable="false"/>
              <Static id="staCD_DEPT_BH" taborder="2" text="발행부서" left="ccfCD_CORP:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_DEPT_BH" CDTextWidth="70" taborder="3" left="staCD_DEPT_BH:0.0" top="10.0" width="259" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="sta03" taborder="4" text="회계일자" left="ccfCD_DEPT_BH:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Calendar id="ctclDT_FROM" taborder="5" left="sta03:0.0" top="10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true"/>
              <Static id="sta05" taborder="6" text="~" left="ctclDT_FROM:0.0" top="10.0" width="30.0" height="24.0" cssclass="sta_WF_AC"/>
              <Calendar id="ctclDT_TO" taborder="7" left="sta05:0.0" top="10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true"/>
              <Static id="staCD_DEPT_BE" taborder="8" text="귀속부서" left="ctclDT_TO:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel" visible="false"/>
              <Div id="ccfCD_DEPT_BE" CDTextWidth="70" taborder="9" left="staCD_DEPT_BE:0.0" top="10.0" width="100" height="24.0" url="cmm::cmmCodeFind.xfdl" text="" visible="false"/>
              <Static id="sta04" taborder="10" text="계정멀티" left="0.0" top="sta01:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <!--
			  <Div id="ccfCD_ACNT" CDTextWidth="70" taborder="7" left="70" top="31" width="259" height="20" url="cmm::cmmCodeFind.xfdl" text=""/>
			  -->
              <Div id="ccfCD_ACNT" CodeFindName="DHX_CFACNT_TYPE_MULTI" CDTextWidth="70" taborder="11" left="sta04:0.0" top="sta01:10.0" width="260" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="sta02" taborder="12" text="거래처" left="ccfCD_ACNT:0.0" top="sta01:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_VENDOR" CDTextWidth="70" taborder="13" left="sta02:0.0" top="sta01:10.0" width="259" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staCD_SLIP" taborder="14" text="전표번호" left="ccfCD_VENDOR:0.0" top="sta01:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Edit id="txtCD_SLIP" taborder="15" left="staCD_SLIP:0.0" top="sta01:10.0" width="240" height="24.0"/>
            </Layout>
          </Layouts>
        </Div>
        <Button id="btnSearch" taborder="6" text="조회" top="55" height="21" onclick="btnSearch_onclick" right="10" width="50"/>
        <Div id="divData" taborder="3" left="0" top="divSearch:10" bottom="45" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0" onheadclick="divData_objGrid_onheadclick"/>
            </Layout>
          </Layouts>
        </Div>
        <Button id="btnConf" taborder="1" text="확인" left="635" width="69" height="27" onclick="btnConf_onclick" bottom="7"/>
        <Button id="btnAdd" taborder="0" text="추가" left="btnConf:10" width="69" height="27" bottom="7" onclick="btnAdd_onclick"/>
        <Button id="btnCancel" taborder="2" text="닫기" left="btnAdd:10" width="69" height="27" onclick="btnCancel_onclick" bottom="7"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	//console.log('this', this);
	//console.log('this.divTopBtn', this.divTopBtn);
	//this.divTopBtn.set_height(0);
	
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	//법인코드 셋팅
	this.ccfCD_CORP.form.CDTextBox.set_value(this.getOwnerFrame().CD_CORP);	
	this.ccfCD_CORP.form.DSTextBox.set_value(this.getOwnerFrame().DS_CORP); 
	
	//계정코드 셋팅
	this.ccfCD_ACNT.form.CDTextBox.set_value(this.getOwnerFrame().CD_ACCOUNT);	
	this.ccfCD_ACNT.form.DSTextBox.set_value(this.getOwnerFrame().DS_ACCOUNT); 
	
	this.GR_SEARCH = this.getOwnerFrame().GR_SEARCH;
	
	//this.ccfCD_DEPT_BH.form.CDTextBox.set_value(this.getOwnerFrame().CD_DEPT_BH);	
	//this.ccfCD_DEPT_BH.form.DSTextBox.set_value(this.getOwnerFrame().DS_DEPT_BH); 

	this.dsSearch.setColumn(0, "CD_DEPT_BH", this.AuthClient.LEVCD_DEPT_UPPER);
	this.ccfCD_DEPT_BH.form.fnCodeFindLoad();	

	this.divSearch.form.ctclDT_FROM.set_value(this.gfnAddMonth(this.gfnGetDate(), -3));
	this.divSearch.form.ctclDT_TO.set_value(this.gfnGetDate());

// 	if (nexacro.toNumber(this.GR_SEARCH) >= 7) {
// 		this.staCD_DEPT_BH.set_textDecoration("underline");
// 	}
	
	//조회처리
	//this.btnSearch.click();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {

}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {

};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {	

	this.ccfCD_CORP    = this.divSearch.form.ccfCD_CORP;
	this.ccfCD_DEPT_BH = this.divSearch.form.ccfCD_DEPT_BH;
	this.ccfCD_DEPT_BE = this.divSearch.form.ccfCD_DEPT_BE;
	this.ccfCD_ACNT    = this.divSearch.form.ccfCD_ACNT;
	this.ccfCD_VENDOR  = this.divSearch.form.ccfCD_VENDOR;
	this.staCD_DEPT_BH = this.divSearch.form.staCD_DEPT_BH;
	this.staCD_DEPT_BE = this.divSearch.form.staCD_DEPT_BE;
	this.ctclDT_FROM   = this.divSearch.form.ctclDT_FROM;
	this.ctclDT_TO     = this.divSearch.form.ctclDT_TO;
	this.dxGrid        = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	//법인코드
	this.ccfCD_CORP.CodeFindName = "DHX_CFCORP";
	this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";
	
	//계정코드
 	//this.ccfCD_ACNT.CodeFindName = "DHX_CFACCOUNT";
 	this.ccfCD_ACNT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_ACNT.AfterCDTextChanged = "fnAfterCDTextChanged";

	//발행부서
 	this.ccfCD_DEPT_BH.CodeFindName = "DHX_CFACNTUNIT";
 	this.ccfCD_DEPT_BH.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	//귀속부서
 	this.ccfCD_DEPT_BE.CodeFindName = "DHX_CFACNTUNIT";
 	this.ccfCD_DEPT_BE.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	//거래처
 	this.ccfCD_VENDOR.CodeFindName = "DHX_CFALLVENDOR_CODEFIND";
 	this.ccfCD_VENDOR.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	this.gfnGridInit(this.dxGrid, this.dsList, "DH", "DHA_MISUMIKYULDLG");
	
	this.dsList.addEventHandler("oncolumnchanged", this.dsList_ColumnChanged, this);
	this.dsList.addEventHandler("onvaluechanged", this.dsList_Valuechanged, this);

	//검색조건 변경 이벤트
	this.dsSearch.addEventHandler("onvaluechanged", this.dsSearch_Valuechanged, this);
	
	var colID = this.dxGrid.getBindCellIndex("body", "AM_REMAIN_UNBOUND");
	//this.dxGrid.setCellProperty("body", colID, "text", "expr:AM_ACCOUNT-AM_JUNGSAN-AM_REMAIN");	
	
	this.dxGrid.setCellProperty("body", this.dxGrid.getBindCellIndex("body", "AM_REMAIN_UNBOUND_EXEC"), "edittype", "expr:dataset.parent.gfnIsNull(RT_LOCAL_EXCH)? 'none':'mask'");
	
	
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("CD_ACCOUNT", "string");
	this.dsSelect.addColumn("CD_DEPT_ACNT_BH", "string");
	this.dsSelect.addColumn("CD_DEPT_ACNT", "string");
	this.dsSelect.addColumn("CD_VENDOR", "string");
	this.dsSelect.addColumn("DT_FROM", "string");
	this.dsSelect.addColumn("DT_TO", "string");
	this.dsSelect.addColumn("CD_SLIP", "string");

	//리턴 데이터셋
 	this.dsResult = new Dataset();		

}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;

	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsList.clearData();
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "CD_CORP"		 , this.ccfCD_CORP.form.CDTextBox.value);          	// 법인코드	
	this.dsSelect.setColumn(0, "CD_ACCOUNT"		 , this.ccfCD_ACNT.form.CDTextBox.value);          	// 계정코드
	this.dsSelect.setColumn(0, "CD_DEPT_ACNT_BH" , this.ccfCD_DEPT_BH.form.CDTextBox.value);  		// 발행부서
	this.dsSelect.setColumn(0, "CD_DEPT_ACNT"	 , this.ccfCD_DEPT_BE.form.CDTextBox.value);  		// 귀속부서
	this.dsSelect.setColumn(0, "CD_VENDOR"		 , this.ccfCD_VENDOR.form.CDTextBox.value);    		// 거래처
	this.dsSelect.setColumn(0, "DT_FROM"		 , this.ctclDT_FROM.value);							// 회계일자(시작)
	this.dsSelect.setColumn(0, "DT_TO"		     , this.ctclDT_TO.value);							// 회계일자(종료)	
	this.dsSelect.setColumn(0, "CD_SLIP"		 , this.dsSearch.getColumn(0, "CD_SLIP"));			// 전표번호
	
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
	
}

 /*
 *	입력 버튼
 */
this.fnAdd = function() {
}

 /*
 *	저장 버튼
 */
this.fnSave = function() {	
}


/*
 *	삭제 버튼
 */
this.fnDel = function() {
	//this.gfnGridDel(this.dxGrid);
}


/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	//this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
this.fnSelectValidate = function() {
	if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
		this.gfnAlert("법인코드는 필수입니다.");
		this.ccfCD_CORP.form.CDTextBox.setFocus();
		return false;
	}
	
	if(!this.gfnIsNull(this.ctclDT_FROM.value) || !this.gfnIsNull(this.ctclDT_TO.value)){	
		if(this.gfnIsNull(this.ctclDT_FROM.value)){
			this.gfnAlert("회계일자(시작일)은 필수입니다.");
			this.ctclDT_FROM.setFocus();
			return false;
		}
		
		if(this.gfnIsNull(this.ctclDT_TO.value)){
			this.gfnAlert("회계일자(종료일)은 필수입니다.");
			this.ctclDT_TO.setFocus();
			return false;
		}
		
		if(this.gfnGetDiffDate(this.ctclDT_FROM.value, this.ctclDT_TO.value) <= -1){
			this.gfnAlert("회계일자의 시작일은 종료일보다 작아야 합니다.");
			this.ctclDT_FROM.setFocus();
			return false;
		}
	}
	
//	if (nexacro.toNumber(this.GR_SEARCH) >= 7) {
		if (this.gfnIsNull(this.ccfCD_DEPT_BH.form.CDTextBox.value)) {
			//validate = false;
			this.gfnAlert("발행부서는 필수입니다.");
			this.ccfCD_DEPT_BH.form.CDTextBox.setFocus();
			return false;
		}
//	}
	
	return true;
};
/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
*/
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
 this.fnAfterCDTextChanged = function(id, codeFindData) {
	var arr = codeFindData; //this.ccfCD_DEPT_ORG.form.SelectedData; 둘다 사용가능
	switch(id) {
		case "ccfCD_CORP":	//법인코드
			this.ccfCD_DEPT_BH.form.fnCodeFindClear();
			this.ccfCD_DEPT_BE.form.fnCodeFindClear();
			this.ccfCD_VENDOR.form.fnCodeFindClear();
		break;
		case "ccfCD_ACNT":	//계정코드
			var strCdAcnt = "";
			var strDsAcnt = "";
			if (arr.length > 0) {
				for(var r = 0; r < arr.length; r++) {
					strCdAcnt += arr[r]["CD_ACCOUNT"]+",";
					strDsAcnt += arr[r]["DS_ACCOUNT"]+",";
				}
				
				this.ccfCD_ACNT.form.CDTextBox.set_value(strCdAcnt.substr(0,strCdAcnt.length-1));
				this.ccfCD_ACNT.form.DSTextBox.set_value(strDsAcnt.substr(0,strDsAcnt.length-1));
			}
		break;

	}
}

this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	var cdCorp = this.ccfCD_CORP.form.CDTextBox.value;
	switch(id) {
		case "ccfCD_CORP":	//법인코드
			dsUserParam.setColumn(nrow, "ID_SABUN", this.AuthClient.ID_USER);
		break;
		case "ccfCD_ACNT":	//계정코드
			dsUserParam.setColumn(nrow, "YN_MISU_MIBUL_ACNT", "Y");
		break;
		case "ccfCD_DEPT_BH":		//발행부서
			if (!this.gfnIsNull(cdCorp)) {
				dsUserParam.setColumn(nrow, "CD_DEPT_UPPER"	, "");			//상위부서
				dsUserParam.setColumn(nrow, "YN_SLIPACCEPT"	, "");			//전표발행여부
				dsUserParam.setColumn(nrow, "CD_CORP"		, cdCorp);		//법인코드
				dsUserParam.setColumn(nrow, "YN_USE"		, "Y");			//사용여부
				dsUserParam.setColumn(nrow, "GR_DEPT_ACNT"	, "");			//현장/본사여부
				dsUserParam.setColumn(nrow, "LEVCD_DEPT_UPPER", this.AuthClient.LEVCD_DEPT_UPPER);
// 			    dsUserParam.setColumn(nrow, "ID_USER"	    , this.AuthClient.ID_USER);
// 			    dsUserParam.setColumn(nrow, "GR_SEARCH"     , this.GR_SEARCH);
// 			    dsUserParam.setColumn(nrow, "CD_DEPT"	    , this.AuthClient.CD_DEPT);
			}else{
				this.gfnAlert("법인코드는 필수입력 값입니다.");
				return false;
			}
		break;
		case "ccfCD_DEPT_BE":		//귀속부서
			if (!this.gfnIsNull(cdCorp)) {
				dsUserParam.setColumn(nrow, "CD_DEPT_UPPER"	, "");			//상위부서
				dsUserParam.setColumn(nrow, "YN_SLIPACCEPT"	, "");			//전표발행여부
				dsUserParam.setColumn(nrow, "CD_CORP"		, cdCorp);		//법인코드
				dsUserParam.setColumn(nrow, "YN_USE"		, "Y");			//사용여부
				dsUserParam.setColumn(nrow, "GR_DEPT_ACNT"	, "");			//현장/본사여부
			}else{
				this.gfnAlert("법인코드는 필수입력 값입니다.");
				return false;
			}
		break;
		case "ccfCD_VENDOR":	//거래처
			if (!this.gfnIsNull(cdCorp)) {
				dsUserParam.setColumn(nrow, "CD_CORP" , cdCorp);	
			}else{
				this.gfnAlert("법인코드는 필수입력 값입니다.");
				return false;
			}
			
		break;
	}
	
	return true;
};

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
//조회버튼 클릭
this.btnSearch_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.fnSelect();
};

//취소버튼 클릭
this.btnCancel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.getParentContext().close();
};

//확인버튼 클릭
this.btnConf_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.fnSetParentsData();
	
	//팝업 닫기 처리
	this.getParentContext().close(this.dsResult.saveXML());
};

// 추가버튼
this.btnAdd_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//trace(this.getParentContext() + "-부모창 id : "+this.getOwnerFrame().parent.id);
	this.fnSetParentsData();

	this.getParentContext().opener.fnBanjeSlipPopupAddData(this.dsResult.saveXML());
	for(var i=0;i<this.dsList.rowcount;i++){
		if(this.dsList.getColumn(i, "YN_SELECT") == "1"  && this.gfnGetFlag(this.dsList, i) != "#"){
			this.dsList.setColumn(i, "YN_ADD", "Y");
			this.dsList.setColumn(i, "YN_SELECT", 0);
		}
	}	
};

this.fnSetParentsData = function(){

	if(this.dsList.findRowExprNF("YN_SELECT == '1' && "+this.ucFlag+" != '#'") == -1 ){
		this.gfnAlert("선택된 항목이 없습니다.");
		return;
	}
	
	/*
		[A] AM_REMAIN	잔액
		[B] AM_REMAIN_UNBOUND	반제금액(금번)
		========================================
		A < 0 AND A <= B AND B < 0
		A > 0 AND A >= B AND B > 0

		-----------------------------------------
		A < 0 AND A >= B AND B < 0
		A > 0 AND A <= B AND B > 0

	*/

	//var nRowExpr = this.dsList.findRowExprNF("YN_SELECT == '1' && AM_REMAIN < AM_REMAIN_UNBOUND");
	var sRowExprNF = "YN_SELECT == '1' && " 
					+ "(  (nexacro.toNumber(AM_REMAIN) < 0 && nexacro.toNumber(AM_REMAIN) > nexacro.toNumber(AM_REMAIN_UNBOUND) && nexacro.toNumber(AM_REMAIN_UNBOUND) < 0)"
					+ "|| (nexacro.toNumber(AM_REMAIN) > 0 && nexacro.toNumber(AM_REMAIN) < nexacro.toNumber(AM_REMAIN_UNBOUND) && nexacro.toNumber(AM_REMAIN_UNBOUND) > 0)"
					+")";
	var nRowExpr = this.dsList.findRowExprNF(sRowExprNF);
	if(nRowExpr > -1 ){
		this.gfnAlert("잔액은 정산금액보다 작거나 같아야 합니다.");
		return;
	}
	
	if(this.dsList.findRowExprNF("YN_SELECT == '1' && TY_BOND == '채무' && dataset.parent.gfnIsNull(DT_JIGUB)") > -1 ){
		this.gfnAlert("지급일자가 없는 데이터는 정산할 수 없습니다.");
		return;
	}
	
	if(this.dsList.findRowExprNF("YN_SELECT == '1' && dataset.parent.gfnIsNull(CD_SLIP)") > -1 ){
		this.gfnAlert("전표번호가 없는 데이터는 선택할 수 없습니다.");
		return;
	}
	
	var strRowMsg = "";
	for(var i=0;i<this.dsList.rowcount;i++){
		if(this.dsList.getColumn(i, "YN_SELECT") == "1"  && this.gfnGetFlag(this.dsList, i) != "#"){
			var amRemainUnbound = nexacro.toNumber(this.dsList.getColumn(i, "AM_REMAIN_UNBOUND"),0);
			var amRemainUnboundChk = nexacro.toNumber(this.dsList.getColumn(i, "AM_REMAIN_UNBOUND_CHK"),0);
			if((amRemainUnbound > 0 && amRemainUnboundChk < 0) || (amRemainUnbound < 0 && amRemainUnboundChk > 0)){
				var sMsg = (amRemainUnbound > 0 && amRemainUnboundChk < 0) ? "음수에서 양수로" : "양수에서 음수로";
				strRowMsg += (i + 1) + "행: [" + "반제금액(금번)" + "]은 "+sMsg+" 수정할수 없습니다";
			}
		}
	}
	
	if(!this.gfnIsNull(strRowMsg)){
		this.gfnAlert(strRowMsg);
		return false;
	}

	this.dsResult.clearData();
	
	this.dsResult.set_enableevent(false);
	
	//컬럼/데이터 복사
	this.dsResult.assign(this.dsList);

	var arrDel = [];
 	for(var i =0;i<this.dsResult.getRowCountNF();i++){
		this.dsResult.setColumnNF(i, this.ucFlag, "I");
		//미선택/필터 로우 제외
 		if(this.dsList.getColumnNF(i, "YN_SELECT") != "1" || this.dsList.getColumnNF(i, this.ucFlag) == "#"){
			arrDel[arrDel.length] = i;
 		}
 	}
	
	//미선택 데이터 삭제
	this.dsResult.deleteMultiRows(arrDel);
	
	this.dsResult.set_enableevent(true);

}

//검색조건 변경 이벤트
this.dsSearch_Valuechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{	
	if(e.oldvalue != e.newvalue) {
		this.gfnGridClear(this.dxGrid);	
	}
};

 //그리드 값변경 이벤트
this.dsList_ColumnChanged = function(obj:nexacro.NormalDataset, e:nexacro.DSColChangeEventInfo)
{
	if(e.columnid == "AM_REMAIN"){	//반제금액 수정시
		var tyCrdr = obj.getColumn(e.row, "TY_CRDR");
		var amDr = (tyCrdr == "D" ? e.newvalue : 0);
		var amCr = (tyCrdr == "C" ? e.newvalue : 0);

		obj.setColumn(e.row, "AM_DR"  , amDr);	//차변금액
		obj.setColumn(e.row, "AM_CR"  , amCr);	//대변금액
	}		
}

//데이터 변경 이벤트
this.dsList_Valuechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{	
	if(e.oldvalue != e.newvalue) {
		switch(e.columnid ) {
			case "YN_SELECT":
			
				// AM_REMAIN_EXEC 잔액 집행화
				var amRemainExec = (e.newvalue == 1) ? nexacro.toNumber(this.dsList.getColumn(e.row, "AM_REMAIN_EXEC"),0) : 0;
				//var amRemainExec = nexacro.toNumber(this.dsList.getColumn(e.row, "AM_REMAIN_EXEC"),0);

				//if(e.newvalue == "1"){
					
					// AM_REMAIN_UNBOUND_EXEC 반제금액(금번) 집행화
					//trace("AM_REMAIN_UNBOUND_EXEC 반제금액(금번) 집행화->" + amRemainExec);
					//trace("AM_REMAIN_UNBOUND_USD 반제금액(금번) 미화->" + this.dsList.getColumn(e.row, "AM_REMAIN_UNBOUND_USD"));
					//this.dsList.setColumn(e.row, "AM_REMAIN_UNBOUND_EXEC", nexacro.toNumber(amRemainExec,0));
					//this.dsList.setColumn(e.row, "AM_REMAIN_UNBOUND_CHK", nexacro.toNumber(amRemainExec,0));
					
					this.fnSetAmCheckAccouont(e.row);
// 					var amRemain = this.dsList.getColumn(e.row, "AM_REMAIN");
// 					this.dsList.setColumn(e.row, "AM_REMAIN_UNBOUND", nexacro.toNumber(amRemain,0));
// 					this.dsList.setColumn(e.row, "AM_REMAIN_UNBOUND_CHK", nexacro.toNumber(amRemain,0));
				//}
			break;

			case "AM_REMAIN_UNBOUND_EXEC":
				// 반제금액(금번) 로컬화, 원화 계산
				var sExecCol = "AM_REMAIN_UNBOUND_EXEC";
				var sLocalCol = "AM_REMAIN_UNBOUND_LOCAL";
				var sUsdCol = "AM_REMAIN_UNBOUND_USD";
				var sEurCol = "AM_REMAIN_UNBOUND_EUR";
				var sKrwCol = "AM_REMAIN_UNBOUND";

				// 로컬환율
				if (this.gfnIsNull(this.dsList.getColumn(e.row, "RT_LOCAL_EXCH"))) {
					// 환율없을때
					this.fnSetAmRemain(e.row);
					
				}else{
				    
						this.fnSetAmAccouont(e.row, sExecCol, sLocalCol, sUsdCol, sEurCol, sKrwCol);
						var amRemainExec = nexacro.toNumber(this.dsList.getColumn(e.row, "AM_REMAIN_EXEC"),0); 				
						this.dsList.setColumn(e.row, "AM_REMAIN2_EXEC", amRemainExec - nexacro.toNumber(e.newvalue,0));	
					
					//trace(" 잔액(금번) "+amRemainExec - nexacro.toNumber(e.newvalue,0)+" = " + "잔액(" +amRemainExec+ ") - " + "반제금액금번(" +e.newvalue+ ")" );
				}

			break;
			case "AM_REMAIN_UNBOUND_LOCAL":
				this.dsList.setColumn(e.row, "AM_REMAIN2_LOCAL", this.dsList.getColumn(e.row, "AM_REMAIN_LOCAL") - this.dsList.getColumn(e.row, "AM_REMAIN_UNBOUND_LOCAL"));	
				break;
			case "AM_REMAIN_UNBOUND_USD":
			    this.dsList.setColumn(e.row, "AM_REMAIN2_USD", this.dsList.getColumn(e.row, "AM_REMAIN_USD") - this.dsList.getColumn(e.row, "AM_REMAIN_UNBOUND_USD"));	
				break;
			case "AM_REMAIN_UNBOUND_EUR":
				this.dsList.setColumn(e.row, "AM_REMAIN2_EUR", this.dsList.getColumn(e.row, "AM_REMAIN_EUR") - this.dsList.getColumn(e.row, "AM_REMAIN_UNBOUND_EUR"));	
				break;
			case "AM_REMAIN_UNBOUND":
				this.dsList.setColumn(e.row, "AM_REMAIN2", this.dsList.getColumn(e.row, "AM_REMAIN") - this.dsList.getColumn(e.row, "AM_REMAIN_UNBOUND"));	
				break;
			//case "AM_REMAIN2_EXEC":	//반제금액(금번)

// 				// 잔액(금번) 로컬화, 원화 계산
// 				sExecCol = "AM_REMAIN2_EXEC";
// 				sLocalCol = "AM_REMAIN2_LOCAL";
// 				sUsdCol = "AM_REMAIN2_USD";
// 				sEurCol = "AM_REMAIN2_EUR";
// 				sKrwCol = "AM_REMAIN2";
// 					
// 				this.fnSetAmAccouont(e.row, sExecCol, sLocalCol, sUsdCol, sEurCol, sKrwCol);

//			break;

// 
// 			case "AM_REMAIN_UNBOUND":
// 			var sYnSelect = this.dsList.getColumn(e.row, "YN_SELECT");
// 			//trace(e.row + " / sYnSelect->"+sYnSelect);
// 			//if(sYnSelect == "1"){
// 				var amRemain = nexacro.toNumber(this.dsList.getColumn(e.row, "AM_REMAIN"),0);
// 				
// 				trace(" 잔액(금번) : " + "잔액(" +amRemain+ ") - " + "반제금액금번(" +e.newvalue+ ")" );
// 				this.dsList.setColumn(e.row, "AM_REMAIN2", amRemain - nexacro.toNumber(e.newvalue,0));	
// 			//}
// 			break;
		}
	}
};

// 로컬화, 원화 계산(집행화, 로컬화, 원화 컬럼명)
this.fnSetAmAccouont = function(nRow, sExecCol, sLocalCol, sUsdCol, sEurCol, sKrwCol){

	var sCdExecCurr = this.dsList.getColumn(nRow, "CD_EXEC_CURR");	// 집행통화단위	
	var rtLocalExch = nexacro.toNumber(this.dsList.getColumn(nRow, "RT_LOCAL_EXCH"));	// 로컬환율
	var rtKrwExch = nexacro.toNumber(this.dsList.getColumn(nRow, "RT_KRW_EXCH"));		// 원화환율
	var rtUsdExch = nexacro.toNumber(this.dsList.getColumn(nRow, "RT_USD_EXCH"));		// 미화환율
	var rtEurExch = nexacro.toNumber(this.dsList.getColumn(nRow, "RT_EUR_EXCH"));		// 유로화환율
	
	var nAmExec = nexacro.toNumber(this.dsList.getColumn(nRow, sExecCol));	// 집행화
	var nAmLocal = 0;
	var nAmAccount = 0;
	var nAmUsd = 0;
	var nAmEur = 0;	

	// 로컬화, 원화 계산
	// 집행화 금액이 0보다 크면
	if(!this.gfnIsNull(sCdExecCurr) && !this.gfnIsNull(nAmExec) && !this.gfnIsNull(rtLocalExch) && 
	    nAmExec != this.dsList.getColumn(nRow, "AM_REMAIN_EXEC")){	
		//trace(" fnSetAmAccouont " + "로컬화, 원화 계산 시작!!!! : " + nAmExec);
		var bKrw = (sCdExecCurr == "KRW") ? true : false;

		// ① 로컬화 : 집행화 * 로컬환율
		//trace("① 로컬화 : " + "집행화(" +nAmExec+ ") * " + "로컬환율(" +rtLocalExch+ ")" );
		//nAmLocal = nAmExec * rtLocalExch;
		nAmLocal = (bKrw == false) ? nAmExec * rtLocalExch : nAmExec / rtLocalExch ;
		
		// ② 원화 : 집행화 * 원화환율
		//trace("② 원화 : " + "집행화(" +nAmExec+ ") * " + "원화환율(" +rtKrwExch+ ")" );
		//nAmAccount = nAmExec * rtKrwExch;
		nAmAccount = (bKrw == false) ? nAmExec * rtKrwExch : nAmExec / rtKrwExch;
		
		// ③ 미화 : 집행화 * 미화환율
		//trace("③ 미화 : " + "집행화(" +nAmExec+ ") * " + "미화환율(" +rtUsdExch+ ")" );
		//nAmUsd = nAmExec * rtUsdExch;
		nAmUsd = (bKrw == false) ? nAmExec * rtUsdExch : nAmExec / rtUsdExch;
		//trace("nAmUsd : " + sUsdCol +":" + nAmUsd) 
		
		// ④ 유로화 : 집행화 * 유로화환율
		//trace("④ 유로화 : " + "집행화(" +nAmExec+ ") * " + "유로화환율(" +rtEurExch+ ")" );
		//nAmEur = nAmExec * rtEurExch;
		nAmEur = (bKrw == false) ? nAmExec * rtEurExch : nAmExec / rtEurExch;
		
		this.dsList.setColumn(nRow, sLocalCol  , nAmLocal);				// 로컬화
		this.dsList.setColumn(nRow, sUsdCol  , nAmUsd);					// 미화
		this.dsList.setColumn(nRow, sEurCol  , nAmEur);					// 유로화
		this.dsList.setColumn(nRow, sKrwCol  , nexacro.floor(nAmAccount));	// 원화(소수점절삭)
		
		this.dsList.setColumn(nRow, "AM_REMAIN2_EXEC"  , this.dsList.getColumn(nRow, "AM_REMAIN_EXEC") - nAmAccount );
		this.dsList.setColumn(nRow, "AM_REMAIN2_LOCAL"  , this.dsList.getColumn(nRow, "AM_REMAIN_LOCAL") - nAmLocal );
		this.dsList.setColumn(nRow, "AM_REMAIN2_USD"  , this.dsList.getColumn(nRow, "AM_REMAIN_USD") - nAmUsd);
		this.dsList.setColumn(nRow, "AM_REMAIN2_EUR"  , this.dsList.getColumn(nRow, "AM_REMAIN_EUR") - nAmEur);
		this.dsList.setColumn(nRow, "AM_REMAIN2"  , this.dsList.getColumn(nRow, "AM_REMAIN") - nAmAccount);
	}	
	return nexacro.floor(nAmAccount);
}

// 로컬화, 원화 체크로 전체 금액이 들어갈때는 전체잔액을 금번 반제금액으로 넣어줌 
this.fnSetAmCheckAccouont = function(nRow){
	var sCdExecCurr = this.dsList.getColumn(nRow, "CD_EXEC_CURR");	// 집행통화단위	
	
	var nAmExec = nexacro.toNumber(this.dsList.getColumn(nRow, "AM_REMAIN_EXEC"));	// 집행화
	//trace(rtLocalExch + " fnSetAmAccouont " + "로컬화, 원화 계산 시작!!!! : " + nAmExec);

	// 로컬화, 원화 계산
	// 집행화 금액이 0보다 크면
	if(!this.gfnIsNull(sCdExecCurr) && !this.gfnIsNull(nAmExec)){	
	//trace("체크시 계산");
		this.dsList.setColumn(nRow, "AM_REMAIN_UNBOUND_EXEC"  , this.dsList.getColumn(nRow, "AM_REMAIN_EXEC"));				// 로컬화
		this.dsList.setColumn(nRow, "AM_REMAIN_UNBOUND_LOCAL"  , this.dsList.getColumn(nRow, "AM_REMAIN_LOCAL"));				// 로컬화
		this.dsList.setColumn(nRow, "AM_REMAIN_UNBOUND_USD"  , this.dsList.getColumn(nRow, "AM_REMAIN_USD"));					// 미화
		this.dsList.setColumn(nRow, "AM_REMAIN_UNBOUND_EUR"  , this.dsList.getColumn(nRow, "AM_REMAIN_EUR"));					// 유로화
		this.dsList.setColumn(nRow, "AM_REMAIN_UNBOUND"  , this.dsList.getColumn(nRow, "AM_REMAIN"));	// 원화(소수점절삭)
		this.dsList.setColumn(nRow, "AM_REMAIN2_EXEC"  , 0);
		this.dsList.setColumn(nRow, "AM_REMAIN2_LOCAL"  , 0);
		this.dsList.setColumn(nRow, "AM_REMAIN2_USD"  , 0);
		this.dsList.setColumn(nRow, "AM_REMAIN2_EUR"  , 0);
		this.dsList.setColumn(nRow, "AM_REMAIN2"  , 0);
		nAmAccount = nAmExec;
		return nexacro.floor(nAmAccount);
	}
}


// 환율없을때 로컬화, 원화값 셋팅
this.fnSetAmRemain = function(nRow){

	// 반제금액(금번) 로컬화, 원화 계산
	var sExecCol = "AM_REMAIN_UNBOUND_EXEC";
	var sLocalCol = "AM_REMAIN_UNBOUND_LOCAL";
	var sUsdCol = "AM_REMAIN_UNBOUND_USD";
	var sEurCol = "AM_REMAIN_UNBOUND_EUR";
	var sKrwCol = "AM_REMAIN_UNBOUND";
	
	this.dsList.set_enableevent(false);

	var nCheck = this.dsList.getColumn(nRow, "YN_SELECT");
	if(nexacro.toNumber(this.dsList.getColumn(nRow, "AM_REMAIN_UNBOUND_EXEC"),0) != 0){
	//if(nCheck == "1"){
		this.dsList.setColumn(nRow, sLocalCol, this.dsList.getColumn(nRow, "AM_REMAIN_LOCAL"));	// 로컬화
		this.dsList.setColumn(nRow, sUsdCol  , this.dsList.getColumn(nRow, "AM_REMAIN_USD"));	// 미화
		this.dsList.setColumn(nRow, sEurCol  , this.dsList.getColumn(nRow, "AM_REMAIN_EUR"));	// 유로화
		this.dsList.setColumn(nRow, sKrwCol  , this.dsList.getColumn(nRow, "AM_REMAIN"));		// 원화				
			
		// 잔액(금번) 로컬화, 원화 계산
		sExecCol = "AM_REMAIN2_EXEC";
		sLocalCol = "AM_REMAIN2_LOCAL";
		sUsdCol = "AM_REMAIN2_USD";
		sEurCol = "AM_REMAIN2_EUR";
		sKrwCol = "AM_REMAIN2";

		this.dsList.setColumn(nRow, "AM_REMAIN2_EXEC", 0);	
		this.dsList.setColumn(nRow, sLocalCol, 0);	// 로컬화
		this.dsList.setColumn(nRow, sUsdCol  , 0);	// 미화
		this.dsList.setColumn(nRow, sEurCol  , 0);	// 유로화
		this.dsList.setColumn(nRow, sKrwCol  , 0);	// 원화
	}else{
		// 반제금액(금번) 빈값
		this.dsList.setColumn(nRow, sExecCol, 0);	
		this.dsList.setColumn(nRow, sLocalCol, 0);	// 로컬화
		this.dsList.setColumn(nRow, sUsdCol  , 0);	// 미화
		this.dsList.setColumn(nRow, sEurCol  , 0);	// 유로화
		this.dsList.setColumn(nRow, sKrwCol  , 0);	// 원화	

		// 잔액(금번) 로컬화, 원화 계산
		sExecCol = "AM_REMAIN2_EXEC";
		sLocalCol = "AM_REMAIN2_LOCAL";
		sUsdCol = "AM_REMAIN2_USD";
		sEurCol = "AM_REMAIN2_EUR";
		sKrwCol = "AM_REMAIN2";

		this.dsList.setColumn(nRow, sExecCol, this.dsList.getColumn(nRow, "AM_REMAIN_LOCAL"));	// 로컬화
		this.dsList.setColumn(nRow, sUsdCol  , this.dsList.getColumn(nRow, "AM_REMAIN_USD"));	// 미화
		this.dsList.setColumn(nRow, sEurCol  , this.dsList.getColumn(nRow, "AM_REMAIN_EUR"));	// 유로화
		this.dsList.setColumn(nRow, sKrwCol  , this.dsList.getColumn(nRow, "AM_REMAIN"));		// 원화	
	}
	
	this.dsList.set_enableevent(true);
}

// 그리드 헤드 체크박스 클릭
this.divData_objGrid_onheadclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	var objGrid = obj;
	//var cell = this._gfnGridGetBodyCellIndex(objGrid, e.cell);	
	var cellIdx = this._gfnGridGetBodyCellIndex(objGrid, e.cell);
	var rowCellIndex = this.gfnGetHeadRowCellIndex(objGrid, 2, "YN_SELECT");
	var colnm = this.gfnGridGetBindColumnNameByIndex(objGrid, cellIdx);
	
	if(colnm == "YN_SELECT") {
		var varValue = this.gfnNvl(objGrid.getHeadValue(rowCellIndex),0);
		// Sub Row 를 갖는 Row 에서 Cell 인덱스는 "Sub Row 인덱스 * Column 갯수 + Cell 의 col 속성값" 이 됩니다.
		//this.dsList.set_enableevent(false);
		for(var i = 0; i < this.dsList.rowcount; i++){
			var flag = this.dsList.getColumn(i, this.ucFlag);	
			if(flag != "#"){
					var amRemainExec = (varValue == 0) ? this.dsList.getColumn(i, "AM_REMAIN_EXEC") : 0;

// 					this.dsList.setColumn(i, "AM_REMAIN_UNBOUND_EXEC", nexacro.toNumber(amRemainExec,0));
// 					this.dsList.setColumn(i, "AM_REMAIN_UNBOUND_CHK", nexacro.toNumber(amRemainExec,0));
					//this.dsList.setColumn(i, "AM_REMAIN2_EXEC", nexacro.toNumber(amRemainExec,0));
// 					trace("divData_objGrid_onheadclick");
// 					this.fnSetAmCheckAccouont(i);
					this.dsList.setColumn(i, this.ucFlag, "U");


	// 				var amRemain = (varValue == 0) ? this.dsList.getColumn(i, "AM_REMAIN") : 0;
	// 				this.dsList.setColumn(i, "AM_REMAIN_UNBOUND", nexacro.toNumber(amRemain,0));
	// 				this.dsList.setColumn(i, "AM_REMAIN_UNBOUND_CHK", nexacro.toNumber(amRemain,0));
	// 				this.dsList.setColumn(i, "AM_REMAIN2", nexacro.toNumber(amRemain,0));
	// 				this.dsList.setColumn(i, this.ucFlag, "U");
			}
		}
		//this.dsList.set_enableevent(true);
	}
};]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DHAPR_MISUMIKYULDLG_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="CD_ACNT" type="STRING" size="256"/>
          <Column id="CD_DEPT_BH" type="STRING" size="256"/>
          <Column id="CD_DEPT_BE" type="STRING" size="256"/>
          <Column id="CD_VENDOR" type="STRING" size="256"/>
          <Column id="DT_FROM" type="STRING" size="256"/>
          <Column id="DT_TO" type="STRING" size="256"/>
          <Column id="CD_SLIP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_ACNT.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_ACNT"/>
      <BindItem id="item2" compid="divSearch.form.ccfCD_VENDOR.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_VENDOR"/>
      <BindItem id="item3" compid="divSearch.form.ccfCD_DEPT_BH.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_DEPT_BH"/>
      <BindItem id="item4" compid="divSearch.form.ccfCD_DEPT_BE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_DEPT_BE"/>
      <BindItem id="item5" compid="divSearch.form.ctclDT_TO" propid="value" datasetid="dsSearch" columnid="DT_TO"/>
      <BindItem id="item6" compid="divSearch.form.ctclDT_FROM" propid="value" datasetid="dsSearch" columnid="DT_FROM"/>
      <BindItem id="item7" compid="divSearch.form.txtCD_SLIP" propid="value" datasetid="dsSearch" columnid="CD_SLIP"/>
    </Bind>
  </Form>
</FDL>
