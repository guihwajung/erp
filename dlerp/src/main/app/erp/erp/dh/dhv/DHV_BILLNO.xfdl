<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="New Form" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="staYR_ACCOUNT" taborder="1" text="작업년도" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYR_ACCOUNT" taborder="2" left="staYR_ACCOUNT:0.0" top="10.0" width="60" height="24.0" url="cmm::cmmCalYY.xfdl"/>
              <Static id="staCD_VATPROOF" taborder="3" text="증빙" left="ctclYR_ACCOUNT:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Combo id="ccboCD_VATPROOF" taborder="4" left="staCD_VATPROOF:0.0" top="10.0" width="100" height="24.0" innerdataset="dsCD_VATPROOF" codecolumn="CD_CODE" datacolumn="DS_CODE"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	var today = this.gfnGetDate();
	this.dsSearch.setColumn(0, "YR_ACCOUNT", today.substr(0,4));
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {

};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {	
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DH", "DHV_BILLNO");

	this.dxGrid.EnterCell = "fnGrid_EnterCell";
	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
	this.dxGrid.AfterEdit = "fnGrid_AfterEdit";

	this.gfnGridColumnColor(this.dxGrid, "CD_DEPT_SELFACNT", "BACK_ReadOnly", "nx_flag != 'I'");
	this.gfnGridColumnColor(this.dxGrid, "DS_DEPT_SELFACNT", "BACK_ReadOnly", true);
	this.gfnGridColumnColor(this.dxGrid, "NO_SJC", "BACK_ReadOnly", true);
	this.gfnGridColumnColor(this.dxGrid, "NO_GUN", "BACK_ReadOnly", "nx_flag != 'I'");
	this.gfnGridColumnColor(this.dxGrid, "NO_MAX", "BACK_ReadOnly", true);
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("YR_ACCOUNT", "string");
	this.dsSelect.addColumn("CD_VATPROOF", "string");

	this.dsInsert = new Dataset();
	this.dsInsert.addColumn("CD_DEPT_SELFACNT", "string");
	this.dsInsert.addColumn("YR_ACCOUNT", "string");
	this.dsInsert.addColumn("CD_VATPROOF", "string");
	this.dsInsert.addColumn("NO_GUN", "int");
	this.dsInsert.addColumn("NO_LIMIT", "int");
	this.dsInsert.addColumn("TY_GUBUN", "string");
	this.dsInsert.addColumn("DS_REM", "string");

	this.dsUpdate = new Dataset();
	this.dsUpdate.addColumn("CD_DEPT_SELFACNT", "string");
	this.dsUpdate.addColumn("YR_ACCOUNT", "string");
	this.dsUpdate.addColumn("CD_VATPROOF", "string");
	this.dsUpdate.addColumn("NO_GUN", "int");
	this.dsUpdate.addColumn("NO_LIMIT", "int");
	this.dsUpdate.addColumn("TY_GUBUN", "string");
	this.dsUpdate.addColumn("DS_REM", "string");

	this.dsDelete = new Dataset();
	this.dsDelete.addColumn("CD_DEPT_SELFACNT", "string");
	this.dsDelete.addColumn("YR_ACCOUNT", "string");
	this.dsDelete.addColumn("CD_VATPROOF", "string");
	this.dsDelete.addColumn("NO_GUN", "int");
	
	this.dsSelectUser = new Dataset();
	this.dsSelectUser.addColumn("ID_USER", "string");
	this.dsSelectUser.addColumn("CD_DEPT", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "YR_ACCOUNT", this.dsSearch.getColumn(0, "YR_ACCOUNT"));
	this.dsSelect.setColumn(0, "CD_VATPROOF", this.dsSearch.getColumn(0, "CD_VATPROOF"));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	var nrow = this.gfnGridAdd(this.dxGrid); // top (default), bottom, current
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	// 그리드 필수항목 체크
	if (!this.gfnGridValidate(this.dxGrid)) return;	

	this.dxGrid.updateToDataset();
		
	this.dsInsert.clearData();
	this.dsUpdate.clearData();
	this.dsDelete.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
				if(!this.fnSaveValidate(i)) return;
				var nrow = this.dsInsert.addRow();
				this.dsInsert.setColumn(nrow, "CD_DEPT_SELFACNT", this.dsList.getColumn(i, "CD_DEPT_SELFACNT"));
				this.dsInsert.setColumn(nrow, "YR_ACCOUNT", this.dsSearch.getColumn(0, "YR_ACCOUNT"));
				this.dsInsert.setColumn(nrow, "CD_VATPROOF", this.dsSearch.getColumn(0, "CD_VATPROOF"));
				this.dsInsert.setColumn(nrow, "NO_GUN", this.dsList.getColumn(i, "NO_GUN"));
				this.dsInsert.setColumn(nrow, "NO_LIMIT", this.dsList.getColumn(i, "NO_LIMIT"));
				this.dsInsert.setColumn(nrow, "TY_GUBUN", this.dsList.getColumn(i, "TY_GUBUN"));
				this.dsInsert.setColumn(nrow, "DS_REM", this.dsList.getColumn(i, "DS_REM"));
				break;
				
			case "U":
				if(!this.fnSaveValidate(i)) return;
				var nrow = this.dsUpdate.addRow();
				this.dsUpdate.setColumn(nrow, "CD_DEPT_SELFACNT", this.dsList.getColumn(i, "CD_DEPT_SELFACNT"));
				this.dsUpdate.setColumn(nrow, "YR_ACCOUNT", this.dsSearch.getColumn(0, "YR_ACCOUNT"));
				this.dsUpdate.setColumn(nrow, "CD_VATPROOF", this.dsSearch.getColumn(0, "CD_VATPROOF"));
				this.dsUpdate.setColumn(nrow, "NO_GUN", this.dsList.getColumn(i, "NO_GUN"));
				this.dsUpdate.setColumn(nrow, "NO_LIMIT", this.dsList.getColumn(i, "NO_LIMIT"));
				this.dsUpdate.setColumn(nrow, "TY_GUBUN", this.dsList.getColumn(i, "TY_GUBUN"));
				this.dsUpdate.setColumn(nrow, "DS_REM", this.dsList.getColumn(i, "DS_REM"));
				break;
				
			case "D":
				var nrow = this.dsDelete.addRow();
				this.dsDelete.setColumn(nrow, "CD_DEPT_SELFACNT", this.dsList.getColumn(i, "CD_DEPT_SELFACNT"));
				this.dsDelete.setColumn(nrow, "YR_ACCOUNT", this.dsSearch.getColumn(0, "YR_ACCOUNT"));
				this.dsDelete.setColumn(nrow, "CD_VATPROOF", this.dsSearch.getColumn(0, "CD_VATPROOF"));
				this.dsDelete.setColumn(nrow, "NO_GUN", this.dsList.getColumn(i, "NO_GUN"));
				break;
		}
	}
	
	if (this.dsInsert.rowcount == 0 && this.dsUpdate.rowcount == 0 && this.dsDelete.rowcount == 0) return;
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "insert=dsInsert update=dsUpdate delete=dsDelete";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;
	
	if (this.gfnIsNull(this.dsSearch.getColumn(0,"YR_ACCOUNT"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.divSearch.form.ctclYR_ACCOUNT.form.TextBox.setFocus();
		}
		this.gfnAlert("작업년도를 입력하세요.", "fnVaidateCallback");
	}
	
	return validate;
};

this.fnSaveValidate = function(row) {
	var validate = true;

	if(this.gfnNvl(this.dsList.getColumn(row, "NO_GUN"), -1) < 0 || this.gfnNvl(this.dsList.getColumn(row, "NO_LIMIT"), -1) < 0)
	{
		validate = false;
		this.gfnAlert("권번호는 0 이상이여야 합니다.");
	}
	
	return validate;
}

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
		
		if(this.dsList.rowcount > 0)
		{
			for(var i = 0; i < this.dsList.rowcount; i++)
			{
				var no_sjc = this.gfnNvl(this.dsList.getColumn(i, "NO_SJC"),"").trim();
				
				if(no_sjc.length == 10)
				{
					no_sjc = no_sjc.substr(0,3) + "-" + no_sjc.substr(3,2) + "-" + no_sjc.substr(5,5);
					this.dsList.set_enableevent(false);
					this.dsList.setColumn(i, "NO_SJC", no_sjc);
					this.dsList.set_enableevent(true);
				}
			}
		}
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnGrid_BeforeUserDataSetParam = function(id, dsUserParam, nrow){
	if(id == "DHX_CFSELFACNT")
	{
		dsUserParam.setColumn(nrow, "LV_DEPT", this.UserInfo.LEVCD_DEPT_ACNT);
	}
	
	return true;
 }
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 this.fnGrid_EnterCell = function(obj:nexacro.Grid, row, cell) { 
	var colnm = this.gfnGridGetBindColumnNameByIndex(obj, cell);
	
	if(colnm == "CD_DEPT_SELFACNT")
	{
		if(this.gfnIsNull(this.dsList.getColumn(this.dsList.rowposition, "CD_DEPT_SELFACNT")))
		{
			return true;
		}
		else
		{
			return false;
		}
	}
}


this.fnGrid_AfterEdit = function(obj,e) {
	if(e.columnid == "CD_DEPT_SELFACNT") {
		var no_sjc = this.gfnNvl(this.dsList.getColumn(this.dsList.rowposition, "NO_SJC"), "").trim();
		if(no_sjc.length == 10)
		{
			no_sjc = no_sjc.substr(0,3) + "-" + no_sjc.substr(3,2) + "-" + no_sjc.substr(5,5);
			this.dsList.set_enableevent(false);
			this.dsList.setColumn(this.dsList.rowposition, "NO_SJC", no_sjc);
			this.dsList.set_enableevent(true);
		}
	}
}
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};
]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DHVPR_BILLNO_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">insert</Col>
            <Col id="SP">DHVPR_BILLNO_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">update</Col>
            <Col id="SP">DHVPR_BILLNO_UPDATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">delete</Col>
            <Col id="SP">DHVPR_BILLNO_DELETE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="YR_ACCOUNT" type="STRING" size="256"/>
          <Column id="CD_VATPROOF" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_VATPROOF">A</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsCD_VATPROOF">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">A</Col>
            <Col id="DS_CODE">세금계산서</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">B</Col>
            <Col id="DS_CODE">계산서</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ctclYR_ACCOUNT.form.TextBox" propid="value" datasetid="dsSearch" columnid="YR_ACCOUNT"/>
      <BindItem id="item1" compid="divSearch.form.ccboCD_VATPROOF" propid="value" datasetid="dsSearch" columnid="CD_VATPROOF"/>
    </Bind>
  </Form>
</FDL>
