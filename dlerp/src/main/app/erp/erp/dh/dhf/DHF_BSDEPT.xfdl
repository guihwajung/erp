<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="1280" height="720" titletext="손익계산서" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0" top="10.0" height="45" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="staCD_DEPT_ORG" taborder="1" text="법인코드" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_CORP" CodeFindName="DHX_CFCORP" CDTextWidth="70" taborder="0" left="staCD_DEPT_ORG:0.0" top="10.0" width="280" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staCD_DEPT" taborder="4" text="귀속부서" left="0.0" top="staCD_DEPT_ORG:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE" visible="false"/>
              <Div id="ccfCD_DEPT" CDTextWidth="70" taborder="3" left="staCD_DEPT:0.0" top="staCD_DEPT_ORG:10.0" width="280" height="24.0" url="cmm::cmmCodeFind.xfdl" visible="false"/>
              <Radio id="crdoTY_SEARCH" taborder="5" left="ccfCD_DEPT:20" top="staCD_DEPT_ORG:10.0" width="104" height="24.0" innerdataset="dsTY_SEARCH" direction="vertical" codecolumn="CD_CODE" datacolumn="DS_CODE" onitemchanged="divSearch_rdoTY_SEARCH_onitemchanged" visible="false"/>
              <Static id="staYN_CORE" taborder="11" text="사용구분" left="ccfCD_CORP:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Combo id="ccboYN_CORE" taborder="6" left="staYN_CORE:0.0" top="10.0" width="70" height="24.0" innerdataset="dsYN_CORE" datacolumn="DS_CODE" codecolumn="CD_CODE" value="" onitemchanged="fnSearchInit" index="0"/>
              <CheckBox id="chkYN_ZERO" taborder="3" text="0 제외" left="ccboYN_CORE:20" top="10.0" width="60" height="24.0" truevalue="Y" falsevalue="N" value="N" visible="false"/>
              <Radio id="rdoCD_CURR" taborder="8" left="chkYN_ZERO:25" top="10" width="120" height="24" innerdataset="innerdataset" codecolumn="codecolumn" datacolumn="datacolumn" direction="vertical" value="KRW" text="KRW" index="0" visible="false">
                <Dataset id="innerdataset">
                  <ColumnInfo>
                    <Column id="codecolumn" size="256"/>
                    <Column id="datacolumn" size="256"/>
                  </ColumnInfo>
                  <Rows>
                    <Row>
                      <Col id="codecolumn">KRW</Col>
                      <Col id="datacolumn">KRW</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">SGD</Col>
                      <Col id="datacolumn">SGD</Col>
                    </Row>
                  </Rows>
                </Dataset>
              </Radio>
              <Static id="staYM_MAGAM" taborder="7" text="회계년월" left="crdoTY_SEARCH:84" top="staCD_DEPT_ORG:-23" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYM_MAGAM" taborder="8" left="staYM_MAGAM:0" top="staCD_DEPT_ORG:-23" width="90" height="24.0" url="cmm::cmmCalMM.xfdl"/>
              <Static id="staDT_WORK" taborder="10" text="~" left="ctclYM_MAGAM:0.0" top="staCD_DEPT_ORG:10.0" width="30.0" height="24.0" visible="false" cssclass="sta_WF_AC"/>
              <Div id="ctclYM_MAGAM2" taborder="9" left="staDT_WORK:0.0" top="staCD_DEPT_ORG:10.0" width="90" height="24.0" url="cmm::cmmCalMM.xfdl" visible="false"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();

	this.dsSearch.setColumn(0, "CD_CORP", this.AuthClient.CD_CORP);
	this.dsSearch.setColumn(0, "DS_CORP", this.AuthClient.DS_CORP);
	this.dsSearch.setColumn(0, "YN_CORE", "N");
	this.dsSearch.setColumn(0, "TY_SEARCH", "A");
	//this.dsSearch.setColumn(0, "YN_ZERO", "Y");
	this.dsSearch.setColumn(0, "YN_ZERO", "N");

	var sYmMagam = this.AuthClient.YM_MAGAM_MONTH1;
	this.dsSearch.setColumn(0, "YM_MAGAM", sYmMagam);

	//this.dsSearch.setColumn(0, "CD_CURR", "KRW");

	this.dsSearch.setColumn(0, "CD_DEPT", this.AuthClient.LEVCD_DEPT_UPPER);
	this.ccfCD_DEPT.form.fnCodeFindLoad();

	if (nexacro.toNumber(this.FormInfo.GR_SEARCH) > 1) {
		this.ccfCD_CORP.set_enable(false);
	}

	// 회계년월 셋팅
	//this.fnGetYmMagam();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
	//this.FormBtns.Select.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	//this.btnPL2 = this.gfnFormButtonAdd("PL2", "fnPL2");
	this.btnAccountSelect = this.gfnFormButtonAdd("AccountSelect", "fnAccountSelect");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;
	this.ccfCD_DEPT = this.divSearch.form.ccfCD_DEPT;
	this.ccboYN_CORE = this.divSearch.form.ccboYN_CORE;
	this.crdoTY_SEARCH = this.divSearch.form.crdoTY_SEARCH;
	this.ctclYM_MAGAM = this.divSearch.form.ctclYM_MAGAM;
	this.ctclYM_MAGAM2 = this.divSearch.form.ctclYM_MAGAM2;
	this.staDT_WORK = this.divSearch.form.staDT_WORK;
	this.chkYN_ZERO = this.divSearch.form.chkYN_ZERO;
	//this.rdoCD_CURR = this.divSearch.form.rdoCD_CURR;
	
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.gfnGridInit(this.dxGrid, this.dsList, "DH", "DHF_BS_FORDEPT");
	this.dxGrid.sort = "false";

	//this.fnsetGridCssCellProperty();
	
	this.dxGrid.addEventHandler("oncelldblclick", this.fnGrid_Celldblclick, this);

	this.ccfCD_DEPT.CodeFindName = "DHX_CFACNTUNIT";	// DHX_CFBALANCE_ACNTUNIT	
	this.ccfCD_DEPT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_DEPT.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.ccfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";
};

this.fnsetGridCssCellProperty = function() {
	var nCellIdxAM_CURRENT = this.dxGrid.getBindCellIndex("body", "AM_CURRENT");
	
	var sGetProperty = this.dxGrid.getCellProperty( "body", nCellIdxAM_CURRENT, "cssclass" );
	
	var sSetPropertyAM_CURRENT = sGetProperty.replace(": '')", ": AM_CURRENT < 0 ? 'Red' : '')");
	
	this.dxGrid.setCellProperty( "body", nCellIdxAM_CURRENT, "cssclass" , sSetPropertyAM_CURRENT);

}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {	
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("YM_MAGAM", "string");
	this.dsSelect.addColumn("YN_FLAG", "string");
	this.dsSelect.addColumn("YN_ZERO", "string");
		
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
		
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));
	this.dsSelect.setColumn(0, "YM_MAGAM", this.dsSearch.getColumn(0, "YM_MAGAM"));
	this.dsSelect.setColumn(0, "YN_FLAG", this.dsSearch.getColumn(0, "YN_CORE"));
	this.dsSelect.setColumn(0, "YN_ZERO", this.dsSearch.getColumn(0, "YN_ZERO"));		

	var strSvcId    = "selectHeader";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "selectHeader=dsSelect";
	var outData     = "dsHeader=selectHeader0";
	var strArg      = "";
	var callBackFnc = "fnCallback";

		
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

//데이터 조회 처리
this.fnDataSelect = function()
{	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc);   // 통신방법 정의 [생략가능]
}	
/*
 *	입력 버튼
 */
this.fnAdd = function() {
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
}

/*
 *	저장 버튼
 */
this.fnSave = function() {	
	
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
	
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;

	if (this.gfnIsNull(this.dsSearch.getColumn(0, "CD_CORP"))) {
		this.fnVaidateCallback = function() {
			this.ccfCD_CORP.form.CDTextBox.setFocus();
		}
		this.gfnAlert("법인코드가 입력되지 않았습니다.", "fnVaidateCallback");
		return false;
	}

	else
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "YM_MAGAM"))) {
		this.fnVaidateCallback = function() {
			this.ctclYM_MAGAM.form.TextBox.setFocus();
		}
		this.gfnAlert("회계년월이 입력되지 않았습니다.", "fnVaidateCallback");
		return false;
	}
	
	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
	}
	else if(svcID == "selectHeader") {
		if (errorCode == 0) {		
			//그리드 데이터 셋팅 작업
			this.fnGridHeaderSetting();
		
			//데이터 조회 처리
			this.fnDataSelect();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	else if(svcID == "save") {
		if (errorCode == 0) {		
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	else if (svcID == "selectYmMagam") {
		var sTySearch = this.dsSearch.getColumn(0, "TY_SEARCH");	// A누계 B기간
		var sYmMagam = this.gfnGetDate().substring(0, 6);
		var sYmMagam2 = sYmMagam;
		if(this.dsYmMagam.rowcount > 0){
			sYmMagam = this.dsYmMagam.getColumn(0, "YM_MAGAM");
			sYmMagam2 = sYmMagam.substr(0, 4) + "01";
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	var sCdCorp = this.dsSearch.getColumn(0, "CD_CORP");
	var idSabun = this.AuthClient.ID_USER;
	var grSerch = this.FormInfo.GR_SEARCH;

	if (id == "ccfCD_CORP") {
		dsUserParam.setColumn(nrow, "ID_SABUN", this.AuthClient.ID_USER);
	}
		
	return true;
};

this.fnAfterCDTextChanged = function ( id , codefindData ){
	var arr = codefindData;
	switch(id) {
		case "ccfCD_CORP":
 			if (arr.length > 0) {
				//var sCdCorp = arr[0]["CD_CORP"];
				this.fnGetYmMagam();
			}
			//this.ccfCD_DEPT.form.fnCodeFindClear();
		break;
	}
};

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGrid_Celldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	var column = this.gfnGridGetBindColumnNameByIndex(this.dxGrid, e.cell);	
	this.fnAccountSelectPopup(column, e.cell);
};

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo) {
	if (e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);		
	}
};

this.fnAccountSelect =  function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	var nIndex = this.dxGrid.getCellPos();
	var column = this.gfnGridGetBindColumnNameByIndex(this.dxGrid, nIndex);

	this.fnAccountSelectPopup(column, nIndex);
}

this.fnAccountSelectPopup = function(column, nIndex) {	
	//trace(" CD_ACNT2=>" + this.dsList.getColumn(this.dsList.rowposition, "CD_ACNT2"));
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	if(this.dsList.getColumn(this.dsList.rowposition, "CD_ACNT1") == "" && this.dsList.getColumn(this.dsList.rowposition, "CD_ACNT2") == ""){
		this.gfnAlert("하위항목을 선택하세요!. ");
		return;
	}
	if(this.dsList.getColumn(this.dsList.rowposition, "CD_ACNT1") == ""  && this.gfnLeft(this.dsList.getColumn(this.dsList.rowposition, "CD_ACNT2"),1) == "G"){
		this.gfnAlert("하위항목을 선택하세요!!. ");
		return;
	}

	if (this.gfnIsNull(this.dsSearch.getColumn(0, "YM_MAGAM"))) {
		this.gfnAlert("회계년월을 입력하세요.");
		return;
	}
	
	var param = {};
	if (( nIndex > 6) )
		{
			param.CD_DEPT_ACNT = column ;
		} else {
			param.CD_DEPT_ACNT = this.dsSearch.getColumn(0, "CD_CORP"); 
			param.DS_DEPT_ACNT = this.dsSearch.getColumn(0, "DS_CORP"); 
		}

	param.CD_CORP_REC = this.dsSearch.getColumn(0, "CD_CORP");
	param.DS_CORP_REC = this.dsSearch.getColumn(0, "DS_CORP");
	
	if (this.dsList.getColumn(this.dsList.rowposition, "CD_ACNT1") == "") {
	    param.CD_ACCOUNT = this.dsList.getColumn(this.dsList.rowposition, "CD_ACNT2");
	}else {
		param.CD_ACCOUNT = this.dsList.getColumn(this.dsList.rowposition, "CD_ACNT1");
	}
	
	param.DT_MAGAM = this.dsSearch.getColumn(0, "YM_MAGAM").substr(0, 4) + "0101";
	param.DT_MAGAM2 = this.gfnGetLastDate(this.dsSearch.getColumn(0, "YM_MAGAM") + "01");
	param.TY_VENDOR = "";
	param.CD_VENDOR = "";
	param.DS_VENDOR = "";
	
	this.gfnFormOpen("DHE", "DHE_ACCOUNTSELECT_PW", "", param);
};

// 회계년월 가져오기
this.fnGetYmMagam = function() {

	return;

	this.dsSelectYmMagam = new Dataset();
	this.dsSelectYmMagam.addColumn("TY_GUBUN", "string");
	this.dsSelectYmMagam.addColumn("CN_ROW", "string");
	this.dsSelectYmMagam.addColumn("VALUE", "string");
	this.dsSelectYmMagam.addColumn("MIN_VALUE", "string");
	this.dsSelectYmMagam.addColumn("YN_SLIPACCEPT", "string");
	this.dsSelectYmMagam.addColumn("CD_CORP", "string");
	this.dsSelectYmMagam.addColumn("YN_USE", "string");
	this.dsSelectYmMagam.addColumn("GR_DEPT_ACNT", "string");
	this.dsSelectYmMagam.addColumn("ID_USER", "string");
	this.dsSelectYmMagam.addColumn("GR_SEARCH", "string");
	this.dsSelectYmMagam.addColumn("CD_DEPT", "string");
	
	this.dsSelectYmMagam.clearData();
	this.dsSelectYmMagam.addRow();
	this.dsSelectYmMagam.setColumn(0, "TY_GUBUN", "0");
	this.dsSelectYmMagam.setColumn(0, "CN_ROW", 100);
	//this.dsSelectYmMagam.setColumn(0, "VALUE", this.UserInfo.LEVCD_DEPT_ACNT_DOWN);
	this.dsSelectYmMagam.setColumn(0, "MIN_VALUE", "");
	this.dsSelectYmMagam.setColumn(0, "YN_SLIPACCEPT", "Y");
	this.dsSelectYmMagam.setColumn(0, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));
	this.dsSelectYmMagam.setColumn(0, "YN_USE", "Y");
	
	var strSvcId    = "selectYmMagam";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "selectYmMagam=dsSelectYmMagam";
	var outData     = "dsYmMagam=selectYmMagam0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

//그리드 헤더 셋팅
this.fnGridHeaderSetting = function ()
{
	var colBase = this.dxGrid.getBindCellIndex("body", "TY_TITLENUM");	//  컬럼 인덱스
	var cols = 0; // merge 되면서 cell index가 조정된다.

	this.dxGrid.set_enableredraw(false);
	this.dsList.set_enableevent(false);
	
	//컬럼 삭제
	for(var i=0;i<this.dsHeader.rowcount;i++){	
		//데이터셋 컬럼 삭제 처리
		this.dsList.deleteColumn(this.dsHeader.getColumn(i, "CD_DEPT"));
	}
	
	var colCnt = this.dxGrid.getCellCount("body");
	
	//그리드 컬럼 삭제 처리(초기화용)
	var delCnt = 0, delIdx = 0;
	for(var i=0;i<colCnt;i++){
		if(i > colBase){
			delIdx = ((colCnt-1)-delCnt);
			this.dxGrid.deleteContentsCol("body", delIdx, false);
			delCnt++;
		}
	}

	//trace(this.dsHeader.saveXML());

	var colIdx = (colBase+1);
	
	var cellIndex = colIdx;	

	var arrCdDept = [];
	var arrDsDept = [];
	
	//헤더 컬럼 데이터 
	for(var h=0;h<this.dsHeader.rowcount;h++){
		
		//계정 컬럼 추가(데이터셋)
	    this.dsList.addColumn(this.dsHeader.getColumn(h, "CD_DEPT"), "BIGDECIMAL");		
		//그리드 컬럼 추가(계 제외)
		this.dxGrid.appendContentsCol("body");

		//this.dxGrid.setCellProperty("body", cellIndex, "text", "bind:"+this.dsHeader.getColumn(h, "CD_TITLE"));	//바인딩 처리	
		this.dxGrid.setCellProperty("body", cellIndex, "text", "bind:"+this.dsHeader.getColumn(h, "CD_DEPT"));	//바인딩 처리	
		this.dxGrid.setCellProperty("body", cellIndex, "displaytype", "mask");
		this.dxGrid.setCellProperty("body", cellIndex, "maskeditformat", "#,###");
		this.dxGrid.setCellProperty("body", cellIndex, "cssclass", "expr:dataset.getRowLevel(currow) == 1 ? 'subtotal': nx_flag == '#' ? 'filter' : (TY_TITLENUM=='L1') ? 'BACK_ReadOnly' : ''");
		this.dxGrid.setCellProperty("body", cellIndex, "edittype", "expr:nx_flag=='#'?'text':'none'");		
		
		this.dxGrid.setCellProperty("head", cellIndex, "text", "bind:"+this.dsHeader.getColumn(h, "DS_DEPT"));
		this.dxGrid.setCellProperty("summ", cellIndex, "text", "expr:dataset.getSum('"+this.dsHeader.getColumn(h, "CD_DEPT")+"')");
		this.dxGrid.setCellProperty("summ", cellIndex, "displaytype", "mask");
		this.dxGrid.setCellProperty("summ", cellIndex, "maskeditformat", "#,###");
		this.dxGrid.setFormatColProperty(cellIndex, "size", 120); 		//컬럼 사이즈
			
		//헤더 셋팅용 데이터 담기
		arrCdDept[arrCdDept.length] = this.dsHeader.getColumn(h, "CD_DEPT");
		arrDsDept[arrDsDept.length] = this.dsHeader.getColumn(h, "DS_DEPT");

		if(colIdx != cellIndex) {
			cellIndex = (cellIndex+1);
		}

		var rtn = this.dxGrid.mergeContentsCell("head", 0, cellIndex, 0, cellIndex+1, false);
		if(rtn > -1) {
			this.dxGrid.setCellProperty("head", rtn, "text", this.dsList.getColumn(i,"DS_PRINT"));
			cols = cols + 1;
		}

		colIdx ++;
		cellIndex++;
	}
	
	//헤더 텍스트 처리
	var HeaderIdx = (colBase+1);
	var totCnt = arrCdDept.length;
	for(var i=0;i<totCnt;i++){
		this.dxGrid.setCellProperty( "head", (HeaderIdx), "text", arrDsDept[i]);
		this.dxGrid.setCellProperty( "head", (HeaderIdx+totCnt), "text", arrCdDept[i]);

		HeaderIdx++;
	}
		
	// 바인딩 및 사이즈 처리	
	startIdx = (colBase+1);
	endIdx = startIdx;
	
	this.dsList.set_enableevent(true);
	this.dxGrid.set_enableredraw(true);
};
]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DHFPR_BS_SELECT_FORDEPT</Col>
          </Row>
          <Row>
            <Col id="TARGET">selectHeader</Col>
            <Col id="SP">DHFPR_BS_SELECT_FORDEPT_HEADER</Col>
          </Row>
          <Row>
            <Col id="TARGET">selectYmMagam</Col>
            <Col id="SP">DHXPR_ACNTUNIT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="DS_CORP" type="STRING" size="256"/>
          <Column id="CD_DEPT" type="STRING" size="256"/>
          <Column id="DS_DEPT" type="STRING" size="256"/>
          <Column id="YN_CORE" type="STRING" size="256"/>
          <Column id="TY_SEARCH" type="STRING" size="256"/>
          <Column id="YM_MAGAM" type="STRING" size="256"/>
          <Column id="YM_MAGAM2" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CORP"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsYN_CORE">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">N</Col>
            <Col id="DS_CODE">상세</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">Y</Col>
            <Col id="DS_CODE">요약</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_SEARCH">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">A</Col>
            <Col id="DS_CODE">누계</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">B</Col>
            <Col id="DS_CODE">기간</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsYmMagam"/>
      <Dataset id="dsHeader"/>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_CORP.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_CORP"/>
      <BindItem id="item2" compid="divSearch.form.ccfCD_DEPT.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_DEPT"/>
      <BindItem id="item3" compid="divSearch.form.ccfCD_DEPT.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_DEPT"/>
      <BindItem id="item5" compid="divSearch.form.ccboYN_CORE" propid="value" datasetid="dsSearch" columnid="YN_CORE"/>
      <BindItem id="item4" compid="divSearch.form.crdoTY_SEARCH" propid="value" datasetid="dsSearch" columnid="TY_SEARCH"/>
      <BindItem id="item6" compid="divSearch.form.ctclYM_MAGAM.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_MAGAM"/>
      <BindItem id="item7" compid="divSearch.form.ctclYM_MAGAM2.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_MAGAM2"/>
      <BindItem id="item8" compid="divSearch.form.chkYN_ZERO" propid="value" datasetid="dsSearch" columnid="YN_ZERO"/>
      <BindItem id="item9" compid="divSearch.form.rdoCD_CURR" propid="value" datasetid="dsSearch" columnid="CD_CURR"/>
    </Bind>
  </Form>
</FDL>
