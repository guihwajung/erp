<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="1280" height="720" titletext="업종관리" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="1" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="staCD_CODE" taborder="0" text="업종코드" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Edit id="txtCD_CODE" taborder="1" left="staCD_CODE:0.0" top="10.0" width="120" height="24.0"/>
              <Static id="staDS_CODE" taborder="2" text="업종명" left="txtCD_CODE:0.0" top="10.0" width="79" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Edit id="txtDS_CODE" taborder="3" left="staDS_CODE:0.0" top="10.0" width="120" height="24.0"/>
              <Static id="staTY_DEDUCTION" taborder="4" text="공제구분" left="txtDS_CODE:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Combo id="ccboTY_DEDUCTION" taborder="5" left="staTY_DEDUCTION:0.0" top="10.0" width="100" height="24.0" datacolumn="datacolumn" codecolumn="codecolumn" value="" index="-1" text="" innerdataset="innerdataset">
                <Dataset id="innerdataset">
                  <ColumnInfo>
                    <Column id="codecolumn" size="256"/>
                    <Column id="datacolumn" size="256"/>
                  </ColumnInfo>
                  <Rows>
                    <Row>
                      <Col id="codecolumn"/>
                      <Col id="datacolumn">전체</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">공제</Col>
                      <Col id="datacolumn">공제</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">불공제</Col>
                      <Col id="datacolumn">불공제</Col>
                    </Row>
                  </Rows>
                </Dataset>
              </Combo>
              <Static id="staYN_USE" taborder="6" text="사용여부" left="ccboTY_DEDUCTION:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Combo id="ccboYN_USE" taborder="7" left="staYN_USE:0.0" top="10.0" width="70" height="24.0" innerdataset="innerdataset" datacolumn="datacolumn" codecolumn="codecolumn" value="" index="-1" text="">
                <Dataset id="innerdataset">
                  <ColumnInfo>
                    <Column id="codecolumn" size="256"/>
                    <Column id="datacolumn" size="256"/>
                  </ColumnInfo>
                  <Rows>
                    <Row>
                      <Col id="datacolumn">전체</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">Y</Col>
                      <Col id="datacolumn">사용</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">N</Col>
                      <Col id="datacolumn">미사용</Col>
                    </Row>
                  </Rows>
                </Dataset>
              </Combo>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	this.FormBtns.Select.click();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {

};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {	
	this.dxGrid = this.divData.form.objGrid;

	this.txtCD_CODE = this.divSearch.form.txtCD_CODE;
	this.txtDS_CODE = this.divSearch.form.txtDS_CODE;
	this.ccboTY_DEDUCTION = this.divSearch.form.ccboTY_DEDUCTION;
	this.ccboYN_USE = this.divSearch.form.ccboYN_USE;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DH", "DHZ_BIZTYPE");
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CODE", "string");
	this.dsSelect.addColumn("DS_CODE", "string");
	this.dsSelect.addColumn("TY_DEDUCTION", "string");
	this.dsSelect.addColumn("YN_USE", "string");

	this.dsSave = new Dataset();
	this.dsSave.addColumn("TY_SAVE", "string");
	this.dsSave.addColumn("CD_CARDSA", "string");
	this.dsSave.addColumn("CD_CODE", "string");
	this.dsSave.addColumn("DS_CODE", "string");
	this.dsSave.addColumn("TY_DEDUCTION", "string");
	this.dsSave.addColumn("DS_REM", "string");
	this.dsSave.addColumn("NO_ORDER", "int");
	this.dsSave.addColumn("YN_USE", "string");
	this.dsSave.addColumn("ID_USER", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "CD_CODE", this.dsSearch.getColumn(0, "CD_CODE"));
	this.dsSelect.setColumn(0, "DS_CODE", this.dsSearch.getColumn(0, "DS_CODE"));
	this.dsSelect.setColumn(0, "TY_DEDUCTION", this.dsSearch.getColumn(0, "TY_DEDUCTION"));
	this.dsSelect.setColumn(0, "YN_USE", this.dsSearch.getColumn(0, "YN_USE"));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	var nrow = this.gfnGridAdd(this.dxGrid); // top (default), bottom, current
	this.dsList.setColumn(nrow, "YN_USE", "Y");			//사용여부
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	// 그리드 필수항목 체크
	if (!this.gfnGridValidate(this.dxGrid)) return;	

	this.dxGrid.updateToDataset();
		
	this.dsSave.clearData();

	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
			case "U":
			case "D":
					var nrow = this.dsSave.addRow();
					this.dsSave.setColumn(nrow, "TY_SAVE", flag);
					this.dsSave.setColumn(nrow, "CD_CARDSA", this.dsList.getColumn(i, "CD_CARDSA"));
					this.dsSave.setColumn(nrow, "CD_CODE", this.dsList.getColumn(i, "CD_CODE"));
					this.dsSave.setColumn(nrow, "DS_CODE", this.dsList.getColumn(i, "DS_CODE"));
					this.dsSave.setColumn(nrow, "TY_DEDUCTION", this.dsList.getColumn(i, "TY_DEDUCTION"));
					this.dsSave.setColumn(nrow, "DS_REM", this.dsList.getColumn(i, "DS_REM"));
					this.dsSave.setColumn(nrow, "NO_ORDER", this.dsList.getColumn(i, "NO_ORDER"));
					this.dsSave.setColumn(nrow, "YN_USE", this.dsList.getColumn(i, "YN_USE"));
					this.dsSave.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
				break;
		}
	}
	
	if (this.dsSave.rowcount == 0 && this.dsUpdate.rowcount == 0 && this.dsDelete.rowcount == 0) return;

	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;
	/*
	if (this.gfnIsNull(this.dsSearch.getColumn(0,"CD_SYSTEM"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.ccfCD_SYSTEM.form.CDTextBox.setFocus();
		}
		this.gfnAlert("시스템을 입력하세요.", "fnVaidateCallback");
	}
	*/
	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DHZPR_BIZTYPE_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DHZPR_BIZTYPE_SAVE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
          <Column id="TY_DEDUCTION" type="STRING" size="256"/>
          <Column id="YN_USE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TY_DEDUCTION"/>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.txtCD_CODE" propid="value" datasetid="dsSearch" columnid="CD_CODE"/>
      <BindItem id="item1" compid="divSearch.form.txtDS_CODE" propid="value" datasetid="dsSearch" columnid="DS_CODE"/>
      <BindItem id="item2" compid="divSearch.form.ccboTY_DEDUCTION" propid="value" datasetid="dsSearch" columnid="TY_DEDUCTION"/>
      <BindItem id="item3" compid="divSearch.form.ccboYN_USE" propid="value" datasetid="dsSearch" columnid="YN_USE"/>
    </Bind>
  </Form>
</FDL>
