<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="건설중인 자산관리" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="sta01" taborder="4" text="법인코드" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_CORP" CDTextWidth="70" taborder="0" left="sta01:0.0" top="10.0" width="219" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="sta00" taborder="3" text="현장코드" left="ccfCD_CORP:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_DEPT_ACNT" CDTextWidth="70" taborder="1" left="sta00:0.0" top="10.0" width="269" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staYM_WORK" taborder="5" text="마감월" left="ccfCD_DEPT_ACNT:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYM_MONTH" taborder="2" left="staYM_WORK:0.0" top="10.0" width="80" height="24.0" url="cmm::cmmCalMM.xfdl"/>
              <Combo id="ccboTY_GUBUN1" taborder="4" left="ctclYM_MONTH:0.0" top="10.0" width="105" height="24.0" innerdataset="dsTY_GUBUN1" datacolumn="DS_CODE" codecolumn="CD_CODE" text="" index="-1" value="-1"/>
              <Static id="staTY_GUBUN1" taborder="5" text="구분" left="ccboTY_GUBUN1:0.0" top="10.0" width="92.0" height="24.0" textDecoration="none" textAlign="right" onclick="divSearch_staAPT_ST_GU_onclick" cssclass="sta_WF_SchLabel"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
        <Static id="staCDSLIP" taborder="2" text="전표번호" left="990" top="4" width="60" height="20"/>
        <Edit id="edtCD_SLIP" taborder="3" left="1049" top="5" width="152" height="20" enable="false"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	this.ccfCD_CORP.setFocus();
	this.divSearch.form.ccboTY_GUBUN1.set_index(0);	
	
	//마감월(현재월)
	this.ctclYM_MONTH.form.TextBox.set_value(this.gfnGetDate().substr(0,6));
	
	//법인코드 세션에 코드로 셋팅
	this.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP); 
	this.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);	
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel

}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnCreateData 	 = this.gfnFormButtonAdd("CreateData", "fnCreateData"); 		//건설중인자산명세서 생성 버튼
	this.btnAccountSelect = this.gfnFormButtonAdd("AccountSelect", "fnAccountSelect"); 	//보조부 조회 버튼
	this.btnSearchSlip    = this.gfnFormButtonAdd("SearchSlip", "fnSearchSlip"); 		//전표조회 버튼
	this.btnIssueSlip     = this.gfnFormButtonAdd("IssueSlip" , "fnIssueSlip"); 		//전표발행 버튼
	this.btnCancelSlip    = this.gfnFormButtonAdd("CancelSlip", "fnCancelSlip"); 		//전표취소 버튼
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_CORP 	 = this.divSearch.form.ccfCD_CORP;
	this.ccfCD_DEPT_ACNT = this.divSearch.form.ccfCD_DEPT_ACNT;
	this.ctclYM_MONTH 	 = this.divSearch.form.ctclYM_MONTH;
	this.ccboTY_GUBUN1 	 = this.divSearch.form.ccboTY_GUBUN1;
	this.dxGrid 		 = this.divData.form.objGrid;
	
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.ccfCD_CORP.CodeFindName = "DHX_CFCORP";
	this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";
	
	this.ccfCD_DEPT_ACNT.CodeFindName = "DHX_CFACNTUNIT";
	this.ccfCD_DEPT_ACNT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DH", "DHD_PREPAY_SLIP");
	this.dxGrid.set_selecttype("cell");	

	//검색조건 변경 이벤트
	this.dsSearch.addEventHandler("onvaluechanged", this.dsSearch_Valuechanged, this);
	
	//헤더 클릭 이벤트 삭제(소팅 막기 위해 처리)
	this.dxGrid.removeEventHandlerLookup("onheadclick", "gfnGrid_onheadclick", this);
	
	//구분 볼드처리
	this.dxGrid.setCellProperty("body", this.dxGrid.getBindCellIndex("body", "DS_CODE"), "cssclass", "expr:DS_ETC3=='Y'?'update':''");
	this.dxGrid.setCellProperty("body", this.dxGrid.getBindCellIndex("body", "AM_SUM"), "cssclass", "expr:DS_ETC3=='Y'?'update':''");
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CORP"	  , "string");		//법인코드
	this.dsSelect.addColumn("CD_DEPT_ACNT", "string");		//귀속부서코드
	this.dsSelect.addColumn("DT_WORK"     , "string");	 	//마감월
	this.dsSelect.addColumn("TY_GUBUN1", 	"string");      //  구분
	
	this.dsCreate = new Dataset();
	this.dsCreate.addColumn("CD_CORP", "string");
	this.dsCreate.addColumn("DT_WORK", "string");
	this.dsCreate.addColumn("ID_USER", "string");
	
	this.dsIssueSlip = new Dataset();
	this.dsIssueSlip.addColumn("CD_CORP", "string");			//법인코드
	this.dsIssueSlip.addColumn("CD_SITE_BH", "string");			//발행부서
	this.dsIssueSlip.addColumn("CD_DEPT_ACNT", "string");			//현장코드
	this.dsIssueSlip.addColumn("DT_WORK", "string");			//작업년월
	this.dsIssueSlip.addColumn("ID_TRANS", "string");			//사용자 아이디
	
	this.dsCancelSlip = new Dataset();
	this.dsCancelSlip.addColumn("CD_TRADE", "string");		//전표번호

}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "CD_CORP"	 , this.ccfCD_CORP.form.CDTextBox.value);
	this.dsSelect.setColumn(0, "CD_DEPT_ACNT", this.ccfCD_DEPT_ACNT.form.CDTextBox.value);
	this.dsSelect.setColumn(0, "DT_WORK"	 , this.ctclYM_MONTH.form.TextBox.value);
	this.dsSelect.setColumn(0, "TY_GUBUN1"	 , this.ccboTY_GUBUN1.value);
	trace(" this.ccboTY_GUBUN1.value : " +  this.ccboTY_GUBUN1.value);
	
	var strSvcId    = "header";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "selectHeader=dsSelect selectCdSlip=dsSelect";
	var outData     = "dsHeader=selectHeader0 dsCdSlip=selectCdSlip0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	//전표번호가 있을경우 리턴
	if(!this.gfnIsNull(this.dsCdSlip.getColumn(0,"CD_TRADE"))) return;
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	//전표번호가 있을경우 리턴
	if(!this.gfnIsNull(this.dsCdSlip.getColumn(0,"CD_TRADE"))) return;	
}

/*
 *	저장 버튼
 */
this.fnSave = function() {

}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;
	if (this.gfnIsNull(this.gfnTrim(this.ccfCD_CORP.form.CDTextBox.value))) {
		this.gfnAlert("법인코드는 필수입니다.");
		this.ccfCD_CORP.form.CDTextBox.setFocus();
		validate = false;
	}

	if(this.gfnIsNull(this.ctclYM_MONTH.form.TextBox.value)){
		this.gfnAlert("마감월은 필수입니다.");
		this.ctclYM_MONTH.form.TextBox.setFocus();
		validate = false;
	}

	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if(svcID == "header"){	
		//그리드 데이터 셋팅 작업
		this.fnGridDataSetting();
		
		//데이터 조회 처리
		this.fnDataSelect();
	} else if (svcID == "select") {
		//전표번호가 있을경우
		if(this.dsCdSlip.rowcount > 0){
			this.edtCD_SLIP.set_value(this.dsCdSlip.getColumn(0, "CD_TRADE"));
			
			//전표번호가 없을경우 버튼 처리
			if(this.gfnIsNull(this.dsCdSlip.getColumn(0, "CD_TRADE"))){
				this.gfnSetEnable(this.btnSearchSlip, false);
				this.gfnSetEnable(this.btnIssueSlip, true);
				this.gfnSetEnable(this.btnCancelSlip, false);
			}else{
				this.gfnSetEnable(this.btnSearchSlip, true);
				this.gfnSetEnable(this.btnIssueSlip, false);
				this.gfnSetEnable(this.btnCancelSlip, true);
			}
		}
		
		this.gfnGridAfterSelect(this.dxGrid);
		
		var colCnt = this.dsList.getColCount();
		
		trace("colCnt >>> "+colCnt);
		
		this.dsList.set_enableevent(false);
		var amSum = 0;	
		for(var i=0;i<this.dsList.rowcount;i++){
			amSum = 0;	
			for(var c=0;c<colCnt;c++){
				var colId = this.dsList.getColID(c);
				if(!this.gfnIsNull(colId)){
					if(colId != "nx_flag" && colId != "nx_sort" && colId != "CD_ACNT_FROM" && colId != "CD_ACNT_TO" &&
					   colId != "DS_ACNT_FROM" && colId != "DS_ACNT_TO" && colId != "DS_CODE" && colId != "DS_ETC3" && colId != "AM_SUM"){
						amSum += nexacro.toNumber(this.dsList.getColumn(i, colId),0);
					}
				}
			}

			this.dsList.setColumn(i, "AM_SUM", amSum);
		}
		this.dsList.set_enableevent(true);
	} else if(svcID == "create") {
		if (errorCode == 0) {
			this.gfnAlert("생성되었습니다.");
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}else if(svcID == "issueSlip"){	
		if (errorCode == 0) {
			this.gfnAlert("전표가 발행 되었습니다.");
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}else if(svcID == "cancelSlip"){	
		if (errorCode == 0) {
			this.gfnAlert("전표가 취소 되었습니다.");
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}

}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnAfterCDTextChanged = function(id, codeFindData) {
	switch(id) {
		case "ccfCD_CORP":	//법인코드
			this.ccfCD_DEPT_ACNT.form.fnCodeFindClear();
		break;
	}
}

this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if (id == "ccfCD_CORP") {
		dsUserParam.setColumn(nrow, "ID_SABUN", this.AuthClient.ID_USER);
	}
	
	if (id == "ccfCD_DEPT_ACNT") {
		var cdCorp = this.ccfCD_CORP.form.CDTextBox.value;
		if(this.gfnIsNull(cdCorp)){
			this.gfnAlert("법인코드를 선택하세요.");
			return false;
		}
		dsUserParam.setColumn(nrow, "CD_DEPT_UPPER"	, "");				//상위부서
		dsUserParam.setColumn(nrow, "YN_SLIPACCEPT"	, "");				//전표발행여부
		dsUserParam.setColumn(nrow, "CD_CORP"		, cdCorp);			//법인코드
		dsUserParam.setColumn(nrow, "YN_USE"		, "Y");				//사용여부
		dsUserParam.setColumn(nrow, "GR_DEPT_ACNT"	, "");				//현장/본사여부
	}
	return true;
}; 

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/


/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_Valuechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};

//데이터 조회 처리
this.fnDataSelect = function()
{
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect selectCdSlip=dsSelect";
	var outData     = "dsList=select0 dsCdSlip=selectCdSlip0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}	

//건설중인자산명세서 생성 처리
this.fnCreateData = function (obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if (this.gfnIsNull(this.gfnTrim(this.ccfCD_CORP.form.CDTextBox.value))) {
		this.gfnAlert("법인코드는 필수입니다.");
		this.ccfCD_CORP.form.CDTextBox.setFocus();
		return;
	}

	if(this.gfnIsNull(this.ctclYM_MONTH.form.TextBox.value)){
		this.gfnAlert("마감월은 필수입니다.");
		this.ctclYM_MONTH.form.TextBox.setFocus();
		return;
	}
	
	this.gfnConfirm("생성하시겠습니까?", "fnCreateData_callback");
	
};

//건설중인자산명세서 생성 Confirm 콜백
this.fnCreateData_callback = function(strId, val) 
{
	if(val == true) {
		this.dsCreate.clearData();
		var nRow = this.dsCreate.addRow();

		//처리할 데이터 담기
		this.dsCreate.setColumn(nRow, "CD_CORP" 	, this.ccfCD_CORP.form.CDTextBox.value);	//법인코드
		this.dsCreate.setColumn(nRow, "DT_WORK" 	, this.ctclYM_MONTH.form.TextBox.value);	//마감월
		this.dsCreate.setColumn(nRow, "ID_USER"     , this.AuthClient.ID_USER);					//작업자 아이디
		
		var strSvcId    = "create";
		var strSvcType  = "save";
		var inProc		= "_dsProc";
		var inData      = "create=dsCreate";
		var outData     = "";
		var strArg      = "";
		var callBackFnc = "fnCallback";
		
		this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
							strSvcType , 	// transaction을 요청할 구분
							inProc,			// Procedure 정보 Dataset 이름
							inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
							outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
							strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
							callBackFnc); 	// 통신방법 정의 [생략가능]
	}
};


//그리드 셋팅
this.fnGridDataSetting = function ()
{
	var colAM_AUM = this.dxGrid.getBindCellIndex("body", "AM_SUM");	//합계 컬럼 인덱스

	this.dxGrid.set_enableredraw(false);
	this.dsList.set_enableevent(false);


	var colCnt = this.dxGrid.getCellCount("body");
	
	//그리드 컬럼 삭제 처리(초기화용)
	var delCnt = 0, delIdx = 0;
	for(var i=0;i<colCnt;i++){
		if(i > colAM_AUM){
			delIdx = ((colCnt-1)-delCnt);
			this.dxGrid.deleteContentsCol("body", delIdx, false);

			//var del = this.dsList.deleteColumn("C0111701");
			
			//trace("del :: "+del);
			delCnt++;
		}
	}
	
	var cellIndex = colAM_AUM + 1;
	var totCnt = this.dsHeader.rowcount;
	var subCol = 1;
	//헤더 컬럼 데이터 
	for(var h=0;h<totCnt;h++){
		// 컬럼 추가(데이터셋)
		this.dsList.addColumn(this.dsHeader.getColumn(h, "CD_DEPT_ACNT"), "BIGDECIMAL");
		
		//그리드 컬럼 추가
		this.dxGrid.appendContentsCol("body");
		
		this.dxGrid.setCellProperty("head", cellIndex, "text", this.dsHeader.getColumn(h, "DS_DEPT_ACNT"));
		this.dxGrid.setCellProperty("head", (subCol + cellIndex), "text", this.dsHeader.getColumn(h, "TY_DIS"));
		this.dxGrid.setCellProperty("body", cellIndex, "text", "bind:"+this.dsHeader.getColumn(h, "CD_DEPT_ACNT"));	//바인딩 처리
		this.dxGrid.setCellProperty("summ", cellIndex, "text", "expr:dataset.getSum('"+this.dsHeader.getColumn(h, "CD_DEPT_ACNT")+"')");
		this.dxGrid.setCellProperty("summ", cellIndex, "displaytype", "mask");
		this.dxGrid.setCellProperty("summ", cellIndex, "maskeditformat", "#,###");
		
		//볼드처리
		this.dxGrid.setCellProperty("body", cellIndex, "cssclass", "expr:DS_ETC3=='Y'?'update':''");
		
		this.dxGrid.setFormatColProperty(cellIndex, "size", 150); 		//컬럼 사이즈
		
		cellIndex++;
		subCol++;
	}

	this.dsList.set_enableevent(true);
	this.dxGrid.set_enableredraw(true);
	
	//trace("saveXML :: "+this.dsList.saveXML());
};

//보조부 조회 처리
this.fnAccountSelect = function (obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if(!this.gfnGridIsRow(this.dxGrid)) {return false;}
	
	var rPos = this.dsList.rowposition;
	var cdAcntFrom = this.dsList.getColumn(rPos, "CD_ACNT_FROM");
	var dsAcntFrom = this.dsList.getColumn(rPos, "DS_ACNT_FROM");
	var cdAcntTo   = this.dsList.getColumn(rPos, "CD_ACNT_TO");
	var dsAcntTo   = this.dsList.getColumn(rPos, "DS_ACNT_TO");
	
	if(this.dxGrid.getCellPos() <= 2){
		this.gfnAlert("현장코드 데이터를 선택하세요.");
		return false;
	}
	
	if(this.gfnIsNull(cdAcntFrom)){
		this.gfnAlert("조회 불가능한 데이터입니다.");
		return false;
	}	

	
	var bindName = this.dxGrid.getCellProperty("body", this.dxGrid.getCellPos(), "text");
	var cdDeptAcnt = bindName.substring(bindName.indexOf(":")+2, bindName.length);
	var dsDeptAcnt = this.dxGrid.getCellProperty("head", this.dxGrid.getCellPos(), "text");
	var ymMagam = this.ctclYM_MONTH.form.TextBox.value;
	
	var magamFr = this.gfnGetFirstDate(ymMagam.substr(0,4) + "01");
	var magamTo = this.gfnGetLastDate(ymMagam);

	var param = {};
	param.CD_CORP 			= this.ccfCD_CORP.form.CDTextBox.value;				//법인코드
	param.DS_CORP 			= this.ccfCD_CORP.form.DSTextBox.value;				//법인명
	param.CD_DEPT_ACNT 		= cdDeptAcnt;										//현장코드
	param.DS_DEPT_ACNT 		= dsDeptAcnt;										//현장명
	param.CD_ACNT_FROM 		= cdAcntFrom;										//계정코드(FROM)
	param.DS_ACNT_FROM 		= dsAcntFrom;										//계정코드명(FROM)
	param.CD_ACNT_TO 		= (this.gfnIsNull(cdAcntTo) ? cdAcntFrom : cdAcntTo);	//계정코드(TO) to가 없을경우 from값 담기
	param.DS_ACNT_TO 		= (this.gfnIsNull(cdAcntTo) ? dsAcntFrom : dsAcntTo);	//계정코드(TO) to가 없을경우 from값 담기
	param.DT_MAGAM 			= magamFr;			//작성일자(시작)
	param.DT_MAGAM2 		= magamTo;			//작성일자(종료)
	
	
	this.gfnFormOpen("DHE", "DHE_ACCOUNTSELECT_PW", "", param);
};



//전표발행 처리
this.fnIssueSlip = function (obj:nexacro.Button,e:nexacro.ClickEventInfo)
{	
	if (this.gfnIsNull(this.gfnTrim(this.ccfCD_CORP.form.CDTextBox.value))) {
		this.gfnAlert("법인코드는 필수입니다.");
		this.ccfCD_CORP.form.CDTextBox.setFocus();
		return;
	}

	if(this.gfnIsNull(this.ctclYM_MONTH.form.TextBox.value)){
		this.gfnAlert("마감월은 필수입니다.");
		this.ctclYM_MONTH.form.TextBox.setFocus();
		return;
	}

	this.gfnConfirm("전표발행 하시겠습니까?", "fnIssueSlip_callback");
	
};

this.fnIssueSlip_callback = function(strId, val) 
{
	if(val == true) {
		this.dsIssueSlip.clearData();
		var nRow = this.dsIssueSlip.addRow();
		
		//처리할 데이터 담기
		this.dsIssueSlip.setColumn(nRow, "CD_CORP"		, this.ccfCD_CORP.form.CDTextBox.value);
		this.dsIssueSlip.setColumn(nRow, "CD_SITE_BH"	, this.AuthClient.CD_DEPT);
		this.dsIssueSlip.setColumn(nRow, "CD_DEPT_ACNT"	, this.ccfCD_DEPT_ACNT.form.CDTextBox.value);
		this.dsIssueSlip.setColumn(nRow, "DT_WORK"	 	, this.ctclYM_MONTH.form.TextBox.value);
		this.dsIssueSlip.setColumn(nRow, "ID_USER"	 	, this.AuthClient.ID_USER);
		
		var strSvcId    = "issueSlip";
		var strSvcType  = "save";
		var inProc		= "_dsProc";
		var inData      = "issueSlip=dsIssueSlip";
		var outData     = "";
		var strArg      = "";
		var callBackFnc = "fnCallback";
		
		this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
							strSvcType , 	// transaction을 요청할 구분
							inProc,			// Procedure 정보 Dataset 이름
							inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
							outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
							strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
							callBackFnc); 	// 통신방법 정의 [생략가능]
	}
};

//전표취소 처리
this.fnCancelSlip = function (obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if (this.gfnIsNull(this.gfnAllTrim(this.dsCdSlip.getColumn(0, "CD_TRADE")))) {
		this.gfnAlert("전표번호는 필수입니다.");
		return;
	}
	
	this.gfnConfirm("전표를 취소하시겠습니까?", "fnCancelSlip_callback");
	
};

this.fnCancelSlip_callback = function(strId, val) 
{
	if(val == true) {
		this.dsCancelSlip.clearData();
		var nRow = this.dsCancelSlip.addRow();
		
		var cdTrade = this.dsCdSlip.getColumn(0, "CD_TRADE");
		
		//처리할 데이터 담기
		this.dsCancelSlip.setColumn(nRow, "CD_TRADE"  , cdTrade);
		
		var strSvcId    = "cancelSlip";
		var strSvcType  = "save";
		var inProc		= "_dsProc";
		var inData      = "cancelSlip=dsCancelSlip";
		var outData     = "";
		var strArg      = "";
		var callBackFnc = "fnCallback";
		
		this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
							strSvcType , 	// transaction을 요청할 구분
							inProc,			// Procedure 정보 Dataset 이름
							inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
							outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
							strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
							callBackFnc); 	// 통신방법 정의 [생략가능]
	}
};

//전표 조회 
this.fnSearchSlip = function (obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if (this.gfnIsNull(this.gfnAllTrim(this.dsCdSlip.getColumn(0, "CD_TRADE")))) {
		this.gfnAlert("전표번호는 필수입니다.");
		return;
	}
	
	var param = {};
	param.IUD_FLAG = "S";
	param.CD_TRADE = this.gfnAllTrim(this.dsCdSlip.getColumn(0, "CD_TRADE"));
	this.gfnFormOpen("DHA", "DHA_ISSUESLIP", "fnPopupCallBack", param, this.getOffsetWidth(), this.getOffsetHeight());
	
};]]></Script>
    <Objects>
      <Dataset id="dsList" oncolumnchanged="dsList_oncolumnchanged" cancolumnchange="dsList_cancolumnchange"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">selectHeader</Col>
            <Col id="SP">DHDPR_PREPAY_SLIP_HEADER_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DHDPR_PREPAY_SLIP_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">create</Col>
            <Col id="SP">DHDPR_PREPAY_SLIP_CREATE</Col>
          </Row>
          <Row>
            <Col id="SP">DHDPR_PREPAY_CDTRADE</Col>
            <Col id="TARGET">selectCdSlip</Col>
          </Row>
          <Row>
            <Col id="TARGET">issueSlip</Col>
            <Col id="SP">DHDPR_PREPAY_SLIP_AUTOSLIP</Col>
          </Row>
          <Row>
            <Col id="TARGET">cancelSlip</Col>
            <Col id="SP">DHDPR_PREPAY_SLIP_CANCELSLIP</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="CD_DEPT_ACNT" type="STRING" size="256"/>
          <Column id="YM_MONTH" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsHeader" oncolumnchanged="dsList_oncolumnchanged"/>
      <Dataset id="dsCdSlip">
        <ColumnInfo>
          <Column id="CD_TRADE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsTY_GUBUN1">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">1</Col>
            <Col id="DS_CODE">마감월</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">2</Col>
            <Col id="DS_CODE">누적</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_DEPT_ACNT.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_DEPT_ACNT"/>
      <BindItem id="item2" compid="divSearch.form.ctclYM_MONTH.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_MONTH"/>
      <BindItem id="item3" compid="ccboTY_GUBUN1" propid="value" datasetid="dsSearch" columnid="APT_ST_GU"/>
    </Bind>
  </Form>
</FDL>
