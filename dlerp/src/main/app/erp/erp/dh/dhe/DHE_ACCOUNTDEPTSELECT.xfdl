<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="계정별부서잔액관리" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="1" left="0.0" top="10.0" height="78.0" right="0" cssclass="div_SEARCH_Bg" text="">
          <Layouts>
            <Layout>
              <Static id="staCD_CORP" taborder="0" text="법인코드" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_CORP" CodeFindName="DHX_CFCORP" CDTextWidth="50" taborder="1" left="staCD_CORP:0.0" top="10.0" width="278" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staCD_DEPT_ACNT" taborder="2" text="귀속부서" left="ccfCD_CORP:0.0" top="10.0" width="92.0" height="24.0" textDecoration="none" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_DEPT_ACNT" CodeFindName="DHX_CFACNTUNIT" CDTextWidth="70" taborder="3" left="staCD_DEPT_ACNT:0.0" top="10.0" width="280" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staDT_FROM" taborder="4" text="회계일자" left="ccfCD_DEPT_ACNT:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Calendar id="ctclDT_FROM" taborder="5" left="staDT_FROM:0.0" top="10.0" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" width="105" oninnerdatachanged="divSearch_ctclDT_FROM_oninnerdatachanged" onchanged="divSearch_ctclDT_FROM_onchanged"/>
              <Static id="staDT_TO" taborder="6" text="~" left="ctclDT_FROM:0.0" top="10.0" width="30.0" height="24.0" cssclass="sta_WF_AC"/>
              <Calendar id="ctclDT_TO" taborder="7" left="staDT_TO:0.0" top="10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" onchanged="divSearch_ctclDT_TO_onchanged"/>
              <Static id="staCD_ACNT" taborder="8" text="계정코드" left="0.0" top="staCD_CORP:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_ACNT" CodeFindName="DHX_CFACNT_SLIP_AND_TRIAL" CDTextWidth="70" taborder="9" left="staCD_ACNT:0.0" top="staCD_CORP:10.0" width="277" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 ************************************************************************/
this.fnSetButton = function() {
 	this.FormBtns.Add.set_enable(false);
 	this.FormBtns.Save.set_enable(false);
 	this.FormBtns.Del.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnFormButtonGe = this.gfnFormButtonAdd("tbbHistory", "fnTbbHistory", "잔액원장총괄조회"); 
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;
	this.ccfCD_DEPT_ACNT = this.divSearch.form.ccfCD_DEPT_ACNT;
	this.ccfCD_ACNT = this.divSearch.form.ccfCD_ACNT;
		
	this.ctclDT_FROM = this.divSearch.form.ctclDT_FROM;
	this.ctclDT_TO = this.divSearch.form.ctclDT_TO;
	
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {	
	this.gfnGridInit(this.dxGrid, this.dsList, "DH", "DHE_ACCOUNTDEPTSELECT");		
	
	this.dxGrid.addEventHandler("oncelldblclick", this.fnGrid_Celldblclick, this);
	
	if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
		this.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP); 
		this.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);	
	}
	
	this.ctclDT_FROM.set_value(this.gfnGetFirstDate(this.gfnGetDate()));
	this.ctclDT_TO.set_value(this.gfnGetDate());
		
	this.ccfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.ccfCD_DEPT_ACNT.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.ccfCD_ACNT.AfterCDTextChanged = "fnAfterCDTextChanged";
	
	this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_DEPT_ACNT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_ACNT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";

}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("CD_DEPT_ACNT", "string");
	this.dsSelect.addColumn("DT_FR", "string");
	this.dsSelect.addColumn("DT_TO", "string");
	this.dsSelect.addColumn("CD_ACCOUNT", "string");

}

/************************************************************************
 * 버튼 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	var nRow = this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
	this.dsSelect.setColumn(0, "CD_DEPT_ACNT", this.ccfCD_DEPT_ACNT.form.CDTextBox.value);	
	this.dsSelect.setColumn(0, "DT_FR", this.ctclDT_FROM.value);
	this.dsSelect.setColumn(0, "DT_TO", this.ctclDT_TO.value);	
	this.dsSelect.setColumn(0, "CD_ACCOUNT", this.ccfCD_ACNT.form.CDTextBox.value);	
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]

}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
}

/*
 *	삭제 버튼
 */ 
this.fnDel = function() {
}

/*
 *	저장 버튼
 */ 
this.fnSave = function() {
}

/*
 *	엑셀 버튼
 */ 
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}
 
/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.text)) {
		this.gfnAlert("법인코드를 입력 하세요.");
		this.ccfCD_CORP.form.CDTextBox.setFocus();
		return false;
	}
	
	if (this.gfnIsNull(this.ccfCD_ACNT.form.CDTextBox.text)) {
		this.gfnAlert("계정코드를 입력 하세요.");
		this.ccfCD_ACNT.form.CDTextBox.setFocus();
		return false;
	}

if (this.gfnIsNull(this.ctclDT_FROM.value)) {
		this.gfnAlert("시작일자를 입력 하세요.");
		this.ctclDT_FROM.setFocus();
		return false;
	}
	
	if (this.gfnIsNull(this.ctclDT_TO.value)) {
		this.gfnAlert("종료일자를 입력 하세요.");
		this.ctclDT_TO.setFocus();
		return false;
	}
	
	if ( !this.gfnIsNull(this.ctclDT_FROM.value) && !this.gfnIsNull(this.ctclDT_TO.value) ) {
		if ( this.ctclDT_FROM.value > this.ctclDT_TO.value ) {
			this.gfnAlert("일자가 잘못 입력 되었습니다..");
			this.ctclDT_FROM.setFocus();
			return false;
		}
	}
	
	return true;
};
/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.fnSetButton();
		this.gfnGridAfterSelect(this.dxGrid);
		/*this.gfnGridAfterSelect(this.dxGridSub);	*/
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if (id == "ccfCD_CORP") {
		dsUserParam.setColumn(nrow, "ID_SABUN", this.AuthClient.ID_USER);
	}
	if (id == "ccfCD_DEPT_ACNT") {
		if (!this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
			dsUserParam.setColumn(nrow, "CD_DEPT_UPPER"	, "0000000");				//상위부서
			dsUserParam.setColumn(nrow, "YN_SLIPACCEPT"	, "");						//전표발행여부
			dsUserParam.setColumn(nrow, "CD_CORP"		, this.ccfCD_CORP.form.CDTextBox.value);	//법인코드
			dsUserParam.setColumn(nrow, "YN_USE"		, "Y");						//사용여부
			dsUserParam.setColumn(nrow, "GR_DEPT_ACNT"	, "");						//현장/본사여부
		}else{
			this.gfnAlert("법인코드는 필수입력 값입니다.");
			return false;
		}
	}

	if (id == "ccfCD_ACNT") {
// 		if (!this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
// 			dsUserParam.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value); 
// 		}else{
// 			this.gfnAlert("법인코드는 필수입력 값입니다.");
// 			return false;
// 		}
		dsUserParam.setColumn(nrow, "YN_SLIP", "");
	}

	return true;

};
 
this.fnAfterCDTextChanged = function(id, codeFindData) {
	if(id == "ccfCD_CORP") {
		this.ccfCD_DEPT_ACNT.form.fnCodeFindClear();
		
		this.ccfCD_DEPT_ACNT.form.CDTextBox.setFocus();
	}
	this.fnSearchInit();
}

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGrid_RowCellChanged = function(obj:nexacro.Grid,e:nexacro.GridSelectEventInfo)
{
//     if ((obj.oldrow > -1 && obj.oldrow == e.row)
// 		|| (obj.oldrow == -1 && e.oldrow != e.row)) {
// 		this.FormBtns.SubSelect.click();
// 		obj.oldrow = -1;
// 	}
};

/************************************************************************
 * 확장버튼 이벤트
 ************************************************************************/
this.fnTbbHistory = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	// 선택된 row가 있을 경우에만 팝업을 띄움
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	var param = {};

	var cd_corp = this.ccfCD_CORP.form.CDTextBox.value;
	var cd_account = this.dsList.getColumn(this.dsList.rowposition, "CD_ACCOUNT");
	var dt_magam = this.ctclDT_FROM.value;
	var dt_magam2 = this.ctclDT_TO.value;
	
	if(this.gfnIsNull(cd_corp) || this.gfnIsNull(cd_account) || this.gfnIsNull(dt_magam) || this.gfnIsNull(dt_magam2))
	{
		this.gfnAlert("이관자료는 조회할 수 없습니다.");
		return false;
	}
	
	param.CD_CORP = cd_corp;
	param.DS_CORP = this.ccfCD_CORP.form.DSTextBox.value;
	param.CD_DEPT_ACNT = this.ccfCD_DEPT_ACNT.form.CDTextBox.value;
	param.DS_DEPT_ACNT = this.ccfCD_DEPT_ACNT.form.DSTextBox.value;
	param.CD_ACCOUNT = cd_account;
	param.DS_ACCOUNT = this.dsList.getColumn(this.dsList.rowposition, "DS_ACCOUNT");
	param.DT_MAGAM = dt_magam;
	param.DT_MAGAM2 = dt_magam2;
	
	this.gfnFormOpen("DHE", "DHE_ACCOUNTSELECT_PW", "", param);
	
}

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		this.gfnSetFormStatus(this);
		this.gfnGridClear(this.dxGrid);
		/*this.gfnGridClear(this.dxGridSub);*/
	}
}

this.divSearch_ctclDT_FROM_onchanged = function(obj:nexacro.Calendar,e:nexacro.ChangeEventInfo)
{
	this.fnSearchInit();
};

this.divSearch_ctclDT_TO_onchanged = function(obj:nexacro.Calendar,e:nexacro.ChangeEventInfo)
{
	this.fnSearchInit();
};

this.fnGrid_Celldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	// 선택된 row가 있을 경우에만 팝업을 띄움
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	var param = {};

	var cd_corp = this.ccfCD_CORP.form.CDTextBox.value;
	var cd_account = this.dsList.getColumn(this.dsList.rowposition, "CD_ACCOUNT");
	var dt_magam = this.ctclDT_FROM.value;
	var dt_magam2 = this.ctclDT_TO.value;
	
	param.CD_CORP = cd_corp;
	param.DS_CORP = this.ccfCD_CORP.form.DSTextBox.value;
	param.CD_DEPT_ACNT = this.ccfCD_DEPT_ACNT.form.CDTextBox.value;
	param.DS_DEPT_ACNT = this.ccfCD_DEPT_ACNT.form.DSTextBox.value;
	param.CD_ACCOUNT = cd_account;
	param.DS_ACCOUNT = this.dsList.getColumn(this.dsList.rowposition, "DS_ACCOUNT");
	param.DT_MAGAM = dt_magam;
	param.DT_MAGAM2 = dt_magam2;
	
	this.gfnFormOpen("DHE", "DHE_ACCOUNTSELECT_PW", "", param);
};]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DHEPR_ACCOUNTDEPT_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="CD_DEPT_ACNT" type="STRING" size="256"/>
          <Column id="DT_FROM" type="STRING" size="256"/>
          <Column id="DT_TO" type="STRING" size="256"/>
          <Column id="CD_ACNT" type="STRING" size="256"/>
          <Column id="CD_VENDOR" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
    </Objects>
  </Form>
</FDL>
