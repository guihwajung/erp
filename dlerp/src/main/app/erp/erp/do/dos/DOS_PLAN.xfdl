<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1400" height="720" titletext="사업수지항목" onload="form_onload">
    <Layouts>
      <Layout stepcount="0">
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none" text="">
          <Layouts>
            <Layout>
              <Static id="staCD_PROJ" taborder="0" text="프로젝트" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_PROJ" CodeFindName="DOS_CFPROJ" CDTextWidth="70" taborder="1" left="staCD_PROJ:0.0" top="10.0" width="350" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Div id="ccfNO_PLAN" CodeFindName="DOS_CFNOPLAN" CDTextWidth="70" taborder="2" left="ccfCD_PROJ:0.0" top="10.0" width="350" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staNO_PLAN" taborder="3" text="예산번호" left="ccfNO_PLAN:0.0" top="10.0" width="92.0" height="24.0" textDecoration="none" cssclass="sta_WF_SchLabel"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="30" bottom="0" right="0" cssclass="div_DATA_Bg" text="">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="15" right="0" bottom="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	this.fnInit();
	
	if (!this.gfnIsNull(this.getOwnerFrame().CD_PROJ)) {
		this.dsSearch.setColumn(0, "CD_PROJ", this.getOwnerFrame().CD_PROJ);
		this.dsSearch.setColumn(0, "DS_PROJ", this.getOwnerFrame().DS_PROJ);
	}

	if (!this.gfnIsNull(this.dsSearch.getColumn(0, "CD_PROJ")))
		this.FormBtns.Select.click();
};

this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnDtl = this.gfnFormButtonAdd("btnDtl", "fnDtl");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
 	this.ccfCD_PROJ = this.divSearch.form.ccfCD_PROJ;
	this.ccfNO_PLAN = this.divSearch.form.ccfNO_PLAN;

 	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
 	this.gfnGridInit(this.dxGrid, this.dsList, "DO", "DOS_PLAN");

 	//this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
 	
 	this.ccfCD_PROJ.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfNO_PLAN.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_PROJ.AfterCDTextChanged = "fnAfterCDTextChanged";
	
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_PROJ", "string");
	this.dsSelect.addColumn("NO_PLAN", "string");
	
	this.dsInsert = new Dataset();
	this.dsInsert.addColumn("CD_PROJ", "string");
	this.dsInsert.addColumn("TY_PLAN", "string");
	this.dsInsert.addColumn("DS_PLAN", "string");
	this.dsInsert.addColumn("ID_USER", "string");
	
	this.dsUpdate = new Dataset();
	this.dsUpdate.addColumn("CD_PROJ", "string");
	this.dsUpdate.addColumn("NO_PLAN", "string");
	this.dsUpdate.addColumn("TY_PLAN", "string");
	this.dsUpdate.addColumn("DS_PLAN", "string");
	this.dsUpdate.addColumn("ID_USER", "string");
	
	this.dsDelete = new Dataset();
	this.dsDelete.addColumn("CD_PROJ", "string");
	this.dsDelete.addColumn("NO_PLAN", "string");
	this.dsDelete.addColumn("ID_USER", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
this.fnSelect = function() {
	if (!this.fnSelectValidation()) return;
	
	this.gfnGridBeforeSelect(this.dxGrid);

	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "CD_PROJ", this.ccfCD_PROJ.form.CDTextBox.value);
	this.dsSelect.setColumn(0, "NO_PLAN", this.ccfNO_PLAN.form.CDTextBox.value);
		
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect"; 
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
				
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

this.fnAdd = function() {
	this.gfnGridAdd(this.dxGrid);
}

this.fnDel = function() {

	this.gfnGridDel(this.dxGrid);
}

this.fnSave = function() {
	if (!this.gfnGridValidate(this.dxGrid)) return;

	this.dxGrid.updateToDataset();

	this.dsInsert.clearData();
	this.dsUpdate.clearData();
	this.dsDelete.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
				var nrow = this.dsInsert.addRow();
				this.dsInsert.setColumn(nrow, "CD_PROJ", this.ccfCD_PROJ.form.CDTextBox.value);
				this.dsInsert.setColumn(nrow, "TY_PLAN", this.dsList.getColumn(i, "TY_PLAN"));
				this.dsInsert.setColumn(nrow, "DS_PLAN", this.dsList.getColumn(i, "DS_PLAN"));
				this.dsInsert.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);

				break;
			case "U":
				var nrow = this.dsUpdate.addRow();
				this.dsUpdate.setColumn(nrow, "CD_PROJ", this.ccfCD_PROJ.form.CDTextBox.value);
				this.dsUpdate.setColumn(nrow, "NO_PLAN", this.dsList.getColumn(i, "NO_PLAN"));
				this.dsUpdate.setColumn(nrow, "TY_PLAN", this.dsList.getColumn(i, "TY_PLAN"));
				this.dsUpdate.setColumn(nrow, "DS_PLAN", this.dsList.getColumn(i, "DS_PLAN"));
				this.dsUpdate.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);

				break;
			case "D":
				var nrow = this.dsDelete.addRow();
				this.dsDelete.setColumn(nrow, "CD_PROJ", this.ccfCD_PROJ.form.CDTextBox.value);
				this.dsDelete.setColumn(nrow, "NO_PLAN", this.dsList.getColumn(i, "NO_PLAN"));
				this.dsDelete.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);

				break;
		}
	}
	
	if (this.dsInsert.rowcount == 0 && this.dsUpdate.rowcount == 0 && this.dsDelete.rowcount == 0) return;
			
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "insert=dsInsert update=dsUpdate delete=dsDelete";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

this.fnPrint = function() {

}

/************************************************************************
 * Validate
 ************************************************************************/
this.fnSelectValidation = function() {
	var validate = true;
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "CD_PROJ"))) {
		this.fnVaidateCallback = function() {
			this.ccfCD_PROJ.form.CDTextBox.setFocus();
		}
		this.gfnAlert("프로젝트 코드를 입력하지 않았습니다.", "fnVaidateCallback");
		return false;
	}
	
  	return validate;
 }


/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
this.fnCallback = function(svcID, errorCode, errorMsg) {
	if(svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		}
		else {
			this.gfnAlert(errorMsg);
		}
	}
 }
 
this.fnDlgButton_callback = function(svcID, val) {
	if(val != false) {
		this.FormBtns.Select.click();
	}
}		
/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if (id == "ccfCD_PROJ") {
		dsUserParam.setColumn(nrow, "CD_DEPT", this.AuthClient.CD_DEPT);
		dsUserParam.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
		dsUserParam.setColumn(nrow, "CD_CORP", this.AuthClient.CD_CORP);
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
	} else if (id == "ccfNO_PLAN") {
		dsUserParam.setColumn(nrow, "CD_PROJ", this.ccfCD_PROJ.form.CDTextBox.value);
	}
	
	
	return true;
};

 this.fnAfterCDTextChanged = function(id, codeFindData) {
 	var arr = codeFindData; 
	
	if(id == "ccfCD_PROJ") {
		this.ccfNO_PLAN.form.fnCodeFindClear();
	}
}

/************************************************************************
 * 그리드 이벤트
  ************************************************************************/


/************************************************************************
 * 확장버튼 이벤트
 ************************************************************************/
 // 예산내역관리
this.fnDtl = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {

 	var param = {};
	param.CD_PROJ = this.ccfCD_PROJ.form.CDTextBox.value;
	param.DS_PROJ = this.ccfCD_PROJ.form.DSTextBox.value;
	param.NO_PLAN = this.dsList.getColumn(this.dsList.rowposition, "NO_PLAN");
	param.DS_PLAN = this.dsList.getColumn(this.dsList.rowposition, "TY_PLAN");
	
 	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DOS_PLANDTL", "fnDlgButton_callback", param);
};

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo) {
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);
	}
};

this.fnInit = function() {
	if (this.gfnIsNull(this.dsList.getColumn(this.dsList.rowposition, "NO_PLAN"))){
		this.btnDtl.set_enable(false); // 예산번호 없으면 버튼 비활성화
	}
}
]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DOSPR_PLAN_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">insert</Col>
            <Col id="SP">DOSPR_PLAN_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">update</Col>
            <Col id="SP">DOSPR_PLAN_UPDATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">delete</Col>
            <Col id="SP">DOSPR_PLAN_DELETE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_PROJ" type="STRING" size="256"/>
          <Column id="DS_PROJ" type="STRING" size="256"/>
          <Column id="NO_PLAN" type="STRING" size="256"/>
          <Column id="DS_PLAN" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_PROJ"/>
            <Col id="DS_PROJ"/>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_PROJ.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_PROJ"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_PROJ.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_PROJ"/>
      <BindItem id="item2" compid="divSearch.form.ccfNO_PLAN.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="NO_PLAN"/>
      <BindItem id="item3" compid="divSearch.form.ccfNO_PLAN.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_PLAN"/>
    </Bind>
  </Form>
</FDL>
