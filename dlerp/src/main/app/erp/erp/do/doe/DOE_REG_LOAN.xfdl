<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="960" height="400" titletext="New Form" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="staCD_FIELD" taborder="6" text="현장코드" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_FIELD" CodeFindName="DZX_CFSITE" CDTextWidth="80" taborder="0" left="staCD_FIELD:0.0" top="10.0" width="200" height="24.0" FitToContent="true" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staNO_SLIP" taborder="5" text="전표번호" left="ccfCD_FIELD:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Edit id="ctxtNO_SLIP" taborder="1" left="staNO_SLIP:0.0" top="10.0" width="200" height="24.0" value="" readonly="true"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Static id="staTY_LOAN" taborder="1" text="대여금구분" left="0" top="0" width="87" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="staBg01" taborder="2" left="staTY_LOAN:-1" top="0" width="180" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staTY_LOAND" taborder="3" text="대여항목" left="staBg01:-1" top="0" width="87" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="staBg02" taborder="4" left="staTY_LOAND:-1" top="0" width="180" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staCD_VENDOR" taborder="5" text="대여업체" left="0" top="staTY_LOAN:-1" width="87" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="staBg03" taborder="6" left="staCD_VENDOR:-1" top="staBg01:-1" width="445" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staCD_PAY_VENDOR" taborder="7" text="지급업체" left="0" top="staCD_VENDOR:-1" width="87" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="staBg04" taborder="8" left="staCD_PAY_VENDOR:-1" top="staBg03:-1" width="445" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staTY_INT" taborder="9" text="이자구분" left="0" top="staCD_PAY_VENDOR:-1" width="87" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="staBg05" taborder="10" left="staTY_INT:-1" top="staBg04:-1" width="180" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staRT_LOAN" taborder="11" text="이자율" left="staBg05:-1" top="staBg04:-1" width="87" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="staBg06" taborder="12" left="staRT_LOAN:-1" top="staBg04:-1" width="180" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staTY_CN" taborder="13" text="현금/어음" left="0" top="staTY_INT:-1" width="87" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="staBg07" taborder="14" left="staTY_CN:-1" top="staBg05:-1" width="445" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staDT_INT" taborder="15" text="이자가산일" left="0" top="staTY_CN:-1" width="87" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="staBg08" taborder="16" left="staDT_INT:-1" top="staBg07:-1" width="445" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staRM_ETC" taborder="17" text="비고" left="0" top="staDT_INT:-1" width="87" height="60" cssclass="sta_WF_tablelabel"/>
              <Static id="staBg09" taborder="18" left="staRM_ETC:-1" top="staBg08:-1" width="830" height="60" cssclass="sta_WF_tablebg"/>
              <Static id="staAM_LOAN" taborder="19" text="대여금액" left="staBg02:-1" top="0" width="87" height="30" cssclass="sta_WF_tablelabelE"/>
              <Static id="staBg10" taborder="20" left="staAM_LOAN:-1" top="0" width="300" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staDT_LOAN" taborder="21" text="대여일자" left="staBg03:-1" top="staAM_LOAN:-1" width="87" height="30" cssclass="sta_WF_tablelabelE"/>
              <Static id="staBg11" taborder="22" left="staDT_LOAN:-1" top="staAM_LOAN:-1" width="300" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staTY_LS" taborder="23" text="장단기구분" left="staBg04:-1" top="staDT_LOAN:-1" width="87" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="staBg12" taborder="24" left="staTY_LS:-1" top="staBg11:-1" width="300" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staRT_OVER" taborder="25" text="연체이자율" left="staBg06:-1" top="staTY_LS:-1" width="87" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="staBg13" taborder="26" left="staRT_OVER:-1" top="staBg12:-1" width="300" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staDT_REPAY_CONT" taborder="27" text="상환일" left="staBg07:-1" top="staRT_OVER:-1" width="87" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="staBg14" taborder="28" left="staDT_REPAY_CONT:-1" top="staBg13:-1" width="300" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staDT_REQUEST" taborder="29" text="집행요청일" left="staBg08:-1" top="staDT_REPAY_CONT:-1" width="87" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="staBg15" taborder="30" left="staDT_REQUEST:-1" top="staBg14:-1" width="300" height="30" cssclass="sta_WF_tablebg"/>
              <Div id="ccfTY_LOAN" CodeFindName="DOX_CFTYLOAN" CDTextWidth="40" taborder="31" left="staTY_LOAN:5" top="5" width="170" height="20" FitToContent="true" url="cmm::cmmCodeFind.xfdl"/>
              <Div id="ccfTY_LOAND" CodeFindName="DOX_CFLOANITEM" CDTextWidth="40" taborder="32" left="staTY_LOAND:5" top="5" width="170" height="20" FitToContent="true" url="cmm::cmmCodeFind.xfdl"/>
              <Div id="ccfCD_VENDOR" CodeFindName="DHX_CFVENDOR_CODEFIND" CDTextWidth="80" taborder="33" left="staCD_VENDOR:5" top="ccfTY_LOAN:9" width="435" height="20" FitToContent="true" url="cmm::cmmCodeFind.xfdl"/>
              <Div id="ccfCD_PAY_VENDOR" CodeFindName="DHX_CFVENDOR_CODEFIND" CDTextWidth="80" taborder="34" left="staCD_PAY_VENDOR:5" top="ccfCD_VENDOR:9" width="435" height="20" FitToContent="true" url="cmm::cmmCodeFind.xfdl"/>
              <Radio id="crdoTY_INT" taborder="35" left="staTY_INT:5" top="ccfCD_PAY_VENDOR:9" height="20" innerdataset="dsTY_INT" direction="vertical" fittocontents="width" width="170" codecolumn="CD_CODE" datacolumn="DS_CODE"/>
              <MaskEdit id="ctxtRT_LOAN" taborder="36" left="staRT_LOAN:5" top="ccfCD_PAY_VENDOR:9" width="153" height="20" value="" textAlign="right" format="#,0.##" type="number" maskchar=" "/>
              <Static id="staPERCENT" taborder="37" text="%" left="ctxtRT_LOAN:5" top="ccfCD_PAY_VENDOR:4" width="20" height="30"/>
              <Radio id="crdoTY_CN" taborder="38" left="staTY_CN:5" top="ctxtRT_LOAN:9" height="20" innerdataset="dsTY_CN" direction="vertical" fittocontents="width" width="170" codecolumn="CD_CODE" datacolumn="DS_CODE"/>
              <Calendar id="ctclDT_FR_INT" taborder="39" left="staDT_INT:5" top="crdoTY_CN:9" width="105" height="20" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" value=""/>
              <Static id="sta_range" taborder="40" text="~" left="ctclDT_FR_INT:10" top="crdoTY_CN:9" width="10" height="20"/>
              <Calendar id="ctclDT_TO_INT" taborder="41" left="sta_range:10" top="crdoTY_CN:9" width="105" height="20" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" value=""/>
              <MaskEdit id="ctxtAM_LOAN" taborder="42" left="staAM_LOAN:5" top="5" width="148" height="20" value="" textAlign="right" format="#,#"/>
              <Static id="staWON" taborder="43" text="원" left="ctxtAM_LOAN:5" top="0" width="20" height="30"/>
              <Calendar id="ctclDT_LOAN" taborder="44" left="staDT_LOAN:5" top="ctxtAM_LOAN:9" width="105" height="20" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" value=""/>
              <Radio id="crdoTY_LS" taborder="45" left="staTY_LS:5" top="ctclDT_LOAN:9" height="20" innerdataset="dsTY_LS" direction="vertical" fittocontents="width" width="170" codecolumn="CD_CODE" datacolumn="DS_CODE"/>
              <MaskEdit id="ctxtRT_OVER" taborder="46" left="staRT_OVER:5" top="crdoTY_LS:9" width="105" height="20" value="" textAlign="right" format="#,0.##" type="number" maskchar=" "/>
              <Static id="staPERCENT0" taborder="47" text="%" left="ctxtRT_OVER:5" top="crdoTY_LS:4" width="20" height="30"/>
              <Calendar id="ctclDT_REPAY_CONT" taborder="48" left="staDT_REPAY_CONT:5" top="ctxtRT_OVER:9" width="105" height="20" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" value=""/>
              <Calendar id="ctclDT_REQUEST" taborder="49" left="staDT_REQUEST:5" top="ctclDT_REPAY_CONT:9" width="105" height="20" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" value=""/>
              <TextArea id="ctxtRM_ETC" taborder="50" left="staRM_ETC:5" top="ctclDT_FR_INT:9" width="820" height="50" value=""/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	if(!this.gfnIsNull(this.getOwnerFrame().CD_LOAN))
	{
		this.dsList.setColumn(0, "CD_LOAN", this.getOwnerFrame().CD_LOAN);
		this.divSearch.form.ccfCD_FIELD.form.fnFitToContents();

		this.FormBtns.Select.click();
	}
	else
	{
		this.gfnSetFormStatus(this);
	}
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
	//this.FormBtns.Add.set_enable(true);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnCancel = this.gfnFormButtonAdd("btnCancel", "fnCancel");
	this.btnIssue = this.gfnFormButtonAdd("btnIssue", "fnIssue");
	this.btnslipdetail = this.gfnFormButtonAdd("btnslipdetail", "fnSlipDetail");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.divData.form.ccfTY_LOAN.AfterCDTextChanged = "fnAfterCDTextChanged";
 	this.divData.form.ccfTY_LOAND.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";	

};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_LOAN", "int");
	
	this.dsInsert = new Dataset();
	this.dsInsert.addColumn("CD_LOAN", "int");
	this.dsInsert.addColumn("CD_FIELD", "string");
	this.dsInsert.addColumn("TY_LOAN", "string");
	this.dsInsert.addColumn("TY_LOAND", "string");
	this.dsInsert.addColumn("CD_VENDOR", "string");
	this.dsInsert.addColumn("CD_PAY_VENDOR", "string");
	this.dsInsert.addColumn("AM_LOAN", "bigdecimal");
	this.dsInsert.addColumn("DT_LOAN", "string");
	this.dsInsert.addColumn("TY_LS", "string");
	this.dsInsert.addColumn("TY_CN", "string");
	this.dsInsert.addColumn("TY_INT", "string");
	this.dsInsert.addColumn("RT_LOAN", "bigdecimal");
	this.dsInsert.addColumn("RT_OVER", "bigdecimal");
	this.dsInsert.addColumn("DT_FR_INT", "string");
	this.dsInsert.addColumn("DT_TO_INT", "string");
	this.dsInsert.addColumn("DT_REPAY_CONT", "string");
	this.dsInsert.addColumn("DT_REQUEST", "string");
	this.dsInsert.addColumn("RM_ETC", "string");
	this.dsInsert.addColumn("ID_INSERT", "string");

	this.dsUpdate = new Dataset();
	this.dsUpdate.addColumn("CD_LOAN", "int");
	this.dsUpdate.addColumn("CD_FIELD", "string");
	this.dsUpdate.addColumn("TY_LOAN", "string");
	this.dsUpdate.addColumn("TY_LOAND", "string");
	this.dsUpdate.addColumn("CD_VENDOR", "string");
	this.dsUpdate.addColumn("CD_PAY_VENDOR", "string");
	this.dsUpdate.addColumn("AM_LOAN", "bigdecimal");
	this.dsUpdate.addColumn("DT_LOAN", "string");
	this.dsUpdate.addColumn("TY_LS", "string");
	this.dsUpdate.addColumn("TY_CN", "string");
	this.dsUpdate.addColumn("TY_INT", "string");
	this.dsUpdate.addColumn("RT_LOAN", "bigdecimal");
	this.dsUpdate.addColumn("RT_OVER", "bigdecimal");
	this.dsUpdate.addColumn("DT_FR_INT", "string");
	this.dsUpdate.addColumn("DT_TO_INT", "string");
	this.dsUpdate.addColumn("DT_REPAY_CONT", "string");
	this.dsUpdate.addColumn("DT_REQUEST", "string");
	this.dsUpdate.addColumn("RM_ETC", "string");
	this.dsUpdate.addColumn("ID_INSERT", "string");

	this.dsDelete = new Dataset();
	this.dsDelete.addColumn("CD_LOAN", "int");
	
	this.dsSlip = new Dataset();
	this.dsSlip.addColumn("CD_LOAN", "int");
	this.dsSlip.addColumn("CD_DEPT_BH", "string");
	this.dsSlip.addColumn("ID_USER", "string");
	
	this.dsCancel = new Dataset();
	this.dsCancel.addColumn("CD_LOAN", "int");
	this.dsCancel.addColumn("ID_USER", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();

	this.dsSelect.setColumn(0, "CD_LOAN", this.dsList.getColumn(0, "CD_LOAN"));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	this.dsList.clearData();
	this.dsList.addRow();
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.fnDelCallback = function(strId, val)
	{
		if(val == true)
		{
			this.fnDelete();
		}
	}

	this.gfnConfirm("삭제를 진행하시겠습니까?", "fnDelCallback");
	
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	if(!this.fnSaveValidate()) return;

	if(!this.gfnIsNull(this.dsList.getColumn(0, "CD_LOAN")) && this.dsList.getColumn(0, "CD_LOAN") != "")
	{
		this.fnUpdate();
	}
	else
	{
		this.fnInsert();
	}
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

this.fnInsert = function() {
	this.dsInsert.clearData();
	
	var nrow = this.dsInsert.addRow();
	this.dsInsert.setColumn(nrow, "CD_FIELD", this.dsList.getColumn(0, "CD_FIELD"));
	this.dsInsert.setColumn(nrow, "TY_LOAN", this.dsList.getColumn(0, "TY_LOAN"));
	this.dsInsert.setColumn(nrow, "TY_LOAND", this.dsList.getColumn(0, "TY_LOAND"));
	this.dsInsert.setColumn(nrow, "CD_VENDOR", this.dsList.getColumn(0, "CD_VENDOR"));
	this.dsInsert.setColumn(nrow, "CD_PAY_VENDOR", this.dsList.getColumn(0, "CD_PAY_VENDOR"));
	this.dsInsert.setColumn(nrow, "AM_LOAN", this.dsList.getColumn(0, "AM_LOAN"));
	this.dsInsert.setColumn(nrow, "DT_LOAN", this.dsList.getColumn(0, "DT_LOAN"));
	this.dsInsert.setColumn(nrow, "TY_LS", this.dsList.getColumn(0, "TY_LS"));
	this.dsInsert.setColumn(nrow, "TY_CN", this.dsList.getColumn(0, "TY_CN"));
	this.dsInsert.setColumn(nrow, "TY_INT", this.dsList.getColumn(0, "TY_INT"));
	this.dsInsert.setColumn(nrow, "RT_LOAN", this.dsList.getColumn(0, "RT_LOAN"));
	this.dsInsert.setColumn(nrow, "RT_OVER", this.dsList.getColumn(0, "RT_OVER"));
	this.dsInsert.setColumn(nrow, "DT_FR_INT", this.dsList.getColumn(0, "DT_FR_INT"));
	this.dsInsert.setColumn(nrow, "DT_TO_INT", this.dsList.getColumn(0, "DT_TO_INT"));
	this.dsInsert.setColumn(nrow, "DT_REPAY_CONT", this.dsList.getColumn(0, "DT_REPAY_CONT"));
	this.dsInsert.setColumn(nrow, "DT_REQUEST", this.dsList.getColumn(0, "DT_REQUEST"));
	this.dsInsert.setColumn(nrow, "RM_ETC", this.dsList.getColumn(0, "RM_ETC"));
	this.dsInsert.setColumn(nrow, "ID_INSERT", this.AuthClient.ID_USER);
		
	if (this.dsInsert.rowcount == 0) return;
		
	var strSvcId    = "insert";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "insert=dsInsert";
	var outData     = "dsList=insert";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

this.fnUpdate = function() {
	this.dsUpdate.clearData();
	
	var nrow = this.dsUpdate.addRow();
	this.dsUpdate.setColumn(nrow, "CD_LOAN", this.dsList.getColumn(0, "CD_LOAN"));
	this.dsUpdate.setColumn(nrow, "CD_FIELD", this.dsList.getColumn(0, "CD_FIELD"));
	this.dsUpdate.setColumn(nrow, "TY_LOAN", this.dsList.getColumn(0, "TY_LOAN"));
	this.dsUpdate.setColumn(nrow, "TY_LOAND", this.dsList.getColumn(0, "TY_LOAND"));
	this.dsUpdate.setColumn(nrow, "CD_VENDOR", this.dsList.getColumn(0, "CD_VENDOR"));
	this.dsUpdate.setColumn(nrow, "CD_PAY_VENDOR", this.dsList.getColumn(0, "CD_PAY_VENDOR"));
	this.dsUpdate.setColumn(nrow, "AM_LOAN", this.dsList.getColumn(0, "AM_LOAN"));
	this.dsUpdate.setColumn(nrow, "DT_LOAN", this.dsList.getColumn(0, "DT_LOAN"));
	this.dsUpdate.setColumn(nrow, "TY_LS", this.dsList.getColumn(0, "TY_LS"));
	this.dsUpdate.setColumn(nrow, "TY_CN", this.dsList.getColumn(0, "TY_CN"));
	this.dsUpdate.setColumn(nrow, "TY_INT", this.dsList.getColumn(0, "TY_INT"));
	this.dsUpdate.setColumn(nrow, "RT_LOAN", this.dsList.getColumn(0, "RT_LOAN"));
	this.dsUpdate.setColumn(nrow, "RT_OVER", this.dsList.getColumn(0, "RT_OVER"));
	this.dsUpdate.setColumn(nrow, "DT_FR_INT", this.dsList.getColumn(0, "DT_FR_INT"));
	this.dsUpdate.setColumn(nrow, "DT_TO_INT", this.dsList.getColumn(0, "DT_TO_INT"));
	this.dsUpdate.setColumn(nrow, "DT_REPAY_CONT", this.dsList.getColumn(0, "DT_REPAY_CONT"));
	this.dsUpdate.setColumn(nrow, "DT_REQUEST", this.dsList.getColumn(0, "DT_REQUEST"));
	this.dsUpdate.setColumn(nrow, "RM_ETC", this.dsList.getColumn(0, "RM_ETC"));
	this.dsUpdate.setColumn(nrow, "ID_INSERT", this.AuthClient.ID_USER);
		
	if (this.dsUpdate.rowcount == 0) return;
		
	var strSvcId    = "update";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "update=dsUpdate";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

this.fnDelete = function()
{
	this.dsDelete.clearData();
	
	var nrow = this.dsDelete.addRow();
	this.dsDelete.setColumn(nrow, "CD_LOAN", this.dsList.getColumn(0, "CD_LOAN"));
	
	if (this.dsDelete.rowcount == 0) return;
		
	var strSvcId    = "delete";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "delete=dsDelete";
	var outData     = "dsList=delete";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

this.fnIssue = function()
{
	this.dsSlip.clearData();
	var nrow = this.dsSlip.addRow();

	this.dsSlip.setColumn(nrow, "CD_LOAN", this.dsList.getColumn(0, "CD_LOAN"));
	this.dsSlip.setColumn(nrow, "CD_DEPT_BH", this.AuthClient.CD_DEPT);
	this.dsSlip.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);


	if (this.dsSlip.rowcount == 0) return;
		
	var strSvcId    = "slip";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "slip=dsSlip";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

this.fnCancel = function()
{
	this.dsCancel.clearData();
	var nrow = this.dsCancel.addRow();
	
	this.dsCancel.setColumn(nrow, "CD_LOAN", this.dsList.getColumn(0, "CD_LOAN"));	
	this.dsCancel.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);

	if (this.dsCancel.rowcount == 0) return;
		
	var strSvcId    = "cancel";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "cancel=dsCancel";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}
/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
 this.fnSelectValidate = function() {
	var validate = true;
	
	return validate;
}
 
this.fnSaveValidate = function() {
	var validate = true;
	
	if(this.gfnIsNull(this.dsList.getColumn(0, "AM_LOAN")) 
	|| this.dsList.getColumn(0, "AM_LOAN") == "")
	{
		this.gfnAlert("대여금액을 입력해주십시오.");
		return false;
	}
	else if(this.gfnIsNull(this.dsList.getColumn(0, "DT_LOAN")) 
	|| this.dsList.getColumn(0, "DT_LOAN") == "")
	{
		this.gfnAlert("대여일자를 입력해주십시오.");
		return false;
	}
	else if(this.gfnIsNull(this.dsList.getColumn(0, "CD_FIELD")) 
	|| this.dsList.getColumn(0, "CD_FIELD") == "")
	{
		this.gfnAlert("현장코드를 입력해주십시오.");
		return false;
	}
	
	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		if(!this.gfnIsNull(this.dsList.getColumn(0, "TY_LOAN")))
		{
			this.divData.form.ccfTY_LOAN.form.fnCodeFindLoad();
			if(!this.gfnIsNull(this.dsList.getColumn(0, "TY_LOAND")))
			{
				this.divData.form.ccfTY_LOAND.form.fnCodeFindLoad();  
			}
		}
	}
	else if(svcID == "insert" || svcID == "update" || svcID == "delete")
	{
		if(errorCode == 0)
		{
			this.fnCloseCallback = function()
			{
				this.getParentContext().close();
			}
			
			this.gfnAlert("정상적으로 처리되었습니다.", "fnCloseCallback");
		}
		else
		{
			this.gfnAlert(errorMsg);
			return false;
		}
	}
	else if(svcID == "slip")
	{
		if(errorCode == 0)
		{
			this.fnSlipCallback = function()
			{
				this.FormBtns.Select.click();
			}
		
			this.gfnAlert("전표발행이 정상 처리되었습니다.", "fnSlipCallback");
		}
		else
		{
			this.gfnAlert(errorMsg);
			return false;
		}
	}
	else if(svcID == "cancel")
	{
		if(errorCode == 0)
		{
			this.fnSlipCallback = function()
			{
				this.FormBtns.Select.click();
			}
		
			this.gfnAlert("전표취소가 정상 처리되었습니다.", "fnSlipCallback");
		}
		else
		{
			this.gfnAlert(errorMsg);
			return false;
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	
	if (id == "ccfTY_LOAND") {
		var ty_loan = this.dsList.getColumn(0, "TY_LOAN");
		if(this.gfnIsNull(ty_loan)) {
			this.gfnAlert("대여금 구분을 먼저 입력해주십시오.");
			return false;
		}
		
		dsUserParam.setColumn(nrow, "TY_LOAN", this.dsList.getColumn(0, "TY_LOAN"));
	}
	return true;
}

this.fnAfterCDTextChanged = function(id, codeFindData) {
	if(id == "ccfTY_LOAN") {
		// 변경시 초기화
		this.divData.form.ccfTY_LOAND.form.fnCodeFindClear();
	}
}


/************************************************************************
 * 그리드 이벤트
 ************************************************************************/

/************************************************************************
 * 기타 이벤트
 ************************************************************************/

this.dsList_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue)
	{
		this.gfnSetFormStatus(this, "U");
	}
};


this.fnSlipDetail = function() 
{
	var param = {};
	param.CD_TRADE = this.dsList.getColumn(0, "CD_TRADE");
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DHA_ISSUESLIP", "", param);
}
]]></Script>
    <Objects>
      <Dataset id="dsList" onvaluechanged="dsList_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_LOAN" type="INT" size="256"/>
          <Column id="CD_FIELD" type="STRING" size="256"/>
          <Column id="DS_FIELD" type="STRING" size="256"/>
          <Column id="TY_LOAN" type="STRING" size="256"/>
          <Column id="DS_LOAN" type="STRING" size="256"/>
          <Column id="CD_VENDOR" type="STRING" size="256"/>
          <Column id="DS_VENDOR" type="STRING" size="256"/>
          <Column id="CD_PAY_VENDOR" type="STRING" size="256"/>
          <Column id="DS_PAY_VENDOR" type="STRING" size="256"/>
          <Column id="AM_LOAN" type="INT" size="256"/>
          <Column id="DT_LOAN" type="STRING" size="256"/>
          <Column id="DT_REQUEST" type="STRING" size="256"/>
          <Column id="TY_LS" type="STRING" size="256"/>
          <Column id="TY_CN" type="STRING" size="256"/>
          <Column id="TY_INT" type="STRING" size="256"/>
          <Column id="RT_LOAN" type="INT" size="256"/>
          <Column id="RT_OVER" type="INT" size="256"/>
          <Column id="DT_FR_INT" type="STRING" size="256"/>
          <Column id="DT_TO_INT" type="STRING" size="256"/>
          <Column id="DT_REPAY_CONT" type="STRING" size="256"/>
          <Column id="DT_EXPIRE" type="STRING" size="256"/>
          <Column id="RM_ETC" type="STRING" size="256"/>
          <Column id="CD_TRADE" type="STRING" size="256"/>
          <Column id="TY_LOAND" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DOEPR_REG_LOAN_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">insert</Col>
            <Col id="SP">DOEPR_REG_LOAN_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">delete</Col>
            <Col id="SP">DOEPR_REG_LOAN_DELETE</Col>
          </Row>
          <Row>
            <Col id="TARGET">update</Col>
            <Col id="SP">DOEPR_REG_LOAN_UPDATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">slip</Col>
            <Col id="SP">DOEPR_AUTOSLIP_ISSUE</Col>
          </Row>
          <Row>
            <Col id="TARGET">cancel</Col>
            <Col id="SP">DOEPR_AUTOSLIP_ISSUE_CANCEL</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_INT">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">Y</Col>
            <Col id="DS_CODE">유이자</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">N</Col>
            <Col id="DS_CODE">무이자</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_CN">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="DS_CODE">현금</Col>
            <Col id="CD_CODE">C</Col>
          </Row>
          <Row>
            <Col id="DS_CODE">어음</Col>
            <Col id="CD_CODE">N</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_LS">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">L</Col>
            <Col id="DS_CODE">장기</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">S</Col>
            <Col id="DS_CODE">단기</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divData.form.ccfTY_LOAN.form.CDTextBox" propid="value" datasetid="dsList" columnid="TY_LOAN"/>
      <BindItem id="item1" compid="divData.form.ccfTY_LOAN.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_LOAN"/>
      <BindItem id="item2" compid="divData.form.ccfCD_VENDOR.form.CDTextBox" propid="value" datasetid="dsList" columnid="CD_VENDOR"/>
      <BindItem id="item3" compid="divData.form.ccfCD_VENDOR.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_VENDOR"/>
      <BindItem id="item4" compid="divData.form.ccfCD_PAY_VENDOR.form.CDTextBox" propid="value" datasetid="dsList" columnid="CD_PAY_VENDOR"/>
      <BindItem id="item5" compid="divData.form.ccfCD_PAY_VENDOR.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_PAY_VENDOR"/>
      <BindItem id="item6" compid="divData.form.crdoTY_INT" propid="value" datasetid="dsList" columnid="TY_INT"/>
      <BindItem id="item7" compid="divData.form.ctxtRT_LOAN" propid="value" datasetid="dsList" columnid="RT_LOAN"/>
      <BindItem id="item8" compid="divData.form.crdoTY_CN" propid="value" datasetid="dsList" columnid="TY_CN"/>
      <BindItem id="item9" compid="divData.form.ctclDT_FR_INT" propid="value" datasetid="dsList" columnid="DT_FR_INT"/>
      <BindItem id="item10" compid="divData.form.ctclDT_TO_INT" propid="value" datasetid="dsList" columnid="DT_TO_INT"/>
      <BindItem id="item11" compid="divData.form.ctxtRM_ETC" propid="value" datasetid="dsList" columnid="RM_ETC"/>
      <BindItem id="item12" compid="divData.form.ctxtAM_LOAN" propid="value" datasetid="dsList" columnid="AM_LOAN"/>
      <BindItem id="item13" compid="divData.form.ctclDT_LOAN" propid="value" datasetid="dsList" columnid="DT_LOAN"/>
      <BindItem id="item14" compid="divData.form.crdoTY_LS" propid="value" datasetid="dsList" columnid="TY_LS"/>
      <BindItem id="item15" compid="divData.form.ctxtRT_OVER" propid="value" datasetid="dsList" columnid="RT_OVER"/>
      <BindItem id="item16" compid="divData.form.ctclDT_REPAY_CONT" propid="value" datasetid="dsList" columnid="DT_REPAY_CONT"/>
      <BindItem id="item17" compid="divData.form.ctclDT_EXPIRE" propid="value" datasetid="dsList" columnid="DT_EXPIRE"/>
      <BindItem id="item18" compid="divSearch.form.ctxtNO_SLIP" propid="value" datasetid="dsList" columnid="CD_TRADE"/>
      <BindItem id="item19" compid="divSearch.form.ccfCD_FIELD.form.CDTextBox" propid="value" datasetid="dsList" columnid="CD_FIELD"/>
      <BindItem id="item20" compid="divSearch.form.ccfCD_FIELD.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_FIELD"/>
      <BindItem id="item21" compid="divData.form.ctclDT_REQUEST" propid="value" datasetid="dsList" columnid="DT_REQUEST"/>
      <BindItem id="item22" compid="divData.form.ccfTY_LOAND.form.CDTextBox" propid="value" datasetid="dsList" columnid="TY_LOAND"/>
    </Bind>
  </Form>
</FDL>
