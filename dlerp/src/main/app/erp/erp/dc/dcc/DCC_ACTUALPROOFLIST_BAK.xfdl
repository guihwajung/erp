<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="DCC_ACTUALPROOFLIST" width="1280" height="720" titletext="New Form" onload="DCC_ACTUALPROOFLIST_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="142.0" right="0" cssclass="div_SEARCH_Bg" formscrollbartype="auto auto">
          <Layouts>
            <Layout>
              <Static id="staYR_MAGAM" taborder="0" text="해당년도" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ctcYR_MAGAM" taborder="1" left="staYR_MAGAM:0.0" top="10.0" width="100" height="24.0" url="cmm::cmmCalYY.xfdl" text=""/>
              <Static id="staCD_SITE" taborder="2" text="현장코드" left="ctcYR_MAGAM:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_SITE" CodeFindName="DZX_CFSITE" CDTextWidth="80" taborder="3" FitToContents="true" left="staCD_SITE:0.0" top="10.0" width="310" height="24.0" AutoSet="false" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staID_DAM" taborder="4" text="면허" left="ccfCD_SITE:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Combo id="cboCD_LICENCE" taborder="5" left="staID_DAM:0.0" top="10.0" width="165" height="24.0" innerdataset="dsCD_LICENSE" codecolumn="CD_CODE" datacolumn="DS_CODE"/>
              <Static id="staCD_COSTCLASS" taborder="6" text="공종" left="0.0" top="staCD_SITE:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="cfCD_COSTCLASS" CodeFindName="DCX_CFCOSTCLASS_01" CDTextWidth="70" taborder="7" left="staCD_COSTCLASS:0.0" top="staYR_MAGAM:10.0" width="224" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staCD_LICCOST" taborder="8" text="하도공종" left="0.0" top="staCD_SITE:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="cfCD_LICCOST" CodeFindName="DCX_CFLICCOST_01" CDTextWidth="70" taborder="9" left="0.0" top="staYR_MAGAM:10.0" width="310" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staTY_STATUS" taborder="10" text="상태" left="cboCD_LICENCE:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Combo id="cboTY_STATUS" taborder="11" left="staTY_STATUS:0.0" top="10.0" width="165" height="24.0" innerdataset="dsTY_STATUS" codecolumn="CD_CODE" datacolumn="DS_CODE"/>
              <Static id="staDS_VENDOR" taborder="12" text="업체명" left="0.0" top="staID_DAM:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Edit id="txtDS_VENDOR" taborder="13" left="0.0" top="staYR_MAGAM:10.0" width="216" height="24.0" value=""/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0" oncelldblclick="divData_objGrid_oncelldblclick"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DCCPR_ACTUALPROOFLIST_SELET</Col>
          </Row>
          <Row>
            <Col id="TARGET">create</Col>
            <Col id="SP">DCCPR_ACTUALPROOF_CREATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo</Col>
            <Col id="SP">DZXPR_COMBO_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">signSave</Col>
            <Col id="SP">DCCPR_ACTUALPROOF_SIGN_SAVE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_COSTCLASS" type="STRING" size="256"/>
          <Column id="CD_LICCOST" type="STRING" size="256"/>
          <Column id="CD_LICENSE" type="STRING" size="256"/>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="WORKYEAR" type="STRING" size="256"/>
          <Column id="DS_VENDOR" type="STRING" size="256"/>
          <Column id="TY_STATUS" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_COSTCLASS"/>
            <Col id="CD_LICCOST"/>
            <Col id="CD_LICENSE"/>
            <Col id="CD_SITE"/>
            <Col id="WORKYEAR"/>
            <Col id="DS_VENDOR"/>
            <Col id="TY_STATUS"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsCD_LICENSE">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsTY_STATUS">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.DCC_ACTUALPROOFLIST_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	this.fnSetCombo();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
	// this.FormBtns.Add.set_enable(false);
	// this.FormBtns.Del.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnCreate = this.gfnFormButtonAdd("btnCreate", "fnCreate");
	this.btnReqAgree = this.gfnFormButtonAdd("btnReqAgree", "fnReqAgree");
	this.btnOzReport = this.gfnFormButtonAdd("btnOzReport", "fnOzReport");
	
	this.btnDetail = this.gfnFormButtonAdd("btnDetail", "divData_objGrid_oncelldblclick");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {	
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DC", "DCC_ACTUALPROOFLIST");
	this.divSearch.form.cfCD_LICCOST.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";	
	
	var colCHK = this.dxGrid.getBindCellIndex("body","CHK"); 
    this.dxGrid.setCellProperty("body", colCHK, "edittype", "expr: YN_EDIT == 'N' ?'none':'checkbox'");
	
	this.dxGrid.addEventHandler("onselectchanged", this.fnGrid_RowCellChanged, this);	
	this.dxGrid.EnterCell = "fnGrid_EnterCell";
};

this.fnGrid_RowCellChanged = function(obj:nexacro.Grid,e:nexacro.GridSelectEventInfo, event:nexacro.KeyEventInfo)
{
	if ((obj.oldrow > -1 && obj.oldrow == e.row)
		|| (obj.oldrow == -1 && e.oldrow != e.row)) {
		var colnm = this.gfnGridGetBindColumnNameByIndex(obj, e.cell);
		
		var event = nexacro.KeyEventInfo;
		
		var rows = this.dxGrid.getSelectedDatasetRows();
		
		this.dsList.set_enableevent(false);
		for(var i = 0; i < this.dsList.rowcount; i++)
		{
			var check = false;
			
			if(this.gfnGetFlag(this.dsList, i) != "#")
			{
				if(colnm == "CHK")
				{
					check = true;
					break;
				}
				
				if(rows.length > 0)
				{
					for(var j = 0; j < rows.length ; j++)
					{
						if(i == e.row || i == rows[j])
						{
							check = true;
							this.dsList.setColumn(i, "CHK", 1);
						}
					}
				}
				else
				{
					if(i == e.row)
					{
						check = true;
						this.dsList.setColumn(i, "CHK", 1);
					}
				}
				
				if(check == false)
				{
					this.dsList.setColumn(i, "CHK", 0);
				}
			}
		}
		this.dsList.set_enableevent(true);
		
		obj.oldrow = -1;
	}
}

// cell 클릭했을때 이벤트(해당 cell에 대한 이벤트를 건다)
this.fnGrid_EnterCell = function(obj:nexacro.Grid, row, cell) {
	// 수정가능 true, false 처리하려는 컬럼에 대해서만 return 처리할것. 
	var colnm = this.gfnGridGetBindColumnNameByIndex(this.dxGrid, cell);	// 클릭한 cell의 컬럼명
	
	if(colnm == "CHK") {
		return;
	}
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	
	this.dsSelect = new Dataset();
	
	this.dsSelect.addColumn("CD_COSTCLASS", "string");
	this.dsSelect.addColumn("CD_LICCOST", "string");
	this.dsSelect.addColumn("CD_LICENSE", "string");
	this.dsSelect.addColumn("CD_SITE", "string");
	this.dsSelect.addColumn("WORKYEAR", "string");
	this.dsSelect.addColumn("DS_VENDOR", "string");
	this.dsSelect.addColumn("TY_STATUS", "string");
	
	var lastYear = this.gfnGetDate().substr(0,4) - 1;
	this.dsSearch.setColumn(0, "WORKYEAR", lastYear);
	
	this.dsSign = new Dataset();
	this.dsSign.addColumn("ENO_SEQ", "string");
	this.dsSign.addColumn("CD_VENDOR", "string");
	this.dsSign.addColumn("SIGN_STATUS", "string");
	this.dsSign.addColumn("DS_HASHVAL", "string");
	this.dsSign.addColumn("DS_SIGNVAL", "string");
	this.dsSign.addColumn("DN_CERTORGNAME", "string");
	this.dsSign.addColumn("DN_SIGNNAME", "string");
	this.dsSign.addColumn("ID_SIGN", "string");
	
	this.dsCreate = new Dataset();
	this.dsCreate.addColumn("WORKYEAR", "string");
	this.dsCreate.addColumn("ID_USER", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 
 this.fnSetCombo = function()
{
	this.dsCombo = new Dataset();
	this.dsCombo.addColumn("CD_SYSTEM", "string");
	this.dsCombo.addColumn("CD_TYPE", "string");
	
	this.dsCombo.addRow();	
	this.dsCombo.setColumn(0, "CD_SYSTEM", "DC");
	this.dsCombo.setColumn(0, "CD_TYPE", "C02");
	
	this.dsCombo.addRow();	
	this.dsCombo.setColumn(1, "CD_SYSTEM", "DC");
	this.dsCombo.setColumn(1, "CD_TYPE", "C50");
	
	var strSvcId    = "combo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "combo=dsCombo";
	var outData     = "dsCD_LICENSE=combo0 dsTY_STATUS=combo1";
	var strArg      = "";
	var callBackFnc = "fnCallback";

	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}
 
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if(!this.fnValidate()) return;
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "CD_COSTCLASS", this.dsSearch.getColumn(0, "CD_COSTCLASS"));
	this.dsSelect.setColumn(0, "CD_LICCOST", this.dsSearch.getColumn(0, "CD_LICCOST"));
	this.dsSelect.setColumn(0, "CD_LICENSE", this.dsSearch.getColumn(0, "CD_LICENSE"));
	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsSelect.setColumn(0, "WORKYEAR", this.dsSearch.getColumn(0, "WORKYEAR"));
	this.dsSelect.setColumn(0, "DS_VENDOR", this.dsSearch.getColumn(0, "DS_VENDOR"));
	this.dsSelect.setColumn(0, "TY_STATUS", this.dsSearch.getColumn(0, "TY_STATUS"));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	this.gfnGridAdd(this.dxGrid);
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
		// 그리드 필수항목 체크
	if (!this.gfnGridValidate(this.dxGrid)) return;
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnValidate = function() {
	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") 
	{
		this.gfnGridAfterSelect(this.dxGrid);
	}
	else if(svcID == "combo") {
		if (errorCode == 0) {
			var nrow = this.dsTY_STATUS.insertRow(0);
			this.dsTY_STATUS.setColumn(nrow, "CD_CODE", "");
			this.dsTY_STATUS.setColumn(nrow, "DS_CODE", "전체");
			this.divSearch.form.cboTY_STATUS.set_index(0);
			
			var nrow2 = this.dsCD_LICENSE.insertRow(0);
			this.dsCD_LICENSE.setColumn(nrow2, "CD_CODE", "");
			this.dsCD_LICENSE.setColumn(nrow2, "DS_CODE", "전체");
			this.divSearch.form.cboCD_LICENCE.set_index(0);
		}
		else {
			this.gfnAlert(errorMsg);
		}
	}
	else if (svcID == "sign") {
		if(errorCode == 0)
		{
			this.fnSignSave();
		}else
		{
			this.gfnAlert(errorMsg);
		}
	}
	else if(svcID == "signSave") {
		if (errorCode == 0) {
			this.fnSignSaveCallback = function() {
				this.FormBtns.Select.click();
			}
			
			this.gfnAlert("합의요청이 완료 되었습니다.", "fnSignSaveCallback");
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	else if(svcID == "create") {
		if (errorCode == 0) {
			this.fnCreateCallback = function() {
				this.FormBtns.Select.click();
			}
			
			this.gfnAlert("자료 생성이 완료 되었습니다.", "fnCreateCallback");
		} else {
			this.gfnAlert(errorMsg);
		}
	}
};

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if (id == "cfCD_LICCOST") {		
		if(this.gfnIsNull(this.dsSearch.getColumn(0, "CD_COSTCLASS")))
		{
			this.gfnAlert("부문을 먼저 입력해주세요.");
			return false;
		}
		dsUserParam.setColumn(nrow, "COSTCLASS", this.dsSearch.getColumn(0, "CD_COSTCLASS"));		
	}
	return true;
};

this.fnAfterCDTextChanged = function(id){

};


/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		// 폼상태 초기화
		this.gfnSetFormStatus(this);	
		this.gfnGridClear(this.dxGrid);
	}
};

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
		
		if(e.columnid == "CD_COSTCLASS")
		{
			this.divSearch.form.cfCD_LICCOST.form.fnCodeFindClear();
		}
	}
};

/*
 *	자료생성
 */
this.fnCreate = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) 
{
	var msg =  "기존 생성된 계약 자료는 재 생성되지 않습니다."
			+ "\n기준년도 : ["+ this.dsSearch.getColumn(0, "WORKYEAR")  + "] 년도 실적자료를 집계 하시겠습니까?";
	
	this.gfnConfirm(msg, "fnCreate_callback");
}

this.fnCreate_callback = function(strId, val) {
	if(val == true) {
		this.dsCreate.clearData();
		var nrow = this.dsCreate.addRow();
		
		this.dsCreate.setColumn(nrow, "WORKYEAR", this.dsSearch.getColumn(0, "WORKYEAR"));
		this.dsCreate.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
		
		if (this.dsCreate.rowcount == 0) return;
		
		var strSvcId    = "create";
		var strSvcType  = "save";
		var inProc		= "_dsProc";
		var inData      = "create=dsCreate";
		var outData     = "";
		var strArg      = "";
		var callBackFnc = "fnCallback";
		
		this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
							strSvcType , 	// transaction을 요청할 구분
							inProc,			// Procedure 정보 Dataset 이름
							inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
							outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
							strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
							callBackFnc); // 통신방법 정의 [생략가능]
	}
}

this.fnOzReport = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	var param = {};
	
	var strSiljukGubun = this.dsList.getColumn(this.dsList.rowposition, "DS_ETC2");
	
	if(this.gfnIsNull(strSiljukGubun)) {
		this.gfnAlert("면허를 선택하여 실적양식을 지정하십시오.");
		return;
	}
	
	var strReportName = "";
	
	if(strSiljukGubun == "SC051010") strReportName = '/dp/scjaSC051010p.ozr';      // 대한전문건설협회
	else if(strSiljukGubun == "SC051020") strReportName = '/dp/scjaSC051020p.ozr'; // 대한설비건설협회
	else if(strSiljukGubun == "SC051030") strReportName = '/dp/scjaSC051030p.ozr'; // 한국전기공사협회
	else if(strSiljukGubun == "SC051040") strReportName = '/dp/scjaSC051040p.ozr'; // 한국정보통신공사협회
	else if(strSiljukGubun == "SC051050") strReportName = '/dp/scjaSC051050p.ozr'; // 대한시설물유지관리협회
	else if(strSiljukGubun == "SC051060") strReportName = '/dp/scjaSC051010p.ozr'; // 한국엔지니어링진흥협회
    else if(strSiljukGubun == "SC051070") strReportName = '/dp/scjaSC051070p.ozr'; // 한국소방안전협회
    else if(strSiljukGubun == "SC051080") strReportName = '/dp/scjaSC051080p.ozr'; // 대한건설협회
	
	param.REPORT_NAME = strReportName;
	
	// 테스트용
	var strENO_SEQ = this.dsList.getColumn(this.dsList.rowposition, "ENO_SEQ");
	
	param.JSONPARAM = "{\"addSql\":\""+ strENO_SEQ + "\" , \"wsvrUrl\":\""+ this.gfnGetServerUrl() +"/images/ingam.png\"}";
	
	this.gfnFormOpenNonAuth("DZU", "DZU_OZ", "", param, 900, 650);
}

this.divData_objGrid_oncelldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	var nRow = this.dsList.rowposition;
	var param = {};
	param.WORKYEAR = this.dsList.getColumn(nRow, "WORKYEAR");
	param.CD_VENDOR = this.dsList.getColumn(nRow, "CD_VENDOR");
	param.DS_VENDOR = this.dsList.getColumn(nRow, "DS_VENDOR");
	param.ENO_SEQ = this.dsList.getColumn(nRow, "ENO_SEQ");
	param.DS_STATUS = this.dsList.getColumn(nRow, "DS_STATUS");
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DCC_ACTUALPROOF", "fnActualproof_callback", param, 1300, 750);
};

this.fnActualproof_callback = function()
{
	this.FormBtns.Select.click();
}

this.fnReqAgree = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) 
{
	var strTY_STATUS = this.dsSearch.getColumn(0, "TY_STATUS");
	
	if(strTY_STATUS == "SC05010" || strTY_STATUS == "SC05015")
	{
		var msg = "선택항목을 합의 요청 하시겠습니까?";
			
		this.gfnConfirm(msg, "fnSign_callback", "");
	}
	else{
		this.gfnAlert("승인대기 또는 수정요청자료 조회 후 작업 가능합니다.");
		return;
	}
}

this.fnSign_callback = function(strId, val) 
{
	if(val == true) 
	{
		this.dsSign.clearData();
		
		for(var i = 0; i < this.dsList.rowcount; i++)
		{
			if(this.dsList.getColumn(i, "CHK") != 1) continue;
			
			var arrVal	= [];
			var arrSign = [];
			var arrEtc 	= [];
			
			arrVal.push(this.dsList.getColumn(i,"NO_CONT"));
			arrVal.push(this.dsList.getColumn(i,"WORKYEAR"));
			arrVal.push(this.dsList.getColumn(i,"SN_SEQ"));
			arrVal.push(this.dsList.getColumn(i,"ENO_SEQ"));
			arrVal.push(this.dsList.getColumn(i,"CD_SITE"));
			arrVal.push(this.dsList.getColumn(i,"TY_STATUS"));
			arrVal.push(this.dsList.getColumn(i,"CD_VENDOR"));
			arrVal.push(this.dsList.getColumn(i,"DS_VENDOR"));
			arrVal.push(this.dsList.getColumn(i,"CD_LICCOST"));
			arrVal.push(this.dsList.getColumn(i,"SUPDEPTCD"));
			arrVal.push(this.dsList.getColumn(i,"SUPUSERID"));
			arrVal.push(this.dsList.getColumn(i,"RESNO"));
			arrVal.push(this.dsList.getColumn(i,"PROOFUSERID"));
			arrVal.push(this.dsList.getColumn(i,"PROOFDATE"));
			arrVal.push(this.dsList.getColumn(i,"TRADEUSERID"));
			arrVal.push(this.dsList.getColumn(i,"REPNM"));
			arrVal.push(this.dsList.getColumn(i,"TELNO"));
			arrVal.push(this.dsList.getColumn(i,"ADDR"));
			arrVal.push(this.dsList.getColumn(i,"CD_LICNO"));
			arrVal.push(this.dsList.getColumn(i,"BIZTYPENM"));
			arrVal.push(this.dsList.getColumn(i,"PERMORG"));
			arrVal.push(this.dsList.getColumn(i,"PERMYMD"));
			arrVal.push(this.dsList.getColumn(i,"ETC"));
			arrVal.push(this.dsList.getColumn(i,"SEQNUM"));
			arrVal.push(this.dsList.getColumn(i,"REPORTNUM"));
			arrVal.push(this.dsList.getColumn(i,"REGNUM"));
			arrVal.push(this.dsList.getColumn(i,"CONTTYPE"));
			arrVal.push(this.dsList.getColumn(i,"TOTCONTAMT"));
			arrVal.push(this.dsList.getColumn(i,"YEARBEGCONTAMT"));
			arrVal.push(this.dsList.getColumn(i,"CURYEARCONTAMT"));
			arrVal.push(this.dsList.getColumn(i,"CURCONNETAMT"));
			arrVal.push(this.dsList.getColumn(i,"CURYEARACCAMT"));
			arrVal.push(this.dsList.getColumn(i,"PREYEARACCAMT"));
			arrVal.push(this.dsList.getColumn(i,"CURYEARACCPAY"));
			arrVal.push(this.dsList.getColumn(i,"PREYEARACCPAY"));
			arrVal.push(this.dsList.getColumn(i,"ORDAMT"));
			arrVal.push(this.dsList.getColumn(i,"TOTCONAMT"));
			arrVal.push(this.dsList.getColumn(i,"YETACCAMT"));
			arrVal.push(this.dsList.getColumn(i,"PREYEARTRANAMT"));
			arrVal.push(this.dsList.getColumn(i,"SUBCONTAMT"));
			arrVal.push(this.dsList.getColumn(i,"GOVAMT"));
			arrVal.push(this.dsList.getColumn(i,"OTHPROACCAMT"));
			arrVal.push(this.dsList.getColumn(i,"CURYEARADDAMT"));
			
			var nrow = this.dsSign.addRow();
			this.dsSign.setColumn(nrow, "DS_HASHVAL", arrVal.join("/"));
			
			this.dsSign.setColumn(nrow,"ENO_SEQ", this.dsList.getColumn(i, "ENO_SEQ"));
			this.dsSign.setColumn(nrow,"CD_VENDOR", "000000");
			this.dsSign.setColumn(nrow,"SIGN_STATUS", "SC05040");
			this.dsSign.setColumn(nrow,"ID_SIGN",this.AuthClient.ID_USER);
		}
		
		var strSvcId    = "sign";
		var strSvcType  = "pki/sign";
		var inProc		= "";
		var inData      = "input=dsSign";
		var outData     = "dsSign=output0";
		var strArg      = "";
		var callBackFnc = "fnCallback";
		
		this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
							strSvcType , 	// transaction을 요청할 구분
							inProc,			// Procedure 정보 Dataset 이름
							inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
							outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
							strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
							callBackFnc); // 통신방법 정의 [생략가능]
	};
};

this.fnSignSave = function() 
{
	var strSvcId    = "signSave";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "signSave=dsSign";
	var outData     = "dsSign=signSave";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};]]></Script>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ctcYR_MAGAM.form.TextBox" propid="value" datasetid="dsSearch" columnid="WORKYEAR"/>
      <BindItem id="item1" compid="divSearch.form.cboCD_LICENCE" propid="value" datasetid="dsSearch" columnid="CD_LICENSE"/>
      <BindItem id="item2" compid="divSearch.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item3" compid="divSearch.form.cfCD_COSTCLASS.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_COSTCLASS"/>
      <BindItem id="item5" compid="divSearch.form.cfCD_LICCOST.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_LICCOST"/>
      <BindItem id="item7" compid="divSearch.form.cboTY_STATUS" propid="value" datasetid="dsSearch" columnid="TY_STATUS"/>
      <BindItem id="item8" compid="divSearch.form.txtDS_VENDOR" propid="value" datasetid="dsSearch" columnid="DS_VENDOR"/>
    </Bind>
  </Form>
</FDL>
