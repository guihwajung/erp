<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="DWA_SILHENG" width="950" height="550" titletext="New Form" onload="DWA_SILHENG_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="1" left="0.0" top="10.0" height="78.0" right="0" cssclass="div_SEARCH_Bg" formscrollbartype="auto auto">
          <Layouts>
            <Layout>
              <Static id="staCD_SITE" taborder="4" text="현장코드" left="0.0" top="10.0" width="118.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Edit id="edtCD_SITE" taborder="0" left="staCD_SITE:0.0" top="staCD_SITE:10.0" width="100" height="24.0" readonly="true"/>
              <Edit id="edtDS_SITE" taborder="1" left="edtCD_SITE:0.0" top="staCD_SITE:10.0" width="258" height="24.0" readonly="true"/>
              <Static id="staCD_SITE00" taborder="5" text="발주의뢰번호" left="edtDS_SITE:0.0" top="10.0" width="118.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Edit id="edtNO_BID" taborder="2" left="staCD_SITE00:0.0" top="staCD_SITE:10.0" width="100" height="24.0" readonly="true"/>
              <Edit id="edtDS_SUBCON" taborder="3" left="edtNO_BID:0.0" top="staCD_SITE:10.0" width="283" height="24.0" readonly="true"/>
              <Static id="staCD_SITE01" taborder="6" text="부문" left="edtDS_SUBCON:0.0" top="staCD_SITE:10.0" width="118.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Static id="staCD_SITE02" taborder="7" text="등록구분" left="staCD_SITE01:0.0" top="staCD_SITE:10.0" width="118.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Combo id="cboCD_COSTCLASS" taborder="8" left="staCD_SITE:0.0" top="staCD_SITE:10.0" width="100" height="24.0" datacolumn="DS_CODE" codecolumn="CD_CODE" innerdataset="dsCD_COSTCLASS"/>
              <Combo id="cboCD_LICCOST" taborder="9" left="cboCD_COSTCLASS:0.0" top="staCD_SITE:10.0" width="176" height="24.0" datacolumn="DS_CODE" codecolumn="CD_CODE" innerdataset="dsCD_LICCOST"/>
              <Combo id="ccboYN_REGIST" taborder="10" left="staCD_SITE02:0.0" top="staCD_SITE:10.0" width="99" innerdataset="dsYN_REGIST" height="24.0" codecolumn="CD_CODE" datacolumn="DS_CODE"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" right="0" cssclass="div_DATA_Bg" height="450" top="divSearch:10">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DCBPR_RECVENDOR_SITE_SELECT</Col>
          </Row>
          <Row>
            <Col id="SP">DCBPR_RECOMMEND_SITE_INSERT</Col>
            <Col id="TARGET">insert</Col>
          </Row>
          <Row>
            <Col id="TARGET">update</Col>
            <Col id="SP">DCBPR_RECOMMEND_SITE_UPDATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">delete</Col>
            <Col id="SP">DCBPR_RECOMMEND_SITE_DELETE</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo</Col>
            <Col id="SP">DZXPR_COMBO_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo1</Col>
            <Col id="SP">DMXPR_LICCOST_COMBO_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo2</Col>
            <Col id="SP">DCXPR_LICCOST_COMBO_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">selectCCDC</Col>
            <Col id="SP">DCZPR_COSTCLASS_COMBO_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="DS_SITE" type="STRING" size="256"/>
          <Column id="NO_BID" type="STRING" size="256"/>
          <Column id="DS_SUBCON" type="STRING" size="256"/>
          <Column id="CD_COSTCLASS" type="STRING" size="256"/>
          <Column id="CD_LICCOST" type="STRING" size="256"/>
          <Column id="YN_REGIST" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_SITE"/>
            <Col id="YN_REGIST">Y</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsCD_COSTCLASS">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsCD_LICCOST">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsYN_REGIST">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">Y</Col>
            <Col id="DS_CODE">등록</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">N</Col>
            <Col id="DS_CODE">미등록</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.DWA_SILHENG_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();	
	
	this.fnSetCombo();
	
	this.dsSearch.setColumn(0, "CD_SITE", this.getOwnerFrame().CD_SITE);
	this.dsSearch.setColumn(0, "DS_SITE", this.getOwnerFrame().DS_SITE);
	this.dsSearch.setColumn(0, "NO_BID", this.getOwnerFrame().NO_BID);
	this.dsSearch.setColumn(0, "DS_SUBCON", this.getOwnerFrame().DS_SUBCON);
	this.dsSearch.setColumn(0, "CD_COSTCLASS", "");
	this.dsSearch.setColumn(0, "CD_LICCOST", "");
// 	this.dsSearch.setColumn(0, "CD_COSTCLASS", this.gfnNvl(this.getOwnerFrame().CD_COSTCLASS, ""));
// 	this.dsSearch.setColumn(0, "CD_LICCOST", this.gfnNvl(this.getOwnerFrame().CD_LICCOST, ""));
	
	this.FormBtns.Select.click();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
	// this.FormBtns.Add.set_enable(false);
	// this.FormBtns.Del.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.gfnGridInit(this.dxGrid, this.dsList, "DC", "DCB_RECOMMENDVENDOR_SITE");
	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
	this.dxGrid.AfterCDTextChanged = "fnGrid_AfterCDTextChanged";

};

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGrid_BeforeUserDataSetParam = function(id, dsUserParam, nrow) {	
	if (id == "DCX_VENDOR_RECOMMEND_SITE") 
	{
		dsUserParam.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
		dsUserParam.setColumn(nrow, "NO_BID", this.dsSearch.getColumn(0, "NO_BID"));
		dsUserParam.setColumn(nrow, "CD_COSTCLASS", this.dsSearch.getColumn(0, "CD_COSTCLASS"));
		dsUserParam.setColumn(nrow, "CD_LICCOST", this.dsSearch.getColumn(0, "CD_LICCOST"));
		dsUserParam.setColumn(nrow, "YN_REGIST", this.dsSearch.getColumn(0, "YN_REGIST")); 
 	}
	else if(id == "DCX_CFLICENSE_VENDOR")
	{
		dsUserParam.setColumn(nrow, "CD_VENDOR", this.dsList.getColumn(this.dsList.rowposition, "CD_VENDOR"));
	}
	return true;
}

this.fnGrid_AfterCDTextChanged = function(id, codeFindData) {
	var arr = codeFindData;
	
	if(arr.length > 0)
	{
		switch(id) {
			case "DCX_VENDOR_RECOMMEND_SITE":
				this.dsList.setColumn(this.dsList.rowposition, "CD_LICENSE", arr[0]["LCNS_NO"]);
				this.dsList.setColumn(this.dsList.rowposition, "DS_LICENSE", arr[0]["LCNS_NM"]);
				break;
		}
	}
};


/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_SITE", "string");
	this.dsSelect.addColumn("NO_BID", "string");

	this.dsInsert = new Dataset();
	this.dsInsert.addColumn("CD_SITE", "string");
	this.dsInsert.addColumn("NO_BID", "string");
	this.dsInsert.addColumn("ID_SABUN", "string");
	this.dsInsert.addColumn("CD_VENDOR", "string");
	this.dsInsert.addColumn("TY_RECOMMEND", "string");
	this.dsInsert.addColumn("DS_REASON", "string");
	this.dsInsert.addColumn("DS_HNAME", "string");
	this.dsInsert.addColumn("CD_DEPT", "string");
	this.dsInsert.addColumn("RM_REMARK", "string");
	this.dsInsert.addColumn("TY_WHERE", "string");
	this.dsInsert.addColumn("ID_USER", "string");
	this.dsInsert.addColumn("CD_LICENSE", "string");
	this.dsInsert.addColumn("AM_CONTLIMIT", "bigint");
	
	this.dsUpdate = new Dataset();
	this.dsUpdate.addColumn("CD_SITE", "string");
	this.dsUpdate.addColumn("NO_BID", "string");
	this.dsUpdate.addColumn("ID_SABUN", "string");
	this.dsUpdate.addColumn("CD_VENDOR", "string");
	this.dsUpdate.addColumn("TY_RECOMMEND", "string");
	this.dsUpdate.addColumn("DS_REASON", "string");
	this.dsUpdate.addColumn("DS_HNAME", "string");
	this.dsUpdate.addColumn("CD_DEPT", "string");
	this.dsUpdate.addColumn("RM_REMARK", "string");
	this.dsUpdate.addColumn("TY_WHERE", "string");
	this.dsUpdate.addColumn("ID_USER", "string");
	this.dsUpdate.addColumn("CD_LICENSE", "string");
	this.dsUpdate.addColumn("AM_CONTLIMIT", "bigint");

	this.dsDelete = new Dataset();
	this.dsDelete.addColumn("CD_SITE", "string");
	this.dsDelete.addColumn("NO_BID", "string");
	this.dsDelete.addColumn("CD_VENDOR", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if(!this.fnValidate()) return;

	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "CD_CODE", "00");
	
	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsSelect.setColumn(0, "NO_BID", this.dsSearch.getColumn(0, "NO_BID"));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	this.gfnGridAdd(this.dxGrid);
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
		// 그리드 필수항목 체크
	if (!this.gfnGridValidate(this.dxGrid)) return;	

	this.dxGrid.updateToDataset();
	
	this.dsInsert.clearData();
	this.dsUpdate.clearData();
	this.dsDelete.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		
		switch(flag) {
			case "I":
				
				var nrow = this.dsInsert.addRow();
				
				this.dsInsert.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
				this.dsInsert.setColumn(nrow, "NO_BID", this.dsSearch.getColumn(0, "NO_BID"));
				this.dsInsert.setColumn(nrow, "CD_VENDOR", this.dsList.getColumn(nrow, "CD_VENDOR"));
				this.dsInsert.setColumn(nrow, "TY_RECOMMEND", "추천");
				this.dsInsert.setColumn(nrow, "DS_REASON", this.dsList.getColumn(nrow, "DS_REASON"));
				this.dsInsert.setColumn(nrow, "DS_HNAME", this.AuthClient.DS_HNAME);
				this.dsInsert.setColumn(nrow, "CD_DEPT", this.AuthClient.CD_DEPT);
				this.dsInsert.setColumn(nrow, "RM_REMARK", "");
				this.dsInsert.setColumn(nrow, "TY_WHERE", "2");
				this.dsInsert.setColumn(nrow, "CD_LICENSE", this.dsList.getColumn(nrow, "CD_LICENSE"));
				this.dsInsert.setColumn(nrow, "AM_CONTLIMIT", this.dsList.getColumn(nrow, "AM_CONTLIMIT"));
				this.dsInsert.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
				
			break;
			
			case "U":
			
				var nrow = this.dsUpdate.addRow();
				
				this.dsUpdate.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
				this.dsUpdate.setColumn(nrow, "NO_BID", this.dsSearch.getColumn(0, "NO_BID"));
				this.dsUpdate.setColumn(nrow, "CD_VENDOR", this.dsList.getColumn(nrow, "CD_VENDOR"));
				this.dsUpdate.setColumn(nrow, "TY_RECOMMEND", "추천");
				this.dsUpdate.setColumn(nrow, "DS_REASON", this.dsList.getColumn(nrow, "DS_REASON"));
				this.dsUpdate.setColumn(nrow, "DS_HNAME", this.AuthClient.DS_HNAME);
				this.dsUpdate.setColumn(nrow, "CD_DEPT", this.AuthClient.CD_DEPT);
				this.dsUpdate.setColumn(nrow, "RM_REMARK", "");
				this.dsUpdate.setColumn(nrow, "TY_WHERE", "2");
				this.dsUpdate.setColumn(nrow, "CD_LICENSE", this.dsList.getColumn(nrow, "CD_LICENSE"));
				this.dsUpdate.setColumn(nrow, "AM_CONTLIMIT", this.dsList.getColumn(nrow, "AM_CONTLIMIT"));
				this.dsUpdate.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
				
			break;
			
			case "D":
			
				var nrow = this.dsDelete.addRow();
				
				this.dsDelete.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
				this.dsDelete.setColumn(nrow, "NO_BID", this.dsSearch.getColumn(0, "NO_BID"));
				this.dsDelete.setColumn(nrow, "CD_VENDOR", this.dsList.getColumn(nrow, "CD_VENDOR"));
			
			break;
		}
	}

	if (this.dsInsert.rowcount == 0 && this.dsUpdate.rowcount == 0 && this.dsDelete.rowcount == 0) return;
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "insert=dsInsert update=dsUpdate delete=dsDelete";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
	
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnValidate = function() {
	/*
	if (this.gfnIsNull(this.ccfEvalueKind.form.CDTextBox.value)) {
		this.fnVaidateCallback = function() {
			this.ccfEvalueKind.form.CDTextBox.setFocus();
		}
		this.gfnAlert("평가기준코드를 입력하세요.");
		return false;
	}
	*/
	
	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
	
	}else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}else if(svcID == "combo")
	{
		if(errorCode == 0)
		{
			this.dsCD_COSTCLASS.insertRow(0);
			this.dsCD_COSTCLASS.setColumn(0, "CD_CODE", "");
			this.dsCD_COSTCLASS.setColumn(0, "DS_CODE", "전체");
			//this.divData.form.cboCD_COSTCLASS.set_index(0);
		}else
		{
			this.gfnAlert(errorMsg);
		}
	}
	else if(svcID == "combo1") {
		if (errorCode == 0) {
			this.dsCD_LICCOST.insertRow(0);
			this.dsCD_LICCOST.setColumn(0, "CD_CODE", "");
			this.dsCD_LICCOST.setColumn(0, "DS_CODE", "전체");
 			//this.divData.form.cboCD_LICCOST.set_index(0);
		}
	}
	
};

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	return true;
};

this.fnAfterCDTextChanged = function(id){

};


/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		// 폼상태 초기화
		this.gfnSetFormStatus(this);	
		this.gfnGridClear(this.dxGrid);
	}
};

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		if(e.columnid == "CD_COSTCLASS")
		{
			this.dsSearch.setColumn(0, "CD_LICCOST", "");
			this.fnSetCombo1();
		}
	}
};

this.fnSetCombo = function() {

	this.dsCombo = new Dataset();

	var inData      = "";
	var outData     = "";
	
	if(this.getOwnerFrame().CD_MODULE == "DC")
	{
		this.dsCombo.addRow();
		
		inData      = "selectCCDC=dsCombo";
		outData     = "dsCD_COSTCLASS=selectCCDC0";
	}
	else
	{
		this.dsCombo.addColumn("CD_SYSTEM", "string");
		this.dsCombo.addColumn("CD_TYPE", "string");
		this.dsCombo.addRow();
		
		this.dsCombo.setColumn(0, "CD_SYSTEM", "DM");
		this.dsCombo.setColumn(0, "CD_TYPE", "H01");
		inData      = "combo=dsCombo";
		outData     = "dsCD_COSTCLASS=combo0";
	}
	
	var strSvcId    = "combo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};

this.fnSetCombo1 = function()
{
	this.dsCombo = new Dataset();
	this.dsCombo.setColumn("CD_SYSTEM", "string");
	this.dsCombo.addColumn("CD_BUMUN", "string");
	
	this.dsCombo.addRow();
	
	if(this.getOwnerFrame().CD_MODULE == "DC")
	{
		this.dsCombo.setColumn(0, "CD_SYSTEM", "DC");
	}
	else
	{
		this.dsCombo.setColumn(0, "CD_SYSTEM", "DM");
	}
	this.dsCombo.setColumn(0, "CD_BUMUN", this.dsSearch.getColumn(0, "CD_COSTCLASS"));

	var strSvcId    = "combo1";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	
	var inData		= "";
	var outData     = "";
	
	if(this.getOwnerFrame().CD_MODULE == "DC")
	{
		inData      = "combo2=dsCombo";
		outData     = "dsCD_LICCOST=combo20";
	}
	else
	{
		inData      = "combo1=dsCombo";
		outData     = "dsCD_LICCOST=combo10";
	}
	
	
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}]]></Script>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.edtCD_SITE" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item1" compid="divSearch.form.edtDS_SITE" propid="value" datasetid="dsSearch" columnid="DS_SITE"/>
      <BindItem id="item2" compid="divSearch.form.edtNO_BID" propid="value" datasetid="dsSearch" columnid="NO_BID"/>
      <BindItem id="item3" compid="divSearch.form.edtDS_SUBCON" propid="value" datasetid="dsSearch" columnid="DS_SUBCON"/>
      <BindItem id="item4" compid="divSearch.form.cboCD_COSTCLASS" propid="value" datasetid="dsSearch" columnid="CD_COSTCLASS"/>
      <BindItem id="item5" compid="divSearch.form.cboCD_LICCOST" propid="value" datasetid="dsSearch" columnid="CD_LICCOST"/>
      <BindItem id="item6" compid="divSearch.form.ccboYN_REGIST" propid="value" datasetid="dsSearch" columnid="YN_REGIST"/>
    </Bind>
  </Form>
</FDL>
