<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="New Form" onload="form_onload">
    <Layouts>
      <Layout height="720" mobileorientation="landscape" width="1280">
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none" text="">
          <Layouts>
            <Layout>
              <Radio id="crdoTY_GUBUN" taborder="1" left="0.0" top="10.0" height="24.0" innerdataset="dsTY_GUBUN" direction="vertical" fittocontents="width" width="230" codecolumn="CODE" datacolumn="VALUE" value="B" text="입찰중" index="1"/>
              <Static id="staCD_SITE" taborder="2" text="현장코드" left="crdoTY_GUBUN:0.0" top="10.0" width="92.0" height="24.0" textDecoration="none" textAlign="center" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_SITE" FitToContents="true" CodeFindName="DZX_CFSITE" CDTextWidth="80" taborder="3" left="staCD_SITE:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staDT_FROM_TO" taborder="4" text="발주기간" left="ccfCD_SITE:0.0" top="10.0" width="92.0" height="24.0" textDecoration="none" textAlign="center" cssclass="sta_WF_SchLabel"/>
              <Calendar id="ctclDT_FROM" taborder="5" left="staDT_FROM_TO:0.0" top="10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" value="" enable="true"/>
              <Static id="sta00" taborder="6" text="~" left="ctclDT_FROM:0.0" top="10.0" width="30.0" height="24.0" cssclass="sta_WF_AC"/>
              <Calendar id="ctclDT_TO" taborder="7" left="sta00:0.0" top="10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" value="" enable="true"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="1" left="0" top="40" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item1" compid="divSearch.form.crdoCOLUMN" propid="value" datasetid="dsSearch" columnid="TY_GUBUN"/>
      <BindItem id="item2" compid="divSearch.form.ctclDT_FROM" propid="value" datasetid="dsSearch" columnid="DT_FROM"/>
      <BindItem id="item3" compid="divSearch.form.ctclDT_TO" propid="value" datasetid="dsSearch" columnid="DT_TO"/>
      <BindItem id="item4" compid="divSearch.form.ccfCD_SITE.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_SITE"/>
    </Bind>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();

};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	this.FormBtns.Add.set_enable(false);
	this.FormBtns.Del.set_enable(false);
	this.FormBtns.Save.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {

	this.btnOrderDetail = this.gfnFormButtonAdd("btnOrderDetail", "fnOrderDetail");
	this.btnOrderSite = this.gfnFormButtonAdd("btnOrderSite", "fnOrderSite");
	this.btnApprove = this.gfnFormButtonAdd("btnApprove", "fnApprove");
	this.btnApproveCancel = this.gfnFormButtonAdd("btnApproveCancel", "fnApproveCancel");

};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {	

	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {

	this.gfnGridInit(this.dxGrid, this.dsList, "DC", "DCB_BIDSTATUSLIST");
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_SITE", "string");
	this.dsSelect.addColumn("TY_GUBUN", "string");
	this.dsSelect.addColumn("DT_FROM", "string");
	this.dsSelect.addColumn("DT_TO", "string");
	this.dsSelect.addColumn("GR_SEARCH", "string");
	this.dsSelect.addColumn("TY_HADOCONT", "string");
	this.dsSelect.addColumn("ID_DAM", "string");
	
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsSelect.setColumn(0, "TY_GUBUN", this.dsSearch.getColumn(0, "TY_GUBUN"));
	this.dsSelect.setColumn(0, "DT_FROM", this.dsSearch.getColumn(0, "DT_FROM"));
	this.dsSelect.setColumn(0, "DT_TO", this.dsSearch.getColumn(0, "DT_TO"));
	this.dsSelect.setColumn(0, "GR_SEARCH", this.FormInfo.GR_SEARCH);
	this.dsSelect.setColumn(0, "TY_HADOCONT", "");
	this.dsSelect.setColumn(0, "ID_DAM", this.AuthClient.ID_USER);


	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc);   // 통신방법 정의 [생략가능]
			
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	//var nrow = this.gfnGridAdd(this.dxGrid, "bottom"); // top (default), bottom, current
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	//this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
 
this.fnSave = function() {

}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}


/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;
	
	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
 /*
 콜백
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
	}
	else if(svcID == "cancel"){
		if(errorCode == 0)
		{
			this.fnCancel_callback = function()
			{
				this.FormBtns.Select.click();
			}
			
			this.gfnAlert("접수취소가 정상처리되었습니다.", "", "", "fnCancel_callback");
		}
		else
		{
			this.gfnAlert(errorMsg);
		}
	}	
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		this.gfnSetFormStatus(this);
		this.gfnGridClear(this.dxGrid);
	}
};

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
 
//구매요청내역
this.fnOrderDetail = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
    if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	var param = {};
	
	param.CD_SITE = this.dsList.getColumn(this.dsList.rowposition, "CD_SITE");
	param.DS_SITE = this.dsList.getColumn(this.dsList.rowposition, "DS_SITE");
	param.NO_BID = this.dsList.getColumn(this.dsList.rowposition, "NO_BID");	
	param.DS_SUBCON = this.dsList.getColumn(this.dsList.rowposition, "DS_HADOCONT");

	// 화면 오픈. 
	// CD_MODULE은 보통 같은 모듈에서 호출하는 경우가 많으니 this.FormInfo.CD_MODULE 사용
	// 타 모듈 화면 호출시 지정할것.
	this.gfnFormOpen("DCA", "DCB_HADODAEBIQRY", "fnOrderDetail_callback", param, 1150, 720);		
}

this.fnOrderDetail_callback = function(svcID, value)
{	
	if(value == true) 
	{
		this.FormBtns.Select.click();
	}
}


//하도구매요청
this.fnOrderSite = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	var param = {};
	
	param.CD_SITE = this.dsList.getColumn(this.dsList.rowposition, "CD_SITE");
	param.DS_SITE = this.dsList.getColumn(this.dsList.rowposition, "DS_SITE");
	param.NO_BID = this.dsList.getColumn(this.dsList.rowposition, "NO_BID");	
	param.DS_SUBCON = this.dsList.getColumn(this.dsList.rowposition, "DS_HADOCONT");
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DCB_ORDERPLANSR_SITE", "fnOrderSite_callback", param);
}

	
	

//접수승인
this.fnApprove = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	var param = {};
	
	param.CD_SITE = this.dsList.getColumn(this.dsList.rowposition, "CD_SITE");
	param.DS_SITE = this.dsList.getColumn(this.dsList.rowposition, "DS_SITE");
	param.NO_HADOCONT = this.dsList.getColumn(this.dsList.rowposition, "NO_HADOCONT");
	param.DS_HADOCONT = this.dsList.getColumn(this.dsList.rowposition, "DS_HADOCONT");
	param.NO_BID = this.dsList.getColumn(this.dsList.rowposition, "NO_BID");

	this.gfnFormOpenNonAuth("DCB", "DCB_PREORDERPLANHQAPPRDLG", "fnApprove_callback", param);
}


//접수취소
this.fnApproveCancel = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
 	
	this.dsCancel = new Dataset();
	this.dsCancel.addColumn("CD_SITE", "string");
	this.dsCancel.addColumn("NO_BID", "string");
	this.dsCancel.addColumn("ID_USER", "string");

	this.dsCancel.clearData();
	this.dsCancel.addRow();

	this.dsCancel.setColumn(0, "CD_SITE", this.dsList.getColumn(this.dsList.rowposition, "CD_SITE"));
	this.dsCancel.setColumn(0, "NO_BID", this.dsList.getColumn(this.dsList.rowposition, "NO_BID"));
	this.dsCancel.setColumn(0, "ID_USER", this.AuthClient.ID_USER);

	var strSvcId    = "cancel";
	var strSvcType  = "save";
	var inProc      = "_dsProc";
	var inData      = "cancel=dsCancel";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";

	this.gfnTransaction( strSvcId ,    // transaction을 구분하기 위한 svc id값
					strSvcType ,    // transaction을 요청할 구분
					inProc,         // Procedure 정보 Dataset 이름
					inData ,        // 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
					outData ,       // 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
					strArg,         // 입력값으로 보낼 arguments, strFormData="20120607"
					callBackFnc); // 통신방법 정의 [생략가능]
}


]]></Script>
    <Objects>
      <Dataset id="dsTY_GUBUN">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="VALUE">전체</Col>
            <Col id="CODE">A</Col>
          </Row>
          <Row>
            <Col id="VALUE">입찰중</Col>
            <Col id="CODE">B</Col>
          </Row>
          <Row>
            <Col id="CODE">C</Col>
            <Col id="VALUE">계약중</Col>
          </Row>
          <Row>
            <Col id="VALUE">계약완료</Col>
            <Col id="CODE">D</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DCBPR_BIDSTATUSLIST_SELECT_DM</Col>
          </Row>
          <Row>
            <Col id="TARGET">cancel</Col>
            <Col id="SP">DCBPR_PREORDERPLAN_APPROVE_INIT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="TY_GUBUN" type="STRING" size="256"/>
          <Column id="DT_FROM" type="STRING" size="256"/>
          <Column id="DT_TO" type="STRING" size="256"/>
          <Column id="DS_SITE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_SITE"/>
            <Col id="TY_GUBUN">B</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
  </Form>
</FDL>
