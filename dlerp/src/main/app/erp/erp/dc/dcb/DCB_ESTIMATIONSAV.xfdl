<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="New Form" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="staCD_SITE" taborder="1" text="현장코드" left="0.0" top="10.0" width="92.0" height="24.0" textAlign="center" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_SITE" CodeFindName="DZX_CFSITE" FitToContents="true" CDTextWidth="80" taborder="0" left="staCD_SITE:0.0" top="10.0" width="200" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staNO_BID" taborder="2" text="입찰번호" left="ccfCD_SITE:0.0" top="10.0" width="92.0" height="24.0" textAlign="center" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfNO_BID" CodeFindName="DCX_CFORDERPLAN_01" FitToContents="true" CDTextWidth="120" taborder="0" left="staNO_BID:0.0" top="10.0" width="300" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	// 타화면에서 오픈시 넘어오는 파라미터 처리
	if(!this.gfnIsNull(this.getOwnerFrame().CD_SITE) && !this.gfnIsNull(this.getOwnerFrame().NO_BID)) {
		
		this.dsSearch.setColumn(0, "CD_SITE", this.getOwnerFrame().CD_SITE);
		this.dsSearch.setColumn(0, "NO_BID", this.getOwnerFrame().NO_BID);
		// 코드파인드의 명칭부분은 직접 접근해서 셋팅
		this.ccfCD_SITE.form.DSTextBox.set_value(this.getOwnerFrame().DS_SITE);
		if(!this.gfnIsNull(this.getOwnerFrame().DS_SUBCON)) {
			this.ccfNO_BID.form.DSTextBox.set_value(this.getOwnerFrame().DS_SUBCON);
		}
		
		this.ccfCD_SITE.form.fnFitToContents();
		this.ccfNO_BID.form.fnFitToContents();
		
		this.FormBtns.Select.click();
	}	
	
	this._DS_PARAM = this.getOwnerFrame().DS_PARAM;
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
//	if(this.gfnIsNull(this.getOwnerFrame().DS_OPENER)) {
		this.btnDtlBid = this.gfnFormButtonAdd("btnDtlBid", "fnDtlBid");
		this.btnDaebiBid = this.gfnFormButtonAdd("btnDaebiBid", "fnDaebiBid");
		this.btnMagamBid = this.gfnFormButtonAdd("btnMagamBid", "fnMagamBid");
		this.btnPassBid = this.gfnFormButtonAdd("btnPassBid", "fnPassBid");
		this.btnSuccBid = this.gfnFormButtonAdd("btnSuccBid", "fnSuccBid");
		this.btnSuccBidCancel = this.gfnFormButtonAdd("btnSuccBidCancel", "fnSuccBidCancel");
		this.btnAPP = this.gfnFormButtonAdd("btnAPP", "fnAPP");
		this.btnAttach = this.gfnFormButtonAdd("btnAttach", "fnAttach");
		this.btnYega = this.gfnFormButtonAdd("btnYega", "fnYega");
//	} else { //DCB_PRECONTRACT_LIST
// 		this.btnDtlBid = this.gfnFormButtonAdd("btnDtlBid", "fnDtlBid");
// 		this.btnDtlBid.set_text("견적내역");
// 		this.btnDaebiBid = this.gfnFormButtonAdd("btnDaebiBid", "fnDaebiBid");
// 		this.btnAttach = this.gfnFormButtonAdd("btnAttach", "fnAttach");
//	}
	if(!this.gfnIsNull(this.getOwnerFrame().DS_OPENER)) { //DCB_PRECONTRACT_LIST
		this.btnMagamBid.set_visible(false);
		this.btnPassBid.set_visible(false);
		this.btnSuccBid.set_visible(false);
		this.btnSuccBidCancel.set_visible(false);
		this.btnAPP.set_visible(false);
		this.btnYega.set_visible(false);
	}
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {	
	this.ccfCD_SITE = this.divSearch.form.ccfCD_SITE;
	this.ccfNO_BID = this.divSearch.form.ccfNO_BID;

	this.dxGrid = this.divData.form.objGrid;
	
	this.YN_SUCCESS = "N";
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	//this.ccfCD_SITE.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_SITE.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.ccfNO_BID.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";

	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DC", "DCB_ESTIMATIONSAV");
	this.dxGrid.addEventHandler("onselectchanged", this.fnGrid_RowCellChanged, this);
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_SITE", "string");
	this.dsSelect.addColumn("NO_BID", "string");
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("CD_DEPT", "string");
	this.dsSelect.addColumn("ID_USER", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsSelect.setColumn(0, "NO_BID", this.dsSearch.getColumn(0, "NO_BID"));
	this.dsSelect.setColumn(0, "CD_CORP", this.AuthClient.CD_CORP);
	this.dsSelect.setColumn(0, "CD_DEPT", this.AuthClient.CD_DEPT);
	this.dsSelect.setColumn(0, "ID_USER", this.AuthClient.ID_USER);

	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
}

/*
 *	저장 버튼
 */
this.fnSave = function() {

}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;
	
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "CD_SITE"))) {
		validate = false;
		//Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.ccfCD_SITE.form.CDTextBox.setFocus();
		}
		this.gfnAlert("현장코드를 입력하세요.", "fnVaidateCallback");
	}
	else if (this.gfnIsNull(this.dsSearch.getColumn(0, "NO_BID"))) {
	validate = false;
	//Alert후 실행할 처리
	this.fnVaidateCallback = function() {
		this.ccfNO_BID.form.CDTextBox.setFocus();
	}
	this.gfnAlert("입찰번호를 입력하세요.", "fnVaidateCallback");
	}
	
	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
		
		this.fnBtnCheckAll();
		
		this.YN_SUCCESS = "N";
		this.TY_BIDSTATUS = this.dsList.getColumn(0, "TY_BIDSTATUS");
		for(var i = 0; i < this.dsList.getRowCount(); i++) {
			if(this.dsList.getColumn(i, "YN_SUCCESS") == "적격") {
				this.YN_SUCCESS = "Y";
			}
		}
		
		if(!this.gfnIsNull(this.TY_BIDSTATUS)) {
			if(this.TY_BIDSTATUS >= "B40") { // 입찰 마감(B40) 후
				this.btnMagamBid.set_enable(false); //입찰마감
			
				if(this.YN_SUCCESS == "Y") { //낙찰자 선정 여부 ("Y"면 선정된 후)
					this.btnPassBid.set_enable(false); //재입찰
					this.btnSuccBid.set_enable(false); //낙찰사선정
					this.btnSuccBidCancel.set_enable(true); //낙찰취소
				} else {
					this.btnPassBid.set_enable(true); //재입찰
					this.btnSuccBid.set_enable(true); //낙찰사선정
					this.btnSuccBidCancel.set_enable(false); //낙찰취소
				}
			} else { // 입찰 마감 전 this.TY_BIDSTATUS < "B30"
				this.btnMagamBid.set_enable(true); //입찰마감
				this.btnPassBid.set_enable(false); //재입찰
				this.btnSuccBid.set_enable(false); //낙찰사선정
				this.btnSuccBidCancel.set_enable(false); //낙찰취소
			}
		} else {
			this.btnMagamBid.set_enable(false); //입찰마감
			this.btnPassBid.set_enable(false); //재입찰
			this.btnSuccBid.set_enable(false); //낙찰사선정
			this.btnSuccBidCancel.set_enable(false); //낙찰취소
		}
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	else if(svcID == "update") {
		if (errorCode == 0) {
			this.fnUpdate_callback = function(strId, val) {
				this.FormBtns.Select.click();
			}
			this.gfnAlert("입찰마감이 정상처리 되었습니다." , "", "", "fnUpdate_callback");
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
// 	if (id == "ccfCD_SITE") {
// 		dsUserParam.setColumn(nrow, "CD_CORP", this.AuthClient.CD_CORP);	
// 	}
// 	
	if (id == "ccfNO_BID") {
		if(this.gfnIsNull(this.dsSearch.getColumn(0, "CD_SITE")))
		{
			this.gfnAlert("현장코드를 입력해주세요.");
			return false;
		}
	
		dsUserParam.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	}

	return true;
}

this.fnAfterCDTextChanged = function(id, codeFindData) {
	if(id == "ccfCD_SITE") {
		// 현장코드 변경시 입찰번호 초기화
		this.ccfNO_BID.form.fnCodeFindClear();
	}
}

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 this.fnGrid_RowCellChanged = function(obj:nexacro.Grid,e:nexacro.GridSelectEventInfo)
{
	 if ((obj.oldrow > -1 && obj.oldrow == e.row)
		|| (obj.oldrow == -1 && e.oldrow != e.row)) {
		this.fnBtnCheckAll();
		obj.oldrow = -1;
	}
}
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};


// 아래부터는 확장버튼
this.fnDtlBid = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if(this.dsList.rowcount < 1 || this.dsList.rowposition < 0)
	{
		this.gfnFormOpen("DCB", "DCB_ESTIMATIONVENDORSAV_ENG", ""); 
		return;
	}
	
	var param = {};
	
	param.CD_SITE = this.dsSearch.getColumn(0, "CD_SITE");
	param.DS_SITE = this.divSearch.form.ccfCD_SITE.form.DSTextBox.text;
	param.NO_BID = this.dsSearch.getColumn(0, "NO_BID");
	param.DS_BID = this.divSearch.form.ccfNO_BID.form.DSTextBox.text;
	param.CD_VENDOR = this.dsList.getColumn(this.dsList.rowposition, "CD_VENDOR");
	param.DS_VENDOR = this.dsList.getColumn(this.dsList.rowposition, "DS_VENDOR");
	param.YN_SUCCESS = this.YN_SUCCESS;

	this.gfnFormOpen("DCB", "DCB_ESTIMATIONVENDORSAV_ENG", "fnDtlBid_callback", param); 
}

this.fnDtlBid_callback = function(strId, val)
{
	this.FormBtns.Select.click();
}

this.fnDaebiBid = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	var param = {};
	
	param.CD_SITE = this.dsSearch.getColumn(0, "CD_SITE");
	param.DS_SITE = this.divSearch.form.ccfCD_SITE.form.DSTextBox.text;
	param.NO_BID = this.dsSearch.getColumn(0, "NO_BID");
	param.DS_BID = this.divSearch.form.ccfNO_BID.form.DSTextBox.text;

	this.gfnFormOpen("DCB", "DCB_HADOESTIMATIONDAEBIQRY_ENG", "", param); 
}

//입찰마감 버튼
this.fnMagamBid = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	var param = {};
	
	var msg = "현장코드 : [" + this.dsSearch.getColumn(0, "CD_SITE") + "] " + this.divSearch.form.ccfCD_SITE.form.DSTextBox.text
			+ "\n입찰번호 : [" + this.dsSearch.getColumn(0, "NO_BID") + "]"
			+ "\n\n입찰마감 처리 하시겠습니까?";
			
	this.gfnConfirm(msg, "fnMagamBid_callback", "");
}

this.fnMagamBid_callback = function(strId, val) {
	if(val == true)
	{
		this.dsUpdate = new Dataset();
		this.dsUpdate.addColumn("CD_SITE", "string");
		this.dsUpdate.addColumn("NO_BID", "string");
		this.dsUpdate.addColumn("ST_APPROVAL", "string");
		this.dsUpdate.addColumn("DS_EKPKEY", "string");
		this.dsUpdate.addColumn("DS_VIEW_URL", "string");
		
		this.dsUpdate.clearData();
		var nrow = this.dsUpdate.addRow();
		
		this.dsUpdate.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
		this.dsUpdate.setColumn(nrow, "NO_BID", this.dsSearch.getColumn(0, "NO_BID"));
		this.dsUpdate.setColumn(nrow, "ST_APPROVAL", "");
		this.dsUpdate.setColumn(nrow, "DS_EKPKEY", "");
		this.dsUpdate.setColumn(nrow, "DS_VIEW_URL", "");

		var strSvcId    = "update";
		var strSvcType  = "save";
		var inProc		= "_dsProc";
		var inData      = "update=dsUpdate";
		var outData     = "";
		var strArg      = "";
		var callBackFnc = "fnCallback";
		
		this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
							strSvcType , 	// transaction을 요청할 구분
							inProc,			// Procedure 정보 Dataset 이름
							inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
							outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
							strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
							callBackFnc); // 통신방법 정의 [생략가능]

	}
}

this.fnPassBid = function(obj:nexacro.Button,e:nexacro.ClickEventInnfo) {
	var param = {};
	
	param.CD_SITE = this.dsSearch.getColumn(0, "CD_SITE");
	param.DS_SITE = this.divSearch.form.ccfCD_SITE.form.DSTextBox.text;
	param.NO_BID = this.dsSearch.getColumn(0, "NO_BID");
	param.DS_SUBCON = this.divSearch.form.ccfNO_BID.form.DSTextBox.text;
	
	this.gfnFormOpen("DCB", "DCB_YOUCHALDLG", "fnSuccBid_callback", param); 
}

this.fnSuccBid = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if (!this.gfnGridIsRow(this.dxGrid)) { 
		this.gfnAlert("목록에서 해당건을 선택해주세요.");
		return false; 
	}
	
	var param = {};
	
	param.CD_SITE = this.dsSearch.getColumn(0, "CD_SITE");
	param.DS_SITE = this.divSearch.form.ccfCD_SITE.form.DSTextBox.text;
	param.NO_BID = this.dsSearch.getColumn(0, "NO_BID");
	param.DS_BID = this.divSearch.form.ccfNO_BID.form.DSTextBox.text;
	param.CD_VENDOR = this.dsList.getColumn(this.dsList.rowposition, "CD_VENDOR");
	param.DS_VENDOR = this.dsList.getColumn(this.dsList.rowposition, "DS_VENDOR");
	param.DS_PARAM = this._DS_PARAM;
	param.YN_SUCCESS = "Y";

	this.gfnFormOpen("DCB", "DCB_SUCCESSBIDDLG", "fnSuccBid_callback", param, 450, 220); 
}

this.fnSuccBidCancel = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if (!this.gfnGridIsRow(this.dxGrid)) { 
		this.gfnAlert("목록에서 해당건을 선택해주세요.");
		return false; 
	} else if (this.dsList.getColumn(this.dsList.rowposition, "YN_SUCCESS") != "적격") {
		this.gfnAlert("적격업체를 선택 후 낙찰취소하십시요.");
		return false; 
	}
	
	var param = {};
	
	param.CD_SITE = this.dsSearch.getColumn(0, "CD_SITE");
	param.DS_SITE = this.divSearch.form.ccfCD_SITE.form.DSTextBox.text;
	param.NO_BID = this.dsSearch.getColumn(0, "NO_BID");
	param.DS_BID = this.divSearch.form.ccfNO_BID.form.DSTextBox.text;
	param.CD_VENDOR = this.dsList.getColumn(this.dsList.rowposition, "CD_VENDOR");
	param.DS_VENDOR = this.dsList.getColumn(this.dsList.rowposition, "DS_VENDOR");
	param.YN_SUCCESS = "N";

	this.gfnFormOpen("DCB", "DCB_SUCCESSBIDDLG", "fnSuccBid_callback", param, 450, 220); 
}

this.fnSuccBid_callback = function(strId, val)
{
	if(val == true)
	{
		this.FormBtns.Select.click();
	}
}


this.fnAPP = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	//if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	if (this.dsList.rowcount < 1) { return false; }
	
	var param = {};
	//var nRow = this.dsList.rowposition;
	
	param.PARAM01 = this.dsSearch.getColumn(0,"CD_SITE");
	param.PARAM02 = this.dsSearch.getColumn(0, "NO_BID");
	param.ID_AP = this.dsList.getColumn(0, "NO_ELAPDOC");	// 전자결재문서번호
	param.YN_LINK = "N";	// 화면에서 팝업을 호출할경우 N, 링크를 통해서 화면을 오픈할경우 null 이다
	
	// 화면 오픈. 
	// CD_MODULE은 보통 같은 모듈에서 호출하는 경우가 많으니 this.FormInfo.CD_MODULE 사용
	// 타 모듈 화면 호출시 지정할것.
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DCB_ESTIMATIONSAV_APP", "fnAprvDialogCallback", param);
	
}
//첨부파일 버튼 이벤트
this.fnAttach = function() {
	//if (!this.fnSelectValidate()) return false;
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	var param = {};
	param.NO_BID = this.dsSearch.getColumn(0, "NO_BID");
	param.DS_SUBCON = this.divSearch.form.ccfNO_BID.form.DSTextBox.text;
	param.CD_VENDOR = this.dsList.getColumn(this.dsList.rowposition, "CD_VENDOR");
	param.DS_VENDOR = this.dsList.getColumn(this.dsList.rowposition, "DS_VENDOR");
	param.NO_PR = this.dsList.getColumn(this.dsList.rowposition, "NO_PR");
	param.ADDFILE_NO = this.dsList.getColumn(this.dsList.rowposition, "ADDFILE_NO");
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DCB_ESTIMATION_DOCUMENT_LIST", "", param, 1000, 600);
	
	//this.fnSelectEPS("B");	// B : 입찰참여회사 첨부파일조회
}

this.fnYega = function() {
	var param = {};
	
	param.CD_SITE = this.dsSearch.getColumn(0, "CD_SITE", this.getOwnerFrame().CD_SITE);
	param.DS_SITE = this.divSearch.form.ccfCD_SITE.form.DSTextBox.text;
	
	param.NO_BID = this.dsSearch.getColumn(0, "NO_BID");
	param.DS_SUBCON = this.divSearch.form.ccfNO_BID.form.DSTextBox.text;
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DCB_ORDERPLANSR_YEGA", "", param);	
}

 this.fnAprvDialogCallback = function(svcID, value) {
	// 리턴값
	if(value){
		// 결재완료, 결재취소, 결재상신 후에는 재조회를 한다
		this.FormBtns.Select.click();
	}
};



// 임시로 생성.
this.fnBtnCheck = function(btn, ds)
{
	if(!this.gfnIsNull(btn.NM_COLUMN) && btn.IS_ENABLED == true)
	{
		if(ds.rowcount > 0)
		{
			if(ds.rowcount == 1 && this.gfnGetFlag(ds, 0) == "#")
				return;
		
			var row = ds.rowposition;
			
			if(row == -1) row = 0;
			
			if(ds.getColumn(row, btn.NM_COLUMN) == "Y")
				btn.set_enable(true);
			else
				btn.set_enable(false);	
		}
		else
			return;
	}
	return;
}

this.fnBtnCheckAll = function()
{
	this.fnBtnCheck(this.btnDtlBid, this.dsList);
	this.fnBtnCheck(this.btnDaebiBid, this.dsList);
	this.fnBtnCheck(this.btnMagamBid, this.dsList);
	this.fnBtnCheck(this.btnPassBid, this.dsList);
	this.fnBtnCheck(this.btnSuccBid, this.dsList);
	this.fnBtnCheck(this.btnSuccBidCancel, this.dsList);
	this.fnBtnCheck(this.btnAPP, this.dsList);
	this.fnBtnCheck(this.btnYega, this.dsList);
}]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DCBPR_ESTIMATION_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">update</Col>
            <Col id="SP">DCCPR_EKP_PRECONTRACT_UPDATE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="NO_BID" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item1" compid="divSearch.form.ccfNO_BID.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="NO_BID"/>
    </Bind>
  </Form>
</FDL>
