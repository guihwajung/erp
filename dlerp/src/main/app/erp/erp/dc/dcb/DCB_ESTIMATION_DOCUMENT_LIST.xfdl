<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1000" height="500" maxwidth="1000" maxheight="500" titletext="입찰업체첨부파일조회" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="staNO_BID" taborder="0" text="입찰번호" left="0.0" top="10.0" width="118.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Edit id="ctxtNO_BID" taborder="1" left="staNO_BID:0.0" top="10.0" width="80" height="24.0" value=""/>
              <Edit id="ctxtDS_SUBCON" taborder="2" left="ctxtNO_BID:0.0" top="10.0" width="180" height="24.0" value=""/>
              <Static id="staNO_PR" taborder="3" text="구매요청번호" left="ctxtDS_SUBCON:0.0" top="10.0" width="118.0" height="24.0" textDecoration="none" visible="false" cssclass="sta_WF_SchLabel"/>
              <Edit id="ctxtNO_PR" taborder="4" left="staNO_PR:0.0" top="10.0" width="100" height="24.0" value="" visible="false"/>
              <Static id="staCD_VENDOR" taborder="5" text="업체코드" left="ctxtDS_SUBCON:0.0" top="10.0" width="118.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Edit id="ctxtCD_VENDOR" taborder="6" left="staCD_VENDOR:0.0" top="10.0" width="80" height="24.0" value=""/>
              <Edit id="ctxtDS_VENDOR" taborder="7" left="ctxtCD_VENDOR:0.0" top="10.0" width="180" height="24.0" value=""/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();
this._ADDFILE_NO = "";
this.filepath = "";

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	// 파일설정
	this.fileConfig = this.gfnGetFileConfig();

	if(!this.gfnIsNull(this.getOwnerFrame().NO_BID) 
	&& !this.gfnIsNull(this.getOwnerFrame().CD_VENDOR))
	{
		this.dsSearch.setColumn(0, "NO_BID", this.getOwnerFrame().NO_BID);
		this.dsSearch.setColumn(0, "DS_SUBCON", this.getOwnerFrame().DS_SUBCON);
		this.dsSearch.setColumn(0, "CD_VENDOR", this.getOwnerFrame().CD_VENDOR);
		this.dsSearch.setColumn(0, "DS_VENDOR", this.getOwnerFrame().DS_VENDOR);
		
		if(!this.gfnIsNull(this.getOwnerFrame().NO_PR))
		{
			this.dsSearch.setColumn(0, "NO_PR", this.getOwnerFrame().NO_PR);
		}
		
		this.FormBtns.Select.click();
	}
	
	if(!this.gfnIsNull(this.dsSearch.getColumn(0, "NO_BID")) 
	&& !this.gfnIsNull(this.dsSearch.getColumn(0, "CD_VENDOR")))
	{
		this.fnSelectFileNo();
	}
	
	//this.filepath = "/BID_SU_M/" + this.dsSearch.getColumn(0, "NO_BID") + "/" + this.dsSearch.getColumn(0, "CD_VENDOR") + "/" + this._ADDFILE_NO + "/";
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {

};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {	
	//this.ccfNO_PR = this.divSearch.form.ccfNO_PR;

	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	//this.ccfNO_PR.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";

	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DC", "DCB_ESTIMATION_DOCUMENT_LIST");
	
	var colFILE_SIZ = this.dxGrid.getBindCellIndex("body", "FILE_SIZ")
	this.dxGrid.setCellProperty("body", colFILE_SIZ, "expr", "expr:FILE_SIZ==null?null:FILE_SIZ/1024");
	
	this.dxGrid.ExpandUp = "fnGrid_ExpandUp";
	this.dxGrid.addEventHandler("oncelldblclick", this.dxGrid_oncelldblclick, this);
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("NO_BID", "string");
	this.dsSelect.addColumn("CD_VENDOR", "string");
	
	this.dsSave = new Dataset();
	this.dsSave.addColumn("TY_SAVE", "string");
	this.dsSave.addColumn("NO_BID", "string");
	this.dsSave.addColumn("CD_VENDOR", "string");
	this.dsSave.addColumn("ADDFILE_NO", "bigdecimal");
	this.dsSave.addColumn("ADDFILE_SEQNO", "bigdecimal");
	this.dsSave.addColumn("FILE_NM", "string");
	this.dsSave.addColumn("PATH_NM", "string");
	this.dsSave.addColumn("FILE_SIZ", "int");
	this.dsSave.addColumn("ATTR01", "string");
	this.dsSave.addColumn("ATTR02", "string");
	this.dsSave.addColumn("ATTR03", "string");
	this.dsSave.addColumn("ATTR04", "string");
	this.dsSave.addColumn("ATTR05", "string");
	this.dsSave.addColumn("FILE_HASH", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;

	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "NO_BID", this.dsSearch.getColumn(0, "NO_BID"));
	this.dsSelect.setColumn(0, "CD_VENDOR", this.dsSearch.getColumn(0, "CD_VENDOR"));

	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

this.fnSelectFileNo = function()
{
	//if (!this.fnSelectValidate()) return false;
	
	//this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "NO_BID", this.dsSearch.getColumn(0, "NO_BID"));
	this.dsSelect.setColumn(0, "CD_VENDOR", this.dsSearch.getColumn(0, "CD_VENDOR"));

	var strSvcId    = "addFileNo";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select_fileno=dsSelect";
	var outData     = "dsAddFileNo=select_fileno0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	var nrow = this.gfnGridAdd(this.dxGrid); // top (default), bottom, current
	//this.dsList.setColumn(nrow, "NO_PR", this.dsSearch.getColumn(0, "NO_PR"));
	//this.dsList.setColumn(nrow, "DT_APPDATE", this.gfnGetDate());
	
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	// 파일저장
	if(this.FileUpTransfer00.filelist.length > 0) {
		this._waitCursor(true);
		var sUploadUrl = this.fileConfig.host + this.fileConfig.uploadUrl;
		this.FileUpTransfer00.setPostData("path", this.filepath);
		this.FileUpTransfer00.upload(sUploadUrl);	
		trace(sUploadUrl + "\n" + this.filepath);
	}
	else {
		this.fnSaveProc();
	}
}

this.fnSaveProc = function()
{
	this.dsSave.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
			case "U":
			case "D":
				var nrow = this.dsSave.addRow();
				this.dsSave.setColumn(nrow, "TY_SAVE", flag);
				this.dsSave.setColumn(nrow, "NO_BID", this.dsSearch.getColumn(0, "NO_BID"));
				this.dsSave.setColumn(nrow, "CD_VENDOR", this.dsSearch.getColumn(0, "CD_VENDOR"));
				this.dsSave.setColumn(nrow, "ADDFILE_NO", this.dsList.getColumn(i, "ADDFILE_NO"));
				this.dsSave.setColumn(nrow, "ADDFILE_SEQNO", this.dsList.getColumn(i, "ADDFILE_SEQNO"));
				this.dsSave.setColumn(nrow, "FILE_NM", this.dsList.getColumn(i, "FILE_NM"));
				this.dsSave.setColumn(nrow, "PATH_NM", this.dsList.getColumn(i, "PATH_NM"));
				this.dsSave.setColumn(nrow, "FILE_SIZ", this.dsList.getColumn(i, "FILE_SIZ"));
				this.dsSave.setColumn(nrow, "ATTR01", "");
				this.dsSave.setColumn(nrow, "ATTR02", "");
				this.dsSave.setColumn(nrow, "ATTR03", "");
				this.dsSave.setColumn(nrow, "ATTR04", "");
				this.dsSave.setColumn(nrow, "ATTR05", "");
				this.dsSave.setColumn(nrow, "FILE_HASH", this.dsList.getColumn(i, "FILE_HASH"));
				break;
		}
	}
		
	if (this.dsSave.rowcount == 0) return;
	
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;
	
	if (this.gfnIsNull(this.dsSearch.getColumn(0,"NO_BID"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.divSearch.form.ctxtNO_BID.setFocus();
		}
		this.gfnAlert("입찰번호를 입력하세요.", "fnVaidateCallback");
	}else if (this.gfnIsNull(this.dsSearch.getColumn(0,"CD_VENDOR"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.divSearch.form.ctxtCD_VENDOR.setFocus();
		}
		this.gfnAlert("업체코드를 입력하세요.", "fnVaidateCallback");
	}
	
	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.FileUpTransfer00.clearFileList();
		this.gfnGridAfterSelect(this.dxGrid);	
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	else if(svcID == "addFileNo")
	{
		// 파일 설정
		this.FileUpTransfer00.clearFileList();
		this.filepath = "/BID_SU_M/" + this.dsSearch.getColumn(0, "NO_BID") + "/" + this.dsSearch.getColumn(0, "CD_VENDOR") + "/" + this.dsAddFileNo.getColumn(0,"ADDFILE_NO") + "/";
		trace(this._ADDFILE_NO + "\n" + this.filepath);
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {

// 	if (id == "ccfNO_PR") {
// 		if(this.gfnIsNull(this.dsSearch.getColumn(0, "CD_SITE")))
// 		{
// 			this.gfnAlert("현장코드를 입력해주세요.");
// 			return false;
// 		}
// 	
// 		dsUserParam.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
// 	}

	return true;
}
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.dxGrid_oncelldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	if(this.gfnGridGetBindColumnNameByIndex(obj, e.cell) == "FILE_NM") {
		this.fnDownload();
	}
}

this.fnGrid_ExpandUp = function(obj:nexacro.Grid,e:nexacro.GridMouseEventInfo) {
	var colnm = this.gfnGridGetBindColumnNameByIndex(obj, e.cell);
	if(colnm == "FILE_NM") {	
		this.fdg00.row = e.row;
		this.fdg00.open('FileOpen', FileDialog.LOAD);
	}
}

this.fdg00_onclose = function(obj:nexacro.FileDialog,e:nexacro.FileDialogEventInfo)
{
	this.addFileList(obj, e.virtualfiles);
};

this.addFileList = function(obj, filelist)
{
	this.FileList = filelist;
	if(filelist.length > 0) {
		var vFile;
		for (var i = 0; i < filelist.length; i++)
		{
			vFile = filelist[i];
			vFile.row = obj.row;
			vFile.addEventHandler("onsuccess", this.FileList_onsuccess, this);
			vFile.addEventHandler("onerror", this.FileList_onerror , this);
			
			vFile.open(null, 1);
		}
	}
}

this.FileList_onsuccess = function(obj:nexacro.VirtualFile, e:nexacro.VirtualFileEventInfo)
{
	switch (e.reason)
	{
		case 1:
			obj.getFileSize();
			break;
		case 9:
			var row = obj.row;
			this.dsList.setColumn(row, "FILE_NM", obj.filename);
			this.dsList.setColumn(row, "FILE_SIZ", null);
			this.FileUpTransfer00.addFile(obj.filename, obj);
			break;
	}
}

this.FileList_onerror = function(obj:nexacro.VirtualFile, e:nexacro.VirtualFileErrorEventInfo)
{
	trace("errortype: "+e.errortype);
	trace("errormsg: "+e.errormsg);
	trace("statuscode: "+e.statuscode);
}

this.FileUpTransfer00_onprogress = function(obj:nexacro.FileUploadTransfer,e:nexacro.FileUploadTransferProgressEventInfo)
{
	trace("FileUpTransfer00_onprogress: " + e.loaded+"/"+e.total);
};

this.FileUpTransfer00_onsuccess = function(obj:nexacro.FileUploadTransfer,e:nexacro.FileUploadTransferEventinfo)
{
	this._waitCursor(false);
	trace("FileUpTransfer00_onsuccess: " + e.code + "/" + e.message);
	if(e.code == 0) {
		if(e.datasets.length > 0) {
			for(var i = 0; i < e.datasets[0].rowcount; i++) {
				var row = obj.filelist[i].row;
				this.dsList.setColumn(row, "FILE_SIZ", e.datasets[0].getColumn(i, "filesize"));
				this.dsList.setColumn(row, "FILE_HASH", e.datasets[0].getColumn(i, "filehash"));
			}
			this.fnSaveProc();
		}
	}
};

this.FileUpTransfer00_onerror = function(obj:nexacro.FileUploadTransfer,e:nexacro.FileUploadTransferErrorEventInfo)
{
	this._waitCursor(false);
	if(e.errormsg.indexOf("maxsize") > -1) {
		this.gfnAlert("첨부파일 허용용량("+ this.gfnCutFileSize(nexacro.toNumber(e.errormsg.split(':')[1])) + ")을 초과할 수 없습니다.");
	} else {
		this.gfnAlert(e.errormsg);
	}
};

this.fnDownload = function() {
	if(!this.gfnIsNull(this.gfnGetFlag(this.dsList, this.dsList.rowposition))) return;
	
	var sFilename = this.dsList.getColumn(this.dsList.rowposition, "FILE_NM");
	var sFilepath = this.dsList.getColumn(this.dsList.rowposition, "PATH_NM");
	var encodeFileName = encodeURIComponent(sFilename);
		
	var surl = this.fileConfig.host+ this.fileConfig.downloadUrl;
	this.FileDownTransfer00.set_url(surl);
	this.FileDownTransfer00.setPostData("path", sFilepath);
	this.FileDownTransfer00.setPostData("fileName", encodeFileName);
	if( system.navigatorname =="nexacro"){
		this.FileDownTransfer00.set_downloadfilename(sFilename);
	}
	trace("DownloadPath : " + sFilepath + "\n" + sFilename);
	this.FileDownTransfer00.download();
};

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
// 	if(e.oldvalue != e.newvalue) {
// 		this.gfnSetFormStatus(this);	// 폼상태 초기화
// 		this.gfnGridClear(this.dxGrid);	
// 				
// 		if(!this.gfnIsNull(e.newvalue))
// 		{
// 			this.fnSelectFileNo();
// 		}
// 	}
};

]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DCBPR_ESTIMATION_DOCUMENT_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DCBPR_ESTIMATION_DOCUMENT_SAVE</Col>
          </Row>
          <Row>
            <Col id="TARGET">select_fileno</Col>
            <Col id="SP">DCBPR_ESTIMATION_DOCUMENT_COMMON_SELECT </Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="NO_BID" type="STRING" size="256"/>
          <Column id="DS_SUBCON" type="STRING" size="256"/>
          <Column id="NO_PR" type="STRING" size="256"/>
          <Column id="CD_VENDOR" type="STRING" size="256"/>
          <Column id="DS_VENDOR" type="STRING" size="256"/>
          <Column id="ADDFILE_NO" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <FileDialog id="fdg00" onclose="fdg00_onclose"/>
      <FileUpTransfer id="FileUpTransfer00" onprogress="FileUpTransfer00_onprogress" onsuccess="FileUpTransfer00_onsuccess" onerror="FileUpTransfer00_onerror"/>
      <FileDownTransfer id="FileDownTransfer00"/>
      <Dataset id="dsAddFileNo">
        <ColumnInfo>
          <Column id="ADDFILE_NO" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ctxtNO_BID" propid="value" datasetid="dsSearch" columnid="NO_BID"/>
      <BindItem id="item1" compid="divSearch.form.ctxtDS_SUBCON" propid="value" datasetid="dsSearch" columnid="DS_SUBCON"/>
      <BindItem id="item2" compid="divSearch.form.ctxtNO_PR" propid="value" datasetid="dsSearch" columnid="NO_PR"/>
      <BindItem id="item3" compid="divSearch.form.ctxtCD_VENDOR" propid="value" datasetid="dsSearch" columnid="CD_VENDOR"/>
      <BindItem id="item4" compid="divSearch.form.ctxtDS_VENDOR" propid="value" datasetid="dsSearch" columnid="DS_VENDOR"/>
    </Bind>
  </Form>
</FDL>
