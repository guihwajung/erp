<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="420" height="220" titletext="사전/연간 입찰용 코드생성" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divData" taborder="0" left="0" top="0" bottom="0" right="0" cssclass="div_DATA_Bg" text="">
          <Layouts>
            <Layout>
              <Static id="staTITLE" taborder="0" text="사전/연간 입찰용 코드생성" left="0" top="0" width="100%" height="30" cssclass="sta_TITLE_Bg" textAlign="left"/>
              <Static id="staDS_SITE" taborder="1" text="구분" left="0" top="40" width="87" height="30" textAlign="left" onclick="divData_staDS_SITE_onclick" cssclass="sta_WF_tablelabelE"/>
              <Static id="staDS_SILHENG" taborder="2" text="현장코드" left="0" top="staDS_SITE:-1" width="87" height="30" textAlign="left" cssclass="sta_WF_tablelabelE"/>
              <Static id="staYN_PARTNERSIGN" taborder="3" text="현장명" left="0" top="staDS_SILHENG:-1" width="87" height="30" textAlign="left" cssclass="sta_WF_tablelabelE"/>
              <Static id="staBg1" taborder="4" left="staDS_SITE:-1" top="40" right="0%" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staBg2" taborder="5" left="staDS_SILHENG:-1" top="staBg1:-1" right="0.00%" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staBg3" taborder="6" left="staYN_PARTNERSIGN:-1" top="staBg2:-1" right="0%" height="30" cssclass="sta_WF_tablebg"/>
              <Button id="btnOk" taborder="7" text="확인" left="32.38%" top="staYN_PARTNERSIGN:10" width="60" height="20" onclick="divData_btnOk_onclick"/>
              <Button id="btnCancel" taborder="8" text="취소" left="52.38%" top="staYN_PARTNERSIGN:10" width="60" height="20" onclick="divData_btnCancel_onclick"/>
              <Edit id="edt00" taborder="9" left="90" top="73" width="146" height="22" readonly="true"/>
              <Edit id="edt00_00" taborder="10" left="90" top="102" height="22" right="4"/>
              <Combo id="cbo00" taborder="11" text="cbo00" left="90" top="44" width="89" height="22" innerdataset="innerdataset" codecolumn="codecolumn" datacolumn="datacolumn">
                <Dataset id="innerdataset">
                  <ColumnInfo>
                    <Column id="codecolumn" size="256"/>
                    <Column id="datacolumn" size="256"/>
                  </ColumnInfo>
                  <Rows>
                    <Row>
                      <Col id="codecolumn">B</Col>
                      <Col id="datacolumn">사전입찰</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">Y</Col>
                      <Col id="datacolumn">연간입찰</Col>
                    </Row>
                  </Rows>
                </Dataset>
              </Combo>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();

	this.YY_WORK = this.gfnGetDate().substr(2, 2);
	//this.dsData.setColumn(0, "CD_SITE", this.dsData.getColumn(0, "TY_GUBUN") + this.YY_WORK);		
	this.fnGetNext();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {

};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {	
	
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 
/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "chk") {
		if (errorCode == 0) {
			var strSvcId    = "insert";
			var strSvcType  = "save";
			var inProc		= "_dsProc";
			var inData      = "insert=dsData";
			var outData     = "";
			var strArg      = "";
			var callBackFnc = "fnCallback";
			
			this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
								strSvcType , 	// trabsaction을 요청할 구분
								inProc,			// Procedure 정보 Dataset 이름
								inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
								outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
								strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
								callBackFnc); // 통신방법 정의 [생략가능]	
		} else {
			this.gfnAlert(errorMsg);
		}		
	} else if (svcID == "insert"){
		if (errorCode == 0) {
			this.getParentContext().close(false);
		} else {
			this.gfnAlert(errorMsg);
		}	
	} else if (svcID == "next"){
		if (errorCode == 0) {
			this.dsData.setColumn(0, "CD_SITE", this.dsData.getColumn(0, "TY_GUBUN") + this.YY_WORK + this.dsList.getColumn(0, "NEXT"));
		} else {
			this.gfnAlert(errorMsg);
		}	
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
// 확인 버튼 클릭
this.divData_btnOk_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{	
	var strSvcId    = "chk";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "chk=dsData";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]	
};

// 취소 버튼 클릭
this.divData_btnCancel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	// this.close()가 작동하지 않았고, 
	// 부모의 callback 함수로 데이터를 넘겨주기 위해 작성되었습니다.
	this.getParentContext().close(false);
};

this.dsData_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		if(e.columnid == "TY_GUBUN"){
			//this.dsData.setColumn(0, "CD_SITE", this.dsData.getColumn(0, "TY_GUBUN") + this.YY_WORK);
			this.fnGetNext();
		}		
	}
};

this.fnGetNext = function() {
	var strSvcId    = "next";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "next=dsData";
	var outData     = "dsList=next0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]	
}
]]></Script>
    <Objects>
      <Dataset id="dsData" onvaluechanged="dsData_onvaluechanged">
        <ColumnInfo>
          <Column id="DS_PARAM" type="STRING" size="256"/>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="DS_SITE" type="STRING" size="256"/>
          <Column id="TY_GUBUN" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TY_GUBUN">B</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">chk</Col>
            <Col id="SP">DCZPR_CREATE_SITE_CHK</Col>
          </Row>
          <Row>
            <Col id="TARGET">insert</Col>
            <Col id="SP">DCZPR_CREATE_SITE_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">next</Col>
            <Col id="SP">DCZPR_CREATE_SITE_NEXT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsList"/>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divData.form.edt00" propid="value" datasetid="dsData" columnid="CD_SITE"/>
      <BindItem id="item1" compid="divData.form.edt00_00" propid="value" datasetid="dsData" columnid="DS_SITE"/>
      <BindItem id="item2" compid="divData.form.cbo00" propid="value" datasetid="dsData" columnid="TY_GUBUN"/>
    </Bind>
  </Form>
</FDL>
