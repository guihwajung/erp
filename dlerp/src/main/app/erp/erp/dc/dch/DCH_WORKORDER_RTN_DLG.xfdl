<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="700" height="180" titletext="반려사유" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divData" taborder="0" left="0" top="0" bottom="0" right="0" ondragmove="divData_ondragmove" text="" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Static id="staDS_SITE00_00" taborder="0" text="사유" left="0" top="34" width="87" height="60" cssclass="sta_WF_tablelabel" textAlign="center"/>
              <Static id="staBg00_00" taborder="1" left="86" top="34" height="60" cssclass="sta_WF_tablebg" width="544"/>
              <Button id="btnConfirm" taborder="2" left="255" width="60" onclick="fnConfirm" height="20" top="107" text="확인"/>
              <Button id="btnCancel" taborder="3" text="닫기" width="60" height="20" onclick="fnCloseForm" top="107" left="317"/>
              <TextArea id="ctxtDS_RETURN" taborder="4" left="90" top="39" height="50" value="" width="536" readonly="false"/>
            </Layout>
          </Layouts>
        </Div>
        <Static id="sta02" taborder="1" text="반려정보" left="7" top="8" width="165" height="22" cssclass="sta_TITLE_Bg"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj: nexacro.Form, e: nexacro.LoadEventInfo) {
    // -- 필수 -------------------//
    this.gfnFormOnLoad(this);
    this.gfnFormInfo(this);
    // ---------------------------//

    this.fnSetButton();
    this.fnSetExtendButton();
    this.fnSetVariable();
    this.fnSetEvent();
    this.fnSetParameter();
	this.fnSetCombo();
	
	if(!this.gfnIsNull(this.getOwnerFrame().DS_RETURN)) {
		this.divData.form.ctxtDS_RETURN.set_value(this.getOwnerFrame().DS_RETURN);
		this.divData.form.ctxtDS_RETURN.set_readonly(true);
		this.divData.form.btnConfirm.set_visible(false);
	};
};

this.fnSetCombo = function(){
}

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
};
/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
/*
 *	조회 버튼
 */
this.fnSelect = function() {
}


/*
 *	입력 버튼
 */
this.fnAdd = function() {
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnValidate = function() {
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg) {

}


this.fnCloseForm = function() {
    this.getParentContext().close(null);
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
//코드파인드의 파라미터 값을 넘겨줄때 사용하는 함수

this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
}

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/


/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회1 버튼
 */
 
 this.fnConfirm = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	var json = {};
	json.TY_STATUS  = this.getOwnerFrame().TY_STATUS;
	json.DS_RETURN 	= this.divData.form.ctxtDS_RETURN.value;

	this.getParentContext().close(JSON.stringify(json));
 };
]]></Script>
    <Objects/>
    <Bind>
      <BindItem id="item0" compid="divData.form.ctxtDS_RETURN" propid="value" datasetid="dsList" columnid="DS_WORK"/>
    </Bind>
  </Form>
</FDL>
