<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="DWA_SILHENG" width="1280" height="720" titletext="New Form" onload="DWA_SILHENG_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="1" left="0.0" top="10.0" height="110.0" right="0" cssclass="div_SEARCH_Bg" formscrollbartype="auto auto" text="">
          <Layouts>
            <Layout>
              <Static id="sta00" taborder="4" text="평가년도" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctcYY_WORK" taborder="0" left="sta00:0.0" top="10.0" width="70" height="24.0" url="cmm::cmmCalYY.xfdl"/>
              <Static id="sta01" taborder="3" text="현장코드" left="0.0" top="sta00:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_SITE" CodeFindName="DZX_CFSITE" CDTextWidth="50" taborder="2" left="sta01:0.0" top="ctcYY_WORK:10.0" width="352" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Div id="ccfMagam" CDTextWidth="50" CodeFindName="DCX_CFEVALUE_MAGAM_SEQ" taborder="1" left="0.0" top="10.0" width="279" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staCD_VENDOR" taborder="5" text="업체코드" left="ccfMagam:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_VENDOR" CodeFindName="DCX_CFVENDOR_DC" CDTextWidth="50" taborder="6" left="staCD_VENDOR:0.0" top="10.0" width="245" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DCDPR_EVALUE_UPCHAE_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">update</Col>
            <Col id="SP">DCDPR_EVALUE_UPCHAE_DELETE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="YR_EVALUE" type="STRING" size="256"/>
          <Column id="NO_SEQ" type="STRING" size="256"/>
          <Column id="CD_VENDOR" type="STRING" size="256"/>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="ID_EVALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="YR_EVALUE"/>
            <Col id="NO_SEQ"/>
            <Col id="ID_EVALUE"/>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.DWA_SILHENG_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	var dt = new Date();
	this.divSearch.form.ctcYY_WORK.form.TextBox.set_value(dt.getFullYear());
	
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
};

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnDelete = this.gfnFormButtonAdd("btnDelete", "fnVenderDelete");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.AllChange = false;
	this.ccfMagam = this.divSearch.form.ccfMagam;
	this.ccfCD_SITE = this.divSearch.form.ccfCD_SITE;
	this.ccfCD_VENDOR = this.divSearch.form.ccfCD_VENDOR;
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() 
{
	this.ccfMagam.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
	
	this.gfnGridInit(this.dxGrid, this.dsList, "DC", "DCD_EVALUE_UPCHAE");
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("YR_EVALUE", "string");
	this.dsSelect.addColumn("NO_SEQ", "string");
	this.dsSelect.addColumn("CD_SITE", "string");
	this.dsSelect.addColumn("CD_VENDOR", "string");
	
	this.dsUpdate = new Dataset();
	this.dsUpdate.addColumn("YR_EVALUE", "string");
	this.dsUpdate.addColumn("NO_SEQ", "string");
	this.dsUpdate.addColumn("CD_SITE", "string")
	this.dsUpdate.addColumn("CD_VENDOR", "string");

};

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if(!this.fnValidate()) return;

	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "YR_EVALUE", this.dsSearch.getColumn(0, "YR_EVALUE"));
	this.dsSelect.setColumn(0, "NO_SEQ", this.dsSearch.getColumn(0, "NO_SEQ"));
	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsSelect.setColumn(0, "CD_VENDOR", this.dsSearch.getColumn(0, "CD_VENDOR"));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {

};

/*
 *	삭제 버튼
 */
this.fnDel = function() {

}

/*
 *	저장 버튼
 */
this.fnSave = function() 
{
	if (!this.gfnGridValidate(this.dxGrid)) return;	

	this.dxGrid.updateToDataset();
		
	this.dsUpdate.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.dsList.getColumn(i, "CHK")
		switch(flag) {
			case 1:
				var nrow = this.dsUpdate.addRow();
				this.dsUpdate.setColumn(nrow, "YR_EVALUE", this.dsList.getColumn(i, "YR_EVALUE"));
				this.dsUpdate.setColumn(nrow, "NO_SEQ", this.dsList.getColumn(i, "NO_SEQ"));
				this.dsUpdate.setColumn(nrow, "CD_SITE", this.dsList.getColumn(i, "CD_SITE"));
				this.dsUpdate.setColumn(nrow, "CD_VENDOR", this.dsList.getColumn(i, "CD_VENDOR"));
				break;
		}
	}
	
	if (this.dsUpdate.rowcount == 0) return;
	
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "update=dsUpdate";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnValidate = function() {

	if (this.gfnIsNull(this.dsSearch.getColumn(0, "YR_EVALUE"))) {
		this.fnVaidateCallback = function() {
			this.divSearch.form.ctcYY_WORK.form.TextBox.setFocus();
		}
		this.gfnAlert("평가년도를 입력하세요.");
		return false;
	}
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "NO_SEQ"))){
		this.fnVaidateCallback = function() {
			this.ccfMagam.form.CDTextBox.setFocus();
		}
		this.gfnAlert("평가ID를 입력하세요.");
		return false;
	}
	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);		
	}
	else if(svcID == "save")
	{
		if(errorCode == 0)
		{
			this.FormBtns.Select.click();
		}	
		else 
		{
			this.gfnAlert(errorMsg);
		}
	}
};

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if(id == "ccfMagam"){
		dsUserParam.setColumn(nrow, "YR_EVALUE", this.dsSearch.getColumn(0, "YR_EVALUE"));
	}
	return true;
};

this.fnAfterCDTextChanged = function(id){
};


/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
 /************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 this.fnGrid_BeforeUserDataSetParam = function(id, dsUserParam, nrow) {	
	// 그리드에서 코드파인드 id는 그리드셋팅의 코드파인드 식별ID
 	if(id == "DCX_CFBASEINFO")
	{
		this.AllChange = true;
	}
	
	return true;
}
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		// 폼상태 초기화
		this.gfnSetFormStatus(this);	
		this.gfnGridClear(this.dxGrid);
	}
};

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};

this.fnVenderDelete = function(obj:nexacro.Button, e:nexacro.ClickEventInfo){

	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	this.gfnConfirm("선택한 업체를 평가에서 제외 하시겠습니까?", "fnVenderDelete_Callback", "Create");
};

this.fnVenderDelete_Callback = function(strId, val) {
	if(val == true) {		
		this.fnSave();
	}
}]]></Script>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ctcYY_WORK.form.TextBox" propid="value" datasetid="dsSearch" columnid="YR_EVALUE"/>
      <BindItem id="item2" compid="divSearch.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item1" compid="divSearch.form.ccfMagam.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="NO_SEQ"/>
      <BindItem id="item3" compid="divSearch.form.ccfCD_VENDOR.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_VENDOR"/>
    </Bind>
  </Form>
</FDL>
