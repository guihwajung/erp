<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="New Form" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="78.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="staYR_MAGAM" taborder="0" text="평가년도" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYR_MAGAM" taborder="1" left="staYR_MAGAM:0.0" top="10.0" width="70" height="24.0" url="cmm::cmmCalYY.xfdl"/>
              <Div id="ccfNO_SEQ" CodeFindName="DCX_CFEVALUE_NOSEQ" CDTextWidth="40" taborder="2" left="ctclYR_MAGAM:0.0" top="10.0" width="200" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staCD_SITE" taborder="3" text="현장코드" top="10.0" width="92.0" height="24.0" left="ccfNO_SEQ:0.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_SITE" CodeFindName="DZX_CFSITE" CDTextWidth="80" taborder="4" left="staCD_SITE:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staCD_VENDOR" taborder="5" text="업체코드" left="0.0" top="staYR_MAGAM:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_VENDOR" CodeFindName="DCX_CFVENDOR_DC" CDTextWidth="80" taborder="6" left="staCD_VENDOR:0.0" top="staYR_MAGAM:10.0" width="273" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staYN_EVALUE" taborder="7" text="대상여부" left="ccfCD_VENDOR:0.0" top="staYR_MAGAM:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Combo id="ccboYN_EVALUE" taborder="8" left="staYN_EVALUE:0.0" top="staYR_MAGAM:10.0" width="80" height="24.0" innerdataset="dsYN_EVALUE" codecolumn="CD_CODE" datacolumn="DS_CODE"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	this.fnSetYear();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// R21	외주구매팀권한
	// R41	본사pm부서
	// R99	운영자권한
	
	var cd_role = this.FormInfo.CD_ROLE;
	var cd_field = this.objApp.gdsUserInfo.getColumn(0, "CD_SITE");
	var ds_field = this.objApp.gdsUserInfo.getColumn(0, "DS_SITE");
	
	if(cd_role!="R21" && cd_role!="R41" && cd_role!="R99")
	{	
		this.divSearch.form.ccfCD_SITE.set_enable(false);
	}
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnVendorChg = this.gfnFormButtonAdd("btnVendorChg", "fnVendorChg");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {	
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.divSearch.form.ccfNO_SEQ.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.divSearch.form.ccfCD_VENDOR.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";

	// 그리드 초기화
	// 그리드 초기화
// 	if(this.FormInfo.DS_PARAM == "DM")
// 	{
// 		this.gfnGridInit(this.dxGrid, this.dsList, "DC", "DCD_EVALUEMAGAM_VENDOR_DM");
// 	}else
// 	{
		this.gfnGridInit(this.dxGrid, this.dsList, "DC", "DCD_EVALUEMAGAM_VENDOR");
//	}
	
	this.dxGrid.addEventHandler("onselectchanged", this.fnGrid_RowCellChanged, this);	

};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("YR_MAGAM", "string");
	this.dsSelect.addColumn("NO_SEQ", "string");
	this.dsSelect.addColumn("CD_SITE", "string");
	this.dsSelect.addColumn("CD_VENDOR", "string");
	this.dsSelect.addColumn("YN_EVALUE", "string");
	this.dsSelect.addColumn("TY_SYSTEM", "string");

	this.dsUpdate = new Dataset();
	this.dsUpdate.addColumn("YR_MAGAM", "string");
	this.dsUpdate.addColumn("NO_SEQ", "string");
	this.dsUpdate.addColumn("CD_SITE", "string");
	this.dsUpdate.addColumn("CD_VENDOR", "string");
	this.dsUpdate.addColumn("NO_HADOCONT", "string");
	this.dsUpdate.addColumn("YN_EVALUE", "string");
	this.dsUpdate.addColumn("DS_EXCEPT_BIGO", "string");
	this.dsUpdate.addColumn("TY_SYSTEM", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "YR_MAGAM", this.dsSearch.getColumn(0, "YR_MAGAM"));
	this.dsSelect.setColumn(0, "NO_SEQ", this.dsSearch.getColumn(0, "NO_SEQ"));
	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsSelect.setColumn(0, "CD_VENDOR", this.dsSearch.getColumn(0, "CD_VENDOR"));
	this.dsSelect.setColumn(0, "YN_EVALUE", this.dsSearch.getColumn(0, "YN_EVALUE"));
	this.dsSelect.setColumn(0, "TY_SYSTEM", this.FormInfo.DS_PARAM);
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	var nrow = this.gfnGridAdd(this.dxGrid); // top (default), bottom, current
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	// 그리드 필수항목 체크
	if (!this.gfnGridValidate(this.dxGrid)) return;	

	this.dxGrid.updateToDataset();
		
	this.dsUpdate.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "U":
				var nrow = this.dsUpdate.addRow();
 				this.dsUpdate.setColumn(nrow, "YR_MAGAM", this.dsList.getColumn(i, "YR_MAGAM"));
				this.dsUpdate.setColumn(nrow, "NO_SEQ", this.dsList.getColumn(i, "NO_SEQ"));
				this.dsUpdate.setColumn(nrow, "CD_SITE", this.dsList.getColumn(i, "CD_SITE"));
				this.dsUpdate.setColumn(nrow, "CD_VENDOR", this.dsList.getColumn(i, "CD_VENDOR"));
				this.dsUpdate.setColumn(nrow, "NO_HADOCONT", this.dsList.getColumn(i, "NO_HADOCONT"));
				this.dsUpdate.setColumn(nrow, "YN_EVALUE", this.dsList.getColumn(i, "YN_EVALUE"));
				this.dsUpdate.setColumn(nrow, "DS_EXCEPT_BIGO", this.dsList.getColumn(i, "DS_EXCEPT_BIGO"));
				this.dsUpdate.setColumn(nrow, "TY_SYSTEM", this.FormInfo.DS_PARAM);
				break;
		}
	}
	
	if (this.dsUpdate.rowcount == 0) return;
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "update=dsUpdate";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;
	
	if (this.gfnIsNull(this.dsSearch.getColumn(0,"YR_MAGAM"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.divSearch.form.ctclYR_MAGAM.form.TextBox.setFocus();
		}
		this.gfnAlert("평가년도를 입력하세요.", "fnVaidateCallback");
	}
	else if (this.gfnIsNull(this.dsSearch.getColumn(0,"NO_SEQ"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.divSearch.form.ccfNO_SEQ.form.CDTextBox.setFocus();
		}
		this.gfnAlert("평가분기를 입력하세요.", "fnVaidateCallback");
	}
	
	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
		
		this.dsList.set_enableevent(false);
		for(var i = 0;i < this.dsList.rowcount; i++)
		{
			this.dsList.setColumn(i, "CHK", 0);
		}
		this.dsList.set_enableevent(true);
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	else if(svcID == "year")
	{
		if(this.dsYear.rowcount > 0)
		{
			this.dsSearch.setColumn(0, "YR_MAGAM", this.dsYear.getColumn(0, "YR_MAGAM"));
			this.dsSearch.setColumn(0, "NO_SEQ", this.dsYear.getColumn(0, "NO_SEQ"));		
		
			this.divSearch.form.ccfNO_SEQ.form.fnCodeFindLoad();
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if(id == "ccfNO_SEQ")
	{
		dsUserParam.setColumn(nrow, "CD_SYSTEM", "DC");
		dsUserParam.setColumn(nrow, "CD_TYPE", "D01");
		dsUserParam.setColumn(nrow, "YR_MAGAM",this.dsSearch.getColumn(0, "YR_MAGAM"));
		dsUserParam.setColumn(nrow, "TY_SYSTEM", this.FormInfo.DS_PARAM);
	}
	else if(id == "ccfCD_VENDOR")
	{
		dsUserParam.setColumn(nrow, "CD_GUBUN", "");
		dsUserParam.setColumn(nrow, "CD_MODULE", "ALL");
	}

	return true;
}
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
this.fnGrid_RowCellChanged = function(obj:nexacro.Grid,e:nexacro.GridSelectEventInfo, event:nexacro.KeyEventInfo)
{
	if ((obj.oldrow > -1 && obj.oldrow == e.row)
		|| (obj.oldrow == -1 && e.oldrow != e.row)) {
		var colnm = this.gfnGridGetBindColumnNameByIndex(obj, e.cell);
		
		var event = nexacro.KeyEventInfo;
		
		var rows = this.dxGrid.getSelectedDatasetRows();
		
		this.dsList.set_enableevent(false);
		for(var i = 0; i < this.dsList.rowcount; i++)
		{
			var check = false;
			
			if(this.gfnGetFlag(this.dsList, i) != "#")
			{
				if(colnm == "CHK")
				{
					check = true;
					break;
				}
				
				if(rows.length > 0)
				{
					for(var j = 0; j < rows.length ; j++)
					{
						if(i == e.row || i == rows[j])
						{
							check = true;
							this.dsList.setColumn(i, "CHK", 1);
						}
					}
				}
				else
				{
					if(i == e.row)
					{
						check = true;
						this.dsList.setColumn(i, "CHK", 1);
					}
				}
				
				if(check == false)
				{
					this.dsList.setColumn(i, "CHK", 0);
				}
			}
		}
		this.dsList.set_enableevent(true);
		
		obj.oldrow = -1;
	}
}
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};


// 담당자 일괄지정
this.fnVendorChg = function()
{
	var param = {};
	param.YR_MAGAM = this.dsList.getColumn(this.dsList.rowposition, "YR_MAGAM");
	param.NO_SEQ = this.dsList.getColumn(this.dsList.rowposition, "NO_SEQ");
	param.CD_SITE = this.dsList.getColumn(this.dsList.rowposition, "CD_SITE");
	param.YN_FLAG = this.dsList.getColumn(this.dsList.rowposition, "YN_FLAG");
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DCD_EVALUEMAGAM_VENDOR_DLG", "fnVendorChg_callback", param, 500, 200);
}

this.fnVendorChg_callback = function(strID, val)
{
	if(val == true)
	{
		for(var i = 0; i < this.dsList.rowcount; i++)
		{
			if(this.dsList.getColumn(i, "CHK") == 1)
			{
				this.dsList.setColumn(i, "YN_EVALUE", "N");
				this.dsList.setColumn(i, "DS_EXCEPT_BIGO", this.popupVal.rm_bigo);
			}
		}
		
		//this.fnSave();
	}
}


this.fnSetYear = function()
{
	this.dsYearSelect = new Dataset();
	this.dsYearSelect.addColumn("YR_MAGAM", "string");
	this.dsYearSelect.addColumn("TY_SYSTEM", "string");
	this.dsYearSelect.clearData();
	this.dsYearSelect.addRow();
	
	this.dsYearSelect.setColumn(0, "YR_MAGAM", this.gfnGetDate().substr(0,4));
	this.dsYearSelect.setColumn(0, "TY_SYSTEM", this.FormInfo.DS_PARAM);
	
	var strSvcId    = "year";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "year=dsYearSelect";
	var outData     = "dsYear=year0";
	var strArg      = "";
	var callBackFnc = "fnCallback";

	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DCDPR_EVALUEMAGAM_VENDOR_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">update</Col>
            <Col id="SP">DCDPR_EVALUEMAGAM_VENDOR_UPDATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">year</Col>
            <Col id="SP">DCDPR_EVALUEMAGAM_YEAR_MAX_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="YR_MAGAM" type="STRING" size="256"/>
          <Column id="NO_SEQ" type="STRING" size="256"/>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="CD_VENDOR" type="STRING" size="256"/>
          <Column id="YN_EVALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="YN_EVALUE">Y</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsNO_SEQ" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">001</Col>
            <Col id="DS_CODE">1/4분기</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">002</Col>
            <Col id="DS_CODE">2/4분기</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">003</Col>
            <Col id="DS_CODE">3/4분기</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">004</Col>
            <Col id="DS_CODE">4/4분기</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsYear"/>
      <Dataset id="dsYN_EVALUE" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="DS_CODE">전체</Col>
            <Col id="CD_CODE"/>
          </Row>
          <Row>
            <Col id="DS_CODE">대상</Col>
            <Col id="CD_CODE">Y</Col>
          </Row>
          <Row>
            <Col id="DS_CODE">제외</Col>
            <Col id="CD_CODE">N</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ctclYR_MAGAM.form.TextBox" propid="value" datasetid="dsSearch" columnid="YR_MAGAM"/>
      <BindItem id="item1" compid="divSearch.form.ccfNO_SEQ.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="NO_SEQ"/>
      <BindItem id="item2" compid="divSearch.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item3" compid="divSearch.form.ccfCD_VENDOR.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_VENDOR"/>
      <BindItem id="item4" compid="divSearch.form.ccboYN_EVALUE" propid="value" datasetid="dsSearch" columnid="YN_EVALUE"/>
    </Bind>
  </Form>
</FDL>
