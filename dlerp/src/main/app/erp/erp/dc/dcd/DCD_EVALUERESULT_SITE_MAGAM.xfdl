<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="New Form" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Div id="ctclYM_WORK" taborder="3" left="0.0" top="10.0" width="80" height="24.0" dateformat="yyyy-mm" editformat="yyyymm" url="cmm::cmmCalMM.xfdl"/>
              <Static id="sta00" taborder="0" text="현장코드" left="ctclYM_WORK:0.0" top="10.0" width="92.0" height="24.0" textDecoration="none" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_SITE" CodeFindName="DZX_CFSITE" CDTextWidth="80" taborder="1" left="sta00:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staYM_WORK" taborder="2" text="평가년월" left="ccfCD_SITE:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	var today = this.gfnGetDate();
	this.dsSearch.setColumn(0, "YM_WORK", today.substr(0,6));
	
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
	//this.FormBtns.Select.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnCancel = this.gfnFormButtonAdd("btnCancel", "fnCancel");  
	this.btnConfirm = this.gfnFormButtonAdd("btnConfirm", "fnConfirm");  
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ctclYM_WORK = this.divSearch.form.ctclYM_WORK;
	this.ccfCD_SITE = this.divSearch.form.ccfCD_SITE;
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {	
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DC", "DCD_EVALUERESULT_SITE_MAGAM");

	// 셀 수정가능 여부
	//this.dxGrid.EnterCell = "fnGrid_EnterCell";
	
	// 셀 변경 후 이벤트
	//this.dxGrid.AfterEdit = "fnGrid_AfterEdit";
	
	// 그리드 코드파인드 설정
	//this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
	
	// 전체체크박스 체크/해제 이벤트
	//this.dxGrid.AfterAllCheck = "fnGrid_AfterAllCheck";
	
	// BUTTON, BUTTON-IN 처리
	//this.dxGrid.ExpandUp = "fnGrid_ExpandUp";
	
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("YR_EVALUE", "string");
	this.dsSelect.addColumn("NO_SEQ", "string");
	this.dsSelect.addColumn("CD_SITE", "string");
	
	this.dsExec = new Dataset();
	this.dsExec.addColumn("YR_EVALUE", "string");
	this.dsExec.addColumn("NO_SEQ", "string");
	this.dsExec.addColumn("CD_SITE", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;

	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "YR_EVALUE", this.dsSearch.getColumn(0, "YM_WORK").substr(0,4));
	this.dsSelect.setColumn(0, "NO_SEQ", this.dsSearch.getColumn(0, "YM_WORK").substr(4,2));
	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	var nrow = this.gfnGridAdd(this.dxGrid); // top (default), bottom, current	
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}


/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {	
	var validate = true;
	/*
	if (this.gfnIsNull(this.dsSearch.getColumn(0,"CD_SITE"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.ccfCD_SITE.form.CDTextBox.setFocus();
		}
		this.gfnAlert("현장코드는 반드시 입력 하셔야 합니다.", "fnVaidateCallback");
	}else 
	*/
	if(this.gfnIsNull(this.dsSearch.getColumn(0,"YM_WORK"))){
		validate = false;
	
		this.fnVaidateCallback = function() {
			this.divSearch.form.ctclYM_WORK.form.TextBox.setFocus();
		}
		this.gfnAlert("평가년월을 입력하세요.", "fnVaidateCallback");
	}
	
	return validate;
	
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg, strArg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	else if(svcID == "exec") {
		if (errorCode == 0) {
			var json = this.gfnArgsToJson(strArg);
			strArg = json.gubun;
			
			var msg = "";
			switch(strArg)
			{
				case "Confirm" :
					msg += "마감 ";
					break;
				case "Cancel" :
					msg += "마감취소 ";
					break;
			}
			
			msg += "정상 처리되었습니다.";
			
			this.gfnAlert(msg);
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
 // 마감 버튼 클릭 이벤트
 this.fnConfirm = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	this.gfnConfirm("마감 하시겠습니까?", "fnConfirm_Confirm", "Confirm");
}

 // 마감취소 버튼 클릭 이벤트
 this.fnCancel = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	this.gfnConfirm("마감취소 하시겠습니까?", "fnConfirm_Confirm", "Cancel");
}

this.fnConfirm_Confirm = function(strId, val) {
	if(val == true) {		
		this.fnExec(strId);
	}
}


/*
 *	마감 or 마감취소 처리
 */
this.fnExec = function(tyWrk) {

	this.dsExec.clearData();
	
	this.dsExec.addRow();
	
	var nRow = this.dsList.rowposition;
	
	this.dsExec.setColumn(0, "YR_EVALUE", this.dsList.getColumn(nRow, "YR_EVALUE"));
	this.dsExec.setColumn(0, "NO_SEQ", this.dsList.getColumn(nRow, "NO_SEQ"));
	this.dsExec.setColumn(0, "CD_SITE", this.dsList.getColumn(nRow, "CD_SITE"));
	
	if (this.dsExec.rowcount == 0) return;
	
	var strSvcId    = "exec";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	if(tyWrk == "Confirm"){
		var inData      = "exec_magam=dsExec";
	}else{
		var inData      = "exec_magamcl=dsExec";
	}	
	var outData     = "";
	var strArg      = "gubun=" + tyWrk;
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}





this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};

]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DCDPR_EVALUERESULT_SITE_MAGAM_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">exec_magam</Col>
            <Col id="SP">DCDPR_EVALUERESULT_SITE_MAGAM_CONFIRM</Col>
          </Row>
          <Row>
            <Col id="TARGET">exec_magamcl</Col>
            <Col id="SP">DCDPR_EVALUERESULT_SITE_MAGAM_CANCEL</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="YM_WORK" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_SITE"/>
            <Col id="YM_WORK"/>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item2" compid="divSearch.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item0" compid="divSearch.form.ctclYM_WORK.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_WORK"/>
    </Bind>
  </Form>
</FDL>
