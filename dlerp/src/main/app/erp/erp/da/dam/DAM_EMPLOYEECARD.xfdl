<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="DAM_EMPLOYEECARD" width="1280" height="720" titletext="출입카드(사원증)관리" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="1" left="0" top="0" height="46.0" right="0" cssclass="div_SEARCH_Bg" text="">
          <Layouts>
            <Layout>
              <Div id="ccfCD_CORP" CDTextWidth="70" taborder="5" left="0.0" top="10.0" width="280" height="24.0" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DAX_CFCORP"/>
              <Static id="staID_SABUN" taborder="0" text="성명" left="ccfCD_CORP:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfID_SABUN" CDTextWidth="70" taborder="1" left="staID_SABUN:0.0" top="10.0" width="200" height="24.0" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DAX_CFBASEINFO_ALL"/>
              <Static id="staCD_APPROVAL" taborder="2" text="결재상태" left="ccfID_SABUN:0.0" top="10.0" width="92.0" height="24.0" rtl="false" cssclass="sta_WF_SchLabel"/>
              <Combo id="cboCD_APPROVAL" taborder="3" left="staCD_APPROVAL:0.0" top="10.0" width="89" height="24.0" datacolumn="DS_CODE" codecolumn="CD_CODE" value="" onitemchanged="fnSearchInit" text="전체" index="0" innerdataset="dsCD_APPROVAL"/>
              <Static id="staCD_CORP" taborder="4" text="법인" left="cboCD_APPROVAL:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Edit id="edtID_PERSON" taborder="6" left="cboCD_APPROVAL:0.0" top="10.0" width="86" height="24.0" enable="false" visible="false"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="1" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0" oncelldblclick="divData_objGrid_oncelldblclick"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	this.cboCD_APPROVAL.set_index(0);
	
	this.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);		
	this.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP);	
	
	if(this.FormInfo.GR_SEARCH == "9"){
		//GR_SEARCH 가 9인경우에는 본인것만 신청 가능
		this.ccfID_SABUN.form.CDTextBox.set_value(this.AuthClient.ID_SABUN);
		this.ccfID_SABUN.form.DSTextBox.set_value(this.AuthClient.DS_HNAME);
		this.ccfCD_CORP.set_enable(false);
		this.ccfID_SABUN.set_enable(false);
	}

	//화면 로드시 자동조회
	//this.FormBtns.Select.click();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {

}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnReq = this.gfnFormButtonAdd("Req", "fnReq");	//신청
	
	if(this.FormInfo.GR_SEARCH == "1"){
		this.btnCfm = this.gfnFormButtonAdd("Cfm", "fnCfm");	//승인
		this.btnCanc = this.gfnFormButtonAdd("Canc", "fnCanc"); //반려	
	}	
	
};

//명함신청
this.fnReq = function(){
	var param = {};
 	param.CD_CORP = this.dsSearch.getColumn(0, "CD_CORP");
	param.ID_SABUN = this.dsSearch.getColumn(0, "ID_SABUN");
	param.DS_HNAME = this.dsSearch.getColumn(0, "DS_HNAME");

	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DAM_EMPLOYEECARD_DLG", "fnReqPopCallback", param);
}
this.fnReqPopCallback = function(id, val){
	if(val){
		this.FormBtns.Select.click();
	}
}

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {

	this.dxGrid = this.divData.form.objGrid;

	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;
	this.ccfID_SABUN = this.divSearch.form.ccfID_SABUN;
	this.cboCD_APPROVAL =	this.divSearch.form.cboCD_APPROVAL;		
	this.edtID_PERSON = this.divSearch.form.edtID_PERSON;
	
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";	
	this.ccfID_SABUN.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfID_SABUN.AfterCDTextChanged = "fnAfterCDTextChanged";

	this.gfnGridInit(this.dxGrid, this.dsList, "DA", "DAM_EMPLOYEECARD");

	// 첨부파일
	this.dxGrid.ExpandUp = "fnGrid_ExpandUp";
	
 	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";// 그리드 코드파인드 설정
 	this.dxGrid.AfterCDTextChanged = "fnGrid_AfterCDTextChanged";// 그리드 코드파인드 값 변경
	this.dxGrid.EnterCell = "fnGrid_EnterCell";	// 셀 수정가능 여부

}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("ID_SABUN", "string");
	this.dsSelect.addColumn("CD_APPROVAL", "string");
	this.dsSelect.addColumn("GR_SEARCH", "string");
	this.dsSelect.addColumn("ID_USER", "string");
	this.dsSelect.addColumn("TY_AUTH", "string");
	
	this.dsCfm = new Dataset();
	this.dsCfm.addColumn("ID_PERSON", "int");
	this.dsCfm.addColumn("NO_SEQ", "int");
	this.dsCfm.addColumn("CD_APPROVAL", "string");
	this.dsCfm.addColumn("GR_SEARCH", "string");
	this.dsCfm.addColumn("ID_USER", "string");
	this.dsCfm.addColumn("TY_AUTH", "string");
	this.dsCfm.addColumn("GR_CORP", "string");
	
	this.dsSave = new Dataset();
	this.dsSave.addColumn("TY_SAVE", "string");
	this.dsSave.addColumn("ID_PERSON", "int");
	this.dsSave.addColumn("NO_SEQ", "int");
	this.dsSave.addColumn("CD_EMPLOYEECARD", "string");
	this.dsSave.addColumn("DT_ISSUE", "string");
	this.dsSave.addColumn("DS_REMARK", "string");
	this.dsSave.addColumn("GR_SEARCH", "string");
	this.dsSave.addColumn("ID_USER", "string");
	this.dsSave.addColumn("TY_AUTH", "string");
	this.dsSave.addColumn("GR_CORP", "string");

}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if(!this.fnSelectValid()) return;

	this.gfnGridBeforeSelect(this.dxGrid);
	this.gfnSetFormStatus(this);

	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));
	this.dsSelect.setColumn(0, "ID_SABUN", this.dsSearch.getColumn(0, "ID_SABUN"));
	this.dsSelect.setColumn(0, "CD_APPROVAL", this.dsSearch.getColumn(0, "CD_APPROVAL"));
	this.dsSelect.setColumn(0, "GR_SEARCH", this.FormInfo.GR_SEARCH);
	this.dsSelect.setColumn(0, "ID_USER", this.AuthClient.ID_USER);
	this.dsSelect.setColumn(0, "TY_AUTH", this.FormInfo.TY_AUTH);	

	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
	
}

this.fnSelectValid = function(){
	if(this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)){
		this.fnValidCallback = function(){
			this.ccfCD_CORP.form.CDTextBox.setFocus();
		}
		this.gfnAlert("법인을 선택하세요!", "fnValidCallback");
		return false;
	}
	
	return true;
}

this.fnAdd = function() {
	//var nrow = this.gfnGridAdd(this.dxGrid);
}

/*
 *	삭제 버튼
 */
this.fnDel = function() { 
// CD_APPROVAL
// 01	상신
// 03	결재완료
// 04	반려

	var sCD_APPROVAL = this.gfnNvl(this.dsList.getColumn(this.dsList.rowposition, "CD_APPROVAL"), "");
	var sDT_ISSUE = this.gfnNvl(this.dsList.getColumn(this.dsList.rowposition, "DT_ISSUE"), "");
	if(!this.gfnIsNull(sDT_ISSUE) || sCD_APPROVAL == "01" || sCD_APPROVAL == "04"){
		this.gfnGridDel(this.dxGrid); 
	}else{
		this.gfnAlert("삭제가능한 상태가 아닙니다.");
	}
} 

/*
 *	저장 버튼
 */
this.fnSave = function() {
	// 그리드 필수항목 체크
	if (!this.gfnGridValidate(this.dxGrid)) return;

	this.dxGrid.updateToDataset();
	this.dsSave.clearData();

	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);

		var nrow = this.dsSave.addRow();
		this.dsSave.setColumn(nrow, "TY_SAVE", flag);
		this.dsSave.setColumn(nrow, "ID_PERSON", this.dsList.getColumn(i, "ID_PERSON"));
		this.dsSave.setColumn(nrow, "NO_SEQ", this.dsList.getColumn(i, "NO_SEQ"));
		this.dsSave.setColumn(nrow, "CD_EMPLOYEECARD", this.dsList.getColumn(i, "CD_EMPLOYEECARD"));
		this.dsSave.setColumn(nrow, "DT_ISSUE", this.dsList.getColumn(i, "DT_ISSUE"));
		this.dsSave.setColumn(nrow, "DS_REMARK", this.dsList.getColumn(i, "DS_REMARK"));
		this.dsSave.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		this.dsSave.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
		this.dsSave.setColumn(nrow, "TY_AUTH", this.FormInfo.TY_AUTH);
		this.dsSave.setColumn(nrow, "GR_CORP", this.AuthClient.CD_CORP);
	}	
	
	if (this.dsSave.rowcount == 0) return;

	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";

	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc);   // 통신방법 정의 [생략가능]
}

this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

this.fnPrint = function() {
}

// 승인
this.fnCfm = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if (this.dsList.rowcount == 0) return;
	
	if (this.dsList.findRow("CHK", "1") == -1) {
		this.gfnAlert("대상자를 체크해주세요.");
		return;
	}		
	
// --CD_APPROVAL
// --01	상신
// --03	결재완료
// --04	반려	
	
	//01 신청, 03 승인취소
	var nCnt = 0;
	for(var i=0;i<this.dsList.rowcount;i++){
		if(this.dsList.getColumn(i, "CHK") != "1") continue;
		if(this.dsList.getColumn(i, "CD_APPROVAL") != "01") continue;
		if(this.gfnNvl(this.dsList.getColumn(i, "DT_ISSUE"),"") != "") continue;
		
		nCnt++;
	}
	if(nCnt == 0){
		this.gfnAlert("상신상태만 승인가능합니다.");
		return;
	}	
	
	this.gfnConfirm("승인하시겠습니까?", "fnCfmProc");
}

// 승인취소
this.fnCanc = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if (this.dsList.rowcount == 0) return;
	
	if (this.dsList.findRow("CHK", "1") == -1) {
		this.gfnAlert("대상자를 체크해주세요.");
		return;
	}	
	
// --CD_APPROVAL
// --01	상신
// --03	결재완료
// --04	반려	
	
	//02 승인
	var nCnt = 0;
	for(var i=0;i<this.dsList.rowcount;i++){
		if(this.dsList.getColumn(i, "CHK") != "1") continue;
		if(this.dsList.getColumn(i, "CD_APPROVAL") != "03") continue;
		if(this.gfnNvl(this.dsList.getColumn(i, "DT_ISSUE"),"") != "") continue;
		
		nCnt++;
	}
	if(nCnt == 0){
		this.gfnAlert("승인상태만 승인취소가능합니다.");
		return;
	}		
	
	this.gfnConfirm("승인취소하시겠습니까?", "fnCancProc");
}


//승인 처리
this.fnCfmProc = function(id,val){
	if(val == false) return;
	
	// 그리드 필수항목 체크
	if (!this.gfnGridValidate(this.dxGrid)) return;	

	this.dxGrid.updateToDataset();
	
	this.dsCfm.clearData();
	
// --CD_APPROVAL
// --01	상신
// --03	결재완료
// --04	반려		
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		if(this.dsList.getColumn(i, "CHK") != "1") continue;
		if(this.dsList.getColumn(i, "CD_APPROVAL") != "01") continue;
		if(this.gfnNvl(this.dsList.getColumn(i, "DT_ISSUE"),"") != "") continue;
		
		var nrow = this.dsCfm.addRow();
		this.dsCfm.setColumn(nrow, "ID_PERSON", this.dsList.getColumn(i, "ID_PERSON"));
		this.dsCfm.setColumn(nrow, "NO_SEQ", this.dsList.getColumn(i, "NO_SEQ"));
		this.dsCfm.setColumn(nrow, "CD_APPROVAL", "03");
		this.dsCfm.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		this.dsCfm.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
		this.dsCfm.setColumn(nrow, "TY_AUTH", this.FormInfo.TY_AUTH);
		this.dsCfm.setColumn(nrow, "GR_CORP", this.AuthClient.CD_CORP);
	}
	
	if (this.dsCfm.rowcount == 0) return;
		
	var strSvcId    = "cfm";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "cfm=dsCfm";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

//승인 취소
this.fnCancProc = function(id,val){
	if(val == false) return;
	
	// 그리드 필수항목 체크
	if (!this.gfnGridValidate(this.dxGrid)) return;	

	this.dxGrid.updateToDataset();
	
	this.dsCfm.clearData();
	
// --CD_APPROVAL
// --01	상신
// --03	결재완료
// --04	반려		
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		if(this.dsList.getColumn(i, "CHK") != "1") continue;
		if(this.dsList.getColumn(i, "CD_APPROVAL") != "03") continue;
		if(this.gfnNvl(this.dsList.getColumn(i, "DT_ISSUE"),"") != "") continue;
		
		var nrow = this.dsCfm.addRow();
		this.dsCfm.setColumn(nrow, "ID_PERSON", this.dsList.getColumn(i, "ID_PERSON"));
		this.dsCfm.setColumn(nrow, "NO_SEQ", this.dsList.getColumn(i, "NO_SEQ"));
		this.dsCfm.setColumn(nrow, "CD_APPROVAL","04"); //승인취소(04	반려)
		this.dsCfm.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		this.dsCfm.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
		this.dsCfm.setColumn(nrow, "TY_AUTH", this.FormInfo.TY_AUTH);
		this.dsCfm.setColumn(nrow, "GR_CORP", this.AuthClient.CD_CORP);
	}
	
	if (this.dsCfm.rowcount == 0) return;
		
	var strSvcId    = "canc";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "cfm=dsCfm";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]

}

/************************************************************************
 * Validate
 ************************************************************************/

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
		
	} else if(svcID == "cfm") {
		if (errorCode == 0) {
			this.fnCfmAfter = function(){
				this.FormBtns.Select.click();
			}
			this.gfnAlert("승인이 완료되었습니다.", "fnCfmAfter");
		} else {
			this.gfnAlert(errorMsg);
		}
	} else if(svcID == "canc") {
		if (errorCode == 0) {
			this.fnCancAfter = function(){
				this.FormBtns.Select.click();
			}
			this.gfnAlert("승인취소가 완료되었습니다.", "fnCancAfter");
		} else {
			this.gfnAlert(errorMsg);
		}
	} else if(svcID == "save") {
		if (errorCode == 0) {
			this.fnSaveAfter = function(){
				this.FormBtns.Select.click();
			}
			this.gfnAlert("저장이 완료되었습니다.", "fnSaveAfter");
		} else {
			this.gfnAlert(errorMsg);
		}
	} 
}


/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if(id == "ccfCD_CORP"){
		;

	}else if(id == "ccfID_SABUN"){
		if(this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)){
			this.fnValidCallback = function(){
				this.ccfCD_CORP.form.CDTextBox.setFocus();
			}
			this.gfnAlert("법인을 선택하세요!", "fnValidCallback");
			return false;
		}
		dsUserParam.setColumn(nrow, "CD_DEPT", this.AuthClient.CD_DEPT);
		dsUserParam.setColumn(nrow, "CD_CORP", this.gfnNvl(this.ccfCD_CORP.form.CDTextBox.value,"%"));
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "YN_CORP", "N");
		dsUserParam.setColumn(nrow, "TY_RETIRE", "%");
	}
	
	return true;
};

this.fnAfterCDTextChanged = function(id, codeFindData) {	
	var arr = codeFindData;

	if(id == "ccfCD_CORP"){
		this.ccfID_SABUN.form.fnCodeFindClear();
		this.edtID_PERSON.set_value("");
		
	}else if(id == "ccfID_SABUN"){
		this.edtID_PERSON.set_value("");
		if(arr.length >0){
			this.edtID_PERSON.set_value(arr[0]["ID_PERSON"]);
		}
	}	
}

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 this.fnGrid_ExpandUp = function(obj:nexacro.Grid, e:nexacro.GridMouseEventInfo) {

	var colnm = this.gfnGridGetBindColumnNameByIndex(obj, e.cell);
	
	if(colnm == "FILE_ATTACH") {
		// 최초 작성시엔 NO_SEQ가 없기 때문에 저장 후에 파일 첨부를 진행하여야 함.
		// CD_DIR에 넣어줄 값이 없기에 저장 후 진행!
		if(this.gfnGetFlag(this.dsList, e.row) == "I"){
			this.gfnAlert("저장 후 파일첨부 진행.");
			return false;
		}
	
		var ID_PERSON = this.dsList.getColumn(e.row, "ID_PERSON");
		var NO_SEQ = this.dsList.getColumn(e.row, "NO_SEQ");
		
		var fileManager = {};
		fileManager.CD_GUBUN = "DA60";	// 추가예산등록
		fileManager.CD_DIR = [ID_PERSON,NO_SEQ];
		//fileManager.IS_READONLY = (YN_APPR == "Y" || CD_STATE == "Y") ? true : false;
		fileManager.IS_READONLY = false;
		this.gfnFileManager(fileManager, "fnFileCallback");
	}
}

this.fnFileCallback = function(strID, val) {
	// val.IsChange : 변경여부, val.Cnt : 파일개수
	
	// 변경시 조회를 다시 하거나
// 	if(val.IsChange == true) {
// 		this.FormBtns.Select.click();
// 	}
	
	// 파일개수를 다시 셋팅
	this.dsList.set_enableevent(false);
	if(val.Cnt == 0) {
		this.dsList.setColumn(this.dsList.rowposition, "FILE_ATTACH", "첨부");
	} else {
		this.dsList.setColumn(this.dsList.rowposition, "FILE_ATTACH", "첨부(" + val.Cnt + ")");
	}
	this.dsList.set_enableevent(true);
};

this.fnGrid_BeforeUserDataSetParam = function(id, dsUserParam, nrow){
	if(id == "DAX_CFBASEINFO_ALL") {
		dsUserParam.setColumn(nrow, "CD_DEPT", "");
		dsUserParam.setColumn(nrow, "CD_CORP", this.gfnNvl(this.ccfCD_CORP.form.CDTextBox.value, this.AuthClient.CD_CORP));
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "YN_CORP", "N");
		dsUserParam.setColumn(nrow, "TY_RETIRE", "%");
	}
 	return true;
};

this.fnGrid_AfterCDTextChanged = function(id, codeFindData) {
	;
}

this.fnGrid_EnterCell = function(obj:nexacro.Grid, row, cell) {

//GR_SEARCH <=2 경우에만  수정 가능		
//GR_SEARCH >2 수정불가 

	if(this.FormInfo.GR_SEARCH > "2"){
		return false;
	}else{
		var colnm = this.gfnGridGetBindColumnNameByIndex(this.dxGrid, cell);
		var sCD_APPROVAL = this.dsList.getColumn(row, "CD_APPROVAL");
	
		// CD_EMPLOYEECARD	출입카드번호
		// DT_ISSUE	발급일자
		// DS_REMARK	비고

		// --CD_APPROVAL
		// --01	상신
		// --03	결재완료
		// --04	반려

		if(colnm == "CD_EMPLOYEECARD"
				||colnm == "DT_ISSUE"
				||colnm == "DS_REMARK"){
		
			//상신,반려상태에서는 입력못함
			if(sCD_APPROVAL == "01" || sCD_APPROVAL == "04"){
				return false;
			}else{
				return true;
			}
		}
	}
}

/************************************************************************
 * 확장버튼 이벤트
 ************************************************************************/

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo){	
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};

this.divData_objGrid_oncelldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo){
	if (!this.gfnGridIsRow(this.dxGrid)) return;
	
	var nIndex0 = this.divData.form.objGrid.getBindCellIndex( "body", "CHK"); //선택
	var nIndex1 = this.divData.form.objGrid.getBindCellIndex( "body", "CD_EMPLOYEECARD"); //출입카드번호
	var nIndex2 = this.divData.form.objGrid.getBindCellIndex( "body", "DT_ISSUE"); 		//발급일자
	var nIndex3 = this.divData.form.objGrid.getBindCellIndex( "body", "DS_REMARK"); 	//비고
	
	//입력하는곳 더블클릭시는 팝업 막음
	if(e.cell == nIndex0
			||e.cell == nIndex1
			||e.cell == nIndex2
			||e.cell == nIndex3	){
		return;
	}
	
	var param = {};
	param.ID_PERSON = this.dsList.getColumn(this.dsList.rowposition, "ID_PERSON");
	param.NO_SEQ = this.dsList.getColumn(this.dsList.rowposition, "NO_SEQ");

	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DAM_EMPLOYEECARD_DLG", "fnReqPopCallback", param);
};
]]></Script>
    <Objects>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DAMPR_EMPLOYEECARD_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">cfm</Col>
            <Col id="SP">DAMPR_EMPLOYEECARD_APPROVAL</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DAMPR_EMPLOYEECARD_UPDATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">delete</Col>
            <Col id="SP">DAMPR_BUSINESSCARD_DEL</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="DS_CORP" type="STRING" size="256"/>
          <Column id="ID_SABUN" type="STRING" size="256"/>
          <Column id="DS_HNAME" type="STRING" size="256"/>
          <Column id="ID_PERSON" type="STRING" size="256"/>
          <Column id="CD_APPROVAL" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CORP"/>
            <Col id="DS_CORP"/>
            <Col id="ID_SABUN"/>
            <Col id="DS_HNAME"/>
            <Col id="ID_PERSON"/>
            <Col id="CD_APPROVAL"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsCD_APPROVAL">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">%</Col>
            <Col id="DS_CODE">전체</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">01</Col>
            <Col id="DS_CODE">상신</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">03</Col>
            <Col id="DS_CODE">결재완료</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">04</Col>
            <Col id="DS_CODE">반려</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsList"/>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_CORP.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_CORP"/>
      <BindItem id="item4" compid="divSearch.form.ccfID_SABUN.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="ID_SABUN"/>
      <BindItem id="item5" compid="divSearch.form.ccfID_SABUN.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_HNAME"/>
      <BindItem id="item6" compid="divSearch.form.cboCD_APPROVAL" propid="value" datasetid="dsSearch" columnid="CD_APPROVAL"/>
      <BindItem id="item7" compid="divSearch.form.edtID_PERSON" propid="value" datasetid="dsSearch" columnid="ID_PERSON"/>
    </Bind>
  </Form>
</FDL>
