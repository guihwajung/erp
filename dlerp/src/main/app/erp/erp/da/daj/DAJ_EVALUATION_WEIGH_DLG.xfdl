<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="630" height="380" maxwidth="650" maxheight="400" titletext="평가가중치 기본정보" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divData" taborder="0" left="0" top="0" height="340" right="0" cssclass="div_DATA_Bg" text="">
          <Layouts>
            <Layout>
              <Static id="staTITLE" taborder="0" text="평가가중치 기본정보" left="0" top="0" width="610" height="30" cssclass="sta_TITLE_Bg"/>
              <Static id="staTERM_EVAL" taborder="1" text="평가기수" left="0" top="staTITLE:5" width="87" height="30" textAlign="center" cssclass="sta_WF_tablelabelE"/>
              <Static id="staTY_EVAL" taborder="8" text="평가구분" left="0" top="staTERM_EVAL:-1" width="87" height="30" textAlign="center" cssclass="sta_WF_tablelabelE"/>
              <Static id="staSTD_EVAL" taborder="9" text="평가기준" left="0" top="staTY_EVAL:-1" width="87" height="30" textAlign="center" cssclass="sta_WF_tablelabelE"/>
              <Static id="staITEM_EVAL" taborder="4" text="평가요소" left="0" top="staSTD_EVAL:-1" width="87" height="30" textAlign="center" cssclass="sta_WF_tablelabelE"/>
              <Static id="staSPOT_EVAL" taborder="3" text="대상직위" left="0" top="staITEM_EVAL:-1" width="87" height="30" textAlign="center" cssclass="sta_WF_tablelabelE"/>
              <Static id="staRT_WEIGHTS" taborder="5" text="가중치" left="0" top="staSPOT_EVAL:-1" width="87" height="30" cssclass="sta_WF_tablelabel" textAlign="center" onclick="divDataBottom_staRT_WEIGHTS_onclick"/>
              <Static id="staREF_WEIGHTS" taborder="10" text="비고" left="0" top="staRT_WEIGHTS:-1" width="87" height="90" cssclass="sta_WF_tablelabel" textAlign="center"/>
              <Static id="staBg1" taborder="2" left="staTERM_EVAL:-1" top="staTITLE:5" width="524" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staBg2" taborder="14" left="staTY_EVAL:-1" top="staBg1:-1" width="524" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staBg3" taborder="16" left="staSTD_EVAL:-1" top="staBg2:-1" width="524" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staBg4" taborder="17" left="staITEM_EVAL:-1" top="staBg3:-1" width="524" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staBg5" taborder="11" left="staSPOT_EVAL:-1" top="staBg4:-1" width="524" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staBg6" taborder="12" left="staRT_WEIGHTS:-1" top="staBg5:-1" width="524" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="staBg7" taborder="13" left="staREF_WEIGHTS:-1" top="staBg6:-1" width="524" height="90" cssclass="sta_WF_tablebg"/>
              <Combo id="cboTERM_EVAL" taborder="6" left="92" top="40" width="89" height="20" datacolumn="DS_CODE" codecolumn="CD_CODE" value="" onitemchanged="fnSetComboItem" text="" index="0" innerdataset="dsTERM_EVAL"/>
              <Combo id="cboTY_EVAL" taborder="18" left="staTY_EVAL:5" top="staBg1:5" width="150" height="20" datacolumn="DS_CODE" codecolumn="CD_CODE" value="" onitemchanged="fnSetComboItem" text="전체" index="0" innerdataset="dsTY_EVAL"/>
              <Combo id="cboSTD_EVAL" taborder="20" left="staSTD_EVAL:5" top="staBg2:5" width="150" height="20" datacolumn="DS_CODE" codecolumn="CD_CODE" value="" onitemchanged="fnSetComboItem" text="전체" index="0" innerdataset="dsSTD_EVAL"/>
              <Combo id="cboITEM_EVAL" taborder="7" left="staITEM_EVAL:5" top="staBg3:5" width="200" height="20" datacolumn="DS_CODE" codecolumn="CD_CODE" value="" text="" index="0" innerdataset="dsITEM_EVAL"/>
              <Combo id="cboSPOT_EVAL" taborder="7" left="staSPOT_EVAL:5" top="staBg4:5" width="89" height="20" datacolumn="DS_CODE" codecolumn="CD_CODE" value="" text="" index="0" innerdataset="dsSPOT_EVAL"/>
              <Edit id="ctxtRT_WEIGHTS" taborder="15" left="staRT_WEIGHTS:5" top="staBg5:5" width="70" height="20" value="" inputtype="normal,number"/>
              <TextArea id="edtREF_WEIGHTS" taborder="21" left="staREF_WEIGHTS:5" top="staBg6:5" height="80" width="510" maxlength="1000"/>
              <Button id="btnSave" taborder="22" text="저장" left="35%" top="staBg7:10" width="60" height="20" onclick="divData_btnSave_onclick"/>
              <Button id="btnCancel" taborder="23" text="취소" left="55%" top="staBg7:10" width="60" height="20" onclick="divData_btnCancel_onclick"/>
              <Static id="sta00" taborder="24" text="%" left="ctxtRT_WEIGHTS:5" top="staBg5:5" width="20" height="20"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);
	this.gfnFormInfo(this);
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	this.fnSetCombo();
	this.fnSetComboItem();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	this.FormBtns.Select.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {

};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	//this.dxGrid = this.divDataBottom.form.objGrid;
	this.cboTERM_EVAL = this.divData.form.cboTERM_EVAL;		// 평가기수
	this.cboTY_EVAL = this.divData.form.cboTY_EVAL;			// 평가구분
	this.cboSTD_EVAL = this.divData.form.cboSTD_EVAL; 		// 평가기준
	this.cboITEM_EVAL = this.divData.form.cboITEM_EVAL; 	// 평가항목
	this.cboSPOT_EVAL = this.divData.form.cboSPOT_EVAL; 	// 대상직위
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	
	this.dsSave.clearData();

	if(this.getOwnerFrame().P_TY_SAVE == "U"){	// 수정or조회
		var val = this.getOwnerFrame().P_DS_PARAM;
		this.dsSave.loadCSV(val);
		this.dsSave.addColumn("TY_SAVE", "string");
		this.dsSave.addColumn("SABUN", "string");

		this.cboTERM_EVAL.set_enable( false );	// 평가기수
		this.cboTY_EVAL.set_enable( false );	// 평가구분
		this.cboSTD_EVAL.set_enable( false );	// 평가기준
		this.cboITEM_EVAL.set_enable( false ); 	// 평가항목
		this.cboSPOT_EVAL.set_enable( false );	// 대상직위
		
	}else{
		this.dsSave.addRow();
		this.dsSave.setColumn(0, "TERM_EVAL", this.getOwnerFrame().P_TERM_EVAL);
		this.dsSave.setColumn(0, "TY_EVAL", this.getOwnerFrame().P_TY_EVAL);
		this.dsSave.setColumn(0, "STD_EVAL", this.getOwnerFrame().P_STD_EVAL);
	}

	this.dsSave.setColumn(0, "SABUN", this.AuthClient.ID_USER);
	this.dsSave.setColumn(0, "TY_SAVE", this.getOwnerFrame().P_TY_SAVE);
	//trace(" dsSave->" + this.dsSave.saveXML())
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 
 /************************************************************************
 * 버튼 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
this.fnSaveValidate = function() {
/*
	if (this.gfnIsNull(cd_corp)) {
		validate = false;
		this.fnVaidateCallback = function() {
			this.ccfCD_CORP.form.CDTextBox.setFocus();
		}
		this.gfnAlert("법인코드를 입력하세요.", "fnVaidateCallback");
	}
*/
	
	var strMsg = "";
	if(this.gfnIsNull(this.dsSave.getColumn(0, "TERM_EVAL"))) {
		strMsg += "평가기수는 반드시 입력 하셔야 합니다.\n";
	}
	if(this.gfnIsNull(this.dsSave.getColumn(0, "TY_EVAL"))) {
		strMsg += "평가구분은 반드시 입력 하셔야 합니다.\n";
	}
	if(this.gfnIsNull(this.dsSave.getColumn(0, "STD_EVAL"))) {
		strMsg += "평가기준는 반드시 입력 하셔야 합니다.\n";
	}
	if(this.gfnIsNull(this.dsSave.getColumn(0, "ITEM_EVAL"))) {
		strMsg += "평가항목은 반드시 입력 하셔야 합니다.\n";
	}
	if(this.gfnIsNull(this.dsSave.getColumn(0, "SPOT_EVAL"))) {
		strMsg += "대상직위는 반드시 입력 하셔야 합니다.\n";
	}
	if(strMsg.length > 0) {
		this.gfnAlert(strMsg);
		return false;
	}
	return true;
}

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "combo") {
	} else if (svcID == "comboItem") {
		//this.cboITEM_EVAL.set_index(0);
	} else if (svcID == "save") {
		if(errorCode == 0)
		{
			// this.close()가 작동하지 않았고, 
			// 부모의 callback 함수로 데이터를 넘겨주기 위해 작성되었습니다.
			this.getParentContext().close(true);
		}else
		{
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if (id == "ccfCD_DEPT") {
		dsUserParam.setColumn(nrow, "CD_CORP", this.AuthClient.CD_CORP);	
	}
	return true;
}
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
//콤보 조회
this.fnSetCombo = function() {
	
	// 평가기수
	this.dsCombo = new Dataset();
	this.dsCombo.addColumn("TY_SEL", "string");
	this.dsCombo.addColumn("YEAR_EVAL", "string");
	
	this.dsCombo.addRow();
	this.dsCombo.setColumn(0, "TY_SEL", "P");	// A: 전체 P: 필수
	this.dsCombo.setColumn(0, "YEAR_EVAL", "");

	// 대상직위
	this.dsComboSpot = new Dataset();
	this.dsComboSpot.addColumn("TY_SEL", "string");
	this.dsComboSpot.addColumn("CD_PREFIX", "string");
	this.dsComboSpot.addColumn("CD_UPPREFIX", "string");
   
	this.dsComboSpot.addRow();
	this.dsComboSpot.setColumn(0, "TY_SEL", "P");
	this.dsComboSpot.setColumn(0, "CD_PREFIX", "ED");
	this.dsComboSpot.setColumn(0, "CD_UPPREFIX", "");

	// 평가구분 EL
	this.dsComboTy = new Dataset();
	this.dsComboTy.addColumn("TY_SEL", "string");
	this.dsComboTy.addColumn("CD_PREFIX", "string");
	this.dsComboTy.addColumn("CD_UPPREFIX", "string");
   
	this.dsComboTy.addRow();
	this.dsComboTy.setColumn(0, "TY_SEL", "P");
	this.dsComboTy.setColumn(0, "CD_PREFIX", "EL");
	this.dsComboTy.setColumn(0, "CD_UPPREFIX", "");

	// 평가기준 EM
	this.dsComboStd = new Dataset();
	this.dsComboStd.addColumn("TY_SEL", "string");
	this.dsComboStd.addColumn("CD_PREFIX", "string");
	this.dsComboStd.addColumn("CD_UPPREFIX", "string");
   
	this.dsComboStd.addRow();
	this.dsComboStd.setColumn(0, "TY_SEL", "P");
	this.dsComboStd.setColumn(0, "CD_PREFIX", "EM");
	this.dsComboStd.setColumn(0, "CD_UPPREFIX", "");

	var strSvcId    = "combo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "combo=dsCombo comboTy=dsComboTy comboStd=dsComboStd comboSpot=dsComboSpot";
	var outData     = "dsTERM_EVAL=combo0 dsTY_EVAL=comboTy0 dsSTD_EVAL=comboStd0 dsSPOT_EVAL=comboSpot0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
};

//평가항목 콤보 조회
this.fnSetComboItem = function() {
	var term = this.dsSave.getColumn(0, "TERM_EVAL");	// 평가기수
	var ty = this.dsSave.getColumn(0, "TY_EVAL");		// 평가구분
	var std = this.dsSave.getColumn(0, "STD_EVAL");		// 평가기준
	if(this.gfnIsNull(term) || this.gfnIsNull(ty) || this.gfnIsNull(std) ) {
		this.dsITEM_EVAL.clearData();
		return;
	}
	
	// 평가항목
	this.dsCombo = new Dataset();
	this.dsCombo.addColumn("TY_SEL", "string");
	this.dsCombo.addColumn("TERM_EVAL", "string");
	this.dsCombo.addColumn("TY_EVAL", "string");
	this.dsCombo.addColumn("STD_EVAL", "string");

	this.dsCombo.addRow();
	this.dsCombo.setColumn(0, "TY_SEL", "P");		// A: 전체 P: 필수
	this.dsCombo.setColumn(0, "TERM_EVAL", term);	// 평가기수
	this.dsCombo.setColumn(0, "TY_EVAL", ty);		// 평가구분
	this.dsCombo.setColumn(0, "STD_EVAL", std);		// 평가기준

	var strSvcId    = "comboItem";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "comboItem=dsCombo";
	var outData     = "dsITEM_EVAL=comboItem0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
};
// 저장 버튼 클릭
this.divData_btnSave_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if(!this.fnSaveValidate()) return;
	
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";

	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
					strSvcType , 	// transaction을 요청할 구분
					inProc,			// Procedure 정보 Dataset 이름
					inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
					outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
					strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
					callBackFnc); // 통신방법 정의 [생략가능]
};


// 취소 버튼 클릭
this.divData_btnCancel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	// this.close()가 작동하지 않았고, 
	// 부모의 callback 함수로 데이터를 넘겨주기 위해 작성되었습니다.
	this.getParentContext().close(false);
};]]></Script>
    <Objects>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DAJPR_EVAL_WEIGHTS_SAVE</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo</Col>
            <Col id="SP">DAXPR_EVAL_TERMS_COMBO</Col>
          </Row>
          <Row>
            <Col id="TARGET">comboStd</Col>
            <Col id="SP">DAZPR_COMMONCODE_COMBO</Col>
          </Row>
          <Row>
            <Col id="TARGET">comboTy</Col>
            <Col id="SP">DAZPR_COMMONCODE_COMBO</Col>
          </Row>
          <Row>
            <Col id="TARGET">comboSpot</Col>
            <Col id="SP">DAZPR_COMMONCODE_COMBO</Col>
          </Row>
          <Row>
            <Col id="TARGET">comboItem</Col>
            <Col id="SP">DAXPR_EVAL_ITEMS_COMBO</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch"/>
      <Dataset id="dsList"/>
      <Dataset id="dsSave">
        <ColumnInfo>
          <Column id="TY_SAVE" type="STRING" size="256"/>
          <Column id="TERM_EVAL" type="STRING" size="256" description="평가기수"/>
          <Column id="TY_EVAL" type="STRING" size="256" description="평가구분"/>
          <Column id="STD_EVAL" type="STRING" size="256" description="평가기준"/>
          <Column id="ITEM_EVAL" type="STRING" size="256" description="평가항목"/>
          <Column id="RT_WEIGHTS" type="BIGDECIMAL" size="256" description="가중치"/>
          <Column id="REF_WEIGHTS" type="STRING" size="256" description="비고"/>
          <Column id="SPOT_EVAL" type="STRING" size="256" description="대상직위"/>
          <Column id="SABUN" type="STRING" size="256" description="생성자사번"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsTERM_EVAL">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsSTD_EVAL">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsTY_EVAL">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsITEM_EVAL">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsSPOT_EVAL">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divData.form.cboTERM_EVAL" propid="value" datasetid="dsSave" columnid="TERM_EVAL"/>
      <BindItem id="item6" compid="divData.form.cboTY_EVAL" propid="value" datasetid="dsSave" columnid="TY_EVAL"/>
      <BindItem id="item1" compid="divData.form.cboSTD_EVAL" propid="value" datasetid="dsSave" columnid="STD_EVAL"/>
      <BindItem id="item2" compid="divData.form.cboITEM_EVAL" propid="value" datasetid="dsSave" columnid="ITEM_EVAL"/>
      <BindItem id="item3" compid="divData.form.ctxtRT_WEIGHTS" propid="value" datasetid="dsSave" columnid="RT_WEIGHTS"/>
      <BindItem id="item4" compid="divData.form.edtREF_WEIGHTS" propid="value" datasetid="dsSave" columnid="REF_WEIGHTS"/>
      <BindItem id="item5" compid="divData.form.cboSPOT_EVAL" propid="value" datasetid="dsSave" columnid="SPOT_EVAL"/>
    </Bind>
  </Form>
</FDL>
