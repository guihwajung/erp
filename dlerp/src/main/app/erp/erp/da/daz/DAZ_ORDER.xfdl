<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="1280" height="720" titletext="발령코드등록" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0" top="0" height="46.0" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static id="staYN_DELETE" taborder="0" text="사용여부" left="0.0" top="10.0" width="92.0" height="24.0" rtl="false" cssclass="sta_WF_SchLabel"/>
              <Combo id="cboYN_DELETE" taborder="1" left="staYN_DELETE:0.0" top="10.0" width="80" height="24.0" innerdataset="dsYN_DELETE" datacolumn="VALUE" codecolumn="CODE" index="1" value="N" onitemchanged="fnSearchInit"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg" ondragmove="divData_ondragmove">
          <Layouts>
            <Layout>
              <Div id="divSplitter" taborder="1" left="50%" top="0" width="5" height="100%" background="skyblue" cursor="ew-resize" ondrag="divData_divSplitter_ondrag"/>
              <Div id="divDataLeft" taborder="0" left="0" top="0" bottom="0" right="divSplitter:5">
                <Layouts>
                  <Layout>
                    <Static id="sta01" taborder="0" text="대분류코드" left="0" top="0" width="100" height="22" cssclass="sta_TITLE_Bg"/>
                    <Grid id="objGrid" taborder="0" left="0" top="sta01:5" bottom="0" right="0"/>
                    <Static id="staMsg" taborder="2" left="sta01:0" top="4" height="20" right="0" text="※ 대분류 코드 입력/수정 시 전산관리자에게 문의하시기 바랍니다."/>
                  </Layout>
                </Layouts>
              </Div>
              <Div id="divDataRight" taborder="0" left="divSplitter:5" top="0" bottom="0" right="0">
                <Layouts>
                  <Layout>
                    <Static id="sta02" taborder="0" text="소분류코드" left="0" top="0" width="100%" height="22" cssclass="sta_TITLE_Bg"/>
                    <Grid id="objGridSub" sub="true" taborder="0" left="0" top="sta02:5" bottom="0" right="0"/>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	//this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	this.FormBtns.Select.click();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출 
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// 서브 버튼 사용
	this.gfnUseSubBtn(true, this.divData, this.divData.form.divSplitter);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.cboYN_DELETE = this.divSearch.form.cboYN_DELETE;
	this.dxGrid = this.divData.form.divDataLeft.form.objGrid;
	this.dxGridSub = this.divData.form.divDataRight.form.objGridSub;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DA", "DAZ_OACODE");	
	this.dxGrid.set_selecttype("cell");	
	this.dxGrid.addEventHandler("onselectchanged", this.fnGrid_RowCellChanged, this);
	this.dsList.addEventHandler("canrowposchange", this.dsList_canrowposchange, this);
		
	this.gfnGridInit(this.dxGridSub, this.dsListSub, "DA", "DAZ_ORDER");
	
	this.dxGrid.setCellProperty( "body", this.dxGrid.getBindCellIndex("body", "CD_CODE"), "editinputtype", "alpha,digit");
	this.dxGrid.setCellProperty( "body", this.dxGrid.getBindCellIndex("body", "CD_CODE"), "editmaxlength", "10");
	this.dxGridSub.setCellProperty( "body", this.dxGridSub.getBindCellIndex("body", "CD_ORDER2"), "editinputtype", "alpha,digit");
	this.dxGridSub.setCellProperty( "body", this.dxGridSub.getBindCellIndex("body", "CD_ORDER2"), "editmaxlength", "10");
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	//메인
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_PREFIX", "string");
	this.dsSelect.addColumn("DS_CODE", "string");
	this.dsSelect.addColumn("YN_DELETE", "string");

	this.dsSave = new Dataset();
	this.dsSave.addColumn("TY_SAVE", "string");
	this.dsSave.addColumn("CD_PREFIX", "string");
	this.dsSave.addColumn("CD_CODE", "string");
	this.dsSave.addColumn("DS_CODE", "string");
	this.dsSave.addColumn("CD_UPCODE", "string");
	this.dsSave.addColumn("AM_ALLOW", "int");
	this.dsSave.addColumn("RM_BIGO", "string");
	this.dsSave.addColumn("ID_INSERT", "string");
	this.dsSave.addColumn("CD_ETC2", "string"); // 권한유지 여부
	this.dsSave.addColumn("CD_ETC3", "string"); // 로그인거부 여부

    //서브
	this.dsSelectSub = new Dataset();
	this.dsSelectSub.addColumn("CD_ORDER1", "string");
	this.dsSelectSub.addColumn("DS_ORDER", "string");
	this.dsSelectSub.addColumn("YN_DELETE", "string");
	
	this.dsSaveSub  = new Dataset();
	this.dsSaveSub.addColumn("TY_SAVE", "string");
	this.dsSaveSub.addColumn("CD_ORDER1", "string");
	this.dsSaveSub.addColumn("CD_ORDER2", "string");
	this.dsSaveSub.addColumn("DS_ORDER", "string");
	this.dsSaveSub.addColumn("ID_USER", "string");
}


/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	//if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
    this.dsSelect.setColumn(0, "CD_PREFIX", "OA");
	this.dsSelect.setColumn(0, "DS_CODE", "");
	this.dsSelect.setColumn(0, "YN_DELETE", this.cboYN_DELETE.value);
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback"; 
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	this.gfnGridAdd(this.dxGrid);
}
/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	// 그리드 필수항목 체크
	if (!this.gfnGridValidate(this.dxGrid)) return;	

	this.dxGrid.updateToDataset();
	
	this.dsSave.clearData();

	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
			case "U":
			case "D":
				var nrow = this.dsSave.addRow();
				this.dsSave.setColumn(nrow, "TY_SAVE", flag);
				this.dsSave.setColumn(nrow, "CD_PREFIX", "OA");
				this.dsSave.setColumn(nrow, "CD_CODE", this.dsList.getColumn(i, "CD_CODE"));
				this.dsSave.setColumn(nrow, "DS_CODE", this.dsList.getColumn(i, "DS_CODE"));
				this.dsSave.setColumn(nrow, "CD_UPCODE", this.dsList.getColumn(i, "CD_UPCODE"));
				this.dsSave.setColumn(nrow, "AM_ALLOW", 0);
				this.dsSave.setColumn(nrow, "RM_BIGO", this.dsList.getColumn(i, "RM_BIGO"));
				this.dsSave.setColumn(nrow, "ID_INSERT", this.AuthClient.ID_USER);
				this.dsSave.setColumn(nrow, "CD_ETC2", this.dsList.getColumn(i, "CD_ETC2"));
				this.dsSave.setColumn(nrow, "CD_ETC3", this.dsList.getColumn(i, "CD_ETC3"));
				break;
		}
	}
	
	if (this.dsSave.rowcount == 0) return;
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave";
	var outData     = "dsOutput=save";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid, "", this.gfnGetArgument("NM_FORM")+"_대분류_"+this.gfnGetDate());
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * 서브 버튼 이벤트 (조회, 입력, 수정, 삭제)
 ************************************************************************/
 this.fnSelectSub = function() {
	if (this.dxGrid.rowcount == 0 || this.dxGrid.currentrow < 0) return false;
	
	//마스터 그리드 cd_code 값  가져오기
	this.dsListSub.clearData();
	var cd_code = this.dsList.getColumn(this.dsList.rowposition, "CD_CODE");
	if (this.gfnIsNull(cd_code)) {
		return false;
	}
	

	this.gfnGridBeforeSelect(this.dxGridSub);
	
	this.dsSelectSub.clearData();
	this.dsSelectSub.addRow();
	this.dsSelectSub.setColumn(0, "CD_ORDER1", cd_code);
	this.dsSelectSub.setColumn(0, "DS_ORDER", "");
	this.dsSelectSub.setColumn(0, "YN_DELETE", this.cboYN_DELETE.value);	//"%");


	var strSvcId    = "detail";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "d_select=dsSelectSub";
	var outData     = "dsListSub=d_select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}
this.fnAddSub = function() {
	this.gfnGridAdd(this.dxGridSub);
}
this.fnDelSub = function() {
	this.gfnGridDel(this.dxGridSub);
}
/*
 *	저장 버튼
 */
this.fnSaveSub = function() {
	// 그리드 필수항목 체크
	if (!this.gfnGridValidate(this.dxGridSub)) return;	

	this.dxGridSub.updateToDataset();
	this.dsSaveSub.clearData();

	var cd_code = this.dsList.getColumn(this.dsList.rowposition, "CD_CODE");

	for (var i = 0; i < this.dsListSub.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsListSub, i);
		switch(flag) {
			case "I":
			case "U":
			case "D":
				var nrow = this.dsSaveSub.addRow();
				this.dsSaveSub.setColumn(nrow, "TY_SAVE", flag);
				this.dsSaveSub.setColumn(nrow, "CD_ORDER1", cd_code);
				this.dsSaveSub.setColumn(nrow, "CD_ORDER2", this.dsListSub.getColumn(i, "CD_ORDER2"));
				this.dsSaveSub.setColumn(nrow, "DS_ORDER", this.dsListSub.getColumn(i, "DS_ORDER"));
				this.dsSaveSub.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
				break;
		}
	}
	
	if (this.dsSaveSub.rowcount == 0) return;
		
	var strSvcId    = "savesub";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "d_save=dsSaveSub";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]						
}

/*
 *	엑셀 버튼
 */
this.fnExcelSub = function() {
	this.gfnExcelExport(this.dxGridSub, "", this.gfnGetArgument("NM_FORM")+"_소분류_"+this.gfnGetDate());
}



/************************************************************************
 * Validate
 ************************************************************************/

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
	}
	else if (svcID == "detail") {
		this.gfnGridAfterSelect(this.dxGridSub);	
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	else if(svcID == "savesub") {
		if (errorCode == 0) {
			this.FormBtns.SubSelect.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/


/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGrid_RowCellChanged = function(obj:nexacro.Grid,e:nexacro.GridSelectEventInfo)
{
    if ((obj.oldrow > -1 && obj.oldrow == e.row)
		|| (obj.oldrow == -1 && e.oldrow != e.row)) {
		this.FormBtns.SubSelect.click();
		obj.oldrow = -1;
	}
};

this.dsList_canrowposchange = function(obj:nexacro.NormalDataset,e:nexacro.DSRowPosChangeEventInfo) {
	var can_rowchange = true;
	for (var i = 0; i < this.dsListSub.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsListSub, i);
		if (flag == "I" || flag == "U" || flag == "D") {
			can_rowchange = false;
			break;
		}
	}
	if(!can_rowchange) {
		this._row = e.newrow;
		this.gfnConfirm("변경된 데이터가 있습니다.\r\n계속 진행하시겠습니까?", "dsList_canrowposchange_callback");
	}
	return can_rowchange;
}

this.dsList_canrowposchange_callback = function(strId, val) 
{
	if(val == true) {
		this.dsList.set_enableevent(false);
		this.dsList.set_rowposition(this._row);
		this.dsList.set_enableevent(true);
	}	
}

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */ 
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		this.gfnSetFormStatus(this);
		this.gfnGridClear(this.dxGrid);
		this.gfnGridClear(this.dxGridSub);
	}
}
/*
 *	splitter
 */ 
this.divData_ondragmove = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
	if(e.userdata == "splitter") {
		this.divData.form.divSplitter.set_left(e.clientx);
		this.divData.form.resetScroll();
	}
};

this.divData_divSplitter_ondrag = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
	e.set_userdata("splitter");
	return true;
};]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DAZPR_COMMONCODE_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DAZPR_COMMONCODE_SAVE</Col>
          </Row>
          <Row>
            <Col id="TARGET">d_select</Col>
            <Col id="SP">DAZPR_ORDER_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">d_save</Col>
            <Col id="SP">DAZPR_ORDER_SAVE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsListSub"/>
      <Dataset id="dsYN_DELETE">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">%</Col>
            <Col id="VALUE">전체</Col>
          </Row>
          <Row>
            <Col id="CODE">Y</Col>
            <Col id="VALUE">미사용</Col>
          </Row>
          <Row>
            <Col id="CODE">N</Col>
            <Col id="VALUE">사용</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
  </Form>
</FDL>
