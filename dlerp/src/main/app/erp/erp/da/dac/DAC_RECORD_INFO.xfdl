<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="근태 승인" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divData" taborder="1" left="0" top="40" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="22" bottom="6" right="0"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divSearch" taborder="1" left="0" top="0" height="78.0" right="0" cssclass="div_SEARCH_Bg" text="">
          <Layouts>
            <Layout>
              <Static id="staDT_REQUEST" taborder="0" text="근태기간" left="0.0" top="10.0" width="92.0" height="24.0" textDecoration="none" cssclass="sta_WF_SchLabel"/>
              <Calendar id="ctclDT_START" taborder="1" left="staDT_REQUEST:0.0" top="10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" onchanged="divSearch_ctclDT_START_onchanged"/>
              <Calendar id="ctclDT_END" taborder="3" left="ctclDT_START:0.0" top="10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" onchanged="divSearch_ctclDT_END_onchanged"/>
              <Static id="staDT_ORD_TO" taborder="2" text="~" left="ctclDT_END:0.0" top="10.0" width="30.0" height="24.0" cssclass="sta_WF_AC"/>
              <Static id="staCD_CORP" taborder="4" text="법인" left="ctclDT_END:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_CORP" CDTextWidth="30" taborder="5" left="staCD_CORP:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staCD_DEPT" taborder="6" text="부서" left="ccfCD_CORP:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_DEPT" CDTextWidth="70" taborder="7" left="staCD_DEPT:0.0" top="10.0" width="280" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staID_SABUN" taborder="8" text="사원" left="ccfCD_DEPT:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfID_SABUN" CDTextWidth="70" taborder="9" left="staID_SABUN:0.0" top="10.0" width="200" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staCD_RECORD" taborder="10" text="근무유형" left="0.0" top="staDT_REQUEST:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_RECORD" CDTextWidth="70" taborder="11" left="staCD_RECORD:0.0" top="staDT_REQUEST:10.0" width="235" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staTY_STATUS" taborder="12" text="상태" left="ccfCD_RECORD:0.0" top="staDT_REQUEST:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfTY_STATUS" CDTextWidth="70" taborder="13" left="staTY_STATUS:0.0" top="staDT_REQUEST:10.0" width="200" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staTY_DEPT" taborder="14" text="부서구분" left="ccfTY_STATUS:0.0" top="staDT_REQUEST:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Combo id="cboTY_DEPT" taborder="15" left="staTY_DEPT:0.0" top="staDT_REQUEST:10.0" width="89" height="24.0" datacolumn="DS_CODE" codecolumn="CD_CODE" value="" onitemchanged="fnSearchInit" text="전체" index="0" innerdataset="dsTY_DEPT"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	this.fnSetCombo();
	this.fnSetExtendButtonEnable(false,false);
	// ---------------------------//

	//근무기간 셋팅
	var today = this.gfnGetDate().substring(0,6);
	this.ctclDT_START.set_value(today+"01"); 
	this.ctclDT_END.set_value(this.gfnGetLastDate(today)); 
	
	//화면 로드시 자동조회
	//this.FormBtns.Select.click();
		
	// 화면 로드 시 DACPR_RECORD_DEPT_SELECT SP 실행
	this.fnSelectDept();
	
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	this.FormBtns.Add.set_enable(false);
	this.FormBtns.Del.set_enable(false);
	this.FormBtns.Reset.set_enable(true);
};

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btn1 = this.gfnFormButtonAdd("FormButton1", "fnFormButton1","승인");
	this.btn2 = this.gfnFormButtonAdd("FormButton2", "fnFormButton2","반려");	
};

// 승인
this.fnFormButton1 = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	this.gfnConfirm("해당 근태건을 승인하시겠습니까?", "fnApprovalCallback");
	//this.fnApproval("2");
};

// 반려
this.fnFormButton2 = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	this.gfnConfirm("해당 근태건을 반려하시겠습니까?", "fnCancelCallback");
	//this.fnApproval("3");
};

// 승인처리 Callback
this.fnApprovalCallback = function(strId, val) {
	if(val == false) return;
	this.fnApproval("2");
}

//  반려 Callback
this.fnCancelCallback = function(strId, val) {
	if(val == false) return;
	this.fnApproval("3");
}

//승인/반려 버튼
this.fnSetExtendButtonEnable = function(bEnable,bEnable2){
	this.btn1.set_enable(bEnable);
	this.btn2.set_enable(bEnable2);
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {

	this.dxGrid = this.divData.form.objGrid;

	this.ctclDT_START = this.divSearch.form.ctclDT_START; 	 
	this.ctclDT_END = this.divSearch.form.ctclDT_END;	
	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;
	this.ccfID_SABUN = this.divSearch.form.ccfID_SABUN;
	this.ccfCD_DEPT = this.divSearch.form.ccfCD_DEPT;			
	this.ccfCD_RECORD = this.divSearch.form.ccfCD_RECORD;		 
	this.ccfTY_STATUS =	this.divSearch.form.ccfTY_STATUS;			
	//부서
	this.cboTY_DEPT = this.divSearch.form.cboTY_DEPT;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {

	this.gfnGridInit(this.dxGrid, this.dsList, "DA", "DAC_RECORD_INFO");	
	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
	this.dxGrid.AfterCDTextChanged = "fnGrid_AfterCDTextChanged";
	this.dxGrid.EnterCell = "fnGrid_EnterCell";
//	this.dxGrid.AfterEdit = "fnGrid_AfterEdit";

// 	this.dxGrid.setCellProperty("body", this.dxGrid.getBindCellIndex("body", "CHK"), "edittype", "expr:TY_STATUS == 2?'none':'checkbox'");
// 	this.dxGrid.setCellProperty("body" , this.dxGrid.getBindCellIndex("body", "CHK"), "cssclass", "expr:TY_STATUS == 2?'BACK_ReadOnly':''");

	
	this.ccfCD_CORP.CodeFindName = "DAX_CFCORP";
	this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_CORP.AfterCDTextChanged = "codefind_AfterCDTextChanged";	
	
	this.ccfID_SABUN.CodeFindName = "DAX_CFBASEINFO";
	this.ccfID_SABUN.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfID_SABUN.AfterCDTextChanged = "codefind_AfterCDTextChanged";	
	
	this.ccfCD_DEPT.CodeFindName = "DAX_RECORD_DEPT";
	this.ccfCD_DEPT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_DEPT.AfterCDTextChanged = "codefind_AfterCDTextChanged";	


	this.ccfCD_RECORD.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_RECORD.AfterCDTextChanged = "codefind_AfterCDTextChanged";	
	
	this.ccfTY_STATUS.CodeFindName = "DAX_CFCOMMONCODE";
	this.ccfTY_STATUS.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";

/*
[권한]
-. 개인권한일 경우 성명에 로그인 ID/명
-. 개인권한일 경우 조회만 가능.   9
-. 근태관리자일 경우에 승인 / 반려 활성화
*/
/*
- 화면로드 시 gr_search = '9' 이면
  조회조건의 법인, 부서, 성명 코드파인드에 로그인 정보를 넣어주시고 수정불가능하게 변경해주세요.
*/
	trace ("법인1: " + this.AuthClient.CD_CORP + " /사번: " + this.AuthClient.ID_SABUN  
    + " /아이디: " + this.AuthClient.ID_USER	+" /화면권한: "  +  this.FormInfo.GR_SEARCH);
	
	if(this.FormInfo.GR_SEARCH == "9"){
		// 법인
		this.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP); 
		this.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);
		this.ccfCD_CORP.set_enable(false);
		// 부서
		this.ccfCD_DEPT.form.CDTextBox.set_value(this.AuthClient.CD_DEPT);
		this.ccfCD_DEPT.form.DSTextBox.set_value(this.AuthClient.DS_DEPT);
		this.ccfCD_DEPT.set_enable(false);
		// 성명
		this.ccfID_SABUN.form.CDTextBox.set_value(this.AuthClient.ID_USER);
		this.ccfID_SABUN.form.DSTextBox.set_value(this.AuthClient.DS_HNAME);
		this.ccfID_SABUN.set_enable(false);
	}
};
/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("DT_START", "string");
	this.dsSelect.addColumn("DT_END", "string");
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("CD_DEPT", "string");
	this.dsSelect.addColumn("CD_RECORD", "string");
	this.dsSelect.addColumn("TY_STATUS", "string");
	this.dsSelect.addColumn("ID_SABUN", "string");
	this.dsSelect.addColumn("GR_SEARCH", "string");
	this.dsSelect.addColumn("GR_DEPT", "string");
	this.dsSelect.addColumn("ID_LOGIN", "string");
	this.dsSelect.addColumn("TY_DEPT", "string");

	this.dsSelectDept = new Dataset();
	this.dsSelectDept.addColumn("GR_SEARCH", "string");
	this.dsSelectDept.addColumn("GR_DEPT", "string");
	this.dsSelectDept.addColumn("ID_LOGIN", "string");

	this.dsApproval = new Dataset();
	this.dsApproval.addColumn("TY_STATUS", "string");
	this.dsApproval.addColumn("ID_PERSON", "bigdecimal");
	this.dsApproval.addColumn("NO_SEQ", "bigdecimal");
	//this.dsApproval.addColumn("ID_APPROVAL", "string");
	this.dsApproval.addColumn("GR_SEARCH", "string");
	this.dsApproval.addColumn("GR_DEPT", "string");
	this.dsApproval.addColumn("ID_LOGIN", "string");

	this.dsSave = new Dataset();
	this.dsSave.addColumn("ID_PERSON", "string");
	this.dsSave.addColumn("NO_SEQ", "string");
	this.dsSave.addColumn("CD_DEPT", "string");
	this.dsSave.addColumn("CD_POSITION", "string");
	this.dsSave.addColumn("CD_RECORD", "string");
	this.dsSave.addColumn("DT_START", "string");
	this.dsSave.addColumn("DT_END", "string");
	this.dsSave.addColumn("QN_RECORD", "string");
	this.dsSave.addColumn("TY_AMPM", "string");
	this.dsSave.addColumn("DS_REMARK", "string");
	this.dsSave.addColumn("DS_DAEJIK", "string");
	this.dsSave.addColumn("NO_TEL", "string");
	this.dsSave.addColumn("DS_VACA", "string");
	this.dsSave.addColumn("DS_PLACE", "string");
	this.dsSave.addColumn("DT_CHANGE", "string");
	this.dsSave.addColumn("DT_CONDOLENCE", "string");
	this.dsSave.addColumn("CD_FAMILY", "string");
	this.dsSave.addColumn("DS_FAMILYNAME", "string");
	this.dsSave.addColumn("CD_CONDOLENCE", "string");
	this.dsSave.addColumn("ID_UPDATE", "string");
	this.dsSave.addColumn("GR_SEARCH", "string");
	this.dsSave.addColumn("GR_DEPT", "string");
	this.dsSave.addColumn("ID_LOGIN", "string");
};

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if(!this.fnValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	this.gfnSetFormStatus(this);

	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "DT_START", this.divSearch.form.ctclDT_START.value);
	this.dsSelect.setColumn(0, "DT_END", this.divSearch.form.ctclDT_END.value);
	this.dsSelect.setColumn(0, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
	this.dsSelect.setColumn(0, "CD_DEPT", this.ccfCD_DEPT.form.CDTextBox.value);
	this.dsSelect.setColumn(0, "CD_RECORD", this.ccfCD_RECORD.form.CDTextBox.value);
	this.dsSelect.setColumn(0, "TY_STATUS", this.ccfTY_STATUS.form.CDTextBox.value);
	this.dsSelect.setColumn(0, "ID_SABUN", this.ccfID_SABUN.form.CDTextBox.value);
	this.dsSelect.setColumn(0, "GR_SEARCH", this.FormInfo.GR_SEARCH);
	this.dsSelect.setColumn(0, "GR_DEPT", this.AuthClient.CD_DEPT);
	this.dsSelect.setColumn(0, "ID_LOGIN", this.AuthClient.ID_USER);
	this.dsSelect.setColumn(0, "TY_DEPT", this.cboTY_DEPT.value);

 	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	 
						strSvcType ,  
						inProc,			 
						inData , 		 
						outData , 	 
						strArg, 			 
						callBackFnc);  
	
};

this.fnAdd = function() {
	//this.gfnGridAdd(this.dxGrid);
};

/*
 *	저장 버튼
 */
this.fnSave = function() {
	// 그리드 필수항목 체크
	if (!this.gfnGridValidate(this.dxGrid)) return;

	this.dxGrid.updateToDataset();

	this.dsSave.clearData();

	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		if(flag == "U") {
			var nrow = this.dsSave.addRow();
			this.dsSave.setColumn(nrow, "ID_PERSON", this.dsList.getColumn(i, "ID_PERSON"));
			this.dsSave.setColumn(nrow, "NO_SEQ", this.dsList.getColumn(i, "NO_SEQ"));
			this.dsSave.setColumn(nrow, "CD_DEPT", this.dsList.getColumn(i, "CD_DEPT"));
			this.dsSave.setColumn(nrow, "CD_POSITION", this.dsList.getColumn(i, "CD_POSITION"));
			this.dsSave.setColumn(nrow, "CD_RECORD", this.dsList.getColumn(i, "CD_RECORD"));
			this.dsSave.setColumn(nrow, "DT_START", this.dsList.getColumn(i, "DT_START"));
			this.dsSave.setColumn(nrow, "DT_END", this.dsList.getColumn(i, "DT_END"));
			this.dsSave.setColumn(nrow, "QN_RECORD", this.dsList.getColumn(i, "QN_RECORD"));
			this.dsSave.setColumn(nrow, "TY_AMPM", this.dsList.getColumn(i, "TY_AMPM"));
			this.dsSave.setColumn(nrow, "DS_REMARK", this.dsList.getColumn(i, "DS_REMARK"));
			this.dsSave.setColumn(nrow, "DS_DAEJIK", this.dsList.getColumn(i, "DS_DAEJIK"));
			this.dsSave.setColumn(nrow, "NO_TEL", this.dsList.getColumn(i, "NO_TEL"));
			this.dsSave.setColumn(nrow, "DS_VACA", this.dsList.getColumn(i, "DS_VACA"));
			this.dsSave.setColumn(nrow, "DS_PLACE", this.dsList.getColumn(i, "DS_PLACE"));
			this.dsSave.setColumn(nrow, "DT_CHANGE", this.dsList.getColumn(i, "DT_CHANGE"));
			this.dsSave.setColumn(nrow, "DT_CONDOLENCE", this.dsList.getColumn(i, "DT_CONDOLENCE"));
			this.dsSave.setColumn(nrow, "CD_FAMILY", this.dsList.getColumn(i, "CD_FAMILY"));
			this.dsSave.setColumn(nrow, "DS_FAMILYNAME", this.dsList.getColumn(i, "DS_FAMILYNAME"));
			this.dsSave.setColumn(nrow, "CD_CONDOLENCE", this.dsList.getColumn(i, "CD_CONDOLENCE"));
			this.dsSave.setColumn(nrow, "ID_UPDATE", this.AuthClient.ID_USER);
			this.dsSave.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
			this.dsSave.setColumn(nrow, "GR_DEPT", this.AuthClient.CD_DEPT);
			this.dsSave.setColumn(nrow, "ID_LOGIN", this.AuthClient.ID_USER);
		}
	}

	if (this.dsSave.rowcount == 0) return;

	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave";
	var outData     = "dsOutput=save";
	var strArg      = "";
	var callBackFnc = "fnCallback";

	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc);   // 통신방법 정의 [생략가능]
};

this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
};

this.fnPrint = function() {
};

this.fnDel = function() {
};

this.fnReset = function(){
	this.divSearch.form.ctclDT_START.set_value("");
	this.divSearch.form.ctclDT_END.set_value("");
	this.ccfCD_CORP.form.CDTextBox.set_value("");
	this.ccfCD_CORP.form.DSTextBox.set_value("");
	this.ccfCD_DEPT.form.CDTextBox.set_value("");
	this.ccfCD_DEPT.form.DSTextBox.set_value("");
	this.ccfID_SABUN.form.CDTextBox.set_value("");
	this.ccfID_SABUN.form.DSTextBox.set_value("");
	this.ccfCD_RECORD.form.CDTextBox.set_value("");
	this.ccfCD_RECORD.form.DSTextBox.set_value("");
	this.ccfTY_STATUS.form.CDTextBox.set_value("");
	this.ccfTY_STATUS.form.DSTextBox.set_value("");
	this.divSearch.form.cboTY_DEPT.set_value("%");
	
	this.fnSearchInit();
};

/************************************************************************
 * Validate
 ************************************************************************/

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
		this.fnSetButton();
	} else if(svcID == "approval") {
		if (errorCode == 0) {
			this.gfnAlert("작업이 완료되었습니다.");
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	} else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	} else if (svcID == "selectDept") {
		//trace(this.dsDept.saveXML());
		var ynWork = this.dsDept.getColumn(0, "YN_WORK");
		this.fnSetDeptAuth(ynWork);
	} else if( svcID == "combo"){
		this.cboTY_DEPT.set_index(0);
	}
};

//승인/반려
this.fnApproval = function(strId, val)  {
	if(val == false) return;

	this.dsApproval.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		if (this.dsList.getColumn(i, "CHK") == 1) {
			var nrow = this.dsApproval.addRow();

			this.dsApproval.setColumn(nrow, "TY_STATUS", strId); //2:승인, 3:반려
			this.dsApproval.setColumn(nrow, "ID_PERSON", this.dsList.getColumn(i, "ID_PERSON"));
			this.dsApproval.setColumn(nrow, "NO_SEQ", this.dsList.getColumn(i, "NO_SEQ"));
			//this.dsApproval.setColumn(nrow, "ID_APPROVAL", this.AuthClient.ID_USER);
			this.dsApproval.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
			this.dsApproval.setColumn(nrow, "GR_DEPT", this.AuthClient.CD_DEPT);
			this.dsApproval.setColumn(nrow, "ID_LOGIN", this.AuthClient.ID_USER);
		}
	}
	
	if (this.dsApproval.rowcount == 0) return;
	
	var strSvcId    = "approval";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "approval=dsApproval";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	this.gfnTransaction( strSvcId ,  
						strSvcType ,  
						inProc,			 
						inData , 		 
						outData , 		 
						strArg, 		 
						callBackFnc);  
};

this.fnDialogCallback = function(svcID, value){
	this.FormBtns.Select.click();
};
/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.codefind_AfterCDTextChanged = function(id) {
	this.fnSearchInit();
};

this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if (id == "ccfID_SABUN") {	// 사번
		dsUserParam.setColumn(nrow, "CD_CORP", this.AuthClient.CD_CORP);
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "CD_DEPT", this.AuthClient.CD_DEPT);
		dsUserParam.setColumn(nrow, "TY_RETIRE", "");
		//dsUserParam.setColumn(nrow, "YN_CORP", "");		
	}
	else if  (id == "ccfCD_DEPT") {	// 부서
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "GR_DEPT", this.AuthClient.CD_DEPT);
		dsUserParam.setColumn(nrow, "ID_LOGIN", this.AuthClient.ID_USER);		
	}	

		//dsUserParam.setColumn(nrow, "CD_PREFIX", 'GT');	 
		dsUserParam.setColumn(nrow, "TY_GUBUN", 'UPCODE');	 
		dsUserParam.setColumn(nrow, "CD_PREFIX", 'GT');	 
		dsUserParam.setColumn(nrow, "CD_UPPREFIX", '01'); 	 
	}
	else if  (id == "ccfTY_STATUS") {	// 결재상태
		dsUserParam.setColumn(nrow, "CD_PREFIX", 'GW');
	}
	return true;
};

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
  this.fnGrid_BeforeUserDataSetParam = function(id, dsUserParam, nrow){
	
	//trace("그리드 코드파인드_식별id:" + id);
	switch(id) {

			//dsUserParam.setColumn(nrow, "CD_PREFIX", "GT");  
			dsUserParam.setColumn(nrow, "TY_GUBUN", 'UPCODE');	 
			dsUserParam.setColumn(nrow, "CD_PREFIX", 'GT');	 
			dsUserParam.setColumn(nrow, "CD_UPPREFIX", '01'); 	 
			break;
		case "FA":	// 경조가족관계
			dsUserParam.setColumn(nrow, "CD_PREFIX", "FA");
			break;
		case "VC":	// 경조코드
			dsUserParam.setColumn(nrow, "CD_PREFIX", "VC");
			break;
		default:
	}
	return true;
};

this.fnGrid_AfterCDTextChanged = function(id, codeFindData) {
	var arr = codeFindData;

	switch(id) {
		case "DAX_CFBASEINFO_ALL":
			this.dsList.setColumn(0, "CD_CORP", arr[0]["CD_CORP"]);
			this.dsList.setColumn(0, "ID_PERSON", arr[0]["ID_PERSON"]);
			break;
		default:
	}
}

this.fnGrid_AfterEdit = function(obj,e) {
	if(e.columnid == "CHK") {
		var chkCnt = 0;
		var chkCnt2 = 0;
		var onlyRowIdx = 0;
		
		for (var i = 0; i < this.dsList.rowcount; i++) {
			var ynStatus = this.dsList.getColumn(i, "TY_STATUS"); 
			//if (i == 0) continue;
			
/*
최종결재건만 승인/반려가능

IF NVL(V_TY_STATUS,'0') IN ('2','3') THEN
	RAISE_APPLICATION_ERROR(-20000,'결재완료 또는 반려 건에 대해서는 승인/반려가 불가능합니다.' );
	RETURN;
END IF;
*/
			if (this.dsList.getColumn(i, "CHK") == 1) {
				if (ynStatus == "2" || ynStatus == "3"){
					this.dsList.setColumn(i, "CHK", 0);
					this.dsList.setColumn(i, this.ucFlag, "");
				}else{
					onlyRowIdx = i;
					ynStatus=="2"?chkCnt++:chkCnt2++;
				}
			} else {
				this.dsList.setColumn(i, this.ucFlag, "");
			}
		}

		if (chkCnt == 0 && chkCnt2 == 0) {
			this.fnSetExtendButtonEnable(false,false);
			
		} else{
			if (chkCnt == 1 && chkCnt2 == 0) {
				this.fnSetExtendButtonEnable(true,false);
			}else{
				this.fnSetExtendButtonEnable(false,true);
			}

	// 			var ynStatus = this.dsList.getColumn(onlyRowIdx, "TY_STATUS");
	// 			if (!this.gfnIsNull(ynStatus)) {
	// 				if (ynStatus == "2" || ynStatus == "3") {
	// 					this.btn1.set_enable(false);
	// 					this.btn2.set_enable(false);				
	// 				}
	// 			} 
		}
	}	
};


this.fnGrid_EnterCell = function(obj:nexacro.Grid, row, cell) {
	var colnm = this.gfnGridGetBindColumnNameByIndex(obj, cell);	
	var rowFlag = this.gfnGetFlag(this.dsList, row);	
	
// 	if(colnm == "CHK") {
// 		if (this.dsList.getColumn(this.dsList.rowposition, "TY_STATE") != "1" && this.dsList.getColumn(this.dsList.rowposition, "TY_STATE") != "2")
// 			return false;
// 	}
	
	if(this.FormInfo.GR_SEARCH != "1" && colnm != "CHK"){ 
		return false;	
	}
	
	// 공통 > Setting > 그리드정보 에서 셋팅한 내용대로 
	nGrdSpcRow = this.dsGridSpec.findRow( "DS_FIELD", colnm);
	if(this.dsGridSpec.getColumn(nGrdSpcRow, "YN_READONLY") == "Y"){
		return false;
	}
	
	return true;
}

/************************************************************************
 * 확장버튼 이벤트
 ************************************************************************/

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
 this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		// 폼상태 초기화
		this.gfnSetFormStatus(this);	
		this.gfnGridClear(this.dxGrid);
	}
};

// 근태신청 부서 조회
this.fnSelectDept = function() {

	this.dsSelectDept.clearData();
	this.dsSelectDept.addRow();
	this.dsSelectDept.setColumn(0, "GR_SEARCH", this.FormInfo.GR_SEARCH);
	this.dsSelectDept.setColumn(0, "GR_DEPT", this.AuthClient.CD_DEPT);
	this.dsSelectDept.setColumn(0, "ID_LOGIN", this.AuthClient.ID_USER);

	var strSvcId    = "selectDept";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "selectDept=dsSelectDept";
	var outData     = "dsDept=selectDept0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};

this.fnSetDeptAuth = function(ynWork){
// 화면 로드 시 DACPR_RECORD_DEPT_SELECT SP 실행 후
// YN_WORK 값이 'N' 이면 승인,반려 버튼 비활성화, 그리드 수정불가능
	if(ynWork == "Y"){
		this.dxGrid.info = "N";	// 그리드 readonly
		this.fnSetExtendButtonEnable(true,true);
	}else{
		this.dxGrid.info = "Y";
		this.fnSetExtendButtonEnable(false,false);
	}
};

this.fnValidate = function() {
	if (!this.gfnIsNull(this.divSearch.form.ctclDT_START.value) && !this.gfnIsNull(this.divSearch.form.ctclDT_END.value)) {
		if (this.divSearch.form.ctclDT_START.value > this.divSearch.form.ctclDT_END.value) {
			this.fnAlertCallback = function() {
				this.divSearch.form.ctclDT_START.setFocus();
			}
			this.gfnAlert("근태기간이 올바르지 않습니다. 다시 입력해주세요.", "fnAlertCallback");
			return false;
		}
	}
	return true;
};

this.divSearch_ctclDT_START_onchanged = function(obj:nexacro.Calendar,e:nexacro.ChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};

this.divSearch_ctclDT_END_onchanged = function(obj:nexacro.Calendar,e:nexacro.ChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};

//조직분류 콤보 조회
this.fnSetCombo = function() {
	
	this.dsCombo = new Dataset();
	this.dsCombo.addColumn("TY_SEL", "string");
	this.dsCombo.addColumn("CD_PREFIX", "string");
	
	this.dsCombo.addRow();
	this.dsCombo.setColumn(0, "TY_SEL", "A");
	this.dsCombo.setColumn(0, "CD_PREFIX", "DA");

	var strSvcId    = "combo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "combo=dsCombo";
	var outData     = "dsTY_DEPT=combo0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};
//시작일 종료일 체크
this.dsList_cancolumnchange = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.columnid == "DT_START"){
		var dtEnd = this.dsList.getColumn(e.row, "DT_END")==null?"99991231":this.dsList.getColumn(e.row, "DT_END");
		if(dtEnd < e.newvalue){
			this.gfnAlert("시작일이 종료일보다 클 수 없습니다.");
			return false;
		}
	}else if(e.columnid == "DT_END"){
		var dtStart = this.dsList.getColumn(e.row, "DT_START")==null?"00000101":this.dsList.getColumn(e.row, "DT_START");
		if(dtStart > e.newvalue){
			this.gfnAlert("종료일이 시작일보다 작을 수 없습니다.");
			return false;
		}
	}
	
	return true;
};

this.dsList_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	this.fnSetButton();
};
]]></Script>
    <Objects>
      <Dataset id="dsList" cancolumnchange="dsList_cancolumnchange" onvaluechanged="dsList_onvaluechanged"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DACPR_RECORD_INFO_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DACPR_RECORD_INFO_UPDATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">approval</Col>
            <Col id="SP">DACPR_RECORD_INFO_APPROVAL</Col>
          </Row>
          <Row>
            <Col id="TARGET">selectDept</Col>
            <Col id="SP">DACPR_RECORD_DEPT_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo</Col>
            <Col id="SP">DAZPR_COMMONCODE_COMBO</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsDept" >
        <ColumnInfo>
          <Column id="YN_WORK" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsTY_DEPT">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ctclDT_START" propid="value" datasetid="dsSearch" columnid="DT_START"/>
      <BindItem id="item1" compid="divSearch.form.ctclDT_END" propid="value" datasetid="dsSearch" columnid="DT_END"/>
      <BindItem id="item2" compid="divSearch.form.ccfID_SABUN.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="ID_SABUN"/>
      <BindItem id="item3" compid="divSearch.form.ccfID_SABUN.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_HNAME"/>
      <BindItem id="item4" compid="divSearch.form.ccfCD_DEPT.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_DEPT"/>
      <BindItem id="item5" compid="divSearch.form.ccfCD_DEPT.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_DEPT"/>
      <BindItem id="item6" compid="divSearch.form.ccfCD_RECORD.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_RECORD"/>
      <BindItem id="item7" compid="divSearch.form.ccfCD_RECORD.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_RECORD"/>
      <BindItem id="item8" compid="divSearch.form.ccfTY_STATUS.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="TY_STATUS"/>
      <BindItem id="item9" compid="divSearch.form.ccfTY_STATUS.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_STATUS"/>
      <BindItem id="item11" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item10" compid="divSearch.form.cboTY_DEPT" propid="value" datasetid="dsSearch" columnid="TY_DEPT"/>
    </Bind>
  </Form>
</FDL>
