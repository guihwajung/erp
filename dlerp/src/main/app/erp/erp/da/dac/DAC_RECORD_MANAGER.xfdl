<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="근태 관리 등록" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0" top="0" height="46.0" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static id="staCD_RECORD_DEPT" taborder="0" text="승인부서" left="0.0" top="10.0" width="118.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_RECORD_DEPT" CDTextWidth="70" taborder="1" left="staCD_RECORD_DEPT:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staID_SABUN" taborder="2" text="승인자 성명" left="ccfCD_RECORD_DEPT:0.0" top="10.0" width="118.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfID_SABUN" CDTextWidth="70" taborder="3" left="staID_SABUN:0.0" top="10.0" width="180" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staCD_BUMUN" taborder="4" text="조직구분" left="ccfID_SABUN:0.0" top="10.0" width="118.0" height="24.0" onclick="divSearch_staCD_CORP_onclick" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_BUMUN" CDTextWidth="70" taborder="5" left="staCD_BUMUN:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList" onvaluechanged="dsList_onvaluechanged"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DACPR_RECORD_MANAGER_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DACPR_RECORD_MANAGER_SAVE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_RECORD_DEPT" type="STRING" size="256"/>
          <Column id="ID_SABUN" type="STRING" size="256"/>
          <Column id="CD_BUMUN" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	//this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();	
	
	//법인 셋팅
	/*
	this.divSearch.form.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);
	this.divSearch.form.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP);
	
	this.divSearch.form.ccfCD_DEPT.form.CDTextBox.set_value(this.AuthClient.CD_DEPT);
	this.divSearch.form.ccfCD_DEPT.form.DSTextBox.set_value(this.AuthClient.DS_DEPT);
	*/
	
	/*
		YN_RECORD 근태 : Y/N
		YN_LEISURE 레저 : Y/N
		TY_LEISURE_APPROVE 레저권한 : B부서장 | I임원
		YN_CERTIFICATE 증명서 : Y/N
		TY_CERTIFICATE_APPROVE 증명서권한 : B부서장 | I임원	

		연차정보_근태관리_근태승인
		인사정보_출력_증명서발급
		복리후생_레저시설_레저시설이용승인
	*/
	
	//화면 로드시 자동조회
	this.FormBtns.Select.click();
	
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
// 	this.FormBtns.Add.set_enable(false);
// 	this.FormBtns.Del.set_enable(false);
	this.FormBtns.Reset.set_enable(true);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	//this.btn1 = this.gfnFormButtonAdd("Detail", "fnDetail1");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_RECORD_DEPT = this.divSearch.form.ccfCD_RECORD_DEPT;
	this.ccfID_SABUN = this.divSearch.form.ccfID_SABUN;
	this.ccfCD_BUMUN = this.divSearch.form.ccfCD_BUMUN;

	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {

	this.ccfCD_RECORD_DEPT.CodeFindName = "DAX_CFDEPT_MST1";
	this.ccfCD_RECORD_DEPT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_RECORD_DEPT.AfterCDTextChanged = "codefind_AfterCDTextChanged";

	this.ccfID_SABUN.CodeFindName = "DAX_CFBASEINFO_ALL";
	this.ccfID_SABUN.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfID_SABUN.AfterCDTextChanged = "codefind_AfterCDTextChanged";	

	this.ccfCD_BUMUN.CodeFindName = "DAX_CFCOMMONCODE";
	this.ccfCD_BUMUN.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_BUMUN.AfterCDTextChanged = "codefind_AfterCDTextChanged";	
	
	this.gfnGridInit(this.dxGrid, this.dsList, "DA", "DAC_RECORD_MANAGER");
		
	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
	this.dxGrid.AfterCDTextChanged = "fnGrid_AfterCDTextChanged";
	this.dxGrid.AfterEdit = "fnGrid_AfterEdit";

}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();   
	this.dsSelect.addColumn("CD_RECORD_DEPT", "string");
	this.dsSelect.addColumn("ID_SABUN", "string");
	this.dsSelect.addColumn("CD_BUMUN", "string");

	this.dsSave = new Dataset();
	this.dsSave.addColumn("TY_SAVE", "string");
	this.dsSave.addColumn("ID_SABUN", "string");
	this.dsSave.addColumn("ID_PERSON", "bigdecimal");
	this.dsSave.addColumn("CD_DEPT", "string");
	this.dsSave.addColumn("CD_RECORD_DEPT", "string");
	this.dsSave.addColumn("CD_BUMUN", "string");
	this.dsSave.addColumn("CD_POSITION", "string");
	this.dsSave.addColumn("DT_REGISTER", "string");
	this.dsSave.addColumn("DS_REMARK", "string");
	this.dsSave.addColumn("ID_INSERT", "string");
	this.dsSave.addColumn("YN_RECORD", "string");
	this.dsSave.addColumn("YN_LEISURE", "string");
	this.dsSave.addColumn("TY_LEISURE_APPROVE", "string");
	this.dsSave.addColumn("YN_CERTIFICATE", "string");
	this.dsSave.addColumn("TY_CERTIFICATE_APPROVE", "string");
	this.dsSave.addColumn("YN_EDUCATION", "string");

}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if(!this.fnValidate()) return;

	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "CD_RECORD_DEPT", this.dsSearch.getColumn(0, "CD_RECORD_DEPT"));
	this.dsSelect.setColumn(0, "ID_SABUN", this.dsSearch.getColumn(0, "ID_SABUN"));
	this.dsSelect.setColumn(0, "CD_BUMUN", this.dsSearch.getColumn(0, "CD_BUMUN"));

	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	var nrow = this.gfnGridAdd(this.dxGrid);
	var today = this.gfnGetDate().substring(0,8);
	this.dsList.setColumn(nrow, "DT_REGISTER", today);
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	// 그리드 필수항목 체크
	if (!this.gfnGridValidate(this.dxGrid)) return;
	
	// 저장 Validate
	if(!this.fnSaveValidate()) return;

	this.dxGrid.updateToDataset();

	this.dsSave.clearData();

	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
			case "U":
			case "D":
				var nrow = this.dsSave.addRow();
				this.dsSave.setColumn(nrow, "TY_SAVE", flag);
				this.dsSave.setColumn(nrow, "ID_SABUN", this.dsList.getColumn(i, "ID_SABUN"));
				this.dsSave.setColumn(nrow, "ID_PERSON", this.dsList.getColumn(i, "ID_PERSON"));
				this.dsSave.setColumn(nrow, "CD_DEPT", this.dsList.getColumn(i, "CD_DEPT"));
				this.dsSave.setColumn(nrow, "CD_RECORD_DEPT", this.dsList.getColumn(i, "CD_RECORD_DEPT"));
				this.dsSave.setColumn(nrow, "CD_BUMUN", this.dsList.getColumn(i, "CD_BUMUN"));
				this.dsSave.setColumn(nrow, "CD_POSITION", this.dsList.getColumn(i, "CD_POSITION"));
				this.dsSave.setColumn(nrow, "DT_REGISTER", this.dsList.getColumn(i, "DT_REGISTER"));
				this.dsSave.setColumn(nrow, "DS_REMARK", this.dsList.getColumn(i, "DS_REMARK"));
				this.dsSave.setColumn(nrow, "YN_RECORD", this.dsList.getColumn(i, "YN_RECORD"));
				this.dsSave.setColumn(nrow, "YN_LEISURE", this.dsList.getColumn(i, "YN_LEISURE"));
				this.dsSave.setColumn(nrow, "TY_LEISURE_APPROVE", this.dsList.getColumn(i, "TY_LEISURE_APPROVE"));
				this.dsSave.setColumn(nrow, "YN_CERTIFICATE", this.dsList.getColumn(i, "YN_CERTIFICATE"));
				this.dsSave.setColumn(nrow, "TY_CERTIFICATE_APPROVE", this.dsList.getColumn(i, "TY_CERTIFICATE_APPROVE"));
				this.dsSave.setColumn(nrow, "YN_EDUCATION", this.dsList.getColumn(i, "YN_EDUCATION"));
				this.dsSave.setColumn(nrow, "ID_INSERT", this.AuthClient.ID_USER);

				break;
		}
	}

	if (this.dsSave.rowcount == 0) return;

	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave";
	var outData     = "dsOutput=save";
	var strArg      = "";
	var callBackFnc = "fnCallback";

	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc);   // 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
};
/*
 *	리셋 버튼
 */
this.fnReset = function() {
	this.ccfCD_RECORD_DEPT.form.CDTextBox.set_value("");
	this.ccfCD_RECORD_DEPT.form.DSTextBox.set_value("");
	this.ccfID_SABUN.form.CDTextBox.set_value("");
	this.ccfID_SABUN.form.DSTextBox.set_value("");
	this.ccfCD_BUMUN.form.CDTextBox.set_value("");
	this.ccfCD_BUMUN.form.DSTextBox.set_value("");
};
/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnValidate = function() {
// 	if (this.gfnIsNull(this.AuthClient.CD_CORP)) {
// 		this.fnVaidateCallback = function() {
// 			this.ccfCD_CORP.form.CDTextBox.setFocus();
// 		}
// 		this.gfnAlert("법인코드를 입력하세요.");
// 		return false;
// 	}
// 	
// 	if (this.gfnIsNull(this.ccfCD_DEPT.form.CDTextBox.value)) {
// 		this.fnVaidateCallback = function() {
// 			this.ccfCD_DEPT.form.CDTextBox.setFocus();
// 		}
// 		this.gfnAlert("부서를 입력하세요.");
// 		return false;
// 	}
	
	return true;
};
/*
 *	저장 Validate
 */
this.fnSaveValidate = function() {
	var strMsg = "";
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var YN_LEISURE = this.dsList.getColumn(i, "YN_LEISURE");
		var TY_LEISURE_APPROVE = this.dsList.getColumn(i, "TY_LEISURE_APPROVE");
		var YN_CERTIFICATE = this.dsList.getColumn(i, "YN_CERTIFICATE");
		var TY_CERTIFICATE_APPROVE = this.dsList.getColumn(i, "TY_CERTIFICATE_APPROVE");

		if( YN_LEISURE == "Y" && this.gfnIsNull(TY_LEISURE_APPROVE)) {
			strMsg += i + "열 : 레저권한구분 필수입력값입니다.\n";
		}
		
		if( YN_CERTIFICATE == "Y" && this.gfnIsNull(TY_CERTIFICATE_APPROVE)) {
			strMsg += i + "열 : 증명서권한구분 필수입력값입니다.\n";
		}
	}
	if(strMsg.length > 0) {
		this.gfnAlert(strMsg);
		return false;
	}
	return true;
};


/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
		this.fnSetButton();
	} else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.codefind_AfterCDTextChanged = function(id) {
	this.fnSearchInit();
}

this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow){

	if(id = "DAX_CFDEPT_MST1"){	// 승인부서
		//dsUserParam.setColumn(nrow, "CD_DEPT_MST",  "%");
	}
	
	if(id = "DAX_CFBASEINFO_ALL"){	// 승인자성명
		dsUserParam.setColumn(nrow, "CD_CORP", this.AuthClient.CD_CORP);
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "CD_DEPT", this.AuthClient.CD_DEPT);
		dsUserParam.setColumn(nrow, "YN_CORP", "");
		dsUserParam.setColumn(nrow, "TY_RETIRE", "");	// 재직구분
	}
	
	if(id = "DAX_CFCOMMONCODE"){	// 조직구분
		dsUserParam.setColumn(nrow, "CD_PREFIX", "DA");
	}

	return true;
};

 
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
  this.fnGrid_BeforeUserDataSetParam = function(id, dsUserParam, nrow){

	if(id == "DAX_CFCOMMONCODE"){	// 조직구분
		dsUserParam.setColumn(nrow, "CD_PREFIX", "DA");
	}

	else if(id == "DAX_CFBASEINFO_ALL"){	// 승인권자 사번
		dsUserParam.setColumn(nrow, "CD_CORP", "%");
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "CD_DEPT", "%");
		dsUserParam.setColumn(nrow, "YN_CORP", "Y");
		dsUserParam.setColumn(nrow, "TY_RETIRE", "01");	// 재직구분 
	}

	if(id == "ED"){	// 직위
		dsUserParam.setColumn(nrow, "CD_PREFIX", "ED");
	}
	
	else if(id == "DAX_CFDEPT_MST1"){	// 승인대상부서
		//dsUserParam.setColumn(nrow, "CD_DEPT_MST", "%");
	}
	
	return true;
};

this.fnGrid_AfterCDTextChanged = function(id, codeFindData) {

	var arr = codeFindData;
	switch(id) {
		case "DAX_CFBASEINFO_ALL":
			this.dsList.setColumn(this.dsList.rowposition, "CD_CORP", arr[0]["CD_CORP"]);
			this.dsList.setColumn(this.dsList.rowposition, "ID_PERSON", arr[0]["ID_PERSON"]);
			break;
		case "DAX_CFDEPT_MST1":
			this.dsList.setColumn(this.dsList.rowposition, "CD_BUMUN", arr[0]["TY_DEPT"]);
			this.dsList.setColumn(this.dsList.rowposition, "DS_BUMUN", arr[0]["TY_DEPT_NM"]);
			break;
		default:		
	}

}

this.fnGrid_AfterEdit = function(obj,e) {
	trace(e.columnid + " / newvalue->" + e.newvalue + "\n newvalue->" +  e.oldvalue);

	switch(e.columnid) {
		case "YN_LEISURE":
			if(e.oldvalue != e.newvalue && e.newvalue == "N") {
				this.dsList.setColumn(e.row, "TY_LEISURE_APPROVE", "");
			}
			break;
		case "TY_LEISURE_APPROVE":
			var YN_LEISURE = this.dsList.getColumn(e.row, "YN_LEISURE");
			if(YN_LEISURE == "N") this.dsList.setColumn(e.row, "TY_LEISURE_APPROVE", "");
			break;

		case "YN_CERTIFICATE":
			if(e.oldvalue != e.newvalue && e.newvalue == "N") {
				this.dsList.setColumn(e.row, "TY_CERTIFICATE_APPROVE", "");
			}
			break;
		case "TY_CERTIFICATE_APPROVE":
			var YN_CERTIFICATE = this.dsList.getColumn(e.row, "YN_CERTIFICATE");
			if(YN_CERTIFICATE == "N") this.dsList.setColumn(e.row, "TY_CERTIFICATE_APPROVE", "");
			break;
		default:
	}
}

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		// 폼상태 초기화
		this.gfnSetFormStatus(this);	
		this.gfnGridClear(this.dxGrid);
	}
};

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};
this.dsList_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	this.fnSetButton();
};
]]></Script>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_RECORD_DEPT.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_RECORD_DEPT"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_BUMUN.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_BUMUN"/>
      <BindItem id="item2" compid="divSearch.form.ccfID_SABUN.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="ID_SABUN"/>
    </Bind>
  </Form>
</FDL>
