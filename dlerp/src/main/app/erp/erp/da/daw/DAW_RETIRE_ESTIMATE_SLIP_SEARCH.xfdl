<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="퇴직추계액 계산" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0" top="0" height="46.0" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static id="staCD_CORP" taborder="0" text="법인" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_CORP" CDTextWidth="30" taborder="1" left="staCD_CORP:0.0" top="10.0" width="180" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staYM_BASE" taborder="2" text="정산년월" left="ccfCD_CORP:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYM_BASE" taborder="3" left="staYM_BASE:0.0" top="10.0" width="80" height="24.0" url="cmm::cmmCalMM.xfdl" enableevent="true" text="2019"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList" onvaluechanged="dsList_onvaluechanged"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DAWPR_RETIRE_EST_AUTOSLIP_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="YM_BASE" type="STRING" size="256"/>
          <Column id="DS_CORP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CORP"/>
            <Col id="YM_BASE"/>
            <Col id="DS_CORP"> </Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
//	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	// 검색조건 수정 2019.11.11
	//정산년월 셋팅 - 전년도 12월
	if(!this.gfnIsNull(this.getOwnerFrame().YM_BASE)) {	
		this.dsSearch.setColumn(0, "YM_BASE", this.getOwnerFrame().YM_BASE); 
		this.dsSearch.setColumn(0, "CD_CORP", this.getOwnerFrame().CD_CORP); 
		this.dsSearch.setColumn(0, "DS_CORP", this.getOwnerFrame().DS_CORP); 
	}else{
		var preYear = (parseInt(this.gfnGetDate().substring(0,4))-1) + "12";
		//this.divSearch.form.ctclYM_BASE.form.TextBox.set_value(preYear);
		this.dsSearch.setColumn(0, "YM_BASE", preYear); 
	}
	
	this.FormBtns.Select.click();
	
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	this.FormBtns.Add.set_enable(false); 
	this.FormBtns.Del.set_enable(false); 
	this.FormBtns.Save.set_enable(false); 
	this.FormBtns.Print.set_enable(false); 
	this.FormBtns.Reset.set_enable(true); 
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {

};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;
	this.ctclYM_BASE = this.divSearch.form.ctclYM_BASE;
	
	this.dxGrid = this.divData.form.objGrid;
	
	this.grSearch = this.FormInfo.GR_SEARCH;					          // 권한
	this.cdGroup = this.AuthClient.CD_GROUP;					          // 그룹코드		
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	//법인
	this.ccfCD_CORP.CodeFindName = "DAX_CFCORP";
	this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";		
	this.ccfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";	

	//그리드
	this.gfnGridInit(this.dxGrid, this.dsList, "DA", "DAW_RETIRE_ESTIMATE_SLIP_SEARCH");
	//그리드 이벤트
	this.dxGrid.addEventHandler("oncelldblclick", this.fnGrid_oncelldblclick, this); 
		
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("YM_BASE", "string");

}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if(!this.fnValidate()) return;
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
	this.dsSelect.setColumn(0, "YM_BASE", this.ctclYM_BASE.form.TextBox.value);

	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
}	

/*
 *	삭제 버튼
 */
this.fnDel = function() {
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
// 그리드 필수항목 체크

}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/*
 *	초기화 버튼
 */
this.fnReset = function(){

	var divCompArr = this.divSearch.form.components;
	
	for( var i=0; i < divCompArr.length; i++){
		var comp = divCompArr[i];
		if(comp instanceof nexacro.Div){
			if(!comp.enable) continue;	
			if(comp.url.indexOf("CodeFind") > 0){
				comp.form.CDTextBox.set_value("");
				comp.form.DSTextBox.set_value("");
				if(this.gfnTypeOf(comp.form.TextBox) == "Edit"){	
					comp.form.TextBox.set_value("");	
				}	
			}else if(comp.url.indexOf("CalYY") > 0 || comp.url.indexOf("CalMM") > 0){
				comp.form.TextBox.set_value("");	
			}
		}else if(comp instanceof nexacro.Edit || 
				comp instanceof nexacro.MaskEdit || 
				comp instanceof nexacro.Calendar
		){
			if(comp.readonly || !comp.enable) continue;
			comp.set_value("");	
		}else if(comp instanceof nexacro.Combo){
			if(comp.readonly || !comp.enable) continue;
			comp.set_index(0);
		}else if(comp instanceof nexacro.CheckBox){
			if(comp.readonly || !comp.enable) continue;
			if(comp.truevalue == "Y"){
				comp.set_value("N");
			}else{
				comp.set_value(false);
			}
		}else if(comp instanceof nexacro.Radio){
			if(comp.readonly || !comp.enable) continue;
			comp.set_index(0);	
		}
	}
};

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnValidate = function() {

 	if (this.gfnIsNull(this.ctclYM_BASE.form.TextBox.value)) {
 		this.ctclYM_BASE.form.TextBox.setFocus();
 		this.gfnAlert("정산년월를 입력하세요.");
 		return false;
 	}

	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	this.fnSetButton(); 
	
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.gfnAlert("작업이 완료되었습니다.");
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnAfterCDTextChanged = function(id) {
	this.fnSearchInit();
}

this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {

	switch(id) {	
		case "ccfCD_CORP":	//법인
			break;		
		
		default:
	}	
	return true;
}
 
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGrid_oncelldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	this.fnSlipDetail();
};

this.fnSlipDetail = function() {
	// 선택된 row가 있을 경우에만 팝업을 띄움
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }

	if( !this.gfnIsNull(this.dsList.getColumn(this.dsList.rowposition, "CD_TRADE")) ){
		var param = {};
		
		param.CD_TRADE = this.dsList.getColumn(this.dsList.rowposition,"CD_TRADE");
		param.IUD_FLAG = "S";
		
		this.gfnFormOpen("DHA", "DHA_ISSUESLIP", "", param);
	} else {
		this.gfnAlert("전표가 생성된 행만 전표조회 가능합니다.", "");
	}

}


/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		// 폼상태 초기화
		this.gfnSetFormStatus(this);	
		this.gfnGridClear(this.dxGrid);
	}
};

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e == null || e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};

this.dsList_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	this.fnSetButton(); 
};
]]></Script>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item2" compid="divSearch.form.ccfCD_CORP.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_CORP"/>
      <BindItem id="item1" compid="divSearch.form.ctclYM_BASE.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_BASE"/>
    </Bind>
  </Form>
</FDL>
