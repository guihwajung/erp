<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="DAV_PAYHISTORYDETAIL" width="1280" height="720" titletext="개인별 년간소득/공제내역 상세" onload="form_onload">

    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="1" left="0" top="0" height="110.0" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static id="staYM_BASE" taborder="2" text="적용기간" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYM_BASE_FR" taborder="3" left="staYM_BASE:0.0" top="10.0" width="80" height="24.0" dateformat="yyyy-mm" editformat="yyyymm" url="cmm::cmmCalMM.xfdl" AfterCDTextChanged="fnAfterCDTextChanged"/>
              <Static id="staDT_WORK_TO" taborder="4" text="~" left="ctclYM_BASE_FR:0.0" top="10.0" width="30.0" height="24.0" cssclass="sta_WF_AC"/>
              <Div id="ctclYM_BASE_TO" taborder="5" left="staDT_WORK_TO:0.0" top="10.0" width="80" height="24.0" dateformat="yyyy-mm" editformat="yyyymm" url="cmm::cmmCalMM.xfdl" text=""/>
              <Static id="staCD_CORP" taborder="0" text="법인" left="ctclYM_BASE_TO:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_CORP" CDTextWidth="50" taborder="1" left="staCD_CORP:0.0" top="10.0" width="179" height="24.0" url="cmm::cmmCodeFind.xfdl" CodeFindName="DAX_CFCORP2" BeforeUserDataSetParam="fnBeforeUserDataSetParam" AfterCDTextChanged="fnAfterCDTextChanged"/>
              <Static id="staID_RESIDENT" taborder="8" text="주민번호" left="ccfCD_CORP:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfID_RESIDENT" CodeFindName="DAX_CFEMP" CDTextWidth="80" taborder="9" left="staID_RESIDENT:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" BeforeUserDataSetParam="fnBeforeUserDataSetParam" AfterCDTextChanged="fnAfterCDTextChanged"/>
              <Static id="staTY_GUBUN" taborder="6" text="구분" left="0.0" top="staYM_BASE:10.0" width="92.0" height="24.0" rtl="false" cssclass="sta_WF_SchLabelE"/>
              <Radio id="rdoTY_GUBUN" taborder="7" left="staTY_GUBUN:0.0" top="ctclYM_BASE_FR:10.0" height="24.0" innerdataset="innerdataset" codecolumn="codecolumn" datacolumn="datacolumn" direction="vertical" fittocontents="width" width="120" index="0" value="E" onitemchanged="fnSearchInit" text="임직원">
                <Dataset id="innerdataset">
                  <ColumnInfo>
                    <Column id="codecolumn" size="256"/>
                    <Column id="datacolumn" size="256"/>
                  </ColumnInfo>
                  <Rows>
                    <Row>
                      <Col id="codecolumn">E</Col>
                      <Col id="datacolumn">임직원</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">T</Col>
                      <Col id="datacolumn">노무자</Col>
                    </Row>
                  </Rows>
                </Dataset>
              </Radio>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList" onvaluechanged="dsList_onvaluechanged">
        <ColumnInfo>
          <Column id="TY_SAVE" type="STRING" size="256"/>
          <Column id="ID_PERSON" type="STRING" size="256"/>
          <Column id="ID_SABUN" type="STRING" size="0"/>
          <Column id="CD_POSITION" type="STRING" size="256"/>
          <Column id="DS_POSITION" type="STRING" size="256"/>
          <Column id="CD_PAYSTEP" type="STRING" size="256"/>
          <Column id="DS_PAYSTEP" type="STRING" size="256"/>
          <Column id="CD_DUTY" type="STRING" size="256"/>
          <Column id="DS_DUTY" type="STRING" size="256"/>
          <Column id="CD_OCCUPATION" type="STRING" size="256"/>
          <Column id="DS_OCCUPATION" type="STRING" size="256"/>
          <Column id="CD_JOBTYPE" type="STRING" size="256"/>
          <Column id="DS_JOBTYPE" type="STRING" size="256"/>
          <Column id="DS_REMARK" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DAVPR_PAYHISTORYDETAIL_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);
	this.gfnFormInfo(this);
	// ---------------------------//

	this.fnSetButton();
	//this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	//적용년도(현재)
	this.ctclYM_BASE_FR.form.TextBox.set_value(this.gfnGetDate().substr(0,4)+"01");
	this.ctclYM_BASE_TO.form.TextBox.set_value(this.gfnGetDate().substr(0,4)+"12");
	
	// 법인코드 및 법인명 기본세팅
	this.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);
    this.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP);
	
	//임직원구분 - 노무자 삭제
	 this.divSearch.form.rdoTY_GUBUN.getInnerDataset().deleteRow(1); 

};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
	// this.FormBtns.Add.set_enable(false);
	// this.FormBtns.Del.set_enable(false);
	this.FormBtns.Reset.set_enable(true);
};

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {

	//적용기간
	this.ctclYM_BASE_FR = this.divSearch.form.ctclYM_BASE_FR;
	this.ctclYM_BASE_TO = this.divSearch.form.ctclYM_BASE_TO;
	
	//법인코드
	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;
	
	//주민번호
	this.ccfID_RESIDENT = this.divSearch.form.ccfID_RESIDENT;
	
	//사번
	this.ccfID_SABUN = this.divSearch.form.ccfID_SABUN;
	
	//부서
	this.ccfCD_DEPT = this.divSearch.form.ccfCD_DEPT;
	
	//임직원구분
	this.rdoTY_GUBUN = this.divSearch.form.rdoTY_GUBUN;
	
	//그리드
	this.dxGrid = this.divData.form.objGrid;

	this.grSearch = this.FormInfo.GR_SEARCH;					          // 권한
	this.cdGroup = this.AuthClient.CD_GROUP;					          // 그룹코드
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.gfnGridInit(this.dxGrid, this.dsList, "DA", "DAV_PAYHISTORY");
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	
	// sp의 input 파라미터
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("YM_BASE_FR", "string");   	//적용기간
	this.dsSelect.addColumn("YM_BASE_TO", "string");   	//적용기간
	this.dsSelect.addColumn("CD_CORP", "string");  		//법인
	this.dsSelect.addColumn("ID_RESIDENT", "string");  	//주민등록번호
	//this.dsSelect.addColumn("TY_GUGBUN", "string"); 	//임직원구분
	//this.dsSelect.addColumn("ID_SABUN", "string"); 		//사번
	
};

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {

	if (!this.fnSelectValidate()) return false;

	this.gfnGridBeforeSelect(this.dxGrid);

	this.dsSelect.clearData();
	this.dsSelect.addRow();

	this.dsSelect.setColumn(0, "YM_BASE_FR", this.ccfYM_BASE_FR.form.TextBox.value);   	//적용기간
	this.dsSelect.setColumn(0, "YM_BASE_TO", this.ccfYM_BASE_TO.form.TextBox.value);   	//적용기간
	this.dsSelect.setColumn(0, "CD_CORP", this.ctclCD_CORP.form.TextBox.value);  		//법인
	this.dsSelect.setColumn(0, "ID_RESIDENT", this.ccfID_RESIDENT.form.TextBox.value);  //주민등록번호
	//this.dsSelect.addColumn(0, "TY_GUGBUN", this.divSearch.form.rdoTY_GUBUN.value); 	//임직원구분
	//this.dsSelect.setColumn(0, "ID_SABUN", this.ccfID_SABUN.form.TextBox.value); 		//사번

//	var strSvcId    = "select";
//	var strSvcType  = "grid";
//	var inProc		= "_dsProc";
//	var inData      = "select=dsSelect";
//	var outData     = "dsList=select0";
//	var strArg      = "";
//	var callBackFnc = "fnCallback";

//	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
//						strSvcType , 	// trabsaction을 요청할 구분
//						inProc,			// Procedure 정보 Dataset 이름
//						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
//						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
//						strArg, 	    // 입력갑스로 보낼 arguments, strFormData="20120607"
//						callBackFnc); 	// 통신방법 정의 [생략가능]
};

/*
 *	입력 버튼
 */
this.fnAdd = function() {
//	this.gfnGridAdd(this.dxGrid);
};

/*
 *	삭제 버튼
 */
this.fnDel = function() {
//	this.gfnGridDel(this.dxGrid);
};

/*
 *	저장 버튼
 */
this.fnSave = function() {
//  그리드 필수항목 체크
//	if (!this.gfnGridValidate(this.dxGrid)) return;

//	this.dxGrid.updateToDataset();

//	this.dsInsert.clearData();
//	this.dsUpdate.clearData();
//	this.dsDelete.clearData();

//	for (var i = 0; i < this.dsList.rowcount; i++) {
//		var flag = this.gfnGetFlag(this.dsList, i);
//		switch(flag) {
//			case "I":
//				var nrow = this.dsInsert.addRow();

//				this.dsInsert.setColumn(nrow, "TY_SAVE", flag);
//				this.dsInsert.setColumn(nrow, "ID_INSERT", this.AuthClient.ID_USER);
//				break;
//			case "U":
//				var nrow = this.dsUpdate.addRow();

//				this.dsUpdate.setColumn(nrow, "TY_SAVE", flag);
//				this.dsUpdate.setColumn(nrow, "ID_INSERT", this.AuthClient.ID_USER);
//				break;
//			case "D":
//				var nrow = this.dsDelete.addRow();

//				this.dsDelete.setColumn(nrow, "TY_SAVE", flag);
//				this.dsDelete.setColumn(nrow, "ID_INSERT", this.AuthClient.ID_USER);
//				break;
//		}
//	}

//	if (this.dsInsert.rowcount == 0 && this.dsUpdate.rowcount == 0 && this.dsDelete.rowcount == 0) return;

//	var strSvcId    = "save";
//	var strSvcType  = "save";
//	var inProc		= "_dsProc";
//	var inData      = "insert=dsInsert update=dsUpdate delete=dsDelete";
//	var outData     = "";
//	var strArg      = "";
//	var callBackFnc = "fnCallback";

//	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
//						strSvcType , 	// transaction을 요청할 구분
//						inProc,			// Procedure 정보 Dataset 이름
//						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
//						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
//						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
//						callBackFnc); // 통신방법 정의 [생략가능]
};

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
};

/*
 *	출력 버튼
 */
this.fnPrint = function() {
};
/*
 *	리셋 버튼
 */
this.fnReset = function() {
	this.ctclYM_BASE_FR.form.TextBox.set_value("");
	this.ctclYM_BASE_TO.form.TextBox.set_value("");
	this.ccfCD_CORP.form.CDTextBox.set_value("");
	this.ccfCD_CORP.form.DSTextBox.set_value("");
	this.ccfID_RESIDENT.form.CDTextBox.set_value("");
	this.ccfID_RESIDENT.form.DSTextBox.set_value("");
	this.rdoTY_GUBUN.set_value("E");	
};
/************************************************************************
 * Validate
 ************************************************************************/
this.fnSelectValidate = function() {

 	var validate = true;
	
	//적용기간 FR
	if (this.gfnIsNull(this.ctclYM_BASE_FR.form.TextBox.value)) {
		this.fnVaidateCallback = function() {
			this.ctclYM_BASE_FR.form.TextBox.setFocus();
		}
		this.gfnAlert("적용기간 시작일을 입력하세요.");
		return false;
	}
	
	//적용기간 TO
	if (this.gfnIsNull(this.ctclYM_BASE_TO.form.TextBox.value)) {
		this.fnVaidateCallback = function() {
			this.ctclYM_BASE_TO.form.TextBox.setFocus();
		}
		this.gfnAlert("적용기간 종료일을 입력하세요.");
		return false;
	}
	
	if (this.ctclYM_BASE_FR.form.TextBox.value > this.ctclYM_BASE_TO.form.TextBox.value )  {
		validate = false;
		this.fnDtVaidateCallback = function() {
			this.ctclYM_BASE_FR.form.TextBox.setFocus();
		}
		this.gfnAlert("적용기간 시작일이 종료일보다 클 수 없습니다.", "fnDtVaidateCallback");
		return false;
	}
	
	//법인
	if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
		validate = false;
		this.fnVaidateCallback = function() {
			this.ccfCD_CORP.form.CDTextBox.setFocus();
		}
		this.gfnAlert("법인코드를 입력하세요.", "fnVaidateCallback");
	}
	
	//주민등록번호
	if (this.gfnIsNull(this.ccfID_RESIDENT.form.CDTextBox.value)) {
		validate = false;
		this.fnVaidateCallback = function() {
			this.ccfID_RESIDENT.form.CDTextBox.setFocus();
		}
		this.gfnAlert("주민등록번호를 입력하세요.", "fnVaidateCallback");
	}

 	return validate;
};
/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
		this.fnSetButton();
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
};

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {

 	switch(id) {
		case "ccfCD_CORP": // 법인코드
			dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
			dsUserParam.setColumn(nrow, "CD_DEPT", this.AuthClient.CD_DEPT);
			break;

		case "ccfID_RESIDENT":
			if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
				this.fnBeforeUserCallback = function() {
						this.ccfCD_CORP.form.CDTextBox.setFocus();
					}
					this.gfnAlert("법인코드를 입력하세요.", "fnBeforeUserCallback");
					return false;
			}
			dsUserParam.setColumn(nrow, "GUBUN", "%");
			dsUserParam.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
			break;

		case "ccfID_SABUN": //사번
			if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
				this.fnBeforeUserCallback = function() {
						this.ccfCD_CORP.form.CDTextBox.setFocus();
					}
					this.gfnAlert("법인코드를 입력하세요.", "fnBeforeUserCallback");
					return false;
			}
			dsUserParam.setColumn(nrow, "CD_CORP", this.AuthClient.CD_CORP);
			dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
			dsUserParam.setColumn(nrow, "CD_DEPT", "%");
			dsUserParam.setColumn(nrow, "YN_CORP", "Y");
			dsUserParam.setColumn(nrow, "TY_RETIRE", "%");	// 재직구분		
			break;
			
		default:
 	}
 	return true;
};

this.fnAfterCDTextChanged = function(id, codeFindData) {

	var arr = codeFindData;
	
	switch(id) {
		case "ccfCD_CORP": // 법인코드
			this.ccfID_SABUN.form.CDTextBox.set_value("");
			this.ccfID_SABUN.form.DSTextBox.set_value("");
			this.ccfID_RESIDENT.form.CDTextBox.set_value("");
			this.ccfID_RESIDENT.form.DSTextBox.set_value("");
			break;
		
		case "ccfID_SABUN"://사번
			this.ccfCD_CORP.form.CDTextBox.set_value(arr[0]["CD_CORP"]);
			this.ccfCD_CORP.form.DSTextBox.set_value(arr[0]["DS_CORP"]);
			this.ccfID_RESIDENT.form.CDTextBox.set_value("");
			this.ccfID_RESIDENT.form.DSTextBox.set_value("");
			break;
		
		case "ccfID_RESIDENT"://주민등록번호
//			this.edtID_SABUN.set_value(arr[0]["ID_SABUN"]);
			break;	
			
		default:
	}

	this.fnSearchInit();

};

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/

 /************************************************************************
 * 확장버튼 이벤트
 ************************************************************************/
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		// 폼상태 초기화
		this.gfnSetFormStatus(this);
		this.gfnGridClear(this.dxGrid);
	}
};
this.dsList_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	this.fnSetButton();
};
]]></Script>
  </Form>
</FDL>
