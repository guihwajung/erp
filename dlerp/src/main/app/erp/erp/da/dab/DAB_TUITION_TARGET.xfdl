<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="1280" height="720" titletext="학자금 지급 대상자 관리" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="78.0" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static id="staYY_TUITION" taborder="2" text="지급년도" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYY_TUITION" taborder="0" left="staYY_TUITION:0.0" top="10.0" width="80" height="24.0" url="cmm::cmmCalYY.xfdl"/>
              <Static id="staCD_CORP" taborder="3" text="법인" left="0.0" top="staYY_TUITION:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_CORP" CodeFindName="DZX_CFCORP_STD" CDTextWidth="50" FitToContents="true" taborder="1" left="staCD_CORP:0.0" top="staYY_TUITION:10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staCD_LEVEL" taborder="4" text="학력" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_LEVEL" CodeFindName="DAX_CFCOMMONCODE" CDTextWidth="80" FitToContents="true" taborder="5" left="staCD_LEVEL:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staCD_DEPT" taborder="6" text="부서" left="ccfCD_CORP:0.0" top="staYY_TUITION:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_DEPT" CodeFindName="DAX_CFDEPT" CDTextWidth="80" FitToContents="true" taborder="7" left="staCD_DEPT:0.0" top="staYY_TUITION:10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staNO_SEMESTER" taborder="8" text="학기" left="ccfCD_LEVEL:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Combo id="ccboNO_SEMESTER" taborder="9" left="staNO_SEMESTER:0.0" top="10.0" width="80" height="24.0" innerdataset="innerdataset" datacolumn="datacolumn" codecolumn="codecolumn">
                <Dataset id="innerdataset">
                  <ColumnInfo>
                    <Column id="codecolumn" size="256"/>
                    <Column id="datacolumn" size="256"/>
                  </ColumnInfo>
                  <Rows>
                    <Row>
                      <Col id="datacolumn">전체</Col>
                      <Col id="codecolumn"/>
                    </Row>
                    <Row>
                      <Col id="codecolumn">0</Col>
                      <Col id="datacolumn">0</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">1</Col>
                      <Col id="datacolumn">1</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">2</Col>
                      <Col id="datacolumn">2</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">3</Col>
                      <Col id="datacolumn">3</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">4</Col>
                      <Col id="datacolumn">4</Col>
                    </Row>
                  </Rows>
                </Dataset>
              </Combo>
              <Static id="staID_SABUN" taborder="10" text="성명" left="ccfCD_DEPT:0.0" top="staYY_TUITION:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfID_SABUN" CodeFindName="DAX_CFBASEINFO_ALL" CDTextWidth="70" FitToContents="true" taborder="11" left="staID_SABUN:0.0" top="staYY_TUITION:10.0" width="200" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static cssclass="sta_WF_SchLabel" id="staDT_BASE" taborder="12" text="기준일자" left="ccboNO_SEMESTER:0.0" top="10.0" width="92.0" height="24.0"/>
              <Calendar id="ctclDT_BASE" taborder="13" left="staDT_BASE:0.0" top="10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="1" left="0" top="divSearch:0" bottom="0" right="0" cssclass="div_DATA_Bg" ondragmove="divData_ondragmove">
          <Layouts>
            <Layout>
              <Div id="divSplitter" taborder="1" left="69.5%" top="0" width="23" height="100%" background="url('theme://images/slt_WF_SplitterV.png') no-repeat center center" cursor="ew-resize" ondrag="divData_divSplitter_ondrag"/>
              <Div id="divDataLeft" taborder="0" left="0" top="-3" bottom="0" right="divSplitter:5">
                <Layouts>
                  <Layout>
                    <Static id="staTitle1" taborder="0" left="0" top="0" width="100%" height="35" cssclass="sta_TITLE_Bg" text="학자금 대상자"/>
                    <Grid id="objGrid" taborder="0" left="0" top="staTitle1:0" bottom="0" right="0"/>
                  </Layout>
                </Layouts>
              </Div>
              <Div id="divDataRight" taborder="0" left="divSplitter:5" top="-3" bottom="0" right="0">
                <Layouts>
                  <Layout>
                    <Static id="staTitle2" taborder="1" text="발령내역" left="0" top="0" height="35" cssclass="sta_TITLE_Bg" width="150"/>
                    <Grid id="objGridSub" sub="true" taborder="0" left="0" top="staTitle2:0" bottom="0" right="0"/>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo) {
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	this.fnSetInit();
};

/************************************************************************
 * 버튼 설정 
 * 서브버튼 사용 처리. 공통 및 확장버튼 버튼관리화면에서 셋팅.
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
	//this.FormBtns.Select.set_enable(false);
};

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnCreateTarget = this.gfnFormButtonAdd("CreateTarget", "fnCreateTarget");    // 대상자 생성
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ctclYY_TUITION  = this.divSearch.form.ctclYY_TUITION;
	this.ccfCD_LEVEL     = this.divSearch.form.ccfCD_LEVEL;
	this.ccboNO_SEMESTER = this.divSearch.form.ccboNO_SEMESTER;
	this.ctclDT_BASE     = this.divSearch.form.ctclDT_BASE;	
	this.ccfCD_CORP      = this.divSearch.form.ccfCD_CORP;
	this.ccfCD_DEPT      = this.divSearch.form.ccfCD_DEPT;
	this.ccfID_SABUN     = this.divSearch.form.ccfID_SABUN;
	
	this.dxGrid       = this.divData.form.divDataLeft.form.objGrid;
	this.dxGridSub    = this.divData.form.divDataRight.form.objGridSub;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DA", "DAB_TUITION_TARGET");	
	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
	this.dxGrid.addEventHandler("onselectchanged", this.fnGrid_RowCellChanged, this);
	
	this.gfnGridInit(this.dxGridSub, this.dsListSub, "DA", "DAB_TUITION_TARGET_ORDER");
	
	//코드파인드
	this.ccfCD_LEVEL.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_DEPT.BeforeUserDataSetParam    = "fnBeforeUserDataSetParam";
	this.ccfCD_DEPT.AfterCDTextChanged        = "fnAfterCDTextChanged";
	this.ccfID_SABUN.BeforeUserDataSetParam   = "fnBeforeUserDataSetParam";
	this.ccfID_SABUN.AfterCDTextChanged       = "fnAfterCDTextChanged";
	
	this.dsSearch.addEventHandler("onvaluechanged", this.dsSearch_onvaluechanged, this);
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("YY_TUITION" , "string");
	this.dsSelect.addColumn("CD_LEVEL"   , "string");
	this.dsSelect.addColumn("NO_SEMESTER", "string");
	this.dsSelect.addColumn("DT_BASE"    , "string");
	this.dsSelect.addColumn("CD_CORP"    , "string");
	this.dsSelect.addColumn("CD_DEPT"    , "string");
	this.dsSelect.addColumn("ID_SABUN"   , "string");

	this.dsSave = new Dataset();
	this.dsSave.addColumn("TY_WRK"     , "string");
	this.dsSave.addColumn("CD_CORP"    , "string");
	this.dsSave.addColumn("YY_TUITION" , "string");
	this.dsSave.addColumn("CD_LEVEL"   , "string");
	this.dsSave.addColumn("NO_SEMESTER", "string");
	this.dsSave.addColumn("DT_BASE"    , "string");
	this.dsSave.addColumn("ID_PERSON"  , "int");
	this.dsSave.addColumn("ID_SABUN"   , "string");
	this.dsSave.addColumn("YN_TARGET"  , "string");
	this.dsSave.addColumn("DS_REMARK"  , "string");
	this.dsSave.addColumn("ID_USER"    , "string");
	
	this.dsSelectSub = new Dataset();
	this.dsSelectSub.addColumn("CD_CORP"   , "string");
	this.dsSelectSub.addColumn("ID_PERSON" , "string");
	this.dsSelectSub.addColumn("ID_SABUN"  , "string");

	this.dsCreateTarget = new Dataset();
	this.dsCreateTarget.addColumn("CD_CORP"    , "string");
	this.dsCreateTarget.addColumn("YY_TUITION" , "string");
	this.dsCreateTarget.addColumn("CD_LEVEL"   , "string");
	this.dsCreateTarget.addColumn("NO_SEMESTER", "string");
	this.dsCreateTarget.addColumn("DT_BASE"    , "string");
	this.dsCreateTarget.addColumn("ID_USER"    , "string");
};

/************************************************************************
 * 초기화 이벤트
 ************************************************************************/
this.fnSetInit = function () {
	this.dsSearch.set_enableevent(false);
	if (!this.gfnIsNull(this.getOwnerFrame().YY_TUITION)) {
		this.dsSearch.setColumn(0,"YY_TUITION", this.getOwnerFrame().YY_TUITION);
		this.dsSearch.setColumn(0,"CD_CORP"   , this.getOwnerFrame().CD_CORP);
		this.dsSearch.setColumn(0,"DS_CORP"   , this.getOwnerFrame().DS_CORP);
	} else {
		this.dsSearch.setColumn(0,"YY_TUITION", this.gfnGetDate().substr(0,4));
		this.dsSearch.setColumn(0,"CD_CORP"   , this.AuthClient.CD_CORP);
		this.dsSearch.setColumn(0,"DS_CORP"   , this.AuthClient.DS_CORP);
	}
	this.dsSearch.set_enableevent(true);
	
	if (this.FormInfo.GR_SEARCH == "9") {
		this.dsSearch.set_enableevent(false);
		this.dsSearch.setColumn(0,"ID_SABUN", this.AuthClient.ID_SABUN);
		this.dsSearch.setColumn(0,"DS_HNAME", this.AuthClient.DS_HNAME);
		this.dsSearch.set_enableevent(true);
		
		//부서를 사번에 맞게 셋팅 
		this.ccfID_SABUN.form.fnCodeFindLoad();
		
		//this.dsSearch.set_enableevent(true);
		this.ccfCD_CORP.form.fnFitToContents();
		this.ccfCD_DEPT.form.fnFitToContents();
		this.ccfCD_DEPT.form.set_readonly(true);
		this.ccfID_SABUN.form.fnFitToContents();
	}
	
	this.FormBtns.Select.click();
};
/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
    this.dsSelect.setColumn(0, "YY_TUITION" , this.dsSearch.getColumn(0, "YY_TUITION"));
	this.dsSelect.setColumn(0, "CD_LEVEL"   , this.dsSearch.getColumn(0, "CD_LEVEL"));
	this.dsSelect.setColumn(0, "NO_SEMESTER", this.dsSearch.getColumn(0, "NO_SEMESTER"));
	this.dsSelect.setColumn(0, "DT_BASE"    , this.dsSearch.getColumn(0, "DT_BASE"));
	this.dsSelect.setColumn(0, "CD_CORP"    , this.dsSearch.getColumn(0, "CD_CORP"));
	this.dsSelect.setColumn(0, "CD_DEPT"    , this.dsSearch.getColumn(0, "CD_DEPT"));
	this.dsSelect.setColumn(0, "ID_SABUN"   , this.dsSearch.getColumn(0, "ID_SABUN"));
	
	var strSvcId    = "select";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";

	this.gfnTransaction(strSvcId, 		// transaction을 구분하기 위한 svc id값
						strSvcType, 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData, 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData, 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 	    // 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
};

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	var nrow = this.gfnGridAdd(this.dxGrid); 
	this.dsList.setColumn(nrow, "YY_TUITION", this.dsSearch.getColumn(0, "YY_TUITION"));
	this.dsList.setColumn(nrow, "CD_CORP"   , this.dsSearch.getColumn(0, "CD_CORP"));
	this.dsList.setColumn(nrow, "DS_CORP"   , this.dsSearch.getColumn(0, "DS_CORP"));
};

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);	
};

/*
 *	저장 버튼
 */
this.fnSave = function() {
	// 그리드 필수항목 체크
	if (!this.gfnGridValidate(this.dxGrid)) return;

	this.dxGrid.updateToDataset();
	this.dsSave.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		
		switch(flag) {
		case "I":
		case "U":
		case "D":				
			var nrow = 0;
			if( flag == "D" ){
				nrow = this.dsSave.insertRow(0);
			} else {
				nrow = this.dsSave.addRow();
			}
			this.dsSave.setColumn(nrow, "TY_WRK"     , flag);
			this.dsSave.setColumn(nrow, "CD_CORP"    , this.dsList.getColumn(i, "CD_CORP"));
			this.dsSave.setColumn(nrow, "YY_TUITION" , this.dsList.getColumn(i, "YY_TUITION"));
			this.dsSave.setColumn(nrow, "CD_LEVEL"   , this.dsList.getColumn(i, "CD_LEVEL"));
			this.dsSave.setColumn(nrow, "NO_SEMESTER", this.dsList.getColumn(i, "NO_SEMESTER"));
			this.dsSave.setColumn(nrow, "DT_BASE"    , this.dsList.getColumn(i, "DT_BASE"));
			this.dsSave.setColumn(nrow, "ID_PERSON"  , this.dsList.getColumn(i, "ID_PERSON"));
			this.dsSave.setColumn(nrow, "ID_SABUN"   , this.dsList.getColumn(i, "ID_SABUN"));
			this.dsSave.setColumn(nrow, "YN_TARGET"  , this.dsList.getColumn(i, "YN_TARGET"));
			this.dsSave.setColumn(nrow, "DS_REMARK"  , this.dsList.getColumn(i, "DS_REMARK"));
			this.dsSave.setColumn(nrow, "ID_USER"    , this.AuthClient.ID_USER);				
			
			break;
		}
	}

	if (this.dsSave.rowcount == 0) return;

	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";

	this.gfnTransaction(strSvcId, 		// transaction을 구분하기 위한 svc id값
						strSvcType, 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData, 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData, 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
};

/*
 *	학자금 대상자 조회
 */
this.fnSelectSub = function() {
	this.dsListSub.clearData();
	
	this.gfnGridBeforeSelect(this.dxGridSub);
	
	this.dsSelectSub.clearData();
	this.dsSelectSub.addRow();
	this.dsSelectSub.setColumn(0, "CD_CORP"  , this.dsList.getColumn(this.dsList.rowposition, "CD_CORP"));
	this.dsSelectSub.setColumn(0, "ID_PERSON", this.dsList.getColumn(this.dsList.rowposition, "ID_PERSON"));
	this.dsSelectSub.setColumn(0, "ID_SABUN" , this.dsList.getColumn(this.dsList.rowposition, "ID_SABUN"));
	
	var strSvcId    = "detail";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "d_select=dsSelectSub";
	var outData     = "dsListSub=d_select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction(strSvcId , 		// transaction을 구분하기 위한 svc id값
						strSvcType, 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData, 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData, 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
}
/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "YY_TUITION"))) {
		validate = false;
		this.fnVaidateCallback = function() {
			this.ctclYY_TUITION.form.TextBox.setFocus();
		}
		this.gfnAlert("지급년도를 입력하세요.", "fnVaidateCallback");
	}
	
	if (validate && this.gfnIsNull(this.dsSearch.getColumn(0, "CD_CORP"))) {
		validate = false;
		this.fnVaidateCallback = function() {
			this.ccfCD_CORP.form.CDTextBox.setFocus();
		}
		this.gfnAlert("법인을 입력하세요.", "fnVaidateCallback");
	}
	return validate;
};

/*
 *	대상자생성 Validate
 */
this.fnCreateTargetValidate = function() {
	var validate = true;
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "YY_TUITION"))) {
		validate = false;
		this.fnVaidateCallback = function() {
			this.ctclYY_TUITION.form.TextBox.setFocus();
		}
		this.gfnAlert("지급년도를 입력하세요.", "fnVaidateCallback");
	}
	
	if (validate && this.gfnIsNull(this.dsSearch.getColumn(0, "CD_LEVEL"))) {
		validate = false;
		this.fnVaidateCallback = function() {
			this.ccfCD_LEVEL.form.TextBox.setFocus();
		}
		this.gfnAlert("학력을 입력하세요.", "fnVaidateCallback");
	}
	
	if (validate && this.gfnIsNull(this.dsSearch.getColumn(0, "NO_SEMESTER"))) {
		validate = false;
		this.fnVaidateCallback = function() {
			this.ccboNO_SEMESTER.setFocus();
		}
		this.gfnAlert("학기를 입력하세요.", "fnVaidateCallback");
	}
	
	if (validate && this.gfnIsNull(this.dsSearch.getColumn(0, "DT_BASE"))) {
		validate = false;
		this.fnVaidateCallback = function() {
			this.ctclDT_BASE.setFocus();
		}
		this.gfnAlert("기준일자를 입력하세요.", "fnVaidateCallback");
	}
	
	if (validate && this.gfnIsNull(this.dsSearch.getColumn(0, "CD_CORP"))) {
		validate = false;
		this.fnVaidateCallback = function() {
			this.ccfCD_CORP.form.CDTextBox.setFocus();
		}
		this.gfnAlert("법인을 입력하세요.", "fnVaidateCallback");
	}
	return validate;
};
/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg) {
	if (errorCode != 0) {
		this.gfnAlert(errorMsg);
		return false;
	}
	
	switch(svcID) {
	case "select":
		this.gfnGridAfterSelect(this.dxGrid);
		break;
	case "detail" :
		//this.gfnGridAfterSelect(this.dxGridSub);
		break;
	case "save":
	case "createTarget":
		this.FormBtns.Select.click();
		break;
	}
};

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
/*
 * 조회조건 코드파인드 호출전
 */
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	switch(id) {	
	case "ccfCD_LEVEL":
		dsUserParam.setColumn(nrow, "CD_PREFIX", "SA");
		dsUserParam.setColumn(nrow, "CD_CORP"  ,  this.dsSearch.getColumn(0, "CD_CORP"));
		break;
	case "ccfCD_DEPT":
		if(this.gfnIsNull(this.dsSearch.getColumn(0, "CD_CORP"))) {
			this.gfnAlert("법인을 입력하세요.");
			return false;
		}

		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH); // 프로시저에서 실제 사용 안함
		dsUserParam.setColumn(nrow, "CD_DEPT", this.dsSearch.getColumn(0,"CD_DEPT")); // 프로시저에서 실제 사용 안함
		dsUserParam.setColumn(nrow, "CD_CORP", this.dsSearch.getColumn(0,"CD_CORP"));
		dsUserParam.setColumn(nrow, "YN_CURRENT", "");	// 프로시저에서 실제 사용 안함
		break;
	case "ccfID_SABUN":
		dsUserParam.setColumn(nrow, "CD_CORP"  , this.dsSearch.getColumn(0, "CD_CORP"));
		dsUserParam.setColumn(nrow, "CD_DEPT"  , this.dsSearch.getColumn(0, "CD_DEPT"));
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "YN_CORP"  , "N");
		dsUserParam.setColumn(nrow, "TY_RETIRE", "");
		break;
	}
	
	return true;
};

/*
 * 조회조건 코드파인드 호출후
 */
this.fnAfterCDTextChanged = function(id,codeFindData) {
   	var arr = codeFindData;
	if (id == "ccfID_SABUN") {
		if (arr.length > 0) {
			this.dsSearch.setColumn(0,"CD_CORP" ,arr[0]["CD_CORP"]);
			this.dsSearch.setColumn(0,"DS_CORP" ,arr[0]["DS_CORP"]);
			this.dsSearch.setColumn(0,"CD_DEPT" ,arr[0]["CD_DEPT"]);
			this.dsSearch.setColumn(0,"DS_DEPT" ,arr[0]["DS_DEPT"]);
			this.dsSearch.setColumn(0,"ID_SABUN",arr[0]["ID_SABUN"]);
			this.dsSearch.setColumn(0,"DS_HNAME",arr[0]["DS_HNAME"]);			
		} 
	}
};
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
/*
 * 그리드 코드파인드 호출전
 */
this.fnGrid_BeforeUserDataSetParam = function(id, dsUserParam, nrow){
	trace('grid_코드파인드_식별id: ' + id); 
	switch(id) {	
	case "SA":
		dsUserParam.setColumn(nrow, "CD_PREFIX", id);
		dsUserParam.setColumn(nrow, "CD_CORP"  , this.dsSearch.getColumn(0, "CD_CORP"));		
		break;		

	case "DAX_CFBASEINFO_ALL":
		dsUserParam.setColumn(nrow, "CD_CORP"  , this.dsSearch.getColumn(0, "CD_CORP"));
		dsUserParam.setColumn(nrow, "CD_DEPT"  , this.dsSearch.getColumn(0, "CD_DEPT"));
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "YN_CORP"  , "N");
		dsUserParam.setColumn(nrow, "TY_RETIRE", "");
		break;
	}
	return true;
};

this.fnGrid_RowCellChanged = function(obj:nexacro.Grid,e:nexacro.GridSelectEventInfo) {
    if (e.row != e.oldrow) {
		this.FormBtns.SubSelect.click();
	}
};
/************************************************************************
 * 확장버튼 이벤트
 ************************************************************************/
/*
 * 대상자 생성
 */
this.fnCreateTarget = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if (!this.fnCreateTargetValidate()) return false;
	
	var msg = "기존에 생성된 대상자는 지워집니다.\n\n"
	msg += this.dsSearch.getColumn(0, "YY_TUITION") + "년도 "+ this.dsSearch.getColumn(0, "DS_LEVEL") + "("+ this.dsSearch.getColumn(0, "NO_SEMESTER") + "학기)\n"
    msg += "학자금 신청 대상자를 생성하시겠습니까?"
	this.gfnConfirm(msg, function (id, val) {
		if (val) {
			this.dsCreateTarget.clearData();
			var nrow = this.dsCreateTarget.addRow();
			this.dsCreateTarget.setColumn(nrow, "CD_CORP"    , this.dsSearch.getColumn(0, "CD_CORP"));
			this.dsCreateTarget.setColumn(nrow, "YY_TUITION" , this.dsSearch.getColumn(0, "YY_TUITION"));
			this.dsCreateTarget.setColumn(nrow, "CD_LEVEL"   , this.dsSearch.getColumn(0, "CD_LEVEL"));
			this.dsCreateTarget.setColumn(nrow, "NO_SEMESTER", this.dsSearch.getColumn(0, "NO_SEMESTER"));
			this.dsCreateTarget.setColumn(nrow, "DT_BASE"    , this.dsSearch.getColumn(0, "DT_BASE"));
			this.dsCreateTarget.setColumn(nrow, "ID_USER"    , this.AuthClient.ID_USER);
			
			if (this.dsCreateTarget.rowcount == 0) return;
			
			var strSvcId    = "createTarget";
			var strSvcType  = "save";
			var inProc		= "_dsProc";
			var inData      = "createTarget=dsCreateTarget";
			var outData     = "";
			var strArg      = "";
			var callBackFnc = "fnCallback";
			
			this.gfnTransaction(strSvcId, 		// transaction을 구분하기 위한 svc id값
								strSvcType, 	// transaction을 요청할 구분
								inProc,			// Procedure 정보 Dataset 이름
								inData, 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
								outData, 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
								strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
								callBackFnc); 	// 통신방법 정의 [생략가능]
		}
	});
};

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo) {
	if (e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);
		this.gfnGridClear(this.dxGridSub);
	}
};

this.divData_ondragmove = function(obj:nexacro.Div,e:nexacro.DragEventInfo) {
	if (e.userdata == "splitter") {
		this.divData.form.divSplitter.set_left(e.clientx);
		this.divData.form.resetScroll();
	}
};

this.divData_divSplitter_ondrag = function(obj:nexacro.Div,e:nexacro.DragEventInfo) {
	e.set_userdata("splitter");
	return true;
};
]]></Script>
    <Objects>
      <Dataset id="dsSearch">
        <ColumnInfo>
          <Column id="YY_TUITION" type="STRING" size="256"/>
          <Column id="CD_LEVEL" type="STRING" size="256"/>
          <Column id="DS_LEVEL" type="STRING" size="256"/>
          <Column id="NO_SEMESTER" type="STRING" size="256"/>
          <Column id="DT_BASE" type="STRING" size="256"/>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="DS_CORP" type="STRING" size="256"/>
          <Column id="CD_DEPT" type="STRING" size="256"/>
          <Column id="DS_DEPT" type="STRING" size="256"/>
          <Column id="ID_SABUN" type="STRING" size="256"/>
          <Column id="DS_HNAME" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="YY_TUITION"/>
            <Col id="CD_LEVEL"/>
            <Col id="NO_SEMESTER"/>
            <Col id="DT_BASE"/>
            <Col id="CD_CORP"/>
            <Col id="DS_CORP"/>
            <Col id="CD_DEPT"/>
            <Col id="DS_DEPT"/>
            <Col id="ID_SABUN"/>
            <Col id="DS_HNAME"/>
            <Col id="DS_LEVEL"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsList"/>
      <Dataset id="dsListSub"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DABPR_TUITION_TARGET_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DABPR_TUITION_TARGET_SAVE</Col>
          </Row>
          <Row>
            <Col id="TARGET">createTarget</Col>
            <Col id="SP">DABPR_TUITION_TARGET_CREATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">d_select</Col>
            <Col id="SP">DABPR_TUITION_ORDER_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ctclYY_TUITION.form.TextBox" propid="value" datasetid="dsSearch" columnid="YY_TUITION"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_LEVEL.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_LEVEL"/>
      <BindItem id="item2" compid="divSearch.form.ccfCD_LEVEL.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_LEVEL"/>
      <BindItem id="item3" compid="divSearch.form.ccboNO_SEMESTER" propid="value" datasetid="dsSearch" columnid="NO_SEMESTER"/>
      <BindItem id="item4" compid="divSearch.form.ctclDT_BASE" propid="value" datasetid="dsSearch" columnid="DT_BASE"/>
      <BindItem id="item5" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item6" compid="divSearch.form.ccfCD_CORP.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_CORP"/>
      <BindItem id="item7" compid="divSearch.form.ccfCD_DEPT.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_DEPT"/>
      <BindItem id="item8" compid="divSearch.form.ccfCD_DEPT.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_DEPT"/>
      <BindItem id="item9" compid="divSearch.form.ccfID_SABUN.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="ID_SABUN"/>
      <BindItem id="item10" compid="divSearch.form.ccfID_SABUN.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_HNAME"/>
    </Bind>
  </Form>
</FDL>
