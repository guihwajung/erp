<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="351" height="155" maxwidth="391" maxheight="230" titletext="급여임금지급조서" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divData" taborder="0" left="0" top="0" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <!-- 임금지급조서 -->
              <Static id="staTITLE" taborder="0" text="임금지급조서" left="0" top="-5" width="100%" height="30" cssclass="sta_TITLE_Bg" textAlign="left"/>
              <!-- 기준급여일 -->
              <Static id="stalDT_SALARY" taborder="3" text="기준급여일" left="0" top="staTITLE:5" width="90" height="30" cssclass="sta_WF_tablelabelE"/>
              <Static id="stalDT_SALARY_bg" taborder="6" left="stalDT_SALARY:-1" top="stalDT_SALARY:-30" height="30" cssclass="sta_WF_tablebg" width="262" text=""/>
              <Calendar id="ctclDT_SALARY" taborder="1" left="stalDT_SALARY:5" top="stalDT_SALARY:-25" width="100" height="20" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true"/>
              <!-- 법인 -->
              <Static id="staCD_CORP" taborder="4" text="법인" left="0" top="stalDT_SALARY:-1" width="90" height="30" cssclass="sta_WF_tablelabelE"/>
              <Static id="staCD_CORP_bg" taborder="5" left="staCD_CORP:-1" top="staCD_CORP:-30" height="30" cssclass="sta_WF_tablebg" width="262"/>
              <Div id="ccfCD_CORP" CDTextWidth="50" taborder="9" left="staCD_CORP:5" top="staCD_CORP:-25" width="250" height="20" url="cmm::cmmCodeFind.xfdl"/>
              <!-- 지급구분 -->
              <Static id="staTY_SALARY" taborder="7" text="지급구분" left="0" top="staCD_CORP:-1" width="90" height="30" cssclass="sta_WF_tablelabelE"/>
              <Static id="staTY_SALARY_bg" taborder="8" left="staTY_SALARY:-1" top="staCD_CORP_bg:-1" height="30" cssclass="sta_WF_tablebg" width="262"/>
              <Combo id="cboTY_SALARY" taborder="10" left="staTY_SALARY:5" top="staTY_SALARY:-25" width="70" height="20" innerdataset="dsTY_SALARY" datacolumn="VALUE" codecolumn="CODE" value="S" index="0" onitemchanged="fnSearchInit"/>
              <Combo id="cboSN_SALARY" taborder="12" left="cboTY_SALARY:5" top="staTY_SALARY:-25" width="50" height="20" innerdataset="dsSN_SALARY" datacolumn="VALUE" codecolumn="CODE" value="1" index="0" onitemchanged="fnSearchInit"/>
              <!-- 버튼 -->
              <Div id="divBtns" left="120" top="staTY_SALARY:10" width="130" height="27" taborder="7">
                <Layouts>
                  <Layout>
                    <Button id="btnSave" taborder="1" text="확인" left="0" top="0" width="60" height="27" onclick="divData_btnSave_onclick"/>
                    <Button id="btnCancel" taborder="2" text="취소" left="btnSave:10" top="0" width="60" height="27" onclick="divData_btnCancel_onclick"/>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	//this.fnSetButton();
	//this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();	
	this.fnSetParameterForRpt();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {

};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_CORP = this.divData.form.ccfCD_CORP;
	this.ctclDT_SALARY = this.divData.form.ctclDT_SALARY;
	this.cboTY_SALARY = this.divData.form.cboTY_SALARY;
	this.cboSN_SALARY = this.divData.form.cboSN_SALARY;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.ccfCD_CORP.CodeFindName = "DAX_CFCORP";
	
	this.ccfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";
	
	this.ctclDT_SALARY.set_value(this.gfnGetFirstDate(this.gfnGetDate()));
	
	if (this.gfnIsNull(this.objApp.gvUserInfo.CD_CORP) || nexacro.toNumber(this.FormInfo.GR_SEARCH) > 9) {
		this.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP); 
		this.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);	
	} else {
		this.ccfCD_CORP.form.DSTextBox.set_value(this.objApp.gvUserInfo.DS_CORP); 
		this.ccfCD_CORP.form.CDTextBox.set_value(this.objApp.gvUserInfo.CD_CORP);	
	}
		
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	
}

this.fnSetParameterForRpt = function() {
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.text)) {
		this.gfnAlert("법인이 입력되지 않았습니다.");
		this.ccfCD_CORP.form.CDTextBox.setFocus();
		return false;
	}
	
	if (this.gfnIsNull(this.ctclDT_SALARY.value)) {
		this.gfnAlert("적용월일이 입력되지 않았습니다.");
		this.ctclDT_SALARY.setFocus();
		return false;
	}
	
	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		if (this.dsReport1.rowcount == 0) {
			this.gfnAlert("조회된 데이타가 없습니다.");
			return;
		} else {
			this.openReport("P");
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
 
this.fnAfterCDTextChanged = function(id, codeFindData) {
	this.fnSearchInit();
}
 
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {

};

// 저장 버튼 클릭
this.divData_btnSave_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.openReport("S");
// 	if (this.fnSelectValidate()){
// 		this.openReport();
// 	} else {
// 		return false;
// 	}
}

this.openReport = function(callType) {
	if (!this.fnSelectValidate()) return false;
	
	this.dsReport = new Dataset();
	this.dsReport.addColumn("DT_SALARY", 	"string");	
	this.dsReport.addColumn("TY_SALARY", 	"string");	
	this.dsReport.addColumn("SN_SALARY", 	"string");	
	this.dsReport.addColumn("CD_CORP", 	"string");	
	
	this.dsReport.clearData();
	var nrow = this.dsReport.addRow();
	this.dsReport.setColumn(0, "DT_SALARY", this.ctclDT_SALARY.value);
	this.dsReport.setColumn(0, "TY_SALARY", this.cboTY_SALARY.value);
	this.dsReport.setColumn(0, "SN_SALARY", this.cboSN_SALARY.value);	
	this.dsReport.setColumn(0, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.text);

	//trace("dsReport param >>>>"+this.dsReport.saveXML());	
	if (callType == "S") {
		var strSvcId    = "select";
		var strSvcType  = "grid";
		var inProc      = "_dsProc";
		var inData      = "report1=dsReport report4=dsReport";
		var outData     = "dsReport1=report10 dsReport4=report40";
		var strArg      = "";
		var callBackFnc = "fnCallback";
		
		this.gfnTransaction(strSvcId,		// transaction을 구분하기 위한 svc id값
							strSvcType, 	// transaction을 요청할 구분
							inProc,			// Procedure 정보 Dataset 이름
							inData, 		// 입력값으로 보낼 dataset id, a=b형태로 실제이름과 입력이름을 매칭
							outData, 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
							strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
							callBackFnc);	// 통신방법 정의 [생략가능]
	} else {			
		var inProc		= "_dsProc";
		//var inParam 	= "params=dsReportParam";	// 조회SP이외 사용할 정보
		var inParam 	= "";						// 필요없는 경우 생략
		//var inData      = "report1=dsReport report2=dsReport report3=dsReport";
		var inData      = "report1=dsReport report4=dsReport";
		var reportpath  = "/da/dau/DAU_SALARYDEPTMAIN_DLG.ozr";
	
		gfnOpenReport(this, reportpath, inProc, inParam, inData);		
	}
	
}



// 취소 버튼 클릭
this.divData_btnCancel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	// this.close()가 작동하지 않았고, 
	// 부모의 callback 함수로 데이터를 넘겨주기 위해 작성되었습니다.
	this.getParentContext().close(false);
};]]></Script>
    <Objects>
      <Dataset id="dsTY_SALARY">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">S</Col>
            <Col id="VALUE">급여</Col>
          </Row>
          <!--
          <Row>
            <Col id="CODE">B</Col>
            <Col id="VALUE">상여</Col>
          </Row>
-->
          <Row>
            <Col id="CODE">x</Col>
            <Col id="VALUE">성과급</Col>
          </Row>
          <Row>
            <Col id="CODE">R</Col>
            <Col id="VALUE">퇴직급여</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="SP">DAUPR_SALARYMAIN_SELECT</Col>
            <Col id="TARGET">report1</Col>
          </Row>
          <Row>
            <Col id="TARGET">report2</Col>
            <Col id="SP">DAUPR_SALARYMAIN_INCOME_SELECT</Col>
          </Row>
          <Row>
            <Col id="SP">DAUPR_SALARYMAIN_SUBST_SELECT</Col>
            <Col id="TARGET">report3</Col>
          </Row>
          <Row>
            <Col id="TARGET">report4</Col>
            <Col id="SP">DAUPR_SALARYMAIN_INCOME_SUBST_PRINT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSN_SALARY">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">1</Col>
            <Col id="VALUE">1</Col>
          </Row>
          <Row>
            <Col id="CODE">2</Col>
            <Col id="VALUE">2</Col>
          </Row>
          <Row>
            <Col id="CODE">3</Col>
            <Col id="VALUE">3</Col>
          </Row>
          <Row>
            <Col id="CODE">4</Col>
            <Col id="VALUE">4</Col>
          </Row>
          <Row>
            <Col id="CODE">5</Col>
            <Col id="VALUE">5</Col>
          </Row>
          <Row>
            <Col id="CODE">6</Col>
            <Col id="VALUE">6</Col>
          </Row>
          <Row>
            <Col id="CODE">7</Col>
            <Col id="VALUE">7</Col>
          </Row>
          <Row>
            <Col id="CODE">8</Col>
            <Col id="VALUE">8</Col>
          </Row>
          <Row>
            <Col id="CODE">9</Col>
            <Col id="VALUE">9</Col>
          </Row>
          <Row>
            <Col id="CODE">10</Col>
            <Col id="VALUE">10</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsReport1"/>
      <Dataset id="dsReport4"/>
    </Objects>
  </Form>
</FDL>
