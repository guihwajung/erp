<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="351" height="334" maxwidth="391" maxheight="409" titletext="급여명세서" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divTop" taborder="0" left="0" top="0" bottom="0" right="0" cssclass="div_DATA_Bg" height="68">
          <Layouts>
            <Layout>
              <!-- 급여지급현황 -->
              <Static id="staTITLE" taborder="0" text="급여지급현황" left="0" top="0" width="100%" height="30" cssclass="sta_TITLE_Bg" textAlign="left"/>
              <!-- 기준연도 -->
              <Static id="stalYY_BASE" taborder="3" text="기준연도" left="0" top="staTITLE:5" width="90" height="30" cssclass="sta_WF_tablelabelE"/>
              <Static id="stalYY_BASE_bg" taborder="6" left="stalYY_BASE:-1" top="stalYY_BASE:-30" height="30" cssclass="sta_WF_tablebg" width="262"/>
              <Div id="ctclYY_BASE" taborder="0" left="stalYY_BASE:5" top="stalYY_BASE:-25" width="60" height="20" url="cmm::cmmCalYY.xfdl"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divTop:10" bottom="0" right="0" cssclass="div_DATA_Bg" height="150">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divBottom" taborder="0" left="0" top="divData:10" bottom="0" right="0" cssclass="div_DATA_Bg" text="">
          <Layouts>
            <Layout>
              <!-- 법인 -->
              <!-- 성명 -->
              <!-- 버튼 -->
              <Static id="staCD_CORP" taborder="4" text="법인" left="0" top="0" width="90" height="30" cssclass="sta_WF_tablelabelE"/>
              <Static id="staCD_CORP_bg" taborder="5" left="staCD_CORP:-1" top="staCD_CORP:-30" height="30" cssclass="sta_WF_tablebg" text="" width="262"/>
              <Div id="ccfCD_CORP" CDTextWidth="80" taborder="9" left="staCD_CORP:5" top="staCD_CORP:-25" width="250" height="20" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staID_SABUN" taborder="7" text="성명" left="0" top="staCD_CORP:-1" width="90" height="30" cssclass="sta_WF_tablelabelE"/>
              <Static id="staID_SABUN_bg" taborder="8" left="staID_SABUN:-1" top="staID_SABUN:-30" height="30" cssclass="sta_WF_tablebg" width="262"/>
              <Div id="ccfID_SABUN" CDTextWidth="80" taborder="11" left="staID_SABUN:5" top="staCD_CORP:4" width="250" height="20" url="cmm::cmmCodeFind.xfdl"/>
              <Div id="divBtns" left="120" top="staID_SABUN_bg:10" width="130" height="27" taborder="2">
                <Layouts>
                  <Layout>
                    <Button id="btnSave" taborder="1" text="확인" left="0" top="staID_SABUN:0" width="60" height="27" onclick="divData_btnSave_onclick"/>
                    <Button id="btnCancel" taborder="2" text="취소" left="btnSave:10" top="staID_SABUN:0" width="60" height="27" onclick="divData_btnCancel_onclick"/>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();	

	this.FormBtns.Select.click();
};


/************************************************************************
 * 변수 선언 
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_CORP = this.divBottom.form.ccfCD_CORP;
	this.ccfID_SABUN = this.divBottom.form.ccfID_SABUN;
	this.ctclYY_BASE = this.divTop.form.ctclYY_BASE;
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.ccfCD_CORP.CodeFindName = "DAX_CFCORP";
	this.ccfID_SABUN.CodeFindName = "DAX_CFBASEINFOCORP";


	
 	var dt = new Date();
	this.ctclYY_BASE.form.TextBox.set_value(dt.getFullYear());	
	
	if (nexacro.toNumber(this.FormInfo.GR_SEARCH) == 4) {
		this.ccfID_SABUN.form.CDTextBox.set_value(this.AuthClient.ID_USER); 
		this.ccfID_SABUN.form.DSTextBox.set_value(this.AuthClient.DS_HNAME); 
		this.ccfID_SABUN.form.set_readonly(true);
	}
	
	if (this.gfnIsNull(this.AuthClient.CD_CORP) || nexacro.toNumber(this.FormInfo.GR_SEARCH) > 9) {
		
		this.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);	
		this.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP); 		
		this.ccfID_SABUN.form.CDTextBox.set_value(this.AuthClient.ID_USER); 
		this.ccfID_SABUN.form.DSTextBox.set_value(this.AuthClient.DS_HNAME); 
	} else {  
		this.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP); 
		this.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);	
		this.ccfID_SABUN.form.CDTextBox.set_value(this.AuthClient.ID_USER); 
		this.ccfID_SABUN.form.DSTextBox.set_value(this.AuthClient.DS_HNAME); 
	}
	
	if (nexacro.toNumber(this.FormInfo.GR_SEARCH) == 9) {
		this.ccfID_SABUN.form.CDTextBox.set_value(this.AuthClient.ID_USER); 
		this.ccfID_SABUN.form.DSTextBox.set_value(this.AuthClient.DS_HNAME); 
		this.ccfCD_CORP.form.set_readonly(true);
		this.ccfID_SABUN.form.set_readonly(true); 
	}
	

	/*******************************************************************/
	this.ccfID_SABUN.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
		
	this.ccfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.ccfID_SABUN.AfterCDTextChanged = "fnAfterCDTextChanged";

	this.gfnGridInit(this.dxGrid, this.dsList, "DA", "DAU_SALARYPAYLIST_DLG");
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("YY_BASE", "string");
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("ID_SABUN", "string");
	this.dsSelect.addColumn("ID_USER", "string");
	
	this.dsReport = new Dataset();
	this.dsReport.addColumn("ID_SABUN", 	"string");	
	this.dsReport.addColumn("YM_SALARY", 	"string");	
	this.dsReport.addColumn("TY_SALARY", 	"string");	
	this.dsReport.addColumn("SN_SALARY", 	"string");	
	this.dsReport.addColumn("CD_CORP", 		"string");		
	this.dsReport.addColumn("TY_GUBUN", 	"string");
	
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "YY_BASE", this.dsSearch.getColumn(0, "YY_BASE"));	
	this.dsSelect.setColumn(0, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);	
	this.dsSelect.setColumn(0, "ID_SABUN", this.ccfID_SABUN.form.CDTextBox.value);	
	this.dsSelect.setColumn(0, "ID_USER", this.AuthClient.ID_USER);

//trace("dsSelect >>>"+this.dsSelect.saveXML());	

	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {

	if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
		this.gfnAlert("법인이 입력되지 않았습니다.");
		this.ccfCD_CORP.form.CDTextBox.setFocus();
		return false;
	}
	
	if (this.gfnIsNull(this.ctclYY_BASE.form.TextBox.value)) {
		this.gfnAlert("년도가 입력되지 않았습니다.");
		this.ctclYY_BASE.setFocus();
		return false;
	}
	
	if (this.gfnIsNull(this.ccfID_SABUN.form.CDTextBox.value)) {
		this.gfnAlert("성명이 입력되지 않았습니다.");
		this.ccfID_SABUN.setFocus();
		return false;
	}
	
	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		if (this.dsList.rowcount == 0) {
			this.gfnAlert("자료가 존재하지 않습니다.");
		} else {
			this.gfnGridAfterSelect(this.dxGrid);	
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
 this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if (id == "ccfID_SABUN") {
		if (!this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
			dsUserParam.setColumn(nrow, "GR_SEARCH", "");	
			dsUserParam.setColumn(nrow, "CD_DEPT", "");	
			dsUserParam.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);	
		}else{
			this.gfnAlert("먼저 법인을 선택해주세요.");
			return false;
		}
	}
	
	return true;

};
 
this.fnAfterCDTextChanged = function(id, codeFindData) {
	this.fnSearchInit();
}
 
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
 
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {
	//trace("날짜:"+this.ctclYY_BASE.form.TextBox.value);
	this.fnSelect();
};

// 저장 버튼 클릭
this.divData_btnSave_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if (!this.fnSelectValidate()) return false;
	
	if (this.dsList.rowcount > 0) {
		this.fnReport();
	} else {
		this.gfnAlert("급여자료가 존재하지 않아 레포트를 출력할 수 없습니다.");
		return false; 
	}
}

this.fnReport = function() {
	
	this.dsReport.clearData();
	
	var nrow = this.dsReport.addRow();
	
	this.dsReport.setColumn(0, "ID_SABUN", this.ccfID_SABUN.form.CDTextBox.value);
	this.dsReport.setColumn(0, "YM_SALARY", this.dsList.getColumn(this.dsList.rowposition, "YM_SALARY").replace("-",""));
	this.dsReport.setColumn(0, "TY_SALARY", this.dsList.getColumn(this.dsList.rowposition, "TY_SALARY"));
	this.dsReport.setColumn(0, "SN_SALARY", this.dsList.getColumn(this.dsList.rowposition, "SN_SALARY"));	
	this.dsReport.setColumn(0, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
	this.dsReport.setColumn(0, "TY_GUBUN", 	"D"); //D:화면 / E:E-MAIL 
	
	
// 	var strSvcId    = "select";
// 	var strSvcType  = "grid";
// 	var inProc		= "_dsProc";
// 	var inData      = "report1=dsReport report2=dsReport";
// 	var outData     = "dsHead=report10 dsDetail=report20";
// 	var strArg      = "";
// 	var callBackFnc = "fnCallback";
// 	
// 	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
// 						strSvcType , 	// trabsaction을 요청할 구분
// 						inProc,			// Procedure 정보 Dataset 이름
// 						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
// 						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
// 						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
// 						callBackFnc); // 통신방법 정의 [생략가능]	
	

	var inProc		= "_dsProc";
	//var inParam 	= "params=dsReportParam";	// 조회SP이외 사용할 정보
	var inParam 	= "";						// 필요없는 경우 생략
	var inData      = "report1=dsReport report2=dsReport report3=dsReport";
	//var reportpath  = "/da/dau/DAU_SALARYPAYLIST_DLG.ozr";
	var reportpath  = "/da/dau/DAU_SALARYPAYLIST_DLG_CBC.ozr";
	
	gfnOpenReport(this, reportpath, inProc, inParam, inData);		
	
}

// 취소 버튼 클릭
this.divData_btnCancel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	// this.close()가 작동하지 않았고, 
	// 부모의 callback 함수로 데이터를 넘겨주기 위해 작성되었습니다.
	this.getParentContext().close(false);
};

this.dsSearch_oncolumnchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.columnid == "YY_BASE"){	
		if(e.oldvalue != e.newvalue){	
			// 기준년도 변경시 자동조회가 안되서 추가함 
			if( !this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.text) && !this.gfnIsNull(this.ccfID_SABUN.form.CDTextBox.value) ){
				this.dsSearch.setColumn(0, "YY_BASE",e.newvalue)
				this.fnSelect();
			}
		}	
	}	
};
]]></Script>
    <Objects>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DAUPR_SALARYPAYLIST_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">report1</Col>
            <Col id="SP">DAUPR_SALARYPAYLIST_REPORT</Col>
          </Row>
          <Row>
            <Col id="TARGET">report2</Col>
            <Col id="SP">DAUPR_SALARYPAYLIST_INCOME_SUBST_PRINT</Col>
          </Row>
          <Row>
            <Col id="TARGET">report3</Col>
            <Col id="SP">DAUPR_SALARYPAYLIST_CALC_PRINT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsList"/>
      <Dataset id="dsSearch" oncolumnchanged="dsSearch_oncolumnchanged">
        <ColumnInfo>
          <Column id="YY_BASE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsHead"/>
      <Dataset id="dsDetail"/>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divTop.form.ctclYY_BASE.form.TextBox" propid="value" datasetid="dsSearch" columnid="YY_BASE"/>
    </Bind>
  </Form>
</FDL>
