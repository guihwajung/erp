<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="751" height="924" maxwidth="791" maxheight="960" titletext="품의서" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divTop" taborder="0" left="0" top="0" bottom="0" right="0" cssclass="div_DATA_Bg" height="98" text="">
          <Layouts>
            <Layout>
              <!-- 인원 현황 -->
              <Static id="staTITLE" taborder="0" text="인원 현황" left="0" top="0" width="100%" height="25" cssclass="sta_TITLE_Bg" textAlign="left"/>
              <Static id="staAprv" taborder="3" text="결재상태 : 상신 전" right="10" top="0" width="135" height="25" cssclass="sta_TITLE_Bg" textAlign="left"/>
              <Button id="btnAprv" taborder="1" text="품의서상신" right="10" top="staAprv:5" width="120" height="27" cssclass="btn_WF_function" onclick="divData_btnAprv_onclick"/>
              <Button id="btnDocQ" taborder="2" text="결재문서조회" right="10" top="btnAprv:5" width="120" height="27" onclick="divData_btnDocQ_onclick"/>
              <!-- 당월 -->
              <Static id="stalDS_CNT_NOW_bg" taborder="1" left="0" top="staTITLE:5" width="120" height="27" cssclass="sta_WF_tablelabelC"/>
              <Edit id="edtDS_CNT_NOW" taborder="1" left="0" top="staTITLE:5" width="120" height="27" textAlign="center" readonly="true"/>
              <Static id="stalDS_CNT_PRE_bg" taborder="2" left="edtDS_CNT_NOW:-1" top="staTITLE:5" width="120" height="27" cssclass="sta_WF_tablelabelC"/>
              <Edit id="edtDS_CNT_PRE" taborder="2" left="edtDS_CNT_NOW:-1" top="staTITLE:5" width="120" height="27" textAlign="center" readonly="true"/>
              <Static id="stalDS_CNT_INCDEC" taborder="3" text="증감" left="stalDS_CNT_PRE_bg:-1" top="staTITLE:5" width="120" height="27" cssclass="sta_WF_tablelabelC"/>
              <Static id="stalRM_BIGO" taborder="4" text="비고" left="stalDS_CNT_INCDEC:-1" top="staTITLE:5" width="220" height="27" cssclass="sta_WF_tablelabelC"/>
              <Static id="stalQN_CNT_NOW_bg" taborder="5" left="0" top="stalDS_CNT_NOW_bg:-1" width="120" height="27" cssclass="sta_WF_tablebg"/>
              <Edit id="edtQN_CNT_NOW" taborder="6" left="5" top="stalDS_CNT_NOW_bg:-1" width="120" height="27" textAlign="center" readonly="true"/>
              <Static id="stalQN_CNT_PRE_bg" taborder="5" left="stalQN_CNT_NOW_bg:-1" top="stalDS_CNT_PRE_bg:-1" width="120" height="27" cssclass="sta_WF_tablebg"/>
              <Edit id="edtQN_CNT_PRE" taborder="6" left="stalQN_CNT_NOW_bg:5" top="stalDS_CNT_PRE_bg:-1" width="120" height="27" textAlign="center" readonly="true"/>
              <Static id="stalQN_CNT_INCDEC_bg" taborder="5" left="stalQN_CNT_PRE_bg:-1" top="stalDS_CNT_INCDEC:-1" width="120" height="27" cssclass="sta_WF_tablebg"/>
              <Edit id="edtQN_CNT_INCDEC" taborder="6" left="stalQN_CNT_PRE_bg:10" top="stalDS_CNT_INCDEC:-1" width="110" height="27" textAlign="center" readonly="true"/>
              <Static id="stalRM_BIGO_bg" taborder="5" left="stalQN_CNT_INCDEC_bg:-1" top="stalRM_BIGO:-1" width="220" height="27" cssclass="sta_WF_tablebg"/>
              <Edit id="edtRM_BIGO" taborder="6" left="stalQN_CNT_INCDEC_bg:2" top="stalRM_BIGO:2" width="214" height="20"/>
            </Layout>
          </Layouts>
        </Div>
        <!-- 급여 내역 -->
        <Static id="staTITLE2" taborder="0" text="급여 내역" left="0" top="divTop:0" width="50%" height="25" cssclass="sta_TITLE_Bg" textAlign="left"/>
        <Static id="staTITLE3" taborder="0" text="[단위 : 원]" right="0" top="divTop:0" width="50%" height="25" font="normal 8.5pt/normal &quot;Malgun Gothic&quot;" cssclass="sta_WF_SchLabel" textAlign="right"/>
        <Div id="divData" taborder="0" left="0" top="divTop:25" bottom="0" right="0" cssclass="div_DATA_Bg" height="725">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divBottom" taborder="0" left="0" top="divData:10" bottom="0" right="0" cssclass="div_DATA_Bg" text="" height="25">
          <Layouts>
            <Layout>
              <!-- 법인 -->
              <Div id="ctclYM_SALARY" taborder="1" left="0" top="0" width="80" height="24.0" url="cmm::cmmCalMM.xfdl" onchanged="fnSearchInit" visible="false"/>
              <Combo id="cboTY_SALARY" taborder="3" left="0" top="0" width="70" height="24.0" innerdataset="dsTY_SALARY" datacolumn="DS_CODE" codecolumn="CD_CODE" index="0" value="S" onitemchanged="fnSearchInit" readonly="false" visible="false"/>
              <Combo id="cboSN_SALARY" taborder="4" left="0" top="0" width="40" height="24.0" innerdataset="innerdataset" datacolumn="datacolumn" codecolumn="codecolumn" index="0" value="1" onitemchanged="fnSearchInit" text="1" readonly="false" visible="false">
                <Dataset id="innerdataset">
                  <ColumnInfo>
                    <Column id="codecolumn" size="256"/>
                    <Column id="datacolumn" size="256"/>
                  </ColumnInfo>
                  <Rows>
                    <Row>
                      <Col id="codecolumn">1</Col>
                      <Col id="datacolumn">1</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">2</Col>
                      <Col id="datacolumn">2</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">3</Col>
                      <Col id="datacolumn">3</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">4</Col>
                      <Col id="datacolumn">4</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">5</Col>
                      <Col id="datacolumn">5</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">6</Col>
                      <Col id="datacolumn">6</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">7</Col>
                      <Col id="datacolumn">7</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">8</Col>
                      <Col id="datacolumn">8</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">9</Col>
                      <Col id="datacolumn">9</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">10</Col>
                      <Col id="datacolumn">10</Col>
                    </Row>
                  </Rows>
                </Dataset>
              </Combo>
              <Div id="ccfCD_CORP" CDTextWidth="50" taborder="6" left="0" top="0" width="200" height="24.0" url="cmm::cmmCodeFind.xfdl" CodeFindName="DAX_CFCORP2" BeforeUserDataSetParam="fnBeforeUserDataSetParam" AfterCDTextChanged="fnAfterCDTextChanged" visible="false"/>
              <Div id="ccfID_SABUN" CDTextWidth="70" taborder="10" left="0" top="0" width="200" height="24.0" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DAX_CFBASEINFO" BeforeUserDataSetParam="fnBeforeUserDataSetParam" AfterCDTextChanged="fnAfterCDTextChanged" visible="false"/>
              <!-- 성명 -->
              <!-- 버튼 -->
              <Div id="divBtns" left="0" top="0" width="100%" height="25" taborder="2" text="">
                <Layouts>
                  <Layout>
                    <Button id="btnUpload" taborder="1" text="첨부파일" left="10" top="0" width="100" height="25" onclick="divData_btnUpload_onclick"/>
                    <Button id="btnSave" taborder="2" text="저장" left="300" top="0" width="60" height="25" cssclass="btn_WF_function" onclick="divData_btnSave_onclick"/>
                    <!--<Button id="btnAprv" taborder="1" text="품의서상신" left="btnSave:10" top="0" width="120" height="27" onclick="divData_btnAprv_onclick"/>-->
                    <Button id="btnCancel" taborder="3" text="닫기" left="btnSave:10" top="0" width="60" height="25" onclick="divData_btnCancel_onclick"/>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();	
	
	this.dsSearch.setColumn(0, "YM_SALARY", this.getOwnerFrame().YM_SALARY);
	this.dsSearch.setColumn(0, "TY_SALARY", this.getOwnerFrame().TY_SALARY);
	this.dsSearch.setColumn(0, "SN_SALARY", this.getOwnerFrame().SN_SALARY);
	this.dsSearch.setColumn(0, "CD_CORP", this.getOwnerFrame().CD_CORP);
	this.dsSearch.setColumn(0, "ID_SABUN", this.getOwnerFrame().ID_SABUN);		

	this.FormBtns.Select.click();
};
/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
	// this.FormBtns.Add.set_enable(false);
	// this.FormBtns.Del.set_enable(false);
	this.FormBtns.Reset.set_enable(true);
};
/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
// 	this.btnAprv     = this.gfnFormButtonAdd("btnAprv", "divData_btnAprv_onclick");			// 결재상신 버튼	
// 	this.btnDocQ     = this.gfnFormButtonAdd("btnAprv", "divData_btnDocQ_onclick");			// 결재문서조회
// 	this.btnSave     = this.gfnFormButtonAdd("btnSave", "divData_btnSave_onclick");			// 저장 버튼	
};

this.fnUpdateStatusExtendButton = function() {	
	this.divTop.form.btnAprv.set_enable(false);
	this.divTop.form.btnDocQ.set_enable(false); 
	this.divBottom.form.divBtns.form.btnSave.set_enable(false);
	
	var ST_APRV    = this.dsDetail.getColumn(0, "ST_APRV");
	var DS_APRV    = this.dsDetail.getColumn(0, "DS_APRV");
	var AprvCnt    = this.dsDetail.getColumn(0, "BTN_APRV");
	var DocQCnt    = this.dsDetail.getColumn(0, "BTN_DOC_Q");
	
	this.divTop.form.btnAprv.set_enable(AprvCnt == "Y");	// 결재상신
	this.divTop.form.btnDocQ.set_enable(DocQCnt == "Y");	// 결재문서조회
	this.divBottom.form.divBtns.form.btnSave.set_enable(AprvCnt == "Y");	// 저장 버튼
	
	this.divTop.form.staAprv.set_text(DS_APRV);
	this.divTop.form.edtRM_BIGO.set_enable(AprvCnt == "Y")
}

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	// 그리드영역
	this.dxGrid = this.divData.form.objGrid;
	
	this.ccfCD_CORP = this.divBottom.form.ccfCD_CORP;
	this.ctclYM_SALARY = this.divBottom.form.ctclYM_SALARY;
	this.cboTY_SALARY = this.divBottom.form.cboTY_SALARY;
	this.cboSN_SALARY = this.divBottom.form.cboSN_SALARY;
	this.ccfID_SABUN = this.divBottom.form.ccfID_SABUN;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.ccfCD_CORP.CodeFindName = "DAX_CFCORP";
	this.ccfID_SABUN.CodeFindName = "DAX_CFBASEINFOCORP";

	/*******************************************************************/
	this.ccfID_SABUN.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";	

	this.gfnGridInit(this.dxGrid, this.dsList, "DA", "DAU_SALARYAPRV_DLG");	//"");
	this.dxGrid.EnterCell 				= "fnGrid_EnterCell";				// 셀 수정가능 여부
	
	this.dxGrid.set_enableredraw(false);	
	this.gfnGridColumnColor(this.dxGrid, "CD_GUBUN", "BACK_Fixed", "CD_CODE == 'S'");
	this.gfnGridColumnColor(this.dxGrid, "SN_PRINT", "BACK_Fixed", "CD_CODE == 'S'");
 	this.gfnGridColumnColor(this.dxGrid, "CD_CODE", "BACK_Fixed", "CD_CODE == 'S'");
 	this.gfnGridColumnColor(this.dxGrid, "DS_ALLOW", "BACK_Fixed", "CD_CODE == 'S'");
 	this.gfnGridColumnColor(this.dxGrid, "AM_NOW", "BACK_Fixed", "CD_CODE == 'S'");
 	this.gfnGridColumnColor(this.dxGrid, "AM_PRE", "BACK_Fixed", "CD_CODE == 'S'");
 	//this.gfnGridColumnColor(this.dxGrid, "AM_CHA", "BACK_GangJo", "CD_CODE == 'S'");
	this.gfnGridColumnColor(this.dxGrid, "AM_CHA", "BACK_Fixed,Red", "CD_CODE == 'S' && AM_CHA < 0");
	this.gfnGridColumnColor(this.dxGrid, "AM_CHA", "BACK_Fixed", "CD_CODE == 'S' && AM_CHA >= 0");
 	this.gfnGridColumnColor(this.dxGrid, "DS_REMARK", "BACK_Fixed", "CD_CODE == 'S'");
	
	this.gfnGridColumnColor(this.dxGrid, "CD_GUBUN", "BACK_Title", "CD_GUBUN == '7'");
	this.gfnGridColumnColor(this.dxGrid, "SN_PRINT", "BACK_Title", "CD_GUBUN == '7'");
	this.gfnGridColumnColor(this.dxGrid, "CD_CODE", "BACK_Title", "CD_GUBUN == '7'");
	this.gfnGridColumnColor(this.dxGrid, "DS_ALLOW", "BACK_Title", "CD_GUBUN == '7'");
 	this.gfnGridColumnColor(this.dxGrid, "AM_NOW", "BACK_Title", "CD_GUBUN == '7'");
 	this.gfnGridColumnColor(this.dxGrid, "AM_PRE", "BACK_Title", "CD_GUBUN == '7'");
 	//this.gfnGridColumnColor(this.dxGrid, "AM_CHA", "BACK_ChongKe", "CD_GUBUN == '7'");
	this.gfnGridColumnColor(this.dxGrid, "AM_CHA", "BACK_Title,Red", "CD_GUBUN == '7' && AM_CHA < 0");
 	this.gfnGridColumnColor(this.dxGrid, "DS_REMARK", "BACK_Title", "CD_GUBUN == '7'");
	
	this.gfnGridColumnColor(this.dxGrid, "DS_ALLOW", "BACK_GangJo", "CD_GUBUN == '3' || CD_GUBUN == '4'");	//BACK_SoKe
	this.gfnGridColumnColor(this.dxGrid, "DS_ALLOW", "BACK_Line", "CD_CODE != 'S' || CD_GUBUN != '7' || CD_GUBUN != '3' || CD_GUBUN != '4'"); //BACK_Fixed
		
 	this.gfnGridColumnColor(this.dxGrid, "AM_CHA", "Red", "AM_CHA < 0");
	
// 	this.gfnGridColumnColor(this.dxGrid, "DS_CHECK", "BACK_GangJo, Blue", "CD_CODE == 'S'");
// 	this.gfnGridColumnColor(this.dxGrid, "GU_CHK_H", "BACK_GangJo", "CD_CODE == 'S'");
// 	this.gfnGridColumnColor(this.dxGrid, "GU_CHK_S", "BACK_GangJo", "CD_CODE == 'S'");
// 	this.gfnGridColumnColor(this.dxGrid, "GU_CHK_G", "BACK_GangJo", "CD_CODE == 'S'");
// 	this.gfnGridColumnColor(this.dxGrid, "DS_BIGO", "BACK_GangJo", "CD_CODE == 'S'");
// 	this.gfnGridColumnColor(this.dxGrid, "DS_BIGO_SITE", "BACK_GangJo", "CD_CODE == 'S'");	
// 	
// 	
// 	this.gfnGridColumnColor(this.dxGrid, "DS_PASS", "BACK_ReadOnly,Red", "FILE_PAGE_02 != ''");
// 	this.gfnGridColumnColor(this.dxGrid, "DS_CHECK", "BACK_ReadOnly,Red", "FILE_PAGE_03 != ''");		

	this.dxGrid.set_enableredraw(true);
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("TY_WRK", "string");
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("YM_SALARY", "string");
	this.dsSelect.addColumn("TY_SALARY", "string");
	this.dsSelect.addColumn("SN_SALARY", "int");
	
	//수정
	this.dsSave = new Dataset();
	this.dsSave.addColumn("TY_SAVE", "string");
	this.dsSave.addColumn("YM_SALARY", "string");
	this.dsSave.addColumn("TY_SALARY", "string");
	this.dsSave.addColumn("SN_SALARY", "int");
	this.dsSave.addColumn("CD_CORP", "string");
	this.dsSave.addColumn("CD_CODE", "string");
	this.dsSave.addColumn("DS_REMARK", "string");
	this.dsSave.addColumn("RM_BIGO", "string");
	this.dsSave.addColumn("ID_USER", "string");
	
	this.dsSave2 = new Dataset();
	this.dsSave2.addColumn("TY_SAVE", "string");
	this.dsSave2.addColumn("YM_SALARY", "string");
	this.dsSave2.addColumn("TY_SALARY", "string");
	this.dsSave2.addColumn("SN_SALARY", "int");
	this.dsSave2.addColumn("CD_CORP", "string");
	this.dsSave2.addColumn("RM_BIGO", "string");
	this.dsSave2.addColumn("ID_USER", "string");
	
	// 결재
	this.dsApproval = new Dataset();
	this.dsApproval.addColumn("TY_WRK", "string");
	this.dsApproval.addColumn("TY_SALARY", "string");
	this.dsApproval.addColumn("YM_SALARY", "string");
	this.dsApproval.addColumn("SN_SALARY", "int");
	this.dsApproval.addColumn("CD_CORP", "string");
	this.dsApproval.addColumn("ID_APRV", "string");
	this.dsApproval.addColumn("NO_APRV", "int");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {

	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "TY_WRK", "Q");	
	this.dsSelect.setColumn(0, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);	
	this.dsSelect.setColumn(0, "YM_SALARY", this.ctclYM_SALARY.form.TextBox.value);
	this.dsSelect.setColumn(0, "TY_SALARY", this.cboTY_SALARY.value);
	this.dsSelect.setColumn(0, "SN_SALARY", this.cboSN_SALARY.value);

	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";	
 	var inData      = "select=dsSelect";
 	var outData     = "dsDetail=select0 dsList=select1";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

this.fnSelectDetail = function() {
	//if (this.dsList.rowcount == 0) return;

	//this.gfnSetFormStatus(this);	
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "TY_WRK", "D");	
	this.dsSelect.setColumn(0, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);	
	this.dsSelect.setColumn(0, "YM_SALARY", this.ctclYM_SALARY.form.TextBox.value);
	this.dsSelect.setColumn(0, "TY_SALARY", this.cboTY_SALARY.value);
	this.dsSelect.setColumn(0, "SN_SALARY", this.cboSN_SALARY.value);

	var strSvcId    = "detail";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
 	var inData      = "selectSingle=dsSelect";
 	var outData     = "dsDetail=selectSingle0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {	
	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		if (this.dsList.rowcount == 0) {
			this.gfnAlert("자료가 존재하지 않습니다.");
		} else {
			this.gfnGridAfterSelect(this.dxGrid);	
			
			//this.fnSelectDetail();
			
			var title1 = this.dsDetail.getColumn(0, "DS_TITLE_NOW");
			var title2 = this.dsDetail.getColumn(0, "DS_TITLE_PRE");
			this.dxGrid.set_enableredraw(false);
			this.dxGrid.setCellProperty("head", 5, "text", title1);
			this.dxGrid.setCellProperty("head", 6, "text", title2);		
// 			for (var i = 0; i < this.dsList.rowcount; i++) {
// 				if (this.dsList.getColumn(i, "CD_GUBUN") == "3") {				 
// 					this.dxGrid.setCellProperty("body", 4, "textAlign", "right");
// 				} else {
// 					this.dxGrid.setCellProperty("body", 4, "textAlign", "left");
// 				}
// 				
// 			}			
			this.dxGrid.set_enableredraw(true);
			
			this.fnUpdateStatusExtendButton();
		}
	} else if(svcID == "save") {
		if (errorCode == 0) {
			this.gfnAlert("저장되었습니다.");
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	} else if (svcID == "APRV" || svcID == "APRVCNC") {
		this.gfnOpenAppr(function() {
			this.FormBtns.Select.click();
		});
	} 
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
 this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if (id == "ccfID_SABUN") {
		if (!this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
			dsUserParam.setColumn(nrow, "GR_SEARCH", "");	
			dsUserParam.setColumn(nrow, "CD_DEPT", "");	
			dsUserParam.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);	
		}else{
			this.gfnAlert("먼저 법인을 선택해주세요.");
			return false;
		}
	}
	
	return true;

};
 
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGrid_EnterCell = function(obj:nexacro.Grid, row, cell) {

	var colnm = this.gfnGridGetBindColumnNameByIndex(obj, cell); 
	var objDs = obj.getBindDataset();
	var flag = this.gfnGetFlag(this.dsList, row);
	
};
// 
// this.fnGrid_RowCellChanged = function(obj:nexacro.Grid,e:nexacro.GridSelectEventInfo)
// {
//     if ((obj.oldrow > -1 && obj.oldrow == e.row)
// 		|| (obj.oldrow == -1 && e.oldrow != e.row)) {
// 		
// 		if( e.columnid == "DS_REMARK" ) {
// 			if (e.oldvalue != e.newvalue) {
// 				this.dsList.setColumn(e.row, "DS_REMARK", e.newvalue);
// 			}
// 		}
// 		
// 		obj.oldrow = -1;
// 	}
// };

this.dsDetail_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue)
	{
		this.gfnSetFormStatus(this, "U");
	}
};
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
// 첨부파일 버튼 - 출장보고서 첨부파일(기타-통신비(로밍))
this.divData_btnUpload_onclick = function(obj:nexacro.Button, e:nexacro.ClickEventInfo) {
	var cdGubun = "DA22";
	var cdDir1 = this.dsSearch.getColumn(0, "YM_SALARY");
	var cdDir2 = this.dsSearch.getColumn(0, "TY_SALARY");
	var cdDir3 = this.dsSearch.getColumn(0, "SN_SALARY");	
	
	var AprvCnt    = this.dsDetail.getColumn(0, "BTN_APRV");
	
	var fileManager = {};
	fileManager.CD_GUBUN = cdGubun;
	fileManager.CD_DIR = [cdDir1,cdDir2,cdDir3];	
	// CD_DIR 만 지정시 CD_DIR 배열 순대로 키1,키2,키3 까지 자동지정
	// 저장되는 디렉토리와 키값이 다른경우 CD_REF 추가로 사용
	//fileManager.CD_REF = [ "A1" ];
	// 권한 및 상태에 따라 업로드,삭제 가능여부 지정 (기본: true)
	
	// fileManager.IS_READONLY = (AprvCnt == "Y") ? false : true;	// this.getOwnerFrame().READ_ONLY;
	fileManager.IS_READONLY = false;
	
	this.gfnFileManager(fileManager, "btnUpload_Callback");
}

this.btnUpload_Callback = function(strID, val) {
	this.divBottom.form.divBtns.form.btnUpload.set_text("첨부(" + val.Cnt + ")");
}

// 저장 버튼 클릭
this.divData_btnSave_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{		
	this.dxGrid.updateToDataset();
	
	this.dsSave.clearData();
	this.dsSave2.clearData();

	var nrow = this.dsSave2.addRow();
	this.dsSave2.setColumn(nrow, "TY_SAVE", "T");				
	this.dsSave2.setColumn(nrow, "YM_SALARY", this.dsSearch.getColumn(0, "YM_SALARY"));
	this.dsSave2.setColumn(nrow, "TY_SALARY", this.dsSearch.getColumn(0, "TY_SALARY"));
	this.dsSave2.setColumn(nrow, "SN_SALARY", this.dsSearch.getColumn(0, "SN_SALARY"));
	this.dsSave2.setColumn(nrow, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));
	this.dsSave2.setColumn(nrow, "RM_BIGO", this.dsDetail.getColumn(0, "RM_BIGO"));
	this.dsSave2.setColumn(nrow, "ID_INSERT", this.AuthClient.ID_USER);	
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
			case "U":
			case "D":			
				var nrow = this.dsSave.addRow();	
				this.dsSave.setColumn(nrow, "TY_SAVE", flag);				
				this.dsSave.setColumn(nrow, "YM_SALARY", this.dsSearch.getColumn(0, "YM_SALARY"));
				this.dsSave.setColumn(nrow, "TY_SALARY", this.dsSearch.getColumn(0, "TY_SALARY"));
				this.dsSave.setColumn(nrow, "SN_SALARY", this.dsSearch.getColumn(0, "SN_SALARY"));
				this.dsSave.setColumn(nrow, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));
				this.dsSave.setColumn(nrow, "CD_CODE", this.dsList.getColumn(i, "CD_CODE"));
				this.dsSave.setColumn(nrow, "DS_REMARK", this.dsList.getColumn(i, "DS_REMARK"));
				//this.dsSave.setColumn(nrow, "RM_BIGO", this.dsDetail.getColumn(0, "RM_BIGO"));
				this.dsSave.setColumn(nrow, "ID_INSERT", this.AuthClient.ID_USER);	
				break;
		}
	}
	
	
	if (this.dsSave2.rowcount == 0 && this.dsSave.rowcount == 0) return;

	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save2=dsSave2 save=dsSave";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}


// 취소 버튼 클릭
this.divData_btnCancel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	// this.close()가 작동하지 않았고, 
	// 부모의 callback 함수로 데이터를 넘겨주기 위해 작성되었습니다.
	this.getParentContext().close(false);
};


// 결재상신 버튼 클릭
this.divData_btnAprv_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if (!this.gfnGridIsRow(this.dxGrid)) return;
	
	this.gfnConfirm(this.fnAprvMsg(obj), function(strId, isOk) {
		if (isOk == false) {
			return;
		}
		var title = this.dsDetail.getColumn(0, "DS_TITLE");
		
		var initParam = {
			CD_CORP: this.dsSearch.getColumn(0, "CD_CORP"),
			ID_AP_TYPE: "DAU01",
			TY_WRK: "APRV",
			ID_APRV: this.AuthClient.ID_SABUN,
			TT_DOC: title,	// '23년 4월 급여 지급의 건
			CD_CORP_SUFFIX: this.gfnGetConfig("DZ" , "CD_CORP_SUFFIX"),
		}
		this.gfnAprv(initParam, "fnAprvCallback", "APRV");
	});
}

// 결재문서조회 버튼
this.divData_btnDocQ_onclick = function(obj:nexacro.Button, e:nexacro.ClickEventInfo) {
	var oParams = {
		CD_CORP: this.dsSearch.getColumn(0, "CD_CORP"),
		NO_APRV: this.dsDetail.getColumn(0, "NO_APRV"),
	}
	this.gfnAprvDoc(oParams, this.fnAprvDocQCallback);
}

this.fnAprvMsg = function(obj) {
	var title = this.dsDetail.getColumn(0, "DS_TITLE");
	var msg = title + "에 대하여 " + obj.text + " 하시겠습니까?";
	
	return msg;
}

this.fnAprvDocQCallback = function() {
	console.log('fnAprvDocQCallback');
	alert('fnAprvDocQCallback');
}

// 결재상신 버튼 콜백
// 취소결재상신 버튼 콜백
// 결재상태초기화 버튼 콜백
this.fnAprvCallback = function(strId, val) {
	this.dsApproval.clearData();
	this.dsApproval.addRow();
	
	this.dsApproval.setColumn(0, "TY_WRK",  strId);
	this.dsApproval.setColumn(0, "TY_SALARY", this.dsSearch.getColumn(0, "TY_SALARY"));
	this.dsApproval.setColumn(0, "YM_SALARY", this.dsSearch.getColumn(0, "YM_SALARY"));
	this.dsApproval.setColumn(0, "SN_SALARY", this.dsSearch.getColumn(0, "SN_SALARY"));
	this.dsApproval.setColumn(0, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));
	this.dsApproval.setColumn(0, "ID_APRV", this.AuthClient.ID_SABUN);
	if (strId == "APRV" || strId == "APRVCNC") {
		this.dsApproval.setColumn(0, "NO_APRV", this.dsAprvOut.getColumn(0, "NO_APRV"));
	} else {
		this.dsApproval.setColumn(0, "NO_APRV", this.dsList.getColumn(this.dsList.rowposition, "NO_APRV"));
	}
		
	var strSvcId    = strId;
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "aprv_execute=dsApproval";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction(strSvcId,		// transaction을 구분하기 위한 svc id값
						strSvcType, 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData, 		// 입력값으로 보낼 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						outData, 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc);	// 통신방법 정의 [생략가능]
}
]]></Script>
    <Objects>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DAUPR_AUTOSLIPBASE_APRV_DLG_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">selectSingle</Col>
            <Col id="SP">DAUPR_AUTOSLIPBASE_APRV_DLG_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DAUPR_AUTOSLIPBASE_APRV_DLG_SAVE</Col>
          </Row>
          <Row>
            <Col id="TARGET">save2</Col>
            <Col id="SP">DAUPR_AUTOSLIPBASE_APRV_DLG_SAVE</Col>
          </Row>
          <Row>
            <Col id="TARGET">aprv_execute</Col>
            <Col id="SP">DAUPR_AUTOSLIPBASE_APRV_EXECUTE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsList" onvaluechanged="dsList_onvaluechanged"/>
      <Dataset id="dsDetail" onvaluechanged="dsDetail_onvaluechanged">
        <ColumnInfo>
          <Column id="DS_HEADER" type="STRING" size="256"/>
          <Column id="DS_FOOTER" type="STRING" size="256"/>
          <Column id="DS_CNT_NOW" type="STRING" size="256"/>
          <Column id="DS_CNT_PRE" type="STRING" size="256"/>
          <Column id="QN_CNT_NOW" type="STRING" size="256"/>
          <Column id="QN_CNT_PRE" type="STRING" size="256"/>
          <Column id="QN_CNT_INCDEC" type="STRING" size="256"/>
          <Column id="RM_BIGO" type="STRING" size="256"/>
          <Column id="DS_TITLE_NOW" type="STRING" size="256"/>
          <Column id="DS_TITLE_PRE" type="STRING" size="256"/>
          <Column id="DS_TITLE" type="STRING" size="256"/>
          <Column id="ST_APRV" type="STRING" size="256"/>
          <Column id="BTN_APRV" type="STRING" size="256"/>
          <Column id="BTN_DOC_Q" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsSearch" oncolumnchanged="dsSearch_oncolumnchanged">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="YM_SALARY" type="STRING" size="256"/>
          <Column id="TY_SALARY" type="STRING" size="256"/>
          <Column id="SN_SALARY" type="STRING" size="256"/>
          <Column id="ID_SABUN" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divTop.form.edtDS_CNT_NOW" propid="value" datasetid="dsDetail" columnid="DS_CNT_NOW"/>
      <BindItem id="item1" compid="divTop.form.edtDS_CNT_PRE" propid="value" datasetid="dsDetail" columnid="DS_CNT_PRE"/>
      <BindItem id="item2" compid="divTop.form.edtQN_CNT_NOW" propid="value" datasetid="dsDetail" columnid="QN_CNT_NOW"/>
      <BindItem id="item3" compid="divTop.form.edtQN_CNT_PRE" propid="value" datasetid="dsDetail" columnid="QN_CNT_PRE"/>
      <BindItem id="item4" compid="divTop.form.edtQN_CNT_INCDEC" propid="value" datasetid="dsDetail" columnid="QN_CNT_INCDEC"/>
      <BindItem id="item5" compid="divTop.form.edtRM_BIGO" propid="value" datasetid="dsDetail" columnid="RM_BIGO"/>
      <BindItem id="item6" compid="divBottom.form.ctclYM_SALARY.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_SALARY"/>
      <BindItem id="item7" compid="divBottom.form.cboTY_SALARY" propid="value" datasetid="dsSearch" columnid="TY_SALARY"/>
      <BindItem id="item8" compid="divBottom.form.cboSN_SALARY" propid="value" datasetid="dsSearch" columnid="SN_SALARY"/>
      <BindItem id="item9" compid="divBottom.form.ccfID_SABUN.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="ID_SABUN"/>
      <BindItem id="item10" compid="divBottom.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
    </Bind>
  </Form>
</FDL>
