<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="DAU_QUERYSALARY" width="1280" height="720" titletext="조건별 급여정보" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divData" taborder="0" left="0" top="0" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <!-- 기본정보 -->
              <Static id="staTITLE" taborder="13" text="기본정보" left="0" top="10" width="180" height="30" cssclass="sta_TITLE_Bg" textAlign="left"/>
              <!-- 정렬순서 -->
              <Static id="staSort" taborder="14" text="정열순서" left="0" top="45" width="105" height="30" cssclass="sta_WF_tablelabel" visible="true"/>
              <Static id="staSort_bg" taborder="15" left="staSort:-1" top="staSort:-30" width="262" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Combo id="cboSort" taborder="0" text="전체" left="staSort:5" top="staSort:-25" width="70" height="20" innerdataset="innerdataset" codecolumn="codecolumn" datacolumn="datacolumn" value="1" index="0">
                <Dataset id="innerdataset">
                  <ColumnInfo>
                    <Column id="codecolumn" size="256"/>
                    <Column id="datacolumn" size="256"/>
                  </ColumnInfo>
                  <Rows>
                    <Row>
                      <Col id="codecolumn">ID_SABUN</Col>
                      <Col id="datacolumn">사번순</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">DS_HNAME</Col>
                      <Col id="datacolumn">성명순</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">CD_DEPT</Col>
                      <Col id="datacolumn">부서순</Col>
                    </Row>
                    <Row>
                      <Col id="datacolumn">직종순</Col>
                      <Col id="codecolumn">DS_EMPTYPE</Col>
                    </Row>
                  </Rows>
                </Dataset>
              </Combo>
              <!-- 급여년월 -->
              <Static id="staYM_SALARY" taborder="18" text="급여년월" left="0" top="staSort:-1" width="105" height="30" visible="true" cssclass="sta_WF_tablelabelE"/>
              <Static id="staYM_SALARY_bg" taborder="19" left="staYM_SALARY:-1" top="staYM_SALARY:-30" width="262" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Div id="ctclFR_YM_SALARY" taborder="2" left="staYM_SALARY:5" top="staYM_SALARY:-25" width="80" height="20" url="cmm::cmmCalMM.xfdl" onchanged="fnSearchInit"/>
              <Static id="staDT_ORD_TO" taborder="40" text="~" left="ctclFR_YM_SALARY:0" top="79" width="30" height="20" cssclass="sta_WF_AC"/>
              <Div id="ctclTO_YM_SALARY" taborder="5" left="staDT_ORD_TO:0" top="79" width="80" height="20" url="cmm::cmmCalMM.xfdl" onchanged="fnSearchInit"/>
              <!-- 부서 -->
              <Static id="staCD_DEPT" taborder="20" text="부서" left="0" top="staYM_SALARY:-1" width="105" height="30" cssclass="sta_WF_tablelabel" visible="true"/>
              <Static id="staCD_DEPT_bg" taborder="21" left="staCD_DEPT:-1" top="staCD_DEPT:-30" width="262" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Div id="ccfCD_DEPT" CDTextWidth="80" taborder="4" left="staCD_DEPT:5" top="staCD_DEPT:-25" width="250" height="20" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DAX_CFDEPT" BeforeUserDataSetParam="fnBeforeUserDataSetParam" AfterCDTextChanged="fnAfterCDTextChanged" enable="true"/>
              <!-- 직종 -->
              <Static id="staCD_JOBTYPE" taborder="22" text="직종" left="0" top="staCD_DEPT:-1" width="105" height="30" cssclass="sta_WF_tablelabel" visible="true"/>
              <Static id="staCD_JOBTYPE_bg" taborder="23" left="staCD_JOBTYPE:-1" top="staCD_JOBTYPE:-30" width="262" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Div id="ccfCD_JOBTYPE" CDTextWidth="70" taborder="7" left="staCD_JOBTYPE:5" top="staCD_JOBTYPE:-25" width="250" height="20" url="cmm::cmmCodeFind.xfdl" text="" BeforeUserDataSetParam="fnBeforeUserDataSetParam" AfterCDTextChanged="fnAfterCDTextChanged" enable="true"/>
              <!-- 직위 -->
              <Static id="staCD_POSITION" taborder="24" text="직급" left="0" top="staCD_JOBTYPE:-1" width="105" height="30" cssclass="sta_WF_tablelabel" visible="true"/>
              <Static id="staCD_POSITION_bg" taborder="25" left="staCD_POSITION:-1" top="staCD_POSITION:-30" width="262" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Div id="ccfCD_POSITION" CDTextWidth="70" taborder="52" left="staCD_POSITION:5" top="staCD_POSITION:-25" width="250" height="20" url="cmm::cmmCodeFind.xfdl" text="" BeforeUserDataSetParam="fnBeforeUserDataSetParam" AfterCDTextChanged="fnAfterCDTextChanged" enable="true"/>
              <!-- 국민연금적용 -->
              <Static id="staYN_ANNUITY" taborder="26" text="국민연금적용" left="0" top="staCD_POSITION:-1" width="105" height="30" cssclass="sta_WF_tablelabel" visible="true"/>
              <Static id="staYN_ANNUITY_bg" taborder="27" left="staYN_ANNUITY:-1" top="staYN_ANNUITY:-30" width="262" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Combo id="cboYN_ANNUITY" taborder="9" text="전체" left="staYN_ANNUITY:5" top="staYN_ANNUITY:-25" width="60" height="20" innerdataset="innerdataset" codecolumn="codecolumn" datacolumn="datacolumn" value="%" index="0">
                <Dataset id="innerdataset">
                  <ColumnInfo>
                    <Column id="codecolumn" size="256"/>
                    <Column id="datacolumn" size="256"/>
                  </ColumnInfo>
                  <Rows>
                    <Row>
                      <Col id="codecolumn">%</Col>
                      <Col id="datacolumn">전체</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">Y</Col>
                      <Col id="datacolumn">Y</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">N</Col>
                      <Col id="datacolumn">N</Col>
                    </Row>
                  </Rows>
                </Dataset>
              </Combo>
              <!-- 건강보험적용 -->
              <Static id="staYN_MEDIC" taborder="28" text="건강보험적용" left="0" top="staYN_ANNUITY:-1" width="105" height="30" cssclass="sta_WF_tablelabel" visible="true"/>
              <Static id="staYN_MEDIC_bg" taborder="29" left="staYN_MEDIC:-1" top="staYN_MEDIC:-30" width="262" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Combo id="cboYN_MEDIC" taborder="10" text="전체" left="staYN_MEDIC:5" top="staYN_MEDIC:-25" width="60" height="20" innerdataset="innerdataset" codecolumn="codecolumn" datacolumn="datacolumn" value="%" index="0">
                <Dataset id="innerdataset">
                  <ColumnInfo>
                    <Column id="codecolumn" size="256"/>
                    <Column id="datacolumn" size="256"/>
                  </ColumnInfo>
                  <Rows>
                    <Row>
                      <Col id="codecolumn">%</Col>
                      <Col id="datacolumn">전체</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">Y</Col>
                      <Col id="datacolumn">Y</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">N</Col>
                      <Col id="datacolumn">N</Col>
                    </Row>
                  </Rows>
                </Dataset>
              </Combo>
              <!-- 고용보험적용 -->
              <Static id="staYN_HIRE" taborder="30" text="고용보험적용" left="0" top="staYN_MEDIC:-1" width="105" height="30" cssclass="sta_WF_tablelabel" visible="true"/>
              <Static id="staYN_HIRE_bg" taborder="31" left="staYN_HIRE:-1" top="staYN_HIRE:-30" width="262" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Combo id="cboYN_HIRE" taborder="11" text="전체" left="staYN_HIRE:5" top="staYN_HIRE:-25" width="60" height="20" innerdataset="innerdataset" codecolumn="codecolumn" datacolumn="datacolumn" value="%" index="0">
                <Dataset id="innerdataset">
                  <ColumnInfo>
                    <Column id="codecolumn" size="256"/>
                    <Column id="datacolumn" size="256"/>
                  </ColumnInfo>
                  <Rows>
                    <Row>
                      <Col id="codecolumn">%</Col>
                      <Col id="datacolumn">전체</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">Y</Col>
                      <Col id="datacolumn">Y</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">N</Col>
                      <Col id="datacolumn">N</Col>
                    </Row>
                  </Rows>
                </Dataset>
              </Combo>
              <!-- 지급구분 -->
              <Static id="staTY_SALARY" taborder="16" text="지급구분" left="staSort_bg:-1" top="staSort_bg:-30" width="90" height="30" visible="true" cssclass="sta_WF_tablelabelE"/>
              <Static id="staTY_SALARY_bg" taborder="17" left="staTY_SALARY:-1" top="staTY_SALARY:-30" width="262" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Combo id="cboTY_SALARY" taborder="1" text="전체" left="staTY_SALARY:5" top="staTY_SALARY:-25" width="70" height="20" innerdataset="innerdataset" codecolumn="codecolumn" datacolumn="datacolumn" onitemchanged="fnSearchInit" value="%" index="0">
                <Dataset id="innerdataset">
                  <ColumnInfo>
                    <Column id="codecolumn" size="256"/>
                    <Column id="datacolumn" size="256"/>
                  </ColumnInfo>
                  <Rows>
                    <Row>
                      <Col id="codecolumn">%</Col>
                      <Col id="datacolumn">전체</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">S</Col>
                      <Col id="datacolumn">급여</Col>
                    </Row>
                    <!--
                    <Row>
                      <Col id="codecolumn">B</Col>
                      <Col id="datacolumn">상여</Col>
                    </Row>
-->
                    <Row>
                      <Col id="codecolumn">X</Col>
                      <Col id="datacolumn">성과급</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">R</Col>
                      <Col id="datacolumn">퇴직급여</Col>
                    </Row>
                  </Rows>
                </Dataset>
              </Combo>
              <Combo id="cboSN_SALARY" taborder="53" left="cboTY_SALARY:5" top="staTY_SALARY:-25" width="50" height="20" index="0" value="1" onitemchanged="fnSearchInit" text="1" readonly="false" innerdataset="innerdataset" codecolumn="codecolumn" datacolumn="datacolumn">
                <Dataset id="innerdataset">
                  <ColumnInfo>
                    <Column id="codecolumn" size="256"/>
                    <Column id="datacolumn" size="256"/>
                  </ColumnInfo>
                  <Rows>
                    <Row>
                      <Col id="codecolumn"/>
                      <Col id="datacolumn">전체</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">1</Col>
                      <Col id="datacolumn">1</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">2</Col>
                      <Col id="datacolumn">2</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">3</Col>
                      <Col id="datacolumn">3</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">4</Col>
                      <Col id="datacolumn">4</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">5</Col>
                      <Col id="datacolumn">5</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">6</Col>
                      <Col id="datacolumn">6</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">7</Col>
                      <Col id="datacolumn">7</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">8</Col>
                      <Col id="datacolumn">8</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">9</Col>
                      <Col id="datacolumn">9</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">10</Col>
                      <Col id="datacolumn">10</Col>
                    </Row>
                  </Rows>
                </Dataset>
              </Combo>
              <!-- 법인 -->
              <Static id="staCD_CORP" taborder="32" text="법인" left="staYM_SALARY_bg:-1" top="74" width="90" height="30" visible="true" cssclass="sta_WF_tablelabelE"/>
              <Static id="staCD_CORP_bg" taborder="33" left="staCD_CORP:-1" top="staCD_CORP:-30" width="262" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Div id="ccfCD_CORP" CDTextWidth="50" taborder="3" left="staCD_CORP:5" top="staCD_CORP:-25" width="250" height="20" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DAX_CFCORP2" BeforeUserDataSetParam="fnBeforeUserDataSetParam" AfterCDTextChanged="fnAfterCDTextChanged" enable="true"/>
              <!-- 사번 -->
              <Static id="staID_SABUN" taborder="34" text="사번" left="staCD_DEPT_bg:-1" top="103" width="90" height="30" cssclass="sta_WF_tablelabel" visible="true"/>
              <Static id="staID_SABUN_bg" taborder="35" left="staID_SABUN:-1" top="staID_SABUN:-30" width="262" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Div id="ccfID_SABUN" CDTextWidth="90" taborder="6" left="staID_SABUN:5" top="staID_SABUN:-25" width="250" height="20" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DAX_CFBASEINFOCORP" BeforeUserDataSetParam="fnBeforeUserDataSetParam" AfterCDTextChanged="fnAfterCDTextChanged"/>
              <!-- 급호 -->
              <Static id="staCD_PAYSTEP" taborder="36" text="근속연차" left="staCD_JOBTYPE_bg:-1" top="132" width="90" height="30" cssclass="sta_WF_tablelabel" visible="true"/>
              <Static id="staCD_PAYSTEP_bg" taborder="37" left="staCD_PAYSTEP:-1" top="staCD_PAYSTEP:-30" width="262" height="30" cssclass="sta_WF_tablebg" visible="true"/>
              <Div id="ccfCD_PAYSTEP" CDTextWidth="70" taborder="8" left="staCD_PAYSTEP:5" top="staCD_PAYSTEP:-25" width="250" height="20" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DAX_CFPAYSTEPSUB" BeforeUserDataSetParam="fnBeforeUserDataSetParam" AfterCDTextChanged="fnAfterCDTextChanged"/>
              <!-- 직원구분 -->
              <Static id="staDS_EMPTYPE" taborder="41" text="직원구분" left="staCD_POSITION_bg:-1" top="161" width="90" height="30" cssclass="sta_WF_tablelabel"/>
              <Static id="staDS_EMPTYPE_bg" taborder="43" left="staDS_EMPTYPE:-1" top="staDS_EMPTYPE:-30" width="262" height="30" cssclass="sta_WF_tablebg"/>
              <Combo id="cboDS_EMPTYPE" taborder="42" left="staDS_EMPTYPE:5" top="staDS_EMPTYPE:-25" width="80" height="20" enable="true" datacolumn="DS_CODE" codecolumn="CD_CODE" value="%" text="전체" index="1" innerdataset="dsDS_EMPTYPE" onitemchanged="fnSearchInit"/>
              <!-- 조회년도 -->
              <Static id="staYY_SALARY" taborder="44" text="조회년도" left="staYN_ANNUITY_bg:-1" top="190" width="90" height="30" cssclass="sta_WF_tablelabel" visible="false"/>
              <Static id="staYY_SALARY_bg" taborder="45" left="staYY_SALARY:-1" top="staYY_SALARY:-30" width="262" height="30" cssclass="sta_WF_tablebg" visible="false"/>
              <Combo id="cboYY_SALARY" taborder="46" text="전체" left="staYY_SALARY:5" top="staYY_SALARY:-25" width="80" height="20" innerdataset="innerdataset" codecolumn="codecolumn" datacolumn="datacolumn" value="%" index="0" visible="false">
                <Dataset id="innerdataset">
                  <ColumnInfo>
                    <Column id="codecolumn" size="256"/>
                    <Column id="datacolumn" size="256"/>
                  </ColumnInfo>
                  <Rows>
                    <Row>
                      <Col id="codecolumn">%</Col>
                      <Col id="datacolumn">전체</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">Y</Col>
                      <Col id="datacolumn">Y</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">N</Col>
                      <Col id="datacolumn">N</Col>
                    </Row>
                  </Rows>
                </Dataset>
              </Combo>
              <!-- 연소득 -->
              <Static id="staAM_SALARY" taborder="47" text="연소득" left="staYN_MEDIC_bg:-1" top="219" width="90" height="30" cssclass="sta_WF_tablelabel" visible="false"/>
              <Static id="staAM_SALARY_bg" taborder="48" left="staAM_SALARY:-1" top="staAM_SALARY:-30" width="262" height="30" cssclass="sta_WF_tablebg" visible="false"/>
              <Edit id="edtAM_FR_SALARY" taborder="49" left="staAM_SALARY:5" top="staAM_SALARY:-25" width="100" height="20" visible="false"/>
              <Static id="tiltAM_SALARY" taborder="50" text="~" left="edtAM_FR_SALARY:0" top="staAM_SALARY:-25" width="30" height="20" visible="false" cssclass="sta_WF_AC"/>
              <Edit id="edtAM_TO_SALARY" taborder="51" left="tiltAM_SALARY:0" top="staAM_SALARY:-25" width="100" height="20" visible="false"/>
              <!--  -->
              <!--  -->
              <!--  -->
              <!--  -->
              <!--  -->
              <!--  -->
              <Static id="staTITLE00" taborder="39" text="소득내역 / 공제내역" left="730" top="10" width="180" height="30" cssclass="sta_TITLE_Bg" textAlign="left"/>
              <Grid id="objGrid" taborder="12" left="0" top="300" bottom="0" right="0"/>
              <Grid id="objGridIncomeSubstList" taborder="38" left="staTY_SALARY_bg:15" top="44" height="236" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DAUPR_QUERYSALARY_SELECT_LIST</Col>
          </Row>
          <Row>
            <Col id="TARGET">selectIncomeSubstList</Col>
            <Col id="SP">DAUPR_QUERYSALARY_LIST</Col>
          </Row>
          <Row>
            <Col id="TARGET">dsAuthForm</Col>
            <Col id="SP">DZZPR_DOTNET_AUTHORITYFORM_SELECT_NEW</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo</Col>
            <Col id="SP">DAZPR_COMMONCODE_COMBO</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsIncomeSubstList"/>
      <Dataset id="dsSearch">
        <ColumnInfo>
          <Column id="DS_ORDERBY" type="STRING" size="256" description="정렬순서"/>
          <Column id="CD_ALLOWS" type="STRING" size="256"/>
          <Column id="TY_SALARY" type="STRING" size="256" description="지급구분"/>
          <Column id="SN_SALARY" type="STRING" size="256"/>
          <Column id="FR_SALARY" type="STRING" size="256" description="급여년월"/>
          <Column id="TO_SALARY" type="STRING" size="256" description="급여년월"/>
          <Column id="CD_CORP" type="STRING" size="256" description="법인"/>
          <Column id="CD_ORG1" type="STRING" size="256"/>
          <Column id="ID_SABUN" type="STRING" size="256" description="사번"/>
          <Column id="CD_JOBTYPE" type="STRING" size="256" description="직종"/>
          <Column id="CD_PAYSTEP" type="STRING" size="256" description="급호"/>
          <Column id="CD_POSITION" type="STRING" size="256" description="직위"/>
          <Column id="YN_ANNUITY" type="STRING" size="256" description="국민연금"/>
          <Column id="YN_HIRE" type="STRING" size="256" description="고용보험"/>
          <Column id="YN_HEALTH" type="STRING" size="256" description="건강보험"/>
          <Column id="DS_HNAME" type="STRING" size="256"/>
          <Column id="DS_EMPTYPE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="DS_ORDERBY">ID_SABUN</Col>
            <Col id="TY_SALARY">S</Col>
            <Col id="SN_SALARY">1</Col>
            <Col id="YN_HEALTH">%</Col>
            <Col id="YN_HIRE">%</Col>
            <Col id="YN_ANNUITY">%</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsDS_EMPTYPE">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="_dsParamAuthForm">
        <ColumnInfo>
          <Column id="ID_USER" type="STRING" size="256"/>
          <Column id="CD_DEPT" type="STRING" size="256"/>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="ID_FORM" type="STRING" size="256"/>
          <Column id="CD_MODULE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="_dsParamBtnInfo">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="CD_DEPT" type="STRING" size="256"/>
          <Column id="ID_SABUN" type="STRING" size="256"/>
          <Column id="CD_MODULE" type="STRING" size="256"/>
          <Column id="ID_FORM" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsAuthForm"/>
      <Dataset id="dsBtnInfo"/>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	this.fnSetCombo();
	
	//급여년월 셋팅
	var thisMonth = this.gfnGetDate().substr(0,6);
	this.ctclFR_YM_SALARY.form.TextBox.set_value(thisMonth);
	this.ctclTO_YM_SALARY.form.TextBox.set_value(thisMonth);

	//법인 셋팅
	this.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);
	this.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP);
	
	//소득내역/공제내역
	this.fnSelectIncomesubstList();
};   

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
	// this.FormBtns.Add.set_enable(false);
	// this.FormBtns.Del.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnSalaryBaseInfo = this.gfnFormButtonAdd("SalaryBaseInfo", "fnSalaryBaseInfo", "급여기초정보");
	
	this.btnSalaryBaseInfo.set_enable(false);
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	//정렬순서
	this.cboSort = this.divData.form.cboSort;
	//지급구분
	this.cboTY_SALARY = this.divData.form.cboTY_SALARY;
	this.cboSN_SALARY = this.divData.form.cboSN_SALARY;
	this.cboDS_EMPTYPE = this.divData.form.cboDS_EMPTYPE;
	//급여년월
	this.ctclFR_YM_SALARY = this.divData.form.ctclFR_YM_SALARY;
	this.ctclTO_YM_SALARY = this.divData.form.ctclTO_YM_SALARY
	//법인
	this.ccfCD_CORP = this.divData.form.ccfCD_CORP
	//부서
	this.ccfCD_DEPT = this.divData.form.ccfCD_DEPT
	//사번
	this.ccfID_SABUN = this.divData.form.ccfID_SABUN
	//직종
	this.ccfCD_JOBTYPE = this.divData.form.ccfCD_JOBTYPE
	//직종
	this.ccfCD_POSITION = this.divData.form.ccfCD_POSITION	
	//급호
	this.ccfCD_PAYSTEP = this.divData.form.ccfCD_PAYSTEP
	//국민연금적용
	this.cboYN_ANNUITY = this.divData.form.cboYN_ANNUITY
	//건강보험적용
	this.cboYN_MEDIC = this.divData.form.cboYN_MEDIC
	//고용보험적용
	this.cboYN_HIRE = this.divData.form.cboYN_HIRE
	
	//소득/공제내역
	this.dxGridIncomeSubstList = this.divData.form.objGridIncomeSubstList;
	
	//그리드
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	//소득내역/공제내역
	this.gfnGridInit(this.dxGridIncomeSubstList, this.dsIncomeSubstList, "DA", "DAU_QUERYSALARY1");
	
	//그리드
	this.gfnGridInit(this.dxGrid, this.dsList, "DA", "DAU_QUERYSALARY");
	this.ccfCD_CORP.AfterCDTextChanged = "codefind_AfterCDTextChanged"
	
	this.ccfCD_JOBTYPE.CodeFindName = "DAX_CFCOMMONCODE";
	this.ccfCD_POSITION.CodeFindName = "DAX_CFCOMMONCODE";
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	//조회
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("DS_ORDERBY", "string");
	this.dsSelect.addColumn("TY_SALARY", "string");
	this.dsSelect.addColumn("FR_SALARY", "string");
	this.dsSelect.addColumn("TO_SALARY", "string");
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("CD_ORG1", "string");
	this.dsSelect.addColumn("CD_ORG2", "string");
	this.dsSelect.addColumn("CD_ORG3", "string");
	this.dsSelect.addColumn("CD_JOBTYPE", "string");
	
	this.dsSelect.addColumn("FR_SABUN", "string");
	this.dsSelect.addColumn("TO_SABUN", "string");	
	this.dsSelect.addColumn("FR_PAYSTEP", "string");
	this.dsSelect.addColumn("TO_PAYSTEP", "string");
	this.dsSelect.addColumn("DS_HNAME", "string");
	
	this.dsSelect.addColumn("YN_ANNUITY", "string");
	this.dsSelect.addColumn("YN_HIRE", "string");
	this.dsSelect.addColumn("YN_HEALTH", "string");
	this.dsSelect.addColumn("YY_BASE", "string");
	
	this.dsSelect.addColumn("FR_YY_INCOMESUM", "string");
	this.dsSelect.addColumn("TO_YY_INCOMESUM", "string");
	this.dsSelect.addColumn("COLCNT", "int");
	this.dsSelect.addColumn("COLGUBUN", "string");
	this.dsSelect.addColumn("COLCD", "string");
	this.dsSelect.addColumn("DS_EMPTYPE", "string");

	//this.dsSelect.addColumn("CD_ALLOWS", "string");
	this.dsSelect.addColumn("SN_SALARY", "string");
	//this.dsSelect.addColumn("ID_SABUN", "string");
	//this.dsSelect.addColumn("CD_PAYSTEP", "string");
	//this.dsSelect.addColumn("CD_POSITION", "string");
	
	/*
	@ORDER_BY      VARCHAR(20) = '',     
    @TY_SALARY     VARCHAR(1) = '',      
    @FR_SALARY     VARCHAR(6) = '',      
    @TO_SALARY     VARCHAR(6) = '',    
    @CD_CORP       VARCHAR(6) = '',    
    @CD_ORG1       VARCHAR(6) = '',    
    @CD_ORG2       VARCHAR(6) = '',    
    @CD_ORG3       VARCHAR(6) = '',    
    @CD_JOBTYPE    VARCHAR(2) = '',    
	
    @FR_SABUN      VARCHAR(20) = '',    
    @TO_SABUN      VARCHAR(20) = '',    
    @FR_PAYSTEP    VARCHAR(5) = '',    
    @TO_PAYSTEP    VARCHAR(5) = '',    
    @DS_HNAME      VARCHAR(8) = '',    
	
    @YN_ANNUITY    VARCHAR(1) = '',    
    @YN_HIRE       VARCHAR(1) = '',    
    @YN_HEALTH     VARCHAR(1) = '',    
    @YY_BASE       VARCHAR(4) = '',    
    @FR_YY_INCOMESUM INT = 0,    
    @TO_YY_INCOMESUM INT = 0,    
    @ColCnt  INT = 0,    
    @ColGubun      VARCHAR(max) = '', --|수당|공제.........    
    @ColCd         VARCHAR(max) = '' ,--|01|02.............    
    @YN_SENDIFIMS CHAR(1)    
*/
	/*
	this.dsSelect.addColumn("SORT", "string");
	this.dsSelect.addColumn("TY_SALARY", "string");
	this.dsSelect.addColumn("FR_YM_SALARY", "string");
	this.dsSelect.addColumn("TO_YM_SALARY", "string");
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("CD_DEPT", "string");
	this.dsSelect.addColumn("FR_ID_SABUN", "string");
	this.dsSelect.addColumn("TO_ID_SABUN", "string");
	this.dsSelect.addColumn("CD_JOBTYPE", "string");
	this.dsSelect.addColumn("FR_CD_PAYSTEP", "string");
	this.dsSelect.addColumn("TO_CD_PAYSTEP", "string");
	this.dsSelect.addColumn("DS_HNAME", "string");
	this.dsSelect.addColumn("YN_ANNUITY", "string");
	this.dsSelect.addColumn("YN_MEDIC", "string");
	this.dsSelect.addColumn("YN_HIRE", "string");
	*/
};


/************************************************************************
 * 콤보 설정
 ************************************************************************/
this.fnSetCombo = function() {
   this.dsCombo = new Dataset();
   this.dsCombo.addColumn("TY_SEL"     , "string");
   this.dsCombo.addColumn("CD_PREFIX"  , "string");
   this.dsCombo.addColumn("CD_UPPREFIX", "string");
   
   this.dsCombo.addRow();
   this.dsCombo.setColumn(0, "TY_SEL"     , "A");	//A
   this.dsCombo.setColumn(0, "CD_PREFIX"  , "EA");
   this.dsCombo.setColumn(0, "CD_UPPREFIX", "");
	   
//    this.dsCombo.addRow();
//    this.dsCombo.setColumn(1, "TY_SEL"     , "P");
//    this.dsCombo.setColumn(1, "CD_PREFIX"  , "AD");
//    this.dsCombo.setColumn(1, "CD_UPPREFIX", "");

	var strSvcId    = "combo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "combo=dsCombo";
	var outData     = "dsDS_EMPTYPE=combo0";
	//var outData     = "dsDS_EMPTYPE=combo0 dsCD_ADOPTYPE_GROUP=combo1";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction(strSvcId,		// transaction을 구분하기 위한 svc id값
						strSvcType, 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData, 		// 입력값으로 보낼 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						outData, 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc);	// 통신방법 정의 [생략가능]
}
/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {

	if(!this.fnValidate()) return;
	
	var nRow = this.dsIncomeSubstList.findRow( "CD_ALLOW", "A01" );	// 기본급
	this.dsIncomeSubstList.setColumn( nRow, "YN_GUBUN", 1 );
	
	this.fnSetGridColunm();
	
	var sCdAllows = "";
	var sGubuns = "";
	var sDelimiter = "|";
	var nIncomeCnt = this.dsIncomeSubstList.getCaseCount( "YN_GUBUN == 1");
	for (var i = 0; i < this.dsIncomeSubstList.rowcount; i++) {
		if(this.dsIncomeSubstList.getColumn(i, "YN_GUBUN") == 1){
			sCdAllows = sCdAllows + sDelimiter +  this.dsIncomeSubstList.getColumn(i, "CD_ALLOW");
			sGubuns = sGubuns + sDelimiter +  this.dsIncomeSubstList.getColumn(i, "GUBUN1");
		}
	}
	this.dsSelect.clearData();
	this.dsSelect.addRow();
		
	this.dsSelect.setColumn(0, "DS_ORDERBY", this.dsSearch.getColumn(0, "DS_ORDERBY"));
	this.dsSelect.setColumn(0, "TY_SALARY", this.dsSearch.getColumn(0, "TY_SALARY"));
	this.dsSelect.setColumn(0, "FR_SALARY", this.dsSearch.getColumn(0, "FR_SALARY"));
	this.dsSelect.setColumn(0, "TO_SALARY", this.dsSearch.getColumn(0, "TO_SALARY"));
	this.dsSelect.setColumn(0, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));
	this.dsSelect.setColumn(0, "CD_ORG1", this.dsSearch.getColumn(0, "CD_ORG1"));
	//this.dsSelect.addColumn("CD_ORG2", "string");
	//this.dsSelect.addColumn("CD_ORG3", "string");
	this.dsSelect.setColumn(0, "CD_JOBTYPE", this.dsSearch.getColumn(0, "CD_JOBTYPE"));
	this.dsSelect.setColumn(0, "FR_SABUN", this.dsSearch.getColumn(0, "ID_SABUN"));		
	//this.dsSelect.addColumn("TO_SABUN", "string");
	this.dsSelect.setColumn(0, "FR_PAYSTEP", this.dsSearch.getColumn(0, "CD_PAYSTEP"));
	//this.dsSelect.addColumn("TO_PAYSTEP", "string");
	this.dsSelect.setColumn(0, "DS_HNAME", this.dsSearch.getColumn(0, "DS_HNAME"));
	this.dsSelect.setColumn(0, "YN_ANNUITY", this.dsSearch.getColumn(0, "YN_ANNUITY"));
	this.dsSelect.setColumn(0, "YN_HIRE", this.dsSearch.getColumn(0, "YN_HIRE"));
	this.dsSelect.setColumn(0, "YN_HEALTH", this.dsSearch.getColumn(0, "YN_HEALTH"));
	//this.dsSelect.addColumn("YY_BASE", "string");

	//this.dsSelect.addColumn("FR_YY_INCOMESUM", "string");
	//this.dsSelect.addColumn("TO_YY_INCOMESUM", "string");
	this.dsSelect.setColumn(0, "COLCNT", nIncomeCnt);
	this.dsSelect.setColumn(0, "COLGUBUN", sGubuns);	// 소득 / 수당  --|수당|공제.........    
	this.dsSelect.setColumn(0, "COLCD", sCdAllows);		// ,--|01|02.............   
	this.dsSelect.setColumn(0, "DS_EMPTYPE", this.dsSearch.getColumn(0, "DS_EMPTYPE"));
	this.dsSelect.setColumn(0, "SN_SALARY", this.dsSearch.getColumn(0, "SN_SALARY"));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]

	
	/*
	this.setWaitCursor(true);
	
	this.gfnSetTimer(this, function() {
		this.fnSetGridColunm();
		
		var cdAllows = [];
		for (var i = 0; i < this.dsIncomeSubstList.rowcount; i++) {
			if(this.dsIncomeSubstList.getColumn(i, "YN_GUBUN") == 1){
				cdAllows.push(this.dsIncomeSubstList.getColumn(i, "CD_ALLOW"));
			}
		}
		
		this.dsSelect.clearData();
		this.dsSelect.addRow();
		
		//this.dsSelect.setColumn(0, "SORT", this.cboSort.value);
		//this.dsSelect.setColumn(0, "TY_SALARY", this.cboTY_SALARY.value);
		//this.dsSelect.setColumn(0, "FR_YM_SALARY", this.ctclFR_YM_SALARY.form.TextBox.value);
		//this.dsSelect.setColumn(0, "TO_YM_SALARY", this.ctclTO_YM_SALARY.form.TextBox.value);
		//this.dsSelect.setColumn(0, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
		//this.dsSelect.setColumn(0, "CD_DEPT", this.ccfCD_DEPT.form.CDTextBox.value);
		//this.dsSelect.setColumn(0, "FR_ID_SABUN", this.ccfFR_ID_SABUN.form.CDTextBox.value);
		//this.dsSelect.setColumn(0, "TO_ID_SABUN", this.ccfTO_ID_SABUN.form.CDTextBox.value);
		//this.dsSelect.setColumn(0, "CD_JOBTYPE", this.ccfCD_JOBTYPE.form.CDTextBox.value);
		//this.dsSelect.setColumn(0, "FR_CD_PAYSTEP", this.ccfFR_CD_PAYSTEP.form.CDTextBox.value);
		//this.dsSelect.setColumn(0, "TO_CD_PAYSTEP", this.ccfTO_CD_PAYSTEP.form.CDTextBox.value);
		//this.dsSelect.setColumn(0, "DS_HNAME", this.edtDS_HNAME.value);
		//this.dsSelect.setColumn(0, "YN_ANNUITY", this.cboYN_ANNUITY.value);
		//this.dsSelect.setColumn(0, "YN_MEDIC", this.cboYN_MEDIC.value);
		//this.dsSelect.setColumn(0, "YN_HIRE", this.cboYN_HIRE.value);
		
		
		this.dsSelect.setColumn(0, "ORDER_BY", this.dsSearch.getColumn(0, "ORDER_BY"));
		this.dsSelect.setColumn(0, "CD_ALLOWS", cdAllows.join(','));
		this.dsSelect.setColumn(0, "TY_SALARY", this.dsSearch.getColumn(0, "TY_SALARY"));
		this.dsSelect.setColumn(0, "SN_SALARY", this.dsSearch.getColumn(0, "SN_SALARY"));
		this.dsSelect.setColumn(0, "FR_SALARY", this.dsSearch.getColumn(0, "FR_SALARY"));
		this.dsSelect.setColumn(0, "TO_SALARY", this.dsSearch.getColumn(0, "TO_SALARY"));
		this.dsSelect.setColumn(0, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));
		this.dsSelect.setColumn(0, "CD_ORG1", this.dsSearch.getColumn(0, "CD_ORG1"));
		this.dsSelect.setColumn(0, "ID_SABUN", this.dsSearch.getColumn(0, "ID_SABUN"));
		this.dsSelect.setColumn(0, "CD_JOBTYPE", this.dsSearch.getColumn(0, "CD_JOBTYPE"));
		this.dsSelect.setColumn(0, "CD_PAYSTEP", this.dsSearch.getColumn(0, "CD_PAYSTEP"));
		this.dsSelect.setColumn(0, "CD_POSITION", this.dsSearch.getColumn(0, "CD_POSITION"));
		this.dsSelect.setColumn(0, "YN_ANNUITY", this.dsSearch.getColumn(0, "YN_ANNUITY"));
		this.dsSelect.setColumn(0, "YN_HIRE", this.dsSearch.getColumn(0, "YN_HIRE"));
		this.dsSelect.setColumn(0, "YN_HEALTH", this.dsSearch.getColumn(0, "YN_HEALTH"));

		var strSvcId    = "select";
		var strSvcType  = "grid";
		var inProc		= "_dsProc";
		var inData      = "select=dsSelect";
		var outData     = "dsList=select0";
		var strArg      = "";
		var callBackFnc = "fnCallback";
		
		this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
							strSvcType , 	// trabsaction을 요청할 구분
							inProc,			// Procedure 정보 Dataset 이름
							inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
							outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
							strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
							callBackFnc); // 통신방법 정의 [생략가능]
	}, 1);
	*/
};

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnValidate = function() {

	if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
		this.fnVaidateCallback = function() {
			this.this.ccfCD_CORP.form.CDTextBox.setFocus();
		}
		this.gfnAlert("법인코드를 입력하세요.");
		return false;
	}

	if (this.gfnIsNull(this.ctclFR_YM_SALARY.form.TextBox.value)) {
		this.fnVaidateCallback = function() {
			this.this.ctclFR_YM_SALARY.form.TextBox.setFocus();
		}
		this.gfnAlert("급여년월 시작월을 입력하세요.");
		return false;
	}

	if (this.gfnIsNull(this.ctclTO_YM_SALARY.form.TextBox.value)) {
		this.fnVaidateCallback = function() {
			this.this.ctclTO_YM_SALARY.form.TextBox.setFocus();
		}
		this.gfnAlert("급여년월 종료월을 입력하세요.");
		return false;
	}

	if (this.ctclFR_YM_SALARY.form.TextBox.value > this.ctclTO_YM_SALARY.form.TextBox.value) {
		this.fnVaidateCallback = function() {
			this.this.ctclFR_YM_SALARY.form.TextBox.setFocus();
		}
		this.gfnAlert("시작월이 종료월보다 클 수 없습니다.");
		return false;
	}
		
	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg, args) {
	if (svcID == "select") {
		
		this.gfnGridAfterSelect(this.dxGrid);
		
		if(this.dsList.getRowCount() > 0){
			this.btnSalaryBaseInfo.set_enable(true);
		}else{
			this.btnSalaryBaseInfo.set_enable(false);
		}
	} else if(svcID == "selectIncomeSubstList") {
		//this.FormBtns.Select.click();
	} else if (svcID == "authform") {
		if (this.dsAuthForm.rowcount > 0) {
			
			// 폼 정보
			this.objForm.CD_MODULE = this.dsAuthForm.getColumn(0, "CD_MODULE");
			this.objForm.ID_FORM = this.dsAuthForm.getColumn(0, "ID_FORM");
			this.objForm.NM_FORM = this.dsAuthForm.getColumn(0, "NM_FORM");
			this.objForm.ID_GROUP = this.dsAuthForm.getColumn(0, "ID_GROUP");
			this.objForm.GR_SEARCH = this.dsAuthForm.getColumn(0, "GR_SEARCH");
			this.objForm.TY_AUTH = this.dsAuthForm.getColumn(0, "TY_AUTH");
			this.objForm.DS_FORM = this.dsAuthForm.getColumn(0, "DS_FORM");
			this.objForm.CD_ROLE = this.dsAuthForm.getColumn(0, "CD_ROLE");
			this.objForm.TY_MENU = this.dsAuthForm.getColumn(0, "TY_MENU");
			this.objForm.DS_PARAM = this.dsAuthForm.getColumn(0, "DS_PARAM");
			
			// 버튼 정보
			this.objForm.BtnInfo = [];
			for(var i = 0; i < this.dsBtnInfo.rowcount; i++) {
				var json = {};
				json.ID_BUTTON = this.dsBtnInfo.getColumn(i, "ID_BUTTON");
				json.DS_BUTTON = this.dsBtnInfo.getColumn(i, "DS_BUTTON");
				json.TY_BUTTON = this.dsBtnInfo.getColumn(i, "TY_BUTTON");
				json.RM_BUTTON = this.dsBtnInfo.getColumn(i, "RM_BUTTON");
				json.YN_VISIBLE = this.dsBtnInfo.getColumn(i, "YN_VISIBLE");
				json.YN_ENABLED = this.dsBtnInfo.getColumn(i, "YN_ENABLED");
				json.YN_QUERYX = this.dsBtnInfo.getColumn(i, "YN_QUERYX");
				json.YN_UPDATEBLOCK = this.dsBtnInfo.getColumn(i, "YN_UPDATEBLOCK");
				json.SN_ORDER = this.dsBtnInfo.getColumn(i, "SN_ORDER");
				this.objForm.BtnInfo.push(json);
			}
			
			var json = this.gfnArgsToJson(args);
			if (json.type == "popup" || json.type == "dialog") {	
				if(this.objForm.TY_MENU == "Dialog") {
					json.type = "dialog";
				}				
				this.objForm.CD_MODULE = json.cd_module;
				this.objForm.ID_FORM = json.id_form;
				this.objForm.POP_WIDTH = this.gfnIsNull(json.width) ? 0: nexacro.toNumber(json.width);
				this.objForm.POP_HEIGHT = this.gfnIsNull(json.height) ? 0: nexacro.toNumber(json.height);
				this.objForm.POP_CALLBACK = this.gfnIsNull(json.callback) ? "": json.callback;
				this.objForm.POP_ARGS = json;
				
				this.gfnCallPopup(this.objForm, json.type);
			} 
			else if (json.type == "ext") {
				// 외부 다이렉트 화면 접근
				var func = this.objApp.gvMainFrame.form.lookupFunc(json.callback);
				if (func != null) {
					func.call(this.objForm);
				}
			}
			else {
				this.gfnCallNew(this.objForm);
			}
		}
	} else if (svcID == "combo") {
		this.cboDS_EMPTYPE.set_index(0);
	}
};

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {

 	switch(id) {
		case "ccfCD_CORP": // 법인코드
			dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
			dsUserParam.setColumn(nrow, "CD_DEPT", this.AuthClient.CD_DEPT);
			break;
		
		case "ccfCD_DEPT"://부서코드
			if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
				this.fnBeforeUserCallback = function() {
						this.ccfCD_CORP.form.CDTextBox.setFocus();
					}
					this.gfnAlert("법인코드를 입력하세요.", "fnBeforeUserCallback");
					return false;
			}
			dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
			dsUserParam.setColumn(nrow, "CD_DEPT", this.AuthClient.CD_DEPT); 
			dsUserParam.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
			dsUserParam.setColumn(nrow, "YN_CURRENT", "");
			break;
			
		case "ccfID_SABUN": //사번
			if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
				this.fnBeforeUserCallback = function() {
						this.ccfCD_CORP.form.CDTextBox.setFocus();
					}
					this.gfnAlert("법인코드를 입력하세요.", "fnBeforeUserCallback");
					return false;
			}
 			dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
 			dsUserParam.setColumn(nrow, "CD_DEPT", this.ccfCD_DEPT.form.CDTextBox.value);
 			dsUserParam.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
			break;
		
		case "ccfCD_JOBTYPE": //직종
 			dsUserParam.setColumn(nrow, "CD_PREFIX", "EB");
			break;
		case "ccfCD_POSITION": //직위
 			dsUserParam.setColumn(nrow, "CD_PREFIX", "ED");
			break;			
		default:
 	}
	
 	return true;
};

this.codefind_AfterCDTextChanged = function (id, codeFindData){
	if (id == "ccfCD_CORP") {	
		this.ccfCD_DEPT.form.CDTextBox.set_value("");	
		this.ccfCD_DEPT.form.DSTextBox.set_value("");
		this.ccfID_SABUN.form.CDTextBox.set_value("");	
		this.ccfID_SABUN.form.DSTextBox.set_value("");		
	}	
	this.fnSearchInit();
};
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
//  this.divData_objGrid_oncelldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
// {
// 	param ={
// 				 YM_SALARY:this.ctclYM_BASE.form.TextBox.value,
// 				 TY_SALARY:this.cboTY_SALARY.value,
// 				 SN_SALARY:this.cboSN_SALARY.value,
// 				 CD_CORP:this.ccfCD_CORP.form.CDTextBox.value,
// 				 DS_CORP:this.ccfCD_CORP.form.DSTextBox.value,
// 				 ID_SABUN:this.dsList.getColumn(this.dsList.rowposition, "ID_SABUN"),
// 				 DS_HNAME:this.dsList.getColumn(this.dsList.rowposition, "DS_HNAME"),
// 			};
// 				
// 	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DAU_BASEINFO", "급여일반정보", param);
// };
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {
	if(e.pretext != e.posttext) {
		// 폼상태 초기화
		this.gfnSetFormStatus(this);	
		this.gfnGridClear(this.dxGrid);
	}
};

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};

//소득내역/결제내역
this.fnSelectIncomesubstList = function() {
	if(!this.fnValidate()) return;
	
	this.dsSelectIncomeSubst = new Dataset();
	this.dsSelectIncomeSubst.clearData();
	this.dsSelectIncomeSubst.addRow();

	var strSvcId    = "selectIncomeSubstList";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "selectIncomeSubstList=dsSelectIncomeSubst";
	var outData     = "dsIncomeSubstList=selectIncomeSubstList0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc ); // 통신방법 정의 [생략가능]
};

//급여기초정보
this.fnSalaryBaseInfo = function(){ 
	var param ={
				 YM_SALARY:this.divData.form.ctclFR_YM_SALARY.value,
				 TY_SALARY:this.divData.form.cboTY_SALARY.value,
				 SN_SALARY:this.divData.form.cboSN_SALARY.value,	
				 CD_CORP:this.ccfCD_CORP.form.CDTextBox.value,
				 DS_CORP:this.ccfCD_CORP.form.DSTextBox.value,
				 ID_SABUN:this.dsList.getColumn(this.dsList.rowposition, "ID_SABUN"),
				 DS_HNAME:this.dsList.getColumn(this.dsList.rowposition, "DS_HNAME"),
				};
				
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DAU_SALARYBASE", "급여기초정보", param);
};

 this.fnMenuOpen = function(cd_module, id_form, nm_form, objArg) {
	var authArg = "";
	
	var id_win = cd_module + "#" + id_form;
	var winid = this.objApp.gdsOpenMenu.lookup("ID_WIN", id_win, "ID_WIN");

	if (!this.gfnIsNull(winid))
	{
		if (this.objApp.gvFormLimit == 1 && this.objApp.gvMdiFrame.form.isActiveFrame(winid) == true)
		{
			return false;
		}
		else if (this.objApp.gvFormLimit > 1 && this.objApp.gvFormLimit <= this.objApp.gvMdiFrame.form.isActiveFrameCount(winid)) {
			this.objApp.gvMdiFrame.form.isActiveFrame(winid);
			alert(this.objApp.gvFormLimit + "개 초과하여 같은 화면을 열수 없습니다");
			return false;			
		}
	}
		
	//열린메뉴 체크( application.gvMax = 8)	
	if( this.objApp.gvMax <= this.objApp.gdsOpenMenu.getRowCount() ){
				  
		this.gfnAlert(this.objApp.gvMax +"개 초과하여 화면을 열수 없습니다");
		return false;
	}
	
	this.objForm = {
		CD_MODULE: cd_module,
		ID_FORM: id_form,
		NM_FORM: nm_form,
		DS_FORM: "",
		ID_GROUP: "",
		GR_SEARCH: "",
		TY_AUTH: "",
		CD_ROLE: "",
		Args : objArg
	};

	// 인증정보
	this.fnAuthForm(this, cd_module, id_form, authArg);
};

this.fnAuthForm = function(objForm, cd_module, id_form, strArg) 
{
	if(strArg == null) strArg = "";
	this.objForm.CUR_FORM = objForm;
	
	var dsUser = this.objApp.gdsUserInfo;
	this._dsParamAuthForm.clearData();
	this._dsParamAuthForm.addRow();
	this._dsParamAuthForm.setColumn(0, "ID_USER", dsUser.getColumn(0, "ID_USER"));
	this._dsParamAuthForm.setColumn(0, "CD_DEPT", dsUser.getColumn(0, "CD_DEPT"));
	this._dsParamAuthForm.setColumn(0, "CD_CORP", dsUser.getColumn(0, "CD_CORP"));
	this._dsParamAuthForm.setColumn(0, "ID_FORM", id_form);
	this._dsParamAuthForm.setColumn(0, "CD_MODULE", cd_module);
	
	this._dsParamBtnInfo.clearData();
	this._dsParamBtnInfo.addRow();
	this._dsParamBtnInfo.setColumn(0, "CD_CORP", dsUser.getColumn(0, "CD_CORP"));
	this._dsParamBtnInfo.setColumn(0, "CD_DEPT", dsUser.getColumn(0, "CD_DEPT"));
	this._dsParamBtnInfo.setColumn(0, "ID_SABUN", dsUser.getColumn(0, "ID_USER"));
	this._dsParamBtnInfo.setColumn(0, "CD_MODULE", cd_module);
	this._dsParamBtnInfo.setColumn(0, "ID_FORM", id_form);
	
	var strSvcId    = "authform";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "dsAuthForm=_dsParamAuthForm dsBtnInfo=_dsParamBtnInfo";
	var outData     = "dsAuthForm=dsAuthForm0 dsBtnInfo=dsBtnInfo0"; //"dsList=dsLogin1 dsList2=dsLogin2";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};

this.fnSetGridColunm = function (){

	var objDataSet = this.dsIncomeSubstList;

	var ncol1 = 0;
	var ncol2 = 0;
	var ncol3 = 1;
	var cols = 0; // merge 되면서 cell index가 조정된다.
	this.dxGrid.set_enableredraw(false);
	this.dsList.set_enableevent(false);

	this.gfnGridInit(this.dxGrid, this.dsList, "DA", "DAU_QUERYSALARY");


	

	for (var i = 0; i < this.dsIncomeSubstList.rowcount; i++) {
		if(this.dsIncomeSubstList.getColumn(i, "YN_GUBUN") == 1){
			var GUBUN1 = this.dsIncomeSubstList.getColumn(i, "GUBUN1");
			var objColinfo = new ColumnInfo();
			objColinfo.set_type( "INT" );
			objColinfo.set_size( 256 );

			this.dsList.addColumn(objDataSet.getColumn(i,"CD_ALLOW"),objColinfo);
			
			var gubunCd = ""
			if(GUBUN1 == "소득"){
				gubunCd = "S"
			}else if(GUBUN1 == "공제"){
				gubunCd = "G"
			}

			ncol1 = this.dxGrid.appendContentsCol();		
			this.dxGrid.setFormatColProperty(ncol1, "size", 90);
			this.dxGrid.setCellProperty("head", ncol1, "text", objDataSet.getColumn(i,"DS_ALLOW"));		
			this.dxGrid.setCellProperty("body", ncol1, "displaytype", "number");
			this.dxGrid.setCellProperty("body", ncol1, "text", "bind:" + gubunCd + objDataSet.getColumn(i,"CD_ALLOW"));
			// 총합계 추가
			this.dxGrid.setCellProperty("summ", ncol1, "displaytype", "number");
			this.dxGrid.setCellProperty("summ", ncol1 , "text", "expr:dataset.getSum('" + gubunCd + objDataSet.getColumn(i,"CD_ALLOW") + "')");

			var rtn = this.dxGrid.mergeContentsCell("head", 0, ncol1, 0, ncol1+1, ncol1 - cols, false);
			if(rtn > -1) {
				this.dxGrid.setCellProperty("head", rtn, "text", objDataSet.getColumn(i,"DS_ALLOW"));
				cols = cols + 1;
			}
		}
	}

	this.dxGrid.set_enableredraw(true);
	this.dsList.set_enableevent(true);
	//this.setWaitCursor(false);

}]]></Script>
    <Bind>
      <BindItem id="item0" compid="divData.form.cboSort" propid="value" datasetid="dsSearch" columnid="DS_ORDERBY"/>
      <BindItem id="item1" compid="divData.form.cboTY_SALARY" propid="value" datasetid="dsSearch" columnid="TY_SALARY"/>
      <BindItem id="item2" compid="divData.form.ctclFR_YM_SALARY.form.TextBox" propid="value" datasetid="dsSearch" columnid="FR_SALARY"/>
      <BindItem id="item3" compid="divData.form.ctclTO_YM_SALARY.form.TextBox" propid="value" datasetid="dsSearch" columnid="TO_SALARY"/>
      <BindItem id="item5" compid="divData.form.cboYN_ANNUITY" propid="value" datasetid="dsSearch" columnid="YN_ANNUITY"/>
      <BindItem id="item6" compid="divData.form.cboYN_MEDIC" propid="value" datasetid="dsSearch" columnid="YN_HEALTH"/>
      <BindItem id="item7" compid="divData.form.cboYN_HIRE" propid="value" datasetid="dsSearch" columnid="YN_HIRE"/>
      <BindItem id="item8" compid="divData.form.ccfCD_DEPT.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_ORG1"/>
      <BindItem id="item9" compid="divData.form.ccfCD_JOBTYPE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_JOBTYPE"/>
      <BindItem id="item10" compid="divData.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item11" compid="divData.form.ccfID_SABUN.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="ID_SABUN"/>
      <BindItem id="item13" compid="divData.form.ccfCD_PAYSTEP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_PAYSTEP"/>
      <BindItem id="item4" compid="divData.form.ccfCD_POSITION.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_POSITION"/>
      <BindItem id="item12" compid="divData.form.cboSN_SALARY" propid="value" datasetid="dsSearch" columnid="SN_SALARY"/>
      <BindItem id="item14" compid="divData.form.ccfID_SABUN.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_HNAME"/>
      <BindItem id="item15" compid="divData.form.cboDS_EMPTYPE" propid="value" datasetid="dsSearch" columnid="DS_EMPTYPE"/>
    </Bind>
  </Form>
</FDL>
