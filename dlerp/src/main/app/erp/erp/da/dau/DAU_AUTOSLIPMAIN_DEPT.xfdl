<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="DAU_AUTOSLIPMAIN_DEPT" width="1280" height="720" titletext="부서현장별급여정보" onload="form_onload">
    <Layouts>
      <Layout height="720" mobileorientation="landscape" width="1280">
        <Div id="divSearch" taborder="0" left="0" top="0" height="46.0" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static id="staYM_SALARY" taborder="0" text="지급년월" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYM_SALARY" taborder="1" left="staYM_SALARY:0.0" top="10.0" width="80" height="24.0" url="cmm::cmmCalMM.xfdl" onchanged="fnSearchInit"/>
              <Static id="staTY_SALARY" taborder="2" text="지급구분" left="ctclYM_SALARY:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Combo id="cboTY_SALARY" taborder="3" left="staTY_SALARY:0.0" top="10.0" width="60" height="24.0" innerdataset="dsTY_SALARY" datacolumn="VALUE" codecolumn="CODE" index="0" value="S" onitemchanged="fnSearchInit" readonly="false" text="급여"/>
              <Combo id="cboSN_SALARY" taborder="4" left="cboTY_SALARY:0.0" top="10.0" width="40" height="24.0" innerdataset="dsSN_SALARY" datacolumn="VALUE" codecolumn="CODE" index="-1" value="1" onitemchanged="fnSearchInit" text="급여" readonly="false"/>
              <Static id="staCD_CORP" taborder="5" text="법인" left="cboSN_SALARY:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_CORP" CDTextWidth="50" taborder="6" left="staCD_CORP:0.0" top="10.0" width="179" height="24.0" url="cmm::cmmCodeFind.xfdl" CodeFindName="DAX_CFCORP2" BeforeUserDataSetParam="fnBeforeUserDataSetParam" AfterCDTextChanged="fnAfterCDTextChanged"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="1" left="0" top="divSearch:5" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Bind>
      <BindItem id="item1" compid="divSearch.form.ctclYM_SALARY.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_SALARY"/>
    </Bind>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);
	this.gfnFormInfo(this);
	// ---------------------------//

	this.fnSetButton();
	//this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	//지급년월
	this.ctclYM_SALARY.form.TextBox.set_value(this.gfnGetDate().substr(0,6));
	
	// 법인코드 및 법인명 기본세팅
	this.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);
    this.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP);
	
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
	// this.FormBtns.Add.set_enable(false);
	// this.FormBtns.Del.set_enable(false);
};

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	//지급년월
	this.ctclYM_SALARY = this.divSearch.form.ctclYM_SALARY;
	//지급구분
	this.cboTY_SALARY = this.divSearch.form.cboTY_SALARY;
	this.cboSN_SALARY = this.divSearch.form.cboSN_SALARY;
	//법인
	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;
	
	this.dxGrid = this.divData.form.objGrid;

	this.grSearch = this.FormInfo.GR_SEARCH;					          // 권한
	this.cdGroup = this.AuthClient.CD_GROUP;					          // 그룹코드
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.gfnGridInit(this.dxGrid, this.dsList, "DA", "DAU_SALARY_AUTOSLIPMAIN");
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

};

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {

//	if (!this.fnSelectValidate()) return false;

//	this.gfnGridBeforeSelect(this.dxGrid);

//	this.dsSelect.clearData();
//	this.dsSelect.addRow();

//	this.dsSelect.setColumn(0, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value); // 법인
//  this.dsSelect.setColumn(0, "FR_START", this.divSearch.form.calFrStartSure.value);
//	this.dsSelect.setColumn(0, "TO_START", this.divSearch.form.calToStartSure.value);

//	var strSvcId    = "select";
//	var strSvcType  = "grid";
//	var inProc		= "_dsProc";
//	var inData      = "select=dsSelect";
//	var outData     = "dsList=select0";
//	var strArg      = "";
//	var callBackFnc = "fnCallback";

//	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
//						strSvcType , 	// trabsaction을 요청할 구분
//						inProc,			// Procedure 정보 Dataset 이름
//						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
//						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
//						strArg, 	    // 입력갑스로 보낼 arguments, strFormData="20120607"
//						callBackFnc); // 통신방법 정의 [생략가능]
};

/*
 *	입력 버튼
 */
this.fnAdd = function() {
//	this.gfnGridAdd(this.dxGrid);
};

/*
 *	삭제 버튼
 */
this.fnDel = function() {
//	this.gfnGridDel(this.dxGrid);
};

/*
 *	저장 버튼
 */
this.fnSave = function() {
//  그리드 필수항목 체크
//	if (!this.gfnGridValidate(this.dxGrid)) return;

//	this.dxGrid.updateToDataset();

//	this.dsInsert.clearData();
//	this.dsUpdate.clearData();
//	this.dsDelete.clearData();

//	for (var i = 0; i < this.dsList.rowcount; i++) {
//		var flag = this.gfnGetFlag(this.dsList, i);
//		switch(flag) {
//			case "I":
//				var nrow = this.dsInsert.addRow();

//				this.dsInsert.setColumn(nrow, "TY_SAVE", flag);
//				this.dsInsert.setColumn(nrow, "ID_INSERT", this.AuthClient.ID_USER);
//				break;
//			case "U":
//				var nrow = this.dsUpdate.addRow();

//				this.dsUpdate.setColumn(nrow, "TY_SAVE", flag);
//				this.dsUpdate.setColumn(nrow, "ID_INSERT", this.AuthClient.ID_USER);
//				break;
//			case "D":
//				var nrow = this.dsDelete.addRow();

//				this.dsDelete.setColumn(nrow, "TY_SAVE", flag);
//				this.dsDelete.setColumn(nrow, "ID_INSERT", this.AuthClient.ID_USER);
//				break;
//		}
//	}

//	if (this.dsInsert.rowcount == 0 && this.dsUpdate.rowcount == 0 && this.dsDelete.rowcount == 0) return;

//	var strSvcId    = "save";
//	var strSvcType  = "save";
//	var inProc		= "_dsProc";
//	var inData      = "insert=dsInsert update=dsUpdate delete=dsDelete";
//	var outData     = "";
//	var strArg      = "";
//	var callBackFnc = "fnCallback";

//	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
//						strSvcType , 	// transaction을 요청할 구분
//						inProc,			// Procedure 정보 Dataset 이름
//						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
//						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
//						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
//						callBackFnc); // 통신방법 정의 [생략가능]
};

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
this.fnSelectValidate = function() {

	var validate = true;
	
	if (this.gfnIsNull(this.ctclYM_SALARY.form.TextBox.value)) {
		validate = false;
		this.fnVaidateCallback = function() {
			this.ctclYM_SALARY.form.TextBox.setFocus();
		}
		this.gfnAlert("지급년월을 입력하세요.", "fnVaidateCallback");
	}
	
	if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
		validate = false;
		this.fnVaidateCallback = function() {
			this.ccfCD_CORP.form.CDTextBox.setFocus();
		}
		this.gfnAlert("법인코드를 입력하세요.", "fnVaidateCallback");
	}

	return validate;
};
/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg, args)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {

 	switch(id) {
		case "ccfCD_CORP": // 법인코드
			dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
			dsUserParam.setColumn(nrow, "CD_DEPT", this.AuthClient.CD_DEPT);
			break;

		default:
 	}
	
 	return true;
}

this.fnAfterCDTextChanged = function(id, codeFindData) {
	this.fnSearchInit();
};

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/

 /************************************************************************
 * 확장버튼 이벤트
 ************************************************************************/
 
 /************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		// 폼상태 초기화
		this.gfnSetFormStatus(this);
		this.gfnGridClear(this.dxGrid);
	}
};
]]></Script>
    <Objects>
      <Dataset id="dsList" onrowposchanged="dsList_onrowposchanged"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DAUPR_SALARY_AUTOSLIPMAIN_DEPT_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">dsAuthForm</Col>
            <Col id="SP">DZZPR_DOTNET_AUTHORITYFORM_SELECT_NEW</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_SALARY">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">S</Col>
            <Col id="VALUE">급여</Col>
          </Row>
          <Row>
            <Col id="VALUE">상여</Col>
            <Col id="CODE">B</Col>
          </Row>
          <Row>
            <Col id="VALUE">성과급</Col>
            <Col id="CODE">X</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSN_SALARY">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">1</Col>
            <Col id="VALUE">1</Col>
          </Row>
          <Row>
            <Col id="VALUE">2</Col>
            <Col id="CODE">2</Col>
          </Row>
          <Row>
            <Col id="CODE">3</Col>
            <Col id="VALUE">3</Col>
          </Row>
          <Row>
            <Col id="CODE">4</Col>
            <Col id="VALUE">4</Col>
          </Row>
          <Row>
            <Col id="CODE">5</Col>
            <Col id="VALUE">5</Col>
          </Row>
          <Row>
            <Col id="CODE">6</Col>
            <Col id="VALUE">6</Col>
          </Row>
          <Row>
            <Col id="CODE">7</Col>
            <Col id="VALUE">7</Col>
          </Row>
          <Row>
            <Col id="CODE">8</Col>
            <Col id="VALUE">8</Col>
          </Row>
          <Row>
            <Col id="CODE">9</Col>
            <Col id="VALUE">9</Col>
          </Row>
          <Row>
            <Col id="CODE">10</Col>
            <Col id="VALUE">10</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="_dsParamAuthForm">
        <ColumnInfo>
          <Column id="ID_USER" type="STRING" size="256"/>
          <Column id="CD_DEPT" type="STRING" size="256"/>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="ID_FORM" type="STRING" size="256"/>
          <Column id="CD_MODULE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="_dsParamBtnInfo">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="CD_DEPT" type="STRING" size="256"/>
          <Column id="ID_SABUN" type="STRING" size="256"/>
          <Column id="CD_MODULE" type="STRING" size="256"/>
          <Column id="ID_FORM" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsAuthForm"/>
      <Dataset id="dsBtnInfo"/>
    </Objects>
  </Form>
</FDL>
