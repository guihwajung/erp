<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="New Form" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0" top="0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="staDT_YYYYMM" taborder="0" text="조회년월" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYM_BASE" taborder="1" left="staDT_YYYYMM:0.0" top="10.0" width="80" height="24.0" url="cmm::cmmCalMM.xfdl"/>
              <Static id="staCD_DEPT" taborder="2" text="부서" left="ctclYM_BASE:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_DEPT" CDTextWidth="80" taborder="3" left="staCD_DEPT:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DAX_CFDEPT"/>
              <Static id="staCD_CORP00" taborder="4" text="법인" left="ccfCD_DEPT:0.0" top="10.0" width="92.0" height="24.0" onclick="Common_onclick" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_CORP" CDTextWidth="70" taborder="5" left="staCD_CORP00:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" onclick="Common_onclick" text="" CodeFindName="DAX_CFCORP_CODEFIND"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0" onheadclick="divData_objGrid_onheadclick"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.fv_nSize = 60;

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	var today = this.gfnGetDate();
	this.dsSearch.setColumn(0, "YM_BASE", today.substr(0,6));
	

	this.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);	
	this.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP);		
	this.ccfCD_DEPT.form.CDTextBox.set_value(this.AuthClient.CD_DEPT);
	this.ccfCD_DEPT.form.DSTextBox.set_value(this.AuthClient.DS_DEPT);	
	

	//20210708
	//GR_SEARCH = 1인 경우에 법인 ENABLE성명 ENABLE
	//GR_SEARCH = 2인 경우에 법인 DISABLE 성명 ENABLE
	//GR_SEARCH > 2인 경우에 법인 DISABLE 성명 DISABLE 
	if(this.FormInfo.GR_SEARCH == "1"){
		this.ccfCD_CORP.set_enable(true);
	}
	else if(this.FormInfo.GR_SEARCH == "2"){
		this.ccfCD_CORP.set_enable(false);
	}
	else if(this.FormInfo.GR_SEARCH > "2"){
		this.ccfCD_CORP.set_enable(false);
	}
	

	
	//헤더 뭐지
	this.divData.form.objGrid.mergeContentsCell( "head", 0, 47, 0, 53, 47, false); //6주
	this.divData.form.objGrid.mergeContentsCell( "head", 0, 39, 0, 45, 39, false); //5주
	this.divData.form.objGrid.mergeContentsCell( "head", 0, 31, 0, 37, 31, false); //4주
	this.divData.form.objGrid.mergeContentsCell( "head", 0, 23, 0, 29, 23, false); //3주
	this.divData.form.objGrid.mergeContentsCell( "head", 0, 15, 0, 21, 15, false); //2주
	this.divData.form.objGrid.mergeContentsCell( "head", 0, 7, 0, 13, 7, false); //1주		
	
	this.fnSetGridTitleInit();
	this.fv_nSize = this.dxGrid.getFormatColProperty(this.dxGrid.getBindCellIndex("body", "DS_11"), "size");
	trace("this.fv_nSize", this.fv_nSize);
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {

};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {	
	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;
	this.ccfCD_DEPT = this.divSearch.form.ccfCD_DEPT;
	
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";

	this.ccfCD_DEPT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_DEPT.AfterCDTextChanged = "fnAfterCDTextChanged"; 
	
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DA", "DAG_WORKDAY_DEPT");
	
	//this.dxGrid.set_selecttype("cell");	
	//this.dxGrid.addEventHandler("onselectchanged", this.fnGrid_RowCellChanged, this);
	//this.dxGrid.addEventHandler("oncelldblclick", this.fnGrid_CellDblclick, this);

	
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("YM_BASE", "string");
	this.dsSelect.addColumn("CD_DEPT", "string");
	this.dsSelect.addColumn("GR_SEARCH", "string");
	this.dsSelect.addColumn("GR_CORP", "string");
	this.dsSelect.addColumn("GR_DEPT", "string");
	this.dsSelect.addColumn("ID_USER", "string");
}


/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));	
	this.dsSelect.setColumn(0, "YM_BASE", this.dsSearch.getColumn(0, "YM_BASE"));
	this.dsSelect.setColumn(0, "CD_DEPT", this.dsSearch.getColumn(0, "CD_DEPT"));	
	this.dsSelect.setColumn(0, "GR_SEARCH", this.FormInfo.GR_SEARCH);
	this.dsSelect.setColumn(0, "GR_CORP", this.AuthClient.CD_CORP);	
	this.dsSelect.setColumn(0, "GR_DEPT", this.AuthClient.CD_DEPT);
	this.dsSelect.setColumn(0, "ID_USER", this.AuthClient.ID_USER);
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsDay=select0 dsList=select1";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	
	
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	// 그리드 필수항목 체크
	
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;
	
	if (this.gfnIsNull(this.dsSearch.getColumn(0,"YM_BASE"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.ctclYM_BASE.form.TextBox.setFocus();
		}
		this.gfnAlert("조회년월을 입력하세요.", "fnVaidateCallback");
	}else if (this.gfnIsNull(this.dsSearch.getColumn(0,"CD_DEPT"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.ccfCD_DEPT.form.CDTextBox.setFocus();
		}
		this.gfnAlert("부서를 입력하세요.", "fnVaidateCallback");
	}
	
	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
		
		this.fnSetGridHead();
		
		//this.fnMakeSum();
		
	}
}



/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	
	if(id == "ccfCD_CORP") {
		dsUserParam.setColumn(nrow, "CD_CORP", this.AuthClient.CD_CORP);
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
	}	
	else if (id == "ccfCD_DEPT") {
		if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
			this.gfnAlert("법인코드를 먼저 입력하세요.");
			this.ccfCD_CORP.form.CDTextBox.setFocus();
			return false;
		}
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "CD_DEPT", this.AuthClient.CD_DEPT);
		dsUserParam.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
		dsUserParam.setColumn(nrow, "YN_CURRENT", "N");
	}	
		
	return true;
};


this.fnAfterCDTextChanged = function(id, codeFindData) {
	var arr = codeFindData; 
	
	if(id == "ccfCD_CORP") {
		this.ccfCD_DEPT.form.fnCodeFindClear();
	}else if(id == "ccfCD_DEPT") {
	}
};

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);			
	}
};

this.fnSetGridHead = function(){

	this.fnSetGridTitleInit();
	
	this.dsDay.set_filterstr("DT_DAY != null");
	this.dsDay.set_keystring("S:DT_DAY");

	var nCellIdx = 19;
	for(var i=0;i<this.dsDay.rowcount;i++){
		var sDT_DAY = this.dsDay.getColumn(i, "DT_DAY");
		if(this.gfnIsNull(sDT_DAY)) continue;
		
		var sTITLE = this.gfnRight(sDT_DAY, 2);
		nCellIdx++;
		this.divData.form.objGrid.setCellProperty("head", nCellIdx, "text", sTITLE);
	}
	
	this.dsDay.set_filterstr();
	
	this.fnSetGridCol();
}

this.fnSetGridTitleInit = function(){
	for(var i=20;i<=61;i++){
		this.divData.form.objGrid.setCellProperty("head", i, "text", "");
	}
}

//this.fnMakeSum = function(){
// 	var nWORK_DAY = 0;
// 	var nWORK_TIME = 0;
// 	var nWEEK_AVG = 0;
// 	
// 	this.dsList.set_enableevent(false);
//  	for(var i=0;i<this.dsList.rowcount;i++){
// 	
// 		nWORK_DAY = 0;
// 		nWORK_TIME = 0;
// 		nWEEK_AVG = 0;
// 		
// 		for (var nColIdx=0;nColIdx<this.dsList.getColCount();nColIdx++) {
// 			var sColName = this.dsList.getColumnInfo(nColIdx).name;
// 			var sColVal = this.gfnNvl(this.dsList.getColumn(i, nColIdx),"");
// 			if(sColName.indexOf("DS_") != -1){
// 				var bRtn = isNaN(this.gfnRight(sColName,2));
// 				if(!bRtn){
// 					//trace("sColName", sColName);
// 					//trace("sColVal", sColVal);	
// 					
// 					if(this.gfnRight(sColName,1) != "8"){
// 						if(sColVal != "00:00"){
// 							nWORK_DAY++;
// 						}
// 					}
// 				}
// 			}
// 		}
// 		nWORK_TIME = this.dsList.getColumn(i, "WORK_TIME");
// 		nWEEK_AVG = nexacro.round(nWORK_TIME/ 5, 0);
// 		
// 		//this.dsList.setColumn(i, "WORK_DAY", nWORK_DAY);
// 		this.dsList.setColumn(i, "WEEK_AVG", nWEEK_AVG);
//  	}
// 	this.dsList.set_enableevent(true);
//}



this.divData_objGrid_onheadclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
// 	trace("row", e.row);
 	//trace("cell", e.cell);
 	//trace("col", e.col);
};


this.fnSetGridCol = function(){
	var sYM_BASE = this.dsSearch.getColumn(0, "YM_BASE");
	var nMax = 0;
	for(var i=0;i<this.dsDay.rowcount;i++){
		var sDT_DAY = this.dsDay.getColumn(i, "DT_DAY");
		if(this.gfnIsNull(sDT_DAY)) continue;
		
		var sYY = this.gfnLeft(sDT_DAY, 6);
		
		if( sYY != sYM_BASE) continue;
		
		var sDS_WEEK = this.dsDay.getColumn(i, "DS_WEEK");
		if(nMax < parseInt(sDS_WEEK)){
			nMax = parseInt(sDS_WEEK);
		}
	}
	trace("nMax", nMax);
	this.fnSetGridColVisible(5, true);
	this.fnSetGridColVisible(6, true);
	for(var nWeek=nMax+1;nWeek<=6;nWeek++){
		this.fnSetGridColVisible(nWeek, false);
	}
}

this.fnSetGridColVisible = function(nWeek, bVisible){
	var nSize = 0;
	if(bVisible){
		nSize = this.fv_nSize;
	}
	
	this.divData.form.objGrid.set_enableredraw(false);
	if(nWeek == 5){
		//col   39 ~ 46
		for(var nCol = 39;nCol<=46;nCol++){
			this.dxGrid.setFormatColProperty(nCol, "size", nSize);
		}
	}
	if(nWeek == 6){
		//col   47 ~ 54
		for(var nCol = 47;nCol<=54;nCol++){
			this.dxGrid.setFormatColProperty(nCol, "size", nSize);
		}
	}
	this.divData.form.objGrid.set_enableredraw(true);
}

]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DAGPR_WORKINFO_DEPT_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="YM_BASE" type="STRING" size="256"/>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="DS_CORP" type="STRING" size="256"/>
          <Column id="CD_DEPT" type="STRING" size="256"/>
          <Column id="DS_DEPT" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="YM_BASE"/>
            <Col id="CD_CORP"/>
            <Col id="CD_DEPT"/>
            <Col id="DS_DEPT"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsDay">
        <ColumnInfo>
          <Column id="DT_DAY" type="string" size="32"/>
          <Column id="DS_WEEK" type="string" size="32"/>
          <Column id="DS_DAY" type="string" size="32"/>
          <Column id="SN_DAY" type="string" size="32"/>
          <Column id="WK_DAY" type="string" size="32"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ctclYM_BASE.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_BASE"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item2" compid="divSearch.form.ccfCD_CORP.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_CORP"/>
      <BindItem id="item3" compid="divSearch.form.ccfCD_DEPT.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_DEPT"/>
    </Bind>
  </Form>
</FDL>
