<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="DAG_FOODCOST" width="1280" height="720" titletext="식대관리" onload="form_onload">
    <Layouts>
      <Layout height="720" width="1280">
        <Div id="divSearch" taborder="0" left="0" top="0" height="78.0" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <!-- 법인 -->
              <Static id="staCD_CORP" taborder="4" text="법인" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_CORP" CDTextWidth="50" taborder="1" left="staCD_CORP:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" CodeFindName="DAX_CFCORP_CODEFIND"/>
              <!-- 근무년월 -->
              <Static id="staYM_WORK" taborder="8" text="근무년월" left="ccfCD_CORP:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfYM_WORK" taborder="9" left="staYM_WORK:0.0" top="10.0" width="88" height="24.0" url="cmm::cmmCalMM.xfdl"/>
              <!-- 부서 -->
              <Static id="staCD_DEPT" taborder="5" text="부서코드" left="ccfYM_WORK:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_DEPT" CDTextWidth="80" taborder="2" left="staCD_DEPT:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DAX_CFDEPT" enable="true"/>
              <!-- 성명 -->
              <Static id="staID_SABUN" taborder="3" text="성명" left="0.0" top="staCD_CORP:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfID_SABUN" CDTextWidth="90" taborder="0" left="staID_SABUN:0.0" top="staCD_CORP:10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" text="" CodeFindName="DAX_CFBASEINFO_ALL"/>
              <!-- 근무구분 -->
              <Static id="staCD_WORK" taborder="6" text="근무구분" left="ccfID_SABUN:0.0" top="staCD_CORP:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Combo id="cboCD_WORK" taborder="7" text="cbo00" left="staCD_WORK:0.0" top="staCD_CORP:10.0" width="88" height="24.0" innerdataset="dsCD_WORK" codecolumn="CD_CODE" datacolumn="DS_CODE"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="1" left="0" top="divSearch:5" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList" onrowposchanged="dsList_onrowposchanged"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DAGPR_FOODCOST_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DAGPR_FOODCOST_SAVE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="YM_WORK" type="STRING" size="256"/>
          <Column id="CD_DEPT" type="STRING" size="256"/>
          <Column id="ID_SABUN" type="STRING" size="256"/>
          <Column id="CD_WORK" type="STRING" size="256"/>
          <Column id="DS_CORP" type="STRING" size="256"/>
          <Column id="DS_DEPT" type="STRING" size="256"/>
          <Column id="DS_HNAME" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsCD_WORK">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">%</Col>
            <Col id="DS_CODE">전체</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">H</Col>
            <Col id="DS_CODE">휴일근로</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">O</Col>
            <Col id="DS_CODE">연장근로</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);
	this.gfnFormInfo(this);
	// ---------------------------//

	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	var today = this.gfnGetDate();
	
	//법인 셋팅
	this.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);
	this.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP);
	
	this.ccfYM_WORK.form.TextBox.set_value(today.substring(0,6));
	this.divSearch.form.cboCD_WORK.set_index(0);

	//this.FormBtns.Select.click();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {

};

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	//this.btnPayApply = this.gfnFormButtonAdd("PayApply", "fnPayApply");   //급여적용
	this.btnGetFoodCost = this.gfnFormButtonAdd("GetFoodCost", "fnGetFoodCost"); //식대내역 가져오기
};


/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;//법인
	this.ccfCD_DEPT = this.divSearch.form.ccfCD_DEPT;//부서
	this.ccfID_SABUN = this.divSearch.form.ccfID_SABUN;//사번
	this.ccfYM_WORK = this.divSearch.form.ccfYM_WORK;

	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	// 법인
	this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";	
	// 부서
	this.ccfCD_DEPT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_DEPT.AfterCDTextChanged = "fnAfterCDTextChanged";	
	// 성명
	this.ccfID_SABUN.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfID_SABUN.AfterCDTextChanged = "fnAfterCDTextChanged";		

	this.gfnGridInit(this.dxGrid, this.dsList, "DA", "DAG_FOODCOST");
	
	// 그리드 코드파인드 설정
	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
	
	// 그리드 코드파인드 값 변경
	this.dxGrid.AfterCDTextChanged = "fnGrid_AfterCDTextChanged";	
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("YM_WORK", "string");
	this.dsSelect.addColumn("CD_DEPT", "string");
	this.dsSelect.addColumn("ID_SABUN", "string");
	this.dsSelect.addColumn("CD_WORK", "string");
	this.dsSelect.addColumn("GR_SEARCH", "string");
	this.dsSelect.addColumn("TY_AUTH", "string");
	this.dsSelect.addColumn("GR_DEPT", "string");
	this.dsSelect.addColumn("ID_USER", "string");
	
	this.dsSave = new Dataset();
	this.dsSave.addColumn("TY_SAVE", "string");
	this.dsSave.addColumn("NO_SEQ", "int");
	this.dsSave.addColumn("ID_PERSON", "int");
	this.dsSave.addColumn("ID_SABUN", "string");
	this.dsSave.addColumn("DT_WORK", "string");
	this.dsSave.addColumn("CD_CORP", "string");
	this.dsSave.addColumn("CD_DEPT", "string");
	this.dsSave.addColumn("ID_REQUEST", "string");
	this.dsSave.addColumn("CD_WORK", "string");
	this.dsSave.addColumn("DS_TOTAL_WORK", "int");
	this.dsSave.addColumn("AM_WORK", "bigdecimal");
	this.dsSave.addColumn("DS_REMARK", "string");
	this.dsSave.addColumn("GR_SEARCH", "string");
	this.dsSave.addColumn("TY_AUTH", "string");
	this.dsSave.addColumn("GR_DEPT", "string");
	this.dsSave.addColumn("ID_USER", "string");

};

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if(!this.fnSelectValidate()) return;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();

	this.dsSelect.setColumn(0, "CD_CORP", this.gfnNvl(this.dsSearch.getColumn(0, "CD_CORP"),""));
	this.dsSelect.setColumn(0, "YM_WORK", this.gfnNvl(this.dsSearch.getColumn(0, "YM_WORK"),""));
	this.dsSelect.setColumn(0, "CD_DEPT", this.gfnNvl(this.dsSearch.getColumn(0, "CD_DEPT"),""));
	this.dsSelect.setColumn(0, "ID_SABUN", this.gfnNvl(this.dsSearch.getColumn(0, "ID_SABUN"),""));
	this.dsSelect.setColumn(0, "CD_WORK", this.gfnNvl(this.dsSearch.getColumn(0, "CD_WORK"),""));
	this.dsSelect.setColumn(0, "GR_SEARCH", this.FormInfo.GR_SEARCH);
	this.dsSelect.setColumn(0, "TY_AUTH", this.FormInfo.TY_AUTH);
	this.dsSelect.setColumn(0, "GR_DEPT", this.AuthClient.CD_DEPT);
	this.dsSelect.setColumn(0, "ID_USER", this.AuthClient.ID_USER);

	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	var nrow = this.gfnGridAdd(this.dxGrid);
	this.dsList.setColumn(nrow, "DT_WORK", this.gfnGetDate());
};

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
};

/*
 *	저장 버튼
 */
this.fnSave = function() {
	// 그리드 필수항목 체크
	if (!this.gfnGridValidate(this.dxGrid)) return;	

	this.dxGrid.updateToDataset();
	this.dsSave.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
			case "U":
			case "D":
				var nrow = this.dsSave.addRow();
				this.dsSave.setColumn(nrow, "TY_SAVE", flag);
				this.dsSave.setColumn(nrow, "NO_SEQ", (flag == "I" ? 0 : this.dsList.getColumn(i, "NO_SEQ")));
				this.dsSave.setColumn(nrow, "ID_PERSON", this.gfnNvl(this.dsList.getColumn(i, "ID_PERSON"),""));
				this.dsSave.setColumn(nrow, "ID_SABUN", this.gfnNvl(this.dsList.getColumn(i, "ID_SABUN"),""));
				this.dsSave.setColumn(nrow, "DT_WORK", this.gfnNvl(this.dsList.getColumn(i, "DT_WORK"),""));
				this.dsSave.setColumn(nrow, "CD_CORP", this.gfnNvl(this.dsList.getColumn(i, "CD_CORP"),""));
				this.dsSave.setColumn(nrow, "CD_DEPT", this.gfnNvl(this.dsList.getColumn(i, "CD_DEPT"),""));
				this.dsSave.setColumn(nrow, "ID_REQUEST", this.gfnNvl(this.dsList.getColumn(i, "ID_REQUEST"),""));
				this.dsSave.setColumn(nrow, "CD_WORK", this.gfnNvl(this.dsList.getColumn(i, "CD_WORK"),""));
				this.dsSave.setColumn(nrow, "DS_TOTAL_WORK", this.gfnNvl(this.dsList.getColumn(i, "DS_TOTAL_WORK"),""));
				this.dsSave.setColumn(nrow, "AM_WORK", this.gfnNvl(this.dsList.getColumn(i, "AM_WORK"),0));
				this.dsSave.setColumn(nrow, "DS_REMARK", this.gfnNvl(this.dsList.getColumn(i, "DS_REMARK"),""));
				this.dsSave.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
				this.dsSave.setColumn(nrow, "TY_AUTH", this.FormInfo.TY_AUTH);
				this.dsSave.setColumn(nrow, "GR_DEPT", this.AuthClient.CD_DEPT);
				this.dsSave.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
				break;
		}
	}
	
	if (this.dsSave.rowcount == 0) return;
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
	return true;
}


/************************************************************************
 * Validate
 ************************************************************************/
this.fnSelectValidate = function() {
	if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
		this.fnValidCallback = function() {
			this.ccfCD_CORP.form.CDTextBox.setFocus();
		}
		this.gfnAlert("법인을 입력하세요.", "fnValidCallback");
		return false;
	}	
	if (this.gfnIsNull(this.ccfYM_WORK.form.TextBox.value)) {
		this.fnValidCallback = function() {
			this.ccfYM_WORK.form.TextBox.setFocus();
		}
		this.gfnAlert("근무년월을 입력하세요.", "fnValidCallback");
		return false;
	}
	return true;
};
/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg, args)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}


/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
 	if(id == "ccfCD_CORP") {
		// 법인코드
		dsUserParam.setColumn(nrow, "CD_CORP", this.AuthClient.CD_CORP);
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER); 
	}
	else if(id == "ccfCD_DEPT") {			
		//부서코드
		if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
			this.fnValidCallback = function() {
				this.ccfCD_CORP.form.CDTextBox.setFocus();
			}
			this.gfnAlert("법인코드를 입력하세요.", "fnValidCallback");
			return false;
		}
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "CD_DEPT", this.AuthClient.CD_DEPT); 
		dsUserParam.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.text);
		dsUserParam.setColumn(nrow, "YN_CURRENT", "N");			
	}
	else if(id == "ccfID_SABUN") {
		//사번
		if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
			this.fnValidCallback = function() {
				this.ccfCD_CORP.form.CDTextBox.setFocus();
			}
			this.gfnAlert("법인코드를 입력하세요.", "fnValidCallback");
			return false;
		}
		dsUserParam.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "CD_DEPT", this.gfnNvl(this.ccfCD_DEPT.form.CDTextBox.value, this.AuthClient.CD_DEPT));
		dsUserParam.setColumn(nrow, "YN_CORP", "N"); //법인무관(Y: 법인에 관계없이 직원검색 N:조건의 법인의 임직원만 검색)
		dsUserParam.setColumn(nrow, "TY_RETIRE", "%");	// 01 재직 02 휴직 04 퇴직 % :전체
 	}
 	return true;
};

this.fnAfterCDTextChanged = function(id, codeFindData) {
	var arr = codeFindData; //this.ccfCD_DEPT_ORG.form.SelectedData; 둘다 사용가능

	if(id == "ccfCD_CORP") {
		this.ccfCD_DEPT.form.fnCodeFindClear();
		this.ccfID_SABUN.form.fnCodeFindClear();
	}
	else if(id == "ccfCD_DEPT") {			
		this.ccfID_SABUN.form.fnCodeFindClear();	
	}
	else if(id == "ccfID_SABUN") {
		if (arr.length > 0) {
			this.ccfCD_DEPT.form.CDTextBox.set_value(arr[0]["CD_DEPT"]);
			this.ccfCD_DEPT.form.DSTextBox.set_value(arr[0]["DS_DEPT"]);
		}
 	}
}

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGrid_BeforeUserDataSetParam = function(id, dsUserParam, nrow) {	
 	if (id == "DAX_CFBASEINFO_ALL") {
		//사원
		if(this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
			this.gfnAlert("법인을 입력하세요.");
			return false;
		}
 		dsUserParam.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "CD_DEPT", this.gfnNvl(this.ccfCD_DEPT.form.CDTextBox.value, this.AuthClient.CD_DEPT));
		dsUserParam.setColumn(nrow, "YN_CORP", "N");
		dsUserParam.setColumn(nrow, "TY_RETIRE", "%");
 	}
	else if (id == "DAX_CFCORP_CODEFIND") {
		//신청법인
		if(this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
			this.gfnAlert("법인을 입력하세요.");
			return false;
		}
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
 		dsUserParam.setColumn(nrow, "CD_CORP", this.gfnNvl(this.ccfCD_CORP.form.CDTextBox.value,""));
		dsUserParam.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
 	}
	else if (id == "DAX_CFDEPT") {
		//신청부서코드
		if(this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
			this.gfnAlert("법인을 입력하세요.");
			return false;
		}
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "CD_DEPT", this.gfnNvl(this.ccfCD_DEPT.form.CDTextBox.value, this.AuthClient.CD_DEPT));
 		dsUserParam.setColumn(nrow, "CD_CORP", this.gfnNvl(this.ccfCD_CORP.form.CDTextBox.value,""));
		dsUserParam.setColumn(nrow, "YN_CURRENT", "N");
 	}
	else if (id == "CF_ID_REQUEST") {
		//담당자
		var sCD_CORP = this.dsList.getColumn(this.dsList.rowposition,"CD_CORP");
		if(this.gfnIsNull(sCD_CORP)) {
			this.gfnAlert("신청법인을 입력하세요.");
			return false;
		}
		var sCD_DEPT = this.dsList.getColumn(this.dsList.rowposition,"CD_DEPT");
		if(this.gfnIsNull(sCD_DEPT)) {
			this.gfnAlert("신청부서를 입력하세요.");
			return false;
		}
 		dsUserParam.setColumn(nrow, "CD_CORP", sCD_CORP);
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "CD_DEPT", sCD_DEPT);
		dsUserParam.setColumn(nrow, "YN_CORP", "N");
		dsUserParam.setColumn(nrow, "TY_RETIRE", "%");
 	}

	return true;
}

this.fnGrid_AfterCDTextChanged = function(id, codeFindData) {
	var arr = codeFindData;

 	if (id == "DAX_CFBASEINFO_ALL") {
		//사원
		if(arr.length > 0) {
			var sCD_CORP = arr[0]["CD_CORP"];
			var sDS_CORP = arr[0]["DS_CORP"];
			var sCD_DEPT = arr[0]["CD_DEPT"];
			var sDS_DEPT = arr[0]["DS_DEPT"];
			this.dsList.setColumn(this.dsList.rowposition, "CD_CORP", sCD_CORP);
			this.dsList.setColumn(this.dsList.rowposition, "DS_CORP", sDS_CORP);
			this.dsList.setColumn(this.dsList.rowposition, "CD_DEPT", sCD_DEPT);
			this.dsList.setColumn(this.dsList.rowposition, "DS_DEPT", sDS_DEPT);
		}
 	}
	else if (id == "DAX_CFCORP_CODEFIND") {
		//신청법인
		;
 	}
	else if (id == "DAX_CFDEPT") {
		//신청부서코드
		;
 	}
	else if (id == "CF_ID_REQUEST") {
		//담당자
	}
};

 /************************************************************************
 * 확장버튼 이벤트
 ************************************************************************/
 this.fnGetFoodCost = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	var sCD_CORP = this.ccfCD_CORP.form.CDTextBox.value;
	if (this.gfnIsNull(sCD_CORP)) {
		this.fnValidCallback = function() {
			this.ccfCD_CORP.form.CDTextBox.setFocus();
		}
		this.gfnAlert("법인을 입력하세요.", "fnValidCallback");
		return false;
	}	
	var sYM_WORK = this.ccfYM_WORK.form.TextBox.value;
	if (this.gfnIsNull(sYM_WORK)) {
		this.fnValidCallback = function() {
			this.ccfYM_WORK.form.TextBox.setFocus();
		}
		this.gfnAlert("근무년월을 입력하세요.", "fnValidCallback");
		return false;
	}
	
	var param = {};
	param.CD_CORP = sCD_CORP;
	param.DS_CORP = this.ccfCD_CORP.form.DSTextBox.value;
	param.ID_SABUN = this.ccfID_SABUN.form.CDTextBox.value;
	param.DT_WORK_FROM = sYM_WORK + "01";
	param.DT_WORK_TO = this.gfnGetLastDate(sYM_WORK);
	
// 	var nW = 390;
// 	var nH = 320;
	
	// 화면 오픈. 
	// CD_MODULE은 보통 같은 모듈에서 호출하는 경우가 많으니 this.FormInfo.CD_MODULE 사용
	// 타 모듈 화면 호출시 지정할것.
	//this.gfnFormOpen(this.FormInfo.CD_MODULE, "DAG_FOODCOST_DLG", "fnPayApplyCallback", param, nW, nH);
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DAG_FOODCOST_DLG2", "fnGetFoodCostCallback", param);
}
this.fnGetFoodCostCallback = function(id, val){
	if(this.gfnIsNull(val)) return;
	if(val == false) return;
	
	this.FormBtns.Select.click();
}

 /************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo){
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);
	}
};




]]></Script>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_CORP.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_CORP"/>
      <BindItem id="item2" compid="divSearch.form.ccfYM_WORK.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_WORK"/>
      <BindItem id="item3" compid="divSearch.form.ccfCD_DEPT.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_DEPT"/>
      <BindItem id="item4" compid="divSearch.form.ccfCD_DEPT.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_DEPT"/>
      <BindItem id="item5" compid="divSearch.form.ccfID_SABUN.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="ID_SABUN"/>
      <BindItem id="item6" compid="divSearch.form.ccfID_SABUN.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_HNAME"/>
      <BindItem id="item7" compid="divSearch.form.cboCD_WORK" propid="value" datasetid="dsSearch" columnid="CD_WORK"/>
    </Bind>
  </Form>
</FDL>
