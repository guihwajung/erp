<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="1280" height="720" titletext="발령정보등록" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0" top="0" height="46" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static id="staYY_ORDER" taborder="0" text="발령년도" left="0" top="10" width="92" height="24" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYY_ORDER" taborder="1" left="staYY_ORDER:0" top="10" width="60" height="24" url="cmm::cmmCalYY.xfdl"/>
              <Static id="staCD_CORP" taborder="2" text="법인" left="ctclYY_ORDER:0" top="10" width="66" height="24" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_CORP" CDTextWidth="50" taborder="3" left="staCD_CORP:0" top="10" width="200" height="24" url="cmm::cmmCodeFind.xfdl" CodeFindName="DAX_CFCORP_CODEFIND"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg" ondragmove="divData_ondragmove" text="">
          <Layouts>
            <Layout>
              <Div id="divSplitter" taborder="1" left="38.98%" top="-20" width="5" cursor="ew-resize" ondrag="divData_divSplitter_ondrag" bottom="0" cssclass="div_Splitter"/>
              <Div id="divDataLeft" taborder="0" left="0" top="0" bottom="0" right="divSplitter:5">
                <Layouts>
                  <Layout>
                    <Grid id="objGrid" taborder="0" left="0" top="5" bottom="0" right="0"/>
                  </Layout>
                </Layouts>
              </Div>
              <Div id="divDataRight" taborder="0" left="divSplitter:5" top="0" bottom="0" right="0">
                <Layouts>
                  <Layout>
                    <Grid id="objGridSub" sub="true" taborder="0" left="0" top="5" bottom="0" right="0"/>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form, e:nexacro.LoadEventInfo) {
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	this.fnInit();
}

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 ************************************************************************/
this.fnSetButton = function() {
	this.FormBtns.Reset.set_enable(true);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btn1 = this.gfnFormButtonAdd("FormButton", "fnFormButton");	// 일괄변경
}

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	// 그리드영역
	this.dxGrid = this.divData.form.divDataLeft.form.objGrid;
	this.dxGridSub = this.divData.form.divDataRight.form.objGridSub;
	
	// 검색영역
	this.ctclYY_ORDER = this.divSearch.form.ctclYY_ORDER;	// 발령년도
	this.ccfCD_CORP   = this.divSearch.form.ccfCD_CORP;		// 법인코드
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {	
	// 그리드영역
	this.gfnGridInit(this.dxGrid, this.dsList, "DA", "DAA_REG_ORDERNO");
	this.gfnGridInit(this.dxGridSub, this.dsListSub, "DA", "DAA_REG_ORDERNO1");
	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
	this.dxGrid.set_selecttype("cell");	
	this.dxGrid.addEventHandler("onselectchanged", this.fnGrid_RowCellChanged, this);
	this.dxGrid.EnterCell = "fnGrid_EnterCell";
	
	// 목록
	this.dsList.addEventHandler("canrowposchange", this.dsList_canrowposchange, this);
	
	// 검색영역
	this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_CORP.AfterCDTextChanged     = "fnAfterCDTextChanged";
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	// 조회
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("YY_ORDER", "string");
	this.dsSelect.addColumn("CD_CORP", "string");
	
	// 서브그리드 조회
	this.dsSelectSub = new Dataset();
	this.dsSelectSub.addColumn("NO_DOCUMENT", "string");
	this.dsSelectSub.addColumn("CD_CORP", "string");
	
	// 발령호수 채번
	this.dsSelect2 = new Dataset();
	this.dsSelect2.addColumn("TMP", "string");
	this.dsSelect2.addColumn("CD_CORP", "string");	
	
	// 저장
	this.dsSave = new Dataset();
	this.dsSave.addColumn("TY_SAVE", "string");
	this.dsSave.addColumn("NO_DOCUMENT", "string");  
	this.dsSave.addColumn("YY_BASE", "string");  	// YY_BASE 조회조건의 발령년도 파라미터로 변경함 
	this.dsSave.addColumn("DS_REMARK", "string");
	this.dsSave.addColumn("DT_ORDER", "string");
	this.dsSave.addColumn("ID_INSERT", "string");
	this.dsSave.addColumn("CD_CORP", "string");
}

/************************************************************************
 * 화면 및 검색영역 초기화
 ************************************************************************/
this.fnInit = function() {
	// 발령년도 셋팅
	var today = this.gfnGetDate().substring(0, 4);
	this.ctclYY_ORDER.form.TextBox.set_value(today);
	
	// 법인코드
	this.fnSetCodeFinder(this.ccfCD_CORP, this.AuthClient.CD_CORP);
}

/************************************************************************
 * 버튼 이벤트
 ************************************************************************/
/*
 * 조회 버튼
 */
this.fnSelect = function() {
	if (!this.gfnSearchValidate(this.divSearch, this.dsSearch)) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "YY_ORDER", this.dsSearch.getColumn(0, "YY_ORDER"));
	this.dsSelect.setColumn(0, "CD_CORP" , this.dsSearch.getColumn(0, "CD_CORP"));

	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction(strSvcId,		// transaction을 구분하기 위한 svc id값
						strSvcType, 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData, 		// 입력값으로 보낼 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						outData, 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc);	// 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	var nrow = this.gfnGridAdd(this.dxGrid,"Top");
	this.dsList.setColumn(nrow, "TY_CONFIRM", "N");
	this.dsList.setColumn(nrow, "CD_CORP"   , this.dsSearch.getColumn(0, "CD_CORP"));
	this.dsList.setColumn(nrow, "DS_CORP"   , this.dsSearch.getColumn(0, "DS_CORP"));
}

/*
 *	삭제 버튼
 */ 
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */ 
this.fnSave = function() {
	if (!this.gfnGridValidate(this.dxGrid)) return;

	this.dxGrid.updateToDataset();
	
	this.dsSave.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		
		switch(flag) {
			case "I":
			case "U":
			case "D":
				var nrow = this.dsSave.addRow();
				this.dsSave.setColumn(nrow, "TY_SAVE", flag);
				this.dsSave.setColumn(nrow, "YY_BASE", this.divSearch.form.ctclYY_ORDER.form.TextBox.value);
				this.dsSave.setColumn(nrow, "NO_DOCUMENT", this.dsList.getColumn(i, "NO_DOCUMENT"));
				this.dsSave.setColumn(nrow, "DS_REMARK", this.dsList.getColumn(i, "DS_REMARK"));
				this.dsSave.setColumn(nrow, "DT_ORDER", (this.dsList.getColumn(i, "DT_ORDER")).replace("-",""));
				this.dsSave.setColumn(nrow, "ID_INSERT", this.AuthClient.ID_USER);
				this.dsSave.setColumn(nrow, "CD_CORP", this.dsList.getColumn(i, "CD_CORP"));						
				break;
		}
	}
	
	if (this.dsSave.rowcount == 0) return;

	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave";
	var outData     = "dsDocnum=insert0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
 	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
 						strSvcType , 	// transaction을 요청할 구분
 						inProc,			// Procedure 정보 Dataset 이름
 						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
 						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
 						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
 						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */ 
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGridSub);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/*
 *	초기화 버튼
 */
this.fnReset  = function() {
	this.dsSearch.clearData();
	this.dsSearch.addRow();
	
	this.ccfCD_CORP.form.CDTextBox.set_value("");
	this.ccfCD_CORP.form.DSTextBox.set_value("");
	
	this.fnSearchInit();
}

/************************************************************************
 * 서브 버튼 이벤트
 ************************************************************************/
this.fnSelectSub = function() {
	if (this.dxGrid.rowcount == 0 || this.dxGrid.currentrow < 0) return false;
	
	var nRowType = this.dsList.getRowType(this.dsList.rowposition);
	if(nRowType == Dataset.ROWTYPE_INSERT){
		this.dsListSub.clearData();
		return false;
	}

	
	this.dsListSub.clearData();
	
	var no_document = this.dsList.getColumn(this.dsList.rowposition, "NO_DOCUMENT");
	var cd_corp = this.dsList.getColumn(this.dsList.rowposition, "CD_CORP"); //this.ccfCD_CORP.form.CDTextBox.value;
	
	this.gfnGridBeforeSelect(this.dxGridSub);
	
	this.dsSelectSub.clearData();
	this.dsSelectSub.addRow();
	
	this.dsSelectSub.setColumn(0, "NO_DOCUMENT", no_document);
	this.dsSelectSub.setColumn(0, "CD_CORP", cd_corp);

	var strSvcId    = "detail";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "d_select=dsSelectSub";
	var outData     = "dsListSub=d_select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	 
						strSvcType , 	 
						inProc,			 
						inData , 		 
						outData , 		 
						strArg, 			 
						callBackFnc);  
}

/************************************************************************
 * Validate
 ************************************************************************/
this.fnSelectValidate = function() {
	var validate = true;
	var cd_corp = this.ccfCD_CORP.form.CDTextBox.value;
	var yy_order = this.divSearch.form.ctclYY_ORDER.form.TextBox.value;
	
	if (this.gfnIsNull(yy_order)) {
		validate = false;
		this.fnVaidateCallback = function() {
			this.ctclYY_ORDER.form.TextBox.setFocus();
		}
		this.gfnAlert("발령년도를 입력하세요.", "fnVaidateCallback");
	}	
 	else if (this.gfnIsNull(cd_corp)) {
 		validate = false;
 		this.fnVaidateCallback = function() {
 			this.ccfCD_CORP.form.CDTextBox.setFocus();
 		}
 		this.gfnAlert("소속법인을 입력하세요.", "fnVaidateCallback");
 	}
	return validate;
};
/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	this.FormBtns.Reset.set_enable(true);
	
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
		//trace("발령호수 정보 >>>"+this.dsDocnum.saveXML());
		if(this.dsList.rowcount > 0){
			if(this.dsDocnum.rowcount > 0){
				var findrow = this.dsList.findRow("NO_DOCUMENT", this.dsDocnum.getColumn(0, "DOC_NUM"));  
				this.dxGrid.selectCell(findrow, this.dxGrid.getBindCellIndex("body", "NO_DOCUMENT"));	
				this.dsDocnum.clearData();
			}
		}
	}
	else if (svcID == "detail") {
		this.gfnGridAfterSelect(this.dxGridSub);	
	}
	else if (svcID == "select2") {
		this.dsList.setColumn(1,"NO_DOCUMENT", this.dsList2.getColumn(0, "DOC_NUM"));
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.gfnAlert("작업이 완료되었습니다.");
			this.FormBtns.Select.click();
			//this.FormBtns.SubSelect.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}

}

this.fnFormButton_callback = function(svcID, val) 
{
	if(val != false) {
		this.FormBtns.Select.click();
	}
}	

/************************************************************************
 * 확장버튼 이벤트
 ************************************************************************/
this.fnFormButton = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	if (this.gfnGetFormStatus(this) == "I" || this.gfnGetFormStatus(this) == "U" || this.gfnGetFormStatus(this) == "D") {
		this.gfnAlert("저장되지 않은 정보가 있습니다. 저장 후 이동하세요.");
		return false; 
	}	
	var param = {};
	param.CD_CORP = this.dsList.getColumn(this.dsList.rowposition, "CD_CORP");
	param.DS_CORP = this.dsList.getColumn(this.dsList.rowposition, "DS_CORP");
	param.NO_DOCUMENT = this.dsList.getColumn(this.dsList.rowposition, "NO_DOCUMENT");
	param.DT_ORDER = (this.dsList.getColumn(this.dsList.rowposition, "DT_ORDER")).replace("-","");
	param.TY_CONFIRM = this.dsList.getColumn(this.dsList.rowposition, "TY_CONFIRM");
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DAA_MULTIORDERGRID", "fnFormButton_callback", param);	
}
/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	
	if(id == "ccfCD_CORP") { 
		dsUserParam.setColumn(nrow, "CD_CORP", this.AuthClient.CD_CORP);
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
	}
		
	return true;
};


this.fnAfterCDTextChanged = function(id) {
	if(id == "ccfCD_CORP") {
		this.fnSearchInit();
		this.FormBtns.Select.click();
	}	
}

 this.fnGrid_BeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	// 법인
	if(id == "DAX_CFCORP_CODEFIND") {
		dsUserParam.setColumn(nrow, "CD_CORP", this.AuthClient.CD_CORP);
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
	}
	
	return true;
};
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 this.fnGrid_EnterCell = function(obj:nexacro.Grid, row, cell) {
	var colnm = this.gfnGridGetBindColumnNameByIndex(obj, cell);

	 if(colnm == "NO_DOCUMENT" || colnm == "DS_CORP" || colnm == "DT_ORDER" ) {
		if(this.dsList.getColumn(this.dsList.rowposition, "TY_CONFIRM") == "Y"){  
			return false;
		}
 	}

}

this.fnGrid_RowCellChanged = function(obj:nexacro.Grid,e:nexacro.GridSelectEventInfo)
{
    if ((obj.oldrow > -1 && obj.oldrow == e.row)
		|| (obj.oldrow == -1 && e.oldrow != e.row)) {
		this.FormBtns.SubSelect.click();
		obj.oldrow = -1;
	}
};

this.dsList_canrowposchange = function(obj:nexacro.NormalDataset,e:nexacro.DSRowPosChangeEventInfo) {
	var can_rowchange = true;
	for (var i = 0; i < this.dsListSub.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsListSub, i);
		if (flag == "I" || flag == "U" || flag == "D") {
			can_rowchange = false;
			break;
		}
	}
	if(!can_rowchange) {
		this._row = e.newrow;
		this.gfnConfirm("변경된 데이터가 있습니다.\r\n계속 진행하시겠습니까?", "dsList_canrowposchange_callback");
	}
	return can_rowchange;
}

this.dsList_canrowposchange_callback = function(strId, val) 
{
	if(val == true) {
		this.dsList.set_enableevent(false);
		this.dsList.set_rowposition(this._row);
		this.dsList.set_enableevent(true);
	}	
}


/************************************************************************
 * 기타 이벤트
 ************************************************************************/
 this.fnNewDoc_Num = function () {
 
	this.dsSelect2.clearData();
	this.dsSelect2.addRow();
	this.dsSelect2.setColumn(0, "TMP", this.divSearch.form.ctclYY_ORDER.form.TextBox.value);
	this.dsSelect2.setColumn(0, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
		
	var strSvcId    = "select2";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "select2=dsSelect2";
	var outData     = "dsList2=select20";
	var strArg      = "nrow";
	var callBackFnc = "fnCallback"; 
	
	this.gfnTransaction( strSvcId , 	
						strSvcType , 	
						inProc,			
						inData , 		 
						outData , 		 
						strArg, 		
						callBackFnc);  
 }
 
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		this.gfnSetFormStatus(this);
		this.gfnGridClear(this.dxGrid);
		this.gfnGridClear(this.dxGridSub);
	}
}

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
		this.gfnGridClear(this.dxGridSub);
	}
};

this.divData_ondragmove = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
	if(e.userdata == "splitter") {
		this.divData.form.divSplitter.set_left(e.clientx);
		this.divData.form.resetScroll();
	}
};

this.divData_divSplitter_ondrag = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
	e.set_userdata("splitter");
	return true;
};


/************************************************************************
 * 기타 함수
 ************************************************************************/
// 코드파인더 설정
this.fnSetCodeFinder = function(obj, value) {
	obj.form.CDTextBox.set_value(value);
	obj.form.fnCodeFindLoad();
}]]></Script>
    <Objects>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="YY_ORDER" type="STRING" size="256"/>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="DS_CORP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="YY_ORDER"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsList2"/>
      <Dataset id="dsListSub"/>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DAAPR_NODT_ORDER_SELECT</Col>
          </Row>
          <!--발령호수 채번-->
          <Row>
            <Col id="TARGET">select2</Col>
            <Col id="SP">DAAPR_MULTIORDERDLG_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DAAPR_NODT_ORDER_SAVE</Col>
          </Row>
          <Row>
            <Col id="TARGET">d_select</Col>
            <Col id="SP">DAAPR_NODT_ORDER_SELECT_DETAIL</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsDocnum"/>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ctclYY_ORDER.form.TextBox" propid="value" datasetid="dsSearch" columnid="YY_ORDER"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item2" compid="divSearch.form.ccfCD_CORP.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_CORP"/>
    </Bind>
  </Form>
</FDL>
