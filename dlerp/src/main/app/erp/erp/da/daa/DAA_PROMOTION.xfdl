<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="승진대상자 등록" onload="form_onload">

    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="1" left="0" top="0" height="46.0" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static id="staDT_BASE" taborder="0" text="기준일자" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Calendar id="ctclDT_BASE" taborder="1" left="staDT_BASE:0.0" top="10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" onchanged="fnSearchInit"/>
              <Static id="staCD_CORP" taborder="4" text="법인" left="ctclDT_BASE:0.0" top="10.0" width="92.0" height="24.0" onclick="divSearch_staCD_CORP_onclick" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_CORP" CDTextWidth="50" taborder="5" left="staCD_CORP:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" onitemchanged="fnSearchInit"/>
              <Static id="staYN_PROMOTION" taborder="2" text="대상여부" left="ccfCD_CORP:0.0" top="10.0" width="92.0" height="24.0" rtl="false" onclick="divSearch_staYN_PROMOTION_onclick" cssclass="sta_WF_SchLabel"/>
              <Combo id="cboYN_PROMOTION" taborder="3" left="staYN_PROMOTION:0.0" top="10.0" width="80" height="24.0" innerdataset="dsYN_PROMOTION" datacolumn="VALUE" codecolumn="CODE" index="0" value="%" onitemchanged="fnSearchInit" text="전체"/>
              <Static id="staTY_GUBUN" taborder="2" text="구분" left="cboYN_PROMOTION:0.0" top="10.0" width="92.0" height="24.0" rtl="false" cssclass="sta_WF_SchLabelE"/>
              <Combo id="cboTY_GUBUN" taborder="3" left="staTY_GUBUN:0.0" top="10.0" width="80" height="24.0" innerdataset="dsTY_GUBUN" datacolumn="VALUE" codecolumn="CODE" index="0" value="%" onitemchanged="fnSearchInit" text="전체"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DAAPR_PROMOTION_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DAAPR_PROMOTION_SAVE</Col>
          </Row>
          <Row>
            <Col id="TARGET">update</Col>
            <Col id="SP">DAAPR_PROMOTION_TARGET</Col>
          </Row>

<Row>
            <Col id="TARGET">cancel</Col>
            <Col id="SP">DAAPR_PROMOTION_ORDER_CANCEL</Col>
</Row>

          <Row>
            <Col id="SP">DAAPR_PROMOTION_ORDER_CANCEL</Col>
            <Col id="TARGET">cancl</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsYN_PROMOTION">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">%</Col>
            <Col id="VALUE">전체</Col>
          </Row>
          <Row>
            <Col id="CODE">Y</Col>
            <Col id="VALUE">대상</Col>
          </Row>
          <Row>
            <Col id="CODE">N</Col>
            <Col id="VALUE">미대상</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="DT_BASE" type="STRING" size="256"/>
          <Column id="YN_PROMOTION" type="STRING" size="256"/>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="TY_GUBUN" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsList" onvaluechanged="dsList_onvaluechanged">
        <ColumnInfo>
          <Column id="TY_SAVE" type="STRING" size="256"/>
          <Column id="ID_PERSON" type="STRING" size="256"/>
          <Column id="ID_SABUN" type="STRING" size="0"/>
          <Column id="CD_POSITION" type="STRING" size="256"/>
          <Column id="DS_POSITION" type="STRING" size="256"/>
          <Column id="CD_PAYSTEP" type="STRING" size="256"/>
          <Column id="DS_PAYSTEP" type="STRING" size="256"/>
          <Column id="CD_DUTY" type="STRING" size="256"/>
          <Column id="DS_DUTY" type="STRING" size="256"/>
          <Column id="CD_OCCUPATION" type="STRING" size="256"/>
          <Column id="DS_OCCUPATION" type="STRING" size="256"/>
          <Column id="CD_JOBTYPE" type="STRING" size="256"/>
          <Column id="DS_JOBTYPE" type="STRING" size="256"/>
          <Column id="DS_REMARK" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsTY_GUBUN">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">P</Col>
            <Col id="VALUE">승진</Col>
          </Row>
          <Row>
            <Col id="CODE">S</Col>
            <Col id="VALUE">승호</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{	
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();	
	
	this.dsSearch.setColumn(0, "CD_CORP", this.AuthClient.CD_CORP);	
	this.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP);
	this.divSearch.form.cboYN_PROMOTION.set_value("%");
	this.divSearch.form.cboTY_GUBUN.set_value("P");
	
	//화면 로드시 자동조회
	//this.FormBtns.Select.click();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	//this.FormBtns.Reset.set_enable("true");
};

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btn10 = this.gfnFormButtonAdd("FormButton10", "fnFormButton10","대상");
	this.btn11 = this.gfnFormButtonAdd("FormButton11", "fnFormButton11","미대상");
	//this.btn1 = this.gfnFormButtonAdd("FormButton1", "fnFormButton1","승진 기준정보");
	this.btn2 = this.gfnFormButtonAdd("FormButton2", "fnFormButton2","대상자생성");	
	this.btn3 = this.gfnFormButtonAdd("FormButton3", "fnFormButton3","인사발령");	
	this.btn4 = this.gfnFormButtonAdd("FormButton4", "fnFormButton4","인사발령취소");	
};

// 대상 버튼 클릭
this.fnFormButton10 = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	this.fnUpdate_d('Y');
}

// 미대상 버튼 클릭
this.fnFormButton11 = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	this.fnUpdate_d('N');
}
this.fnUpdate_d = function(paramTyFlag) {
	var fndRow = this.dsList.findRow("CHK", 1);
	if (this.dsList.rowcount == 0 || fndRow <= -1) {
		this.gfnAlert("변경할 대상자를 체크해주세요.");
		return;
	}	
	if (paramTyFlag == "Y") {
		this.gfnConfirm("체크된 건을 [대상]으로 변경하시겠습니까?", "fnUpdateCallback", paramTyFlag);
	} 
	else{
		this.gfnConfirm("체크된 건을 [미대상]으로 변경하시겠습니까?", "fnUpdateCallback", paramTyFlag);
	}
};

this.fnUpdateCallback = function(strId, val)  {
	if(val == false) return;

	this.dsUpdate.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		if (this.dsList.getColumn(i, "CHK") == 1) {
			var nrow = this.dsUpdate.addRow();

			this.dsUpdate.setColumn(nrow, "YN_PROMOTION", strId);
			this.dsUpdate.setColumn(nrow, "DT_BASE", this.dsList.getColumn(i, "DT_BASE"));
			this.dsUpdate.setColumn(nrow, "CD_CORP", this.dsList.getColumn(i, "CD_CORP"));
			this.dsUpdate.setColumn(nrow, "ID_PERSON", this.dsList.getColumn(i, "ID_PERSON"));
			this.dsUpdate.setColumn(nrow, "NO_SEQ", this.dsList.getColumn(i, "NO_SEQ"));
			this.dsUpdate.setColumn(nrow, "ID_SABUN", this.dsList.getColumn(i, "ID_SABUN"));
			this.dsUpdate.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);

		}
	}
	
	if (this.dsUpdate.rowcount == 0) return;
	
	var strSvcId    = "update";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "update=dsUpdate";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	this.gfnTransaction( strSvcId ,  
						strSvcType ,  
						inProc,			 
						inData , 		 
						outData , 		 
						strArg, 		 
						callBackFnc);  

};

this.fnFormButton1 = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	var param = {};
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DAA_PROMOTION_TARGET", "fnDialogCallback", param, 1180, 568);
}

// 대상자생성 버튼 클릭
this.fnFormButton2 = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	var param = {};
	param.DT_BASE = this.divSearch.form.ctclDT_BASE.value;	//기준일자
    param.CD_CORP = this.ccfCD_CORP.form.CDTextBox.value; //법인 코드
	param.DS_CORP = this.ccfCD_CORP.form.DSTextBox.value; //법인명	
	param.TY_GUBUN = this.cboTY_GUBUN.value;	

	//this.gfnFormOpen(this.FormInfo.CD_MODULE, "DAA_PROMOTION_DLG1", "fnDialogCallback", param, 340, 380);
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DAA_PROMOTION_DLG1", "fnFormButton1Callback", param);
}


this.fnFormButton1Callback = function(svcID, value){
	if(value != false) {
		var json = JSON.parse(value);
		
		this.dsSearch.set_enableevent(false);	
		this.dsSearch.setColumn(0, "DT_BASE", json.DT_BASE);
		this.ccfCD_CORP.form.CDTextBox.set_value(json.CD_CORP);
		this.ccfCD_CORP.form.DSTextBox.set_value(json.DS_CORP);
		this.dsSearch.setColumn(0, "TY_GUBUN", json.TY_GUBUN);
		this.dsSearch.setColumn(0, "YN_PROMOTION", "%");
		this.dsSearch.set_enableevent(true);	
	}
	
	this.FormBtns.Select.click();
}

// 인사발령 버튼 클릭
this.fnFormButton3 = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	var param = {};

	param.DT_BASE = this.divSearch.form.ctclDT_BASE.value;	//기준일자
    param.CD_CORP = this.ccfCD_CORP.form.CDTextBox.value; //법인 코드
	param.DS_CORP = this.ccfCD_CORP.form.DSTextBox.value; //법인명
	
	//this.gfnFormOpenNonAuth(this.FormInfo.CD_MODULE, "DAA_PROMOTION_DLG2", "fnDialogCallback", param, 340, 380);
	this.gfnFormOpenNonAuth(this.FormInfo.CD_MODULE, "DAA_PROMOTION_DLG2", "fnDialogCallback", param);
	
}

this.fnDialogCallback = function(svcID, value){
	this.FormBtns.Select.click();
}

// 인사발령취소 버튼 클릭
this.fnFormButton4 = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	this.gfnConfirm("인사 발령내역을 취소하시겠습니까?", "fnFormButton4Callback"); 
	
	/*
	var param = {};

	param.TY_GUBUN = this.divSearch.form.rdoTY_GUBUN.value; //구분
	param.DT_BASE = this.divSearch.form.ctclDT_BASE.value;	//기준일자
    param.CD_CORP = this.ccfCD_CORP.form.CDTextBox.value; //법인 코드
	param.DS_CORP = this.ccfCD_CORP.form.DSTextBox.value; //법인명
	
	this.gfnFormOpenNonAuth(this.FormInfo.CD_MODULE, "DAA_PROMOTION_DLG3", "fnDialogCallback", param, 340, 380);	
	*/
}

// 인사발령취소 Callback
this.fnFormButton4Callback = function(strId, val) { 
	if(val == true){
	
		if (!this.fnValidate()) return;
		
		this.dsCancl.clearData();
		var nrow = this.dsCancl.addRow();
		
		this.dsCancl.setColumn(nrow, "DT_BASE", this.dsSearch.getColumn(0, "DT_BASE"));
		this.dsCancl.setColumn(nrow, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));
		this.dsCancl.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);

		var strSvcId    = "cancl";
		var strSvcType  = "save";
		var inProc		= "_dsProc";
		var inData      = "cancl=dsCancl";
		var outData     = "";
		var strArg      = "";
		var callBackFnc = "fnCallback";
		
		this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
							strSvcType , 	// transaction을 요청할 구분
							inProc,			// Procedure 정보 Dataset 이름
							inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
							outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
							strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
							callBackFnc); // 통신방법 정의 [생략가능]
	}else{
		this.FormBtns.Select.click();
	}
}



/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {

	this.ctclDT_BASE = this.divSearch.form.ctclDT_BASE; //기준일자	
	this.cboYN_PROMOTION = this.divSearch.form.cboYN_PROMOTION; //대상자여부
	this.cboTY_GUBUN = this.divSearch.form.cboTY_GUBUN;
	//this.rdoTY_GUBUN = this.divSearch.form.rdoTY_GUBUN; //승진구분
	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP; //법인코드
	//this.ccfCD_POSITION = this.divSearch.form.ccfCD_POSITION; //직위코드	
	this.dxGrid = this.divData.form.objGrid;		
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	//법인
	this.ccfCD_CORP.CodeFindName = "DAX_CFCORP";
	this.ccfCD_CORP.AfterCDTextChanged = "codefind_AfterCDTextChanged";	
	this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";			
	
	//그리드
	this.gfnGridInit(this.dxGrid, this.dsList, "DA", "DAA_PROMOTION");
	
	//그리드 이벤트
	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforuserDataSetParam";	
	//this.dxGrid.EnterCell = "fnGrid_EnterCell";
	
	this.dxGrid.ExpandUp = "fnGrid_ExpandUp";
	
	var today = this.gfnGetDate().substring(0,4) - 1; //전년도	
	this.dsSearch.setColumn(0, "DT_BASE", today+"12"+"31");
	this.dsSearch.setColumn(0, "YN_PROMOTION", "Y");
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
  
	if (id == "ccfCD_CORP") {		
		dsUserParam.setColumn(nrow, "CD_CORP", this.AuthClient.CD_CORP);
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);			
	}
	
	return true;
}

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 this.fnGrid_BeforuserDataSetParam = function(id, dsUserParam, nrow) {
	trace('grid_코드파인드_식별id: ' + id); 
	
	switch(id) {	
	case "DAX_CFBASEINFO_ALL":     // 사번,부서,법인
		if(this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {		
 			this.ccfCD_CORP.form.CDTextBox.setFocus();
 			this.gfnAlert("법인을 먼저 선택하시기 바랍니다.");
 			return false;
 		}
		
		dsUserParam.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "CD_DEPT", this.AuthClient.CD_DEPT);
		dsUserParam.setColumn(nrow, "YN_CORP", "N");
		dsUserParam.setColumn(nrow, "TY_RETIRE", "01");   // 재직구분	 		  
	break;	
	
	case "EA":     // 직원구분코드
		 dsUserParam.setColumn(nrow, "CD_PREFIX", "EA");				 		  
	break;	
	case "ED":     // 직위코드
		 dsUserParam.setColumn(nrow, "CD_PREFIX", "ED");				 		  
	break;	
	case "EH":     // 년차코드
		 dsUserParam.setColumn(nrow, "CD_PREFIX", "EH");				 		  
	break;	
		
	default:
	}	
	return true;
}

this.fnGrid_AfterCDTextChanged = function(id, codeFindData) {
		
	switch(id) {
	case "DAX_CFCOMMONCODE": 
		break;
		
	case "DAX_CFCORP": 
		break;
		
	default:
	}	
	return true;
};

this.fnGrid_EnterCell = function(obj:nexacro.Grid, row, cell)
{
	var columnValueLic = this.dsList.getColumn(row,"YN_REFLECT");	
	trace(columnValueLic);

	if ( columnValueLic == "Y"){
		return false;
	}
}
 
 /************************************************************************
 * 파라미터
 ************************************************************************/
this.fnSetParameter = function() {
	// sp의 input 파라미터
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("DT_BASE", "string");  //기준일자	
	this.dsSelect.addColumn("YN_PROMOTION", "string");  //대상자여부	
	this.dsSelect.addColumn("CD_CORP", "string");  //법인
	this.dsSelect.addColumn("TY_GUBUN", "string");

    // 저장
	this.dsSave = new Dataset();
	this.dsSave.addColumn("TY_SAVE", "string");
	this.dsSave.addColumn("ID_PERSON", "int");
	this.dsSave.addColumn("NO_SEQ", "int");
	this.dsSave.addColumn("DT_BASE", "string");
	this.dsSave.addColumn("YN_PROMOTION", "string");
	this.dsSave.addColumn("ID_SABUN", "string");
	this.dsSave.addColumn("CD_CORP", "string");
	this.dsSave.addColumn("DS_ETC", "string");
	this.dsSave.addColumn("CD_EMPTYPE", "string");
	this.dsSave.addColumn("CD_POSITION", "string");
	this.dsSave.addColumn("CD_PAYSTEP", "string");
	this.dsSave.addColumn("DS_REMARK", "string");
	this.dsSave.addColumn("ID_USER", "string");
	
	// 대상자 변경
	this.dsUpdate = new Dataset();
	this.dsUpdate.addColumn("YN_PROMOTION", "string");
	this.dsUpdate.addColumn("DT_BASE", "string");
	this.dsUpdate.addColumn("CD_CORP", "string");
	this.dsUpdate.addColumn("ID_PERSON", "int");
	this.dsUpdate.addColumn("NO_SEQ", "int");
	this.dsUpdate.addColumn("ID_SABUN", "string");
	this.dsUpdate.addColumn("ID_USER", "string");
	
	// 인사발령취소
	this.dsCancl = new Dataset();
	this.dsCancl.addColumn("DT_BASE", "string");
	this.dsCancl.addColumn("CD_CORP", "string");
	this.dsCancl.addColumn("ID_USER", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnValidate()) return;

	this.gfnGridBeforeSelect(this.dxGrid);	
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();  
	this.dsSelect.setColumn(0, "DT_BASE", this.ctclDT_BASE.value); // 기준일자	
	this.dsSelect.setColumn(0, "YN_PROMOTION", this.cboYN_PROMOTION.value); // 대상자여부
	this.dsSelect.setColumn(0, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value); // 법인
	this.dsSelect.setColumn(0, "TY_GUBUN", this.cboTY_GUBUN.value); // 대상자여부
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 	    // 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {	
	var nrow = this.gfnGridAdd(this.dxGrid); // top (default), bottom, current	
	this.dsList.setColumn(nrow, "YN_PROMOTION", "Y"); //대상자 여부코드 셋팅	
	this.dsList.setColumn(nrow, "DT_BASE", this.dsSearch.getColumn(0, "DT_BASE")); //기준일자 셋팅
	
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {

	if (!this.gfnGridValidate(this.dxGrid)) return;	
	this.dxGrid.updateToDataset();
	this.dsSave.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		
		if(flag == "I" || flag == "U" || flag == "D") {
		
				var nrow = this.dsSave.addRow();							
				
				this.dsSave.setColumn(nrow, "TY_SAVE", flag);
				this.dsSave.setColumn(nrow, "ID_PERSON", this.dsList.getColumn(i, "ID_PERSON"));
				this.dsSave.setColumn(nrow, "NO_SEQ", this.dsList.getColumn(i, "NO_SEQ"));
				this.dsSave.setColumn(nrow, "DT_BASE", this.dsList.getColumn(i, "DT_BASE"));
				this.dsSave.setColumn(nrow, "YN_PROMOTION", this.dsList.getColumn(i, "YN_PROMOTION"));
				this.dsSave.setColumn(nrow, "ID_SABUN", this.dsList.getColumn(i, "ID_SABUN"));
				this.dsSave.setColumn(nrow, "CD_CORP", this.dsList.getColumn(i, "CD_CORP"));
				this.dsSave.setColumn(nrow, "DS_ETC", this.dsList.getColumn(i, "DS_ETC"));
				this.dsSave.setColumn(nrow, "CD_EMPTYPE", this.dsList.getColumn(i, "CD_EMPTYPE"));
				this.dsSave.setColumn(nrow, "CD_POSITION", this.dsList.getColumn(i, "CD_POSITION"));
				this.dsSave.setColumn(nrow, "CD_PAYSTEP", this.dsList.getColumn(i, "CD_PAYSTEP"));
				this.dsSave.setColumn(nrow, "DS_REMARK", this.dsList.getColumn(i, "DS_REMARK"));
				this.dsSave.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
		}
	}

	if (this.dsSave.rowcount == 0) return;

	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
											
}


/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}
/*
 *	Reset
 */
this.fnReset = function() {
	this.divSearch.form.ctclDT_BASE.set_value("");
	this.divSearch.form.cboYN_PROMOTION.set_value("%");
	this.divSearch.form.rdoTY_GUBUN.set_value("P");
	
	this.ccfCD_POSITION.form.CDTextBox.set_value("");
	this.ccfCD_POSITION.form.DSTextBox.set_value("");
	
	this.ccfCD_CORP.form.CDTextBox.set_value("");
	this.ccfCD_CORP.form.DSTextBox.set_value("");
	
	this.fnSearchInit();
};
/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnValidate = function() {
 	if(this.gfnIsNull(this.ctclDT_BASE.value)) {		
		this.ctclDT_BASE.setFocus();
		this.gfnAlert("기준일자를 입력해주세요");
		return false;
	}
	else if(this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {		
		this.ccfCD_CORP.form.CDTextBox.setFocus();
		this.gfnAlert("법인을 입력해주세요");
		return false;
	}
	if(this.gfnIsNull(this.cboTY_GUBUN.value)) {		
		this.cboTY_GUBUN.setFocus();
		this.gfnAlert("구분값을 입력해주세요");
		return false;
	}
	
	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
		//this.fnSetButton();
	} else if (svcID == "update") {
		if (errorCode == 0) {
			//this.gfnAlert("대상자여부가 변경되었습니다.");
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	} else if(svcID == "save"){
		if (errorCode == 0) {
			//this.gfnAlert("저장되었습니다.");
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	} else if(svcID == "cancl"){
		if (errorCode == 0) {
			this.fnCanclVal = function() {
				this.FormBtns.Select.click();
			}
			this.gfnAlert("작업이 완료 되었습니다.", "fnCanclVal");
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.fnGrid_ExpandUp = function(obj:nexacro.Grid, e:nexacro.GridMouseEventInfo) {

	var colnm = this.gfnGridGetBindColumnNameByIndex(obj, e.cell);
	
	if(colnm == "CNT_FILE") {
		// 최초 작성시엔 NO_SEQ가 없기 때문에 저장 후에 파일 첨부를 진행하여야 함.
		// CD_DIR에 넣어줄 값이 없기에 저장 후 진행!
		if(this.gfnGetFlag(this.dsList, e.row) == "I"){
			this.gfnAlert("저장 후 파일첨부 진행.");
			return false;
		}
	
		var fileManager = {};
		fileManager.CD_GUBUN = "DA07";
		//fileManager.CD_DIR = [this.dsList.getColumn(e.row, "CD_OWNER")];
		fileManager.CD_DIR = [this.dsList.getColumn(e.row, "CD_CORP"), this.dsList.getColumn(e.row, "DT_BASE"), this.dsList.getColumn(e.row, "ID_PERSON")];	
		fileManager.IS_READONLY = false; 
	
		this.gfnFileManager(fileManager, "fnFileCallback");
	}
}

this.fnFileCallback = function(strID, val) {
	// val.IsChange : 변경여부, val.Cnt : 파일개수
		
	// 파일개수를 다시 셋팅
	this.dsList.set_enableevent(false);
	if(val.Cnt == 0) {
		this.dsList.setColumn(this.dsList.rowposition, "CNT_FILE", "첨부(0)");
	} else {
		this.dsList.setColumn(this.dsList.rowposition, "CNT_FILE", "첨부(" + val.Cnt + ")");
	}
	//this.dsList.setColumn(this.dsList.rowposition, "CNT_FILE", "첨부(" + val.Cnt + ")");
	this.dsList.set_enableevent(true);
};

/*
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		// 폼상태 초기화
		this.gfnSetFormStatus(this);	
		this.gfnGridClear(this.dxGrid);
	}
};

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};
this.dsList_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	this.fnSetButton();
};]]></Script>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ctclDT_BASE" propid="value" datasetid="dsSearch" columnid="DT_BASE"/>
      <BindItem id="item1" compid="divSearch.form.cboYN_PROMOTION" propid="value" datasetid="dsSearch" columnid="YN_PROMOTION"/>
      <BindItem id="item4" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item2" compid="divSearch.form.cboTY_GUBUN" propid="value" datasetid="dsSearch" columnid="TY_GUBUN"/>
    </Bind>
  </Form>
</FDL>
