<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="1280" height="720" titletext="증명서 발급" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0" top="0" height="78.0" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static id="staCD_CORP" taborder="0" text="법인코드" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_CORP" CDTextWidth="50" taborder="1" left="staCD_CORP:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staTY_CERTIFICATE" taborder="2" text="증명종류" left="ccfCD_CORP:0.0" top="10.0" width="92.0" height="24.0" textDecoration="none" cssclass="sta_WF_SchLabel"/>
              <Combo id="cboTY_CERTIFICATE" taborder="3" left="staTY_CERTIFICATE:0.0" top="10.0" width="230" height="24.0" datacolumn="DS_CODE" codecolumn="CD_CODE" value="%" onitemchanged="fnSearchInit" text="전체" index="0" innerdataset="dsTY_CERTIFICATE"/>
              <Static id="staTY_STATUS" taborder="4" text="승인상태" left="cboTY_CERTIFICATE:0.0" top="10.0" width="92.0" height="24.0" textDecoration="none" cssclass="sta_WF_SchLabel"/>
              <Combo id="cboYN_APPROVE" taborder="5" left="staTY_STATUS:0.0" top="10.0" width="89" height="24.0" datacolumn="DS_CODE" codecolumn="CD_CODE" value="%" onitemchanged="fnSearchInit" text="전체" index="0" innerdataset="dsTY_STATUS"/>
              <Static id="staID_SABUN" taborder="6" text="사번" left="0.0" top="staCD_CORP:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfID_SABUN" CDTextWidth="70" taborder="7" left="staID_SABUN:0.0" top="staCD_CORP:10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staDT_SINCHUNG" taborder="10" text="신청일자" left="ccfID_SABUN:0.0" top="staCD_CORP:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Calendar id="calDT_SINCHUNG_FR" taborder="11" left="staDT_SINCHUNG:0.0" top="staCD_CORP:10.0" width="100" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" onchanged="fnSearchInit"/>
              <Static id="staDT_ORD_TO" taborder="13" text="~" left="calDT_SINCHUNG_FR:0.0" top="staCD_CORP:10.0" width="30.0" height="24.0" cssclass="sta_WF_AC"/>
              <Calendar id="calDT_SINCHUNG_TO" taborder="12" left="staDT_ORD_TO:0.0" top="staCD_CORP:10.0" width="100" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" onchanged="fnSearchInit"/>
              <Static id="staCD_DEPT" taborder="8" text="부서" left="calDT_SINCHUNG_TO:0.0" top="staCD_CORP:10.0" width="92.0" height="24.0" visible="false" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_DEPT" CDTextWidth="70" taborder="9" left="staCD_DEPT:0.0" top="staCD_CORP:10.0" width="262" height="24.0" url="cmm::cmmCodeFind.xfdl" text="" visible="false"/>
              <Static id="staID_PERSON" taborder="15" text="ID_PERSON" left="cboYN_APPROVE:0.0" top="10.0" width="110" height="24.0" visible="false" cssclass="sta_WF_SchLabel"/>
              <Edit id="edtID_PERSON" taborder="14" left="staID_PERSON:0.0" top="10.0" width="157" height="24.0" text="부서" visible="false" readonly="true" enable="false"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0" oncelldblclick="divData_objGrid_oncelldblclick"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.fv_tyFlag = "";
this.COL_SPLIT = "|";
this.ROW_SPLIT = ";";

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	  
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton(); 
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	this.fnSetParameterForRpt();
	
	//default
	var today = this.gfnGetDate();
	this.dsSearch.setColumn(0, "TY_CERTIFICATE", "%");
	this.dsSearch.setColumn(0, "YN_APPROVE", "%");
	this.dsSearch.setColumn(0, "DT_SINCHUNG_FR", today.substr(0,6)+"01");
	this.dsSearch.setColumn(0, "DT_SINCHUNG_TO", today);	

	//법인
	this.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);
	this.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP);
	
	//trace("this.FormInfo.GR_SEARCH", this.FormInfo.GR_SEARCH);
		
	if(this.FormInfo.GR_SEARCH != 1) {
		//부서
		this.ccfCD_DEPT.form.CDTextBox.set_value(this.AuthClient.CD_DEPT);
		this.ccfCD_DEPT.form.DSTextBox.set_value(this.AuthClient.DS_DEPT);	
		
		//성명
		this.ccfID_SABUN.form.CDTextBox.set_value(this.AuthClient.ID_SABUN);
		this.ccfID_SABUN.form.fnCodeFindLoad();
		
		this.ccfCD_CORP.set_enable(false);	// 법인
		this.ccfID_SABUN.set_enable(false);	// 성명
		this.ccfCD_DEPT.set_enable(false);	// 부서	
	}
	
	this.dxGrid.setFormatRowProperty( 1, "size", this.dxGrid.getFormatRowProperty(0,"size")*1.8 );

	this.FormBtns.Select.click();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	
	if(this.FormInfo.GR_SEARCH == 1) {
		this.btnApproval 		= this.gfnFormButtonAdd("Approval", "fnApproval");			//승인
		this.btnApprovalCanc 	= this.gfnFormButtonAdd("ApprovalCanc", "fnApprovalCanc");	//승인취소
		this.btnReqList 		= this.gfnFormButtonAdd("ReqList", "fnReqList");			//신청자현황
		this.btnCertiRequest 	= this.gfnFormButtonAdd("CertiRequest", "fnCertiRequest");	//증명서 발급신청
	}else{
		this.btnCertiRequest 	= this.gfnFormButtonAdd("CertiRequest", "fnCertiRequest");	//증명서 발급신청
	}
};

this.fnApproval = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	this.fnApprovalProc("I");
}

this.fnApprovalCanc = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	this.fnApprovalProc("C");
}



// 증명서 신청자 현황
this.fnReqList = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {

	if (this.gfnIsNull(this.calDT_SINCHUNG_FR.value) || this.gfnIsNull(this.calDT_SINCHUNG_FR.value)) {
		this.fnValidCallback = function() {
			this.calDT_SINCHUNG_TO.setFocus();	
		}
		this.gfnAlert("신청기간을 입력해주세요.", "fnValidCallback");
		return false;
	}
	
	var param = {};

	param.CD_CORP = this.gfnNvl(this.ccfCD_CORP.form.CDTextBox.value, "");
	param.TY_CERTIFICATE = this.gfnNvl(this.cboTY_CERTIFICATE.value, "");
	param.YN_APPROVE = this.gfnNvl(this.cboYN_APPROVE.value, "");
	param.ID_SABUN = this.gfnNvl(this.ccfID_SABUN.form.CDTextBox.value, "");
	param.CD_DEPT = this.gfnNvl(this.ccfCD_DEPT.form.CDTextBox.value, "");
	param.DT_SINCHUNG_FR = this.gfnNvl(this.calDT_SINCHUNG_FR.value, "");
	param.DT_SINCHUNG_TO = this.gfnNvl(this.calDT_SINCHUNG_TO.value, "");
	
	//trace("fnReqList>>param", param);
	
	// 내역 / 집계 값 받아오기
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DAA_CERTIFICATE_RPT_DLG", "fnRPTPopupCallBack", param, 400, 250);
}

this.fnRPTPopupCallBack = function (strId, val){	
	//trace("fnRPTPopupCallBack", val);
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	
	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;
	this.ccfCD_DEPT = this.divSearch.form.ccfCD_DEPT;
	this.ccfID_SABUN = this.divSearch.form.ccfID_SABUN;
	this.cboTY_CERTIFICATE = this.divSearch.form.cboTY_CERTIFICATE;
	this.cboYN_APPROVE = this.divSearch.form.cboYN_APPROVE;
	this.calDT_SINCHUNG_FR = this.divSearch.form.calDT_SINCHUNG_FR; 	
	this.calDT_SINCHUNG_TO = this.divSearch.form.calDT_SINCHUNG_TO;	
	this.edtID_PERSON = this.divSearch.form.edtID_PERSON;
	
	this.dxGrid = this.divData.form.objGrid;
	
	this.grSearch = this.FormInfo.GR_SEARCH;	// 권한
	this.cdGroup = this.AuthClient.CD_GROUP;	// 그룹코드	
	
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	
	this.ccfCD_CORP.CodeFindName = "DAX_CFCORP";
	this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";	
	
	this.ccfCD_DEPT.CodeFindName = "DAX_CFDEPT";
	this.ccfCD_DEPT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_DEPT.AfterCDTextChanged = "fnAfterCDTextChanged";	
			
	this.ccfID_SABUN.CodeFindName = "DAX_CFBASEINFO_ALL";	
	this.ccfID_SABUN.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfID_SABUN.AfterCDTextChanged = "fnAfterCDTextChanged";	

	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DA", "DAA_CERTIFICATE");
	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
	this.dxGrid.AfterCDTextChanged = "fnGrid_AfterCDTextChanged";
	//this.dxGrid.AfterEdit = "fnGrid_AfterEdit";
	this.dxGrid.EnterCell = "fnGrid_EnterCell";

};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("CD_DEPT", "string");
	this.dsSelect.addColumn("ID_SABUN", "string");
	this.dsSelect.addColumn("TY_CERTIFICATE", "string");
	this.dsSelect.addColumn("YN_APPROVE", "string");
	this.dsSelect.addColumn("DT_SINCHUNG_FR", "string");
	this.dsSelect.addColumn("DT_SINCHUNG_TO", "string");
	this.dsSelect.addColumn("GR_SEARCH", "string");
	this.dsSelect.addColumn("GR_DEPT", "string");
	this.dsSelect.addColumn("ID_LOGIN", "string");

	this.dsSave = new Dataset();
	this.dsSave.addColumn("TY_SAVE", "string");
	this.dsSave.addColumn("NO_SEQ", "int");
	this.dsSave.addColumn("CD_CORP_REQUEST", "string");
	this.dsSave.addColumn("ID_SABUN_REQUEST", "string");
	this.dsSave.addColumn("CD_DEPT_REQUEST", "string");
	this.dsSave.addColumn("ID_PERSON_REQUEST", "int");
	this.dsSave.addColumn("CD_CORP", "string");
	this.dsSave.addColumn("ID_SABUN", "string");
	this.dsSave.addColumn("ID_PERSON", "int");
	this.dsSave.addColumn("CD_DEPT", "string");
	this.dsSave.addColumn("CD_POSITION", "string");
	this.dsSave.addColumn("CD_DUTY", "string");
	this.dsSave.addColumn("DS_ADDRESS", "string");
	this.dsSave.addColumn("YN_RESIDENT", "string");
	this.dsSave.addColumn("YN_INGAM", "string");
	this.dsSave.addColumn("NO_CERTIFICATE", "string");
	this.dsSave.addColumn("TY_CERTIFICATE", "string");
	this.dsSave.addColumn("DT_SINCHUNG", "string");
	this.dsSave.addColumn("DS_SUBMIT", "string");
	this.dsSave.addColumn("DS_USE", "string");
	this.dsSave.addColumn("YY_RECEIPT", "string");
	this.dsSave.addColumn("DS_REMARK", "string");
	this.dsSave.addColumn("YN_JOIN", "string");
	this.dsSave.addColumn("YM_INCOME", "string");
	this.dsSave.addColumn("CD_BAL_DEPT", "string");
	this.dsSave.addColumn("CD_BAL_POSITION", "string");
	this.dsSave.addColumn("DT_BAL_JOIN", "string");
	this.dsSave.addColumn("DT_BAL_FROM", "string");
	this.dsSave.addColumn("DT_BAL_TO", "string");
	this.dsSave.addColumn("GR_SEARCH", "string");
	this.dsSave.addColumn("TY_AUTH", "string");
	this.dsSave.addColumn("GR_DEPT", "string");
	this.dsSave.addColumn("ID_USER", "string");
	
	
	this.dsApproval = new Dataset();
	this.dsApproval.addColumn("ID_PERSON", "string");
	this.dsApproval.addColumn("NO_SEQ", "string");
	this.dsApproval.addColumn("GR_SEARCH", "string");	
	this.dsApproval.addColumn("GR_DEPT", "string");	
	this.dsApproval.addColumn("ID_LOGIN", "string");	
}

this.fnSetParameterForRpt = function() {	
	
	// 출력물(A, B, C, E) 형 
	// A	재직증명서
	// C	경력증명서
	// E	퇴직증명서
	this.dsSelectRpt = new Dataset();
	this.dsSelectRpt.addColumn("ID_LOGIN", "string"); 		
	this.dsSelectRpt.addColumn("MULTI_DATA", "string"); 	
	
	// 출력물(G : 갑종근로소득 원천징수확인서) 
	this.dsSelectRptG = new Dataset();
	this.dsSelectRptG.addColumn("CD_CORP", "string");
	this.dsSelectRptG.addColumn("ID_SABUN", "string");
	this.dsSelectRptG.addColumn("FR_BASE", "string");//대상기간 FROM
	this.dsSelectRptG.addColumn("TO_BASE", "string");//대상기간 TO
	this.dsSelectRptG.addColumn("TY_TAX", "string"); //비과세포함/비과세불포함 I(INCLUDE) 포함 / O (INCLUDE OUT) 불포함
	this.dsSelectRptG.addColumn("TY_SINGO", "string"); //신고구분 M(MONTHLY)매월 / H(HALF)반기
	//this.dsSelectRptG.addColumn("YN_STAMP_IMG", "string"); //인감여부
		

	// 출력물(F : 근로소득 원천징수영수증(연말)) 
	//원천징수영수증출력 main
	this.dsSelectRptF = new Dataset();
	this.dsSelectRptF.addColumn("YY_BASE", "string");
	this.dsSelectRptF.addColumn("NO_APPLY", "int");
	this.dsSelectRptF.addColumn("ID_RESIDENT", "string");
	this.dsSelectRptF.addColumn("TY_ORDERBY", "int");
	this.dsSelectRptF.addColumn("TY_SIGN", "int");
	this.dsSelectRptF.addColumn("YN_MID", "string");
	this.dsSelectRptF.addColumn("CD_CORP", "string");
	this.dsSelectRptF.addColumn("YN_STAMP_IMG", "string");
	
	//출력물(F : 근로소득 원천징수영수증(연말))  sub
	this.dsSelectRptFSub = new Dataset();
	this.dsSelectRptFSub.addColumn("YY_BASE", "string");
	this.dsSelectRptFSub.addColumn("MM_BASE", "string");
	this.dsSelectRptFSub.addColumn("NO_APPLY", "int");
	this.dsSelectRptFSub.addColumn("ID_RESIDENT", "string");
	this.dsSelectRptFSub.addColumn("YN_MID", "string");
	this.dsSelectRptFSub.addColumn("CD_CORP", "string");		

	//출력물(I : 근로소득 원천징수부) 
	this.dsSelectRptI = new Dataset();
	this.dsSelectRptI.addColumn("YM_BASE", "string");
	this.dsSelectRptI.addColumn("NO_APPLY", "int");
	this.dsSelectRptI.addColumn("ID_RESIDENT", "string"); 
	this.dsSelectRptI.addColumn("TY_ORDERBY", "int");
	this.dsSelectRptI.addColumn("CD_ORG2", "string");
	this.dsSelectRptI.addColumn("CD_CORP", "string");
	this.dsSelectRptI.addColumn("YN_STAMP_IMG", "string");
	
	this.dsSelectRptISub = new Dataset();
	this.dsSelectRptISub.addColumn("YY_BASE", "string");
	this.dsSelectRptISub.addColumn("MM_BASE", "string");
	this.dsSelectRptISub.addColumn("NO_APPLY", "int");
	this.dsSelectRptISub.addColumn("ID_RESIDENT", "string");
	this.dsSelectRptISub.addColumn("TY_ORDERBY", "int");
	this.dsSelectRptISub.addColumn("CD_ORG2", "string");
	this.dsSelectRptISub.addColumn("CD_CORP", "string"); 
	this.dsSelectRptISub.addColumn("YN_STAMP_IMG", "string");

}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() { // 데이터 조회용 select 
	if (!this.fnSelectValid()) return false;
 
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();

	this.dsSelect.setColumn(0, "CD_CORP", this.gfnNvl(this.dsSearch.getColumn(0, "CD_CORP"), ""));
	this.dsSelect.setColumn(0, "CD_DEPT", this.gfnNvl(this.dsSearch.getColumn(0, "CD_DEPT"), ""));
	this.dsSelect.setColumn(0, "ID_SABUN", this.gfnNvl(this.dsSearch.getColumn(0, "ID_SABUN"), ""));
	this.dsSelect.setColumn(0, "TY_CERTIFICATE", this.gfnNvl(this.dsSearch.getColumn(0, "TY_CERTIFICATE"), ""));// 증명종류 A:재직, B:재직(기술자), C:경력, D:경력확인, E:퇴직, F:원천징수, G:갑근세
	this.dsSelect.setColumn(0, "YN_APPROVE", this.gfnNvl(this.dsSearch.getColumn(0, "YN_APPROVE"), ""));// 상태조회 (%:전체, Y: 승인 N:미승인)
	this.dsSelect.setColumn(0, "DT_SINCHUNG_FR", this.gfnNvl(this.dsSearch.getColumn(0, "DT_SINCHUNG_FR"), ""));
	this.dsSelect.setColumn(0, "DT_SINCHUNG_TO", this.gfnNvl(this.dsSearch.getColumn(0, "DT_SINCHUNG_TO"), ""));
	this.dsSelect.setColumn(0, "GR_SEARCH", this.FormInfo.GR_SEARCH);
	this.dsSelect.setColumn(0, "GR_DEPT", this.AuthClient.CD_DEPT);
	this.dsSelect.setColumn(0, "ID_LOGIN", this.AuthClient.ID_USER);

	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0 dsListSub=select1";
	var strArg      = "";
	var callBackFnc = "fnCallback";		
	
	this.gfnTransaction( strSvcId , 	 
						strSvcType , 	 
						inProc,			 
						inData , 		 
						outData , 		 
						strArg, 	 
						callBackFnc); 
};



/*
 *	입력 버튼
 */
this.fnAdd = function() {

}	

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	var yn_approve = this.gfnNvl(this.dsList.getColumn(this.dsList.rowposition, "YN_APPROVE"));
	if(yn_approve == "Y"){
		this.gfnAlert("승인된 내역은 삭제가 불가능합니다. 확인해주세요.");
		return;
	}
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	// 그리드 필수항목 체크
	if (!this.gfnGridValidate(this.dxGrid)) return;

	this.dxGrid.updateToDataset();

	this.dsSave.clearData();	
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {	
			case "D":
				var nrow = this.dsSave.addRow();
				this.dsSave.setColumn(nrow, "TY_SAVE", flag);
				this.dsSave.setColumn(nrow, "NO_SEQ", this.dsList.getColumn(i, "NO_SEQ"));
				this.dsSave.setColumn(nrow, "CD_CORP_REQUEST", this.gfnNvl(this.dsList.getColumn(i, "CD_CORP_REQUEST"), ""));
				this.dsSave.setColumn(nrow, "ID_SABUN_REQUEST", this.gfnNvl(this.dsList.getColumn(i, "ID_SABUN_REQUEST"), ""));
				this.dsSave.setColumn(nrow, "CD_DEPT_REQUEST", this.gfnNvl(this.dsList.getColumn(i, "CD_DEPT_REQUEST"), ""));
				this.dsSave.setColumn(nrow, "ID_PERSON_REQUEST", this.gfnNvl(this.dsList.getColumn(i, "ID_PERSON_REQUEST"), 0));
				this.dsSave.setColumn(nrow, "CD_CORP", this.gfnNvl(this.dsList.getColumn(i, "CD_CORP"), ""));
				this.dsSave.setColumn(nrow, "ID_SABUN", this.gfnNvl(this.dsList.getColumn(i, "ID_SABUN"), ""));
				this.dsSave.setColumn(nrow, "ID_PERSON", this.gfnNvl(this.dsList.getColumn(i, "ID_PERSON"), 0));
				this.dsSave.setColumn(nrow, "CD_DEPT", this.gfnNvl(this.dsList.getColumn(i, "CD_DEPT"), ""));
				this.dsSave.setColumn(nrow, "CD_POSITION", this.gfnNvl(this.dsList.getColumn(i, "CD_POSITION"), ""));
				this.dsSave.setColumn(nrow, "CD_DUTY", this.gfnNvl(this.dsList.getColumn(i, "CD_DUTY"), ""));
				this.dsSave.setColumn(nrow, "DS_ADDRESS", this.gfnNvl(this.dsList.getColumn(i, "DS_ADDRESS"), ""));
				this.dsSave.setColumn(nrow, "YN_RESIDENT", this.gfnNvl(this.dsList.getColumn(i, "YN_RESIDENT"), ""));
				this.dsSave.setColumn(nrow, "YN_INGAM", this.gfnNvl(this.dsList.getColumn(i, "YN_INGAM"), ""));
				this.dsSave.setColumn(nrow, "NO_CERTIFICATE", this.gfnNvl(this.dsList.getColumn(i, "NO_CERTIFICATE"), ""));
				this.dsSave.setColumn(nrow, "TY_CERTIFICATE", this.gfnNvl(this.dsList.getColumn(i, "TY_CERTIFICATE"), ""));
				this.dsSave.setColumn(nrow, "DT_SINCHUNG", this.gfnNvl(this.dsList.getColumn(i, "DT_SINCHUNG"), ""));
				this.dsSave.setColumn(nrow, "DS_SUBMIT", this.gfnNvl(this.dsList.getColumn(i, "DS_SUBMIT"), ""));
				this.dsSave.setColumn(nrow, "DS_USE", this.gfnNvl(this.dsList.getColumn(i, "DS_USE"), ""));
				this.dsSave.setColumn(nrow, "YY_RECEIPT", this.gfnNvl(this.dsList.getColumn(i, "YY_RECEIPT"), ""));
				this.dsSave.setColumn(nrow, "DS_REMARK", this.gfnNvl(this.dsList.getColumn(i, "DS_REMARK"), ""));
				this.dsSave.setColumn(nrow, "YN_JOIN", this.gfnNvl(this.dsList.getColumn(i, "YN_JOIN"), ""));
				this.dsSave.setColumn(nrow, "YM_INCOME",this.gfnNvl(this.dsList.getColumn(i, "YM_INCOME"), ""));
				this.dsSave.setColumn(nrow, "CD_BAL_DEPT", this.gfnNvl(this.dsList.getColumn(i, "CD_BAL_DEPT"), ""));
				this.dsSave.setColumn(nrow, "CD_BAL_POSITION", this.gfnNvl(this.dsList.getColumn(i, "CD_BAL_POSITION"), ""));
				this.dsSave.setColumn(nrow, "DT_BAL_JOIN", this.gfnNvl(this.dsList.getColumn(i, "DT_BAL_JOIN"), ""));
				this.dsSave.setColumn(nrow, "DT_BAL_FROM", this.gfnNvl(this.dsList.getColumn(i, "DT_BAL_FROM"), ""));
				this.dsSave.setColumn(nrow, "DT_BAL_TO", this.gfnNvl(this.dsList.getColumn(i, "DT_BAL_TO"), ""));
				this.dsSave.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
				this.dsSave.setColumn(nrow, "TY_AUTH", this.FormInfo.TY_AUTH);
				this.dsSave.setColumn(nrow, "GR_DEPT", this.AuthClient.CD_DEPT);
				this.dsSave.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
				break;
		}
	}

	if (this.dsSave.rowcount == 0) return;

	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";

	this.gfnTransaction( strSvcId ,  
						strSvcType ,  
						inProc,		 
						inData , 	 
						outData , 	 
						strArg, 		 
						callBackFnc);  
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
	this.fnPrintProc();
	
	return false; //브라우저 프린트 막기
}

this.fnPrintProc = function(){
// A	재직증명서
// C	경력증명서
// E	퇴직증명서
// F	근로소득원천징수영수증(연말정산)
// G	갑종근로소득 원천징수확인서
// I	근로소득 원천징수부	

	if(this.dsList.rowcount == 0){
		this.gfnAlert("조회후 작업하세요!");
		return false;
	}	
	
	var nChkRow = this.dsList.getCaseCount( "CHK == '1'" );
	if (nChkRow <= 0){
		this.gfnAlert("선택한 자료가 없습니다. 출력할 자료를 선택하세요");
		return false;
	}
	
	var nCntPrintKind = 0;
	
	var nCnt = 0; 
	
	var nCntACE = 0;// A	재직증명서, C	경력증명서, E	퇴직증명서
	var nCntF = 0; 	// F	근로소득원천징수영수증(연말정산)
	var nCntG = 0; 	// G	갑종근로소득 원천징수확인서
	var nCntI = 0; 	// I	근로소득 원천징수부	
	
	for(var i=0;i<this.dsList.rowcount;i++){	
		var rtn = this.fnPrintValid(i, true);
		//trace("111111>>", i, rtn);
		
		if(rtn == 1){ 
			continue;
		}
		else if(rtn == -1){
			return;
		}
		else if(rtn == 0){
			var sTY_CERTIFICATE = this.dsList.getColumn(i, "TY_CERTIFICATE");
			if(sTY_CERTIFICATE == "A"||sTY_CERTIFICATE == "C"||sTY_CERTIFICATE == "E"){
				nCntACE++;
			}
			else if(sTY_CERTIFICATE == "F"){
				nCntF++;
			}
			else if(sTY_CERTIFICATE == "G"){
				nCntG++;
			}
			else if(sTY_CERTIFICATE == "I"){
				nCntI++;
			}

			nCnt++;
		}
	}
	if(nCnt == 0){
		return false;
	}
	
	if(nCntACE > 0) nCntPrintKind++;
	if(nCntF > 0) nCntPrintKind++;
	if(nCntG > 0) nCntPrintKind++;
	if(nCntI > 0) nCntPrintKind++;
	
	if(nCntPrintKind > 1){
		this.gfnAlert("선태한 내역 중 발급구분(증명서종류)이 다른 데이터가 있습니다.\n(재직,경력,퇴직증명서는 함께 발행가능)");
		return false;
	}
	if(nCntF > 1){ //F	근로소득원천징수영수증(연말정산)
		this.gfnAlert("근로소득원천징수영수증은 한건씩 발행가능합니다.");
		return false;
	}
	if(nCntG > 1){ //G	갑종근로소득 원천징수확인서
		this.gfnAlert("갑종근로소득 원천징수확인서는 한건씩 발행가능합니다.");
		return false;
	}
	if(nCntI > 1){ //I	근로소득 원천징수부
		this.gfnAlert("근로소득 원천징수부는 한건씩 발행가능합니다.");
		return false;
	}
	
	//발행 호출
	if(nCntACE > 0) this.fnPrint_ACE(nCntACE);
	if(nCntF > 0) this.fnPrint_F(nCntF);
	if(nCntG > 0) this.fnPrint_G(nCntG);
	if(nCntI > 0) this.fnPrint_I(nCntI);

}

this.fnPrintValid = function(targetIdx, bMsgDisplay){
	var flag = this.gfnGetFlag(this.dsList, targetIdx);	
	if(flag == "#"){
		return 1;
	}
	if(this.dsList.getColumn(targetIdx, "CHK") != "1"){
		return 1;
	}
	if(this.dsList.getColumn(targetIdx, "YN_APPROVE") != "Y"){
		if(bMsgDisplay){
			this.gfnAlert("승인완료 후 증명서 출력이 가능합니다."); 
		}
		return -1;
	}
	if(this.dsList.getColumn(targetIdx, "TY_CERTIFICATE") == "D"){
		if(bMsgDisplay){
			this.gfnAlert("경력확인서는 출력이 불가능합니다. 인사팀으로 문의해주세요."); 
		}
		return -1;
	}
	if(this.dsList.getColumn(targetIdx, "TY_CERTIFICATE") == "I"){
		if(this.gfnIsNull(this.dsList.getColumn(targetIdx, "ID_RESIDENT"))){
			if(bMsgDisplay){
				this.gfnAlert("근로소득원천징수부는 주민등록번호가 필수입니다."); 
			}
			return -1;
		}
	}	
	
	if( this.gfnAddDate(this.dsList.getColumn(targetIdx, "DT_APPROVE"), 7) < this.gfnGetDate()){
		if(bMsgDisplay){
			this.gfnAlert("승인일 기준 8일이상 지난 신청건은 출력할 수 없습니다."); 
		}
		return -1;
	}
	
	return 0;
}

// A	재직증명서
// C	경력증명서
// E	퇴직증명서
// 멀티 데이타 발행 가능함
this.fnPrint_ACE = function(nReqCnt){
	trace("fnPrint_ACE>>nReqCnt>>"+nReqCnt);
	
	this.dsSelectRpt.clearData();
	this.dsSelectRpt.addRow();
	
	//out
	this.dsRptListAB.clearData();	
	this.dsRptListABTemp.clearData();	

	
	var strData = "";
	for(var i=0;i<this.dsList.rowcount;i++){	
		var rtn = this.fnPrintValid(i, true);
		//trace("111111>>", i, rtn);
		
		if(rtn == 1){ 
			continue;
		}
		else if(rtn == -1){
			return;
		}
		else if(rtn == 0){
			var sTY_CERTIFICATE = this.dsList.getColumn(i, "TY_CERTIFICATE");	
			trace("증명종류->" + sTY_CERTIFICATE);	
			
			if(sTY_CERTIFICATE == "A" || sTY_CERTIFICATE == "C" || sTY_CERTIFICATE == "E"){
				var ID_PERSON = this.gfnNvl(this.dsList.getColumn(i, "ID_PERSON"), "");
				var NO_SEQ = this.gfnNvl(this.dsList.getColumn(i, "NO_SEQ"), "");  		 
			
				var sRowData = ID_PERSON + this.COL_SPLIT + NO_SEQ ;
				strData += sRowData + this.ROW_SPLIT;		
			}
		}
	}
	strData = strData.substr(0, strData.length - 1);
	
	this.dsSelectRpt.setColumn(0, "ID_LOGIN", this.AuthClient.ID_SABUN); 
	this.dsSelectRpt.setColumn(0, "MULTI_DATA", strData);
	
	var strSvcId    = "selectRptAB";	 
	var strSvcType  = "select";  
	var inProc		= "_dsProc";
	var inData      = "selectRptAB=dsSelectRpt";		 
	var outData     = "dsRptListABTemp=selectRptAB0";  
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	 
						strSvcType , 	 
						inProc,			 
						inData , 		 
						outData , 		 
						strArg, 		 
						callBackFnc);  		
}

// F	근로소득원천징수영수증(연말정산)
// 단건 발행만됨
this.fnPrint_F = function(nReqCnt){
	trace("fnPrint_F>>nReqCnt>>"+nReqCnt);

	this.dsRptListF.clearData();
	
	for(var i=0;i<this.dsList.rowcount;i++){	
		var rtn = this.fnPrintValid(i, true);
		//trace("111111>>", i, rtn);
		
		if(rtn == 1){ 
			continue;
		}
		else if(rtn == -1){
			return;
		}
		else if(rtn == 0){
			var sTY_CERTIFICATE = this.dsList.getColumn(i, "TY_CERTIFICATE");	
			trace("증명종류->" + sTY_CERTIFICATE);	
			
			if(sTY_CERTIFICATE == "F"){		

				//근로소득 원천징수영수증.	
				this.dsSelectRptF.clearData();
				this.dsSelectRptF.addRow();
				this.dsSelectRptFSub.clearData();
				this.dsSelectRptFSub.addRow();			
				
trace("YY_RECEIPT", this.dsList.getColumn(i, "YY_RECEIPT"));		

				this.dsSelectRptF.setColumn(0, "YY_BASE", this.dsList.getColumn(i, "YY_RECEIPT").substring(0,4)+"12");
				this.dsSelectRptF.setColumn(0, "NO_APPLY", "1");
				this.dsSelectRptF.setColumn(0, "ID_RESIDENT", this.fnReplace(this.dsList.getColumn(i, "ID_RESIDENT"), "-", ""));
				this.dsSelectRptF.setColumn(0, "TY_ORDERBY", "2");		// 1 부서, 2 주민번호, 3 법인
				this.dsSelectRptF.setColumn(0, "TY_SIGN", "3"); //1	발행자 보고용,2	발행자 보관용,3	소득자 보관용
				this.dsSelectRptF.setColumn(0, "YN_MID", "N"); //연말정산/중도정산
				this.dsSelectRptF.setColumn(0, "CD_CORP", this.dsList.getColumn(i, "CD_CORP"));
				this.dsSelectRptF.setColumn(0, "YN_STAMP_IMG", this.dsList.getColumn(i, "YN_INGAM"));				

				this.dsSelectRptFSub.setColumn(0, "YY_BASE", this.dsList.getColumn(i, "YY_RECEIPT").substring(0,4));
				this.dsSelectRptFSub.setColumn(0, "MM_BASE", "12");
				this.dsSelectRptFSub.setColumn(0, "NO_APPLY",  "1");
				this.dsSelectRptFSub.setColumn(0, "ID_RESIDENT", this.fnReplace(this.dsList.getColumn(i, "ID_RESIDENT"), "-", ""));
				this.dsSelectRptFSub.setColumn(0, "YN_MID", "N");
				this.dsSelectRptFSub.setColumn(0, "CD_CORP", this.dsList.getColumn(i, "CD_CORP"));	
				break; //무조건 최초 선택된 데이타만 출력됨
			}
		}
	}
	
	var strSvcId    = "selectRpt4";	 
	var strSvcType  = "select";  
	var inProc		= "_dsProc";
	var inData      = "reportF=dsSelectRptF reportFSub1=dsSelectRptFSub reportFSub2=dsSelectRptFSub";
	var outData     = "dsRptListF=reportF0";  
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	 
						strSvcType , 	 
						inProc,			 
						inData , 		 
						outData , 		 
						strArg, 		 
						callBackFnc);  		
}

// G	갑종근로소득 원천징수확인서
this.fnPrint_G = function(nReqCnt){
	trace("fnPrint_G>>nReqCnt>>"+nReqCnt);
	
	this.dsRptListG.clearData();

	for(var i=0;i<this.dsList.rowcount;i++){	
		var rtn = this.fnPrintValid(i, true);
		
		if(rtn == 1){ 
			continue;
		}
		else if(rtn == -1){
			return;
		}
		else if(rtn == 0){
			var sTY_CERTIFICATE = this.dsList.getColumn(i, "TY_CERTIFICATE");	
			trace("증명종류->" + sTY_CERTIFICATE);	
			
			if(sTY_CERTIFICATE == "G"){				
			
				this.dsRptListGTemp.clearData();
			
				//갑종근로소득 원천징수확인서
				this.dsSelectRptG.clearData();
				this.dsSelectRptG.addRow();
				this.dsSelectRptG.setColumn(0, "CD_CORP", this.dsList.getColumn(i, "CD_CORP"));  //법인
				this.dsSelectRptG.setColumn(0, "ID_SABUN", this.dsList.getColumn(i, "ID_SABUN"));  //사번
				this.dsSelectRptG.setColumn(0, "FR_BASE", this.dsList.getColumn(i, "YM_INCOME_FROM"));  //대상기간 FROM
				this.dsSelectRptG.setColumn(0, "TO_BASE", this.dsList.getColumn(i, "YM_INCOME_TO"));  //대상기간 TO
				this.dsSelectRptG.setColumn(0, "TY_TAX", this.gfnNvl(this.dsList.getColumn(i, "TY_TAX"), "I"));  //비과세포함/비과세불포함 I(INCLUDE) 포함 / O (INCLUDE OUT) 불포함
				this.dsSelectRptG.setColumn(0, "TY_SINGO", "M");  //신고구분 M(MONTHLY)매월 / H(HALF)반기
				//this.dsSelectRptG.setColumn(0, "YN_STAMP_IMG", "Y");  //인감여부
				break; //무조건 최초 선택된 데이타만 출력됨
			}
		}
	}
	
	var strSvcId    = "selectRpt3";	 
	var strSvcType  = "select";  
	var inProc		= "_dsProc";
	var inData 		= "selectRptG=dsSelectRptG";	 
	var outData 	= "dsRptListGTemp=selectRptG0";  
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	 
						strSvcType , 	 
						inProc,			 
						inData , 		 
						outData , 		 
						strArg, 		 
						callBackFnc);  	
}

// I	근로소득 원천징수부	
this.fnPrint_I = function(nReqCnt){
	trace("fnPrint_I>>nReqCnt>>"+nReqCnt);
	
	for(var i=0;i<this.dsList.rowcount;i++){	
		var rtn = this.fnPrintValid(i, true);
		
		if(rtn == 1){ 
			continue;
		}
		else if(rtn == -1){
			return;
		}
		else if(rtn == 0){
			var sTY_CERTIFICATE = this.dsList.getColumn(i, "TY_CERTIFICATE");	
			trace("증명종류->" + sTY_CERTIFICATE);	
			
			if(sTY_CERTIFICATE == "I"){			
				this.dsSelectRptI.clearData();
				this.dsSelectRptISub.clearData();			
		
				//근로소득 원천징수부
				this.dsSelectRptI.addRow();
				var beforeYear = this.gfnAddDate(this.dsList.getColumn(i, "YM_INCOME")+"01", -365).substr(0,4) + "12";
				trace("beforeYear", beforeYear);
				//this.dsSelectRptI.setColumn(0, "YM_BASE", beforeYear); //this.dsList.getColumn(i, "YM_INCOME").substring(0,6));
				this.dsSelectRptI.setColumn(0, "YM_BASE", this.dsList.getColumn(i, "YM_INCOME").substring(0,6));
				this.dsSelectRptI.setColumn(0, "NO_APPLY", 1);
				this.dsSelectRptI.setColumn(0, "ID_RESIDENT", this.dsList.getColumn(i, "ID_RESIDENT"));
				this.dsSelectRptI.setColumn(0, "TY_ORDERBY", "2");	// 1 부서, 2 주민번호
				this.dsSelectRptI.setColumn(0, "CD_ORG2", "");//				0this.dsList.getColumn(i, "CD_DEPT")); //부서
				this.dsSelectRptI.setColumn(0, "CD_CORP", this.dsList.getColumn(i, "CD_CORP"));
				this.dsSelectRptI.setColumn(0, "YN_STAMP_IMG", this.dsList.getColumn(i, "YN_INGAM"));	
				
				this.dsSelectRptISub.addRow();
				//this.dsSelectRptISub.setColumn(0, "YY_BASE", beforeYear.substring(0,4));
				//this.dsSelectRptISub.setColumn(0, "MM_BASE", beforeYear.substring(4,6));
				this.dsSelectRptISub.setColumn(0, "YY_BASE", this.dsList.getColumn(i, "YM_INCOME").substring(0,4));
				this.dsSelectRptISub.setColumn(0, "MM_BASE", this.dsList.getColumn(i, "YM_INCOME").substring(4,6));
				this.dsSelectRptISub.setColumn(0, "NO_APPLY", 1);
				this.dsSelectRptISub.setColumn(0, "ID_RESIDENT", this.dsList.getColumn(i, "ID_RESIDENT"));
				this.dsSelectRptISub.setColumn(0, "TY_ORDERBY", "2");	// 1 부서, 2 주민번호
				this.dsSelectRptISub.setColumn(0, "CD_ORG2", "");//this.dsList.getColumn(i, "CD_DEPT")); //부서
				this.dsSelectRptISub.setColumn(0, "CD_CORP", this.dsList.getColumn(i, "CD_CORP"));
				this.dsSelectRptISub.setColumn(0, "YN_STAMP_IMG", this.dsList.getColumn(i, "YN_INGAM"));	
				break; //무조건 최초 선택된 데이타만 출력됨
			}
		}
	}
	
	var strSvcId    = "selectRpt5";	 
	var strSvcType  = "select";  
	var inProc		= "_dsProc";
	var inData      = "reportI=dsSelectRptI reportISub=dsSelectRptISub";
	var outData     = "dsRptListI=reportI0 dsRptListISub=reportISub0";				
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	 
						strSvcType , 	 
						inProc,			 
						inData , 		 
						outData , 		 
						strArg, 		 
						callBackFnc);  		
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValid = function() {

 	if(this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)){
 		this.gfnAlert("법인을 입력하세요.");	
 		this.ccfCD_CORP.form.CDTextBox.setFocus();		
 		return false;
 	}
// 
// 	if(this.gfnIsNull(this.ccfID_SABUN.form.CDTextBox.value)){
// 		this.gfnAlert("사번을 입력하세요.");	
// 		this.ccfID_SABUN.form.CDTextBox.setFocus();		
// 		return false;
// 	}
// 
// 	if(this.gfnIsNull(this.divSearch.form.calDT_SINCHUNG_FR.value)){
// 		this.gfnAlert("시작일을 입력하세요.");	
// 		this.calDT_SINCHUNG_FR.setFocus();		
// 		return false;
// 	}
// 	
// 	if(this.gfnIsNull(this.divSearch.form.calDT_SINCHUNG_TO.value)){
// 		this.gfnAlert("종료일을 입력하세요.");	
// 		this.calDT_SINCHUNG_TO.setFocus();		
// 		return false;
// 	}
// 	
// 	if(!this.gfnIsNull(this.divSearch.form.calDT_SINCHUNG_FR.value) && !this.gfnIsNull(this.divSearch.form.calDT_SINCHUNG_TO.value)){	
// 		if(this.divSearch.form.calDT_SINCHUNG_FR.value > this.divSearch.form.calDT_SINCHUNG_TO.value){
// 			validate = false;	
// 			this.gfnAlert("신청 시작일이 종료일보다 클 수 없습니다.");	
// 			this.calDT_SINCHUNG_FR.setFocus();
// 			return false;
// 		}
// 	}
	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
	
	}
	else if(svcID == "save"){
		if (errorCode == 0) {	
			this.gfnAlert("작업이 완료되었습니다.");
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	else if(svcID == "approval"){
		if (errorCode == 0) {
			this.gfnAlert("승인이 완료되었습니다.");
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}		
	}
	else if(svcID == "cancel"){
		if (errorCode == 0) {
			this.gfnAlert("승인취소 되었습니다.");
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}		
	}
	else if(svcID == "selectRptAB"){	//재직증명서, 경력증명서, 퇴직증명서	
		if(this.dsRptListABTemp.rowcount > 0){ 
			var nCopyCnt = this.dsRptListAB.copyData(this.dsRptListABTemp);
			trace("재직, 경력, 퇴직>>nCopyCnt>>", nCopyCnt);
			trace("재직, 경력, 퇴직>>this.dsRptListAB.rowcount>>", this.dsRptListAB.rowcount);

			var inProc		= "_dsProc"; 								 
			var inParam 	= "params=dsRptListAB";						 
			var inData      = "";										 
			var reportpath  = "/da/daa/DAA_CERTIFICATE_ABCE.ozr";
			gfnOpenReport(this, reportpath, inProc, inParam, inData, false, 'selectRptAB');	
		}else{
			this.gfnAlert("출력할 자료가 없습니다.");
			return;
		}
	}
	else if(svcID == "selectRpt4"){	// 근로소득 원천징수영수증		
		if(this.dsRptListF.rowcount > 0){
			var inProc		= "_dsProc";
			var inParam 	= "";
			var inData      = "reportF=dsSelectRptF reportFSub1=dsSelectRptFSub reportFSub2=dsSelectRptFSub";
			var reportpath  = "/da/dav/DAV_YEARENDRECEIPT.ozr";
			gfnOpenReport(this, reportpath, inProc, inParam, inData, false, 'selectRpt4');
		}else{
			this.gfnAlert("출력할 자료가 없습니다.[근로소득 원천징수영수증]");
			return;
		}
	}	
	else if(svcID == "selectRpt3"){	// 갑근세
		if(this.dsRptListGTemp.rowcount > 0){ 
			var inProc		= "_dsProc"; 								 
			var inParam 	= "";
			var inData 		= "selectRptG=dsSelectRptG";									 
			var reportpath  = "/da/daa/DAA_CERTIFICATE_G.ozr";	
			gfnOpenReport(this, reportpath, inProc, inParam, inData, false, 'selectRpt3');				
		}else{
			this.gfnAlert("출력할 자료가 없습니다.[갑근세]");
			return;
		}
	}	
	else if(svcID == "selectRpt5"){	// 근로소득 원천징수부
		if(this.dsRptListI.rowcount > 0){ 
			var inProc		= "_dsProc";
			var inParam 	= "params=dsRptListI";			// 조회SP이외 사용할 정보						 
			var inData      = "reportI=dsSelectRptI reportISub=dsSelectRptISub";
			var reportpath  = "/da/dav/DAV_YEARENDCOLLECT.ozr";
			gfnOpenReport(this, reportpath, inProc, inParam, inData, false, 'selectRpt5');		
		}else{
			this.gfnAlert("출력할 자료가 없습니다.[근로소득 원천징수부]");
			return;
		}
	}	
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if(id == "ccfCD_CORP") {
		;
	}
	else if(id == "ccfCD_DEPT"){
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "CD_DEPT", this.gfnNvl(this.AuthClient.CD_DEPT,""));
		dsUserParam.setColumn(nrow, "CD_CORP", this.gfnNvl(this.ccfCD_CORP.form.CDTextBox.value,"%"));
		//dsUserParam.setColumn(nrow, "YN_CURRENT", "");
		dsUserParam.setColumn(nrow, "YN_DELETE", "N");				
	}
	else if(id == "ccfID_SABUN"){
		dsUserParam.setColumn(nrow, "CD_DEPT", "");//this.gfnNvl(this.AuthClient.CD_DEPT,""));
		dsUserParam.setColumn(nrow, "CD_CORP", this.gfnNvl(this.ccfCD_CORP.form.CDTextBox.value,"%"));
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
		dsUserParam.setColumn(nrow, "YN_CORP", "N");
		dsUserParam.setColumn(nrow, "TY_RETIRE", "%");
	}
	return true;
};

this.fnAfterCDTextChanged = function(id, codeFindData) {	
	var arr = codeFindData;
	
	if(id == "ccfCD_CORP") {
		this.ccfID_SABUN.form.fnCodeFindClear();
		this.ccfCD_DEPT.form.fnCodeFindClear();
	}
	else if(id == "ccfID_SABUN"){
		this.ccfCD_DEPT.form.fnCodeFindClear();
		this.divSearch.form.edtID_PERSON.set_value("");
		
		if(arr.length > 0){
			this.dsSearch.setColumn(0, "ID_PERSON", arr[0]["ID_PERSON"] );
			this.dsSearch.setColumn(0, "CD_DEPT", arr[0]["CD_DEPT"] );
			this.dsSearch.setColumn(0, "DS_DEPT", arr[0]["DS_DEPT"] );
		}
	}
}

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGrid_BeforeUserDataSetParam = function(id, dsUserParam, nrow){
	trace('grid_코드파인드_식별id: ' + id); 

	var gridIdx = this.dxGrid.currentrow;	

	switch(id) {	
	
		case "CD_SUN_SITE":     // 선임현장	DAX_CERTIFICATE_DEPT  >> DAX_CFDEPT
			//dsUserParam.setColumn(nrow, "ID_PERSON", this.dxGrid.getCellValue(gridIdx, this.dxGrid.getBindCellIndex("body", "ID_PERSON")));
			dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
			dsUserParam.setColumn(nrow, "CD_DEPT", this.AuthClient.CD_DEPT);		 
			dsUserParam.setColumn(nrow, "CD_CORP", this.dxGrid.getCellValue(gridIdx, this.dxGrid.getBindCellIndex("body", "CD_CORP")));		 
			dsUserParam.setColumn(nrow, "YN_CURRENT", "");		
			break;		

		case "CD_SUN_CAREER":     // 선임자격	DAX_CERTIFICATE_LIC
			dsUserParam.setColumn(nrow, "ID_PERSON", this.dxGrid.getCellValue(gridIdx, this.dxGrid.getBindCellIndex("body", "ID_PERSON")));
			break;		
		
		case "CD_BAL_DEPT":     // 발급정보_부서	DAX_CFDEPT
			dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
			dsUserParam.setColumn(nrow, "CD_DEPT", this.AuthClient.CD_DEPT);		 
			dsUserParam.setColumn(nrow, "CD_CORP", this.dxGrid.getCellValue(gridIdx, this.dxGrid.getBindCellIndex("body", "CD_CORP")));		 
			dsUserParam.setColumn(nrow, "YN_CURRENT", "");			
			break;		
		
		case "CD_BAL_POSITION":     // 발급정보_직급	DAX_CFCOMMONCODE
			dsUserParam.setColumn(nrow, "CD_PREFIX", "ED");		 
			break;		

		default:
	}	
	return true;	
	
};

this.fnGrid_AfterCDTextChanged = function(id, codeFindData) {		
	var arr = codeFindData; 

	switch(id) {
		case "CD_SUN_SITE":     // 선임현장	DAX_CERTIFICATE_DEPT
			this.dsList.setColumn(this.dsList.rowposition, "CD_SUN_SITE", arr[0]["CD_DEPT"]);	
			this.dsList.setColumn(this.dsList.rowposition, "DS_SUN_SITE", arr[0]["DS_DEPT"]);	
			break;		

		case "CD_SUN_CAREER":     // 선임자격	DAX_CERTIFICATE_LIC
			this.dsList.setColumn(this.dsList.rowposition, "CD_SUN_CAREER", arr[0]["CD_LICENSE"]);	
			this.dsList.setColumn(this.dsList.rowposition, "DS_SUN_CAREER", arr[0]["DS_LICENSE"]);	
			this.dsList.setColumn(this.dsList.rowposition, "NO_SUN_CAREER", arr[0]["NO_LICENSE"]);
			break;		
		
		case "CD_BAL_DEPT":     // 발급정보_부서	DAX_CFDEPT
			this.dsList.setColumn(this.dsList.rowposition, "CD_BAL_DEPT", arr[0]["CD_DEPT"]);	
			this.dsList.setColumn(this.dsList.rowposition, "DS_BAL_DEPT", arr[0]["DS_DEPT"]);	
			break;		
		
		case "CD_BAL_POSITION":     // 발급정보_직급	DAX_CFCOMMONCODE
			this.dsList.setColumn(this.dsList.rowposition, "CD_BAL_POSITION", arr[0]["CD_CODE"]);	
			this.dsList.setColumn(this.dsList.rowposition, "DS_BAL_POSITION", arr[0]["DS_CODE"]);	
			break;		

		default:	
	}	
	return true;
};

this.fnGrid_AfterEdit = function(obj,e) {	
// 	if(e.columnid == "CHK") {
// 		var chkCnt = 0;
// 		var onlyRowIdx = 0;
// 		
// 		for (var i = 0; i < this.dsList.rowcount; i++) {
// 			if (i == 0) continue;
// 			var flag = this.gfnGetFlag(this.dsList, i);
// 			if(flag == "U") {
// 				this.dsList.setColumn(i, this.ucFlag, "");
// 			}
// 			if (this.dsList.getColumn(i, "CHK") == "1") {  //"Y" (int형으로 변경됐네) 
// 				onlyRowIdx = i;
// 				chkCnt++;
// 			} else {
// 				//this.dsList.setColumn(i, this.ucFlag, "");	//기존수정내역이 있는데 지워져서 주석처리 
// 			}
// 		}
// 				
// 		if (chkCnt == 0) {
// 			
// 		} else if (chkCnt == 1) {
// 			var chk2 = this.dsList.getColumn(onlyRowIdx, "CHK");
// 			var YN_APPROVE = this.dsList.getColumn(onlyRowIdx, "YN_APPROVE");
// 		} else if (chkCnt > 1) {
// 		}
// 	}
}	

// 셀 수정가능 여부
 this.fnGrid_EnterCell = function(obj:nexacro.Grid, row, cell) {
	var colnm = this.gfnGridGetBindColumnNameByIndex(obj, cell);

	// 개인일 때 발급정보(부서, 직급) 수정불가
	 if(this.FormInfo.GR_SEARCH != 1){
		if(colnm == "CD_BAL_DEPT" || colnm == "DS_BAL_DEPT" || colnm == "CD_BAL_POSITION" || colnm == "DS_BAL_POSITION" ) {
			return false;
		}
	 }
} 

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		this.gfnSetFormStatus(this);
		this.gfnGridClear(this.dxGrid);	
	}
};

// 증명서 발급신청
this.fnCertiRequest = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
		this.fnValidCallback = function() {
			this.ccfCD_CORP.form.CDTextBox.setFocus();	
		}
		this.gfnAlert("법인을 입력하세요.", "fnValidCallback");
		return false;
	}
	
	if(this.FormInfo.GR_SEARCH != "1"){
		if(this.gfnIsNull(this.ccfID_SABUN.form.CDTextBox.value)){
			this.gfnAlert("사번을 입력하세요.");	
			this.ccfID_SABUN.form.CDTextBox.setFocus();		
			return false;
		}
	}

	var param = {};
	param.ID_SABUN = this.divSearch.form.ccfID_SABUN.form.CDTextBox.value;
	param.DS_HNAME = this.divSearch.form.ccfID_SABUN.form.DSTextBox.value;
	param.ID_PERSON = this.divSearch.form.edtID_PERSON.value;
	// 수정 시 필요한 컬럼
	param.NO_SEQ = "";
	param.CD_CORP = this.divSearch.form.ccfCD_CORP.form.CDTextBox.value;
	param.DS_CORP = this.divSearch.form.ccfCD_CORP.form.DSTextBox.value;
	param.YN_APPROVE = "";
	param.TY_FLAG = "I";
					
	trace("param", param);
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DAA_CERTIFICATE_DLG", "fnPopupCallBack", param, 800, 650);
}

this.fnPopupCallBack = function (strId, val){	
	if(val == true) {
		this.FormBtns.Select.click();
	}
};
this.fnApprovalProc = function(paramTyFlag) {
	//paramTyFlag >> I : (승인), C : (승인취소)

	var nChkRow = this.dsList.getCaseCount( "CHK == '1'" );
	if (nChkRow <= 0){
		this.gfnAlert("선택한 자료가 없습니다. 승인/승인취소건을 선택해 주세요.");
		return;
	}	

	this.fv_tyFlag = paramTyFlag;
	// this.fv_tyFlag - >  D:담당자 / B:부서장 / I:임원 / C:취소
	var confirmMsg = "증명서 발급을\r\n승인하시겠습니까?"
	if(this.fv_tyFlag == "C") confirmMsg = "증명서 발급을\r\n승인취소 하시겠습니까?";	
	this.gfnConfirm(confirmMsg,	"fnApprovalProc_callback");
}

this.fnApprovalProc_callback = function(strId, val)  {

	if(val == true){
		this.dsApproval.clearData();

		for (var i = 0; i < this.dsList.rowcount; i++) {
			if (this.dsList.getColumn(i, "CHK") == "1") {	
				var nrow = this.dsApproval.addRow();
				this.dsApproval.setColumn(nrow, "ID_PERSON", this.dsList.getColumn(i, "ID_PERSON"));
				this.dsApproval.setColumn(nrow, "NO_SEQ", this.dsList.getColumn(i, "NO_SEQ"));
				this.dsApproval.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);			
				this.dsApproval.setColumn(nrow, "GR_DEPT", this.AuthClient.CD_DEPT);	
				this.dsApproval.setColumn(nrow, "ID_LOGIN", this.AuthClient.ID_USER);	
			}
		}
		var strSvcId = "approval";
		var inData   = "approval=dsApproval";
		
		if(this.fv_tyFlag == "C"){
			strSvcId = "cancel";
			inData   = "cancel=dsApproval"; 
		}
		
		var strSvcType  = "save";
		var inProc		= "_dsProc";
		var outData     = "";
		var strArg      = "";
		var callBackFnc = "fnCallback";

		if (this.dsApproval.rowcount == 0) return;
		
		this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
							strSvcType , 	// transaction을 요청할 구분
							inProc,			// Procedure 정보 Dataset 이름
							inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
							outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
							strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
							callBackFnc); // 통신방법 정의 [생략가능]
	}
}									


this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo){
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};

this.divData_objGrid_oncelldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo){
	if (!this.gfnGridIsRow(this.dxGrid)) return;
	
	var nIndex0 = this.divData.form.objGrid.getBindCellIndex( "body", "CHK"); //선택
	if(e.cell == nIndex0) return;
	if (this.gfnIsNull(this.dsList.getColumn(e.row, "ID_PERSON"))) return;
	
	var param = {};
	param.ID_PERSON = this.gfnNvl(this.dsList.getColumn(this.dsList.rowposition, "ID_PERSON"), "");
	param.NO_SEQ = this.gfnNvl(this.dsList.getColumn(this.dsList.rowposition, "NO_SEQ"), "");
	param.TY_FLAG = "U";
	
	trace("param", param);
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DAA_CERTIFICATE_DLG", "fnPopupCallBack", param, 580, 550);
};

this.fnReplace = function(orgText, fromSplit, toSplit){
	if(this.gfnIsNull(orgText)) return "";

	var newSplit = "";
	if(!this.gfnIsNull(toSplit)) newSplit = toSplit;

	var arrResult = orgText.split(fromSplit);
	var sResult = arrResult.join(newSplit);
	return sResult;
}

]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="dsListSub"/>
      <Dataset id="dsRptListF"/>
      <Dataset id="dsRptListI"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DAAPR_CERTIFICATE_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DAAPR_CERTIFICATE_SAVE</Col>
          </Row>
          <Row>
            <Col id="TARGET">update-x</Col>
            <Col id="SP">DAAPR_CERTIFICATE_UPDATE</Col>
          </Row>
          <Row>
            <Col id="SP">DAAPR_CERTIFICATE_DELETE</Col>
            <Col id="TARGET">delete-x</Col>
          </Row>
          <Row>
            <Col id="TARGET">approval</Col>
            <Col id="SP">DAAPR_CERTIFICATE_APPROVAL</Col>
          </Row>
          <Row>
            <Col id="TARGET">cancel</Col>
            <Col id="SP">DAAPR_CERTIFICATE_CANCEL</Col>
          </Row>
          <Row>
            <Col id="TARGET">selectRptAB_back</Col>
            <Col id="SP">DAAPR_CERTIFICATE_AB_RPT</Col>
          </Row>
          <Row>
            <Col id="TARGET">selectRptAB</Col>
            <Col id="SP">DAAPR_CERTIFICATE_AB_MULTI_RPT</Col>
          </Row>
          <Row>
            <Col id="TARGET">reportF</Col>
            <Col id="SP">DAVPR_YEARENDRECEIPT2021_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">reportFSub1</Col>
            <Col id="SP">DAVPR_YEARENDRECEIPTSUB1_2021_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">reportFSub2</Col>
            <Col id="SP">DAVPR_YEARENDRECEIPTSUB2_2021_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">reportFPension</Col>
            <Col id="SP">DAVPR_YEARENDSUBSTPENSIONRPT_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">reportI</Col>
            <Col id="SP">DAVPR_SALARYTAX_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">reportISub</Col>
            <Col id="SP">DAVPR_SALARYTAX_SUB_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">selectRptG</Col>
            <Col id="SP">DAVPR_INCOMETAXCERTIFICATE_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="DS_CORP" type="STRING" size="256"/>
          <Column id="TY_CERTIFICATE" type="STRING" size="256"/>
          <Column id="YN_APPROVE" type="STRING" size="256"/>
          <Column id="ID_SABUN" type="STRING" size="256"/>
          <Column id="DS_HNAME" type="STRING" size="256"/>
          <Column id="ID_PERSON" type="STRING" size="256"/>
          <Column id="CD_DEPT" type="STRING" size="256"/>
          <Column id="DS_DEPT" type="STRING" size="256"/>
          <Column id="DT_SINCHUNG_FR" type="STRING" size="256"/>
          <Column id="DT_SINCHUNG_TO" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_CERTIFICATE_all">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">%</Col>
            <Col id="DS_CODE">전체</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">A</Col>
            <Col id="DS_CODE">재직증명서</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">C</Col>
            <Col id="DS_CODE">경력증명서</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">E</Col>
            <Col id="DS_CODE">퇴직증명서</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">F</Col>
            <Col id="DS_CODE">근로소득원천징수영수증(연말정산)</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">G</Col>
            <Col id="DS_CODE">갑종근로소득 원천징수확인서</Col>
          </Row>
          <Row>
            <Col id="DS_CODE">근로소득 원천징수부</Col>
            <Col id="CD_CODE">I</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_STATUS">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">%</Col>
            <Col id="DS_CODE">전체</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">Y</Col>
            <Col id="DS_CODE">승인</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">N</Col>
            <Col id="DS_CODE">미승인</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsRptListAB"/>
      <Dataset id="dsRptListABTemp"/>
      <Dataset id="dsRptListG">
        <ColumnInfo>
          <Column id="DS_HNAME" type="STRING" size="256"/>
          <Column id="ID_RESIDENT" type="STRING" size="256"/>
          <Column id="DS_ADDRESS" type="STRING" size="256"/>
          <Column id="DS_SAUP" type="STRING" size="256"/>
          <Column id="NO_SAUP" type="STRING" size="256"/>
          <Column id="DS_SAUPADDR" type="STRING" size="256"/>
          <Column id="DS_NAME" type="STRING" size="256"/>
          <Column id="NO_ID" type="STRING" size="256"/>
          <Column id="DS_USE" type="STRING" size="256"/>
          <Column id="DS_SUBMIT" type="STRING" size="256"/>
          <Column id="NO_BUSU" type="STRING" size="256"/>
          <Column id="DT_SINCHUNG_YY" type="STRING" size="256"/>
          <Column id="DT_SINCHUNG_MM" type="STRING" size="256"/>
          <Column id="DT_SINCHUNG_DD" type="STRING" size="256"/>
          <Column id="DS_PRINT" type="STRING" size="256"/>
          <Column id="CD_DEPT_SELFACNT" type="STRING" size="256"/>
          <Column id="ID_SABUN" type="STRING" size="256"/>
          <Column id="DS_DEPT" type="STRING" size="256"/>
          <Column id="TY_SINGO" type="STRING" size="256"/>
          <Column id="NO_TEL" type="STRING" size="256"/>
          <Column id="IMG_STAMP" type="STRING" size="256"/>
          <Column id="YM_SALARY01" type="STRING" size="256"/>
          <Column id="YM_SALARY02" type="STRING" size="256"/>
          <Column id="YM_SALARY03" type="STRING" size="256"/>
          <Column id="YM_SALARY04" type="STRING" size="256"/>
          <Column id="YM_SALARY05" type="STRING" size="256"/>
          <Column id="YM_SALARY06" type="STRING" size="256"/>
          <Column id="YM_SALARY07" type="STRING" size="256"/>
          <Column id="YM_SALARY08" type="STRING" size="256"/>
          <Column id="YM_SALARY09" type="STRING" size="256"/>
          <Column id="YM_SALARY10" type="STRING" size="256"/>
          <Column id="YM_SALARY11" type="STRING" size="256"/>
          <Column id="YM_SALARY12" type="STRING" size="256"/>
          <Column id="AM_SALARY01" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SALARY02" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SALARY03" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SALARY04" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SALARY05" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SALARY06" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SALARY07" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SALARY08" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SALARY09" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SALARY10" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SALARY11" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SALARY12" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SUBST01" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SUBST02" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SUBST03" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SUBST04" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SUBST05" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SUBST06" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SUBST07" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SUBST08" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SUBST09" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SUBST10" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SUBST11" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SUBST12" type="BIGDECIMAL" size="256"/>
          <Column id="DT_SALARY01" type="STRING" size="256"/>
          <Column id="DT_SALARY02" type="STRING" size="256"/>
          <Column id="DT_SALARY03" type="STRING" size="256"/>
          <Column id="DT_SALARY04" type="STRING" size="256"/>
          <Column id="DT_SALARY05" type="STRING" size="256"/>
          <Column id="DT_SALARY06" type="STRING" size="256"/>
          <Column id="DT_SALARY07" type="STRING" size="256"/>
          <Column id="DT_SALARY08" type="STRING" size="256"/>
          <Column id="DT_SALARY09" type="STRING" size="256"/>
          <Column id="DT_SALARY10" type="STRING" size="256"/>
          <Column id="DT_SALARY11" type="STRING" size="256"/>
          <Column id="DT_SALARY12" type="STRING" size="256"/>
          <Column id="SALSUM" type="BIGDECIMAL" size="256"/>
          <Column id="SUBSTSUM" type="BIGDECIMAL" size="256"/>
          <Column id="DT_OFFICER" type="STRING" size="256"/>
          <Column id="DT_PRINT" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsRptListGTemp">
        <ColumnInfo>
          <Column id="DS_HNAME" type="STRING" size="256"/>
          <Column id="ID_RESIDENT" type="STRING" size="256"/>
          <Column id="DS_ADDRESS" type="STRING" size="256"/>
          <Column id="DS_SAUP" type="STRING" size="256"/>
          <Column id="NO_SAUP" type="STRING" size="256"/>
          <Column id="DS_SAUPADDR" type="STRING" size="256"/>
          <Column id="DS_NAME" type="STRING" size="256"/>
          <Column id="NO_ID" type="STRING" size="256"/>
          <Column id="DS_USE" type="STRING" size="256"/>
          <Column id="DS_SUBMIT" type="STRING" size="256"/>
          <Column id="NO_BUSU" type="STRING" size="256"/>
          <Column id="DT_SINCHUNG_YY" type="STRING" size="256"/>
          <Column id="DT_SINCHUNG_MM" type="STRING" size="256"/>
          <Column id="DT_SINCHUNG_DD" type="STRING" size="256"/>
          <Column id="DS_PRINT" type="STRING" size="256"/>
          <Column id="CD_DEPT_SELFACNT" type="STRING" size="256"/>
          <Column id="ID_SABUN" type="STRING" size="256"/>
          <Column id="DS_DEPT" type="STRING" size="256"/>
          <Column id="TY_SINGO" type="STRING" size="256"/>
          <Column id="NO_TEL" type="STRING" size="256"/>
          <Column id="IMG_STAMP" type="STRING" size="256"/>
          <Column id="YM_SALARY01" type="STRING" size="256"/>
          <Column id="YM_SALARY02" type="STRING" size="256"/>
          <Column id="YM_SALARY03" type="STRING" size="256"/>
          <Column id="YM_SALARY04" type="STRING" size="256"/>
          <Column id="YM_SALARY05" type="STRING" size="256"/>
          <Column id="YM_SALARY06" type="STRING" size="256"/>
          <Column id="YM_SALARY07" type="STRING" size="256"/>
          <Column id="YM_SALARY08" type="STRING" size="256"/>
          <Column id="YM_SALARY09" type="STRING" size="256"/>
          <Column id="YM_SALARY10" type="STRING" size="256"/>
          <Column id="YM_SALARY11" type="STRING" size="256"/>
          <Column id="YM_SALARY12" type="STRING" size="256"/>
          <Column id="AM_SALARY01" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SALARY02" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SALARY03" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SALARY04" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SALARY05" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SALARY06" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SALARY07" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SALARY08" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SALARY09" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SALARY10" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SALARY11" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SALARY12" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SUBST01" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SUBST02" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SUBST03" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SUBST04" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SUBST05" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SUBST06" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SUBST07" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SUBST08" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SUBST09" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SUBST10" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SUBST11" type="BIGDECIMAL" size="256"/>
          <Column id="AM_SUBST12" type="BIGDECIMAL" size="256"/>
          <Column id="DT_SALARY01" type="STRING" size="256"/>
          <Column id="DT_SALARY02" type="STRING" size="256"/>
          <Column id="DT_SALARY03" type="STRING" size="256"/>
          <Column id="DT_SALARY04" type="STRING" size="256"/>
          <Column id="DT_SALARY05" type="STRING" size="256"/>
          <Column id="DT_SALARY06" type="STRING" size="256"/>
          <Column id="DT_SALARY07" type="STRING" size="256"/>
          <Column id="DT_SALARY08" type="STRING" size="256"/>
          <Column id="DT_SALARY09" type="STRING" size="256"/>
          <Column id="DT_SALARY10" type="STRING" size="256"/>
          <Column id="DT_SALARY11" type="STRING" size="256"/>
          <Column id="DT_SALARY12" type="STRING" size="256"/>
          <Column id="SALSUM" type="BIGDECIMAL" size="256"/>
          <Column id="SUBSTSUM" type="BIGDECIMAL" size="256"/>
          <Column id="DT_OFFICER" type="STRING" size="256"/>
          <Column id="DT_PRINT" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsRptListISub"/>
      <Dataset id="dsTY_CERTIFICATE">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">%</Col>
            <Col id="DS_CODE">전체</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">A</Col>
            <Col id="DS_CODE">재직증명서</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">C</Col>
            <Col id="DS_CODE">경력증명서</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">E</Col>
            <Col id="DS_CODE">퇴직증명서</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">F</Col>
            <Col id="DS_CODE">근로소득원천징수영수증(연말정산)</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">G</Col>
            <Col id="DS_CODE">갑종근로소득 원천징수확인서</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">I</Col>
            <Col id="DS_CODE">근로소득 원천징수부</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_CORP.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_CORP"/>
      <BindItem id="item2" compid="divSearch.form.cboTY_CERTIFICATE" propid="value" datasetid="dsSearch" columnid="TY_CERTIFICATE"/>
      <BindItem id="item3" compid="divSearch.form.cboYN_APPROVE" propid="value" datasetid="dsSearch" columnid="YN_APPROVE"/>
      <BindItem id="item4" compid="divSearch.form.ccfID_SABUN.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="ID_SABUN"/>
      <BindItem id="item5" compid="divSearch.form.ccfID_SABUN.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_HNAME"/>
      <BindItem id="item6" compid="divSearch.form.edtID_PERSON" propid="value" datasetid="dsSearch" columnid="ID_PERSON"/>
      <BindItem id="item7" compid="divSearch.form.ccfCD_DEPT.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_DEPT"/>
      <BindItem id="item8" compid="divSearch.form.ccfCD_DEPT.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_DEPT"/>
      <BindItem id="item9" compid="divSearch.form.calDT_SINCHUNG_FR" propid="value" datasetid="dsSearch" columnid="DT_SINCHUNG_FR"/>
      <BindItem id="item10" compid="divSearch.form.calDT_SINCHUNG_TO" propid="value" datasetid="dsSearch" columnid="DT_SINCHUNG_TO"/>
    </Bind>
  </Form>
</FDL>
