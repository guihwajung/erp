<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="DWA_SILHENG" width="1280" height="720" titletext="New Form" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static id="sta00" taborder="1" text="현장코드" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_SITE" CodeFindName="DZX_CFSITE" CDTextWidth="70" taborder="0" left="sta00:0.0" top="10.0" width="300" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Div id="ccfCD_RP" CDTextWidth="80" taborder="2" left="ccfCD_SITE:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" visible="false"/>
              <CheckBox id="chkYN_DOKUB" taborder="8" text="도급" left="ccfCD_SITE:0.0" top="10.0" width="50" height="24.0" truevalue="Y" falsevalue="N" onchanged="divSearch_chkYN_DOKUB_onchanged"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DWAPR_SILHENG_AD_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DWAPR_SILHENG_AD_SAVE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_SITE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_SITE"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsCD_RP">
        <ColumnInfo>
          <Column id="CD_RP" type="STRING" size="256"/>
          <Column id="NM_RP" type="STRING" size="256"/>
          <Column id="NO_CSCT" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_RP"/>
            <Col id="NM_RP"/>
            <Col id="NO_CSCT"/>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();	
	
	this.divSearch_chkYN_DOKUB_onchanged(this.divSearch.form.chkYN_DOKUB, {postvalue:this.divSearch.form.chkYN_DOKUB.value});	
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
	this.FormBtns.Add.set_enable(false);
	this.FormBtns.Del.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btn1 = this.gfnFormButtonAdd("btnCostTuja", "fnCostTuja");
	this.btn2 = this.gfnFormButtonAdd("btnBatchRp", "fnBatchRp");	
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_SITE = this.divSearch.form.ccfCD_SITE;
	this.ccfCD_RP = this.divSearch.form.ccfCD_RP;	
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.ccfCD_RP.CodeFindName = "DWX_CFRP";	
	this.ccfCD_RP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	this.ccfCD_RP.AfterCDTextChanged = "ccfCD_RP_AfterCDTextChanged";	
	
	this.gfnGridInit(this.dxGrid, this.dsList, "DW", "DWA_SILHENG_AD", "CD_DKCOST", "GR_COST");
	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforuserDataSetParam";
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_SITE", "string");
	
	this.dsSave = new Dataset();
	this.dsSave.addColumn("TY_WRK", "string");
	this.dsSave.addColumn("ID_USER", "string");
	this.dsSave.addColumn("CD_SITE", "string");
	this.dsSave.addColumn("CD_COST", "string");
	this.dsSave.addColumn("CD_RP", "string");
	this.dsSave.addColumn("CD_STD", "string");
	this.dsSave.addColumn("RM_BIGO", "string");
	this.dsSave.addColumn("CD_GBIMOK", "string");
	this.dsSave.addColumn("YN_COST", "string");
	this.dsSave.addColumn("DS_UNIT", "string");
	this.dsSave.addColumn("YN_GSQN", "string");
	this.dsSave.addColumn("CD_STCOST1", "string");
	this.dsSave.addColumn("CD_STCOST2", "string");
	this.dsSave.addColumn("DS_COST", "string");
	this.dsSave.addColumn("SZ_SIZE", "string");

}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if(!this.fnValidate()) return;
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	if (!this.gfnGridValidate(this.dxGrid)) return;
	
	this.dxGrid.updateToDataset();
	
	this.dsSave.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
	
		switch(flag) {
			case "I":
			case "U":
			case "D":
				var nrow = this.dsSave.addRow();
				this.dsSave.setColumn(nrow, "TY_WRK", flag);
				this.dsSave.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
				this.dsSave.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
				this.dsSave.setColumn(nrow, "CD_COST", this.dsList.getColumn(i, "CD_COST"));
				this.dsSave.setColumn(nrow, "CD_RP", this.dsList.getColumn(i, "CD_RP"));
				this.dsSave.setColumn(nrow, "CD_STD", this.dsList.getColumn(i, "CD_STD"));
				this.dsSave.setColumn(nrow, "RM_BIGO", this.dsList.getColumn(i, "RM_BIGO"));
				this.dsSave.setColumn(nrow, "CD_GBIMOK", this.dsList.getColumn(i, "CD_GBIMOK"));
				this.dsSave.setColumn(nrow, "YN_COST", this.dsList.getColumn(i, "YN_COST"));
				this.dsSave.setColumn(nrow, "DS_UNIT", this.dsList.getColumn(i, "DS_UNIT"));
				this.dsSave.setColumn(nrow, "YN_GSQN", this.dsList.getColumn(i, "YN_GSQN"));
				this.dsSave.setColumn(nrow, "CD_STCOST1", this.dsList.getColumn(i, "CD_STCOST1"));
				this.dsSave.setColumn(nrow, "CD_STCOST2", this.dsList.getColumn(i, "CD_STCOST2"));
				this.dsSave.setColumn(nrow, "DS_COST", this.dsList.getColumn(i, "DS_COST"));
				this.dsSave.setColumn(nrow, "SZ_SIZE", this.dsList.getColumn(i, "SZ_SIZE"));
				break;
		}
	}

	if (this.dsSave.rowcount == 0) return;
	
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnValidate = function() {
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "CD_SITE"))) {
		this.fnVaidateCallback = function() {
			this.ccfCD_SITE.form.CDTextBox.setFocus();
		}
		this.gfnAlert("현장코드는 필수입력 값입니다.");
		return false;
	}
	
	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
		this._gfnGridTreeOpen(this.dxGrid, 1);
	
	}else if(svcID == "save") {
		this.gfnGridAfterSelect(this.dxGrid);	
		
		this.FormBtns.Select.click();
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
//코드파인드의 파라미터 값을 넘겨줄때 사용하는 함수
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	
	if (id == "ccfCD_RP") {
		dsUserParam.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));		
	}
	
	return true;
}

this.ccfCD_RP_AfterCDTextChanged = function(id, codeFindData) {
	// 코드,명칭 외 추가 컬럼 처리
	var arr = codeFindData; //this.ccfCD_DEPT_ORG.form.SelectedData; 둘다 사용가능
	var ds_cdRp = "";
	var ds_nmRp = "";
	var ds_noCsct = "";
	
	if (arr.length > 0) {
		ds_cdRp = arr[0]["CD_RP"];
		ds_nmRp = arr[0]["NM_RP"];
		ds_noCsct = arr[0]["NO_CSCT"];		
	}
	
	// 선택된 row들의 인덱스를 배열형태로 가지고있다
	var selRows = this.dxGrid.getSelectedDatasetRows();
	
	// 이벤트가 걸려서 속도가 느려지기때문에 이벤트 정지시키고 데이터 셋팅함
	this.dsList.set_enableevent(false);
	for(var i = 0; i < selRows.length; i++)
	{
		var nRow = selRows[i];
		
		if(this.dsList.getColumn(nRow, "YN_COST") == "Y"){				
			this.dsList.setColumn(nRow, this.ucFlag, "U");	// 이벤트가 정지되어있기때문에 flag상태가 변하지 않아 강제 셋팅함
			
			this.dsList.setColumn(nRow, "CD_RP", ds_cdRp);		// 코드
			this.dsList.setColumn(nRow, "DS_RP", ds_nmRp);		// 명칭
			this.dsList.setColumn(nRow, "NO_RP", ds_noCsct);	// 공구
			
		}
	}	
	this.gfnSetFormStatus(this, "U");	// 화면 form상태로 변하지 않아 강제 셋팅함
	this.dsList.set_enableevent(true);
}
 
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 this.fnGrid_BeforuserDataSetParam=function(id, dsUserParam, nrow){
	if(id == "DWX_CFRP"){
		dsUserParam.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	}
	else if(id == "DQX_CBSITEMALL")
	{
		dsUserParam.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	}
	return true;
};
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{	
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};

this.fnCostTuja = function(obj:nexacro.Button, e:nexacro.ClickEventInfo){

	if(!this.gfnGridIsRow(this.dxGrid)){return false;}
	var param = {};
	param.CD_SITE = this.dsSearch.getColumn(0, "CD_SITE");
	param.DS_SITE = this.ccfCD_SITE.form.DSTextBox.value;
	param.CD_COST = this.dsList.getColumn(this.dsList.rowposition, "CD_COST");
	param.CD_DKCOST = this.dsList.getColumn(this.dsList.rowposition, "CD_DKCOST");
	param.DS_COST = this.dsList.getColumn(this.dsList.rowposition, "DS_COST");
	param.SZ_SIZE = this.dsList.getColumn(this.dsList.rowposition, "SZ_SIZE");
	param.DS_UNIT = this.dsList.getColumn(this.dsList.rowposition, "DS_UNIT");
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DWX_COSTTUJA", "", param);
};

this.fnBatchRp = function(obj:nexacro.Button, e:nexacro.ClickEventInfo){

	if(!this.gfnGridIsRow(this.dxGrid)){return false;}
	
	// 발주계획 코드파인드 팝업
	this.ccfCD_RP.form.BtnSearch.click();
};

// 도급 체크박스
this.divSearch_chkYN_DOKUB_onchanged = function(obj:nexacro.CheckBox,e:nexacro.CheckBoxChangedEventInfo)
{
	var QN_TT_DESIGN_Index = this.dxGrid.getBindCellIndex("body", "QN_TT_DESIGN");
	var UP_TT_DESIGN_Index = this.dxGrid.getBindCellIndex("body", "UP_TT_DESIGN");
	var AM_TT_DESIGN_Index = this.dxGrid.getBindCellIndex("body", "AM_TT_DESIGN");
	var QN_TT_DOKUB_Index = this.dxGrid.getBindCellIndex("body", "QN_TT_DOKUB");
	var UP_TT_DOKUB_Index = this.dxGrid.getBindCellIndex("body", "UP_TT_DOKUB");
	var AM_TT_DOKUB_Index = this.dxGrid.getBindCellIndex("body", "AM_TT_DOKUB");
	
	if(obj.isChecked())
	{
		this.dxGrid.setRealColSize("body", QN_TT_DESIGN_Index, 80);
		this.dxGrid.setRealColSize("body", UP_TT_DESIGN_Index, 80);
		this.dxGrid.setRealColSize("body", AM_TT_DESIGN_Index, 100);
		this.dxGrid.setRealColSize("body", QN_TT_DOKUB_Index, 80);
		this.dxGrid.setRealColSize("body", UP_TT_DOKUB_Index, 80);
		this.dxGrid.setRealColSize("body", AM_TT_DOKUB_Index, 100);
	}
	else
	{
		this.dxGrid.setRealColSize("body", QN_TT_DESIGN_Index, 0);
		this.dxGrid.setRealColSize("body", UP_TT_DESIGN_Index, 0);
		this.dxGrid.setRealColSize("body", AM_TT_DESIGN_Index, 0);
		this.dxGrid.setRealColSize("body", QN_TT_DOKUB_Index, 0);
		this.dxGrid.setRealColSize("body", UP_TT_DOKUB_Index, 0);
		this.dxGrid.setRealColSize("body", AM_TT_DOKUB_Index, 0);
	}
};
]]></Script>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_RP.form.CDTextBox" propid="value" datasetid="dsCD_RP" columnid="CD_RP"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_RP.form.DSTextBox" propid="value" datasetid="dsCD_RP" columnid="NM_RP"/>
      <BindItem id="item2" compid="divSearch.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
    </Bind>
  </Form>
</FDL>
