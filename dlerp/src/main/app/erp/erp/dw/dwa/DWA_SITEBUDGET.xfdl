<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="DWA_SITEBUDGET" width="1280" height="720" titletext="내역등록" onload="DWA_SITEBUDGET_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" text="" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="staCD_SITE" taborder="1" text="현장코드" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_SITE" CodeFindName="DZX_CFSITE" CDTextWidth="80" taborder="0" left="staCD_SITE:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staCD_CORP" taborder="1" text="실행번호" left="ccfCD_SITE:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfNO_SILHENG" CDTextWidth="50" taborder="0" left="staCD_CORP:0.0" top="10.0" width="200" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <CheckBox id="chkYN_DOKUB" taborder="4" text="도급" left="ccfNO_SILHENG:0.0" top="10.0" width="50" height="24.0" truevalue="Y" falsevalue="N" onchanged="divSearch_chkYN_DOKUB_onchanged" value="N" enable="true" visible="false"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0" oncelldblclick="divData_objGrid_oncelldblclick"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DWAPR_SITEBUDGET_SELECT</Col>
          </Row>
          <Row>
            <Col id="SP">DWAPR_SITEBUDGET_INSERT</Col>
            <Col id="TARGET">insert</Col>
          </Row>
          <Row>
            <Col id="SP">DWAPR_SITEBUDGET_UPDATE</Col>
            <Col id="TARGET">update</Col>
          </Row>
          <Row>
            <Col id="SP">DWAPR_SITEBUDGET_DELETE</Col>
            <Col id="TARGET">delete</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="NO_SILHENG" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_SITE"/>
            <Col id="NO_SILHENG"/>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.DWA_SITEBUDGET_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	//도급 기본체크
	//this.divSearch.form.chkYN_DOKUB.set_value("Y");
	
	//this.divSearch_chkYN_DOKUB_onchanged(this.divSearch.form.chkYN_DOKUB, {postvalue:this.divSearch.form.chkYN_DOKUB.value});
	
	
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 ************************************************************************/
this.fnSetButton = function() {
// 	var id_group = this.FormInfo.ID_GROUP;
// 	var gr_search = this.FormInfo.GR_SEARCH;
// 	var cd_role = this.FormInfo.CD_ROLE;
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btn1 = this.gfnFormButtonAdd("btnRegItem", "fnRegItem");
	this.btn2 = this.gfnFormButtonAdd("btnFile", "fnFile");
	this.btnAPP = this.gfnFormButtonAdd("btnAPP", "fnAPP");
	this.btnCompare = this.gfnFormButtonAdd("btnCompare", "fnCompare");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_SITE = this.divSearch.form.ccfCD_SITE;
	this.ccfNO_SILHENG = this.divSearch.form.ccfNO_SILHENG;
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.ccfCD_SITE.CodeFindName = "DZX_CFSITE";
	this.ccfNO_SILHENG.CodeFindName = "DWX_CFNO_SILHENG_01";
	this.ccfNO_SILHENG.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	this.gfnGridInit(this.dxGrid, this.dsList, "DW", "DWA_SITEBUDGET");
}
/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_SITE", "string");
	this.dsSelect.addColumn("TY_GUBUN", "string");

	this.dsInsert = new Dataset();
	this.dsInsert.addColumn("CD_SITE", "string");
	this.dsInsert.addColumn("TY_SILHENG", "string");
	this.dsInsert.addColumn("DS_SILHENG", "string");
	this.dsInsert.addColumn("CD_SITE_IEMS", "string");
	this.dsInsert.addColumn("CD_CONST_IEMS", "string");
	this.dsInsert.addColumn("NO_SILHENG_IEMS", "string");
	this.dsInsert.addColumn("CD_RBS1", "string");
	this.dsInsert.addColumn("CD_RBS2", "string");
	this.dsInsert.addColumn("CD_RBS3", "string");
	this.dsInsert.addColumn("CD_RBS4", "string");
	this.dsInsert.addColumn("CD_RBS5", "string");
	this.dsInsert.addColumn("CD_RBS6", "string");
	this.dsInsert.addColumn("ID_REQUEST", "string");
	this.dsInsert.addColumn("DT_REQUEST", "string");
	this.dsInsert.addColumn("ID_INSERT", "string");
	this.dsInsert.addColumn("TY_GUBUN", "string");
	
	this.dsUpdate = new Dataset();
	this.dsUpdate.addColumn("CD_SITE", "string");
	this.dsUpdate.addColumn("NO_SILHENG", "string");
	this.dsUpdate.addColumn("DS_SILHENG", "string");
	this.dsUpdate.addColumn("CD_RBS1", "string");
	this.dsUpdate.addColumn("CD_RBS2", "string");
	this.dsUpdate.addColumn("CD_RBS3", "string");
	this.dsUpdate.addColumn("CD_RBS4", "string");
	this.dsUpdate.addColumn("CD_RBS5", "string");
	this.dsUpdate.addColumn("CD_RBS6", "string");
	this.dsUpdate.addColumn("ID_UPDATE", "string");
	this.dsUpdate.addColumn("TY_GUBUN", "string");
	
	this.dsDelete = new Dataset();
	this.dsDelete.addColumn("CD_SITE", "string");
	this.dsDelete.addColumn("NO_SILHENG", "string");
	this.dsDelete.addColumn("TY_GUBUN", "string");

	
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();

	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsSelect.setColumn(0, "TY_GUBUN", "B");
	
// 	this.dsSelect.setColumn(0, "GR_SEARCH", this.FormInfo.GR_SEARCH);
// 	var objApp = pForm.gfnGetApplication();
// 	this.dsSelect.setColumn(0, "CD_DEPT", objApp.gvUserInfo.CD_DEPT);

	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}



/*
 *	입력 버튼
 */
this.fnAdd = function() {
	this.gfnGridAdd(this.dxGrid);
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	if (!this.gfnGridValidate(this.dxGrid)) return;

	this.dxGrid.updateToDataset();
	
	this.dsInsert.clearData();
	this.dsUpdate.clearData();
	this.dsDelete.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
				var nrow = this.dsInsert.addRow();
				this.dsInsert.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
				this.dsInsert.setColumn(nrow, "NO_SILHENG", this.dsSearch.getColumn(0, "NO_SILHENG"));
				this.dsInsert.setColumn(nrow, "TY_SILHENG", this.dsList.getColumn(i, "TY_SILHENG"));
				this.dsInsert.setColumn(nrow, "DS_SILHENG", this.dsList.getColumn(i, "DS_SILHENG"));
				this.dsInsert.setColumn(nrow, "CD_SITE_IEMS", this.dsList.getColumn(i, "CD_SITE"));
				this.dsInsert.setColumn(nrow, "CD_CONST_IEMS", this.dsList.getColumn(i, "TY_SILHENG"));
				this.dsInsert.setColumn(nrow, "NO_SILHENG_IEMS", this.dsList.getColumn(i, "DS_SILHENG"));
				this.dsInsert.setColumn(nrow, "CD_RBS1", this.dsList.getColumn(i, "CD_RBS1"));
				this.dsInsert.setColumn(nrow, "CD_RBS2", this.dsList.getColumn(i, "CD_RBS2"));
				this.dsInsert.setColumn(nrow, "CD_RBS3", this.dsList.getColumn(i, "CD_RBS3"));
				this.dsInsert.setColumn(nrow, "CD_RBS4", this.dsList.getColumn(i, "CD_RBS4"));
				this.dsInsert.setColumn(nrow, "CD_RBS5", this.dsList.getColumn(i, "CD_RBS5"));
				this.dsInsert.setColumn(nrow, "CD_RBS6", this.dsList.getColumn(i, "CD_RBS6"));
				this.dsInsert.setColumn(nrow, "ID_REQUEST", this.dsList.getColumn(i, "ID_REQUEST"));
				this.dsInsert.setColumn(nrow, "DT_REQUEST", this.dsList.getColumn(i, "DT_REQUEST"));
				this.dsInsert.setColumn(nrow, "ID_INSERT", this.dsList.getColumn(i, "ID_INSERT"));
				this.dsInsert.setColumn(nrow, "TY_GUBUN", "B");
				break;
				
			case "U":
				var nrow = this.dsUpdate.addRow();
				this.dsUpdate.setColumn(nrow, "CD_SITE", this.dsList.getColumn(i, "CD_SITE"));
				this.dsUpdate.setColumn(nrow, "NO_SILHENG", this.dsList.getColumn(i, "NO_SILHENG"));
				this.dsUpdate.setColumn(nrow, "DS_SILHENG", this.dsList.getColumn(i, "DS_SILHENG"));
				this.dsUpdate.setColumn(nrow, "CD_RBS1", this.dsList.getColumn(i, "CD_RBS1"));
				this.dsUpdate.setColumn(nrow, "CD_RBS2", this.dsList.getColumn(i, "CD_RBS2"));
				this.dsUpdate.setColumn(nrow, "CD_RBS3", this.dsList.getColumn(i, "CD_RBS3"));
				this.dsUpdate.setColumn(nrow, "CD_RBS4", this.dsList.getColumn(i, "CD_RBS4"));
				this.dsUpdate.setColumn(nrow, "CD_RBS5", this.dsList.getColumn(i, "CD_RBS5"));
				this.dsUpdate.setColumn(nrow, "CD_RBS6", this.dsList.getColumn(i, "CD_RBS6"));
				this.dsUpdate.setColumn(nrow, "ID_UPDATE", this.dsList.getColumn(i, "ID_UPDATE"));
				this.dsUpdate.setColumn(nrow, "TY_GUBUN", "B");
		
				break;
				
			case "D":
				var nrow = this.dsDelete.addRow();
				this.dsDelete.setColumn(nrow, "CD_SITE", this.dsList.getColumn(i, "CD_SITE"));
				this.dsDelete.setColumn(nrow, "NO_SILHENG", this.dsList.getColumn(i, "NO_SILHENG"));	
				this.dsDelete.setColumn(nrow, "TY_GUBUN", "B");
				break;
		}
	}
	
	if (this.dsInsert.rowcount == 0 && this.dsUpdate.rowcount == 0 && this.dsDelete.rowcount == 0) return;
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "insert=dsInsert update=dsUpdate delete=dsDelete";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
  */
this.fnSelectValidate = function() {
	var validate = true;
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "CD_SITE"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.ccfCD_SITE.form.CDTextBox.setFocus();
		}
		this.gfnAlert("현장코드를 입력하세요.", "fnVaidateCallback");
	}
	
	return validate;
};


/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}
 
/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if (id == "ccfNO_SILHENG") {

		dsUserParam.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));	// 현장코드
	}
	return true;
}

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/

/************************************************************************
 * 기타 이벤트
 ************************************************************************/

this.fnRegItem = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	//if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	var param = {};

	if(this.dsList.rowposition > -1){
		param.CD_SITE = this.dsSearch.getColumn(0, "CD_SITE");
		param.DS_SITE = this.divSearch.form.ccfCD_SITE.form.DSTextBox.value;
		param.NO_SILHENG = this.dsList.getColumn(this.dsList.rowposition, "NO_SILHENG");
		param.DS_SILHENG = this.dsList.getColumn(this.dsList.rowposition, "DS_SILHENG");
	}
	
	// 화면 오픈. 
	// CD_MODULE은 보통 같은 모듈에서 호출하는 경우가 많으니 this.FormInfo.CD_MODULE 사용
	// 타 모듈 화면 호출시 지정할것.
	//this.gfnFormOpen(this.FormInfo.CD_MODULE, "DWA_SILHENGREGEXCELVT", "", param);
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DWA_SILHENGREGITEM", "fnDialogCallback", param);
	
}


this.fnCompare = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	//if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	var param = {};

	if(this.dsList.getColumn(this.dsList.rowposition, "TY_SILHENG") == "A"){
		this.gfnAlert("예산변경 건만 실행예산 비교가 가능합니다.", "");
		return;
	}
	
	if(this.dsList.rowposition > -1){
		param.CD_SITE = this.dsSearch.getColumn(0, "CD_SITE");
		param.DS_SITE = this.divSearch.form.ccfCD_SITE.form.DSTextBox.value;
		param.NO_SILHENG = this.dsList.getColumn(this.dsList.rowposition, "NO_SILHENG");
		param.DS_SILHENG = this.dsList.getColumn(this.dsList.rowposition, "DS_SILHENG");
	}
	
	// 화면 오픈. 
	// CD_MODULE은 보통 같은 모듈에서 호출하는 경우가 많으니 this.FormInfo.CD_MODULE 사용
	// 타 모듈 화면 호출시 지정할것.
	//this.gfnFormOpen(this.FormInfo.CD_MODULE, "DWA_SILHENGREGEXCELVT", "", param);
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DWA_SILHENGCOMPAREITEM", "fnDialogCallback", param);
	
}
this.fnDialogCallback = function(svcID, value) {

	// 결재완료, 결재취소, 결재상신 후에는 재조회를 한다
	this.FormBtns.Select.click();
};


this.fnFile = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if (!this.fnSelectValidate()) return false;
	
	var fileManager = {};
	fileManager.CD_GUBUN = "DW01";
	fileManager.CD_DIR = [ this.dsSearch.getColumn(0, "CD_SITE") ];
	// CD_DIR 만 지정시 CD_DIR 배열 순대로 키1,키2,키3 까지 자동지정
	// 저장되는 디렉토리와 키값이 다른경우 CD_REF 추가로 사용
	//fileManager.CD_REF = [ "A1" ];
	// 권한 및 상태에 따라 업로드,삭제 가능여부 지정 (기본: true)
	
	if(this.FormInfo.TY_AUTH == "R") {
		fileManager.IS_READONLY = true;
	} else {
		fileManager.IS_READONLY = false;
	}
	
	this.gfnFileManager(fileManager, "fnFileCallback");
};

this.fnFileCallback = function() {
};
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};


this.fnAPP = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	var param = {};
	var nRow = this.dsList.rowposition;
	
	param.PARAM01 = this.dsSearch.getColumn(0,"CD_SITE");
	param.PARAM02 = this.dsList.getColumn(nRow, "NO_SILHENG");
	param.ID_AP = this.dsList.getColumn(nRow, "NO_ELAPDOC");	// 전자결재문서번호
	param.YN_LINK = "N";	// 화면에서 팝업을 호출할경우 N, 링크를 통해서 화면을 오픈할경우 null 이다
	
	// 화면 오픈. 
	// CD_MODULE은 보통 같은 모듈에서 호출하는 경우가 많으니 this.FormInfo.CD_MODULE 사용
	// 타 모듈 화면 호출시 지정할것.
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DWA_SILHENGREGEXCELVT_APPROVAL", "fnAprvDialogCallback", param);
	
}

 this.fnAprvDialogCallback = function(svcID, value) {
	// 리턴값
	if(value){
		// 결재완료, 결재취소, 결재상신 후에는 재조회를 한다
		this.FormBtns.Select.click();
	}
};


// 도급 체크박스
this.divSearch_chkYN_DOKUB_onchanged = function(obj:nexacro.CheckBox,e:nexacro.CheckBoxChangedEventInfo)
{
	var 설계변경금액_Index = this.dxGrid.getBindCellIndex("body", "설계변경금액");
	var 설계변경분_Index = this.dxGrid.getBindCellIndex("body", "설계변경분");
	var AM_DOKUB_Index = this.dxGrid.getBindCellIndex("body", "AM_DOKUB");
	var AM_DOKUBCHG_Index = this.dxGrid.getBindCellIndex("body", "AM_DOKUBCHG");
	
	if(obj.isChecked())
	{
		this.dxGrid.setRealColSize("body", 설계변경금액_Index, 120);
		this.dxGrid.setRealColSize("body", 설계변경분_Index, 120);
		this.dxGrid.setRealColSize("body", AM_DOKUB_Index, 120);
		this.dxGrid.setRealColSize("body", AM_DOKUBCHG_Index, 120);		
	}
	else
	{
		this.dxGrid.setRealColSize("body", 설계변경금액_Index, 0);
		this.dxGrid.setRealColSize("body", 설계변경분_Index, 0);
		this.dxGrid.setRealColSize("body", AM_DOKUB_Index, 0);
		this.dxGrid.setRealColSize("body", AM_DOKUBCHG_Index, 0);
	}
};

this.divData_objGrid_oncelldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	//var cellIdx = obj.getBindCellIndex('body', 'DS_SILHENG');
	if (obj.getCellPropertyValue(e.row, e.cell, 'cssclass') != 'BACK_ReadOnly')
	{
		return false;
	}
	
	this.fnRegItem();
};
]]></Script>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item1" compid="divSearch.form.ccfNO_SILHENG.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="NO_SILHENG"/>
    </Bind>
  </Form>
</FDL>
