<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="DWB_HDGISUNG_LIST_YY" width="1280" height="720" titletext="기성원가집계(년별)" onload="DWB_HDGISUNG_LIST_YY_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="1" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" text="">
          <Layouts>
            <Layout>
              <Static id="staCD_SITE" taborder="3" text="현장코드" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_SITE" CodeFindName="DZX_CFSITE" CDTextWidth="80" taborder="0" left="staCD_SITE:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staYY_WORK" taborder="1" text="기성년도" left="ccfCD_SITE:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYY_WORK" taborder="2" left="staYY_WORK:0.0" top="10.0" width="80" height="24.0" dateformat="yyyy" editformat="yyyy" url="cmm::cmmCalYY.xfdl"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" right="0" cssclass="div_DATA_Bg" ondragmove="divData_ondragmove" bottom="0">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0" oncelldblclick="divData_objGrid_oncelldblclick">
                <Formats>
                  <Format id="default"/>
                </Formats>
              </Grid>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DWBPR_HDGISUNGYEAR_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="YY_WORK" type="STRING" size="256"/>
          <Column id="DS_CONTMETHOD" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_SITE"/>
            <Col id="YY_WORK"/>
            <Col id="DS_CONTMETHOD"/>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item1" compid="divSearch.form.ctclYY_WORK.form.TextBox" propid="value" datasetid="dsSearch" columnid="YY_WORK"/>
    </Bind>
    <Script type="xscript5.1"><![CDATA[this.DWB_HDGISUNG_LIST_YY_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
   // -- 필수 -------------------//
   this.gfnFormOnLoad(this);   
   this.gfnFormInfo(this);      
   // ---------------------------//
   
   this.fnSetButton();
   this.fnSetExtendButton();
   this.fnSetVariable();
   this.fnSetEvent();
   this.fnSetParameter();
   
   if(!this.gfnIsNull(this.getOwnerFrame().CD_SITE) && !this.gfnIsNull(this.getOwnerFrame().YY_WORK))
	{
		this.dsSearch.setColumn(0, "CD_SITE", this.getOwnerFrame().CD_SITE);
		this.ccfCD_SITE.form.DSTextBox.set_value(this.getOwnerFrame().DS_SITE);
		this.dsSearch.setColumn(0, "YY_WORK", this.getOwnerFrame().YY_WORK);
	}else{
		var today = this.gfnGetDate();
		var yyWork = today.substr(0, 4);
		
		this.dsSearch.setColumn(0, "YY_WORK", yyWork);
	}
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 ************************************************************************/
this.fnSetButton = function() {
   // 서브 버튼 사용
   //this.gfnUseSubBtn(true, this.divData, this.divData.form.divSplitter); // divSplitter sync
// 	this.FormBtns.Add.set_enable(false);
// 	this.FormBtns.Del.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결
 ************************************************************************/
this.fnSetExtendButton = function() {
   this.btnGisung = this.gfnFormButtonAdd("btnGisung", "fnGisung");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
   this.ccfCD_SITE = this.divSearch.form.ccfCD_SITE;
   this.ctclYY_WORK = this.divSearch.form.ctclYY_WORK;

   this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {   
   this.gfnGridInit(this.dxGrid, this.dsList, "DW", "DWB_HDGISUNG_LIST_YY");
   this.dxGrid.addEventHandler("onselectchanged", this.dxGrid_RowCellChanged, this);
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("TY_WRK", "string");
	this.dsSelect.addColumn("CD_SITE", "string");
	this.dsSelect.addColumn("YY_WORK", "string");
	this.dsSelect.addColumn("DS_CONTMETHOD", "string");
	this.dsSelect.addColumn("GR_SEARCH", "string");
}

/************************************************************************
 * 버튼 이벤트
 ************************************************************************/
 /*
  *   조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "TY_WRK", "Q");
	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsSelect.setColumn(0, "YY_WORK", this.dsSearch.getColumn(0, "YY_WORK"));
	this.dsSelect.setColumn(0, "DS_CONTMETHOD", this.FormInfo.DS_PARAM);
	this.dsSelect.setColumn(0, "GR_SEARCH", this.AuthClient.GR_SEARCH);
	
   var strSvcId    = "select";
   var strSvcType  = "grid";
   var inProc      = "_dsProc";
   var inData      = "select=dsSelect";
   var outData     = "dsList=select0";
   var strArg      = "";
   var callBackFnc = "fnCallback";
   
   this.gfnTransaction( strSvcId ,    // transaction을 구분하기 위한 svc id값
                  strSvcType ,    // transaction을 요청할 구분
                  inProc,         // Procedure 정보 Dataset 이름
                  inData ,       // 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
                  outData ,       // 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
                  strArg,          // 입력값으로 보낼 arguments, strFormData="20120607"
                  callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *   입력 버튼
 */
this.fnAdd = function() {
   //this.gfnGridAdd(this.dxGrid);
}

/*
 *   삭제 버튼
 */ 
this.fnDel = function() {
   //this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
}



/*
 *   엑셀 버튼
 */ 
this.fnExcel = function() {
   this.gfnExcelExport(this.dxGrid);
}

/*
 *   출력 버튼
 */
this.fnPrint = function() {
}
 
/************************************************************************
 * 서브 버튼 이벤트
 ************************************************************************/
 this.fnGisung = function() {
	var param = {};
	var rowposition = this.dsList.rowposition;
	
	param.CD_SITE = this.dsList.getColumn(rowposition, "CD_SITE");
	param.NO_HADOCONT = this.dsList.getColumn(rowposition, "NO_HADOCONT");
	param.CD_VENDOR = this.dsList.getColumn(rowposition, "CD_VENDOR");
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DWB_HDGISUNG_CONTRACT_LIST", "fnDialogCallback", param, 1200, 650); 
 }
 
this.fnDialogCallback = function(svcID, value) {
	//this.FormBtns.Select.click();
};

/************************************************************************
 * Validate
 ************************************************************************/
this.fnSelectValidate = function() {
	var validate = true;
	
	if(this.gfnIsNull(this.dsSearch.getColumn(0,"YY_WORK"))){
		validate = false;
	
		this.fnVaidateCallback = function() {
			this.divSearch.form.ctclYY_WORK.form.TextBox.setFocus();
		}
		this.gfnAlert("기성년월을 입력하세요.", "fnVaidateCallback");
	}
	
	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
this.fnCallback = function(svcID, errorCode, errorMsg, strArg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.divData_objGrid_oncelldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	this.fnGisung();
};

this.dxGrid_RowCellChanged = function(obj:nexacro.Grid,e:nexacro.GridSelectEventInfo)
{
	var colnm = this.gfnGridGetBindColumnNameByIndex(this.dxGrid, e.cell);	// 컬럼 인덱스로 컬럼명 가져오기

	var rows = obj.getSelectedDatasetRows();
	var sum = 0;
	var bRet = "";
	for(var i = 0; i < rows.length; i++) {
		var am = this.dsList.getColumn(rows[i], colnm);		
		
		//bRet = nexacro.isNumeric(am); 
		bRet = isNaN(am); // 문자:true, 숫자:false
		//alert(am+":::"+bRet);
		if(bRet){
			break;
		}
		
		if(!this.gfnIsNull(am)) {
			sum += am;
		}
	}
	
	var colDS_SITE = this.dxGrid.getBindCellIndex("body", "DS_SITE");

	if(!bRet){	// 숫자면 합계표시, 문자면 null
		this.dxGrid.setCellProperty("summ", colDS_SITE, "text",  "선택합계=" + this.gfnAppendComma(sum));
	}else{
		this.dxGrid.setCellProperty("summ", colDS_SITE, "text", "");
	}
}

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.fnSearchInit = function(obj,e) {
   if(e == null || (e.pretext != e.posttext)) {
      this.gfnSetFormStatus(this);
      this.gfnGridClear(this.dxGrid);
   }
}

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
   if(e.oldvalue != e.newvalue){
	  this.gfnGridClear(this.dxGrid);
   }
}]]></Script>
  </Form>
</FDL>
