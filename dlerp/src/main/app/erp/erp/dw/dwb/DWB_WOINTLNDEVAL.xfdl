<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="New Form" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="staCD_SITE" taborder="0" text="현장코드" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_SITE" CodeFindName="DZX_CFSITE" CDTextWidth="80" taborder="0" left="staCD_SITE:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staYR_WORK" taborder="0" text="기준년도" left="ccfCD_SITE:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYR_WORK" taborder="1" left="staYR_WORK:0.0" top="10.0" width="60" height="24.0" url="cmm::cmmCalYY.xfdl"/>
              <Static id="staNO_SEQ" taborder="0" text="대여차수" left="ctclYR_WORK:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfNO_SEQ" CodeFindName="DWX_CFWOINTLND_01" CDTextWidth="40" taborder="0" left="staNO_SEQ:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staYM_WORK" taborder="1" text="기성년월" left="ccfNO_SEQ:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYM_WORK" taborder="2" left="staYM_WORK:0.0" top="10.0" width="80" height="24.0" dateformat="yyyy-mm" editformat="yyyymm" url="cmm::cmmCalMM.xfdl" enableevent="true" enable="false"/>
              <CheckBox id="cchkYN_RMN" taborder="1" text="잔여기성" left="ctclYM_WORK:0.0" top="10.0" width="70" height="24.0" truevalue="Y" falsevalue=""/>
              <CheckBox id="cchkYN_WOINTLNDEVAL" taborder="1" text="추정기성" left="cchkYN_RMN:0.0" top="10.0" width="70" height="24.0" truevalue="Y" falsevalue=""/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	if(!this.gfnIsNull(this.getOwnerFrame().CD_SITE) && !this.gfnIsNull(this.getOwnerFrame().YR_WORK) 
	&& !this.gfnIsNull(this.getOwnerFrame().NO_SEQ) && !this.gfnIsNull(this.getOwnerFrame().YM_WORK))
	{
		this.dsSearch.setColumn(0, "CD_SITE", this.getOwnerFrame().CD_SITE);
		this.divSearch.form.ccfCD_SITE.form.DSTextBox.set_value(this.getOwnerFrame().DS_SITE);
		this.dsSearch.setColumn(0, "YR_WORK", this.getOwnerFrame().YR_WORK);
		this.dsSearch.setColumn(0, "NO_SEQ", this.getOwnerFrame().NO_SEQ);
		this.divSearch.form.ccfNO_SEQ.form.DSTextBox.set_value(this.getOwnerFrame().DT_REQPERD);
		this.dsSearch.setColumn(0, "YM_WORK", this.getOwnerFrame().YM_WORK);
		this.dsSearch.setColumn(0, "YN_WOINTLNDEVAL", this.getOwnerFrame().YN_WOINTLNDEVAL);
		
		this.FormBtns.Select.click();
	}
	else
	{
		var today = this.gfnGetDate();
		this.dsSearch.setColumn(0, "YR_WORK", today.substr(0,4));
	}
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	this.FormBtns.Add.set_enable(false);
	this.FormBtns.Del.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnWrtCmpl = this.gfnFormButtonAdd("btnWrtCmpl", "fnWrtCmpl");
	this.btnWrtCnc = this.gfnFormButtonAdd("btnWrtCnc", "fnWrtCnc");
	
	this.btnWrtCmpl.set_enable(false);
	this.btnWrtCnc.set_enable(false);
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {	
	this.ccfCD_SITE = this.divSearch.form.ccfCD_SITE;
	this.ccfNO_SEQ = this.divSearch.form.ccfNO_SEQ;
	this.ctclYR_WORK = this.divSearch.form.ctclYR_WORK;
	
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.ccfNO_SEQ.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfNO_SEQ.AfterCDTextChanged = "ccfNO_SEQ_AfterCDTextChanged";

	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DW", "DWB_WOINTLNDEVAL");

	// row 수정가능 여부
	this.dxGrid.EnterCell = "fnGrid_EnterCell";
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("TY_WRK", "string");
	this.dsSelect.addColumn("YR_WORK", "string");
	this.dsSelect.addColumn("NO_SEQ", "string");
	this.dsSelect.addColumn("CD_SITE", "string");
	this.dsSelect.addColumn("YM_WORK", "string");
	this.dsSelect.addColumn("YN_WOINTLNDEVAL", "string");
	this.dsSelect.addColumn("YN_RMN", "string");
	
	this.dsSave = new Dataset();
	this.dsSave.addColumn("TY_WRK", "string");
	this.dsSave.addColumn("ID_USER", "string");
	this.dsSave.addColumn("YR_WORK", "string");
	this.dsSave.addColumn("NO_SEQ", "string");
	this.dsSave.addColumn("CD_SITE", "string");
	this.dsSave.addColumn("NO_HADOCONT", "string");
	this.dsSave.addColumn("YM_WORK", "string");
	this.dsSave.addColumn("CD_VENDOR", "string");
	this.dsSave.addColumn("AM_ASMEVALSITE", "bigdecimal");
	this.dsSave.addColumn("AM_ASMEVALHQ", "bigdecimal");
	this.dsSave.addColumn("YN_OBJ", "string");
	this.dsSave.addColumn("DS_RMKS", "string");
	this.dsSave.addColumn("RM_REF", "string");
	this.dsSave.addColumn("NO_SLIP", "string");
	
	this.dsExecute = new Dataset();
	this.dsExecute.addColumn("TY_WRK", "string");
	this.dsExecute.addColumn("ID_USER", "string");
	this.dsExecute.addColumn("YR_WORK", "string");
	this.dsExecute.addColumn("NO_SEQ", "string");
	this.dsExecute.addColumn("CD_SITE", "string");
	this.dsExecute.addColumn("YM_WORK", "string");
		
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();

	this.dsSelect.setColumn(0, "TY_WRK", "Q");
	var yr_work = this.dsSearch.getColumn(0, "YR_WORK");
	this.dsSelect.setColumn(0, "YR_WORK", yr_work.substr(0,4));
	this.dsSelect.setColumn(0, "NO_SEQ", this.dsSearch.getColumn(0, "NO_SEQ"));
	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsSelect.setColumn(0, "YM_WORK", this.dsSearch.getColumn(0, "YM_WORK"));
	this.dsSelect.setColumn(0, "YN_RMN", this.dsSearch.getColumn(0, "YN_RMN"));
	this.dsSelect.setColumn(0, "YN_WOINTLNDEVAL", this.dsSearch.getColumn(0, "YN_WOINTLNDEVAL"));
	
// 	var YN_WOINTLNDEVAL = "";
// 	if(this.dsSearch.getColumn(0, "YN_WOINTLNDEVAL") == "true") 
// 	{
// 		YN_WOINTLNDEVAL = "Y";
// 	}
	
//	this.dsSelect.setColumn(0, "YN_WOINTLNDEVAL", YN_WOINTLNDEVAL);
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]

}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	var nrow = this.gfnGridAdd(this.dxGrid); // top (default), bottom, current
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	// 그리드 필수항목 체크
	if (!this.gfnGridValidate(this.dxGrid)) return;	

	// save SP 한개로 사용하는 경우
	this.dsSave.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
			case "U":
			case "D":
				var nrow = this.dsSave.addRow();
				this.dsSave.setColumn(nrow, "TY_WRK", flag);
				this.dsSave.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
				var yr_work = this.dsSearch.getColumn(0, "YR_WORK");
				this.dsSave.setColumn(nrow, "YR_WORK", yr_work.substr(0,4));
				//this.dsSave.setColumn(nrow, "YR_WORK", this.dsSearch.getColumn(0, "YR_WORK"));
				this.dsSave.setColumn(nrow, "NO_SEQ", this.dsSearch.getColumn(0, "NO_SEQ"));
				this.dsSave.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
				this.dsSave.setColumn(nrow, "NO_HADOCONT", this.dsList.getColumn(i, "NO_HADOCONT"));
				this.dsSave.setColumn(nrow, "YM_WORK", this.dsSearch.getColumn(0, "YM_WORK"));
				this.dsSave.setColumn(nrow, "CD_VENDOR", this.dsList.getColumn(i, "CD_VENDOR"));
				this.dsSave.setColumn(nrow, "AM_ASMEVALSITE", this.dsList.getColumn(i, "AM_ASMEVALSITE"));
				this.dsSave.setColumn(nrow, "AM_ASMEVALHQ", this.dsList.getColumn(i, "AM_ASMEVALHQ"));
				this.dsSave.setColumn(nrow, "YN_OBJ", this.dsList.getColumn(i, "YN_OBJ"));
				this.dsSave.setColumn(nrow, "DS_RMKS", this.dsList.getColumn(i, "DS_RMKS"));
				this.dsSave.setColumn(nrow, "RM_REF", this.dsList.getColumn(i, "RM_REF"));
				this.dsSave.setColumn(nrow, "NO_SLIP", this.dsList.getColumn(i, "NO_SLIP"));
				break;
		}
	}
		
	if (this.dsSave.rowcount == 0) return;
	
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;

	if (this.gfnIsNull(this.dsSearch.getColumn(0, "CD_SITE"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.ccfCD_SITE.form.CDTextBox.setFocus();
		}
		this.gfnAlert("현장코드를 입력하세요.", "fnVaidateCallback");
	}
	else if (this.gfnIsNull(this.dsSearch.getColumn(0, "YR_WORK"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.ctclYR_WORK.form.TextBox.setFocus();
		}
		this.gfnAlert("기준년도를 입력하세요.", "fnVaidateCallback");
	}
	else if (this.gfnIsNull(this.dsSearch.getColumn(0, "NO_SEQ"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.ccfNO_SEQ.form.CDTextBox.setFocus();
		}
		this.gfnAlert("대여차수를 입력하세요.", "fnVaidateCallback");
	}
	else if (this.gfnIsNull(this.dsSearch.getColumn(0, "YM_WORK"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.ctclYM_WORK.form.TextBox.setFocus();
		}
		this.gfnAlert("기준년월을 입력하세요.", "fnVaidateCallback");
	}
	
	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg, args)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
		this.FormBtns.Add.set_enable(false);
		this.FormBtns.Del.set_enable(false);
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	else if(svcID == "execute")
	{
		if (errorCode == 0) {
			if(args == "CMPL")	
			{
				this.fnCMPL_callback = function()
				{
					this.FormBtns.Select.click();
				}	
				this.gfnAlert("작업완료가 정상 처리되었습니다.", "fnCMPL_callback");
			}
			else if(args == "CNC")
			{
				this.fnCNC_callback = function()
				{
					this.FormBtns.Select.click();
				}
				this.gfnAlert("작업완료취소가 정상 처리되었습니다.", "fnCNC_callback");
			}
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {

	if (id == "ccfNO_SEQ") {
		if(this.gfnIsNull(this.dsSearch.getColumn(0, "YR_WORK")))
		{
			this.gfnAlert("기준년도를 입력하세요.", "fnVaidateCallback");
			
			return false;
		}
		
		dsUserParam.setColumn(nrow, "YR_WORK", this.dsSearch.getColumn(0, "YR_WORK"));
	}
	
	return true;
}


this.ccfNO_SEQ_AfterCDTextChanged = function(id, codeFindData) {
	if(!this.gfnIsNull(this.dsSearch.getColumn(0, "YM_WORK")))
	{
		this.fnChangeColumnCaption(false);
	}
	
	var arr = codeFindData;
	
	this.divSearch.form.ccfNO_SEQ.form.DSTextBox.set_value("");
	this.dsSearch.setColumn(0, "YM_WORK", "");
	
	if(arr.length > 0)
	{
		//this.divSearch.form.ccfNO_SEQ.form.DSTextBox.set_value(arr[0]["DT_REQPERD"]);
		this.divSearch.form.ccfNO_SEQ.form.DSTextBox.set_value(arr[0]["DS_RMKS"]);		
		this.dsSearch.setColumn(0, "YM_WORK", arr[0]["YM_WORK"]);
		this.fnChangeColumnCaption(true);
	}
	
}
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 this.fnGrid_EnterCell = function(obj:nexacro.Grid, row, cell) {
	// 수정가능 true, false 처리하려는 컬럼에 대해서만 return 처리할것. 
	var colnm = this.gfnGridGetBindColumnNameByIndex(this.dxGrid, cell);	// 클릭한 cell의 컬럼명
	
	// 클릭했을때 클릭한 cell을 수정 가능 or 불가능 상태로 만든다.
	// YN_EDIT 값이 Y일때만 수정가능상태
	if(this.dsList.getColumn(row, "YN_EDIT") == "N") {
		return false;
	}
		
}

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};

this.fnChangeColumnCaption = function(check)
{
	var CellCount = this.dxGrid.getCellCount("head");
	var YM_WORK = this.dsSearch.getColumn(0, "YM_WORK");
	
	var M_3_temp = this.gfnAddMonth(YM_WORK.concat("01"), -3);
	var M_2_temp = this.gfnAddMonth(YM_WORK.concat("01"), -2);
	var M_1_temp = this.gfnAddMonth(YM_WORK.concat("01"), -1);
	
	var	M_3 = this.gfnGetHeadCellIndex(this.dxGrid, "AM_GISUNG_M_3");
	var	M_2 = this.gfnGetHeadCellIndex(this.dxGrid, "AM_GISUNG_M_2");
	var	M_1 = this.gfnGetHeadCellIndex(this.dxGrid, "AM_GISUNG_M_1");

	// 조회 전.
	if(check == true)
	{
		this.dxGrid.setCellProperty("head", M_3, "text", M_3_temp.substr(0,4) + "-" + M_3_temp.substr(4,2));
		this.dxGrid.setCellProperty("head", M_2, "text", M_2_temp.substr(0,4) + "-" + M_2_temp.substr(4,2));
		this.dxGrid.setCellProperty("head", M_1, "text", M_1_temp.substr(0,4) + "-" + M_1_temp.substr(4,2));
	}
	// 초기화
	else
	{
		this.dxGrid.setCellProperty("head", M_3, "text", "M-3");
		this.dxGrid.setCellProperty("head", M_2, "text", "M-2");
		this.dxGrid.setCellProperty("head", M_1, "text", "M-1");
	}	
}
// 조회값이 변경되었을 때. (기준년도 변경 관련되어 만든 함수)
this.dsSearch_oncolumnchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.columnid == "YR_WORK")
	{
		if(e.oldvalue != e.newvalue)
		{
			this.dsSearch.setColumn(0, "NO_SEQ","");
			
			if(!this.gfnIsNull(this.dsSearch.getColumn(0, "YM_WORK")))
			{
				this.fnChangeColumnCaption(false);
			}
			
			this.divSearch.form.ccfNO_SEQ.form.DSTextBox.set_value("");
			this.dsSearch.setColumn(0, "YM_WORK","");
		}
	}
};

// 아래부터는 확장 버튼.
this.fnWrtCmpl = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if (!this.fnSelectValidate()) return false;
	
	var str = "작업완료 후 추정기성을 변경하실 수 없습니다.\n작업완료 처리 하시겠습니까?";
	
	this.gfnConfirm(str,"fnWrt_callback","CMPL");
}

this.fnWrtCnc = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if (!this.fnSelectValidate()) return false;	
	
	var str = "작업완료취소 후 추정기성을 변경하실 수 있습니다.\n작업완료취소 처리 하시겠습니까?";

	this.gfnConfirm(str,"fnWrt_callback","CNC");
}

this.fnWrt_callback = function(strId, val) 
{
	if(val == true)
	{
		this.dsExecute.clearData();
	
		var nrow = this.dsExecute.addRow();
		this.dsExecute.setColumn(nrow, "TY_WRK", strId);
		this.dsExecute.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
		// YR_WORK의 달력을 누르면 월,일이 붙어버리는 현상 발생. 강제로 4글자로 보냄.
		var yr_work = this.dsSearch.getColumn(0, "YR_WORK");
		this.dsExecute.setColumn(nrow, "YR_WORK", yr_work.substr(0,4));
		//this.dsExecute.setColumn(nrow, "YR_WORK", this.dsSearch.getColumn(0, "YR_WORK"));
		this.dsExecute.setColumn(nrow, "NO_SEQ", this.dsSearch.getColumn(0, "NO_SEQ"));
		this.dsExecute.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
		this.dsExecute.setColumn(nrow, "YM_WORK", this.dsSearch.getColumn(0, "YM_WORK"));

		if (this.dsExecute.rowcount == 0) return;
		
		var strSvcId    = "execute";
		var strSvcType  = "save";
		var inProc		= "_dsProc";
		var inData      = "execute=dsExecute";
		var outData     = "";
		var strArg      = strId;
		var callBackFnc = "fnCallback";

		this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
							strSvcType , 	// transaction을 요청할 구분
							inProc,			// Procedure 정보 Dataset 이름
							inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
							outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
							strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
							callBackFnc);   // 통신방법 정의 [생략가능]
	}
}

// 그리드 row 변경시 확장버튼 활성화 or 비활성화 처리
this.dsList_onrowposchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSRowPosChangeEventInfo)
{
	if(this.dsList.getColumn(this.dsList.rowposition, "BTN_WRTCMPL") == "Y"){
		this.btnWrtCmpl.set_enable(true);
	}else{
		this.btnWrtCmpl.set_enable(false);
	}	
	
	if(this.dsList.getColumn(this.dsList.rowposition, "BTN_WRTCNC") == "Y"){
		this.btnWrtCnc.set_enable(true);
	}else{
		this.btnWrtCnc.set_enable(false);
	}	
};
]]></Script>
    <Objects>
      <Dataset id="dsList" onrowposchanged="dsList_onrowposchanged"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DWBPR_WOINTLNDEVAL_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DWBPR_WOINTLNDEVAL_SAVE</Col>
          </Row>
          <Row>
            <Col id="TARGET">execute</Col>
            <Col id="SP">DWBPR_WOINTLNDEVAL_EXECUTE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged" oncolumnchanged="dsSearch_oncolumnchanged">
        <ColumnInfo>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="YR_WORK" type="STRING" size="256"/>
          <Column id="NO_SEQ" type="STRING" size="256"/>
          <Column id="YM_WORK" type="STRING" size="256"/>
          <Column id="YN_WOINTLNDEVAL" type="STRING" size="256"/>
          <Column id="YN_RMN" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="YN_RMN">Y</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item1" compid="divSearch.form.ctclYR_WORK.form.TextBox" propid="value" datasetid="dsSearch" columnid="YR_WORK"/>
      <BindItem id="item2" compid="divSearch.form.ccfNO_SEQ.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="NO_SEQ"/>
      <BindItem id="item3" compid="divSearch.form.ctclYM_WORK.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_WORK"/>
      <BindItem id="item4" compid="divSearch.form.cchkYN_WOINTLNDEVAL" propid="value" datasetid="dsSearch" columnid="YN_WOINTLNDEVAL"/>
      <BindItem id="item5" compid="divSearch.form.cchkYN_RMN" propid="value" datasetid="dsSearch" columnid="YN_RMN"/>
    </Bind>
  </Form>
</FDL>
