<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="DWB_ETAX_LIST" width="1280" height="720" titletext="전자세금계산서관리" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="78.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none" text="">
          <Layouts>
            <Layout>
              <Static id="sta00" taborder="0" text="증빙기간" left="0.0" top="10.0" width="118.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_SITE" CodeFindName="DZX_CFSITE" AutoSet="true" CDTextWidth="80" fittocontents="true" maxwidth="353" taborder="3" left="0.0" top="sta00:10.0" width="269" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staCD_CORP" taborder="1" text="업체코드" left="ccfCD_SITE:0.0" top="sta00:10.0" width="118.0" height="24.0" textDecoration="none" cssclass="sta_WF_SchLabel"/>
              <Static id="sta02" taborder="2" text="현장코드" left="staCD_CORP:0.0" top="sta00:10.0" width="118.0" height="24.0" textDecoration="none" cssclass="sta_WF_SchLabel"/>
              <Static id="staYM_WORK" taborder="4" text="증빙구분" left="0.0" top="10.0" width="118.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Calendar id="calDT_FR" taborder="5" left="staYM_WORK:0.0" top="10.0" width="120" height="24.0" dateformat="yyyy-MM-dd"/>
              <Calendar id="calDT_TO" taborder="6" left="calDT_FR:0.0" top="10.0" width="120" height="24.0" dateformat="yyyy-MM-dd"/>
              <Static id="sta00_00" taborder="7" text="~" left="calDT_TO:0.0" top="10.0" width="30.0" height="24.0" textAlign="center" verticalAlign="middle" cssclass="sta_WF_AC"/>
              <Combo id="cboCD_VATPROOF" taborder="8" left="sta00_00:0.0" top="10.0" width="136" height="24.0" innerdataset="innerdataset" codecolumn="codecolumn" datacolumn="datacolumn" index="0" text="전체" value="">
                <Dataset id="innerdataset">
                  <ColumnInfo>
                    <Column id="codecolumn" size="256"/>
                    <Column id="datacolumn" size="256"/>
                  </ColumnInfo>
                  <Rows>
                    <Row>
                      <Col id="datacolumn">전체</Col>
                    </Row>
                    <Row>
                      <Col id="datacolumn">세금계산서</Col>
                      <Col id="codecolumn">A</Col>
                    </Row>
                    <Row>
                      <Col id="datacolumn">계산서</Col>
                      <Col id="codecolumn">B</Col>
                    </Row>
                  </Rows>
                </Dataset>
              </Combo>
              <Static id="staYM_WORK00" taborder="9" text="진행상태" left="cboCD_VATPROOF:0.0" top="10.0" width="118.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Combo id="cboTY_STATUS" taborder="10" left="staYM_WORK00:0.0" top="10.0" width="136" height="24.0" innerdataset="dsCdVatproof" codecolumn="CD_CODE" datacolumn="DS_CODE" index="-1"/>
              <Static id="staYM_WORK00_00" taborder="11" text="전표승인여부" left="cboTY_STATUS:0.0" top="10.0" width="118.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Combo id="cboYN_SLIPAPPR" taborder="12" left="staYM_WORK00_00:0.0" top="10.0" width="136" height="24.0" innerdataset="innerdataset" codecolumn="codecolumn" datacolumn="datacolumn" index="-1" text="" value="">
                <Dataset id="innerdataset">
                  <ColumnInfo>
                    <Column id="codecolumn" size="256"/>
                    <Column id="datacolumn" size="256"/>
                  </ColumnInfo>
                  <Rows>
                    <Row>
                      <Col id="datacolumn">전체</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">Y</Col>
                      <Col id="datacolumn">승인</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">N</Col>
                      <Col id="datacolumn">미승인</Col>
                    </Row>
                  </Rows>
                </Dataset>
              </Combo>
              <Div id="ccfCD_VENDOR" CodeFindName="DWX_CFVENDOR_DH" CDTextWidth="80" maxwidth="353" taborder="13" left="staCD_CORP:0.0" top="sta00:10.0" width="269" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staYM_WORK00_00_00" taborder="14" text="시스템구분" left="ccfCD_VENDOR:0.0" top="sta00:10.0" width="118.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Combo id="cboTY_GUBUN" taborder="15" left="staYM_WORK00_00_00:0.0" top="sta00:10.0" width="136" height="24.0" innerdataset="innerdataset" codecolumn="codecolumn" datacolumn="datacolumn" index="0" text="전체" value="">
                <Dataset id="innerdataset">
                  <ColumnInfo>
                    <Column id="codecolumn" size="256"/>
                    <Column id="datacolumn" size="256"/>
                  </ColumnInfo>
                  <Rows>
                    <Row>
                      <Col id="datacolumn">외주</Col>
                      <Col id="codecolumn">Y</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">J</Col>
                      <Col id="datacolumn">자재</Col>
                    </Row>
                    <Row>
                      <Col id="codecolumn">P</Col>
                      <Col id="datacolumn">기타</Col>
                    </Row>
                  </Rows>
                </Dataset>
              </Combo>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="90" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0" oncelldblclick="divData_objGrid_oncelldblclick"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();
this.execGubun = "";	// 버튼클릭 구분값(본사확정, 본사확정취소, 전표발행, 전표취소)
//this.m1InVal = "";	// 기성년월 값 셋팅될때 그리드의 헤더명(M-1 컬럼명)을 담는다
//this.m2InVal = "";	// 기성년월 값 셋팅될때 그리드의 헤더명(M-2 컬럼명)을 담는다
//this.m3InVal = "";	// 기성년월 값 셋팅될때 그리드의 헤더명(M-3 컬럼명)을 담는다

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	this.fnComboSelect();
	
	var currentDate = this.gfnGetDate("date");
	var firstDate = this.gfnGetFirstDate(currentDate);
	this.divSearch.form.calDT_FR.set_value(firstDate);
	this.divSearch.form.calDT_TO.set_value(currentDate);
	if(!this.gfnIsNull(this.getOwnerFrame().CD_SITE))
	{
		this.dsSearch.setColumn(0, "CD_SITE", this.getOwnerFrame().CD_SITE);
		this.divSearch.form.ccfCD_SITE.form.DSTextBox.set_value(this.getOwnerFrame().DS_SITE);
	}
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {

};

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnEtaxView = this.gfnFormButtonAdd("btnEtaxView", "fnEtaxView");
	this.btnEtaxEmail = this.gfnFormButtonAdd("btnEtaxEmail", "fnEtaxEmail");
	this.btnEtaxIssue = this.gfnFormButtonAdd("btnEtaxIssue", "fnEtaxIssue");
	this.btn1 = this.gfnFormButtonAdd("btnEtaxDtlSearch", "fnEtaxDtlSearch");
	this.btn3 = this.gfnFormButtonAdd("btnSlipSearch", "fnSlipSearch");
	this.btnBilling = this.gfnFormButtonAdd("btnBilling", "fnBilling");
	this.btnBillingCancel = this.gfnFormButtonAdd("btnBillingCancel", "fnBillingCancel");
	
	this.btn3.set_enable(false);
	this.btnBilling.set_enable(false);
	this.btnBillingCancel.set_enable(false);
};


/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {	
 	this.divSearch.form.ccfCD_VENDOR.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
 	
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DH", "DHV_ETAXLIST_SELECT");
	
	this.dxGrid.addEventHandler("onselectchanged", this.fnGrid_RowCellChanged, this);
	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
	this.dxGrid.EnterCell = "fnGrid_EnterCell";
	
	var id_group = this.FormInfo.ID_GROUP;
	if(id_group == "A" || id_group == "0")
	{
		this.divSearch.form.ccfCD_SITE.set_enable(true);
	}
	else
	{
		this.divSearch.form.ccfCD_SITE.set_enable(false);
	}
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSave = new Dataset();
	this.dsSave.addColumn("NO_VAT", "string");
	this.dsSave.addColumn("ID_TRANS","string");
};


/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;

	var strSvcId    = "select";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "select=dsSearch";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction(strSvcId, strSvcType, inProc, inData, outData, strArg, callBackFnc);
};

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	//var nrow = this.gfnGridAdd(this.dxGrid, "bottom"); // top (default), bottom, current		
};

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
};

/*
 *	저장 버튼
 */
this.fnSave = function() 
{
	this.dsSave.clearData();
	var nrow = this.dsSave.addRow();
	var noVat = "";
	
	for(var i = 0; i < this.dsList.rowcount; i++)
	{
		if(this.dsList.getColumn(i, "CHK") != 1) continue;
		
		noVat = noVat + this.dsList.getColumn(i, "NO_VAT") + ";";
	}
	
	this.dsSave.setColumn(nrow,"NO_VAT", noVat);
	this.dsSave.setColumn(nrow,"ID_TRANS",this.AuthClient.ID_USER);
	
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave";
	var outData     = "dsOutput0=save";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
};

/*
 *	출력 버튼
 */
this.fnPrint = function() {
};

 /*
  *	조회 버튼
  */
this.fnComboSelect = function() {
	var strSvcId    = "combo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "combo=dsCombo";
	var outData     = "dsCdVatproof=combo0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction(strSvcId, strSvcType, inProc, inData, outData, strArg, callBackFnc);
};

 /*
  *	이메일변경
  */
this.fnEtaxEmail = function() {
	var tempDS = new Dataset;
	tempDS.copyData(this.dsList, false);
	tempDS.filter("CHK == 1");
		
	if (tempDS.rowcount > 0)
	{
		this.dsEmail.copyData(tempDS, true);
		
		var nIdx1 = this.dsEmail.findRowExprNF( "YN_ISSUE != '미발행'" );
		if (nIdx1 > -1)
		{
			this.gfnAlert("미발행건만 수정 가능합니다.");
			return;
		}
		
		var nIdx2 = this.dsEmail.findRowExprNF( "DS_DAMDANG == null || DS_DAMDANG == undefined || DS_DAMDANG.trim().length == 0" );
		if (nIdx2 > -1)
		{
			this.gfnAlert("거래처 담당자명을 입력해주세요.");
			return;
		}
		
		var nIdx3 = this.dsEmail.findRowExprNF( "DS_EMAIL == null || DS_EMAIL == undefined || DS_EMAIL.trim().length == 0" );
		if (nIdx3 > -1)
		{
			this.gfnAlert("거래처 담당자 이메일주소를 입력해주세요.");
			return;
		}
		
		var strSvcId    = "email";
		var strSvcType  = "save";
		var inProc		= "_dsProc";
		var inData      = "email=dsEmail";
		var outData     = "";
		var strArg      = "";
		var callBackFnc = "fnCallback";
		
		this.gfnTransaction(strSvcId, strSvcType, inProc, inData, outData, strArg, callBackFnc);
	}
	else
	{
		this.gfnAlert("선택된 데이터가 없습니다.");
	}
};


/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {	
	/*
	if(this.gfnIsNull(this.dsSearch.getColumn(0, "CD_SITE"))){
		this.gfnAlert("현장코드를 입력하세요.");
		return false;
	}
	*/
	
	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		if(this.dsList.rowcount > 0){
			this.btn3.set_enable(true);	
		}else{
			this.btn3.set_enable(false);	
		}	
		this.gfnGridAfterSelect(this.dxGrid);	
		
		this.fnCstBtnSet(this.dsSearch);
	}
	else if (svcID == "save") {
		if (errorCode == 0) {
			this.fnSend();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
	else if (svcID == "combo") {
		this.dsCdVatproof.insertRow(0);
		this.dsCdVatproof.setColumn(0, "CD_CODE", "");
		this.dsCdVatproof.setColumn(0, "DS_CODE", "전체");
		
		this.dsSearch.setColumn(0, "ID_TRANS", this.AuthClient.ID_USER);
		this.divSearch.form.cboTY_STATUS.set_index(0);
	}
	else if (svcID == "email") {
		this.FormBtns.Select.click();
	} else if(svcID == "saveBilling"){
		this.FormBtns.Select.click();
	} else if(svcID == "saveBillingCancel"){
		this.FormBtns.Select.click();
	}
};

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if (id == "ccfCD_VENDOR") {
		if(this.gfnIsNull(this.dsSearch.getColumn(0, "CD_SITE"))) 
		{	
			this.gfnAlert("현장코드를 먼저 입력해주세요.");
			return;
		}
		dsUserParam.setColumn(nrow, "CD_CORP", this.AuthClient.CD_CORP);
		dsUserParam.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
		dsUserParam.setColumn(nrow, "TY_VENDOR", "");
	}
	return true;
}
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGrid_RowCellChanged = function(obj:nexacro.Grid,e:nexacro.GridSelectEventInfo, event:nexacro.KeyEventInfo)
{
	if ((obj.oldrow > -1 && obj.oldrow == e.row)
		|| (obj.oldrow == -1 && e.oldrow != e.row)) {
		var colnm = this.gfnGridGetBindColumnNameByIndex(obj, e.cell);
		
		var event = nexacro.KeyEventInfo;
		
		var rows = this.dxGrid.getSelectedDatasetRows();
		
		this.dsList.set_enableevent(false);
		for(var i = 0; i < this.dsList.rowcount; i++)
		{
			var check = false;
			
			if(this.gfnGetFlag(this.dsList, i) != "#")
			{
				if(colnm == "CHK")
				{
					check = true;
					break;
				}
				
				if(rows.length > 0)
				{
					for(var j = 0; j < rows.length ; j++)
					{
						if(i == e.row || i == rows[j])
						{
							check = true;
							this.dsList.setColumn(i, "CHK", 1);
						}
					}
				}
				else
				{
					if(i == e.row)
					{
						check = true;
						this.dsList.setColumn(i, "CHK", 1);
					}
				}
				
				if(check == false)
				{
					this.dsList.setColumn(i, "CHK", 0);
				}
			}
		}
		this.dsList.set_enableevent(true);
		
		obj.oldrow = -1;
	}
}

// cell 클릭했을때 이벤트(해당 cell에 대한 이벤트를 건다)
this.fnGrid_EnterCell = function(obj:nexacro.Grid, row, cell) {
	// 수정가능 true, false 처리하려는 컬럼에 대해서만 return 처리할것. 
	var colnm = this.gfnGridGetBindColumnNameByIndex(this.dxGrid, cell);	// 클릭한 cell의 컬럼명
	
	if(colnm == "CHK") {
		return;
	}
};

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.fnEtaxView = function()
{
	var strBATCH_ID = this.dsList.getColumn(this.dsList.rowposition, "INTERFACE_BATCH_ID");
	var strYN_ISSUE = this.dsList.getColumn(this.dsList.rowposition, "YN_ISSUE");
	if (!this.gfnIsNull(strBATCH_ID) && strYN_ISSUE != '정산') 
	{
		var smartBillUrl = this.gfnGetConfig("DZ", "SMART_BILL_URL");	
		smartBillUrl = smartBillUrl + "callSB_V3/XXSB_DTI_PRINT.asp?BATCH_ID=" + strBATCH_ID;
		window.open(smartBillUrl, 'watchwin', 'height=768, width=1024, status=no, scrollbars=auto, resizable=yes'); 
	}
};

this.fnEtaxIssue = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) 
{	
	//this.gfnAlert("세금계산서 전송기능은 2020년 6월 22일부터 이용하실 수 있습니다.");
	//return false;

	var msg = "선택하신 (세금)계산서를 전송 하시겠습니까?";
	this.gfnConfirm(msg, "fnEtaxIssue_callback", "");
};

this.fnEtaxIssue_callback = function(strId, val) 
{
	if(val == true) 
	{
		this.fnSave();
	}
}

this.fnSend = function()
{
	var strBATCH_ID = this.dsOutput0.getColumn(0, "INTERFACE_BATCH_ID_RETRUN");
	var strSmartId = this.dsList.getColumn(0, "SMART_ID");
	var strSmartPwd = this.dsList.getColumn(0, "SMART_PASSWORD");
	
	if(this.gfnIsNull(strSmartId))
	{
		this.gfnAlert("스마트빌 아이디가 존재하지 않습니다.");
		return;
	}
	
	if(this.gfnIsNull(strBATCH_ID)) return;
	
	var smartBillUrl = this.gfnGetConfig("DZ", "SMART_BILL_URL");
	
	smartBillUrl = smartBillUrl + "callSB_V3/XXSB_DTI_ISSUE.asp?BATCH_ID=" + strBATCH_ID + "&ID=" + strSmartId + "&PASS=" + strSmartPwd;
	
	// console.log(smartBillUrl);
	
	window.open(smartBillUrl, 'watchwin', 'height=768, width=1024, status=no, scrollbars=auto, resizable=yes'); 
}

//정산
this.fnBilling = function(obj:nexacro.Button,e:nexacro.ClickEventInfo){
	var str = "";
	var chkCnt = 0;
	for(var i=0; i < this.dsList.getRowCount(); i++){
		if("1" == this.dsList.getColumn(i, "CHK")){
			trace(this.dsList.getColumn(i, "NO_VAT"));
			str += nexacro.trim(this.dsList.getColumn(i, "NO_VAT")) + ";";
			chkCnt++;
		}
	}
	
	if(str == ""){
		this.gfnAlert("정산할 데이터를 선택해주세요.");
		return;
	}
	
	this.gfnConfirm(chkCnt + "개의 데이터를 정산처리 하시겟습니까?", function(strId, val){
		if(val){
			this.dsBillingReq.setColumn(0, "NO_VAT", str.substring(0, str.length-1));
			this.dsBillingReq.setColumn(0, "NEXT_STATUS", "Z");
			this.dsBillingReq.setColumn(0, "ID_TRANS", this.objApp.gdsUserInfo.getColumn(0, "ID_USER"));
			
			
			var strSvcId    = "saveBilling";
			var strSvcType  = "save";
			var inProc		= "_dsProc";
			var inData      = "billing=dsBillingReq";
			var outData     = "";
			var strArg      = "";
			var callBackFnc = "fnCallback";
			
			this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
								strSvcType , 	// transaction을 요청할 구분
								inProc,			// Procedure 정보 Dataset 이름
								inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
								outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
								strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
								callBackFnc); // 통신방법 정의 [생략가능]
		}
	}, "");
}


//정산
this.fnBillingCancel = function(obj:nexacro.Button,e:nexacro.ClickEventInfo){
	var str = "";
	var chkCnt = 0;
	for(var i=0; i < this.dsList.getRowCount(); i++){
		if("1" == this.dsList.getColumn(i, "CHK")){
			trace(this.dsList.getColumn(i, "NO_VAT"));
			str += nexacro.trim(this.dsList.getColumn(i, "NO_VAT")) + ";";
			chkCnt++;
		}
	}
	
	if(str == ""){
		this.gfnAlert("정산취소할 데이터를 선택해주세요.");
		return;
	}
	
	this.gfnConfirm(chkCnt + "개의 데이터를 정산취소처리 하시겟습니까?", function(strId, val){
		if(val){
			this.dsBillingCancelReq.setColumn(0, "NO_VAT", str.substring(0, str.length-1));
			this.dsBillingCancelReq.setColumn(0, "NEXT_STATUS", "Z");
			this.dsBillingCancelReq.setColumn(0, "ID_TRANS", this.objApp.gdsUserInfo.getColumn(0, "ID_USER"));
			
			
			var strSvcId    = "saveBillingCancel";
			var strSvcType  = "save";
			var inProc		= "_dsProc";
			var inData      = "billingCancle=dsBillingCancelReq";
			var outData     = "";
			var strArg      = "";
			var callBackFnc = "fnCallback";
			
			this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
								strSvcType , 	// transaction을 요청할 구분
								inProc,			// Procedure 정보 Dataset 이름
								inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
								outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
								strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
								callBackFnc); // 통신방법 정의 [생략가능]
		}
	}, "");
}


this.fnSlipSearch = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {	
	if (!this.gfnGridIsRow(this.dxGrid)) { 
		this.gfnAlert("전표조회할 데이터를 선택하세요.");
		return false;
	}
	
	var param = {};
	
	//param.NO_ERPKEY = this.dsList.getColumn(this.dsList.rowposition, "NO_ERPKEY");
	 param.CD_TRADE = nexacro.replaceAll(this.dsList.getColumn(this.dsList.rowposition, "CD_SLIP"),"-","");
		
	//this.gfnFormOpen("DHA", "DHA_ERPKEY_SLIP", "", param); 
	this.gfnFormOpen("DHA", "DHA_ISSUESLIP", "", param);	
};

this.fnEtaxDtlSearch = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {	
	
	if (!this.gfnGridIsRow(this.dxGrid)) { 
		this.gfnAlert("상세조회할 데이터를 선택하세요.");
		return false;
	}
	
	var param = {};
	
	param.YN_ISSUE = this.dsList.getColumn(this.dsList.rowposition, "YN_ISSUE");	// 전송상태
	param.NO_VAT = this.dsList.getColumn(this.dsList.rowposition, "NO_VAT");		// 증빙번호
	param.CONVERSATION_ID = this.dsList.getColumn(this.dsList.rowposition, "CONVERSATION_ID");	// 세금 계산서번호
	param.ID_TRANS = this.objApp.gdsUserInfo.getColumn(0, "ID_USER");	// 로그인 ID
		
	this.gfnFormOpen("DWB", "DWB_ETAX", "fnDialogCallback", param, 1030, 680);	
};

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
		this.btn3.set_enable(false);
		this.fnCstBtnSet(obj);
	}
	
	if(e.columnid == "CD_SITE" || e.columnid == "YM_WORK"){
	  this.fnComboSelect();
    } 
	
	trace(e.columnid + ":" + e.newvalue);
};

this.fnCstBtnSet = function(obj:nexacro.NormalDataset){
	//TY_STATUS -- X 미발행 A 저장 Z정산 T역발행거부
    //YN_SLIPAPPR -- Y 승인
	
	var sTY_STATUS = obj.getColumn(0, "TY_STATUS");
	var sYN_SLIPAPPR = obj.getColumn(0, "YN_SLIPAPPR");
	if(("X" === sTY_STATUS || "A" === sTY_STATUS || "T" == sTY_STATUS) && "Y" === sYN_SLIPAPPR){
		this.btnEtaxIssue.set_enable(true);
		if("X" === sTY_STATUS){
			this.btnBilling.set_enable(true);
		} else {
			this.btnBilling.set_enable(false);
		}
	} else {
		this.btnEtaxIssue.set_enable(false);
		this.btnBilling.set_enable(false);
	}
	
	if("Z" === sTY_STATUS){
		this.btnBillingCancel.set_enable(true);
	} else {
		this.btnBillingCancel.set_enable(false);
	}
}

this.divData_objGrid_oncelldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	var nCol1 = obj.getBindCellIndex('body', 'DS_EMAIL');
	var nCol2 = obj.getBindCellIndex('body', 'DS_DAMDANG');
	if (e.col != nCol1 && e.col != nCol2)
	{
		this.fnSlipSearch();	
	}
};]]></Script>
    <Objects>
      <Dataset id="dsList" onrowposchanged="dsList_onrowposchanged"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DHVPR_ETAXLIST_SELECT_DONGBU_NEW</Col>
          </Row>
          <Row>
            <Col id="SP">DZXPR_COMBO_SELECT</Col>
            <Col id="TARGET">combo</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DHVPR_XXSB_DTI_MAIN_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">email</Col>
            <Col id="SP">DHVPR_ETAXLIST_UPDATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">billing</Col>
            <Col id="SP">DHVPR_XXSB_DTI_MAIN_INSERT_JUNGSAN</Col>
          </Row>
          <Row>
            <Col id="TARGET">billingCancle</Col>
            <Col id="SP">DHVPR_XXSB_DTI_MAIN_INSERT_JUNGSAN_CANCEL</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="TY_SALEBUY" type="STRING" size="256"/>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="CD_VATPROOF" type="STRING" size="256"/>
          <Column id="DT_FR" type="STRING" size="256"/>
          <Column id="DT_TO" type="STRING" size="256"/>
          <Column id="TY_STATUS" type="STRING" size="256"/>
          <Column id="CD_VENDOR" type="STRING" size="256"/>
          <Column id="DS_SYSTEM" type="STRING" size="256"/>
          <Column id="ID_TRANS" type="STRING" size="256"/>
          <Column id="YN_SLIPAPPR" type="STRING" size="256"/>
          <Column id="TY_GUBUN" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="YR_WORK"/>
            <Col id="TY_SALEBUY">I</Col>
            <Col id="TY_GUBUN">Y</Col>
            <Col id="YN_SLIPAPPR">Y</Col>
            <Col id="TY_STATUS">X</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsCdVatproof">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsCombo">
        <ColumnInfo>
          <Column id="CD_SYSTEM" type="STRING" size="256"/>
          <Column id="CD_TYPE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_SYSTEM">DH</Col>
            <Col id="CD_TYPE">004</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsOutput0"/>
      <Dataset id="dsEmail" onrowposchanged="dsList_onrowposchanged">
        <ColumnInfo>
          <Column id="NO_VAT" type="STRING" size="256"/>
          <Column id="DS_DAMDANG" type="STRING" size="256"/>
          <Column id="DS_EMAIL" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsBillingReq">
        <ColumnInfo>
          <Column id="NO_VAT" type="STRING" size="256"/>
          <Column id="NEXT_STATUS" type="STRING" size="256"/>
          <Column id="ID_TRANS" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsBillingCancelReq">
        <ColumnInfo>
          <Column id="NO_VAT" type="STRING" size="256"/>
          <Column id="NEXT_STATUS" type="STRING" size="256"/>
          <Column id="ID_TRANS" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.calDT_FR" propid="value" datasetid="dsSearch" columnid="DT_FR"/>
      <BindItem id="item1" compid="divSearch.form.calDT_TO" propid="value" datasetid="dsSearch" columnid="DT_TO"/>
      <BindItem id="item2" compid="divSearch.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item3" compid="divSearch.form.cboCD_VATPROOF" propid="value" datasetid="dsSearch" columnid="CD_VATPROOF"/>
      <BindItem id="item4" compid="divSearch.form.cboYN_SLIPAPPR" propid="value" datasetid="dsSearch" columnid="YN_SLIPAPPR"/>
      <BindItem id="item5" compid="divSearch.form.ccfCD_VENDOR.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_VENDOR"/>
      <BindItem id="item6" compid="divSearch.form.cboTY_STATUS" propid="value" datasetid="dsSearch" columnid="TY_STATUS"/>
      <BindItem id="item7" compid="divSearch.form.cboTY_GUBUN" propid="value" datasetid="dsSearch" columnid="TY_GUBUN"/>
    </Bind>
  </Form>
</FDL>
