<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="New Form" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="staYR_WORK" taborder="0" text="기준년도" left="0.0" top="10.0" width="92.0" height="24.0" textAlign="center" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYR_WORK" taborder="1" left="staYR_WORK:0.0" top="10.0" width="60" height="24.0" url="cmm::cmmCalYY.xfdl"/>
              <Static id="staNO_SEQ" taborder="0" text="대여차수" left="ctclYR_WORK:0.0" top="10.0" width="92.0" height="24.0" textAlign="center" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfNO_SEQ" CodeFindName="DWX_CFWOINTLND_01" CDTextWidth="40" taborder="0" left="staNO_SEQ:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staYM_WORK" taborder="0" text="기성년월" left="ccfNO_SEQ:0.0" top="10.0" width="92.0" height="24.0" textAlign="center" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYM_WORK" taborder="1" left="staYM_WORK:0.0" top="10.0" width="80" height="24.0" url="cmm::cmmCalMM.xfdl" enable="false"/>
              <Static id="staCD_PRGSSTATS" taborder="0" text="진행상태" left="ctclYM_WORK:0.0" top="10.0" width="92.0" height="24.0" textAlign="center" cssclass="sta_WF_SchLabel"/>
              <Combo id="ccboCD_PRGSSTATS" taborder="1" left="staCD_PRGSSTATS:0.0" top="10.0" width="80" height="24.0" innerdataset="dsCD_PRGSSTATS" codecolumn="CD_CODE" datacolumn="DS_CODE"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	this.fnSetCombo();
	
	var today = this.gfnGetDate();
	this.dsSearch.setColumn(0, "YR_WORK", today.substr(0,4));

	this.btnHqCnf.set_enable(false);
	this.btnHqCnfCnc.set_enable(false);
	this.btnWointLndEval.set_enable(false);

};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnHqCnf = this.gfnFormButtonAdd("btnHqCnf", "fnHqCnf");
	this.btnHqCnfCnc = this.gfnFormButtonAdd("btnHqCnfCnc", "fnHqCnfCnc");
	
	this.btnWointLndEval = this.gfnFormButtonAdd("btnWointLndEval", "fnWointLndEval");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {	
	this.ctclYR_WORK = this.divSearch.form.ctclYR_WORK;
	this.ccfNO_SEQ = this.divSearch.form.ccfNO_SEQ;
	this.ctclYM_WORK = this.divSearch.form.ctclYM_WORK;
	this.ccboCD_PRGSSTATS = this.divSearch.form.ccboCD_PRGSSTATS;
	
	this.ccfNO_SEQ.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfNO_SEQ.AfterCDTextChanged = "codefind_AfterCDTextChanged";

	this.dxGrid = this.divData.form.objGrid;
	
	this.dxGrid.addEventHandler("onselectchanged", this.fnGrid_onselectchanged, this);
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DW", "DWB_WOINTLNDEVALCURST", "DS_SITE", "GR_TREE");
//	this.gfnGridInit(this.dxGrid, this.dsList, "DW", "DWB_WOINTLNDEVALCURST");

	var colChk = this.dxGrid.getBindCellIndex("body", "CHK");
	var displaytype = this.dxGrid.getCellProperty("body", colChk, "displaytype");
	displaytype = "expr:" + displaytype.replace("expr:","").replace("'checkboxcontrol'", "YN_CHKVIEW=='Y'?'checkboxcontrol':'none'");
	this.dxGrid.setCellProperty("body", colChk, "displaytype", displaytype);
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("TY_WRK", "string");
	this.dsSelect.addColumn("YR_WORK", "string");
	this.dsSelect.addColumn("NO_SEQ", "string");
	this.dsSelect.addColumn("YM_WORK", "string");
	this.dsSelect.addColumn("CD_PRGSSTATS", "string");
	
	this.dsExecute = new Dataset();
	this.dsExecute.addColumn("TY_WRK", "string");
	this.dsExecute.addColumn("ID_USER", "string");
	this.dsExecute.addColumn("YR_WORK", "string");
	this.dsExecute.addColumn("NO_SEQ", "string");
	this.dsExecute.addColumn("CD_SITE", "string");
	this.dsExecute.addColumn("YM_WORK", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	var yr_work = this.dsSearch.getColumn(0, "YR_WORK");
	var ym_work = this.dsSearch.getColumn(0, "YM_WORK");
	
	this.dsSelect.setColumn(0, "TY_WRK", "Q");
	this.dsSelect.setColumn(0, "YR_WORK", yr_work.substr(0,4));
	this.dsSelect.setColumn(0, "NO_SEQ", this.dsSearch.getColumn(0, "NO_SEQ"));
	this.dsSelect.setColumn(0, "YM_WORK", ym_work.substr(0,6));
	this.dsSelect.setColumn(0, "CD_PRGSSTATS", this.dsSearch.getColumn(0, "CD_PRGSSTATS"));

	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

// 확장 버튼 진행
this.fnExecute = function(ty_wrk){

	var yr_work = this.dsSearch.getColumn(0, "YR_WORK");
	var ym_work = this.dsSearch.getColumn(0, "YM_WORK");
	
	for(var i = 0 ; i < this.dsList.rowcount; i++)
	{
		if(this.dsList.getColumn(i, "CHK") == "Y")
		{
			var nrow = this.dsExecute.addRow();
			this.dsExecute.setColumn(nrow, "TY_WRK", ty_wrk);
			this.dsExecute.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
			this.dsExecute.setColumn(nrow, "YR_WORK", yr_work.substr(0,4));
			this.dsExecute.setColumn(nrow, "NO_SEQ", this.dsSearch.getColumn(0, "NO_SEQ"));
			this.dsExecute.setColumn(nrow, "CD_SITE", this.dsList.getColumn(i, "CD_SITE"));
			this.dsExecute.setColumn(nrow, "YM_WORK", ym_work.substr(0,6));
		}
	}
	
	if (this.dsExecute.rowcount == 0) return;
			
	var strSvcId    = "execute";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "execute=dsExecute";
	var outData     = "";
	var strArg      = ty_wrk;
	var callBackFnc = "fnCallback";

	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc);   // 통신방법 정의 [생략가능]

}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "YR_WORK"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.ctclYR_WORK.form.TextBox.setFocus();
		}
		this.gfnAlert("기준년도를 입력하세요.", "fnVaidateCallback");
	}else if (this.gfnIsNull(this.dsSearch.getColumn(0, "NO_SEQ"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.ccfNO_SEQ.form.TextBox.setFocus();
		}
		this.gfnAlert("대여차수를 입력하세요.", "fnVaidateCallback");
	}else if (this.gfnIsNull(this.dsSearch.getColumn(0, "YM_WORK"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.ctclYM_WORK.form.TextBox.setFocus();
		}
		this.gfnAlert("기성년월를 입력하세요.", "fnVaidateCallback");
	}
	
	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg, args)
{
	if (svcID == "select") 
	{
		this.gfnGridAfterSelect(this.dxGrid);
		
		this.btnHqCnf.set_enable(false);
		this.btnHqCnfCnc.set_enable(false);
	}
	else if(svcID == "combo") 
	{
		if(errorCode == 0)
		{
			this.divSearch.form.ccboCD_PRGSSTATS.set_index(0);
		}
	}
	else if(svcID == "execute")
	{
		if (errorCode == 0) {
			if(args == "HQCNF")	
			{
				this.gfnAlert("본사확인 정상 처리되었습니다.");
				this.FormBtns.Select.click();
			}
			else if(args == "HQCNFCNC")
			{
				this.gfnAlert("본사확인취소 정상 처리되었습니다.");
				this.FormBtns.Select.click();
			}
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if (id == "ccfNO_SEQ") {
		if(this.gfnIsNull(this.dsSearch.getColumn(0,"YR_WORK")))
		{
			this.gfnAlert("기준년도를 입력해주십시오.");
			return false;
		}
		
		dsUserParam.setColumn(nrow, "YR_WORK", this.dsSearch.getColumn(0, "YR_WORK")); 
	}
	return true;
}

this.codefind_AfterCDTextChanged = function(id, codeFindData) {
	var arr = codeFindData;
	
	if(id == "ccfNO_SEQ")
	{
		this.dsSearch.setColumn(0, "YM_WORK","");
		
		if(arr.length > 0)
		{
			this.dsSearch.setColumn(0, "YM_WORK", arr[0]["YM_WORK"]);
		}
	}
}
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 this.fnGrid_onselectchanged = function(obj:nexacro.Grid, e:nexacro.GridSelectEventInfo)
{
	if(this.dsList.getColumn(e.row, "BTN_HQCNF") == "Y")
	{
		this.btnHqCnf.set_enable(true);
	}
	else
	{
		this.btnHqCnf.set_enable(false);
	}
	
	if(this.dsList.getColumn(e.row, "BTN_HQCNFCNC") == "Y")
	{
		this.btnHqCnfCnc.set_enable(true);
	}
	else
	{
		this.btnHqCnfCnc.set_enable(false);
	}
	
	if(this.dsList.getColumn(e.row, "BTN_WOINTLNDEVAL") == "Y")
	{
		this.btnWointLndEval.set_enable(true);
	}
	else
	{
		this.btnWointLndEval.set_enable(false);
	}
}

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};

// 조회값이 변경되었을 때. (기준년도 변경 관련되어 만든 함수)
this.dsSearch_oncolumnchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.columnid == "YR_WORK")
	{
		if(e.oldvalue != e.newvalue)
		{
			this.dsSearch.setColumn(0, "NO_SEQ","");
			this.divSearch.form.ccfNO_SEQ.form.DSTextBox.set_value("");
			this.dsSearch.setColumn(0, "YM_WORK","");
		}
	}
};

this.fnSetCombo = function()
{
	this.dsCombo = new Dataset();
	this.dsCombo.addColumn("CD_SYSTEM", "string");
	this.dsCombo.addColumn("CD_TYPE", "string");
	this.dsCombo.addColumn("YN_USE", "string");
	this.dsCombo.addColumn("YN_ALL", "string");
	
	this.dsCombo.addRow();
	this.dsCombo.setColumn(0, "CD_SYSTEM", "DW");
	this.dsCombo.setColumn(0, "CD_TYPE", "35");
	this.dsCombo.setColumn(0, "YN_USE", "Y");
	this.dsCombo.setColumn(0, "YN_ALL", "Y");
	
	var strSvcId    = "combo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "combo=dsCombo";
	var outData     = "dsCD_PRGSSTATS=combo0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

// 아래부터 확장버튼.
this.fnHqCnf = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	this.fnExecute("HQCNF");
}

this.fnHqCnfCnc = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	this.fnExecute("HQCNFCNC");
}

this.fnWointLndEval = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if(this.dsList.rowcount < 1 || this.dsList.rowposition < 0) return;
	
	var row = this.dsList.rowposition;
	
	var param = {};
	param.CD_SITE = this.dsList.getColumn(row, "CD_SITE");
	param.DS_SITE = this.dsList.getColumn(row, "DS_SITE");
	param.YR_WORK = this.dsSearch.getColumn(0, "YR_WORK");
	param.NO_SEQ = this.dsSearch.getColumn(0, "NO_SEQ");
	param.DT_REQPERD = this.divSearch.form.ccfNO_SEQ.form.DSTextBox.text;
	param.YM_WORK = this.dsSearch.getColumn(0, "YM_WORK");
	param.YN_WOINTLNDEVAL = "Y";
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DWB_WOINTLNDEVAL", "", param);
}
]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DWBPR_WOINTLNDEVALCURST_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">execute</Col>
            <Col id="SP">DWBPR_WOINTLNDEVAL_EXECUTE</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo</Col>
            <Col id="SP">DZXPR_COMBO_COMMON_SELECT_01</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged" oncolumnchanged="dsSearch_oncolumnchanged">
        <ColumnInfo>
          <Column id="YR_WORK" type="STRING" size="256"/>
          <Column id="NO_SEQ" type="STRING" size="256"/>
          <Column id="YM_WORK" type="STRING" size="256"/>
          <Column id="CD_PRGSSTATS" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsCD_PRGSSTATS">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ctclYR_WORK.form.TextBox" propid="value" datasetid="dsSearch" columnid="YR_WORK"/>
      <BindItem id="item1" compid="divSearch.form.ccfNO_SEQ.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="NO_SEQ"/>
      <BindItem id="item2" compid="divSearch.form.ctclYM_WORK.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_WORK"/>
      <BindItem id="item3" compid="divSearch.form.ccboCD_PRGSSTATS" propid="value" datasetid="dsSearch" columnid="CD_PRGSSTATS"/>
    </Bind>
  </Form>
</FDL>
