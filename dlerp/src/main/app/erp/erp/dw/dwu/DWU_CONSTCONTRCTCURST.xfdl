<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="공사계약현황" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="staCD_SITE" taborder="0" text="현장코드" left="0.0" top="10.0" width="92.0" height="24.0" textDecoration="none" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_SITE" CodeFindName="DZX_CFSITE" CDTextWidth="80" taborder="1" left="staCD_SITE:0.0" top="10.0" width="150" height="24.0" FitToContents="true" AutoSet="false" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staCD_CONST_FIELD" taborder="2" text="공사부문" left="ccfCD_SITE:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Combo id="ccboCD_CONST_FIELD" taborder="3" left="staCD_CONST_FIELD:0.0" top="10.0" width="100" height="24.0" innerdataset="dsCD_CONST_FIELD" codecolumn="CD_CODE" datacolumn="DS_CODE"/>
              <Static id="staCD_CONST_TYPE" taborder="4" text="공사종류" left="ccboCD_CONST_FIELD:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Combo id="ccboCD_CONST_TYPE" taborder="5" left="staCD_CONST_TYPE:0.0" top="10.0" width="100" height="24.0" innerdataset="dsCD_CONST_TYPE" codecolumn="CD_CODE" datacolumn="DS_CODE"/>
              <Static id="staDIV_CONTRCT" taborder="6" text="수주구분" left="ccboCD_CONST_TYPE:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Combo id="ccboDIV_CONTRCT" taborder="7" left="staDIV_CONTRCT:0.0" top="10.0" width="110" height="24.0" innerdataset="dsDIV_CONTRCT" codecolumn="CD_CODE" datacolumn="DS_CODE"/>
              <CheckBox id="cchkALL" taborder="8" text="전체분" left="ccboDIV_CONTRCT:0.0" top="10.0" width="64" height="24.0" value="true" onchanged="divSearch_cchkALL_onchanged"/>
              <CheckBox id="cchkOUR" taborder="9" text="당사분" left="cchkALL:0.0" top="10.0" width="64" height="24.0" value="true" onchanged="divSearch_cchkOUR_onchanged"/>
              <CheckBox id="cchkOTH" taborder="10" text="타사분" left="cchkOUR:0.0" top="10.0" width="64" height="24.0" onchanged="divSearch_cchkOTH_onchanged"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();

	this.fnSetCombo();
	
	this.divSearch_cchkALL_onchanged(this.divSearch.form.cchkALL, {postvalue:this.divSearch.form.cchkALL.value});
	this.divSearch_cchkOUR_onchanged(this.divSearch.form.cchkOUR, {postvalue:this.divSearch.form.cchkOUR.value});
	this.divSearch_cchkOTH_onchanged(this.divSearch.form.cchkOTH, {postvalue:this.divSearch.form.cchkOTH.value});
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnConstContrct = this.gfnFormButtonAdd("btnConstContrct", "fnConstContrct");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {	
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DW", "DWU_CONSTCONTRCTCURST");
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("TY_WRK", "string");
	this.dsSelect.addColumn("CD_FIELD", "string");
	this.dsSelect.addColumn("NO_CONTRCT", "string");
	this.dsSelect.addColumn("NO_POLY_CONST_CONTRCT", "string");
	this.dsSelect.addColumn("CD_CONST_FIELD", "string");
	this.dsSelect.addColumn("CD_CONST_TYPE", "string");
	this.dsSelect.addColumn("DIV_CONTRCT", "string");
	
	this.dsCombo = new Dataset();
	this.dsCombo.addColumn("CD_SYSTEM", "string");
	this.dsCombo.addColumn("CD_TYPE", "string");
	this.dsCombo.addColumn("YN_USE", "string");
	this.dsCombo.addColumn("YN_ALL", "string");

}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "TY_WRK", "Q");
	this.dsSelect.setColumn(0, "CD_FIELD", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsSelect.setColumn(0, "NO_CONTRCT", "");
	this.dsSelect.setColumn(0, "NO_POLY_CONST_CONTRCT", "");
	this.dsSelect.setColumn(0, "CD_CONST_FIELD", this.dsSearch.getColumn(0, "CD_CONST_FIELD"));
	this.dsSelect.setColumn(0, "CD_CONST_TYPE", this.dsSearch.getColumn(0, "CD_CONST_TYPE"));
	this.dsSelect.setColumn(0, "DIV_CONTRCT", this.dsSearch.getColumn(0, "DIV_CONTRCT"));	
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	//var nrow = this.gfnGridAdd(this.dxGrid); // top (default), bottom, current
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	//this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;
	
// 	if (this.gfnIsNull(this.dsSearch.getColumn(0,"CD_SITE"))) {
// 		validate = false;
// 		// Alert후 실행할 처리
// 		this.fnVaidateCallback = function() {
// 			this.divSearch.form.ccfCD_SITE.form.CDTextBox.setFocus();
// 		}
// 		this.gfnAlert("현장코드를 입력하세요.", "fnVaidateCallback");
// 	}
	
	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};

this.fnSetCombo = function()
{
	this.dsCombo.clearData();
	
	this.dsCombo.addRow();
	this.dsCombo.setColumn(0, "CD_SYSTEM", "DO");
	this.dsCombo.setColumn(0, "CD_TYPE", "31");
	this.dsCombo.setColumn(0, "YN_USE", "Y");
	this.dsCombo.setColumn(0, "YN_ALL", "Y");
	
	this.dsCombo.addRow();
	this.dsCombo.setColumn(1, "CD_SYSTEM", "DO");
	this.dsCombo.setColumn(1, "CD_TYPE", "32");
	this.dsCombo.setColumn(1, "YN_USE", "Y");
	this.dsCombo.setColumn(1, "YN_ALL", "Y");
	
	this.dsCombo.addRow();
	this.dsCombo.setColumn(2, "CD_SYSTEM", "DO");
	this.dsCombo.setColumn(2, "CD_TYPE", "82");
	this.dsCombo.setColumn(2, "YN_USE", "Y");
	this.dsCombo.setColumn(2, "YN_ALL", "Y");
		
	var strSvcId    = "combo";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "combo=dsCombo";
	var outData     = "dsCD_CONST_FIELD=combo0 dsCD_CONST_TYPE=combo1 dsDIV_CONTRCT=combo2";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

this.divSearch_cchkALL_onchanged = function(obj:nexacro.CheckBox,e:nexacro.CheckBoxChangedEventInfo)
{
	var AM_INIT_SUPPLY_index = this.dxGrid.getBindCellIndex("body", "AM_INIT_SUPPLY");
	var AM_INIT_VAT_index = this.dxGrid.getBindCellIndex("body", "AM_INIT_VAT");
	var AM_INIT_TXFR_SUPPLY_index = this.dxGrid.getBindCellIndex("body", "AM_INIT_TXFR_SUPPLY");
	var AM_INIT_CONTRCT_index = this.dxGrid.getBindCellIndex("body", "AM_INIT_CONTRCT");
	var AM_CHNGE_SUPPLY_index = this.dxGrid.getBindCellIndex("body", "AM_CHNGE_SUPPLY");
	var AM_CHNGE_VAT_index = this.dxGrid.getBindCellIndex("body", "AM_CHNGE_VAT");
	var AM_CHNGE_TXFR_SUPPLY_index = this.dxGrid.getBindCellIndex("body", "AM_CHNGE_TXFR_SUPPLY");
	var AM_CHNGE_CONTRCT_index = this.dxGrid.getBindCellIndex("body", "AM_CHNGE_CONTRCT");
	var AM_SUPPLY_index = this.dxGrid.getBindCellIndex("body", "AM_SUPPLY");
	var AM_VAT_index = this.dxGrid.getBindCellIndex("body", "AM_VAT");
	var AM_TXFR_SUPPLY_index = this.dxGrid.getBindCellIndex("body", "AM_TXFR_SUPPLY");
	var AM_CONTRCT_index = this.dxGrid.getBindCellIndex("body", "AM_CONTRCT");
	
	var size = 0;
	if(obj.isChecked())
	{
		size = 100;
	}
	
	this.dxGrid.setRealColSize("body", AM_INIT_SUPPLY_index, size);
	this.dxGrid.setRealColSize("body", AM_INIT_VAT_index, size);
	this.dxGrid.setRealColSize("body", AM_INIT_TXFR_SUPPLY_index, size);
	this.dxGrid.setRealColSize("body", AM_INIT_CONTRCT_index, size);
	this.dxGrid.setRealColSize("body", AM_CHNGE_SUPPLY_index, size);
	this.dxGrid.setRealColSize("body", AM_CHNGE_VAT_index, size);
	this.dxGrid.setRealColSize("body", AM_CHNGE_TXFR_SUPPLY_index, size);
	this.dxGrid.setRealColSize("body", AM_CHNGE_CONTRCT_index, size);
	this.dxGrid.setRealColSize("body", AM_SUPPLY_index, size);
	this.dxGrid.setRealColSize("body", AM_VAT_index, size);
	this.dxGrid.setRealColSize("body", AM_TXFR_SUPPLY_index, size);
	this.dxGrid.setRealColSize("body", AM_CONTRCT_index, size);
};

this.divSearch_cchkOUR_onchanged = function(obj:nexacro.CheckBox,e:nexacro.CheckBoxChangedEventInfo)
{
	var AM_INIT_SUPPLY_OUR_index = this.dxGrid.getBindCellIndex("body", "AM_INIT_SUPPLY_OUR");
	var AM_INIT_VAT_OUR_index = this.dxGrid.getBindCellIndex("body", "AM_INIT_VAT_OUR");
	var AM_INIT_TXFR_SUPPLY_OUR_index = this.dxGrid.getBindCellIndex("body", "AM_INIT_TXFR_SUPPLY_OUR");
	var AM_INIT_CONTRCT_OUR_index = this.dxGrid.getBindCellIndex("body", "AM_INIT_CONTRCT_OUR");
	var AM_CHNGE_SUPPLY_OUR_index = this.dxGrid.getBindCellIndex("body", "AM_CHNGE_SUPPLY_OUR");
	var AM_CHNGE_VAT_OUR_index = this.dxGrid.getBindCellIndex("body", "AM_CHNGE_VAT_OUR");
	var AM_CHNGE_TXFR_SUPPLY_OUR_index = this.dxGrid.getBindCellIndex("body", "AM_CHNGE_TXFR_SUPPLY_OUR");
	var AM_CHNGE_CONTRCT_OUR_index = this.dxGrid.getBindCellIndex("body", "AM_CHNGE_CONTRCT_OUR");
	var AM_SUPPLY_OUR_index = this.dxGrid.getBindCellIndex("body", "AM_SUPPLY_OUR");
	var AM_VAT_OUR_index = this.dxGrid.getBindCellIndex("body", "AM_VAT_OUR");
	var AM_TXFR_SUPPLY_OUR_index = this.dxGrid.getBindCellIndex("body", "AM_TXFR_SUPPLY_OUR");
	var AM_CONTRCT_OUR_index = this.dxGrid.getBindCellIndex("body", "AM_CONTRCT_OUR");
	
	var size = 0;
	if(obj.isChecked())
	{
		size = 100;
	}
	
	this.dxGrid.setRealColSize("body", AM_INIT_SUPPLY_OUR_index, size);
	this.dxGrid.setRealColSize("body", AM_INIT_VAT_OUR_index, size);
	this.dxGrid.setRealColSize("body", AM_INIT_TXFR_SUPPLY_OUR_index, size);
	this.dxGrid.setRealColSize("body", AM_INIT_CONTRCT_OUR_index, size);
	this.dxGrid.setRealColSize("body", AM_CHNGE_SUPPLY_OUR_index, size);
	this.dxGrid.setRealColSize("body", AM_CHNGE_VAT_OUR_index, size);
	this.dxGrid.setRealColSize("body", AM_CHNGE_TXFR_SUPPLY_OUR_index, size);
	this.dxGrid.setRealColSize("body", AM_CHNGE_CONTRCT_OUR_index, size);
	this.dxGrid.setRealColSize("body", AM_SUPPLY_OUR_index, size);
	this.dxGrid.setRealColSize("body", AM_VAT_OUR_index, size);
	this.dxGrid.setRealColSize("body", AM_TXFR_SUPPLY_OUR_index, size);
	this.dxGrid.setRealColSize("body", AM_CONTRCT_OUR_index, size);
};

this.divSearch_cchkOTH_onchanged = function(obj:nexacro.CheckBox,e:nexacro.CheckBoxChangedEventInfo)
{
	var AM_INIT_SUPPLY_OTH_index = this.dxGrid.getBindCellIndex("body", "AM_INIT_SUPPLY_OTH");
	var AM_INIT_VAT_OTH_index = this.dxGrid.getBindCellIndex("body", "AM_INIT_VAT_OTH");
	var AM_INIT_TXFR_SUPPLY_OTH_index = this.dxGrid.getBindCellIndex("body", "AM_INIT_TXFR_SUPPLY_OTH");
	var AM_INIT_CONTRCT_OTH_index = this.dxGrid.getBindCellIndex("body", "AM_INIT_CONTRCT_OTH");
	var AM_CHNGE_SUPPLY_OTH_index = this.dxGrid.getBindCellIndex("body", "AM_CHNGE_SUPPLY_OTH");
	var AM_CHNGE_VAT_OTH_index = this.dxGrid.getBindCellIndex("body", "AM_CHNGE_VAT_OTH");
	var AM_CHNGE_TXFR_SUPPLY_OTH_index = this.dxGrid.getBindCellIndex("body", "AM_CHNGE_TXFR_SUPPLY_OTH");
	var AM_CHNGE_CONTRCT_OTH_index = this.dxGrid.getBindCellIndex("body", "AM_CHNGE_CONTRCT_OTH");
	var AM_SUPPLY_OTH_index = this.dxGrid.getBindCellIndex("body", "AM_SUPPLY_OTH");
	var AM_VAT_OTH_index = this.dxGrid.getBindCellIndex("body", "AM_VAT_OTH");
	var AM_TXFR_SUPPLY_OTH_index = this.dxGrid.getBindCellIndex("body", "AM_TXFR_SUPPLY_OTH");
	var AM_CONTRCT_OTH_index = this.dxGrid.getBindCellIndex("body", "AM_CONTRCT_OTH");
	
	var size = 0;
	if(obj.isChecked())
	{
		size = 100;
	}
	
	this.dxGrid.setRealColSize("body", AM_INIT_SUPPLY_OTH_index, size);
	this.dxGrid.setRealColSize("body", AM_INIT_VAT_OTH_index, size);
	this.dxGrid.setRealColSize("body", AM_INIT_TXFR_SUPPLY_OTH_index, size);
	this.dxGrid.setRealColSize("body", AM_INIT_CONTRCT_OTH_index, size);
	this.dxGrid.setRealColSize("body", AM_CHNGE_SUPPLY_OTH_index, size);
	this.dxGrid.setRealColSize("body", AM_CHNGE_VAT_OTH_index, size);
	this.dxGrid.setRealColSize("body", AM_CHNGE_TXFR_SUPPLY_OTH_index, size);
	this.dxGrid.setRealColSize("body", AM_CHNGE_CONTRCT_OTH_index, size);
	this.dxGrid.setRealColSize("body", AM_SUPPLY_OTH_index, size);
	this.dxGrid.setRealColSize("body", AM_VAT_OTH_index, size);
	this.dxGrid.setRealColSize("body", AM_TXFR_SUPPLY_OTH_index, size);
	this.dxGrid.setRealColSize("body", AM_CONTRCT_OTH_index, size);
};


this.fnConstContrct = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	//if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	var param = {};

	if(this.dsList.rowposition > -1){
		param.CD_SITE = this.dsList.getColumn(this.dsList.rowposition, "CD_FIELD");
		param.DS_SITE = this.dsList.getColumn(this.dsList.rowposition, "DS_FIELD");
		
	}
	
	// 화면 오픈. 
	// CD_MODULE은 보통 같은 모듈에서 호출하는 경우가 많으니 this.FormInfo.CD_MODULE 사용
	// 타 모듈 화면 호출시 지정할것.
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DWU_CONSTCONTRCT", "", param);
	
}
]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DOZPR_CONSTCONTRCTCURST_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo</Col>
            <Col id="SP">DZXPR_COMBO_COMMON_SELECT_01</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="CD_CONST_FIELD" type="STRING" size="256"/>
          <Column id="CD_CONST_TYPE" type="STRING" size="256"/>
          <Column id="DIV_CONTRCT" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CONST_FIELD"/>
            <Col id="CD_CONST_TYPE"/>
            <Col id="DIV_CONTRCT"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsCD_CONST_FIELD">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsCD_CONST_TYPE">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsDIV_CONTRCT">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item1" compid="divSearch.form.ccboCD_CONST_FIELD" propid="value" datasetid="dsSearch" columnid="CD_CONST_FIELD"/>
      <BindItem id="item2" compid="divSearch.form.ccboCD_CONST_TYPE" propid="value" datasetid="dsSearch" columnid="CD_CONST_TYPE"/>
      <BindItem id="item3" compid="divSearch.form.ccboDIV_CONTRCT" propid="value" datasetid="dsSearch" columnid="DIV_CONTRCT"/>
    </Bind>
  </Form>
</FDL>
