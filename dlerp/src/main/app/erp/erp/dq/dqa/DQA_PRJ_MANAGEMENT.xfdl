<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="800" height="380" maxwidth="820" maxheight="420" titletext="부서등록(프로젝트 목록)" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="staCD_PROJECT" taborder="0" text="프로젝트코드" left="0.0" top="10.0" width="118.0" height="24.0" textDecoration="none" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_PROJECT" CDTextWidth="80" taborder="1" left="staCD_PROJECT:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" text="" enable="true"/>
              <Static id="staCD_CORP" taborder="5" text="부서구분" left="ccfCD_PROJECT:0.0" top="10.0" width="118.0" height="24.0" textDecoration="none" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_CORP" CDTextWidth="80" taborder="4" left="staCD_CORP:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0" fillareatype="none"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	 if(!this.gfnIsNull(this.getOwnerFrame().CD_PROJECT) && !this.gfnIsNull(this.getOwnerFrame().DS_PROJECT)) {
		this.dsSearch.setColumn(0, "CD_PROJECT", this.getOwnerFrame().CD_PROJECT);
		this.dsSearch.setColumn(0, "DS_PROJECT", this.getOwnerFrame().DS_PROJECT);
		
		this.FormBtns.Select.click();
		
		}
	
};

this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	  
	this.ccfCD_PROJECT = this.divSearch.form.ccfCD_PROJECT;
	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;
    this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.divSearch.form.ccfCD_CORP.CodeFindName = "CF_CODE_DQ_S11";	// 부서구분
	this.divSearch.form.ccfCD_PROJECT.CodeFindName = "DQX_PROJECT";	// 프로젝트코드
	
	this.gfnGridInit(this.dxGrid, this.dsList, "DQ", "DQA_PRJ_MANAGEMENT");
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_PROJECT", "string");
	
	this.dsSave = new Dataset();
	this.dsSave.addColumn("CD_PROJECT", "string");
	this.dsSave.addColumn("CD_TYPE", "string");
	this.dsSave.addColumn("CD_CODE", "string");
	this.dsSave.addColumn("CD_SITE", "string");
	this.dsSave.addColumn("DS_SITE", "string");
	this.dsSave.addColumn("AUTH_ID_USER", "string");
	
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
this.fnSelect = function() {
	//if (!this.fnSelectValidation()) return;
		
	this.gfnGridBeforeSelect(this.dxGrid);

	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "CD_PROJECT", this.dsSearch.getColumn(0, "CD_PROJECT"));
	
			
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect"; 
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
			
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

this.fnAdd = function() {
}

this.fnDel = function() {

}

this.fnSave = function() {

    if (!this.gfnGridValidate(this.dxGrid)) return;

	this.dxGrid.updateToDataset();
	
	this.dsSave.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			
			case "I":
			case "U":
			case "D":
			
				var nrow = this.dsSave.addRow();
				this.dsSave.setColumn(nrow, "CD_PROJECT", this.dsSearch.getColumn(0, "CD_PROJECT"));
				this.dsSave.setColumn(nrow, "CD_TYPE", this.dsSearch.getColumn(0, "CD_TYPE"));
				this.dsSave.setColumn(nrow, "CD_CODE", this.dsList.getColumn(i, "CD_CODE"));
				this.dsSave.setColumn(nrow, "CD_SITE", this.dsList.getColumn(i, "CD_SITE"));
				this.dsSave.setColumn(nrow, "DS_SITE", this.dsList.getColumn(i, "DS_SITE"));
				this.dsSave.setColumn(nrow, "AUTH_ID_USER", this.AuthClient.ID_USER);
				break;
		}
	}
	
	if (this.dsSave.rowcount == 0) return;
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

this.fnPrint = function() {

}

/************************************************************************
 * Validate
 ************************************************************************/

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
this.fnCallback = function(svcID, errorCode, errorMsg) {
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

/************************************************************************
 * 확장버튼 이벤트
 ************************************************************************/

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DQAPR_PRJ_MANAGEMENT_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DQAPR_PRJ_MANAGEMENT_SAVE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch">
        <ColumnInfo>
          <Column id="CD_PROJECT" type="STRING" size="256"/>
          <Column id="DS_PROJECT" type="STRING" size="256"/>
          <Column id="CD_TYPE" type="STRING" size="256"/>
          <Column id="DS_TYPE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_PROJECT.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_PROJECT"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_PROJECT.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_PROJECT"/>
      <BindItem id="item2" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_TYPE"/>
      <BindItem id="item3" compid="divSearch.form.ccfCD_CORP.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_TYPE"/>
    </Bind>
  </Form>
</FDL>
