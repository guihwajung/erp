<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="납부일수 등록" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="sta00" taborder="0" text="현장/부서 코드" left="0.0" top="10.0" width="144.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_SITE" CodeFindName="DZX_CFDEPTCORP" CDTextWidth="80" taborder="1" left="sta00:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staYM_WORK" taborder="2" text="근무년월" left="ccfCD_SITE:0.0" top="10.0" width="144.0" height="24.0" onclick="divSearch_staYM_WORK_onclick" cssclass="sta_WF_SchLabelE"/>
              <Div id="tclYM_WORK" taborder="3" left="staYM_WORK:0.0" top="10.0" width="90" height="24.0" url="cmm::cmmCalMM.xfdl"/>
              <Static id="staTY_CHAIYONG" taborder="4" text="구분코드" left="tclYM_WORK:0.0" top="10.0" width="144.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Combo id="cboCD_GUBUN" taborder="5" left="staTY_CHAIYONG:0.0" top="10.0" width="190" height="24.0" innerdataset="dsCD_GUBUN" datacolumn="DS_CODE" codecolumn="CD_CODE" value="" index="0"/>
              <Static id="sta01" taborder="6" text="협력업체코드" left="cboCD_GUBUN:0.0" top="10.0" width="144.0" height="24.0" textDecoration="none" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_VENDOR" CDTextWidth="80" taborder="7" left="sta01:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();	
	
	this.dsSearch.setColumn(0, "YM_WORK",  this.gfnGetDate().substr(0,6));	// 년월 현재월로 셋팅
	this.divSearch.form.cboCD_GUBUN.set_index(0);
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
	//this.FormBtns.Select.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_SITE = this.divSearch.form.ccfCD_SITE;
	this.tclYM_WORK = this.divSearch.form.tclYM_WORK;
	this.cboCD_GUBUN = this.divSearch.form.cboCD_GUBUN;
	this.ccfCD_VENDOR = this.divSearch.form.ccfCD_VENDOR;
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {	
	this.ccfCD_VENDOR.CodeFindName = "DSX_CFVENDOR";
	
	this.ccfCD_SITE.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.ccfCD_SITE.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_VENDOR.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DS", "DSG_SETRETIRE");

	// 셀 변경 후 이벤트
	//this.dxGrid.AfterEdit = "fnGrid_AfterEdit";
	
	// 그리드 코드파인드 설정
	//this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
	
	// 전체체크박스 체크/해제 이벤트
	//this.dxGrid.AfterAllCheck = "fnGrid_AfterAllCheck";
	
	// BUTTON, BUTTON-IN 처리
	//this.dxGrid.ExpandUp = "fnGrid_ExpandUp";
	
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("CD_SITE", "string");
	this.dsSelect.addColumn("YM_WORK", "string");
	this.dsSelect.addColumn("CD_GUBUN", "string");
	this.dsSelect.addColumn("CD_VENDOR", "string");

	this.dsSave = new Dataset();
	this.dsSave.addColumn("CD_CORP", "string");
	this.dsSave.addColumn("CD_SITE", "string");
	this.dsSave.addColumn("CD_VENDOR", "string");
	this.dsSave.addColumn("YM_WORK", "string");
	this.dsSave.addColumn("NO_ID", "string");
	this.dsSave.addColumn("CT_WORK", "int");
	this.dsSave.addColumn("ID_USER", "string");

}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;

	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "CD_CORP", "01");
	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	this.dsSelect.setColumn(0, "YM_WORK", this.dsSearch.getColumn(0, "YM_WORK").substr(0,6));
	this.dsSelect.setColumn(0, "CD_GUBUN", this.dsSearch.getColumn(0, "CD_GUBUN"));
	this.dsSelect.setColumn(0, "CD_VENDOR", this.dsSearch.getColumn(0, "CD_VENDOR"));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	var nrow = this.gfnGridAdd(this.dxGrid); // top (default), bottom, current
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	// 그리드 필수항목 체크``
	if (!this.gfnGridValidate(this.dxGrid)) return;	
	
	this.dxGrid.updateToDataset();
	
	this.dsSave.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
			case "U":
			case "D":
				var nrow = this.dsSave.addRow();				
				this.dsSave.setColumn(nrow, "CD_CORP", "01");
				this.dsSave.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
				this.dsSave.setColumn(nrow, "CD_VENDOR", this.dsList.getColumn(i, "CD_VENDOR"));
				this.dsSave.setColumn(nrow, "YM_WORK", this.dsSearch.getColumn(0, "YM_WORK").substr(0,6));
				this.dsSave.setColumn(nrow, "NO_ID", this.dsList.getColumn(i, "NO_ID"));
				this.dsSave.setColumn(nrow, "CT_WORK", this.dsList.getColumn(i, "CT_WORK"));
				this.dsSave.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
				break;						
		}
	}
	
	if (this.dsSave.rowcount == 0) return;
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}


/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {	
	var validate = true;
	
	if (this.gfnIsNull(this.dsSearch.getColumn(0,"CD_SITE"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.ccfCD_SITE.form.CDTextBox.setFocus();
		}
		this.gfnAlert("현장코드는 반드시 입력 하셔야 합니다.", "fnVaidateCallback");
	}else if (this.gfnIsNull(this.dsSearch.getColumn(0,"YM_WORK"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.tclYM_WORK.form.TextBox.setFocus();
		}
		this.gfnAlert("근무년월은 반드시 입력 하셔야 합니다.", "fnVaidateCallback");
	}else if (this.gfnIsNull(this.dsSearch.getColumn(0,"CD_GUBUN"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.cboCD_GUBUN.setFocus();			
		}
		this.gfnAlert("구분코드는 반드시 입력 하셔야 합니다.", "fnVaidateCallback");
	}
	
	return validate;
	
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}	
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
//코드파인드의 파라미터 값을 넘겨줄때 사용하는 함수
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	
	if (id == "ccfCD_SITE") {
		dsUserParam.setColumn(nrow, "CD_CORP", this.objApp.gdsUserInfo.getColumn(0, "CD_CORP"));	
	}else if (id == "ccfCD_VENDOR"){
 		if (this.gfnIsNull(this.dsSearch.getColumn(0, "CD_SITE"))) {
 			this.gfnAlert("현장코드를 먼저 입력하세요.");
 			return false;
 		}

		dsUserParam.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	}
	
	return true;
}

this.fnAfterCDTextChanged = function(id, codeFindData) {
	if(id == "ccfCD_SITE") {
		// 현장코드 변경시 초기화
		this.ccfCD_VENDOR.form.fnCodeFindClear();
	}
}

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
		
		if(e.columnid == "CD_GUBUN"){
			if(this.dsSearch.getColumn(0, "CD_GUBUN") == "1"){
				var colCD_VENDOR = this.dxGrid.getBindCellIndex("body", "CD_VENDOR");
				var colDS_VENDOR = this.dxGrid.getBindCellIndex("body", "DS_VENDOR");
				this.dxGrid.setFormatColProperty(colCD_VENDOR,"size",0);
				this.dxGrid.setFormatColProperty(colDS_VENDOR,"size",0);
			}else{
				var colCD_VENDOR = this.dxGrid.getBindCellIndex("body", "CD_VENDOR");
				var colDS_VENDOR = this.dxGrid.getBindCellIndex("body", "DS_VENDOR");
				this.dxGrid.setFormatColProperty(colCD_VENDOR,"size",100);
				this.dxGrid.setFormatColProperty(colDS_VENDOR,"size",100);
			}
		}
	}
};

// 퇴직공제납부근로일수 입력시 자동계산
this.dsList_oncolumnchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.columnid == "CT_WORK"){		// 퇴직공제납부근로일수
		// 퇴직공제 납부근로일수는 월출역일수 보다 클 수 업음 체크(클경우 월출역일수로 변경 처리)
		if(nexacro.toNumber(this.dsList.getColumn(e.row, "CT_WORK"),0) > nexacro.toNumber(this.dsList.getColumn(e.row, "CT_COUNTWORK"),0)){
			this.dsList.setColumn(e.row, "CT_WORK", nexacro.toNumber(this.dsList.getColumn(e.row, "CT_COUNTWORK"),0));
		}
	
		// 제외일수(퇴직공제 납부근로일수 입력시 제외일수 계산 처리(월출역일수-납부근로일수))
		this.dsList.setColumn(e.row, "CT_NOTWORK", nexacro.toNumber(this.dsList.getColumn(e.row, "CT_COUNTWORK"),0) - nexacro.toNumber(this.dsList.getColumn(e.row, "CT_WORK"),0));
	}
};
]]></Script>
    <Objects>
      <Dataset id="dsList" oncolumnchanged="dsList_oncolumnchanged"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DSEPR_RETIRE_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DSEPR_RETIRE_SAVE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="YM_WORK" type="STRING" size="256"/>
          <Column id="CD_GUBUN" type="STRING" size="256"/>
          <Column id="CD_VENDOR" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_SITE"/>
            <Col id="YM_WORK"/>
            <Col id="CD_GUBUN"/>
            <Col id="CD_VENDOR"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsCD_GUBUN">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">1</Col>
            <Col id="DS_CODE">직영근로자</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">2</Col>
            <Col id="DS_CODE">사업주인정승인 업체 근로자</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">3</Col>
            <Col id="DS_CODE">당사관리 협력업체 근로자</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item2" compid="divSearch.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item0" compid="divSearch.form.tclYM_WORK.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_WORK"/>
      <BindItem id="item1" compid="divSearch.form.cboCD_GUBUN" propid="value" datasetid="dsSearch" columnid="CD_GUBUN"/>
      <BindItem id="item3" compid="divSearch.form.ccfCD_VENDOR.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_VENDOR"/>
    </Bind>
  </Form>
</FDL>
