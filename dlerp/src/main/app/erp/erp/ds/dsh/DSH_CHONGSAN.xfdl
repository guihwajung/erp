<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="보험 청산관리" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="sta00" taborder="0" text="현장코드" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_SITE" CodeFindName="DZX_CFSITE" CDTextWidth="80" taborder="1" left="sta00:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staDT_WORK" taborder="2" text="실행공기" left="ccfCD_SITE:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Calendar id="ctclDT_START" taborder="4" left="staDT_WORK:0.0" top="10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" readonly="true"/>
              <Static id="staDT_WORK00" taborder="3" text="~" left="ctclDT_START:0.0" top="10.0" width="30.0" height="24.0" cssclass="sta_WF_AC"/>
              <Calendar id="ctclDT_END" taborder="5" left="staDT_WORK00:0.0" top="10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" readonly="true"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="80" right="0"/>
              <Static id="sta05" taborder="1" text="* 잔공사 금액입력 : 정산시 편성된 잔공사 에상금액을 입력하되 외주비(고용대상) 금액은 잔공사 외주비 총액에서&#13;&#10;&#13;&#10;                           고용보험 사업주인정승인 받은 업체의 잔공사 금액을 제외한 금액을 입력" left="9" top="objGrid:20" width="821" height="50" verticalAlign="top" color="blue"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
	//this.FormBtns.Select.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.BTN_JONGHAP = this.gfnFormButtonAdd("BTN_JONGHAP", "fnJONGHAP");  
	
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_SITE = this.divSearch.form.ccfCD_SITE;
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {	
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList1, "DS", "DSH_CHONGSAN");

	// 셀 수정가능 여부
	this.dxGrid.EnterCell = "fnGrid_EnterCell";
	
	// 셀 변경 후 이벤트
	//this.dxGrid.AfterEdit = "fnGrid_AfterEdit";
	
	// 그리드 코드파인드 설정
	//this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
	
	// 전체체크박스 체크/해제 이벤트
	//this.dxGrid.AfterAllCheck = "fnGrid_AfterAllCheck";
	
	// BUTTON, BUTTON-IN 처리
	//this.dxGrid.ExpandUp = "fnGrid_ExpandUp";
	
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_SITE", "string");

	this.dsSave = new Dataset();
	this.dsSave.addColumn("CD_SITE", "string");
	this.dsSave.addColumn("DT_YEAR", "string");
	this.dsSave.addColumn("AM_JIKWON", "bigdecimal");
	this.dsSave.addColumn("AM_HYENCHE", "bigdecimal");
	this.dsSave.addColumn("AM_ILYONG", "bigdecimal");
	this.dsSave.addColumn("AM_WEIJU", "bigdecimal");
	this.dsSave.addColumn("RT_INJUNG", "bigdecimal");
	this.dsSave.addColumn("RT_NOMU", "bigdecimal");
	this.dsSave.addColumn("AM_SANJE_IMGUM", "bigdecimal");
	this.dsSave.addColumn("RT_SANJE", "bigdecimal");
	this.dsSave.addColumn("AM_SANJE", "bigdecimal");
	this.dsSave.addColumn("AM_GOYONG_IMGUM", "bigdecimal");
	this.dsSave.addColumn("RT_GOYONG", "bigdecimal");
	this.dsSave.addColumn("AM_GOYONG", "bigdecimal");
	this.dsSave.addColumn("AM_SABAECHK_IMGUM", "bigdecimal");
	this.dsSave.addColumn("RT_SABAECHK", "bigdecimal");
	this.dsSave.addColumn("AM_SABAECHK", "bigdecimal");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;

	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0 dsList1=select1";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	var nrow = this.gfnGridAdd(this.dxGrid); // top (default), bottom, current
	
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	// 그리드 필수항목 체크``
	if (!this.gfnGridValidate(this.dxGrid)) return;	
	
	this.dxGrid.updateToDataset();
	
	this.dsSave.clearData();
	
	for (var i = 0; i < this.dsList1.rowcount; i++) {
		var nrow = this.dsSave.addRow();
		
		this.dsSave.setColumn(nrow, "CD_SITE", this.dsSearch.getColumn(0, "CD_SITE"));
		this.dsSave.setColumn(nrow, "DT_YEAR", this.dsList1.getColumn(i, "DT_YEAR"));
		this.dsSave.setColumn(nrow, "AM_JIKWON", this.dsList1.getColumn(i, "AM_JIKWON"));
		this.dsSave.setColumn(nrow, "AM_HYENCHE", this.dsList1.getColumn(i, "AM_HYENCHE"));
		this.dsSave.setColumn(nrow, "AM_ILYONG", this.dsList1.getColumn(i, "AM_ILYONG"));
		this.dsSave.setColumn(nrow, "AM_WEIJU", this.dsList1.getColumn(i, "AM_WEIJU"));
		this.dsSave.setColumn(nrow, "RT_INJUNG", this.dsList1.getColumn(i, "RT_INJUNG"));
		this.dsSave.setColumn(nrow, "RT_NOMU", this.dsList1.getColumn(i, "RT_NOMU"));
		this.dsSave.setColumn(nrow, "AM_SANJE_IMGUM", this.dsList1.getColumn(i, "AM_SANJE_IMGUM"));
		this.dsSave.setColumn(nrow, "RT_SANJE", this.dsList1.getColumn(i, "RT_SANJE"));
		this.dsSave.setColumn(nrow, "AM_SANJE", this.dsList1.getColumn(i, "AM_SANJE"));
		this.dsSave.setColumn(nrow, "AM_GOYONG_IMGUM", this.dsList1.getColumn(i, "AM_GOYONG_IMGUM"));
		this.dsSave.setColumn(nrow, "RT_GOYONG", this.dsList1.getColumn(i, "RT_GOYONG"));
		this.dsSave.setColumn(nrow, "AM_GOYONG", this.dsList1.getColumn(i, "AM_GOYONG"));
		this.dsSave.setColumn(nrow, "AM_SABAECHK_IMGUM", this.dsList1.getColumn(i, "AM_SABAECHK_IMGUM"));
		this.dsSave.setColumn(nrow, "RT_SABAECHK", this.dsList1.getColumn(i, "RT_SABAECHK"));
		this.dsSave.setColumn(nrow, "AM_SABAECHK", this.dsList1.getColumn(i, "AM_SABAECHK"));
	}
	
	if (this.dsSave.rowcount == 0) return;
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}


/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {	
	var validate = true;
	
	if (this.gfnIsNull(this.dsSearch.getColumn(0,"CD_SITE"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.ccfCD_SITE.form.CDTextBox.setFocus();
		}
		this.gfnAlert("현장코드는 반드시 입력 하셔야 합니다.", "fnVaidateCallback");
	}
	
	return validate;
	
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
		
		// 수정이 가능할때는 그리드 컬럼 배경색이 흰색으로 셋팅		
		this.gfnGridColumnColor(this.dxGrid, "AM_JIKWON", "", "DT_YEAR == '잔공사'");
		this.gfnGridColumnColor(this.dxGrid, "AM_HYENCHE", "", "DT_YEAR == '잔공사'");
		this.gfnGridColumnColor(this.dxGrid, "AM_ILYONG", "", "DT_YEAR == '잔공사'");
		this.gfnGridColumnColor(this.dxGrid, "AM_WEIJU", "", "DT_YEAR == '잔공사'");
		
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}	
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
// cell 클릭했을때 이벤트(해당 cell에 대한 이벤트를 건다)
this.fnGrid_EnterCell = function(obj:nexacro.Grid, row, cell) {
	// 수정가능 true, false 처리하려는 컬럼에 대해서만 return 처리할것. 
	var colnm = this.gfnGridGetBindColumnNameByIndex(this.dxGrid, cell);	// 클릭한 cell의 컬럼명
	
	// 클릭했을때 클릭한 cell을 수정 가능 or 불가능 상태로 만든다.
	// YN_DTLS 값이 Y일때만 도급/실행/집행금액 수정가능 상태로 만든다
	if(colnm == "AM_JIKWON" || colnm == "AM_HYENCHE" || colnm == "AM_ILYONG" || colnm == "AM_WEIJU"){
		if(this.dsList1.getColumn(row, "DT_YEAR") == "잔공사") {			
			return true;
		}else{
			return false;
		}
	}			
	
}
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
 
 // 보험관리(종합) 버튼 클릭시 팝업화면 호출
 this.fnJONGHAP = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	// 선택된 row가 있을 경우에만 팝업을 띄움
	//if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	var param = {};
	param.CD_SITE = this.dsSearch.getColumn(0,"CD_SITE");
	param.DS_SITE = this.ccfCD_SITE.form.DSTextBox.value;
	
	this.gfnFormOpen("DSG", "DSG_JONGHAP", "", param, 1010, 830);
}


this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};
]]></Script>
    <Objects>
      <Dataset id="dsList">
        <ColumnInfo>
          <Column id="DT_START" type="STRING" size="256"/>
          <Column id="DT_END" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DSHPR_CHONGSAN_LIST</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DSHPR_CHONGSAN_SAVE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_SITE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_SITE"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsList1"/>
    </Objects>
    <Bind>
      <BindItem id="item2" compid="divSearch.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item0" compid="divSearch.form.ctclDT_START" propid="value" datasetid="dsList" columnid="DT_START"/>
      <BindItem id="item1" compid="divSearch.form.ctclDT_END" propid="value" datasetid="dsList" columnid="DT_END"/>
    </Bind>
  </Form>
</FDL>
