<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="DSB_MAGAM" width="1280" height="720" titletext="일용 근로소득 집계표" onload="DSB_MAGAM_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" text="" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="staYM_WORK" taborder="1" text="조회년월" left="0.0" top="10.0" width="92.0" height="24.0" onclick="divSearch_staYM_WORK_onclick" cssclass="sta_WF_SchLabelE"/>
              <Div id="ctclYM_WORK" taborder="2" left="staYM_WORK:0.0" top="10.0" width="80" height="24.0" url="cmm::cmmCalMM.xfdl"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg" onlbuttonup="divData_onlbuttonup">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.DSB_MAGAM_onload = function(obj: nexacro.Form, e: nexacro.LoadEventInfo) {
    // -- 필수 -------------------//
    this.gfnFormOnLoad(this);
    this.gfnFormInfo(this);
    // ---------------------------//  

    this.fnSetButton();
    this.fnSetExtendButton();
    this.fnSetVariable();
    this.fnSetEvent();
    this.fnSetParameter();
	
	var today = this.gfnGetDate();
	this.dsSearch.setColumn(0, "YM_WORK", today.substr(0,6));

};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결
 ************************************************************************/
this.fnSetExtendButton = function() {

    //his.btn1 = this.gfnFormButtonAdd("BTN_MONMAGAM", "fnMonmagamYnCheck"); //월마감
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
    this.ctclYM_WORK = this.divSearch.form.ctclYM_WORK;

    this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
    //그리드 초기화
    this.gfnGridInit(this.dxGrid, this.dsList, "DS", "DSB_GUNROSODUK_SUM");

}
/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

   this.dsSelect = new Dataset();
   this.dsSelect.addColumn("YM_WORK", "string");

}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
/*
 *   조회 버튼
 */
this.fnSelect = function() {
    if (!this.fnSelectValidate()) return false;

    this.gfnGridBeforeSelect(this.dxGrid);

    this.dsSelect.clearData();
    this.dsSelect.addRow();
    this.dsSelect.setColumn(0, "YM_WORK", this.dsSearch.getColumn(0, "YM_WORK"));

    var strSvcId = "select";
    var strSvcType = "grid";
    var inProc = "_dsProc";
    var inData = "select=dsSelect";
    var outData = "dsList=select0";
    var strArg = "";
    var callBackFnc = "fnCallback";

    this.gfnTransaction(strSvcId, // transaction을 구분하기 위한 svc id값
        strSvcType, // transaction을 요청할 구분
        inProc, // Procedure 정보 Dataset 이름
        inData, // 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
        outData, // 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
        strArg, // 입력갑스로 보낼 arguments, strFormData="20120607"
        callBackFnc); // 통신방법 정의 [생략가능]
}



/*
 *   입력 버튼
 */
this.fnAdd = function() {
    //this.gfnGridAdd(this.dxGrid);
}

/*
 *   삭제 버튼
 */
this.fnDel = function() {
    //this.gfnGridDel(this.dxGrid);
}

/*
 *   저장 버튼
 */
this.fnSave = function() {

}

/*
 *   엑셀 버튼
 */
this.fnExcel = function() {
    this.gfnExcelExport(this.dxGrid);
}

/*
 *   출력 버튼
 */
this.fnPrint = function() {}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *   조회 Validate
 */
this.fnSelectValidate = function() {
    var validate = true;

   if (this.gfnIsNull(this.dsSearch.getColumn(0, "YM_WORK"))) {
        validate = false;
        this.fnVaidateCallback = function() {
            this.ctclYM_WORK.form.TextBox.setFocus();
        }
        this.gfnAlert("조회년월을 입력하세요.", "fnVaidateCallback");

    }
    return validate;
};

/************************************************************************
 * 콜백 이벤트
 ***********************************************************************
 
/*
 *   콜백 처리
 */

this.fnCallback = function(svcID, errorCode, errorMsg) {
    if (errorCode != 0) {
        this.gfnAlert(errorMsg);

        return;
    }

    if (svcID == "select") {
        this.gfnGridAfterSelect(this.dxGrid);
    } 
};


/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/


/************************************************************************
 * 그리드 이벤트
 ************************************************************************/

/************************************************************************
 * 기타 이벤트
 ************************************************************************/

this.dsSearch_onvaluechanged = function(obj: nexacro.NormalDataset, e: nexacro.DSColChangeEventInfo) {
    if (e.oldvalue != e.newvalue) {
        this.gfnSetFormStatus(this); // 폼상태 초기화
        this.gfnGridClear(this.dxGrid);
    }
};
]]></Script>
    <Objects>
      <Dataset id="dsList" onrowposchanged="dsList_onrowposchanged"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DSBPR_GUNROSODUK_SUM</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_SITE" type="STRING" size="256"/>
          <Column id="YM_WORK" type="STRING" size="256"/>
          <Column id="CD_JIKJONG" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_SITE"/>
            <Col id="YM_WORK"/>
            <Col id="CD_JIKJONG"/>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_DEPT.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_SITE"/>
      <BindItem id="item1" compid="divSearch.form.ctclYM_WORK.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_WORK"/>
      <BindItem id="item2" compid="divSearch.form.ccfCD_JIKJONG.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_JIKJONG"/>
    </Bind>
  </Form>
</FDL>
