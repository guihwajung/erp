<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="1280" height="720" titletext="어음번호 등록" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static id="staCD_CORP" taborder="6" text="법인코드" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_CORP" CDTextWidth="50" taborder="0" left="staCD_CORP:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staTY_USE" taborder="7" text="발행유무" left="ccfCD_CORP:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Combo id="cboTY_USE" taborder="1" left="staTY_USE:0.0" top="10.0" width="70" height="24.0" innerdataset="dsTY_USE" codecolumn="CODE" datacolumn="VALUE" value="" index="0" onitemchanged="fnSearchInit" text="전체"/>
              <Static id="staCD_SIDEBANK" taborder="8" text="계좌번호" left="cboTY_USE:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_SIDEBANK" CDTextWidth="110" taborder="2" left="staCD_SIDEBANK:0.0" top="10.0" width="250" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staDT_REGIST_FROM" taborder="9" text="수령일자" left="ccfCD_SIDEBANK:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Calendar id="ctclDT_REGIST_FROM" taborder="3" left="staDT_REGIST_FROM:0.0" top="10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" onchanged="fnSearchInit"/>
              <Static id="staDT_REGIST_TO" taborder="10" text="~" left="ctclDT_REGIST_FROM:0.0" top="10.0" width="30.0" height="24.0" cssclass="sta_WF_AC"/>
              <Calendar id="ctclDT_REGIST_TO" taborder="4" left="staDT_REGIST_TO:0.0" top="10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" onchanged="fnSearchInit"/>
              <Static id="staYN_NOTES" taborder="11" text="구분" left="ctclDT_REGIST_TO:0.0" top="10.0" width="66" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Combo id="cboYN_NOTES" taborder="5" left="staYN_NOTES:0.0" top="10.0" width="70" height="24.0" innerdataset="dsYN_NOTES" codecolumn="CODE" datacolumn="VALUE" value="" index="0" onitemchanged="fnSearchInit" text="전체"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DFDPR_NOTESNUMBER_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">insert</Col>
            <Col id="SP">DFDPR_NOTESNUMBER_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">update</Col>
            <Col id="SP">DFDPR_NOTESNUMBER_UPDATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">delete</Col>
            <Col id="SP">DFDPR_NOTESNUMBER_DELETE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch">
        <ColumnInfo>
          <Column id="CD_SIDEBANK" type="STRING" size="256"/>
          <Column id="DT_REGIST_FROM" type="STRING" size="256"/>
          <Column id="DT_REGIST_TO" type="STRING" size="256"/>
          <Column id="TY_USE" type="STRING" size="256"/>
          <Column id="YN_NOTES" type="STRING" size="256"/>
          <Column id="CD_CORP" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsTY_USE">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE"/>
            <Col id="VALUE">전체</Col>
          </Row>
          <Row>
            <Col id="CODE">Y</Col>
            <Col id="VALUE">발행</Col>
          </Row>
          <Row>
            <Col id="CODE">N</Col>
            <Col id="VALUE">미발행</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsYN_NOTES">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE"/>
            <Col id="VALUE">전체</Col>
          </Row>
          <Row>
            <Col id="CODE">Y</Col>
            <Col id="VALUE">어음</Col>
          </Row>
          <Row>
            <Col id="CODE">N</Col>
            <Col id="VALUE">B2B</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();	

	// 법인코드 포커스추가
	this.ccfCD_CORP.form.CDTextBox.setFocus();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	//this.btnUPloadExecl = this.gfnFormButtonAdd("btnUPloadExecl", "fnUPloadExecl", "엑셀 업로드");
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;			// 법인코드
	this.ccfCD_SIDEBANK = this.divSearch.form.ccfCD_SIDEBANK;	// 은행지점
	
	this.cboTY_USE = this.divSearch.form.cboTY_USE;				// 발행유무
	this.cboYN_NOTES = this.divSearch.form.cboYN_NOTES;			// 구분
	
	this.ctclDT_REGIST_FROM = this.divSearch.form.ctclDT_REGIST_FROM;	// 수령일자(from)
	this.ctclDT_REGIST_TO = this.divSearch.form.ctclDT_REGIST_TO;		// 수령일자(to)
	
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.ccfCD_CORP.CodeFindName = "DZX_CFCORP";
	this.ccfCD_SIDEBANK.CodeFindName = "DFX_CFNO_ACCOUNT";
	
	this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_SIDEBANK.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.ccfCD_SIDEBANK.AfterCDTextChanged = "fnAfterCDTextChanged";

	this.gfnGridInit(this.dxGrid, this.dsList, "DF", "DFD_NOTES_NUMBER");
	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforuserDataSetParam";
	this.dxGrid.AfterCDTextChanged = "fnGrid_AfterCDTextChanged";		
	
	if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
		this.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP); 
		this.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);	
	}
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("NO_ACCOUNT", "string");
	this.dsSelect.addColumn("DT_REGIST_FROM", "string");
	this.dsSelect.addColumn("DT_REGIST_TO", "string");
	this.dsSelect.addColumn("TY_USE", "string");
	this.dsSelect.addColumn("YN_NOTES", "string");
	this.dsSelect.addColumn("CD_CORP", "string");

	this.dsInsert = new Dataset();
	this.dsInsert.addColumn("CD_BANK", "string");
	this.dsInsert.addColumn("CD_SIDEBANK", "string");
	this.dsInsert.addColumn("DT_REGIST", "string");
	this.dsInsert.addColumn("NO_NOTES", "string");
	this.dsInsert.addColumn("TY_USE", "string");
	this.dsInsert.addColumn("NO_ACCOUNT", "string");
	this.dsInsert.addColumn("ID_REGIST", "string");
	this.dsInsert.addColumn("TY_GUBUN", "string");
	this.dsInsert.addColumn("CD_CORP", "string");
	this.dsInsert.addColumn("NO_NOTES_E", "string");
	this.dsInsert.addColumn("ID_USER", "string");

	this.dsUpdate = new Dataset();
	this.dsUpdate.addColumn("CD_BANK", "string");
	this.dsUpdate.addColumn("CD_SIDEBANK", "string");
	this.dsUpdate.addColumn("DT_REGIST", "string");
	this.dsUpdate.addColumn("NO_NOTES", "string");
	this.dsUpdate.addColumn("TY_USE", "string");
	this.dsUpdate.addColumn("TY_GUBUN", "string");
	this.dsUpdate.addColumn("NO_ACCOUNT", "string");
	this.dsUpdate.addColumn("NO_NOTES_E", "string");
	this.dsUpdate.addColumn("ID_USER", "string");

	this.dsDelete = new Dataset();
	this.dsDelete.addColumn("CD_SIDEBANK", "string");
	this.dsDelete.addColumn("DT_REGIST", "string");
	this.dsDelete.addColumn("NO_NOTES", "string");
	this.dsDelete.addColumn("CD_BANK", "string");
	this.dsDelete.addColumn("CD_CORP", "string");	
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);			// 법인코드
	this.dsSelect.setColumn(0, "TY_USE", this.cboTY_USE.value);								// 발행유무
	this.dsSelect.setColumn(0, "NO_ACCOUNT", this.ccfCD_SIDEBANK.form.CDTextBox.value);		// 은행지점
	this.dsSelect.setColumn(0, "DT_REGIST_FROM", this.ctclDT_REGIST_FROM.value);			// 수령일자(from)
	this.dsSelect.setColumn(0, "DT_REGIST_TO", this.ctclDT_REGIST_TO.value);				// 수령일자(to)
	this.dsSelect.setColumn(0, "YN_NOTES", this.cboYN_NOTES.value);							// 구분
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	// 선택된 row가 있을 경우에만 팝업을 띄움
	//if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	var param = {};
	param.CD_CORP = this.ccfCD_CORP.form.CDTextBox.value;
	param.DS_CORP = this.ccfCD_CORP.form.DSTextBox.value;

	// 화면 오픈. 
	// CD_MODULE은 보통 같은 모듈에서 호출하는 경우가 많으니 this.FormInfo.CD_MODULE 사용
	// 타 모듈 화면 호출시 지정할것.
	//trace("this.FormInfo.CD_MODULE :: " + this.FormInfo.CD_MODULE);
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DFD_DLG_NOTES_NUMBER", "fnPopCallBack", param);
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	if (!this.gfnGridValidate(this.dxGrid)) return;

	this.dxGrid.updateToDataset();
	
	this.dsInsert.clearData();
	this.dsUpdate.clearData();
	this.dsDelete.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
				var nrow = this.dsInsert.addRow();
				this.dsInsert.setColumn(nrow, "CD_BANK", this.dsList.getColumn(i, "CD_BANK"));
				this.dsInsert.setColumn(nrow, "CD_SIDEBANK", this.dsList.getColumn(i, "CD_SIDEBANK"));
				this.dsInsert.setColumn(nrow, "DT_REGIST", this.dsList.getColumn(i, "DT_REGIST"));
				this.dsInsert.setColumn(nrow, "NO_NOTES", this.dsList.getColumn(i, "NO_NOTES"));
				this.dsInsert.setColumn(nrow, "TY_USE", this.dsList.getColumn(i, "TY_USE"));
				this.dsInsert.setColumn(nrow, "NO_ACCOUNT", this.dsList.getColumn(i, "NO_ACCOUNT"));
				this.dsInsert.setColumn(nrow, "ID_REGIST", this.AuthClient.ID_USER);
				this.dsInsert.setColumn(nrow, "TY_GUBUN", this.dsList.getColumn(i, "TY_GUBUN"));
				this.dsInsert.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
				this.dsInsert.setColumn(nrow, "NO_NOTES_E", this.dsList.getColumn(i, "NO_NOTES_E"));
				this.dsInsert.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
				break;
				
			case "U":
				var nrow = this.dsUpdate.addRow();
				this.dsUpdate.setColumn(nrow, "CD_BANK", this.dsList.getColumn(i, "CD_BANK"));
				this.dsUpdate.setColumn(nrow, "CD_SIDEBANK", this.dsList.getColumn(i, "CD_SIDEBANK"));
				this.dsUpdate.setColumn(nrow, "DT_REGIST", this.dsList.getColumn(i, "DT_REGIST"));
				this.dsUpdate.setColumn(nrow, "NO_NOTES", this.dsList.getColumn(i, "NO_NOTES"));
				this.dsUpdate.setColumn(nrow, "TY_USE", this.dsList.getColumn(i, "TY_USE"));
				this.dsUpdate.setColumn(nrow, "NO_ACCOUNT", this.dsList.getColumn(i, "NO_ACCOUNT"));
				this.dsUpdate.setColumn(nrow, "TY_GUBUN", this.dsList.getColumn(i, "TY_GUBUN"));
				this.dsUpdate.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
				this.dsUpdate.setColumn(nrow, "NO_NOTES_E", this.dsList.getColumn(i, "NO_NOTES_E"));
				this.dsUpdate.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
				break;
				
			case "D":
				var nrow = this.dsDelete.addRow();
				this.dsDelete.setColumn(nrow, "CD_SIDEBANK", this.dsList.getColumn(i, "CD_SIDEBANK"));
				this.dsDelete.setColumn(nrow, "DT_REGIST", this.dsList.getColumn(i, "DT_REGIST"));
				this.dsDelete.setColumn(nrow, "NO_NOTES", this.dsList.getColumn(i, "NO_NOTES"));
				this.dsDelete.setColumn(nrow, "CD_BANK", this.dsList.getColumn(i, "CD_BANK"));
				this.dsDelete.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
				break;
		}
	}
	
	if (this.dsInsert.rowcount == 0 && this.dsUpdate.rowcount == 0 && this.dsDelete.rowcount == 0) return;
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "insert=dsInsert update=dsUpdate delete=dsDelete";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.text)) {
		this.gfnAlert("법인코드를 입력 하세요.");
		this.ccfCD_CORP.form.CDTextBox.setFocus();
		return false;
	}
	
	if ( !this.gfnIsNull(this.ctclDT_REGIST_FROM.value) && !this.gfnIsNull(this.ctclDT_REGIST_TO.value) ) {
		if ( this.ctclDT_REGIST_FROM.value > this.ctclDT_REGIST_TO.value ) {
			this.gfnAlert("수령일자가 잘못 입력 되었습니다..");
			this.ctclDT_REGIST_FROM.setFocus();
			return false;
		}
	}
	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
	} else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

this.fnPopCallBack = function(svcID, val) {
	if (val != false) {
		var json = JSON.parse(val);
		var no_to = parseInt(json.NO_TO);
		var orgNote = json.NO_FROM;
		var note = parseInt(json.NO_FROM);
	

		//trace("no_to :: " + no_to);
		//trace("note :: " + note);
		
		this.dsList.set_enableevent(false);	
		
		for (var row = no_to - 1; row >= 0; row--) {
			var nRow = this.dsList.addRow();
			//trace("note.Length :: " + note.toString().length);
			var newNoteNumber = (note + row).toString().padLeft(orgNote.toString().length, "0");
			
			this.dsList.setColumn(nRow, this.ucFlag, "I");
			
			//this.dsList.setColumn(nRow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
			this.dsList.setColumn(nRow, "CD_SIDEBANK", JSON.CD_MANAGEBANK);
			this.dsList.setColumn(nRow, "CD_BANK", json.CD_BANK);
			this.dsList.setColumn(nRow, "DS_BANK", json.DS_BANK);
			this.dsList.setColumn(nRow, "NO_ACCOUNT", json.NO_ACCOUNT);
			this.dsList.setColumn(nRow, "DS_VENDOR", json.DS_VENDOR);
			this.dsList.setColumn(nRow, "DT_REGIST", json.DT_REGIST);
			this.dsList.setColumn(nRow, "NO_NOTES", newNoteNumber);
			this.dsList.setColumn(nRow, "TY_USE", "N");
			this.dsList.setColumn(nRow, "TY_GUBUN", json.TY_GUBUN);
		}
		
		this.gfnSetFormStatus(this, "I");	
		this.dsList.set_enableevent(true);	
		
		//trace(this.dsList.saveXML());
		this.fnSave();
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	
	// 법인코드
	if (id == "ccfCD_CORP") {
		dsUserParam.setColumn(nrow, "CD_GROUP", "A");
	}
	
	if (id == "ccfCD_SIDEBANK") {
		if (!this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
			dsUserParam.setColumn(nrow, "GUBUN", "NOTE");	
			dsUserParam.setColumn(nrow, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);	
		}else{
			this.gfnAlert("법인코드는 필수입력 값입니다.");
			return false;
		}
	}
	return true;
};

this.fnAfterCDTextChanged = function(id, codeFindData) {
	if(id == "ccfCD_CORP") {
		this.fnSearchInit();
	}
	
	if (id == "ccfCD_SIDEBANK") {
		this.fnSearchInit();
	}
}

this.fnGrid_BeforuserDataSetParam = function(id, dsUserParam, nrow) {
	var cdCorp = this.dsList.getColumn(this.dsList.rowposition, "CD_CORP");
	
	// 법인코드
	if (id == "DZX_CFCORP") {
		dsUserParam.setColumn(nrow, "CD_GROUP", this.idGroup);	
	} 
	
	// 계좌
	if (id == "DFX_CFACCOUNTNO_SUJI") {
		if ( this.gfnIsNull(cdCorp) ) {
			this.gfnAlert("법인코드를 먼저 입력하세요.");
			return false;
		} else {
			dsUserParam.setColumn(nrow, "CD_CORP", cdCorp);		
		}		
	}
	
	// 수지
	if (id == "DFX_CFSUJICODE") {
		dsUserParam.setColumn(nrow, "TY_INOUT", "");	
		dsUserParam.setColumn(nrow, "YN_USE", "Y");		
	}
	
	// 부서
	if (id == "DFX_CFACNTUNIT") {
		if ( !this.gfnIsNull(cdCorp) ) {
			dsUserParam.setColumn(nrow, "CD_GROUP", this.idGroup);
			dsUserParam.setColumn(nrow, "CD_CORP", cdCorp);				
		} else {
			this.gfnAlert("법인코드를 먼저 입력하세요.");
			return false;		
		}		
	}
	
	// 거래처	
	if (id == "DFX_CFVENDOR") {
		if ( !this.gfnIsNull(cdCorp) ) {
			// TODO TY_VENDOR1 확인해봐야함.
			dsUserParam.setColumn(nrow, "TY_VENDOR1", "금융");
			dsUserParam.setColumn(nrow, "CD_CORP", cdCorp);				
		} else {
			this.gfnAlert("법인코드를 먼저 입력하세요.");
			return false;		
		}		
	}
	
	return true;
}

this.fnGrid_AfterCDTextChanged = function(id, codeFindData) {

};

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		// 폼상태 초기화
		this.gfnSetFormStatus(this);	
		this.gfnGridClear(this.dxGrid);
	}
};




this.fnOnitemchanged = function(obj:nexacro.Combo,e:nexacro.ItemChangeEventInfo)
{
	this.gfnGridClear(this.dxGrid);
};
]]></Script>
  </Form>
</FDL>
