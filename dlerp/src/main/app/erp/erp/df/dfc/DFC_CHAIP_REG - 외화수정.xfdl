<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="1520" height="810" titletext="차입금 약정 등록" onload="form_onload" visible="true">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="78.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="sta04" taborder="5" text="법인코드" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="cfCD_CORP" CDTextWidth="60" taborder="0" left="sta04:0.0" top="10.0" width="280" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="sta00" taborder="6" text="차입종류" left="cfCD_CORP:0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_CHAIP" CDTextWidth="70" taborder="1" left="sta00:0.0" top="10.0" width="269" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="sta01" taborder="7" text="관리번호" left="0.0" top="sta04:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="cfNO_CHAIP" CDTextWidth="90" taborder="2" left="sta01:0.0" top="sta04:10.0" width="280" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="sta03" taborder="4" text="완료여부" left="cfNO_CHAIP:0.0" top="sta04:10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Combo id="cboTY_REPAY" taborder="3" text="진행중" left="sta03:0.0" top="sta04:10.0" width="70" height="24.0" codecolumn="CD_CODE" datacolumn="DS_CODE" value="N" index="-1" innerdataset="dsTY_REPAY1" onitemchanged="fnSearchInit"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="1" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg" ondragmove="divData_ondragmove">
          <Layouts>
            <Layout>
              <Div id="divSplitter" taborder="2" top="0" width="5" cursor="ew-resize" bottom="0" ondrag="divData_divSplitter_ondrag" left="21.88%" cssclass="div_Splitter"/>
              <Div id="divDataLeft" taborder="0" left="0" top="0" bottom="0" right="divSplitter:5">
                <Layouts>
                  <Layout>
                    <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0">
                      <Formats>
                        <Format id="default"/>
                      </Formats>
                    </Grid>
                  </Layout>
                </Layouts>
              </Div>
              <Div id="divDataRight" taborder="1" left="divSplitter:5" top="0" bottom="0" right="0" text="" visible="true">
                <Layouts>
                  <Layout>
                    <Static id="sta07_00" taborder="122" left="75" top="355" height="30" cssclass="sta_WF_tablebg" text="" right="19"/>
                    <Static id="sta07" taborder="80" left="0" top="384" height="30" cssclass="sta_WF_tablebg" text="" right="20"/>
                    <Static id="sta50_00" taborder="116" text="유효이자율" left="217" top="443" width="105" height="29" cssclass="sta_WF_tablelabel" visible="false"/>
                    <MaskEdit id="mskAM_HALIN" taborder="118" left="545" top="448" width="110" height="20" format="#,###,###,###,###,###,##0" tabstop="false" visible="false"/>
                    <Static id="sta00" taborder="47" text="기본정보" left="0" top="0" height="22" cssclass="sta_TITLE_Bg" right="0"/>
                    <Static id="sta11" taborder="49" left="94" top="28" height="30" cssclass="sta_WF_tablebg" text="" right="0"/>
                    <Static id="sta03" taborder="50" left="94" top="57" height="30" cssclass="sta_WF_tablebg" onclick="divData_divDataRight_sta03_onclick" right="0"/>
                    <Static id="sta05" taborder="51" text="법인코드" left="344" top="28" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Div id="cfCD_CORP2" CDTextWidth="50" taborder="1" left="446" top="33" width="210" height="20" url="cmm::cmmCodeFind.xfdl" enable="true"/>
                    <Static id="sta06" taborder="52" left="94" top="86" height="30" cssclass="sta_WF_tablebg" right="0"/>
                    <Static id="sta27" taborder="55" left="94" top="115" height="30" cssclass="sta_WF_tablebg" right="0"/>
                    <Static id="sta28" taborder="56" text="원금상환조건" left="0" top="157" height="22" cssclass="sta_TITLE_Bg" right="-1"/>
                    <Static id="sta29" taborder="57" text="차입금명" left="344" top="115" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Edit id="txtNM_CHAIP" taborder="10" left="446" top="120" width="210" height="20" maxlength="100"/>
                    <Static id="sta33" taborder="58" left="94" top="184" height="30" cssclass="sta_WF_tablebg" right="0"/>
                    <Static id="sta34" taborder="59" text="원금상환방법" left="0" top="184" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta36" taborder="60" text="상환주기(개월)" left="217" top="184" width="105" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="staChitPubPnt" taborder="61" text="상환기준일" left="440" top="184" width="105" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta39" taborder="62" text="상환거치기간" left="660" top="184" width="95" height="30" cssclass="sta_WF_tablelabel"/>
                    <Static id="sta01" taborder="48" text="관리번호" left="0" top="28" width="95" height="30" cssclass="sta_WF_tablelabel"/>
                    <Edit id="txtNO_CHAIP" taborder="0" left="102" top="33" width="232" height="20" maxlength="20" enable="false"/>
                    <Static id="sta21" taborder="53" text="조달방법" left="0" top="115" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta02" taborder="64" text="귀속부서" left="344" top="86" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta26" taborder="54" text="관계사" left="665" top="57" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta10" taborder="65" text="장단기/대체" left="344" top="57" width="95" height="30" onclick="divData_divDataRight_sta10_onclick" cssclass="sta_WF_tablelabelE"/>
                    <Combo id="cboTY_RAISE" taborder="9" left="102" top="120" width="105" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="LOAN" index="0" text="LOAN" innerdataset="dsTY_RAISE"/>
                    <Static id="sta12" taborder="66" text="차입기관" left="0" top="86" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Div id="cfCD_CHABANK" CDTextWidth="80" taborder="5" left="102" top="91" width="232" height="20" url="cmm::cmmCodeFind.xfdl" enable="true"/>
                    <Combo id="cboYN_RELATIVE" taborder="4" text="" left="766" top="62" width="105" height="20" innerdataset="dsYN_RELATIVE" codecolumn="CODE" datacolumn="NAME" value="A" index="0"/>
                    <Div id="cfCD_DEPT" CDTextWidth="80" taborder="6" left="446" top="91" width="210" height="20" url="cmm::cmmCodeFind.xfdl" enable="true"/>
                    <Combo id="cboTY_SANG" taborder="12" text="" left="101" top="189" width="105" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="" index="0" innerdataset="dsTY_SANG"/>
                    <MaskEdit id="mskTR_SANG" taborder="13" left="327" top="189" width="105" height="20" format="#,###,###,##0" limitbymask="integer"/>
                    <Calendar id="calDT_ORIGINFROM" taborder="14" left="551" top="189" width="105" height="20" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" value=""/>
                    <Static id="sta15" taborder="67" text="이자지급방식" left="0" top="227" height="22" cssclass="sta_TITLE_Bg" right="-1"/>
                    <Static id="sta16" taborder="68" left="94" top="254" height="30" cssclass="sta_WF_tablebg" text="" right="0"/>
                    <Static id="sta17" taborder="69" text="기준금리" left="0" top="254" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
                    <MaskEdit id="mskRT_EZA" taborder="16" left="101" top="259" width="105" height="20" format="#,##0.####"/>
                    <Static id="sta18" taborder="70" text="가산금리" left="217" top="254" width="105" height="30" cssclass="sta_WF_tablelabelE"/>
                    <MaskEdit id="mskRT_SPREAD" taborder="17" left="328" top="259" width="105" height="20" format="#,##0.####"/>
                    <Static id="sta19" taborder="71" text="유형" left="440" top="254" width="105" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Combo id="cboTY_EZA" taborder="18" left="551" top="259" width="105" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="LOAN" index="0" text="LOAN" innerdataset="dsTY_EZA"/>
                    <Static id="sta20" taborder="72" text="연동" left="660" top="254" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Combo id="cboTY_INTLOCK" taborder="19" left="761" top="259" width="105" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="LOAN" index="0" text="LOAN" innerdataset="dsTY_INTLOCK"/>
                    <Static id="sta22" taborder="73" left="94" top="283" height="30" cssclass="sta_WF_tablebg" text="" right="0"/>
                    <Static id="sta23" taborder="74" text="방식" left="0" top="283" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Combo id="cboTY_DANBOK" taborder="20" left="101" top="288" width="105" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="LOAN" index="0" text="LOAN" innerdataset="dsTY_DANBOK"/>
                    <Static id="sta24" taborder="75" text="지급일" left="217" top="283" width="105" height="30" cssclass="sta_WF_tablelabelE"/>
                    <MaskEdit id="mskTR_EZASTD" taborder="21" left="328" top="288" width="105" height="20" format="#,###,###,##0"/>
                    <Static id="sta25" taborder="76" text="이자주기(개월)" left="440" top="283" width="105" height="30" cssclass="sta_WF_tablelabelE"/>
                    <MaskEdit id="mskTR_INTTERM" taborder="22" left="551" top="288" width="105" height="20" format="#,###,###,##0"/>
                    <Static id="sta30" taborder="77" text="지급기준" left="660" top="283" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Combo id="cboTY_SUNHOO" taborder="23" left="761" top="288" width="105" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="LOAN" index="0" text="" innerdataset="dsTY_SUNHOO"/>
                    <Static id="sta35" taborder="78" text="계산방식" left="880" top="254" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Combo id="cboTY_EZACAL" taborder="24" left="981" top="259" width="105" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="LOAN" index="0" text="" innerdataset="dsTY_EZACAL"/>
                    <Static id="sta37" taborder="79" text="일수계산" left="880" top="283" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Combo id="cboTY_YANGDAN" taborder="25" left="981" top="288" width="105" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="LOAN" index="0" text="LOAN" innerdataset="dsTY_YANGDAN"/>
                    <Static id="sta08" taborder="81" text="한도" left="0" top="384" width="80" height="30" cssclass="sta_WF_tablelabelE"/>
                    <MaskEdit id="mskAM_CHAMAX" taborder="28" left="84" top="389" width="130" height="20" format="#,##0.00"/>
                    <Static id="sta09" taborder="83" text="차입" left="217" top="355" width="80" height="30" cssclass="sta_WF_tablelabelE"/>
                    <MaskEdit id="mskAM_CHAIP" taborder="27" left="301" top="360" width="130" height="20" format="#,##0.00"/>
                    <Static id="sta38" taborder="84" text="상환" left="440" top="355" width="80" height="30" cssclass="sta_WF_tablelabel"/>
                    <Static id="sta40" taborder="85" text="잔액" left="660" top="355" width="80" height="30" cssclass="sta_WF_tablelabel"/>
                    <MaskEdit id="mskAM_SANG" taborder="30" left="526" top="360" width="131" height="20" format="#,##0.00" autoselect="false" enable="false"/>
                    <MaskEdit id="mskAM_JAN" taborder="31" left="746" top="360" width="133" height="20" format="#,##0.00" autoselect="false" enable="false"/>
                    <Static id="sta42" taborder="86" text="계획생성" left="665" top="28" width="95" height="30" cssclass="sta_WF_tablelabel"/>
                    <Edit id="txtYN_PLAN" taborder="32" left="766" top="33" width="105" height="20" maxlength="1" enable="false"/>
                    <Static id="sta43" taborder="87" text="결재상태" left="879" top="-7" width="95" height="30" cssclass="sta_WF_tablelabel" visible="false"/>
                    <Edit id="txtTY_APPR" taborder="33" left="980" top="-2" width="105" height="20" maxlength="20" enable="false" visible="false"/>
                    <Static id="sta46" taborder="88" text="차입기간" left="665" top="115" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Combo id="cboTY_REPAY" taborder="11" left="980" top="33" width="105" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="LOAN" index="0" text="LOAN" innerdataset="dsTY_REPAY2"/>
                    <Static id="sta47" taborder="89" left="74" top="413" height="30" cssclass="sta_WF_tablebg" text="" right="20" visible="true"/>
                    <Static id="sta48" taborder="90" text="담보감정가" left="660" top="413" width="80" height="30" cssclass="sta_WF_tablelabel"/>
                    <Static id="sta49" taborder="91" text="담보방식" left="440" top="413" width="80" height="30" cssclass="sta_WF_tablelabel"/>
                    <Static id="sta50" taborder="92" text="담보물건" left="217" top="413" width="80" height="30" cssclass="sta_WF_tablelabel"/>
                    <Static id="sta51" taborder="82" text="담보여부" left="0" top="413" width="80" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Combo id="cboYN_DAMBO" taborder="34" left="83" top="418" width="130" height="20" codecolumn="CODE" datacolumn="NAME" value="LOAN" index="0" text="LOAN" innerdataset="dsYN_DAMBO"/>
                    <Edit id="txtDS_MULGYUN" taborder="35" left="301" top="418" width="130" height="20" maxlength="100" enable="true" visible="true"/>
                    <Edit id="txtDS_DAMBO" taborder="36" left="526" top="418" width="131" height="20" maxlength="100" enable="true"/>
                    <MaskEdit id="mskAM_GAM" taborder="37" left="746" top="418" width="131" height="19" format="#,###,###,###,###,###,##0"/>
                    <Static id="sta52" taborder="93" text="기타정보" left="0" top="450" height="22" cssclass="sta_TITLE_Bg" right="-1" onclick="Common_onclick"/>
                    <Static id="sta53" taborder="94" left="74" top="478" height="30" cssclass="sta_WF_tablebg" text="" right="0" onclick="Common_onclick"/>
                    <Static id="sta54" taborder="95" left="74" top="507" height="30" cssclass="sta_WF_tablebg" onclick="Common_onclick" right="0"/>
                    <Static id="sta55" taborder="96" text="투자자상세" left="319" top="478" width="75" height="30" cssclass="sta_WF_tablelabel" onclick="Common_onclick"/>
                    <Static id="sta56" taborder="97" left="74" top="565" cssclass="sta_WF_tablebg" right="0" bottom="0" onclick="Common_onclick"/>
                    <Static id="sta59" taborder="99" text="보증내역" left="0" top="478" width="75" height="30" cssclass="sta_WF_tablelabel" onclick="Common_onclick"/>
                    <Static id="sta60" taborder="100" text="출금계좌" left="660" top="507" width="75" height="30" onclick="Common_onclick" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta61" taborder="101" text="CMS전송" left="660" top="478" width="75" height="30" onclick="Common_onclick" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta62" taborder="102" text="차입계좌" left="0" top="507" width="75" height="30" onclick="Common_onclick" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta64" taborder="103" left="0" top="565" width="75" cssclass="sta_WF_tablelabel" text="비고" bottom="0" onclick="Common_onclick"/>
                    <TextArea id="TeaRM_BIGO" taborder="46" left="81" top="571" width="902" maxlength="200" bottom="7" onclick="Common_onclick"/>
                    <Edit id="txtDS_BOND" taborder="39" left="81" top="483" width="232" height="20" maxlength="100" enable="true" onclick="Common_onclick"/>
                    <Edit id="txtDS_INVESTOR" taborder="40" left="400" top="483" width="253" height="20" maxlength="100" enable="true" onclick="Common_onclick"/>
                    <Combo id="cboTY_CMS" taborder="41" left="741" top="483" width="241" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="LOAN" index="0" text="LOAN" innerdataset="dsTY_CMS" onclick="Common_onclick"/>
                    <Div id="cfNO_ACCOUNT_CHA" CDTextWidth="110" taborder="43" left="400" top="512" width="253" height="20" url="cmm::cmmCodeFind.xfdl" enable="true" onclick="Common_onclick"/>
                    <Div id="cfNO_ACCOUNT" CDTextWidth="110" taborder="44" left="741" top="512" width="241" height="20" url="cmm::cmmCodeFind.xfdl" enable="true" onclick="Common_onclick"/>
                    <Combo id="cboTY_TERM" taborder="3" text="" left="446" top="62" width="110" height="20" innerdataset="dsTY_TERM" codecolumn="CD_CODE" datacolumn="DS_CODE" value="A" index="0"/>
                    <Static id="sta04" taborder="104" text="차입종류" left="0" top="57" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Div id="cfCD_CHAIP" CDTextWidth="60" taborder="2" left="102" top="62" width="232" height="20" url="cmm::cmmCodeFind.xfdl" enable="true"/>
                    <Calendar id="calTO_CHAIP" taborder="8" left="888" top="120" width="105" height="20" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" value=""/>
                    <Static id="staCD_TILDE" taborder="105" text="~" left="874" top="120" width="10" height="20"/>
                    <Calendar id="calFR_CHAIP" taborder="7" left="766" top="120" width="105" height="20" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" value=""/>
                    <Static id="sta32" taborder="106" text="원가산입" left="665" top="86" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Edit id="txtQN_DEFFERED" taborder="15" left="762" top="189" width="105" height="20" maxlength="100" enable="false"/>
                    <Static id="sta13" taborder="107" left="74" top="536" height="30" cssclass="sta_WF_tablebg" onclick="Common_onclick" right="0"/>
                    <Static id="sta57" taborder="98" text="최초차입" left="0" top="536" width="75" height="30" cssclass="sta_WF_tablelabel" onclick="Common_onclick"/>
                    <Div id="cfCNO_PARENTS" CDTextWidth="90" taborder="45" left="81" top="541" width="232" height="20" url="cmm::cmmCodeFind.xfdl" enable="true" onclick="Common_onclick"/>
                    <Static id="sta14" taborder="108" text="입금계좌" left="319" top="507" width="75" height="30" onclick="Common_onclick" cssclass="sta_WF_tablelabelE"/>
                    <Edit id="txtDS_ACCOUNT" taborder="42" left="81" top="512" width="232" height="20" maxlength="100" enable="true" onclick="Common_onclick"/>
                    <Static id="sta70" taborder="109" text="담보매매가" left="880" top="413" width="80" height="30" cssclass="sta_WF_tablelabel"/>
                    <MaskEdit id="mskAM_TRADE" taborder="38" left="966" top="418" width="133" height="20" format="#,###,###,###,###,###,##0"/>
                    <Static id="sta31" taborder="110" text="완료여부" left="879" top="28" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Combo id="cboYN_EZACOST" taborder="111" text="N" left="766" top="91" width="105" height="20" innerdataset="dsYN_EZACOST" codecolumn="CODE" datacolumn="NAME" value="N" index="1"/>
                    <Static id="sta41" taborder="112" text="주채무계열" left="879" top="86" width="95" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Combo id="cboYN_MAIN" taborder="113" text="N" left="980" top="90" width="105" height="20" innerdataset="dsYN_MAIN" codecolumn="CODE" datacolumn="NAME" value="N" index="1"/>
                    <Combo id="cboYN_HANDO" taborder="114" text="" left="981" top="62" width="105" height="20" innerdataset="dsYN_HANDO" codecolumn="CODE" datacolumn="NAME" value="N" index="1"/>
                    <Static id="sta44" taborder="115" text="한도대출" left="879" top="57" width="95" height="30" cssclass="sta_WF_tablelabel"/>
                    <Static id="sta51_00" taborder="117" text="할인발행차금" left="445" top="443" width="95" height="30" cssclass="sta_WF_tablelabel" visible="false"/>
                    <MaskEdit id="mskRT_YEZA" taborder="119" left="326" top="448" width="105" height="20" format="#,##0.####" visible="false" tabstop="false"/>
                    <Static id="sta39_00" taborder="121" text="차입화페" left="0" top="355" width="80" height="30" cssclass="sta_WF_tablelabelE" onclick="divData_divDataRight_sta39_00_onclick"/>
                    <Combo id="cboYN_JANGDAN" taborder="120" left="561" top="62" width="95" height="20" value="Y" index="0" text="Y" codecolumn="CODE" datacolumn="NAME" innerdataset="dsYN_JANGDAN"/>
                    <Combo id="cboCD_CURR" taborder="26" left="83" top="360" width="65" height="20" codecolumn="CD_CODE" datacolumn="DS_CODE" value="LOAN" index="0" text="" innerdataset="dsCD_CURR" onitemchanged="divData_divDataRight_cboCD_CUR_onitemchanged"/>
                    <Static id="sta45" taborder="63" text="진행정보 및 담보" left="0" top="326" height="22" cssclass="sta_TITLE_Bg" right="1" visible="true"/>
                    <Static id="sta09_00" taborder="123" text="차입(원화)" left="217" top="384" width="80" height="30" cssclass="sta_WF_tablelabelE"/>
                    <Static id="sta38_00" taborder="124" text="상환(원화)" left="440" top="384" width="80" height="30" cssclass="sta_WF_tablelabel"/>
                    <Static id="sta40_00" taborder="125" text="잔액(원화)" left="660" top="384" width="80" height="30" cssclass="sta_WF_tablelabel"/>
                    <MaskEdit id="mskAM_SANG_KRW" taborder="126" left="526" top="388" width="131" height="20" format="#,##0" autoselect="false" enable="false"/>
                    <MaskEdit id="mskAM_JAN_KRW" taborder="127" left="746" top="388" width="133" height="20" format="#,##0" autoselect="false" enable="false"/>
                    <MaskEdit id="mskAM_CHAIP_KRW" taborder="29" left="301" top="389" width="130" height="20" format="#,##0"/>
                    <MaskEdit id="mskRT_EXCH" taborder="128" left="151" top="360" width="63" height="20" format="#,##0.00"/>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	this.fnSetCombo();
};
 
/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel 
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	 this.btnPlanCreat = this.gfnFormButtonAdd("btnPlanCreat", "fnPlanCreat", "계획생성");
	 this.btnPlanPerform = this.gfnFormButtonAdd("btnPlanPerform", "fnPlanPerform", "계획/실적");
	 this.btnChngInfoInsert = this.gfnFormButtonAdd("btnChngInfoInsert", "fnChngInfoInsert", "변동정보등록");
	 this.btnFileUpload = this.gfnFormButtonAdd("btnFileUpload", "fnFileUpload", " 첨부파일 ");
// 	 this.btnElctrncPmntUp = this.gfnFormButtonAdd("btnElctrncPmntUp", "fnElctrncPmntUp", "전자결재상신");
// 	 this.btnElctrncPmntSrch = this.gfnFormButtonAdd("btnElctrncPmntSrch", "fnElctrncPmntSrch", "전자결재조회");

};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {

	// 조회조건
	this.ScfCD_CORP  = this.divSearch.form.cfCD_CORP;				// 법인코드
	this.ScfCD_CHAIP = this.divSearch.form.ccfCD_CHAIP;				// 차입종류
	this.ScfNO_CHAIP = this.divSearch.form.cfNO_CHAIP;				// 관리번호
	this.ScboTY_REPAY = this.divSearch.form.cboTY_REPAY;				// 완료여부
	
	this.dxGrid = this.divData.form.divDataLeft.form.objGrid;		// 그리드
	this.grSearch = this.FormInfo.GR_SEARCH;						// 권한?
	this.cdGroup = this.gfnIsNull(this.AuthClient.CD_GROUP) ? "" : this.AuthClient.CD_GROUP;						// 그룹코드	
	
	
	// 기본정보
	this.txtNO_CHAIP = this.divData.form.divDataRight.form.txtNO_CHAIP;			// 관리번호
	this.cfCD_CORP2 = this.divData.form.divDataRight.form.cfCD_CORP2;				// 법인코드
	this.txtNM_CHAIP = this.divData.form.divDataRight.form.txtNM_CHAIP;			// 차입금명
	this.cfCD_CHAIP = this.divData.form.divDataRight.form.cfCD_CHAIP;			// 차입종류
	this.cboTY_TERM = this.divData.form.divDataRight.form.cboTY_TERM;			// 장단기
	this.cboTY_RAISE = this.divData.form.divDataRight.form.cboTY_RAISE;			// 조달방법
	this.cfCD_CHABANK = this.divData.form.divDataRight.form.cfCD_CHABANK;		// 차입기관
	this.cboYN_RELATIVE = this.divData.form.divDataRight.form.cboYN_RELATIVE; 	// 관계사
	this.calFR_CHAIP = this.divData.form.divDataRight.form.calFR_CHAIP; 		// 차입기간(from)
	this.calTO_CHAIP = this.divData.form.divDataRight.form.calTO_CHAIP; 		// 차입기간(to)
	this.cfCD_DEPT = this.divData.form.divDataRight.form.cfCD_DEPT; 			// 귀속부서
	this.cboYN_JANGDAN = this.divData.form.divDataRight.form.cboYN_JANGDAN;	    // 장단기대체여부 2021.12.13
	
	// 원금상환조건
	this.cboTY_SANG = this.divData.form.divDataRight.form.cboTY_SANG;				// 원금상환방법
	this.mskTR_SANG = this.divData.form.divDataRight.form.mskTR_SANG;				// 상환주기
	this.calDT_ORIGINFROM = this.divData.form.divDataRight.form.calDT_ORIGINFROM;	// 상환기준일
	//this.calDT_ORIGINTO = this.divData.form.divDataRight.form.calDT_ORIGINTO;		// 원금상환기간(to)
	this.mskQN_DEFFERED = this.divData.form.divDataRight.form.mskQN_DEFFERED;		// 상환거치기간
	this.cboYN_EZACOST = this.divData.form.divDataRight.form.cboYN_EZACOST			// 원가산입 20200507 추가 	
	this.cboYN_MAIN = this.divData.form.divDataRight.form.cboYN_MAIN				// 주채무계열 20200511 추가 		
	
	// 이자지급방식
	this.mskRT_EZA = this.divData.form.divDataRight.form.mskRT_EZA;					// 기준금리
	this.mskRT_SPREAD = this.divData.form.divDataRight.form.mskRT_SPREAD;			// 가산금리
	this.cboTY_EZA = this.divData.form.divDataRight.form.cboTY_EZA;					// 유형
	this.cboTY_INTLOCK = this.divData.form.divDataRight.form.cboTY_INTLOCK;			// 연동
	this.cboTY_DANBOK = this.divData.form.divDataRight.form.cboTY_DANBOK;			// 방식
	this.mskTR_EZASTD = this.divData.form.divDataRight.form.mskTR_EZASTD;			// 지급일
	this.mskTR_INTTERM = this.divData.form.divDataRight.form.mskTR_INTTERM;			// 주기(개월)
	this.cboTY_SUNHOO = this.divData.form.divDataRight.form.cboTY_SUNHOO;			// 지급기준
	this.cboTY_EZACAL = this.divData.form.divDataRight.form.cboTY_EZACAL;			// 계산방식
	this.cboTY_YANGDAN = this.divData.form.divDataRight.form.cboTY_YANGDAN;			// 일수계산
	
	
	// 진행정보 및 담보
	this.mskAM_CHAMAX = this.divData.form.divDataRight.form.mskAM_CHAMAX;			// 한도
	this.mskAM_CHAIP = this.divData.form.divDataRight.form.mskAM_CHAIP;				// 차입원화 
	this.mskAM_SANG = this.divData.form.divDataRight.form.mskAM_SANG;				// 상환원화
	this.mskAM_JAN = this.divData.form.divDataRight.form.mskAM_JAN;					// 잔액원화 
	
	this.txtYN_PLAN = this.divData.form.divDataRight.form.txtYN_PLAN;				// 계획생성
	this.txtTY_APPR = this.divData.form.divDataRight.form.txtTY_APPR;				// 결재상태
	this.txtNO_APPR = this.divData.form.divDataRight.form.txtNO_APPR;				// 전자결재문서번호
	this.cboTY_REPAY = this.divData.form.divDataRight.form.cboTY_REPAY;				// 완료여부

	this.cboYN_DAMBO = this.divData.form.divDataRight.form.cboYN_DAMBO;				// 담보여부
	this.txtDS_MULGYUN = this.divData.form.divDataRight.form.txtDS_MULGYUN;			// 담보물건
	this.txtDS_DAMBO = this.divData.form.divDataRight.form.txtDS_DAMBO;				// 담보방식
	this.mskAM_GAM = this.divData.form.divDataRight.form.mskAM_GAM;					// 담보감정가	 
	this.mskAM_TRADE = this.divData.form.divDataRight.form.mskAM_TRADE;			    // 담보매매 20200403 추가	 
	this.cboYN_HANDO = this.divData.form.divDataRight.form.cboYN_HANDO;				// 한도대출
	this.mskAM_HALIN = this.divData.form.divDataRight.form.mskAM_HALIN;				// 할인발행차금 20210913 추가
	this.mskRT_YEZA = this.divData.form.divDataRight.form.mskRT_YEZA;				// 유효이자율 20210913 추가
	this.cboCD_CURR = this.divData.form.divDataRight.form.cboCD_CURR;               // 통화 추가 
	this.mskRT_EXCH = this.divData.form.divDataRight.form.mskRT_EXCH;               // 환율 추가 
    this.mskAM_CHAIP_KRW = this.divData.form.divDataRight.form.mskAM_CHAIP_KRW;	// 차입(차입통화)
	this.mskAM_SANG_KRW = this.divData.form.divDataRight.form.mskAM_SANG_KRW;		// 상환(차입통화)
	this.mskAM_JAN_KRW = this.divData.form.divDataRight.form.mskAM_JAN_KRW;		// 잔액(차입통화)	
	
	// 기타정보
	this.txtDS_BOND = this.divData.form.divDataRight.form.txtDS_BOND;				// 보증내역
	this.txtDS_INVESTOR = this.divData.form.divDataRight.form.txtDS_INVESTOR;		// 투자자상세
	this.cboTY_CMS = this.divData.form.divDataRight.form.cboTY_CMS;					// 브랜치전송
	this.txtDS_ACCOUNT = this.divData.form.divDataRight.form.txtDS_ACCOUNT;			// 차입계좌
	this.cfNO_ACCOUNT_CHA = this.divData.form.divDataRight.form.cfNO_ACCOUNT_CHA;	// 입금계좌
	this.cfNO_ACCOUNT = this.divData.form.divDataRight.form.cfNO_ACCOUNT;			// 출근계좌
	this.cfCNO_PARENTS = this.divData.form.divDataRight.form.cfCNO_PARENTS;			// 최초차입
	this.TeaRM_BIGO = this.divData.form.divDataRight.form.TeaRM_BIGO;				// 비고
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {	
	this.ScfCD_CORP.CodeFindName = "DZX_CFCORP";					// 법인코드(조회조건)
	this.ScfCD_CHAIP.CodeFindName = "DFX_CFCHAIPKIND";				// 차입종류(조회조건)
	this.ScfNO_CHAIP.CodeFindName = "DFX_CFNO_CHAIP";				// 관리번호(조회조건)
	
	this.cfCD_CORP2.CodeFindName = "DZX_CFCORP"; 					// 법인코드
	this.cfCD_CHAIP.CodeFindName = "DFX_CFCHAIPKIND";				// 차입종류
	this.cfCD_CHABANK.CodeFindName = "DFX_CFVENDOR";				// 차입기관(거래처)
	this.cfCD_DEPT.CodeFindName = "DFX_CFACNTUNIT";					// 귀속부서	
	this.cfNO_ACCOUNT_CHA.CodeFindName = "DFX_CFACCOUNTNO_SUJI";	// 입금계좌 >> 출금계좌	
	this.cfNO_ACCOUNT.CodeFindName = "DFX_CFACCOUNTNO_SUJI";		// 이자계좌	
	this.cfCNO_PARENTS.CodeFindName = "DFX_CFNO_CHAIP";				// 최초차입(관리번호)	
	
	this.ScfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ScfCD_CHAIP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ScfNO_CHAIP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	this.cfCD_CORP2.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.cfCD_CHAIP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.cfCD_CHABANK.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.cfCD_DEPT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.cfNO_ACCOUNT_CHA.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.cfNO_ACCOUNT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.cfCNO_PARENTS.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	this.ScfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.ScfCD_CHAIP.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.ScfNO_CHAIP.AfterCDTextChanged = "fnAfterCDTextChanged";
	
	this.cfCD_CORP2.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.cfCD_CHAIP.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.cfCD_CHABANK.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.cfCD_DEPT.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.cfNO_ACCOUNT_CHA.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.cfNO_ACCOUNT.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.cfCNO_PARENTS.AfterCDTextChanged = "fnAfterCDTextChanged";
	
	
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DF", "DFC_CHAIP_REG");		
	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforuserDataSetParam";
	this.dxGrid.AfterCDTextChanged = "fnGrid_AfterCDTextChanged";
	this.dxGrid.addEventHandler("onselectchanged", this.fnGrid_RowCellChanged, this);
	this.dsList.addEventHandler("oncolumnchanged", this.dsList_ColumnChanged, this);
	
	if (this.gfnIsNull(this.ScfCD_CORP.form.CDTextBox.value)) {
		this.ScfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP); 
		this.ScfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);	
	}
		
	// 법인코드 포커스추가
	this.ScfCD_CORP.form.CDTextBox.setFocus();
	
	// 권한체크 - 해당부서내역만 조회가능
	if (nexacro.toNumber(this.grSearch) >= 2) {
		this.ScfCD_CORP.set_enable(false);
	}
	
// 	if (this.grSearch != "1") {
// 		 this.btnPlanCreat.set_enable(false);
// 		 this.btnPlanPerform.set_enable(false);
// 		 this.btnChngInfoInsert.set_enable(false);
// 		 this.btnElctrncPmntUp.set_enable(false);
// 		 this.btnElctrncPmntSrch.set_enable(false);
// 	} else {
// 		 this.btnPlanCreat.set_enable(true);
// 		 this.btnPlanPerform.set_enable(true);
// 		 this.btnChngInfoInsert.set_enable(true);
// 		 this.btnElctrncPmntUp.set_enable(true);
// 		 this.btnElctrncPmntSrch.set_enable(true);		
// 	}
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	//검색조건 데이터셋
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("CD_CHAIP", "string");
	this.dsSelect.addColumn("NO_CHAIP", "string");
	this.dsSelect.addColumn("TY_REPAY", "string");

	this.dsInsert = new Dataset();
	this.dsInsert.addColumn("CD_CORP", "string");
	this.dsInsert.addColumn("CD_CHAIP", "string");
	this.dsInsert.addColumn("TY_TERM", "string");
	this.dsInsert.addColumn("TY_RAISE", "string");
	this.dsInsert.addColumn("NM_CHAIP", "string");
	this.dsInsert.addColumn("FR_CHAIP", "string");
	this.dsInsert.addColumn("TO_CHAIP", "string");
	this.dsInsert.addColumn("CD_CHABANK", "string");
	this.dsInsert.addColumn("YN_RELATIVE", "string");
	this.dsInsert.addColumn("CD_DEPT", "string");
	this.dsInsert.addColumn("TY_SANG", "string");
	this.dsInsert.addColumn("TR_SANG", "bigdecimal");
	this.dsInsert.addColumn("DT_ORIGINFROM", "string");
	//this.dsInsert.addColumn("DT_ORIGINTO", "string");
	this.dsInsert.addColumn("RT_EZA", "bigdecimal");
	this.dsInsert.addColumn("RT_SPREAD", "bigdecimal");
	this.dsInsert.addColumn("TY_EZA", "string");
	this.dsInsert.addColumn("TY_INTLOCK", "string");
	this.dsInsert.addColumn("TY_DANBOK", "string");
	this.dsInsert.addColumn("TR_EZASTD", "bigdecimal");
	this.dsInsert.addColumn("TR_INTTERM", "bigdecimal");
	this.dsInsert.addColumn("TY_SUNHOO", "string");
	this.dsInsert.addColumn("TY_EZACAL", "string");
	this.dsInsert.addColumn("TY_YANGDAN", "string");
	this.dsInsert.addColumn("AM_CHAMAX", "bigdecimal");
	this.dsInsert.addColumn("AM_CHAIP", "bigdecimal");
	this.dsInsert.addColumn("TY_REPAY", "string");
	this.dsInsert.addColumn("YN_DAMBO", "string");
	this.dsInsert.addColumn("DS_MULGYUN", "string");
	this.dsInsert.addColumn("DS_DAMBO", "string");
	this.dsInsert.addColumn("AM_GAM", "bigdecimal");
	this.dsInsert.addColumn("AM_TRADE", "bigdecimal"); // 담보매매 추가 2020.04.03
	this.dsInsert.addColumn("DS_BOND", "string");
	this.dsInsert.addColumn("DS_INVESTOR", "string");
	this.dsInsert.addColumn("TY_CMS", "string");
	this.dsInsert.addColumn("DS_ACCOUNT", "string");
	this.dsInsert.addColumn("NO_ACCOUNT_CHA", "string");
	this.dsInsert.addColumn("TY_GUBUN_CHA", "string");
	this.dsInsert.addColumn("CD_BANK_CHA", "string");
	this.dsInsert.addColumn("NO_ACCOUNT", "string");
	this.dsInsert.addColumn("TY_GUBUN", "string");
	this.dsInsert.addColumn("CD_BANK", "string");
	this.dsInsert.addColumn("NO_PARENTS", "string");
	this.dsInsert.addColumn("RM_BIGO", "string");
	this.dsInsert.addColumn("YN_EZACOST", "string"); //2020.05.07 
	this.dsInsert.addColumn("YN_MAIN", "string"); //2020.05.11
	this.dsInsert.addColumn("YN_HANDO", "string"); // 한도대출 추가 2020.06.09	
	this.dsInsert.addColumn("ID_USER", "string");
	this.dsInsert.addColumn("AM_HALIN", "bigdecimal"); // 할인발행차금 2021.09.13 
    this.dsInsert.addColumn("RT_YEZA", "bigdecimal"); // 유효이자율 추가 2021.09.13
    this.dsInsert.addColumn("YN_JANGDAN", "string"); // 장단기대체여부 2021.12.13
	this.dsInsert.addColumn("CD_CURR", "string"); // 통화 추가  2023.07.30 
	this.dsInsert.addColumn("AM_CHAIP_KRW", "bigdecimal");
	

	this.dsUpdate = new Dataset();
	this.dsUpdate.addColumn("TY_YANGDAN", "string");
	this.dsUpdate.addColumn("AM_CHAMAX", "bigdecimal");
	this.dsUpdate.addColumn("AM_CHAIP", "bigdecimal");
	this.dsUpdate.addColumn("TY_REPAY", "string");
	this.dsUpdate.addColumn("YN_DAMBO", "string");
	this.dsUpdate.addColumn("DS_MULGYUN", "string");
	this.dsUpdate.addColumn("DS_DAMBO", "string");
	this.dsUpdate.addColumn("AM_GAM", "bigdecimal"); 
	this.dsUpdate.addColumn("AM_TRADE", "bigdecimal"); // 담보매매 추가 2020.04.03
	this.dsUpdate.addColumn("DS_BOND", "string");
	this.dsUpdate.addColumn("DS_INVESTOR", "string");
	this.dsUpdate.addColumn("TY_CMS", "string");
	this.dsUpdate.addColumn("NO_ACCOUNT_CHA", "string");
	this.dsUpdate.addColumn("TY_GUBUN_CHA", "string");
	this.dsUpdate.addColumn("CD_BANK_CHA", "string");
	this.dsUpdate.addColumn("NO_ACCOUNT", "string");
	this.dsUpdate.addColumn("TY_GUBUN", "string");
	this.dsUpdate.addColumn("CD_BANK", "string");
	this.dsUpdate.addColumn("NO_PARENTS", "string");
	this.dsUpdate.addColumn("RM_BIGO", "string");
	this.dsUpdate.addColumn("NO_CHAIP", "string");
	this.dsUpdate.addColumn("ID_USER", "string");
	this.dsUpdate.addColumn("TY_EZACAL", "string");
	this.dsUpdate.addColumn("CD_CHAIP", "string");
	this.dsUpdate.addColumn("TY_TERM", "string");
	this.dsUpdate.addColumn("TY_RAISE", "string");
	this.dsUpdate.addColumn("NM_CHAIP", "string");
	this.dsUpdate.addColumn("FR_CHAIP", "string");
	this.dsUpdate.addColumn("TO_CHAIP", "string");
	this.dsUpdate.addColumn("CD_CHABANK", "string");
	this.dsUpdate.addColumn("YN_RELATIVE", "string");
	this.dsUpdate.addColumn("CD_DEPT", "string");
	this.dsUpdate.addColumn("TY_SANG", "string");
	this.dsUpdate.addColumn("CD_CORP", "string");
	this.dsUpdate.addColumn("TR_SANG", "bigdecimal");
	this.dsUpdate.addColumn("DT_ORIGINFROM", "string");
	//this.dsUpdate.addColumn("DT_ORIGINTO", "string");
	this.dsUpdate.addColumn("RT_EZA", "bigdecimal");
	this.dsUpdate.addColumn("RT_SPREAD", "bigdecimal");
	this.dsUpdate.addColumn("TY_EZA", "string");
	this.dsUpdate.addColumn("TY_INTLOCK", "string");
	this.dsUpdate.addColumn("TY_DANBOK", "string");
	this.dsUpdate.addColumn("TR_EZASTD", "bigdecimal");
	this.dsUpdate.addColumn("TR_INTTERM", "bigdecimal");
	this.dsUpdate.addColumn("TY_SUNHOO", "string");
	this.dsUpdate.addColumn("DS_ACCOUNT", "string");
	this.dsUpdate.addColumn("YN_EZACOST", "string");
	this.dsUpdate.addColumn("YN_MAIN", "string");
	this.dsUpdate.addColumn("YN_HANDO", "string"); // 한도대출 추가 2020.06.09	
	this.dsUpdate.addColumn("ID_USER", "string");
	this.dsUpdate.addColumn("AM_HALIN", "bigdecimal"); // 할인발행차금 2021.09.13
	this.dsUpdate.addColumn("RT_YEZA", "bigdecimal"); // 유효이자율 추가 2021.09.13
	this.dsUpdate.addColumn("YN_JANGDAN", "string");
	this.dsUpdate.addColumn("CD_CURR", "string"); // 통화 추가  2023.07.30 
	this.dsUpdate.addColumn("AM_CHAIP_KRW", "bigdecimal");
	

	this.dsDelete = new Dataset();
	this.dsDelete.addColumn("NO_CHAIP", "string");
	this.dsDelete.addColumn("ID_USER", "string");
	
	this.dsExcute = new Dataset();
	this.dsExcute.addColumn("NO_CHAIP", "string");
	this.dsExcute.addColumn("DT_DATE", "string");
	this.dsExcute.addColumn("YN_FIRST", "string");
	this.dsExcute.addColumn("ID_USER", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	//this.fnSelectEnable();
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();

	this.dsSelect.setColumn(0, "CD_CORP", this.ScfCD_CORP.form.CDTextBox.value);
	this.dsSelect.setColumn(0, "CD_CHAIP", this.ScfCD_CHAIP.form.CDTextBox.value);
	this.dsSelect.setColumn(0, "NO_CHAIP", this.ScfNO_CHAIP.form.CDTextBox.value);
	this.dsSelect.setColumn(0, "TY_REPAY", this.ScboTY_REPAY.value);
	
	//trace(this.dsSelect.saveXML());
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
// 	if(this.dsList.findRow(this.ucFlag, "I") > -1){
// 		this.gfnAlert("신규 추가된 데이터가 이미 있습니다.");
// 		return;
// 	}
	
// 	this.gfnSetAllReadonly(this.divData.form.divDataRight.form, true);
// 	this.fnSelectEnable();
// 	this.fnAddIsEnable();
// 	this.sTY_GUBUN = "";
	
	var nrow = this.gfnGridAdd(this.dxGrid);
	this.dsList.set_enableevent(false);

 	this.dsList.setColumn(nrow, "CD_CORP", this.ScfCD_CORP.form.CDTextBox.value);	// 법인코드
 	this.dsList.setColumn(nrow, "DS_CORP", this.ScfCD_CORP.form.DSTextBox.value);	// 법인명
 	this.dsList.setColumn(nrow, "TY_TERM", "단기");				// 장단기
 	this.dsList.setColumn(nrow, "TY_RAISE", "ABCP");			// 조달방법
	this.dsList.setColumn(nrow, "YN_RELATIVE", "N");			// 관계사
	this.dsList.setColumn(nrow, "TY_SANG", "만기일시");		// 원금상환방법
	this.dsList.setColumn(nrow, "TY_EZA", "변동");				// 유형
	this.dsList.setColumn(nrow, "TY_INTLOCK", "자체심사");			// 연동
	this.dsList.setColumn(nrow, "TY_DANBOK", "단리");			// 방식
	this.dsList.setColumn(nrow, "TY_SUNHOO", "후급");			// 지급기준
	this.dsList.setColumn(nrow, "TY_EZACAL", "일수(실제)");	// 계산방식
	this.dsList.setColumn(nrow, "TY_YANGDAN", "초일산입");		// 일수계산
	this.dsList.setColumn(nrow, "TY_REPAY", "N");				// 완료여부
	this.dsList.setColumn(nrow, "YN_DAMBO", "N");				// 담보여부
	this.dsList.setColumn(nrow, "TY_CMS", "자동이체");			// 브랜치전송
	this.dsList.setColumn(nrow, "YN_JANGDAN", "N");             // 장단기대체여부 2021.12.13
	this.dsList.setColumn(nrow, "CD_CURR", "KRW");              // 통화 원화로 셋팅 
	
	this.dsList.setColumn(nrow, "TR_SANG", 0);			// 상환주기(개월)
	this.dsList.setColumn(nrow, "RT_EZA", 0);			// 기준금리
	this.dsList.setColumn(nrow, "RT_SPREAD", 0);		// 가산금리
	this.dsList.setColumn(nrow, "TR_EZASTD", 0);		// 지급일
	this.dsList.setColumn(nrow, "TR_INTTERM", 0);		// 주기(개월)
	this.dsList.setColumn(nrow, "AM_CHAMAX", 0);		// 한도
	this.dsList.setColumn(nrow, "AM_CHAIP", 0);			// 차입
	this.dsList.setColumn(nrow, "AM_HALIN", 0);         // 할인발행차금
	this.dsList.setColumn(nrow, "RT_YEZA", 0);          // 유효이자율
	this.dsList.setColumn(nrow, "AM_CHAIP_KRW", 0);		// 차입금액 원화	
	
	this.dsList.set_enableevent(true);
	
	this.dsList.set_rowposition(nrow);
	this.dxGrid.setCellPos(1);
	
	//trace(this.dsList.saveXML());
	//trace(this.ccfCorpCd.enable);
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	//if (!this.gfnGridValidate(this.dxGrid)) return;
	
	// 해당펑션은 입력, 수정대상으로 체크하는게 아니라서 사용 어려움...
	//if (!this.gfnDataValidate(this.dsList, this.dsRequired)) return;
	if (!this.fnDataValidate()) return;
	
	this.dxGrid.updateToDataset();
	
	this.dsInsert.clearData();
	this.dsUpdate.clearData();
	this.dsDelete.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
				var nrow = this.dsInsert.addRow();
				this.dsInsert.setColumn(nrow, "CD_CORP", this.dsList.getColumn(i, "CD_CORP"));
				this.dsInsert.setColumn(nrow, "CD_CHAIP", this.dsList.getColumn(i, "CD_CHAIP"));
				this.dsInsert.setColumn(nrow, "TY_TERM", this.dsList.getColumn(i, "TY_TERM"));
				this.dsInsert.setColumn(nrow, "TY_RAISE", this.dsList.getColumn(i, "TY_RAISE"));
				this.dsInsert.setColumn(nrow, "NM_CHAIP", this.dsList.getColumn(i, "NM_CHAIP"));
				this.dsInsert.setColumn(nrow, "FR_CHAIP", this.dsList.getColumn(i, "FR_CHAIP"));
				this.dsInsert.setColumn(nrow, "TO_CHAIP", this.dsList.getColumn(i, "TO_CHAIP"));
				this.dsInsert.setColumn(nrow, "CD_CHABANK", this.dsList.getColumn(i, "CD_CHABANK"));
				this.dsInsert.setColumn(nrow, "YN_RELATIVE", this.dsList.getColumn(i, "YN_RELATIVE"));
				this.dsInsert.setColumn(nrow, "CD_DEPT", this.dsList.getColumn(i, "CD_DEPT"));
				this.dsInsert.setColumn(nrow, "TY_SANG", this.dsList.getColumn(i, "TY_SANG"));
				this.dsInsert.setColumn(nrow, "TR_SANG", this.dsList.getColumn(i, "TR_SANG"));
				this.dsInsert.setColumn(nrow, "DT_ORIGINFROM", this.dsList.getColumn(i, "DT_ORIGINFROM"));
				//this.dsInsert.setColumn(nrow, "DT_ORIGINTO", this.dsList.getColumn(i, "DT_ORIGINTO"));
				this.dsInsert.setColumn(nrow, "RT_EZA", this.dsList.getColumn(i, "RT_EZA"));
				this.dsInsert.setColumn(nrow, "RT_SPREAD", this.dsList.getColumn(i, "RT_SPREAD"));
				this.dsInsert.setColumn(nrow, "TY_EZA", this.dsList.getColumn(i, "TY_EZA"));
				this.dsInsert.setColumn(nrow, "TY_INTLOCK", this.dsList.getColumn(i, "TY_INTLOCK"));
				this.dsInsert.setColumn(nrow, "TY_DANBOK", this.dsList.getColumn(i, "TY_DANBOK"));
				this.dsInsert.setColumn(nrow, "TR_EZASTD", this.dsList.getColumn(i, "TR_EZASTD"));
				this.dsInsert.setColumn(nrow, "TR_INTTERM", this.dsList.getColumn(i, "TR_INTTERM"));
				this.dsInsert.setColumn(nrow, "TY_SUNHOO", this.dsList.getColumn(i, "TY_SUNHOO"));
				this.dsInsert.setColumn(nrow, "TY_EZACAL", this.dsList.getColumn(i, "TY_EZACAL"));
				this.dsInsert.setColumn(nrow, "TY_YANGDAN", this.dsList.getColumn(i, "TY_YANGDAN"));
				this.dsInsert.setColumn(nrow, "AM_CHAMAX", this.dsList.getColumn(i, "AM_CHAMAX"));
				this.dsInsert.setColumn(nrow, "AM_CHAIP", this.dsList.getColumn(i, "AM_CHAIP"));
				this.dsInsert.setColumn(nrow, "TY_REPAY", this.dsList.getColumn(i, "TY_REPAY"));
				this.dsInsert.setColumn(nrow, "YN_DAMBO", this.dsList.getColumn(i, "YN_DAMBO"));
				this.dsInsert.setColumn(nrow, "DS_MULGYUN", this.dsList.getColumn(i, "DS_MULGYUN"));
				this.dsInsert.setColumn(nrow, "DS_DAMBO", this.dsList.getColumn(i, "DS_DAMBO"));
				this.dsInsert.setColumn(nrow, "AM_GAM", this.dsList.getColumn(i, "AM_GAM"));
				this.dsInsert.setColumn(nrow, "AM_TRADE", this.dsList.getColumn(i, "AM_TRADE"));
				this.dsInsert.setColumn(nrow, "DS_BOND", this.dsList.getColumn(i, "DS_BOND"));
				this.dsInsert.setColumn(nrow, "DS_INVESTOR", this.dsList.getColumn(i, "DS_INVESTOR"));
				this.dsInsert.setColumn(nrow, "TY_CMS", this.dsList.getColumn(i, "TY_CMS"));
				this.dsInsert.setColumn(nrow, "DS_ACCOUNT", this.dsList.getColumn(i, "DS_ACCOUNT"));
				this.dsInsert.setColumn(nrow, "NO_ACCOUNT_CHA", this.dsList.getColumn(i, "NO_ACCOUNT_CHA"));
				this.dsInsert.setColumn(nrow, "TY_GUBUN_CHA", this.dsList.getColumn(i, "TY_GUBUN_CHA"));
				this.dsInsert.setColumn(nrow, "CD_BANK_CHA", this.dsList.getColumn(i, "CD_BANK_CHA"));
				this.dsInsert.setColumn(nrow, "NO_ACCOUNT", this.dsList.getColumn(i, "NO_ACCOUNT"));
				this.dsInsert.setColumn(nrow, "TY_GUBUN", this.dsList.getColumn(i, "TY_GUBUN"));
				this.dsInsert.setColumn(nrow, "CD_BANK", this.dsList.getColumn(i, "CD_BANK"));
				this.dsInsert.setColumn(nrow, "NO_PARENTS", this.dsList.getColumn(i, "NO_PARENTS"));
				this.dsInsert.setColumn(nrow, "RM_BIGO", this.dsList.getColumn(i, "RM_BIGO"));
				this.dsInsert.setColumn(nrow, "YN_EZACOST", this.dsList.getColumn(i, "YN_EZACOST"));
				this.dsInsert.setColumn(nrow, "YN_MAIN", this.dsList.getColumn(i, "YN_MAIN"));
				this.dsInsert.setColumn(nrow, "YN_HANDO", this.dsList.getColumn(i, "YN_HANDO"));
				this.dsInsert.setColumn(nrow, "AM_HALIN", this.dsList.getColumn(i, "AM_HALIN"));
				this.dsInsert.setColumn(nrow, "RT_YEZA", this.dsList.getColumn(i, "RT_YEZA"));
				this.dsInsert.setColumn(nrow, "YN_JANGDAN", this.dsList.getColumn(i, "YN_JANGDAN"));
				this.dsInsert.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
				this.dsInsert.setColumn(nrow, "CD_CURR", this.dsList.getColumn(i, "CD_CURR"));
				this.dsInsert.setColumn(nrow, "AM_CHAIP_KRW", this.dsList.getColumn(i, "AM_CHAIP_KRW"));
				
				break;
				
			case "U":
				var nrow = this.dsUpdate.addRow();
				this.dsUpdate.setColumn(nrow, "TY_YANGDAN", this.dsList.getColumn(i, "TY_YANGDAN"));
				this.dsUpdate.setColumn(nrow, "AM_CHAMAX", this.dsList.getColumn(i, "AM_CHAMAX"));
				this.dsUpdate.setColumn(nrow, "AM_CHAIP", this.dsList.getColumn(i, "AM_CHAIP"));
				this.dsUpdate.setColumn(nrow, "TY_REPAY", this.dsList.getColumn(i, "TY_REPAY"));
				this.dsUpdate.setColumn(nrow, "YN_DAMBO", this.dsList.getColumn(i, "YN_DAMBO"));
				this.dsUpdate.setColumn(nrow, "DS_MULGYUN", this.dsList.getColumn(i, "DS_MULGYUN"));
				this.dsUpdate.setColumn(nrow, "DS_DAMBO", this.dsList.getColumn(i, "DS_DAMBO"));
				this.dsUpdate.setColumn(nrow, "AM_GAM", this.dsList.getColumn(i, "AM_GAM"));
				this.dsUpdate.setColumn(nrow, "AM_TRADE", this.dsList.getColumn(i, "AM_TRADE"));
				this.dsUpdate.setColumn(nrow, "DS_BOND", this.dsList.getColumn(i, "DS_BOND"));
				this.dsUpdate.setColumn(nrow, "DS_INVESTOR", this.dsList.getColumn(i, "DS_INVESTOR"));
				this.dsUpdate.setColumn(nrow, "TY_CMS", this.dsList.getColumn(i, "TY_CMS"));
				this.dsUpdate.setColumn(nrow, "NO_ACCOUNT_CHA", this.dsList.getColumn(i, "NO_ACCOUNT_CHA"));
				this.dsUpdate.setColumn(nrow, "TY_GUBUN_CHA", this.dsList.getColumn(i, "TY_GUBUN_CHA"));
				this.dsUpdate.setColumn(nrow, "CD_BANK_CHA", this.dsList.getColumn(i, "CD_BANK_CHA"));
				this.dsUpdate.setColumn(nrow, "NO_ACCOUNT", this.dsList.getColumn(i, "NO_ACCOUNT"));
				this.dsUpdate.setColumn(nrow, "TY_GUBUN", this.dsList.getColumn(i, "TY_GUBUN"));
				this.dsUpdate.setColumn(nrow, "CD_BANK", this.dsList.getColumn(i, "CD_BANK"));
				this.dsUpdate.setColumn(nrow, "NO_PARENTS", this.dsList.getColumn(i, "NO_PARENTS"));
				this.dsUpdate.setColumn(nrow, "RM_BIGO", this.dsList.getColumn(i, "RM_BIGO"));
				this.dsUpdate.setColumn(nrow, "NO_CHAIP", this.dsList.getColumn(i, "NO_CHAIP"));
				this.dsUpdate.setColumn(nrow, "ID_USER", this.dsList.getColumn(i, "ID_USER"));
				this.dsUpdate.setColumn(nrow, "TY_EZACAL", this.dsList.getColumn(i, "TY_EZACAL"));
				this.dsUpdate.setColumn(nrow, "CD_CHAIP", this.dsList.getColumn(i, "CD_CHAIP"));
				this.dsUpdate.setColumn(nrow, "TY_TERM", this.dsList.getColumn(i, "TY_TERM"));
				this.dsUpdate.setColumn(nrow, "TY_RAISE", this.dsList.getColumn(i, "TY_RAISE"));
				this.dsUpdate.setColumn(nrow, "NM_CHAIP", this.dsList.getColumn(i, "NM_CHAIP"));
				this.dsUpdate.setColumn(nrow, "FR_CHAIP", this.dsList.getColumn(i, "FR_CHAIP"));
				this.dsUpdate.setColumn(nrow, "TO_CHAIP", this.dsList.getColumn(i, "TO_CHAIP"));
				this.dsUpdate.setColumn(nrow, "CD_CHABANK", this.dsList.getColumn(i, "CD_CHABANK"));
				this.dsUpdate.setColumn(nrow, "YN_RELATIVE", this.dsList.getColumn(i, "YN_RELATIVE"));
				this.dsUpdate.setColumn(nrow, "CD_DEPT", this.dsList.getColumn(i, "CD_DEPT"));
				this.dsUpdate.setColumn(nrow, "TY_SANG", this.dsList.getColumn(i, "TY_SANG"));
				this.dsUpdate.setColumn(nrow, "CD_CORP", this.dsList.getColumn(i, "CD_CORP"));
				this.dsUpdate.setColumn(nrow, "TR_SANG", this.dsList.getColumn(i, "TR_SANG"));
				this.dsUpdate.setColumn(nrow, "DT_ORIGINFROM", this.dsList.getColumn(i, "DT_ORIGINFROM"));
				//this.dsUpdate.setColumn(nrow, "DT_ORIGINTO", this.dsList.getColumn(i, "DT_ORIGINTO"));
				this.dsUpdate.setColumn(nrow, "RT_EZA", this.dsList.getColumn(i, "RT_EZA"));
				this.dsUpdate.setColumn(nrow, "RT_SPREAD", this.dsList.getColumn(i, "RT_SPREAD"));
				this.dsUpdate.setColumn(nrow, "TY_EZA", this.dsList.getColumn(i, "TY_EZA"));
				this.dsUpdate.setColumn(nrow, "TY_INTLOCK", this.dsList.getColumn(i, "TY_INTLOCK"));
				this.dsUpdate.setColumn(nrow, "TY_DANBOK", this.dsList.getColumn(i, "TY_DANBOK"));
				this.dsUpdate.setColumn(nrow, "TR_EZASTD", this.dsList.getColumn(i, "TR_EZASTD"));
				this.dsUpdate.setColumn(nrow, "TR_INTTERM", this.dsList.getColumn(i, "TR_INTTERM"));
				this.dsUpdate.setColumn(nrow, "TY_SUNHOO", this.dsList.getColumn(i, "TY_SUNHOO"));
				this.dsUpdate.setColumn(nrow, "DS_ACCOUNT", this.dsList.getColumn(i, "DS_ACCOUNT"));
				this.dsUpdate.setColumn(nrow, "YN_EZACOST", this.dsList.getColumn(i, "YN_EZACOST"));
				this.dsUpdate.setColumn(nrow, "YN_MAIN", this.dsList.getColumn(i, "YN_MAIN"));
				this.dsUpdate.setColumn(nrow, "YN_HANDO", this.dsList.getColumn(i, "YN_HANDO"));
				this.dsUpdate.setColumn(nrow, "AM_HALIN", this.dsList.getColumn(i, "AM_HALIN"));
				this.dsUpdate.setColumn(nrow, "RT_YEZA", this.dsList.getColumn(i, "RT_YEZA"));
				this.dsUpdate.setColumn(nrow, "YN_JANGDAN", this.dsList.getColumn(i, "YN_JANGDAN"));
				this.dsUpdate.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
				this.dsUpdate.setColumn(nrow, "CD_CURR", this.dsList.getColumn(i, "CD_CURR"));
				this.dsUpdate.setColumn(nrow, "AM_CHAIP_KRW", this.dsList.getColumn(i, "AM_CHAIP_KRW"));
				break;
				
			case "D":
				var nrow = this.dsDelete.addRow();
				this.dsDelete.setColumn(nrow, "NO_CHAIP", this.dsList.getColumn(i, "NO_CHAIP"));
				this.dsDelete.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
				break;
		}
	}
	
	if (this.dsInsert.rowcount == 0 && this.dsUpdate.rowcount == 0 && this.dsDelete.rowcount == 0) return;
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "insert=dsInsert update=dsUpdate delete=dsDelete";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);

	}else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}else if(svcID == "combo"){
	
		//  조회조건(완료여부)
		var iRow = this.dsTY_REPAY1.insertRow(0);
		this.dsTY_REPAY1.setColumn(iRow, "CD_CODE", "");
		this.dsTY_REPAY1.setColumn(iRow, "DS_CODE", "전체");
		this.ScboTY_REPAY.set_index(2);	// 진행중
		
		if ( !this.gfnIsNull(this.getOwnerFrame().CD_CORP) ) {
			
			// from 차입금약정현황조회 or 차입금거래현황조회
			this.ScfCD_CORP.form.CDTextBox.set_value(this.getOwnerFrame().CD_CORP);
			this.ScfCD_CORP.form.DSTextBox.set_value(this.getOwnerFrame().DS_CORP);
			this.ScfCD_CHAIP.form.CDTextBox.set_value(this.gfnIsNull(this.getOwnerFrame().CD_CHAIP) ? "" : this.getOwnerFrame().CD_CHAIP);
			this.ScfCD_CHAIP.form.DSTextBox.set_value(this.gfnIsNull(this.getOwnerFrame().DS_CHAIP) ? "" : this.getOwnerFrame().DS_CHAIP);				
			this.ScfNO_CHAIP.form.CDTextBox.set_value(this.getOwnerFrame().NO_CHAIP);
			this.ScfNO_CHAIP.form.DSTextBox.set_value(this.getOwnerFrame().NM_CHAIP);	
			
			if (!this.gfnIsNull(this.getOwnerFrame().TY_REPAY)) {
				this.ScboTY_REPAY.set_value(this.getOwnerFrame().TY_REPAY);
			}
			
			this.FormBtns.Select.click();
		}			
		
	}else if(svcID == "e_create") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}else if(svcID == "selectExc") {
		if (errorCode == 0) {
			if (this.dsRtEx.rowcount > 0)
			{
				this.dsList.setColumn(this.dsList.rowposition , "RT_EXCH", this.dsRtEx.getColumn(0, "RT_KRW_EXCH"));
			}
		} else {
			this.gfnAlert(errorMsg);
		}	
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnAfterCDTextChanged = function(id, codeFindData) {
	trace("fnAfterCDTextChanged");
	var arr = codeFindData;
	
	switch(id) {
	
	// 법인코드(조회조건)
	case "cfCD_CORP":
		this.fnSearchInit();
		break;
		
	// 차입종류(조회조건)
	case "ccfCD_CHAIP":	
	    this.fnSearchInit();		
		break;		
		
	// 관리번호(조회조건)	
	case "cfNO_CHAIP": 
		this.fnSearchInit();
		break;

	// 법인코드
	case "cfCD_CORP2":
		break;
		
	// 차입종류
	case "cfCD_CHAIP": 
	    trace("fnAfterCDTextChanged2");
		if(arr.length > 0) {
		   if ( arr[0]["CD_CHAIP"] < "20000" || arr[0]["CD_CHAIP"] > "40000") {
			 this.cboCD_CURR.set_value("KRW");
			 this.fnSetEnableComponent(false);
		   } else {
			 this.fnSetEnableComponent(true);
		   }
		}		
		break;
		
	// 차입기관(거래처)
	case "cfCD_CHABANK": 
		break;
		
	// 귀속부서
	case "cfCD_DEPT": 
		break;
		
	// 입금계좌 
	case "cfNO_ACCOUNT_CHA": 
		if(arr.length > 0) {
			this.dsList.setColumn(this.dsList.rowposition, "TY_GUBUN_CHA", arr[0]["TY_GUBUN"]);
			this.dsList.setColumn(this.dsList.rowposition, "CD_BANK_CHA", arr[0]["CD_BANK"]);
		}
		break;
		
	// 이자계좌 >> 출금계좌
	case "cfNO_ACCOUNT":
		if(arr.length > 0) {
			this.dsList.setColumn(this.dsList.rowposition, "TY_GUBUN", arr[0]["TY_GUBUN"]);
			this.dsList.setColumn(this.dsList.rowposition, "CD_BANK", arr[0]["CD_BANK"]);
		}	
		break;
		
	// 최초차입(관리번호)
	case "cfCNO_PARENTS": 
		break;		
		
	default:
	}	
	return true;
}

this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {

	var cdCorp = this.ScfCD_CORP.form.CDTextBox.value;
	var cdCorp2 = this.dsList.getColumn(this.dsList.rowposition, "CD_CORP");
	
	switch(id) {
	
	// 법인코드(조회조건)
	case "cfCD_CORP": 	
		dsUserParam.setColumn(nrow, "CD_GROUP", this.gfnIsNull(this.cdGroup) ? "" : this.cdGroup);	
		break;
		
	// 차입종류(조회조건)
	case "ccfCD_CHAIP":	
		dsUserParam.setColumn(nrow, "YN_USE", "Y");	
		break;		
		
	// 관리번호(조회조건)	
	case "cfNO_CHAIP": 
		dsUserParam.setColumn(nrow, "CD_CORP", this.gfnIsNull(cdCorp) ? "" : cdCorp);
		break;

	// 법인코드
	case "cfCD_CORP2":
		dsUserParam.setColumn(nrow, "CD_GROUP", this.gfnIsNull(this.cdGroup) ? "" : this.cdGroup);	
		break;
		
	// 차입종류
	case "cfCD_CHAIP": 
		dsUserParam.setColumn(nrow, "YN_USE", "Y");	
		break;
		
	// 차입기관(거래처)
	case "cfCD_CHABANK": 
		dsUserParam.setColumn(nrow, "TY_VENDOR1", "전체");
		dsUserParam.setColumn(nrow, "CD_CORP", this.gfnIsNull(cdCorp2) ? "" : cdCorp2);			
		break;
		
	// 귀속부서
	case "cfCD_DEPT": 
		dsUserParam.setColumn(nrow, "CD_GROUP", this.gfnIsNull(this.cdGroup) ? "" : this.cdGroup);
		dsUserParam.setColumn(nrow, "CD_CORP", this.gfnIsNull(cdCorp2) ? "" : cdCorp2);				
		break;
		
	// 입금계좌
	case "cfNO_ACCOUNT_CHA": 
		dsUserParam.setColumn(nrow, "CD_CORP", this.gfnIsNull(cdCorp2) ? "" : cdCorp2);
		break;
		
	// 이자계좌 
	case "cfNO_ACCOUNT": 
		dsUserParam.setColumn(nrow, "CD_CORP", this.gfnIsNull(cdCorp2) ? "" : cdCorp2);	
		break;
		
	// 최초차입(관리번호)
	case "cfCNO_PARENTS": 
		dsUserParam.setColumn(nrow, "CD_CORP", this.gfnIsNull(cdCorp2) ? "" : cdCorp2);
		break;		
		
	default:
	}	
	return true;
}

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGrid_RowCellChanged = function(obj:nexacro.Grid,e:nexacro.GridSelectEventInfo){
    if (e.row != -1) {
		var URL_PROOF = this.gfnNvl(this.dsList.getColumn(e.row, "URL_PROOF"), "첨부파일");
		this.btnFileUpload.set_text(URL_PROOF);
		
	}
};


//그리드 값변경 이벤트
this.dsList_ColumnChanged = function(obj:nexacro.NormalDataset, e:nexacro.DSColChangeEventInfo)
{
	trace("그리드 값변경 이벤트 " + e.columnid + "/" + e.newvalue)
	if (this.gfnGetFlag(this.dsList, e.row) == "#")
		return;

	// 차입금명 : 차입기관_귀속부서_YYMM_차입한도_조달방법 으로 조합
	if (e.columnid == "DS_VENDOR" || e.columnid == "DS_DEPT_ACNT" || e.columnid == "AM_CHAMAX" || e.columnid == "TY_RAISE" || e.columnid == "FR_CHAIP") {
		if (e.oldvalue != e.newvalue) {	
			var NM_CHAIP = "";
			var DS_VENDOR = this.gfnIsNull(obj.getColumn(e.row, "DS_VENDOR")) ? "" : obj.getColumn(e.row, "DS_VENDOR");
			var DS_DEPT_ACNT = this.gfnIsNull(obj.getColumn(e.row, "DS_DEPT_ACNT")) ? "" : obj.getColumn(e.row, "DS_DEPT_ACNT");
			// 20200413 차입기간의 년월로 변경 var YYMM = this.gfnGetDate().slice(2,6);
			var YYMM = this.gfnIsNull(obj.getColumn(e.row, "FR_CHAIP")) ? "" : obj.getColumn(e.row, "FR_CHAIP").slice(2,6); 
			
			// 차입한도 억 round처리 및 한글금액으로 수정( ex] 1억, 10억, 123억 억단위...)
			var AM_CHAMAX = this.gfnIsNull(obj.getColumn(e.row, "AM_CHAMAX")) ? "" : obj.getColumn(e.row, "AM_CHAMAX");
			var chngAmt = nexacro.round(AM_CHAMAX, -8);
			var finAmt = "";
			if (!this.gfnIsNull(chngAmt) && chngAmt.toString().length >= 9) {
				trace("chngAmt.toString().length :: " + chngAmt.toString().length);
				var endIdx = chngAmt.toString().length - 8;
				finAmt = chngAmt.toString().substr(0,endIdx) + "억";
			} else {
				finAmt = "";
			}

			var TY_RAISE = this.gfnIsNull(obj.getColumn(e.row, "TY_RAISE")) ? "" : obj.getColumn(e.row, "TY_RAISE");
			
			NM_CHAIP = this.gfnIsNull(DS_VENDOR) ? "" : DS_VENDOR;
			NM_CHAIP = NM_CHAIP + (this.gfnIsNull(DS_DEPT_ACNT) ? "" : (this.gfnIsNull(NM_CHAIP) ? "" : "_") + DS_DEPT_ACNT);
			// 20200413 주석 NM_CHAIP = NM_CHAIP + (this.gfnIsNull(NM_CHAIP) ? "" : "_") + YYMM;
			NM_CHAIP = NM_CHAIP + (this.gfnIsNull(NM_CHAIP) ? "" : this.gfnIsNull(YYMM) ? "" : "_") + YYMM;
			NM_CHAIP = NM_CHAIP + (this.gfnIsNull(finAmt) ? "" : (this.gfnIsNull(NM_CHAIP) ? "" : "_") + finAmt);
			NM_CHAIP = NM_CHAIP + (this.gfnIsNull(TY_RAISE) ? "" : (this.gfnIsNull(NM_CHAIP) ? "" : "_") + TY_RAISE);
			
			obj.setColumn(e.row, "NM_CHAIP", NM_CHAIP);
		}
	}

	//
	if(e.columnid == "CD_CURR" || e.columnid == "FR_CHAIP"){
		if(e.newvalue != e.oldvalue){
			if ( !this.gfnIsNull(this.dsList.getColumn(e.row , "CD_CURR")) && !this.gfnIsNull(this.dsList.getColumn(e.row , "FR_CHAIP")) )
			{
				this.fnSetRtExchange(); 				
			} 			
		}		
	}else if(e.columnid == "RT_EXCH")
	{	
		if (this.dsList.getColumn(e.row , "AM_CHAIP") > 0)
		{
			this.fnSetRtExchangeCallback(e.row, "AM_CHAIP");
		}	
	}else if(e.columnid == "AM_CHAIP")
	{
		if(e.newvalue != e.oldvalue){
			this.fnSetRtExchangeCallback(e.row, e.columnid);
		}
	}
	
}

/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {

	if(e == null || (e.pretext != e.posttext)) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);
	}
};


this.fnDataValidate = function(){

	var msg = "은(는) 필수입력 입니다.";
	
	for (var i=0; i < this.dsList.rowcount; i++) {
		if (this.dsList.getColumn(i, "nx_flag") == "I" || this.dsList.getColumn(i, "nx_flag") == "U") {
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "CD_CORP")))){
				this.gfnAlert("법인코드" + msg);
				this.dsList.set_rowposition(i);
				this.cfCD_CORP2.form.CDTextBox.setFocus();
				return false;
			}
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "NM_CHAIP")))){
				this.gfnAlert("차입금명" + msg);
				this.dsList.set_rowposition(i);
				this.txtNM_CHAIP.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "CD_CHAIP")))){
				this.gfnAlert("차입종류" + msg);
				this.dsList.set_rowposition(i);
				this.cfCD_CHAIP.form.CDTextBox.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "TY_TERM")))){
				this.gfnAlert("장단기" + msg);
				this.dsList.set_rowposition(i);
				this.cboTY_TERM.setFocus();
				return false;
			}	
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "TY_RAISE")))){
				this.gfnAlert("조달방법" + msg);
				this.dsList.set_rowposition(i);
				this.cboTY_RAISE.setFocus();
				return false;
			}							
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "CD_CHABANK")))){
				this.gfnAlert("차입기관" + msg);
				this.dsList.set_rowposition(i);
				this.cfCD_CHABANK.form.CDTextBox.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "FR_CHAIP")))){
				this.gfnAlert("차입기간(from)" + msg);
				this.dsList.set_rowposition(i);
				this.calFR_CHAIP.setFocus();
				return false;
			}	
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "TO_CHAIP")))){
				this.gfnAlert("차입기간(to)" + msg);
				this.dsList.set_rowposition(i);
				this.calTO_CHAIP.setFocus();
				return false;
			}
			
			if ( !this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "FR_CHAIP"))) && !this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "TO_CHAIP"))) ) {
				if ( this.gfnTrim(this.dsList.getColumn(i, "FR_CHAIP")) > this.gfnTrim(this.dsList.getColumn(i, "TO_CHAIP")) ) {
					this.gfnAlert("차입기간이 잘못 입력 되었습니다.");
					this.dsList.set_rowposition(i);
					this.calFR_CHAIP.setFocus();
					return false;
				}
			}
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "YN_EZACOST")))){
				this.gfnAlert("원가산입" + msg);
				this.dsList.set_rowposition(i);
				this.cboYN_EZACOST.setFocus(); 
				return false;
			}					 
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "YN_MAIN")))){
				this.gfnAlert("주채무계열" + msg);
				this.dsList.set_rowposition(i);
				this.cboYN_MAIN.setFocus(); 
				return false;
			}					 
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "CD_DEPT")))){
				this.gfnAlert("귀속부서" + msg);
				this.dsList.set_rowposition(i);
				this.cfCD_DEPT.form.CDTextBox.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "TY_SANG")))){
				this.gfnAlert("원금상환방법" + msg);
				this.dsList.set_rowposition(i);
				this.cboTY_SANG.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.dsList.getColumn(i, "TR_SANG"))){
				this.gfnAlert("상환주기(개월)" + msg);
				this.dsList.set_rowposition(i);
				this.mskTR_SANG.setFocus();
				return false;
			}	
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "DT_ORIGINFROM")))){
				this.gfnAlert("상환기준일" + msg);
				this.dsList.set_rowposition(i);
				this.calDT_ORIGINFROM.setFocus();
				return false;
			}			
			
// 			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "DT_ORIGINTO")))){
// 				this.gfnAlert("원금상환기간(to)" + msg);
// 				this.dsList.set_rowposition(i);
// 				this.calDT_ORIGINTO.setFocus();
// 				return false;
// 			}
			
// 			if ( !this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "DT_ORIGINFROM"))) && !this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "DT_ORIGINTO"))) ) {
// 				if ( this.gfnTrim(this.dsList.getColumn(i, "DT_ORIGINFROM")) > this.gfnTrim(this.dsList.getColumn(i, "DT_ORIGINTO")) ) {
// 					this.gfnAlert("원금상환기간이 잘못 입력 되었습니다.");
// 					this.dsList.set_rowposition(i);
// 					this.calDT_ORIGINFROM.setFocus();
// 					return false;
// 				}
// 			}

            if(this.gfnIsNull(this.dsList.getColumn(i, "CD_CURR"))){
				this.gfnAlert("통화" + msg);
				this.dsList.set_rowposition(i);
				this.cboCD_CURR.setFocus();
				return false;
			}
			
			if(this.gfnIsNull(this.dsList.getColumn(i, "RT_EZA"))){
				this.gfnAlert("기준금리" + msg);
				this.dsList.set_rowposition(i);
				this.mskRT_EZA.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.dsList.getColumn(i, "RT_SPREAD"))){
				this.gfnAlert("가산금리" + msg);
				this.dsList.set_rowposition(i);
				this.mskRT_SPREAD.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "TY_EZA")))){
				this.gfnAlert("유형" + msg);
				this.dsList.set_rowposition(i);
				this.cboTY_EZA.setFocus();
				return false;
			}
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "TY_INTLOCK")))){
				this.gfnAlert("연동" + msg);
				this.dsList.set_rowposition(i);
				this.cboTY_INTLOCK.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "TY_DANBOK")))){
				this.gfnAlert("방식" + msg);
				this.dsList.set_rowposition(i);
				this.cboTY_DANBOK.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.dsList.getColumn(i, "TR_EZASTD"))){
				this.gfnAlert("지급일" + msg);
				this.dsList.set_rowposition(i);
				this.mskTR_EZASTD.setFocus();
				return false;
			}
			
			if(this.gfnIsNull(this.dsList.getColumn(i, "TR_INTTERM"))){
				this.gfnAlert("주기(개월)" + msg);
				this.dsList.set_rowposition(i);
				this.mskTR_INTTERM.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "TY_SUNHOO")))){
				this.gfnAlert("지급기준" + msg);
				this.dsList.set_rowposition(i);
				this.cboTY_SUNHOO.setFocus();
				return false;
			}
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "TY_EZACAL")))){
				this.gfnAlert("계산방식" + msg);
				this.dsList.set_rowposition(i);
				this.cboTY_EZACAL.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "TY_YANGDAN")))){
				this.gfnAlert("일수계산" + msg);
				this.dsList.set_rowposition(i);
				this.cboTY_YANGDAN.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.dsList.getColumn(i, "AM_CHAMAX"))){
				this.gfnAlert("한도" + msg);
				this.dsList.set_rowposition(i);
				this.mskAM_CHAMAX.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.dsList.getColumn(i, "AM_CHAIP"))){
				this.gfnAlert("차입" + msg);
				this.dsList.set_rowposition(i);
				this.mskAM_CHAIP.setFocus();
				return false;
			}
			
			if(this.gfnIsNull(this.dsList.getColumn(i, "AM_HALIN"))){
				this.gfnAlert("할인발행차금" + msg);
				this.dsList.set_rowposition(i);
				this.mskAM_HALIN.setFocus();
				return false;
			}
			
				if(this.gfnIsNull(this.dsList.getColumn(i, "RT_YEZA"))){
				this.gfnAlert("유효이자율" + msg);
				this.dsList.set_rowposition(i);
				this.mskRT_YEZA.setFocus();
				return false;
			}
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "TY_REPAY")))){
				this.gfnAlert("완료여부" + msg);
				this.dsList.set_rowposition(i);
				this.cboTY_REPAY.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "YN_DAMBO")))){
				this.gfnAlert("담보여부" + msg);
				this.dsList.set_rowposition(i);
				this.cboYN_DAMBO.setFocus();
				return false;
			}
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "TY_CMS")))){
				this.gfnAlert("브랜치전송" + msg);
				this.dsList.set_rowposition(i);
				this.cboTY_CMS.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "DS_ACCOUNT")))){
				this.gfnAlert("차입계좌" + msg);
				this.dsList.set_rowposition(i);
				this.txtDS_ACCOUNT.setFocus();
				return false;
			}			
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "NO_ACCOUNT_CHA")))){
				this.gfnAlert("입금계좌" + msg);
				this.dsList.set_rowposition(i);
				this.cfNO_ACCOUNT_CHA.form.CDTextBox.setFocus();
				return false;
			}
			
			if(this.gfnIsNull(this.gfnTrim(this.dsList.getColumn(i, "NO_ACCOUNT")))){
				this.gfnAlert("출금계좌" + msg); // 이자계좌
				this.dsList.set_rowposition(i);
				this.cfNO_ACCOUNT.form.CDTextBox.setFocus();
				return false;
			}	
			
			if(this.gfnIsNull(this.dsList.getColumn(i, "AM_CHAIP_KRW"))){
				this.gfnAlert("차입(원화)" + msg);
				this.dsList.set_rowposition(i);
				this.mskAM_CHAIP_KRW.setFocus();
				return false;
			}			
						
		}
	}
	return true;
}

this.fnSetCombo = function() {
	
	this.dsCombo = new Dataset();
	this.dsCombo.addColumn("CD_SYSTEM", "string");
	this.dsCombo.addColumn("CD_TYPE", "string");
	
	this.dsCombo.addRow();
	this.dsCombo.setColumn(0, "CD_SYSTEM", "DF");
	this.dsCombo.setColumn(0, "CD_TYPE", "C0");
	
	this.dsCombo.addRow();
	this.dsCombo.setColumn(1, "CD_SYSTEM", "DF");
	this.dsCombo.setColumn(1, "CD_TYPE", "C1");
	
	this.dsCombo.addRow();
	this.dsCombo.setColumn(2, "CD_SYSTEM", "DF");
	this.dsCombo.setColumn(2, "CD_TYPE", "C2");	

	this.dsCombo.addRow();
	this.dsCombo.setColumn(3, "CD_SYSTEM", "DF");
	this.dsCombo.setColumn(3, "CD_TYPE", "C3");	

	this.dsCombo.addRow();
	this.dsCombo.setColumn(4, "CD_SYSTEM", "DF");
	this.dsCombo.setColumn(4, "CD_TYPE", "C4");	
	
	this.dsCombo.addRow();
	this.dsCombo.setColumn(5, "CD_SYSTEM", "DF");
	this.dsCombo.setColumn(5, "CD_TYPE", "C5");		
	
	this.dsCombo.addRow();
	this.dsCombo.setColumn(6, "CD_SYSTEM", "DF");
	this.dsCombo.setColumn(6, "CD_TYPE", "C6");			
	
	this.dsCombo.addRow();
	this.dsCombo.setColumn(7, "CD_SYSTEM", "DF");
	this.dsCombo.setColumn(7, "CD_TYPE", "C7");	

	this.dsCombo.addRow();
	this.dsCombo.setColumn(8, "CD_SYSTEM", "DF");
	this.dsCombo.setColumn(8, "CD_TYPE", "C8");	

	this.dsCombo.addRow();
	this.dsCombo.setColumn(9, "CD_SYSTEM", "DF");
	this.dsCombo.setColumn(9, "CD_TYPE", "C9");	

	this.dsCombo.addRow();
	this.dsCombo.setColumn(10, "CD_SYSTEM", "DF");
	this.dsCombo.setColumn(10, "CD_TYPE", "ZZ");	

	this.dsCombo.addRow();
	this.dsCombo.setColumn(11, "CD_SYSTEM", "DF");
	this.dsCombo.setColumn(11, "CD_TYPE", "C9");
	
	this.dsCombo.addRow();
	this.dsCombo.setColumn(12, "CD_SYSTEM", "DF");
	this.dsCombo.setColumn(12, "CD_TYPE", "40");
	
	var strSvcId    = "combo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "combo=dsCombo";
	var outData     = "dsTY_DANBOK=combo0 dsTY_RAISE=combo1 dsTY_SANG=combo2 dsTY_EZA=combo3 dsTY_INTLOCK=combo4 dsTY_SUNHOO=combo5"
	                + " dsTY_EZACAL=combo6 dsTY_YANGDAN=combo7 dsTY_TERM=combo8 dsTY_REPAY1=combo9 dsTY_CMS=combo10 dsTY_REPAY2=combo11 dsCD_CURR=combo12";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};

this.divData_divSplitter_ondrag = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
	e.set_userdata("splitter");
	return true;
};

this.divData_ondragmove = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
	if(e.userdata == "splitter") {
		this.divData.form.divSplitter.set_left(e.clientx);
		this.divData.form.resetScroll();
	}
};

//검색어 키다운 이벤트
this.divSearch_txtSEARCH_onkeydown = function(obj:nexacro.Edit,e:nexacro.KeyEventInfo)
{
	if(e.keycode == 13){
		this.fnSelect();
	}
};

// 계획생성
this.fnPlanCreat = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if(!this.gfnGridIsRow(this.dxGrid)) return;
	this.gfnConfirm("차입금 계획생성 합니다.", "fnPlanCreatCallback");
}

// 계획생성 Callback
this.fnPlanCreatCallback = function(strId, val) {

	if(val == false) return;
	
	this.dsExcute.clearData();
	this.dsExcute.addRow();
	
	this.dsExcute.setColumn(0, "NO_CHAIP", this.dsList.getColumn(this.dsList.rowposition,"NO_CHAIP"));
	this.dsExcute.setColumn(0, "DT_DATE", this.dsList.getColumn(this.dsList.rowposition,"FR_CHAIP"));
	this.dsExcute.setColumn(0, "YN_FIRST", "Y");
	this.dsExcute.setColumn(0, "ID_USER", this.AuthClient.ID_USER);
	
	var strSvcId    = "e_create";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "e_create=dsExcute"; 
	var outData     = "dsResult=e_create0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]

}

// 계획/실적
this.fnPlanPerform = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	
	var param = {};
	param.OWNER_ID = "DFC_CHAIP_REGISTRATION";
	
	param.CD_CORP = this.dsList.getColumn(this.dsList.rowposition, "CD_CORP");
	param.DS_CORP = this.dsList.getColumn(this.dsList.rowposition, "DS_CORP");
	param.DT_FROM = this.dsList.getColumn(this.dsList.rowposition, "FR_CHAIP");
	param.DT_TO =  this.gfnAddMonth(this.dsList.getColumn(this.dsList.rowposition, "TO_CHAIP"), 1);	
	param.NO_CHAIP = this.dsList.getColumn(this.dsList.rowposition, "NO_CHAIP");	
	param.NM_CHAIP = this.dsList.getColumn(this.dsList.rowposition, "NM_CHAIP");
	
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DFC_CHAIP_PLAN", "", param);
}

// 변동정보등록
this.fnChngInfoInsert = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if(!this.gfnGridIsRow(this.dxGrid)) return;
	var param = {};
	
	param.CD_CORP = this.dsList.getColumn(this.dsList.rowposition, "CD_CORP");
	param.DS_CORP = this.dsList.getColumn(this.dsList.rowposition, "DS_CORP");	
	param.DT_FROM = this.dsList.getColumn(this.dsList.rowposition, "FR_CHAIP");
	param.NO_CHAIP = this.dsList.getColumn(this.dsList.rowposition,"NO_CHAIP");
	param.NM_CHAIP = this.dsList.getColumn(this.dsList.rowposition,"NM_CHAIP");
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DFC_CHAIPCHG", "fnPopCallBack", param, this.getOffsetWidth(), this.getOffsetHeight());
}

this.fnPopCallBack = function(svcID, val) {

	if (svcID.indexOf("DFC_CHAIPCHG") > -1) {
		this.FormBtns.Select.click();
	}	
}


// 환율 가져오기 
this.fnSetRtExchange = function ()
{
	this.dsExchange = new Dataset();
	this.dsExchange.addColumn("TY_GUBUN", "string");
	this.dsExchange.addColumn("CN_ROW", "int");
	this.dsExchange.addColumn("VALUE", "string");
	this.dsExchange.addColumn("MIN_VALUE", "string");
	this.dsExchange.addColumn("DT_BASE", "string");
	this.dsExchange.addColumn("CD_LOCAL_CURR", "string");
	this.dsExchange.addColumn("CD_EXEC_CURR", "string");
	
	this.dsExchange.addRow();
	this.dsExchange.setColumn(0, "TY_GUBUN", "");
	this.dsExchange.setColumn(0, "CN_ROW", 0);
	this.dsExchange.setColumn(0, "VALUE", "");
	this.dsExchange.setColumn(0, "MIN_VALUE", "");
	this.dsExchange.setColumn(0, "DT_BASE", this.dsList.getColumn(this.dsList.rowposition, "FR_CHAIP"));
	this.dsExchange.setColumn(0, "CD_LOCAL_CURR", "KRW");
	this.dsExchange.setColumn(0, "CD_EXEC_CURR", this.dsList.getColumn(this.dsList.rowposition, "CD_CURR"));
	
	var strSvcId    = "selectExc";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "selectExc=dsExchange";
	var outData     = "dsRtEx=selectExc0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
						
	
};

//환율 계산 처리 
this.fnSetRtExchangeCallback = function(row , column)
{    
	var rtExchange = this.dsList.getColumn(row, "RT_EXCH");
	
	trace("fnSetRtExchangeCallback rtExchage=>" + rtExchange);
	
	var amContKrw = nexacro.toNumber(this.dsList.getColumn(row, column )) * rtExchange;
	
	this.dsList.setColumn(row, column+"_KRW", this.fnGetTrunc(amContKrw));
	
};

this.dsList_oncolumnchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	
};

this.dsList_onrowposchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSRowPosChangeEventInfo)
{
    var vRowStatus = obj.getColumn(e.newrow, "nx_flag");
	
	
	// 입력시에는 키컴포넌트는 enable true else enable false
	if (vRowStatus == "I") {
	    this.fnSetEnableComponent(true);
		// 컴포넌트 enable/disable처리
		if (this.dsList.getColumn(this.dsList.rowposition, "CD_CHAIP") < "20000" || this.dsList.getColumn(this.dsList.rowposition, "CD_CHAIP") > "40000") {
			this.fnSetEnableComponent(false);
		}
	} else {
	   	if (this.dsList.getColumn(this.dsList.rowposition, "CD_CHAIP") < "20000" || this.dsList.getColumn(this.dsList.rowposition, "CD_CHAIP") > "40000") {
			//원화차입 
			this.fnSetEnableComponent(false);
		   } else {
			//외화차입 
			this.fnSetEnableComponent(true);
		   } 
	}	
};

/*
 * 컴포넌트 enable/disable처리
 */
this.fnSetEnableComponent = function(flag) {
	this.cboCD_CURR.set_enable(flag);		    //  화폐	
	//this.mskAM_CHAIP_KRW.set_enable(flag);		//  차입(원화)	
}

// 첨부파일
this.fnFileUpload = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	//trace("this.btnFileUpload.text :: " + this.btnFileUpload.text);
	if (this.dsList.rowcount <= 0) {
		return false;
	}
	//var colnm = this.gfnGridGetBindColumnNameByIndex(obj, e.cell);
	
	//if(colnm == "URL_PROOF") {
		// 최초 작성시엔 NO_SEQ가 없기 때문에 저장 후에 파일 첨부를 진행하여야 함.
		// CD_DIR에 넣어줄 값이 없기에 저장 후 진행!
		if(this.gfnGetFlag(this.dsList, this.dsList.rowposition) == "I"){
			this.gfnAlert("저장 후 파일첨부 진행.");
			return false;
		}

		var cdGubun = "DF02";
		var cdDir = "NO_CHAIP";	// 관리번호

		var fileManager = {};
		fileManager.CD_GUBUN = cdGubun;
		fileManager.CD_DIR = [this.dsList.getColumn(this.dsList.rowposition, cdDir)];
		fileManager.IS_READONLY = false;
		
// 		trace("VcboAccntGb :: " + VcboAccntGb);
// 		trace("fileManager.CD_GUBUN :: " + fileManager.CD_GUBUN);
// 		trace("fileManager.CD_DIR :: " + fileManager.CD_DIR);
// 		trace("fileManager.IS_READONLY :: " + fileManager.IS_READONLY);
		
		this.gfnFileManager(fileManager, "fnFileCallback");
	//}	
}

this.fnFileCallback = function(strID, val) {
	// val.IsChange : 변경여부, val.Cnt : 파일개수
		
	// 파일개수를 다시 셋팅
	this.dsList.set_enableevent(false);
	if(val.Cnt == 0) {
		this.btnFileUpload.set_text("첨부(0)");
	} else {
		this.btnFileUpload.set_text("첨부(" + val.Cnt + ")");
	}
	this.dsList.setColumn(this.dsList.rowposition, "URL_PROOF", "첨부(" + val.Cnt + ")");
	this.dsList.set_enableevent(true);
};

// 원단위 절사
this.fnGetTrunc = function(amVal){
	var returnVal = this.gfnNvl(amVal, 0);
	if(returnVal > 0){
		returnVal = Math.floor(amVal/10) * 10;
	}
	return returnVal;
}

]]></Script>
    <Objects>
      <Dataset id="dsList" oncolumnchanged="dsList_oncolumnchanged" onrowposchanged="dsList_onrowposchanged"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DFCPR_CHAIPREG_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">insert</Col>
            <Col id="SP">DFCPR_CHAIPREG_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">update</Col>
            <Col id="SP">DFCPR_CHAIPREG_UPDATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">delete</Col>
            <Col id="SP">DFCPR_CHAIPREG_DELETE</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo</Col>
            <Col id="SP">DZXPR_COMBO_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">e_create</Col>
            <Col id="SP">DFCPR_CHAIPPLAN_CREATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">selectExc</Col>
            <Col id="SP">DHXPR_CURRENCY_EXCHAGE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsYN_RELATIVE">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="NAME" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">Y</Col>
            <Col id="NAME">Y</Col>
          </Row>
          <Row>
            <Col id="CODE">N</Col>
            <Col id="NAME">N</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsYN_EZACOST">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="NAME" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">Y</Col>
            <Col id="NAME">Y</Col>
          </Row>
          <Row>
            <Col id="CODE">N</Col>
            <Col id="NAME">N</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsYN_DAMBO">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="NAME" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">Y</Col>
            <Col id="NAME">Y</Col>
          </Row>
          <Row>
            <Col id="CODE">N</Col>
            <Col id="NAME">N</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsYN_HANDO">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="NAME" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">Y</Col>
            <Col id="NAME">Y</Col>
          </Row>
          <Row>
            <Col id="CODE">N</Col>
            <Col id="NAME">N</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_DANBOK"/>
      <Dataset id="dsTY_RAISE"/>
      <Dataset id="dsTY_SANG"/>
      <Dataset id="dsTY_EZA"/>
      <Dataset id="dsTY_INTLOCK"/>
      <Dataset id="dsTY_SUNHOO"/>
      <Dataset id="dsTY_EZACAL"/>
      <Dataset id="dsTY_YANGDAN"/>
      <Dataset id="dsTY_TERM"/>
      <Dataset id="dsTY_REPAY1"/>
      <Dataset id="dsTY_REPAY2"/>
      <Dataset id="dsTY_CMS"/>
      <Dataset id="dsResult"/>
      <Dataset id="dsYN_MAIN">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="NAME" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">Y</Col>
            <Col id="NAME">Y</Col>
          </Row>
          <Row>
            <Col id="CODE">N</Col>
            <Col id="NAME">N</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsYN_JANGDAN">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="NAME" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">Y</Col>
            <Col id="NAME">Y</Col>
          </Row>
          <Row>
            <Col id="CODE">N</Col>
            <Col id="NAME">N</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsCD_CURR">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">KRW</Col>
            <Col id="DS_CODE">KRW</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">USD</Col>
            <Col id="DS_CODE">USD</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">SGD</Col>
            <Col id="DS_CODE">SGD</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">EUR</Col>
            <Col id="DS_CODE">EUR</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsRtEx">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">Y</Col>
            <Col id="DS_CODE">Y</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">N</Col>
            <Col id="DS_CODE">N</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divData.form.divDataRight.form.txtNO_CHAIP" propid="value" datasetid="dsList" columnid="NO_CHAIP"/>
      <BindItem id="item100" compid="divData.form.divDataRight.form.cfCD_CORP2.form.CDTextBox" propid="value" datasetid="dsList" columnid="CD_CORP"/>
      <BindItem id="item101" compid="divData.form.divDataRight.form.cfCD_CORP2.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_CORP"/>
      <BindItem id="item2" compid="divData.form.divDataRight.form.txtNM_CHAIP" propid="value" datasetid="dsList" columnid="NM_CHAIP"/>
      <BindItem id="item3" compid="divData.form.divDataRight.form.cfCD_CHAIP.form.CDTextBox" propid="value" datasetid="dsList" columnid="CD_CHAIP"/>
      <BindItem id="item4" compid="divData.form.divDataRight.form.cfCD_CHAIP.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_CHAIP"/>
      <BindItem id="item5" compid="divData.form.divDataRight.form.cboTY_TERM" propid="value" datasetid="dsList" columnid="TY_TERM"/>
      <BindItem id="item6" compid="divData.form.divDataRight.form.cboTY_RAISE" propid="value" datasetid="dsList" columnid="TY_RAISE"/>
      <BindItem id="item7" compid="divData.form.divDataRight.form.cfCD_CHABANK.form.CDTextBox" propid="value" datasetid="dsList" columnid="CD_CHABANK"/>
      <BindItem id="item8" compid="divData.form.divDataRight.form.cfCD_CHABANK.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_VENDOR"/>
      <BindItem id="item9" compid="divData.form.divDataRight.form.cboYN_RELATIVE" propid="value" datasetid="dsList" columnid="YN_RELATIVE"/>
      <BindItem id="item10" compid="divData.form.divDataRight.form.calFR_CHAIP" propid="value" datasetid="dsList" columnid="FR_CHAIP"/>
      <BindItem id="item11" compid="divData.form.divDataRight.form.calTO_CHAIP" propid="value" datasetid="dsList" columnid="TO_CHAIP"/>
      <BindItem id="item12" compid="divData.form.divDataRight.form.cfCD_DEPT.form.CDTextBox" propid="value" datasetid="dsList" columnid="CD_DEPT"/>
      <BindItem id="item13" compid="divData.form.divDataRight.form.cfCD_DEPT.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_DEPT_ACNT"/>
      <BindItem id="item14" compid="divData.form.divDataRight.form.cboTY_SANG" propid="value" datasetid="dsList" columnid="TY_SANG"/>
      <BindItem id="item15" compid="divData.form.divDataRight.form.mskTR_SANG" propid="value" datasetid="dsList" columnid="TR_SANG"/>
      <BindItem id="item16" compid="divData.form.divDataRight.form.calDT_ORIGINFROM" propid="value" datasetid="dsList" columnid="DT_ORIGINFROM"/>
      <BindItem id="item19" compid="divData.form.divDataRight.form.mskRT_EZA" propid="value" datasetid="dsList" columnid="RT_EZA"/>
      <BindItem id="item20" compid="divData.form.divDataRight.form.mskRT_SPREAD" propid="value" datasetid="dsList" columnid="RT_SPREAD"/>
      <BindItem id="item21" compid="divData.form.divDataRight.form.cboTY_EZA" propid="value" datasetid="dsList" columnid="TY_EZA"/>
      <BindItem id="item22" compid="divData.form.divDataRight.form.cboTY_INTLOCK" propid="value" datasetid="dsList" columnid="TY_INTLOCK"/>
      <BindItem id="item23" compid="divData.form.divDataRight.form.cboTY_DANBOK" propid="value" datasetid="dsList" columnid="TY_DANBOK"/>
      <BindItem id="item24" compid="divData.form.divDataRight.form.mskTR_EZASTD" propid="value" datasetid="dsList" columnid="TR_EZASTD"/>
      <BindItem id="item25" compid="divData.form.divDataRight.form.mskTR_INTTERM" propid="value" datasetid="dsList" columnid="TR_INTTERM"/>
      <BindItem id="item26" compid="divData.form.divDataRight.form.cboTY_SUNHOO" propid="value" datasetid="dsList" columnid="TY_SUNHOO"/>
      <BindItem id="item27" compid="divData.form.divDataRight.form.cboTY_EZACAL" propid="value" datasetid="dsList" columnid="TY_EZACAL"/>
      <BindItem id="item28" compid="divData.form.divDataRight.form.cboTY_YANGDAN" propid="value" datasetid="dsList" columnid="TY_YANGDAN"/>
      <BindItem id="item29" compid="divData.form.divDataRight.form.mskAM_CHAMAX" propid="value" datasetid="dsList" columnid="AM_CHAMAX"/>
      <BindItem id="item30" compid="divData.form.divDataRight.form.mskAM_CHAIP" propid="value" datasetid="dsList" columnid="AM_CHAIP"/>
      <BindItem id="item31" compid="divData.form.divDataRight.form.mskAM_SANG" propid="value" datasetid="dsList" columnid="AM_SANG"/>
      <BindItem id="item32" compid="divData.form.divDataRight.form.mskAM_JAN" propid="value" datasetid="dsList" columnid="AM_JAN"/>
      <BindItem id="item33" compid="divData.form.divDataRight.form.txtYN_PLAN" propid="value" datasetid="dsList" columnid="YN_PLAN"/>
      <BindItem id="item34" compid="divData.form.divDataRight.form.txtTY_APPR" propid="value" datasetid="dsList" columnid="DS_APPR"/>
      <BindItem id="item36" compid="divData.form.divDataRight.form.cboTY_REPAY" propid="value" datasetid="dsList" columnid="TY_REPAY"/>
      <BindItem id="item37" compid="divData.form.divDataRight.form.cboYN_DAMBO" propid="value" datasetid="dsList" columnid="YN_DAMBO"/>
      <BindItem id="item38" compid="divData.form.divDataRight.form.txtDS_MULGYUN" propid="value" datasetid="dsList" columnid="DS_MULGYUN"/>
      <BindItem id="item39" compid="divData.form.divDataRight.form.txtDS_DAMBO" propid="value" datasetid="dsList" columnid="DS_DAMBO"/>
      <BindItem id="item40" compid="divData.form.divDataRight.form.mskAM_GAM" propid="value" datasetid="dsList" columnid="AM_GAM"/>
      <BindItem id="item41" compid="divData.form.divDataRight.form.txtDS_BOND" propid="value" datasetid="dsList" columnid="DS_BOND"/>
      <BindItem id="item42" compid="divData.form.divDataRight.form.txtDS_INVESTOR" propid="value" datasetid="dsList" columnid="DS_INVESTOR"/>
      <BindItem id="item43" compid="divData.form.divDataRight.form.cboTY_CMS" propid="value" datasetid="dsList" columnid="TY_CMS"/>
      <BindItem id="item44" compid="divData.form.divDataRight.form.cfNO_ACCOUNT_CHA.form.CDTextBox" propid="value" datasetid="dsList" columnid="NO_ACCOUNT_CHA"/>
      <BindItem id="item45" compid="divData.form.divDataRight.form.cfNO_ACCOUNT_CHA.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_BANK_CHA"/>
      <BindItem id="item46" compid="divData.form.divDataRight.form.cfNO_ACCOUNT.form.CDTextBox" propid="value" datasetid="dsList" columnid="NO_ACCOUNT"/>
      <BindItem id="item47" compid="divData.form.divDataRight.form.cfNO_ACCOUNT.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_BANK"/>
      <BindItem id="item48" compid="divData.form.divDataRight.form.cfCNO_PARENTS.form.CDTextBox" propid="value" datasetid="dsList" columnid="NO_PARENTS"/>
      <BindItem id="item49" compid="divData.form.divDataRight.form.cfCNO_PARENTS.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_PARENTS"/>
      <BindItem id="item50" compid="divData.form.divDataRight.form.TeaRM_BIGO" propid="value" datasetid="dsList" columnid="RM_BIGO"/>
      <BindItem id="item1" compid="divData.form.divDataRight.form.txtQN_DEFFERED" propid="value" datasetid="dsList" columnid="QN_DEFFERED"/>
      <BindItem id="item17" compid="divData.form.divDataRight.form.txtDS_ACCOUNT" propid="value" datasetid="dsList" columnid="DS_ACCOUNT"/>
      <BindItem id="item18" compid="divData.form.divDataRight.form.mskAM_TRADE" propid="value" datasetid="dsList" columnid="AM_TRADE"/>
      <BindItem id="item35" compid="divData.form.divDataRight.form.cboYN_EZACOST" propid="value" datasetid="dsList" columnid="YN_EZACOST"/>
      <BindItem id="item51" compid="divData.form.divDataRight.form.cboYN_MAIN" propid="value" datasetid="dsList" columnid="YN_MAIN"/>
      <BindItem id="item52" compid="divData.form.divDataRight.form.cboYN_HANDO" propid="value" datasetid="dsList" columnid="YN_HANDO"/>
      <BindItem id="item53" compid="divData.form.divDataRight.form.mskAM_HALIN" propid="value" datasetid="dsList" columnid="AM_HALIN"/>
      <BindItem id="item54" compid="divData.form.divDataRight.form.mskRT_YEZA" propid="value" datasetid="dsList" columnid="RT_YEZA"/>
      <BindItem id="item55" compid="divData.form.divDataRight.form.cboYN_JANGDAN" propid="value" datasetid="dsList" columnid="YN_JANGDAN"/>
      <BindItem id="item56" compid="divData.form.divDataRight.form.cboCD_CURR" propid="value" datasetid="dsList" columnid="CD_CURR"/>
      <BindItem id="item57" compid="divData.form.divDataRight.form.mskAM_SANG_KRW" propid="value" datasetid="dsList" columnid="AM_SANG_KRW"/>
      <BindItem id="item58" compid="divData.form.divDataRight.form.mskAM_JAN_KRW" propid="value" datasetid="dsList" columnid="AM_JAN_KRW"/>
      <BindItem id="item59" compid="divData.form.divDataRight.form.mskAM_CHAIP_KRW" propid="value" datasetid="dsList" columnid="AM_CHAIP_KRW"/>
      <BindItem id="item60" compid="divData.form.divDataRight.form.mskRT_EXCH" propid="value" datasetid="dsList" columnid="RT_EXCH"/>
    </Bind>
  </Form>
</FDL>
