<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="1280" height="720" titletext="거래처계좌 등록" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" text="">
          <Layouts>
            <Layout>
              <Static id="staCorpCd" taborder="6" text="법인코드" left="0" top="10.0" width="92" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCorpCd" CDTextWidth="70" taborder="0" left="staCorpCd:0.0" top="10.0" width="270" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="sta02" taborder="5" text="사용여부" left="928" top="10.0" width="92" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Combo id="cboYN_USE" taborder="4" text="전체" left="sta02:0" top="10.0" width="70" height="24.0" innerdataset="dsYN_TERM" datacolumn="VALUE" codecolumn="CODE" index="0" value="" onitemchanged="fnSearchInit"/>
              <Static id="staTY_USE" taborder="7" text="계좌구분" left="362" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Combo id="cboAccntGb" taborder="1" text="" left="454" top="10.0" width="140" height="24.0" innerdataset="dsAccntGb" codecolumn="CD_CODE" datacolumn="DS_CODE" value="A" index="0" onitemchanged="fnSearchInit"/>
              <Static id="staYN_USE00" taborder="8" text="변경일자" left="599" top="9" width="92" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Calendar id="ctclDT_FROM" taborder="2" left="686" top="10" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" width="105"/>
              <Static id="staDT_DATE" taborder="9" text="~" left="791" top="10" width="30.0" height="24.0" cssclass="sta_WF_AC"/>
              <Calendar id="ctclDT_TO" taborder="3" left="821" top="10" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	this.fnSetCombo();	

	if (this.gfnIsNull(this.ccfCorpCd.form.CDTextBox.value)) {
		this.dsSearch.setColumn(0, "CD_CORP" , this.AuthClient.CD_CORP);
		this.dsSearch.setColumn(0, "DS_CORP" , this.AuthClient.DS_CORP);
	}	
	this.dsSearch.setColumn(0, "YN_USE" , 'Y');
	// 거래처코드에 포커스추가
	//this.ccfDeptCode.form.CDTextBox.setFocus();
}; 


/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 ************************************************************************/
this.fnSetButton = function() {
};

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {

	this.btnDocQ       = this.gfnFormButtonAdd("btnDocQ"    , "fnAprvDocQ");		// 결재문서조회 버튼
	this.btnFileUpload = this.gfnFormButtonAdd("btnFileUpload", "fnbtnAllFileDown"); // 첨부파일
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	
	this.ccfCorpCd = this.divSearch.form.ccfCorpCd;
	this.cboAccntGb = this.divSearch.form.cboAccntGb;
	
	this.dxGrid = this.divData.form.objGrid;
	this.grSearch = this.FormInfo.GR_SEARCH;
	this.cdGroup = this.gfnIsNull(this.AuthClient.CD_GROUP) ? "" : this.AuthClient.CD_GROUP;			// 그룹코드
	
}

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.ccfCorpCd.CodeFindName = "DZX_CFCORP";

	this.ccfCorpCd.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	this.gfnGridInit(this.dxGrid, this.dsList, "DF", "DFL_ACCOUNTSELECT");
		
	this.dxGrid.addEventHandler("onselectchanged", this.fnGrid_RowCellChanged, this);
	// BUTTON, BUTTON-IN 처리
	this.dxGrid.ExpandUp = "fnGrid_ExpandUp";	

}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	
	this.dsSelect.addColumn("CD_CORP", "string"); 
	this.dsSelect.addColumn("TY_GUBUN", "string"); 
	this.dsSelect.addColumn("DT_FROM", "string"); 
	this.dsSelect.addColumn("DT_TO", "string"); 
	this.dsSelect.addColumn("YN_USE", "string"); 
		

}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP")); 
	this.dsSelect.setColumn(0, "TY_GUBUN", this.dsSearch.getColumn(0, "TY_GUBUN")); 
	this.dsSelect.setColumn(0, "DT_FROM", this.dsSearch.getColumn(0, "DT_FROM")); 
	this.dsSelect.setColumn(0, "DT_TO", this.dsSearch.getColumn(0, "DT_TO")); 
	this.dsSelect.setColumn(0, "YN_USE", this.dsSearch.getColumn(0, "YN_USE")); 	
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
} 

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	if (this.gfnIsNull(this.ccfCorpCd.form.CDTextBox.text)) {
		this.gfnAlert("법인코드가 입력되지 않았습니다.");
		this.ccfCorpCd.form.CDTextBox.setFocus();
		return false;
	}

	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
	
	}
	
	else if(svcID == "combo") {
		if (errorCode == 0) {
			var nrow = this.dsAccntGb.insertRow(0)
			this.dsAccntGb.setColumn(nrow, "CD_CODE", '');
			this.dsAccntGb.setColumn(nrow, "DS_CODE", '전체');
			this.cboAccntGb.set_index(0);			
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {

	if (id == "ccfCorpCd") {
		dsUserParam.setColumn(nrow, "CD_GROUP", this.cdGroup);
	}
	
	return true;
} 

this.fnGrid_ExpandUp = function(obj:nexacro.Grid, e:nexacro.GridMouseEventInfo) {

	var colnm = this.gfnGridGetBindColumnNameByIndex(obj, e.cell);
	
	if(colnm == "URL_PROOF") {
		// 최초 작성시엔 NO_SEQ가 없기 때문에 저장 후에 파일 첨부를 진행하여야 함.
		// CD_DIR에 넣어줄 값이 없기에 저장 후 진행!
		if(this.gfnGetFlag(this.dsList, e.row) == "I"){
			this.gfnAlert("저장 후 파일첨부 진행.");
			return false;
		}
	
	    var cdGubun = "DF01";
		var cdDir = "NO_ACCOUNT";		
	
		var fileManager = {};
		fileManager.CD_GUBUN = cdGubun;
		fileManager.CD_DIR = [this.dsList.getColumn(this.dsList.rowposition, cdDir)];
		fileManager.IS_READONLY = false;

		this.gfnFileManager(fileManager, "fnFileCallback");
	}
}

 
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 // 셀 수정가능 여부 (반드시 EnterCell에서 처리할것)
// cell 수정안되는것만 return false 할것
// 마지막에 return true 해버리면 전체 컬럼 수정가능해져버림
this.fnUpdateStatusExtendButton = function() {
	var nrow = this.dsList.rowposition;
	var bEnable = (nrow > 0) ? true : false;

	this.btnDocQ.set_enable(bEnable && this.dsList.getColumn(nrow, "BTN_DOC_Q") == "Y");
	
}

this.fnGrid_RowCellChanged = function(obj:nexacro.Grid,e:nexacro.GridSelectEventInfo)
{
	if (!this.gfnGridIsRow(this.dxGrid)) return;
	
	this.fnUpdateStatusExtendButton();
};
 
 /************************************************************************
 * 전자결재
 ************************************************************************/

// 결재문서조회 버튼
this.fnAprvDocQ = function(obj:nexacro.Button, e:nexacro.ClickEventInfo) {
	var cd_corp = this.dsList.getColumn(this.dsList.rowposition, "CD_CORP");
	var no_aprv = this.dsList.getColumn(this.dsList.rowposition, "NO_APRV");
	var no_doc = this.dsList.getColumn(this.dsList.rowposition, "NO_DOC");

	if(this.gfnIsNull(no_aprv) || this.gfnIsNull(no_doc)){
		return; 
	}

	var oParams = {
		CD_CORP: cd_corp,
		NO_APRV: no_aprv,
	}
	
	trace("CD_CORP->" + cd_corp);
	trace("NO_APRV->" + no_aprv);

	this.gfnAprvDoc(oParams, this.fnAprvDocQCallback);
}

this.fnAprvDocQCallback = function() {
	console.log('fnAprvDocQCallback');
	//alert('fnAprvDocQCallback');
}


/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		this.gfnSetFormStatus(this);
		this.gfnGridClear(this.dxGrid);
	}
};


// 첨부파일 전체 다운로드 
this.fnbtnAllFileDown = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if(!this.gfnGridIsRow(this.dxGrid)) return;
	
	if(this.dsList.getCaseCount("CHK == '1' && "+this.ucFlag+" != '#'") == 0){
		this.gfnAlert("첨부파일 다운로드 할 행을 선택하세요.");
		return false;
	}
	
	this.fileRef = [];
	for (var i=0; i < this.dsList.rowcount; i++) {
		if (this.dsList.getColumn(i, "CHK") == 1) {	
			this.fileRef.push(this.dsList.getColumn(i, "NO_ACCOUNT"));
		}
	}	
	
	this.fileGubun = "DF01";
	
	var fileManager = {};
	fileManager.CD_GUBUN = this.fileGubun;
	fileManager.CD_DIR = [];  
	fileManager.IS_READONLY = true;
	fileManager.CD_REF = [this.fileRef.join(','), ''];

	this.gfnFileManager(fileManager, "fnFileCallback");	
	
}


this.fnSetCombo = function() {
	
	this.dsCombo = new Dataset();
	this.dsCombo.addColumn("CD_SYSTEM", "string");
	this.dsCombo.addColumn("CD_TYPE", "string");
	this.dsCombo.addColumn("ID_GROUP", "string");
	
	// 계좌구분
	this.dsCombo.addRow();
	this.dsCombo.setColumn(0, "CD_SYSTEM", "DF");
	this.dsCombo.setColumn(0, "CD_TYPE", "01");
	this.dsCombo.setColumn(0, "ID_GROUP", this.idGroup);
	
	var strSvcId    = "combo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "combo=dsCombo";
	var outData     = "dsAccntGb=combo0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DFLPR_ACCOUNT_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo</Col>
            <Col id="SP">DFXPR_COMBO_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsYN_TERM">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="VALUE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE"/>
            <Col id="VALUE">전체</Col>
          </Row>
          <Row>
            <Col id="CODE">N</Col>
            <Col id="VALUE">N</Col>
          </Row>
          <Row>
            <Col id="CODE">Y</Col>
            <Col id="VALUE">Y</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="fnSearchInit">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="DS_CORP" type="STRING" size="256"/>
          <Column id="TY_GUBUN" type="STRING" size="256"/>
          <Column id="DT_FROM" type="STRING" size="256"/>
          <Column id="DT_TO" type="STRING" size="256"/>
          <Column id="YN_USE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsCheckAcntCms">
        <ColumnInfo>
          <Column id="TY_GUBUN" type="STRING" size="256"/>
          <Column id="NO_ACCOUNT" type="STRING" size="256"/>
          <Column id="CD_OWNER" type="STRING" size="256"/>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="ER_CODE" type="STRING" size="256"/>
          <Column id="ER_MSG" type="STRING" size="256"/>
          <Column id="NM_BRANCH" type="STRING" size="256"/>
          <Column id="ID_USER" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsAccntGb">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ctclDT_FROM" propid="value" datasetid="dsSearch" columnid="DT_FROM"/>
      <BindItem id="item1" compid="divSearch.form.ctclDT_TO" propid="value" datasetid="dsSearch" columnid="DT_TO"/>
      <BindItem id="item3" compid="divSearch.form.ccfCorpCd.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item4" compid="divSearch.form.ccfCorpCd.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_CORP"/>
      <BindItem id="item2" compid="divSearch.form.cboAccntGb" propid="value" datasetid="dsSearch" columnid="TY_GUBUN"/>
      <BindItem id="item5" compid="divSearch.form.cboYN_USE" propid="value" datasetid="dsSearch" columnid="YN_USE"/>
    </Bind>
  </Form>
</FDL>
