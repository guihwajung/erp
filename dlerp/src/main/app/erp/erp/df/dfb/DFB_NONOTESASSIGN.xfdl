<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="470" height="300" maxwidth="470" maxheight="300" titletext="어음번호 입력" onload="form_onload">
    <Layouts>
      <Layout>
        <Static id="staTITLE" taborder="2" text="어음번호입력" left="0" top="0" width="100%" height="30" cssclass="sta_TITLE_Bg" textAlign="left"/>
        <Static id="staSUBTITLE" taborder="3" text="어음번호를 입력하세요." left="10" top="staTITLE:10" width="410" height="30" cssclass="sta_WF_tablelabel" textAlign="left"/>
        <Static id="sta00" taborder="0" text="입력대상어음건수" left="10" top="staSUBTITLE:10" width="100" height="20" textAlign="right"/>
        <Edit id="txtNO_CHK" taborder="5" left="sta00:10" top="staSUBTITLE:10" height="20" autoselect="true" width="200" readonly="true" textAlign="right"/>
        <Static id="sta01_1" taborder="10" text="건" left="txtNO_CHK:5" top="staSUBTITLE:10" width="20" height="20"/>
        <Static id="sta01" taborder="9" text="출금당좌계좌" left="10" top="sta00:10" width="100" height="20" textAlign="right" cssclass="sta_WF_tablelabelE"/>
        <Div id="cfNO_ACCOUNT" CDTextWidth="60" taborder="6" left="sta01:10" top="sta00:10" width="300" height="20" url="cmm::cmmCodeFind.xfdl"/>
        <Static id="sta02" taborder="8" text="시작어음번호" left="10" top="sta01:10" width="100" height="20" textAlign="right" cssclass="sta_WF_tablelabelE"/>
        <Static id="sta03" taborder="7" text="선택하신 자금집행내역에 시작어음번호부터 대상건수에 자동 맵핑합니다." left="10" top="sta02:10" width="430" height="20"/>
        <Button id="btnSave" taborder="1" text="확인" left="35%" top="sta03:20" width="60" height="20" onclick="divData_btnSave_onclick"/>
        <Button id="btnCancel" taborder="4" text="취소" left="btnSave:10" top="sta03:20" width="60" height="20" onclick="divData_btnCancel_onclick"/>
        <Edit id="cfFR_NOTESNUM" taborder="11" left="120" top="140" height="20" autoselect="true" width="200" readonly="false" textAlign="right" autoskip="false" inputtype="digit"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

var CD_BANK = "";
var CD_MANAGEBANK = "";
var CD_CORP = "";

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	// 이전 화면에서 데이터 받기.
	this.txtNO_CHK.set_value(this.getOwnerFrame().iSelect);
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {

}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {	
	this.ctxtCD_BANK = '';
	this.ctxtCD_SIDEBANK = '';
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.cfNO_ACCOUNT.CodeFindName = "DFX_CFNO_ACCOUNT";
	this.cfNO_ACCOUNT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.cfNO_ACCOUNT.AfterCDTextChanged = "fnAfterCDTextChanged";
	
	//this.cfFR_NOTESNUM.CodeFindName = "DFX_CFNO_NOTES_BANK";
	//this.cfFR_NOTESNUM.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	
	this.dsSelect.addColumn("NO_NOTES", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	
}

 /*
 *	입력 버튼
 */
this.fnAdd = function() {
	
}

 /*
 *	저장 버튼
 */
this.fnSave = function() {
	
}



/*
 *	삭제 버튼
 */
this.fnDel = function() {
	
}


/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}
/************************************************************************
 * Validate
 ************************************************************************/
this.fnSelectValidate = function() {
	if(this.gfnIsNull(this.cfNO_ACCOUNT.form.CDTextBox.value)) {
		this.gfnAlert("출금당좌계좌를 입력하세요.");
		return false;
	}
	
	if(this.gfnIsNull(this.cfFR_NOTESNUM.value)) {
		this.gfnAlert("시작어음번호를 입력하세요.");
		return false;
	}
	
	if (this.cfFR_NOTESNUM.value.length < 3) {
		this.gfnAlert("시작어음번호를 3자리 이상 입력하세요.");
		return false;		
	}
	//trace(this.cfFR_NOTESNUM.value.length);
	//trace(this.cfFR_NOTESNUM.value);
	
	return true;
}
/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
*/
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.fnSaveCallback();
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	
	if (id == "cfNO_ACCOUNT") {
		dsUserParam.setColumn(nrow, "GUBUN", "NOTE");		
		dsUserParam.setColumn(nrow, "CD_CORP", this.getOwnerFrame().CD_CORP);		
	}
	
// 	if (id == "cfFR_NOTESNUM") {
// 		if (!this.gfnIsNull(this.cfNO_ACCOUNT.form.CDTextBox.value)) {
// 			dsUserParam.setColumn(nrow, "TY_USE", 'N');
// 			dsUserParam.setColumn(nrow, "CD_BANK", CD_BANK);
// 			dsUserParam.setColumn(nrow, "CD_SIDEBANK", CD_MANAGEBANK);
// 			dsUserParam.setColumn(nrow, "CD_CORP", CD_CORP);		
// 			dsUserParam.setColumn(nrow, "NO_ACCOUNT", this.cfNO_ACCOUNT.form.CDTextBox.value);
// 		} else {
// 			this.gfnAlert("먼저 출금계좌를 선택하여주십시오.");
// 			return false;		
// 		}
// 	}
	
	return true;
}

this.fnAfterCDTextChanged = function(id, codeFindData) {
	var arr = codeFindData;
	
	if(id == "cfNO_ACCOUNT") {
		if(arr.length > 0) {
			CD_BANK = codeFindData[0].CD_BANK;
			CD_MANAGEBANK = codeFindData[0].CD_MANAGEBANK;
			CD_CORP = this.getOwnerFrame().CD_CORP;
		}
	}
}

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
 
// 저장 버튼 클릭
this.divData_btnSave_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if (!this.fnSelectValidate()) return false;
	
	var json = {};
	
	json.FR_NOTESNUM = this.cfFR_NOTESNUM.value;
	json.TY_GUBUN = "15";
	json.CD_BANK = CD_BANK;
	json.CD_SIDEBANK = CD_MANAGEBANK;
	json.NO_ACCOUNT = this.cfNO_ACCOUNT.form.CDTextBox.value;
	
	json.totalCount = this.getOwnerFrame().iSelect;
	//json.NO_NOTES_LIST = this.dsList;
	
	
	//trace(this.parent.parent.parent.form.opener.dsNoNoteList);
	//trace(this.getOwnerFrame().dsNoNoteList.saveXML());		
	//this.parent.parent.parent.form.opener.dsNoNoteList.copyData(this.dsList);

	
	this.getParentContext().close(JSON.stringify(json));
	
};

// this.fnSavePrcss = function() {
// 	if (val) {
// 		this.fnSaveCallback("", true);
// 	}
// }

this.fnSaveCallback = function(strId, val) {
	//if(val == true) {
		var json = {};
		
		json.FR_NOTESNUM = this.cfFR_NOTESNUM.value;
		json.TY_GUBUN = 15;
		json.CD_BANK = this.ctxtCD_BANK;
		json.CD_SIDEBANK = this.ctxtCD_SIDEBANK;
		json.NO_ACCOUNT = this.cfNO_ACCOUNT.form.CDTextBox.value;
		
		json.totalCount = this.getOwnerFrame().iSelect;
		//json.NO_NOTES_LIST = this.dsList;
		
		
		trace(this.parent.parent.parent.form.opener.dsNoNoteList);
		//trace(this.getOwnerFrame().dsNoNoteList.saveXML());		
		this.parent.parent.parent.form.opener.dsNoNoteList.copyData(this.dsList);

		
		this.getParentContext().close(JSON.stringify(json));
	//}
}

// 취소 버튼 클릭
this.divData_btnCancel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	// this.close()가 작동하지 않았고, 
	// 부모의 callback 함수로 데이터를 넘겨주기 위해 작성되었습니다.
	this.getParentContext().close(false);
};
]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DFBPR_NONOTESASSIGN_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
  </Form>
</FDL>
