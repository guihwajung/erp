<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="450" height="160" maxwidth="450" maxheight="220" titletext="브랜치전송" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divData" taborder="0" left="0" top="0" bottom="0" right="0" cssclass="div_DATA_Bg" text="">
          <Layouts>
            <Layout>
              <Static id="staTITLE" taborder="0" text="CMS전송" left="10" width="90%" height="30" cssclass="sta_TITLE_Bg" textAlign="left" top="0"/>
              <Static id="sta01" taborder="3" text="입금계좌" left="20" top="69" width="80" height="30" textAlign="right" visible="false" cssclass="sta_WF_tablelabelE"/>
              <Static id="staBg2" taborder="4" left="sta01:-1" top="69" right="20" height="30" cssclass="sta_WF_tablebg" visible="false"/>
              <Static id="sta02" taborder="5" text="출금계좌" left="20" top="sta01:-1" width="80" height="30" textAlign="right" visible="false" cssclass="sta_WF_tablelabelE"/>
              <Static id="staBg00" taborder="6" left="sta02:-1" top="staBg2:-1" right="20" height="30" cssclass="sta_WF_tablebg" visible="false"/>
              <Div id="cfCD_IN" CodeFindName="DFX_CFNO_ACCOUNT" CDTextWidth="150" taborder="7" left="sta01:5" top="74" width="285" height="20" url="cmm::cmmCodeFind.xfdl" visible="false" text=""/>
              <Div id="cfCD_OUT" CodeFindName="DFX_CFNO_ACCOUNT" CDTextWidth="150" taborder="8" left="sta02:5" top="staBg2:4" width="285" height="20" url="cmm::cmmCodeFind.xfdl" visible="false"/>
              <Button id="btnSave" taborder="1" text="전송" left="36.89%" top="119" width="50" height="20" onclick="divData_btnSave_onclick"/>
              <Button id="btnCancel" taborder="2" text="취소" left="50.00%" top="119" width="50" height="20" onclick="divData_btnCancel_onclick"/>
              <Static id="staBg00_00" taborder="9" left="99" top="40" right="20" height="30" cssclass="sta_WF_tablebg"/>
              <Static id="sta02_00" taborder="10" text="이체구분" left="20" top="40" width="80" height="30" textAlign="right" onclick="divData_sta02_00_onclick" cursor="none" cssclass="sta_WF_tablelabelE"/>
              <Combo id="ccboTY_TRAN" taborder="11" left="105" top="45" width="150" height="20" innerdataset="dsTY_TRAN" codecolumn="CD_CODE" datacolumn="DS_CODE" cursor="none"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	this.fnSetCombo();

};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {

}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {

};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
// 	this.cfCD_IN = this.divData.form.cfCD_IN;
// 	this.cfCD_OUT = this.divData.form.cfCD_OUT;
	this.ccboTY_TRAN = this.divData.form.ccboTY_TRAN;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
// 	this.cfCD_IN.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
// 	this.cfCD_OUT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
// 	
// 	this.cfCD_IN.AfterCDTextChanged = "fnAfterCDTextChanged";
// 	this.cfCD_OUT.AfterCDTextChanged = "fnAfterCDTextChanged";
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	
// 	this.dsInsert = new Dataset();
// 	this.dsInsert.addColumn("NO_IN", "string");
// 	this.dsInsert.addColumn("TY_IN", "string");
// 	this.dsInsert.addColumn("CD_IN", "string");
// 	this.dsInsert.addColumn("CD_OWNER", "string");
// 	this.dsInsert.addColumn("NO_OUT", "string");
// 	this.dsInsert.addColumn("TY_OUT", "string");
// 	this.dsInsert.addColumn("CD_OUT", "string");
    
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 
 this.fnSetCombo = function() {
	
	this.dsCombo = new Dataset();
	this.dsCombo.addColumn("CD_SYSTEM", "string");
	this.dsCombo.addColumn("CD_TYPE", "string");
	
	this.dsCombo.addRow();
	this.dsCombo.setColumn(0, "CD_SYSTEM", "DF");
	this.dsCombo.setColumn(0, "CD_TYPE", "S5");
	
	var strSvcId    = "combo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "combo=dsCombo";
	var outData     = "dsTY_TRAN=combo0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}
 
 /*
 *	입력 버튼
 */
this.fnAdd = function() {
	

}

 /*
 *	저장 버튼
 */
this.fnSave = function() {
	
}



/*
 *	삭제 버튼
 */
this.fnDel = function() {
	//this.gfnGridDel(this.dxGrid);
}


/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	//this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}
/************************************************************************
 * Validate
 ************************************************************************/

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
*/
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	 if(svcID == "combo") {
	    trace("0 = " + this.getOwnerFrame().CD_CURR);
		if (this.getOwnerFrame().YN_FRGN == "Y" && this.getOwnerFrame().CD_CURR != "KRW") {
			this.divData.form.ccboTY_TRAN.set_index(1);		
			
		}
		else {
			this.divData.form.ccboTY_TRAN.set_index(0);
		}
	}else
		{
			this.gfnAlert(errorMsg);
		}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
// this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
// 	if (id == "cfCD_IN") {
// 		dsUserParam.setColumn(nrow, "GUBUN", "DF");
// 		dsUserParam.setColumn(nrow, "CD_CORP", this.getOwnerFrame().CD_CORP);
// 	}
// 	else if (id == "cfCD_OUT") {
// 		dsUserParam.setColumn(nrow, "GUBUN", "MAIN");
// 		dsUserParam.setColumn(nrow, "CD_CORP", this.getOwnerFrame().CD_CORP);
// 	}
// 	return true;
// }
// 
// this.fnAfterCDTextChanged = function(id, codeFindData) {
// 	var arr = codeFindData;
// 	
// 	if (id == "cfCD_IN") {
// 		if(arr.length > 0) {
// 			this.dsList.setColumn(0, "NO_IN", arr[0]["NO_ACCOUNT"]);  // 입금계좌
// 			this.dsList.setColumn(0, "TY_IN", arr[0]["TY_GUBUN"]);	  // 입금계좌구분
// 			this.dsList.setColumn(0, "CD_IN", arr[0]["CD_BANK"]);	  // 입금은행
// 			this.dsList.setColumn(0, "CD_OWNER", arr[0]["CD_OWNER"]); // 입금계좌소유주
// 			
// 		}
// 	}
// 	
// 	if (id == "cfCD_OUT") {
// 		if(arr.length > 0) {
// 			this.dsList.setColumn(0, "NO_OUT", arr[0]["NO_ACCOUNT"]); // 출금계좌
// 			this.dsList.setColumn(0, "TY_OUT", arr[0]["TY_GUBUN"]);   // 출금계좌구분
// 			this.dsList.setColumn(0, "CD_OUT", arr[0]["CD_BANK"]);	  // 출금은행 
// 			
// 		}
// 	}	
// }

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
 
// 저장 버튼 클릭
this.divData_btnSave_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if(!this.fnSaveValidate()) return;
	
	var json = {};
	json.TY_TRAN = this.dsList.getColumn(0, "TY_TRAN");
	this.getParentContext().close(JSON.stringify(json));		
};

// 취소 버튼 클릭
this.divData_btnCancel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.getParentContext().close(false);
};

this.fnSaveValidate = function() {

	var strMsg = "";
	
// 	if(this.gfnIsNull(this.dsList.getColumn(0, "NO_IN"))) {
// 		strMsg += "입금계좌는 반드시 입력 하셔야 합니다.\n";
// 	}
// 	if(this.gfnIsNull(this.dsList.getColumn(0, "NO_OUT"))) {
// 		strMsg += "출금계좌는 반드시 입력 하셔야 합니다.\n";
// 	}
	if(this.gfnIsNull(this.dsList.getColumn(0, "TY_TRAN"))) {
		strMsg += "이체구분은 반드시 선택 하셔야 합니다.\n";
	}
	
	if(strMsg.length > 0) {
		this.gfnAlert(strMsg);
		return false;
	}

	return true;
}

]]></Script>
    <Objects>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">insert</Col>
            <Col id="SP">DFBPR_BRANCH_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo</Col>
            <Col id="SP">DZXPR_COMBO_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsList">
        <ColumnInfo>
          <Column id="TY_TRAN" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_TRAN"/>
    </Objects>
    <Bind>
      <BindItem id="item1" compid="divData.form.cfCD_IN.form.CDTextBox" propid="value" datasetid="dsList" columnid="NO_IN"/>
      <BindItem id="item2" compid="divData.form.cfCD_OUT.form.CDTextBox" propid="value" datasetid="dsList" columnid="NO_OUT"/>
      <BindItem id="item0" compid="divData.form.ccboTY_TRAN" propid="value" datasetid="dsList" columnid="TY_TRAN"/>
    </Bind>
  </Form>
</FDL>
