<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="프로젝트별실적조회" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static id="staCD_CORP" taborder="2" text="법인코드" left="0.0" top="10.0" width="105.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="cfCD_CORP" CDTextWidth="70" taborder="0" left="staCD_CORP:0.0" top="10.0" width="269" height="24.0" url="cmm::cmmCodeFind.xfdl" text=""/>
              <Static id="staYM_WORK" taborder="3" text="조회년월" left="cfCD_CORP:0.0" top="10.0" width="105.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="caYM_WORK" taborder="1" left="staYM_WORK:0.0" top="10.0" width="80" height="24.0" url="cmm::cmmCalMM.xfdl"/>
              <Static id="staCD_PERIOD" taborder="4" text="구분" left="caYM_WORK:0.0" top="10.0" height="24.0" width="105.0" cssclass="sta_WF_SchLabelE"/>
              <Combo id="cboTyGubun" taborder="5" text="자금집행일" left="staCD_PERIOD:0.0" top="10.0" width="90" height="24.0" innerdataset="dsTY_GUBUN" datacolumn="DS_CODE" codecolumn="CD_CODE" index="-1" value="자금집행일" onitemchanged="fnSearchInit"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="1" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0" oncelldblclick="divData_objGrid_oncelldblclick" oncellclick="divData_objGrid_oncellclick"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

var	vRow;
var	vCell; 
// 참고화면 DFA_RESULTL 
this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();				
	this.fnSetCombo();
}; 

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 ************************************************************************/
this.fnSetButton = function() {
	// 입력,저장,삭제 버튼 비활성화 처리
//  	this.FormBtns.Add.set_enable(false);
//  	this.FormBtns.Save.set_enable(false);
//  	this.FormBtns.Del.set_enable(false);
};

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnDetailResult = this.gfnFormButtonAdd("btnDetailResult", "fnDetailResult", "상세실적조회"); 
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	
	// 조회조건
	this.cfCD_CORP  = this.divSearch.form.cfCD_CORP;		// 법인코드
	this.caYM_WORK = this.divSearch.form.caYM_WORK;			// 계획년월
	
	this.dxGrid = this.divData.form.objGrid;				// 그리드
	this.grSearch = this.FormInfo.GR_SEARCH;				// 권한?
	this.cdGroup = this.gfnIsNull(this.AuthClient.CD_GROUP) ? "" : this.AuthClient.CD_GROUP;			// 그룹코드
}

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
		
	this.cfCD_CORP.CodeFindName = "DZX_CFCORP";								// 법인코드(조회조건)
	this.cfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.cfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";

	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DF", "DFA_PROJECT");		

	// 법인코드 init
	if (this.gfnIsNull(this.cfCD_CORP.form.CDTextBox.value)) {
		this.cfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP); 
		this.cfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);	
	}	

	// 계획년월
	var vToday = this.gfnGetDate().substr(0,6);
	this.dsSearch.setColumn(0, "YM_WORK", vToday);
	
	
	// 권한체크
	if (nexacro.toNumber(this.grSearch) >= 2) {
		this.cfCD_CORP.set_enable(false);
	}	
	
	// 법인코드 포커스추가
	this.cfCD_CORP.form.CDTextBox.setFocus();	
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("YM_WORK", "string");
	this.dsSelect.addColumn("TY_DEPT", "string");

}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "YM_WORK", this.dsSearch.getColumn(0, "YM_WORK"));
	this.dsSelect.setColumn(0, "CD_CORP", this.dsSearch.getColumn(0, "CD_CORP"));
	this.dsSelect.setColumn(0, "TY_DEPT", this.dsSearch.getColumn(0, "TY_DEPT"));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {

}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
}

/*
 *	저장 버튼
 */
this.fnSave = function(svcId) {

}


/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {	

	if (this.gfnIsNull(this.dsSearch.getColumn(0, "YM_WORK"))) {
		this.gfnAlert("조회년월을 입력 하세요.");
		this.caYM_WORK.form.TextBox.setFocus();
		return false;
	}

	return true;
};


/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);
	}
	else if (svcID == "combo") {
	    this.dsTY_GUBUN.insertRow(0);	
		this.dsTY_GUBUN.setColumn(0,"CD_CODE","");
		this.dsTY_GUBUN.setColumn(0,"DS_CODE","전체");
		
		this.divSearch.form.cboTyGubun.set_index(0);
	}
	
}


/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {

	var cdCorp = this.cfCD_CORP.form.CDTextBox.value;
	
	switch(id) {
	
	// 법인코드(조회조건)
	case "cfCD_CORP": 	
		dsUserParam.setColumn(nrow, "CD_GROUP", this.cdGroup);	
		break;
		
	default:
	}	
	return true;
}
 
this.fnAfterCDTextChanged = function(id, codeFindData) {
	
	var arr = codeFindData;
	
	switch(id) {
	
	// 법인코드(조회조건)
	case "cfCD_CORP":
		break;		
		
	default:
	}	
	return true;
}

 
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		this.gfnSetFormStatus(this);
		this.gfnGridClear(this.dxGrid);
	}
};

// 상세실적조회
this.fnDetailResult = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {

	if(!this.gfnGridIsRow(this.dxGrid)) {
		this.gfnAlert("데이터를 선택후 진행해주세요.");
		return false; 
	}

	this.fnOpenDfaSuji(vRow, vCell);
}

this.fnSetCombo = function() {
	
	this.dsCombo = new Dataset();
	this.dsCombo.addColumn("CD_SYSTEM", "string");
	this.dsCombo.addColumn("CD_TYPE", "string");
	
	this.dsCombo.addRow();
	this.dsCombo.setColumn(0, "CD_SYSTEM", "DF");
	this.dsCombo.setColumn(0, "CD_TYPE", "AG");
	
	var strSvcId    = "combo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "combo=dsCombo";
	var outData     = "dsTY_GUBUN=combo0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};


this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};

this.divData_objGrid_oncelldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	this.fnOpenDfaSuji(vRow, vCell);	
};


this.fnOpenDfaSuji = function(nrow, ncell) {
	var colnm = this.gfnGridGetBindColumnNameByIndex(this.dxGrid, ncell);
	var tyPlan = this.dsList.getColumn(nrow, "TY_PLAN");	// 구분(계획/실적)
	var ymPlan = this.dsSearch.getColumn(0, "YM_WORK")		// 조회년월
	var param = {};

	param.CD_CORP = this.dsList.getColumn(nrow, "CD_CORP");
	param.DS_CORP = this.dsList.getColumn(nrow, "DS_CORP");
	param.CD_SUJI = this.dsList.getColumn(nrow, "CD_SUJI");
	param.DS_SUJI = this.dsList.getColumn(nrow, "DS_SUJI");
	param.FR_DATE = "";
	param.TO_DATE = this.gfnGetLastDate(ymPlan+"01");
	param.CD_DEPT = this.dsList.getColumn(nrow, "CD_DEPT");
	param.DS_DEPT = this.dsList.getColumn(nrow, "DS_DEPT");

	// 화면 오픈. 
	// CD_MODULE은 보통 같은 모듈에서 호출하는 경우가 많으니 this.FormInfo.CD_MODULE 사용
	// 타 모듈 화면 호출시 지정할것.
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DFA_SUJI", "fnPopCallBack", param);	
}

this.divData_objGrid_oncellclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	vRow = obj.currentrow;
	vCell = e.cell;
};
]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DFAPR_PROJECT_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo</Col>
            <Col id="SP">DZXPR_COMBO_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="YM_WORK" type="STRING" size="256"/>
          <Column id="DS_CORP" type="STRING" size="256"/>
          <Column id="TY_DEPT" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_GUBUN"/>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.cfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item4" compid="divSearch.form.caYM_WORK.form.TextBox" propid="value" datasetid="dsSearch" columnid="YM_WORK"/>
      <BindItem id="item1" compid="divSearch.form.cfCD_CORP.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_CORP"/>
      <BindItem id="item2" compid="divSearch.form.cboTyGubun" propid="value" datasetid="dsSearch" columnid="TY_DEPT"/>
    </Bind>
  </Form>
</FDL>
