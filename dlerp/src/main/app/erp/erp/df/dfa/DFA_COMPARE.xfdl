<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="1280" height="720" titletext="거래내역전표대사" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" text="">
          <Layouts>
            <Layout>
              <Static id="staCD_CORP" taborder="0" text="법인코드" left="0.0" top="10.0" width="92.0" height="24.0" rtl="false" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_CORP" CodeFindName="DZX_CFCORP" CDTextWidth="50" taborder="1" left="staCD_CORP:0.0" top="10.0" width="280" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staDT_FROM" taborder="5" text="기준일자" left="ccfCD_CORP:0.0" top="10.0" width="92.0" height="24.0" rtl="false" cssclass="sta_WF_SchLabelE"/>
              <Static id="staDT_REQ00" taborder="3" text="~" left="staDT_FROM:103" top="10.0" width="30.0" height="24.0" cssclass="sta_WF_AC"/>
              <Calendar id="ctclDT_TO" taborder="4" left="staDT_REQ00:-2" top="10" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" onchanged="fnSearchInit" width="105"/>
              <Calendar id="ctclDT_FROM" taborder="2" left="staDT_FROM:1" top="10" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" onchanged="fnSearchInit"/>
              <Static id="staNO_ACCOUNT" taborder="6" text="계좌번호" left="ctclDT_TO:4" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfNO_ACCOUNT" CodeFindName="DFX_CFACCOUNTNO_SUJI" CDTextWidth="110" taborder="7" left="staNO_ACCOUNT:1" top="10" width="280" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg" ondragmove="divData_ondragmove" text="">
          <Layouts>
            <Layout>
              <Div id="divSplitter" taborder="1" left="44.30%" top="0" width="5" height="100%" cursor="ew-resize" ondrag="divData_divSplitter_ondrag" cssclass="div_Splitter"/>
              <Div id="divDataLeft" taborder="0" left="0" top="0" bottom="0" right="divSplitter:5">
                <Layouts>
                  <Layout>
                    <Grid id="objGrid" taborder="0" left="0" top="5" bottom="0" right="0"/>
                  </Layout>
                </Layouts>
              </Div>
              <Div id="divDataRight" taborder="0" left="divSplitter:5" top="0" bottom="0" right="0">
                <Layouts>
                  <Layout>
                    <Grid id="objGridSub" sub="true" taborder="0" left="0" top="5" bottom="0" right="0" oncellclick="divData_divDataRight_objGridSub_oncellclick" BeforeUserDataSetParam="fnGrid_BeforeUserDataSetParam"/>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	//this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	var frame = this.getOwnerFrame();
	var today = this.gfnGetDate();
	
	if(!this.gfnIsNull(frame.CD_CORP) && !this.gfnIsNull(frame.NO_ACCOUNT) && !this.gfnIsNull(frame.GUBUN)){
		
		this.ccfCD_CORP.form.CDTextBox.set_value(frame.CD_CORP);
		this.ccfCD_CORP.form.DSTextBox.set_value(frame.DS_CORP);  	
	
		this.ccfNO_ACCOUNT.form.CDTextBox.set_value(frame.NO_ACCOUNT); 
		this.ccfNO_ACCOUNT.form.DSTextBox.set_value(frame.NM_ACCOUNT);		
		
		if(frame.GUBUN == "M"){ // DFA_MANNUAL 에서 호출
			this.dsSearch.setColumn(0, "DT_FROM", frame.DT_DATE);	
			this.dsSearch.setColumn(0, "DT_TO", frame.DT_DATE);			
		} else if(frame.GUBUN == "B"){  // DFA_BALANCE 에서 호출
			this.dsSearch.setColumn(0, "DT_FROM", frame.DT_FROM);	
			this.dsSearch.setColumn(0, "DT_TO", frame.DT_TO);			
		}
		
		this.FormBtns.Select.click();
	}else{		
		//this.dsSearch.setColumn(0, "YM_DATE", this.gfnAddDate(today, -1).substring(0,6));	
		this.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);		 // 법인코드	
		this.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP);
		
		this.dsSearch.setColumn(0, "DT_FROM", today.substring(0,6)+"01");	
		this.dsSearch.setColumn(0, "DT_TO", today.substring(0,8));			
	}
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 ************************************************************************/
this.fnSetButton = function() {
	this.FormBtns.Add.set_enable(false);
	this.FormBtns.Del.set_enable(false);
	this.FormBtns.Reset.set_enable(false);	
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결
 ************************************************************************/
this.fnSetExtendButton = function() {

};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;
	this.ctclDT_FROM = this.divSearch.form.ctclDT_FROM;
	this.ctclDT_TO = this.divSearch.form.ctclDT_TO;
	this.ccfNO_ACCOUNT = this.divSearch.form.ccfNO_ACCOUNT;
	
	this.dxGrid = this.divData.form.divDataLeft.form.objGrid;
	this.dxGridSub = this.divData.form.divDataRight.form.objGridSub;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {	
	this.gfnGridInit(this.dxGrid, this.dsList, "DF", "DFA_COMPARE1");	
	this.gfnGridInit(this.dxGridSub, this.dsListSub, "DF", "DFA_COMPARE2");
	
	this.ccfCD_CORP.BeforeUserDataSetParam = "fnBeforeUserDataSetParam"; // 법인
	this.ccfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";
	
	this.ccfNO_ACCOUNT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam"; // 계좌번호
	this.ccfNO_ACCOUNT.AfterCDTextChanged = "fnAfterCDTextChanged";
	
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("DT_FROM", "string");
	this.dsSelect.addColumn("DT_TO", "string");
	this.dsSelect.addColumn("NO_ACCOUNT", "string");	 
	
	this.dsSelectSub = new Dataset();
	this.dsSelectSub.addColumn("CD_CORP", "string");
	this.dsSelectSub.addColumn("DT_FROM", "string");
	this.dsSelectSub.addColumn("DT_TO", "string");
	this.dsSelectSub.addColumn("NO_ACCOUNT", "string");		

}

/************************************************************************
 * 버튼 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;	
	this.fnSelectSub();
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsList.clearData();
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
	this.dsSelect.setColumn(0, "DT_FROM", this.ctclDT_FROM.value);
	this.dsSelect.setColumn(0, "DT_TO", this.ctclDT_TO.value);
	this.dsSelect.setColumn(0, "NO_ACCOUNT", this.ccfNO_ACCOUNT.form.CDTextBox.value);	

	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
}

/*
 *	삭제 버튼
 */ 
this.fnDel = function() {
}

/*
 *	저장 버튼
 */ 
this.fnSave = function() {

}

/*
 *	엑셀 버튼
 */ 
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}
 
/************************************************************************
 * 서브 버튼 이벤트
 ************************************************************************/
this.fnSelectSub = function() {
	this.gfnGridBeforeSelect(this.dxGridSub);
	this.dsListSub.clearData();
	
	this.dsSelectSub.clearData();
	this.dsSelectSub.addRow();		
	
	this.dsSelectSub.setColumn(0, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
	this.dsSelectSub.setColumn(0, "DT_FROM", this.ctclDT_FROM.value);
	this.dsSelectSub.setColumn(0, "DT_TO", this.ctclDT_TO.value);
	this.dsSelectSub.setColumn(0, "NO_ACCOUNT", this.ccfNO_ACCOUNT.form.CDTextBox.value);	

	var strSvcId    = "selectSub";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "selectSub=dsSelectSub";
	var outData     = "dsListSub=selectSub0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;

	if (validate && this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
		validate = false;
		this.fnDtDateCallback = function() {
			return false;
		}
		this.gfnAlert("법인코드를 입력해주세요.", "fnDtDateCallback");
	}
	if (validate && (this.gfnIsNull(this.ctclDT_FROM.value) || this.gfnIsNull(this.ctclDT_TO.value))) {
		validate = false;
		this.fnDtDateCallback = function() {
			return false;
		}
		this.gfnAlert("기준일자를 입력해주세요.", "fnDtDateCallback");
	}
	if (validate && this.gfnIsNull(this.ccfNO_ACCOUNT.form.CDTextBox.value)) {
		validate = false;
		this.fnDtDateCallback = function() {
			return false;
		}
		this.gfnAlert("계좌번호를 입력해주세요.", "fnDtDateCallback");
	}	
	return validate;
};
/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);		
	}else if (svcID == "selectSub"){
		this.gfnGridAfterSelect(this.dxGridSub);		
	}
	this.fnSetButton();
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow)  {
	var cdCorp = this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value) ? "" : this.ccfCD_CORP.form.CDTextBox.value;
	
	// 법인코드
	if (id == "ccfCD_CORP") {
		dsUserParam.setColumn(nrow, "CD_GROUP", this.cdGroup);
	}
	
	if (id == "ccfNO_ACCOUNT") {
		dsUserParam.setColumn(nrow, "CD_CORP", cdCorp);		
	}
	return true;
}

this.fnAfterCDTextChanged = function(id) {
	this.fnSearchInit();
} 
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/


/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		this.gfnSetFormStatus(this);
		this.gfnGridClear(this.dxGrid);
		this.gfnGridClear(this.dxGridSub);
	}
}
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if (e.columnid == "DT_FROM" || e.columnid == "DT_TO") {							
		if (!this.gfnIsNull(this.dsSearch.getColumn(0, "DT_FROM")) && !this.gfnIsNull(this.dsSearch.getColumn(0, "DT_TO"))) {						
			if (this.dsSearch.getColumn(0, "DT_FROM") > this.dsSearch.getColumn(0, "DT_TO")) {					
				this.fnAlertCallback = function() {				
					this.dsSearch.setColumn(0, e.columnid, e.oldvalue);			
				}				
				this.gfnAlert("기간이 올바르지 않습니다. 다시 입력해주세요.", "fnAlertCallback");				
			}					
		}						
	}	
	
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
		this.gfnGridClear(this.dxGridSub);	
	}
};
this.divData_ondragmove = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
	if(e.userdata == "splitter") {
		this.divData.form.divSplitter.set_left(e.clientx);
		this.divData.form.resetScroll();
	}
};

this.divData_divSplitter_ondrag = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
	e.set_userdata("splitter");
	return true;
};]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DFAPR_COMPARE1_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">selectSub</Col>
            <Col id="SP">DFAPR_COMPARE2_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsListSub"/>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="DT_TO" type="STRING" size="256"/>
          <Column id="DT_FROM" type="STRING" size="256"/>
          <Column id="NO_ACCOUNT" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_CORP.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_CORP"/>
      <BindItem id="item1" compid="divSearch.form.ctclDT_TO" propid="value" datasetid="dsSearch" columnid="DT_TO"/>
      <BindItem id="item2" compid="divSearch.form.ctclDT_FROM" propid="value" datasetid="dsSearch" columnid="DT_FROM"/>
      <BindItem id="item3" compid="divSearch.form.ccfNO_ACCOUNT.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="NO_ACCOUNT"/>
    </Bind>
  </Form>
</FDL>
