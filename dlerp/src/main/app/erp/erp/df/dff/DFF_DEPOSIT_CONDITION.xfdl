<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="form" width="1280" height="720" titletext="예적금 약정현황 조회" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0" top="10" height="78.0" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static id="staCD_CORP" taborder="6" text="법인코드" left="0.0" top="10.0" width="92.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_CORP" CDTextWidth="70" taborder="0" left="staCD_CORP:0.0" top="10.0" width="270" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staCD_BANKITEM" taborder="4" text="금융상품" left="ccfCD_CORP:-362" top="staCD_CORP:10" width="92.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_BANKITEM" CDTextWidth="70" taborder="2" left="staCD_BANKITEM:0.0" top="staCD_CORP:10.0" width="270" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staNO_YEJUKUM" taborder="7" text="금융기관" left="ccfCD_BANKITEM:17" top="staCD_CORP:10" width="92.0" height="24.0" cssclass="sta_WF_SchLabel" tooltiptype="hover,mouseleave"/>
              <Div id="ccfCD_VENDOR" CDTextWidth="70" taborder="3" left="staNO_YEJUKUM:0" top="staCD_CORP:10" width="270" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staTY_EXPIRY" taborder="5" text="완료여부" left="ccfCD_VENDOR:-179" top="staCD_CORP:-24" width="92.0" height="24.0" textDecoration="none" cssclass="sta_WF_SchLabelE"/>
              <Static id="staCD_PERIOD" taborder="8" text="기준년월" left="381" top="10" height="24.0" right="800" cssclass="sta_WF_SchLabelE"/>
              <Div id="calYM_WORK" taborder="1" left="472" top="10" width="80" height="24.0" url="cmm::cmmCalMM.xfdl"/>
              <Combo id="cboTY_EXPIRY" taborder="9" text="진행중" left="652" top="10" width="91" height="24.0" codecolumn="CD_CODE" datacolumn="DS_CODE" value="N" index="-1" innerdataset="dsTY_EXPIRY" onitemchanged="fnSearchInit"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DFFPR_YEJUKUMCOND_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">combo</Col>
            <Col id="SP">DZXPR_COMBO_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_EXPIRY"/>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_CORP" type="STRING" size="256"/>
          <Column id="CD_BANKITEM" type="STRING" size="256"/>
          <Column id="CD_VENDOR" type="STRING" size="256"/>
          <Column id="TY_EXPIRY" type="STRING" size="256"/>
          <Column id="YM_WORK" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();	
	this.fnSetCombo();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
// 	this.FormBtns.Add.set_enable(false);
//  	this.FormBtns.Save.set_enable(false);
//  	this.FormBtns.Del.set_enable(false);
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btnAgrMntInf = this.gfnFormButtonAdd("btnAgrMntInf", "fnAgrMntInf")//, "약정정보"); 
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.ccfCD_CORP = this.divSearch.form.ccfCD_CORP;
	this.calYM_WORK  = this.divSearch.form.calYM_WORK;				// 기준년월
	this.ccfCD_BANKITEM = this.divSearch.form.ccfCD_BANKITEM;
	this.ccfCD_VENDOR = this.divSearch.form.ccfCD_VENDOR;
	this.cboTY_EXPIRY = this.divSearch.form.cboTY_EXPIRY;
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.ccfCD_CORP.CodeFindName = "DZX_CFCORP";
	this.ccfCD_BANKITEM.CodeFindName = "DFX_CFBANKITEM";
	this.ccfCD_VENDOR.CodeFindName = "DFX_CFVENDOR";

	this.ccfCD_CORP.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.ccfCD_BANKITEM.AfterCDTextChanged = "fnAfterCDTextChanged";
	this.ccfCD_VENDOR.AfterCDTextChanged = "fnAfterCDTextChanged";
	
	this.ccfCD_BANKITEM.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_VENDOR.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";

	this.gfnGridInit(this.dxGrid, this.dsList, "DF", "DFF_DEPOSIT_CONDITION");
	
	if (this.gfnIsNull(this.ccfCD_CORP.form.CDTextBox.value)) {
		this.ccfCD_CORP.form.DSTextBox.set_value(this.AuthClient.DS_CORP); 
		this.ccfCD_CORP.form.CDTextBox.set_value(this.AuthClient.CD_CORP);	
	}
	
	var vToday = this.gfnGetDate().substr(0,6);
	this.calYM_WORK.form.TextBox.set_value(vToday);		
	
	//this.cboTY_EXPIRY.set_index(0);
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_CORP", "string");
	this.dsSelect.addColumn("YM_WORK", "string");
	this.dsSelect.addColumn("CD_BANKITEM", "string");
	this.dsSelect.addColumn("CD_VENDOR", "string");
	this.dsSelect.addColumn("TY_EXPIRY", "string");

}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "CD_CORP", this.ccfCD_CORP.form.CDTextBox.value);
	this.dsSelect.setColumn(0, "YM_WORK", this.calYM_WORK.form.TextBox.value);
	this.dsSelect.setColumn(0, "CD_BANKITEM", this.ccfCD_BANKITEM.form.CDTextBox.value);	
	this.dsSelect.setColumn(0, "CD_VENDOR", this.ccfCD_VENDOR.form.CDTextBox.value);	
	this.dsSelect.setColumn(0, "TY_EXPIRY", this.divSearch.form.cboTY_EXPIRY.value);	
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	if (this.gfnIsNull(this.calYM_WORK.form.TextBox.value)) {
		this.gfnAlert("기준년월은 필수입력 입니다.");
		this.calYM_WORK.form.TextBox.setFocus();
		return false;
	}
	
	return true;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		if (this.dsList.rowcount == 0) {
			this.gfnAlert("자료가 존재하지 않습니다.");
		} else {
			this.gfnGridAfterSelect(this.dxGrid);	
		}
	}else if(svcID == "combo") {
		//  조회조건(완료여부)
		var iRow = this.dsTY_EXPIRY.insertRow(0);
		this.dsTY_EXPIRY.setColumn(iRow, "CD_CODE", "");
		this.dsTY_EXPIRY.setColumn(iRow, "DS_CODE", "전체");
		this.cboTY_EXPIRY.set_index(0);
	
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
 this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	
	var cdCorp = this.ccfCD_CORP.form.CDTextBox.value;
	
	if (id == "ccfCD_CORP") {
		dsUserParam.setColumn(nrow, "CD_GROUP", this.cdGroup);	
	}
	
	if (id == "ccfCD_BANKITEM") {
		dsUserParam.setColumn(nrow, "YN_USE", "");	
		dsUserParam.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
	}

	if (id == "ccfCD_VENDOR") {
		dsUserParam.setColumn(nrow, "TY_VENDOR1", "전체");
		dsUserParam.setColumn(nrow, "CD_CORP", cdCorp);			
	}
	return true;

};
 
this.fnAfterCDTextChanged = function(id, codeFindData) {
	if(id == "ccfCD_CORP") {
		this.ccfCD_BANKITEM.form.fnCodeFindClear();
		this.ccfCD_VENDOR.form.fnCodeFindClear();
		this.divSearch.form.cboTY_EXPIRY.set_value('N');
	}
	this.fnSearchInit();
}
 
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
/*
 *	조회 조건 변경시 초기화
 */
this.fnSearchInit = function(obj,e) {
	if(e == null || (e.pretext != e.posttext)) {
		// 폼상태 초기화
		this.gfnSetFormStatus(this);	
		this.gfnGridClear(this.dxGrid);
	}
};

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
		this.ccfCD_BANKITEM.form.fnCodeFindClear();
		this.ccfCD_VENDOR.form.fnCodeFindClear();
		this.divSearch.form.cboTY_EXPIRY.set_value('N');
	}
};

// 약정정보
this.fnAgrMntInf = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if(!this.gfnGridIsRow(this.dxGrid)) return;
	var param = {};
	
	param.CD_CORP = this.dsList.getColumn(this.dsList.rowposition, "CD_CORP");		// 법인코드
	param.DS_CORP = this.dsList.getColumn(this.dsList.rowposition, "DS_CORP");		// 법인명
	param.NO_YEJUKUM = this.dsList.getColumn(this.dsList.rowposition,"NO_YEJUKUM");	// 관리번호
	param.NM_YEJUKUM = this.dsList.getColumn(this.dsList.rowposition,"NM_YEJUKUM");	// 예적금명
	
	this.gfnFormOpen("DFF", "DFF_DEPOSIT_REG", "fnPopCallBack", param);
}


this.fnSetCombo = function() {
	
	this.dsCombo = new Dataset();
	this.dsCombo.addColumn("CD_SYSTEM", "string");
	this.dsCombo.addColumn("CD_TYPE", "string");

	this.dsCombo.addRow();
	this.dsCombo.setColumn(0, "CD_SYSTEM", "DF");
	this.dsCombo.setColumn(0, "CD_TYPE", "F9");	
	
	var strSvcId    = "combo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "combo=dsCombo";
	var outData     = "dsTY_EXPIRY=combo0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
};]]></Script>
  </Form>
</FDL>
