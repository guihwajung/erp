<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="입주종합현황" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg">
          <Layouts>
            <Layout>
              <Static id="staCD_ACNTUNIT" taborder="0" text="사업지코드" left="0.0" top="10.0" width="105.0" height="24.0" cssclass="sta_WF_SchLabelE"/>
              <Div id="ccfCD_ACNTUNIT" CodeFindName="DRX_CFACNTUNIT" CDTextWidth="70" taborder="1" left="staCD_ACNTUNIT:0.0" top="10.0" width="350" height="24.0" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staTY_BUNYANG" taborder="2" text="동층호" left="ccfCD_ACNTUNIT:0.0" top="10.0" width="105.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Edit id="ctxtNO_DONG" taborder="4" left="staTY_BUNYANG:0.0" top="10.0" width="40" height="24.0" onkillfocus="divSearch_ctxtNO_DONG_onkillfocus" maxlength="4" onkeyup="divSearch_ctxt_onkeyup"/>
              <Edit id="ctxtNO_FLOOR" taborder="5" left="ctxtNO_DONG:0.0" top="10.0" width="30" height="24.0" onkillfocus="divSearch_ctxtNO_FLOOR_onkillfocus" maxlength="2" onkeyup="divSearch_ctxt_onkeyup"/>
              <Edit id="ctxtNO_HO" taborder="6" left="ctxtNO_FLOOR:0.0" top="10.0" width="40" height="24.0" onkillfocus="divSearch_ctxtNO_HO_onkillfocus" maxlength="3" onkeyup="divSearch_ctxt_onkeyup"/>
              <Button id="cbtnNO_DONGHO" taborder="3" top="10.0" width="25" cssclass="btn_CF_Search" left="ctxtNO_HO:0.0" height="24.0" text="" onclick="divSearch_cbtnNO_DONGHO_onclick"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg" ondragmove="divData_ondragmove">
          <Layouts>
            <Layout>
              <Div id="divSplitter" taborder="1" left="20%" top="0" width="5" height="100%" background="skyblue" cursor="ew-resize" ondrag="divData_divSplitter_ondrag"/>
              <Div id="divDataLeft" taborder="0" left="0" top="0" bottom="0" right="divSplitter:5">
                <Layouts>
                  <Layout>
                    <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
                  </Layout>
                </Layouts>
              </Div>
              <Div id="divDataRight" taborder="0" left="divSplitter:5" top="0" bottom="0" right="0" text="" ondragmove="divDataRight_ondragmove">
                <Layouts>
                  <Layout>
                    <Div id="divDataTop" taborder="1" left="0" top="0" bottom="650" right="0" text="">
                      <Layouts>
                        <Layout>
                          <Static id="sta00" taborder="0" text="기본정보" left="0" top="0" width="100%" height="22" cssclass="sta_TITLE_Bg"/>
                        </Layout>
                      </Layouts>
                    </Div>
                    <Div id="divDataBottom" taborder="0" left="0" top="44" bottom="0" right="0">
                      <Layouts>
                        <Layout>
                          <Tab id="tabData" taborder="1" tabindex="0" left="0" top="0" bottom="0" right="0" onchanged="divData_tabData_onchanged">
                            <Tabpages>
                              <Tabpage id="tab1" text="융자신청">
                                <Layouts>
                                  <Layout>
                                    <Grid id="objGrid1" taborder="1" left="5" top="5" bottom="5" right="5"/>
                                  </Layout>
                                </Layouts>
                              </Tabpage>
                              <Tabpage id="tab2" text="후불제">
                                <Layouts>
                                  <Layout>
                                    <Grid id="objGrid2" taborder="1" left="5" top="5" bottom="5" right="5"/>
                                  </Layout>
                                </Layouts>
                              </Tabpage>
                              <Tabpage id="tab3" text="보증수수료">
                                <Layouts>
                                  <Layout>
                                    <Grid id="objGrid3" taborder="1" left="5" top="5" bottom="5" right="5"/>
                                  </Layout>
                                </Layouts>
                              </Tabpage>
                            </Tabpages>
                          </Tab>
                        </Layout>
                      </Layouts>
                    </Div>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();
			
this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	
	if (!this.gfnIsNull(this.getOwnerFrame().CD_ACNTUNIT)) {
		this.dsSearch.setColumn(0, "CD_ACNTUNIT", this.getOwnerFrame().CD_ACNTUNIT);
		this.dsSearch.setColumn(0, "DS_ACNTUNIT", this.getOwnerFrame().DS_ACNTUNIT);
		this.dsSearch.setColumn(0, "NO_DONG", this.getOwnerFrame().NO_DONG);
		this.dsSearch.setColumn(0, "NO_FLOOR", this.getOwnerFrame().NO_FLOOR);
		this.dsSearch.setColumn(0, "NO_HO", this.getOwnerFrame().NO_HO);
	}
	
	if (!this.gfnIsNull(this.dsSearch.getColumn(0, "CD_ACNTUNIT")))
		this.FormBtns.Select.click();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결
 ************************************************************************/
this.fnSetExtendButton = function() {
};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	this.tabData = this.divData.form.divDataRight.form.divDataBottom.form.tabData;
	
	this.dxGrid 	= this.divData.form.divDataLeft.form.objGrid;
	this.dxGrid1 	= this.divData.form.divDataRight.form.divDataBottom.form.tabData.tab1.form.objGrid1
	this.dxGrid2	= this.divData.form.divDataRight.form.divDataBottom.form.tabData.tab2.form.objGrid2
	this.dxGrid3	= this.divData.form.divDataRight.form.divDataBottom.form.tabData.tab3.form.objGrid3

	this.ccfCD_ACNTUNIT = this.divSearch.form.ccfCD_ACNTUNIT;	
	this.BtnSearch      = this.divSearch.form.cbtnNO_DONGHO;		// 동층호 돋보기버튼
	this.ctxtNO_DONG 	= this.divSearch.form.ctxtNO_DONG;
	this.ctxtNO_FLOOR 	= this.divSearch.form.ctxtNO_FLOOR;
	this.ctxtNO_HO 		= this.divSearch.form.ctxtNO_HO;
	this.ctclDT_FROM    = this.divSearch.form.ctclDT_FROM;		// 신청기간(시작)
	this.ctclDT_TO      = this.divSearch.form.ctclDT_TO;		// 신청기간(종료)
	
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {	

	this.ccfCD_ACNTUNIT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_ACNTUNIT.AfterCDTextChanged = "fnAfterCDTextChanged";
	
	this.gfnGridInit(this.dxGrid, this.dsLeft, "DR", "DRB_LOAN_SELECTLEFT"); 		// selectleft
	this.gfnGridInit(this.dxGrid1, this.dsList, "DR", "DRB_LOANAPPLY"); 		// select
	this.gfnGridInit(this.dxGrid2, this.dsList1, "DR", "DRB_LOANINTERESTPAY"); 		// select1
	this.gfnGridInit(this.dxGrid3, this.dsList2, "DR", "DRB_LOANINTERESTPAY"); 		// select2
		
	this.dxGrid.addEventHandler("onselectchanged", this.fnGrid_RowCellChanged, this);
	this.dxGrid1.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam"; //융자사코드
	this.dxGrid2.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam"; //융자사코드
	this.dxGrid3.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam"; //융자사코드
	
	// 동층호 팝업 호출.
	this.BtnSearch.addEventHandler("onclick", this.divSearch_cbtnNO_DONGHO_onclick, this);	
}

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	
	this.dsSelectLeft = new Dataset();
	this.dsSelectLeft.addColumn("CD_ACNTUNIT", "string");
	this.dsSelectLeft.addColumn("TY_GUBUN", "string");
	this.dsSelectLeft.addColumn("NO_CHASU", "string");
	this.dsSelectLeft.addColumn("NO_DONG", "string");
	this.dsSelectLeft.addColumn("NO_FLOOR", "string");
	this.dsSelectLeft.addColumn("NO_HO", "string");
	
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("CD_ACNTUNIT", "string");
	this.dsSelect.addColumn("TY_GUBUN", "string");
	this.dsSelect.addColumn("NO_CHASU", "string");
	this.dsSelect.addColumn("NO_DONG", "string");
	this.dsSelect.addColumn("NO_FLOOR", "string");
	this.dsSelect.addColumn("NO_HO", "string");
	this.dsSelect.addColumn("NO_UNIONMEMBER", "string");
	this.dsSelect.addColumn("DT_FROM", "string");
	this.dsSelect.addColumn("DT_TO", "string");
	
	this.dsSelect1 = new Dataset();
	this.dsSelect1.addColumn("CD_ACNTUNIT", "string");
	this.dsSelect1.addColumn("TY_GUBUN", "string");
	this.dsSelect1.addColumn("NO_CHASU", "string");
	this.dsSelect1.addColumn("NO_DONG", "string");
	this.dsSelect1.addColumn("NO_FLOOR", "string");
	this.dsSelect1.addColumn("NO_HO", "string");
	this.dsSelect1.addColumn("NO_UNIONMEMBER", "string");
	this.dsSelect1.addColumn("DT_FROM", "string");
	this.dsSelect1.addColumn("DT_TO", "string");
	this.dsSelect1.addColumn("TY_SEARCH", "string");
	
	this.dsSelect2 = new Dataset();
	this.dsSelect2.addColumn("CD_ACNTUNIT", "string");
	this.dsSelect2.addColumn("TY_GUBUN", "string");
	this.dsSelect2.addColumn("NO_CHASU", "string");
	this.dsSelect2.addColumn("NO_DONG", "string");
	this.dsSelect2.addColumn("NO_FLOOR", "string");
	this.dsSelect2.addColumn("NO_HO", "string");
	this.dsSelect2.addColumn("NO_UNIONMEMBER", "string");
	this.dsSelect2.addColumn("DT_FROM", "string");
	this.dsSelect2.addColumn("DT_TO", "string");
	this.dsSelect2.addColumn("TY_SEARCH", "string");
	
	this.dsInsert = new Dataset();
	this.dsInsert.addColumn("CD_ACNTUNIT", "string");
	this.dsInsert.addColumn("TY_GUBUN", "string");
	this.dsInsert.addColumn("NO_CHASU", "string");
	this.dsInsert.addColumn("NO_DONG", "string");
	this.dsInsert.addColumn("NO_HOSU", "string");
	this.dsInsert.addColumn("NO_UNIONMEMBER", "string");
	this.dsInsert.addColumn("TY_LOAN", "string");
	this.dsInsert.addColumn("NO_LOAN", "string");
	this.dsInsert.addColumn("AM_APPLY", "int");
	this.dsInsert.addColumn("DT_APPLY", "string");
	this.dsInsert.addColumn("CD_VENDOR", "string");
	this.dsInsert.addColumn("TY_INTEREST", "string");
	this.dsInsert.addColumn("DS_REMARK", "string");
	this.dsInsert.addColumn("ID_INSERT", "string");
	this.dsInsert.addColumn("AM_REPLY", "int");
	this.dsInsert.addColumn("NO_ACCOUNT", "string");
	
	this.dsUpdate = new Dataset();
	this.dsUpdate.addColumn("CD_ACNTUNIT", "string");
	this.dsUpdate.addColumn("TY_GUBUN", "string");
	this.dsUpdate.addColumn("NO_CHASU", "string");
	this.dsUpdate.addColumn("NO_DONG", "string");
	this.dsUpdate.addColumn("NO_HOSU", "string");
	this.dsUpdate.addColumn("NO_UNIONMEMBER", "string");
	this.dsUpdate.addColumn("TY_LOAN", "string");
	this.dsUpdate.addColumn("NO_LOAN", "string");
	this.dsUpdate.addColumn("AM_APPLY", "int");
	this.dsUpdate.addColumn("DT_APPLY", "string");
	this.dsUpdate.addColumn("CD_VENDOR", "string");
	this.dsUpdate.addColumn("TY_INTEREST", "string");
	this.dsUpdate.addColumn("DS_REMARK", "string");
	this.dsUpdate.addColumn("ID_UPDATE", "string");
	this.dsUpdate.addColumn("AM_REPLY", "int");
	this.dsUpdate.addColumn("NO_ACCOUNT", "string");
	
	this.dsDelete = new Dataset();
	this.dsDelete.addColumn("CD_ACNTUNIT"   , "string");
	this.dsDelete.addColumn("TY_GUBUN"      , "string");
	this.dsDelete.addColumn("NO_CHASU"      , "string");
	this.dsDelete.addColumn("NO_DONG"		, "string");
	this.dsDelete.addColumn("NO_HOSU"		, "string");
	this.dsDelete.addColumn("NO_UNIONMEMBER", "string");
	this.dsDelete.addColumn("TY_LOAN"		, "string");
	this.dsDelete.addColumn("NO_LOAN"		, "string");
	
	this.dsInsert1 = new Dataset();
	this.dsInsert1.addColumn("CD_ACNTUNIT", "string");
	this.dsInsert1.addColumn("TY_GUBUN", "string");
	this.dsInsert1.addColumn("NO_CHASU", "string");
	this.dsInsert1.addColumn("NO_DONG", "string");
	this.dsInsert1.addColumn("NO_HOSU", "string");
	this.dsInsert1.addColumn("NO_UNIONMEMBER", "string");
	this.dsInsert1.addColumn("TY_LOAN", "string");
	this.dsInsert1.addColumn("NO_LOAN", "string");
	this.dsInsert1.addColumn("CD_VENDOR", "string");
	this.dsInsert1.addColumn("DT_RECEIPT", "string");
	this.dsInsert1.addColumn("AM_INTEREST", "bigdecimal");
	this.dsInsert1.addColumn("RT_INTEREST", "bigdecimal");
	this.dsInsert1.addColumn("ID_INSERT", "string");
	this.dsInsert1.addColumn("TY_INTEREST", "string");
	
	this.dsUpdate1 = new Dataset();
	this.dsUpdate1.addColumn("CD_ACNTUNIT", "string");
	this.dsUpdate1.addColumn("TY_GUBUN", "string");
	this.dsUpdate1.addColumn("NO_CHASU", "string");
	this.dsUpdate1.addColumn("NO_DONG", "string");
	this.dsUpdate1.addColumn("NO_HOSU", "string");
	this.dsUpdate1.addColumn("NO_UNIONMEMBER", "string");
	this.dsUpdate1.addColumn("TY_LOAN", "string");
	this.dsUpdate1.addColumn("NO_LOAN", "string");
	this.dsUpdate1.addColumn("CD_VENDOR", "string");
	this.dsUpdate1.addColumn("DT_RECEIPT", "string");
	this.dsUpdate1.addColumn("AM_INTEREST", "bigdecimal");
	this.dsUpdate1.addColumn("RT_INTEREST", "bigdecimal");
	this.dsUpdate1.addColumn("ID_UPDATE", "string");
	this.dsUpdate1.addColumn("TY_INTEREST", "string");
	
	this.dsDelete1 = new Dataset();
	this.dsDelete1.addColumn("CD_ACNTUNIT", "string");
	this.dsDelete1.addColumn("TY_GUBUN", "string");
	this.dsDelete1.addColumn("NO_CHASU", "string");
	this.dsDelete1.addColumn("NO_DONG", "string");
	this.dsDelete1.addColumn("NO_HOSU", "string");
	this.dsDelete1.addColumn("NO_UNIONMEMBER", "string");
	this.dsDelete1.addColumn("TY_LOAN", "string");
	this.dsDelete1.addColumn("NO_LOAN", "string");
	this.dsDelete1.addColumn("DT_RECEIPT", "string");
	this.dsDelete1.addColumn("AM_INTEREST", "bigdecimal");
	this.dsDelete1.addColumn("RT_INTEREST", "bigdecimal");
	this.dsDelete1.addColumn("TY_INTEREST", "string");
	
	this.dsInsert2 = new Dataset();
	this.dsInsert2.addColumn("CD_ACNTUNIT", "string");
	this.dsInsert2.addColumn("TY_GUBUN", "string");
	this.dsInsert2.addColumn("NO_CHASU", "string");
	this.dsInsert2.addColumn("NO_DONG", "string");
	this.dsInsert2.addColumn("NO_HOSU", "string");
	this.dsInsert2.addColumn("NO_UNIONMEMBER", "string");
	this.dsInsert2.addColumn("TY_LOAN", "string");
	this.dsInsert2.addColumn("NO_LOAN", "string");
	this.dsInsert2.addColumn("CD_VENDOR", "string");
	this.dsInsert2.addColumn("DT_RECEIPT", "string");
	this.dsInsert2.addColumn("AM_INTEREST", "bigdecimal");
	this.dsInsert2.addColumn("RT_INTEREST", "bigdecimal");
	this.dsInsert2.addColumn("ID_INSERT", "string");
	this.dsInsert2.addColumn("TY_INTEREST", "string");
	
	this.dsUpdate2 = new Dataset();
	this.dsUpdate2.addColumn("CD_ACNTUNIT", "string");
	this.dsUpdate2.addColumn("TY_GUBUN", "string");
	this.dsUpdate2.addColumn("NO_CHASU", "string");
	this.dsUpdate2.addColumn("NO_DONG", "string");
	this.dsUpdate2.addColumn("NO_HOSU", "string");
	this.dsUpdate2.addColumn("NO_UNIONMEMBER", "string");
	this.dsUpdate2.addColumn("TY_LOAN", "string");
	this.dsUpdate2.addColumn("NO_LOAN", "string");
	this.dsUpdate2.addColumn("CD_VENDOR", "string");
	this.dsUpdate2.addColumn("DT_RECEIPT", "string");
	this.dsUpdate2.addColumn("AM_INTEREST", "bigdecimal");
	this.dsUpdate2.addColumn("RT_INTEREST", "bigdecimal");
	this.dsUpdate2.addColumn("ID_UPDATE", "string");
	this.dsUpdate2.addColumn("TY_INTEREST", "string");
	
	this.dsDelete2 = new Dataset();
	this.dsDelete2.addColumn("CD_ACNTUNIT", "string");
	this.dsDelete2.addColumn("TY_GUBUN", "string");
	this.dsDelete2.addColumn("NO_CHASU", "string");
	this.dsDelete2.addColumn("NO_DONG", "string");
	this.dsDelete2.addColumn("NO_HOSU", "string");
	this.dsDelete2.addColumn("NO_UNIONMEMBER", "string");
	this.dsDelete2.addColumn("TY_LOAN", "string");
	this.dsDelete2.addColumn("NO_LOAN", "string");
	this.dsDelete2.addColumn("DT_RECEIPT", "string");
	this.dsDelete2.addColumn("AM_INTEREST", "bigdecimal");
	this.dsDelete2.addColumn("RT_INTEREST", "bigdecimal");
	this.dsDelete2.addColumn("TY_INTEREST", "string");
}

/************************************************************************
 * 버튼 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelectLeft.clearData();
	this.dsSelectLeft.addRow();
	
	this.dsSelectLeft.setColumn(0, "CD_ACNTUNIT", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0,6));
	this.dsSelectLeft.setColumn(0, "TY_GUBUN", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6,1));
	this.dsSelectLeft.setColumn(0, "NO_CHASU", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7,2));
	this.dsSelectLeft.setColumn(0, "NO_DONG", this.dsSearch.getColumn(0, "NO_DONG"));
	this.dsSelectLeft.setColumn(0, "NO_FLOOR", this.dsSearch.getColumn(0, "NO_FLOOR"));
	this.dsSelectLeft.setColumn(0, "NO_HO", this.dsSearch.getColumn(0, "NO_HO"));

	var strSvcId    = "selectleft";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "selectleft=dsSelectLeft";
	var outData     = "dsLeft=selectleft0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

this.fnSelectDetail = function() {
	
	//조회관련 (일반컨트롤영역, MSG, 약정/수납내역, 예수금-계상내역,  융자내역-융자납부내역)
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	this.dsSelect.setColumn(0, "CD_ACNTUNIT", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0, 6));
	this.dsSelect.setColumn(0, "TY_GUBUN", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6, 1));
	this.dsSelect.setColumn(0, "NO_CHASU", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7, 2));
	this.dsSelect.setColumn(0, "NO_DONG", this.dsLeft.getColumn(this.dsLeft.rowposition, "NO_DONG"));
	this.dsSelect.setColumn(0, "NO_FLOOR", this.dsLeft.getColumn(this.dsLeft.rowposition, "NO_FLOOR"));
	this.dsSelect.setColumn(0, "NO_HO", this.dsLeft.getColumn(this.dsLeft.rowposition, "NO_HO"));
	this.dsSelect.setColumn(0, "NO_UNIONMEMBER", "");
	this.dsSelect.setColumn(0, "DT_FROM", "");
	this.dsSelect.setColumn(0, "DT_TO", "");
	
	this.dsSelect1.clearData();
	this.dsSelect1.addRow();
	this.dsSelect1.setColumn(0, "CD_ACNTUNIT", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0, 6));
	this.dsSelect1.setColumn(0, "TY_GUBUN", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6, 1));
	this.dsSelect1.setColumn(0, "NO_CHASU", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7, 2));
	this.dsSelect1.setColumn(0, "NO_DONG", this.dsLeft.getColumn(this.dsLeft.rowposition, "NO_DONG"));
	this.dsSelect1.setColumn(0, "NO_FLOOR", this.dsLeft.getColumn(this.dsLeft.rowposition, "NO_FLOOR"));
	this.dsSelect1.setColumn(0, "NO_HO", this.dsLeft.getColumn(this.dsLeft.rowposition, "NO_HO"));
	this.dsSelect1.setColumn(0, "NO_UNIONMEMBER", "");
	this.dsSelect1.setColumn(0, "DT_FROM", "");
	this.dsSelect1.setColumn(0, "DT_TO", "");
	this.dsSelect1.setColumn(0, "TY_SEARCH", "1");
	
	this.dsSelect2.clearData();
	this.dsSelect2.addRow();
	this.dsSelect2.setColumn(0, "CD_ACNTUNIT", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0, 6));
	this.dsSelect2.setColumn(0, "TY_GUBUN", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6, 1));
	this.dsSelect2.setColumn(0, "NO_CHASU", this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7, 2));
	this.dsSelect2.setColumn(0, "NO_DONG", this.dsLeft.getColumn(this.dsLeft.rowposition, "NO_DONG"));
	this.dsSelect2.setColumn(0, "NO_FLOOR", this.dsLeft.getColumn(this.dsLeft.rowposition, "NO_FLOOR"));
	this.dsSelect2.setColumn(0, "NO_HO", this.dsLeft.getColumn(this.dsLeft.rowposition, "NO_HO"));
	this.dsSelect2.setColumn(0, "NO_UNIONMEMBER", "");
	this.dsSelect2.setColumn(0, "DT_FROM", "");
	this.dsSelect2.setColumn(0, "DT_TO", "");
	this.dsSelect2.setColumn(0, "TY_SEARCH", "2");

	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect select1=dsSelect1 select2=dsSelect2";
	var outData     = "dsList=select0 dsList1=select10 dsList2=select20";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	if (this.tabData.tabindex == 0){
	
		var nrow = this.gfnGridAdd(this.dxGrid1,"");
		var hosu = (this.dsLeft.getColumn(this.dsLeft.rowposition, "NO_FLOOR").substr(1, 1) + 0 + this.dsLeft.getColumn(this.dsLeft.rowposition, "NO_HO").substr(2, 1));

		this.dsList.setColumn(nrow, "NO_DONG", this.dsLeft.getColumn(this.dsLeft.rowposition, "NO_DONG"));
 		this.dsList.setColumn(nrow, "HOSU", hosu);
		}
 	else if (this.tabData.tabindex == 1){
	
		var nrow = this.gfnGridAdd(this.dxGrid2,"");
		var hosu = (this.dsLeft.getColumn(this.dsLeft.rowposition, "NO_FLOOR").substr(1, 1) + 0 + this.dsLeft.getColumn(this.dsLeft.rowposition, "NO_HO").substr(2, 1));

		this.dsList1.setColumn(nrow, "NO_DONG", this.dsLeft.getColumn(this.dsLeft.rowposition, "NO_DONG"));
 		this.dsList1.setColumn(nrow, "HOSU", hosu);
		this.dsList1.setColumn(nrow, "TY_INTEREST", 1);
		
		}
	else if (this.tabData.tabindex == 2){
		
		var nrow = this.gfnGridAdd(this.dxGrid3,"");
		var hosu = (this.dsLeft.getColumn(this.dsLeft.rowposition, "NO_FLOOR").substr(1, 1) + 0 + this.dsLeft.getColumn(this.dsLeft.rowposition, "NO_HO").substr(2, 1));

		this.dsList2.setColumn(nrow, "NO_DONG", this.dsLeft.getColumn(this.dsLeft.rowposition, "NO_DONG"));
 		this.dsList2.setColumn(nrow, "HOSU", hosu);
		this.dsList2.setColumn(nrow, "TY_INTEREST", 2);
		}
}

/*
 *	삭제 버튼
 */ 
this.fnDel = function() {
	if (this.tabData.tabindex == 0) {
		this.gfnGridDel(this.dxGrid1);
	}
	else if (this.tabData.tabindex == 1) {
		this.gfnGridDel(this.dxGrid2);
 	}	
	else if (this.tabData.tabindex == 2) {
		this.gfnGridDel(this.dxGrid3);
	}
}

/*
 *	저장 버튼
 */ 
this.fnSave = function() {

	switch(this.fnGetTabIndex())
	{
		case 0 : 
		if (!this.gfnGridValidate(this.dxGrid1)) return false;
		
		this.dxGrid1.updateToDataset();
		
		this.dsInsert.clearData();
		this.dsUpdate.clearData();
		this.dsDelete.clearData();
		
		for (var i = 0; i < this.dsList.rowcount; i++) {
			var flag = this.gfnGetFlag(this.dsList, i);
			switch(flag) {
				case "I" :
						var nRow = this.dsInsert.addRow();
			
						this.dsInsert.setColumn(nRow, "CD_ACNTUNIT"   , this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0, 6));
						this.dsInsert.setColumn(nRow, "TY_GUBUN"      , this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6, 1));
						this.dsInsert.setColumn(nRow, "NO_CHASU"      , this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7, 2));
						this.dsInsert.setColumn(nRow, "NO_DONG"       , this.dsList.getColumn(i, "NO_DONG"));
						this.dsInsert.setColumn(nRow, "NO_HOSU"       , this.dsList.getColumn(i, "HOSU"));
						this.dsInsert.setColumn(nRow, "NO_UNIONMEMBER", "");
						this.dsInsert.setColumn(nRow, "TY_LOAN"       , this.dsList.getColumn(i, "TY_LOAN") || "");
						this.dsInsert.setColumn(nRow, "NO_LOAN"       , this.dsList.getColumn(i, "NO_LOAN"));
						this.dsInsert.setColumn(nRow, "AM_APPLY"      , this.dsList.getColumn(i, "AM_APPLY"));
						this.dsInsert.setColumn(nRow, "DT_APPLY"      , this.dsList.getColumn(i, "DT_APPLY"));
						this.dsInsert.setColumn(nRow, "CD_VENDOR"     , this.dsList.getColumn(i, "CD_VENDOR") || "");
						this.dsInsert.setColumn(nRow, "TY_INTEREST"   , this.dsList.getColumn(i, "TY_INTEREST"));
						this.dsInsert.setColumn(nRow, "DS_REMARK"     , this.dsList.getColumn(i, "DS_REMARK") || "");
						this.dsInsert.setColumn(nRow, "ID_INSERT"     , this.AuthClient.ID_USER);
						this.dsInsert.setColumn(nRow, "AM_REPLY"      , this.dsList.getColumn(i, "AM_REPLY") || "");
						this.dsInsert.setColumn(nRow, "NO_ACCOUNT"    , this.dsList.getColumn(i, "NO_ACCOUNT"));


					break;
				case "U" :	
						var nRow = this.dsUpdate.addRow();
			
						this.dsUpdate.setColumn(nRow, "CD_ACNTUNIT"   , this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0, 6));
						this.dsUpdate.setColumn(nRow, "TY_GUBUN"      , this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6, 1));
						this.dsUpdate.setColumn(nRow, "NO_CHASU"      , this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7, 2));
						this.dsUpdate.setColumn(nRow, "NO_DONG"       , this.dsList.getColumn(i, "NO_DONG"));
						this.dsUpdate.setColumn(nRow, "NO_HOSU"       , this.dsList.getColumn(i, "HOSU"));
						this.dsUpdate.setColumn(nRow, "NO_UNIONMEMBER", "");
						this.dsUpdate.setColumn(nRow, "TY_LOAN"       , this.dsList.getColumn(i, "TY_LOAN"));
						this.dsUpdate.setColumn(nRow, "NO_LOAN"       , this.dsList.getColumn(i, "NO_LOAN"));
						this.dsUpdate.setColumn(nRow, "AM_APPLY"      , this.dsList.getColumn(i, "AM_APPLY"));
						this.dsUpdate.setColumn(nRow, "DT_APPLY"      , this.dsList.getColumn(i, "DT_APPLY"));
						this.dsUpdate.setColumn(nRow, "CD_VENDOR"     , this.dsList.getColumn(i, "CD_VENDOR"));
						this.dsUpdate.setColumn(nRow, "TY_INTEREST"   , this.dsList.getColumn(i, "TY_INTEREST"));
						this.dsUpdate.setColumn(nRow, "DS_REMARK"     , this.dsList.getColumn(i, "DS_REMARK"));
						this.dsUpdate.setColumn(nRow, "ID_UPDATE"     , this.AuthClient.ID_USER);
						this.dsUpdate.setColumn(nRow, "AM_REPLY"      , this.dsList.getColumn(i, "AM_REPLY"));
						this.dsUpdate.setColumn(nRow, "NO_ACCOUNT"    , this.dsList.getColumn(i, "NO_ACCOUNT"));
					break;
				case "D" :	
						var nRow = this.dsDelete.addRow();
			
						this.dsDelete.setColumn(nRow, "CD_ACNTUNIT"   , this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0, 6));
						this.dsDelete.setColumn(nRow, "TY_GUBUN"      , this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6, 1));
						this.dsDelete.setColumn(nRow, "NO_CHASU"      , this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7, 2));
						this.dsDelete.setColumn(nRow, "NO_DONG"       , this.dsList.getColumn(i, "NO_DONG"));
						this.dsDelete.setColumn(nRow, "NO_HOSU"       , this.dsList.getColumn(i, "HOSU"));
						this.dsDelete.setColumn(nRow, "NO_UNIONMEMBER", "");
						this.dsDelete.setColumn(nRow, "TY_LOAN"       , this.dsList.getColumn(i, "TY_LOAN"));
						this.dsDelete.setColumn(nRow, "NO_LOAN"       , this.dsList.getColumn(i, "NO_LOAN"));
					break;
			}
		}
		
		case 1 :
		if (!this.gfnGridValidate(this.dxGrid2)) return false;
		
		this.dxGrid2.updateToDataset();
		
		this.dsInsert1.clearData();
		this.dsUpdate1.clearData();
		this.dsDelete1.clearData();
		
		for (var i = 0; i < this.dsList1.rowcount; i++) {
			var flag = this.gfnGetFlag(this.dsList1, i);
			switch(flag) {
				case "I" :
						var nRow = this.dsInsert1.addRow();

						this.dsInsert1.setColumn(nRow, "CD_ACNTUNIT"   , this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0, 6));
						this.dsInsert1.setColumn(nRow, "TY_GUBUN"      , this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6, 1));
						this.dsInsert1.setColumn(nRow, "NO_CHASU"      , this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7, 2));
						this.dsInsert1.setColumn(nRow, "NO_DONG"       , this.dsList1.getColumn(i, "NO_DONG"));
						this.dsInsert1.setColumn(nRow, "NO_HOSU"       , this.dsList1.getColumn(i, "HOSU"));
						this.dsInsert1.setColumn(nRow, "NO_UNIONMEMBER", "");
						this.dsInsert1.setColumn(nRow, "TY_LOAN"       , this.dsList1.getColumn(i, "TY_LOAN") || "");
						this.dsInsert1.setColumn(nRow, "NO_LOAN"       , this.dsList1.getColumn(i, "NO_LOAN"));
						this.dsInsert1.setColumn(nRow, "CD_VENDOR"     , this.dsList1.getColumn(i, "CD_VENDOR") || "");
						this.dsInsert1.setColumn(nRow, "DT_RECEIPT"     , this.dsList1.getColumn(i, "DT_RECEIPT") || "");
						this.dsInsert1.setColumn(nRow, "AM_INTEREST"     , this.dsList1.getColumn(i, "AM_INTEREST") || "");
						this.dsInsert1.setColumn(nRow, "RT_INTEREST"     , this.dsList1.getColumn(i, "RT_INTEREST") || "");
						this.dsInsert1.setColumn(nRow, "TY_INTEREST"   , this.dsList1.getColumn(i, "TY_INTEREST"));
						this.dsInsert1.setColumn(nRow, "ID_INSERT"     , this.AuthClient.ID_USER);
					break;
				case "U" :	
						var nRow = this.dsUpdate1.addRow();
			
						this.dsUpdate1.setColumn(nRow, "CD_ACNTUNIT"   , this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0, 6));
						this.dsUpdate1.setColumn(nRow, "TY_GUBUN"      , this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6, 1));
						this.dsUpdate1.setColumn(nRow, "NO_CHASU"      , this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7, 2));
						this.dsUpdate1.setColumn(nRow, "NO_DONG"       , this.dsList1.getColumn(i, "NO_DONG"));
						this.dsUpdate1.setColumn(nRow, "NO_HOSU"       , this.dsList1.getColumn(i, "HOSU"));
						this.dsUpdate1.setColumn(nRow, "NO_UNIONMEMBER", "");
						this.dsUpdate1.setColumn(nRow, "TY_LOAN"       , this.dsList1.getColumn(i, "TY_LOAN") || "");
						this.dsUpdate1.setColumn(nRow, "NO_LOAN"       , this.dsList1.getColumn(i, "NO_LOAN"));
						this.dsUpdate1.setColumn(nRow, "CD_VENDOR"     , this.dsList1.getColumn(i, "CD_VENDOR") || "");
						this.dsUpdate1.setColumn(nRow, "DT_RECEIPT"     , this.dsList1.getColumn(i, "DT_RECEIPT") || "");
						this.dsUpdate1.setColumn(nRow, "AM_INTEREST"     , this.dsList1.getColumn(i, "AM_INTEREST") || "");
						this.dsUpdate1.setColumn(nRow, "RT_INTEREST"     , this.dsList1.getColumn(i, "RT_INTEREST") || "");
						this.dsUpdate1.setColumn(nRow, "TY_INTEREST"   , this.dsList1.getColumn(i, "TY_INTEREST"));
						this.dsUpdate1.setColumn(nRow, "ID_UPDATE"     , this.AuthClient.ID_USER);
					break;
				case "D" :	
						var nRow = this.dsDelete1.addRow();
			
						this.dsDelete1.setColumn(nRow, "CD_ACNTUNIT"   , this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0, 6));
						this.dsDelete1.setColumn(nRow, "TY_GUBUN"      , this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6, 1));
						this.dsDelete1.setColumn(nRow, "NO_CHASU"      , this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7, 2));
						this.dsDelete1.setColumn(nRow, "NO_DONG"       , this.dsList1.getColumn(i, "NO_DONG"));
						this.dsDelete1.setColumn(nRow, "NO_HOSU"       , this.dsList1.getColumn(i, "HOSU"));
						this.dsDelete1.setColumn(nRow, "NO_UNIONMEMBER", "");
						this.dsDelete1.setColumn(nRow, "TY_LOAN"       , this.dsList1.getColumn(i, "TY_LOAN"));
						this.dsDelete1.setColumn(nRow, "NO_LOAN"       , this.dsList1.getColumn(i, "NO_LOAN"));
						this.dsDelete1.setColumn(nRow, "DT_RECEIPT"	, this.dsList1.getColumn(i, "DT_RECEIPT"));
						this.dsDelete1.setColumn(nRow, "AM_INTEREST", this.dsList1.getColumn(i, "AM_INTEREST"));
						this.dsDelete1.setColumn(nRow, "RT_INTEREST", this.dsList1.getColumn(i, "RT_INTEREST"));
						this.dsDelete1.setColumn(nRow, "TY_INTEREST", this.dsList1.getColumn(i, "TY_INTEREST"));
					break;
			}
		}
		
		case 2 :
		if (!this.gfnGridValidate(this.dxGrid3)) return false;
		
		this.dxGrid3.updateToDataset();
		
		this.dsInsert2.clearData();
		this.dsUpdate2.clearData();
		this.dsDelete2.clearData();
		
		for (var i = 0; i < this.dsList2.rowcount; i++) {
			var flag = this.gfnGetFlag(this.dsList2, i);
			switch(flag) {
				case "I" :
						var nRow = this.dsInsert2.addRow();
			
						this.dsInsert2.setColumn(nRow, "CD_ACNTUNIT"   , this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0, 6));
						this.dsInsert2.setColumn(nRow, "TY_GUBUN"      , this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6, 1));
						this.dsInsert2.setColumn(nRow, "NO_CHASU"      , this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7, 2));
						this.dsInsert2.setColumn(nRow, "NO_DONG"       , this.dsList2.getColumn(i, "NO_DONG"));
						this.dsInsert2.setColumn(nRow, "NO_HOSU"       , this.dsList2.getColumn(i, "HOSU"));
						this.dsInsert2.setColumn(nRow, "NO_UNIONMEMBER", "");
						this.dsInsert2.setColumn(nRow, "TY_LOAN"       , this.dsList2.getColumn(i, "TY_LOAN") || "");
						this.dsInsert2.setColumn(nRow, "NO_LOAN"       , this.dsList2.getColumn(i, "NO_LOAN"));
						this.dsInsert2.setColumn(nRow, "CD_VENDOR"     , this.dsList2.getColumn(i, "CD_VENDOR") || "");
						this.dsInsert2.setColumn(nRow, "DT_RECEIPT"     , this.dsList2.getColumn(i, "DT_RECEIPT") || "");
						this.dsInsert2.setColumn(nRow, "AM_INTEREST"     , this.dsList2.getColumn(i, "AM_INTEREST") || "");
						this.dsInsert2.setColumn(nRow, "RT_INTEREST"     , this.dsList2.getColumn(i, "RT_INTEREST") || "");
						this.dsInsert2.setColumn(nRow, "TY_INTEREST"   , this.dsList2.getColumn(i, "TY_INTEREST"));
						this.dsInsert2.setColumn(nRow, "ID_INSERT"     , this.AuthClient.ID_USER);
					break;
				case "U" :	
						var nRow = this.dsUpdate2.addRow();
			
						this.dsUpdate2.setColumn(nRow, "CD_ACNTUNIT"   , this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0, 6));
						this.dsUpdate2.setColumn(nRow, "TY_GUBUN"      , this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6, 1));
						this.dsUpdate2.setColumn(nRow, "NO_CHASU"      , this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7, 2));
						this.dsUpdate2.setColumn(nRow, "NO_DONG"       , this.dsList2.getColumn(i, "NO_DONG"));
						this.dsUpdate2.setColumn(nRow, "NO_HOSU"       , this.dsList2.getColumn(i, "HOSU"));
						this.dsUpdate2.setColumn(nRow, "NO_UNIONMEMBER", "");
						this.dsUpdate2.setColumn(nRow, "TY_LOAN"       , this.dsList2.getColumn(i, "TY_LOAN") || "");
						this.dsUpdate2.setColumn(nRow, "NO_LOAN"       , this.dsList2.getColumn(i, "NO_LOAN"));
						this.dsUpdate2.setColumn(nRow, "CD_VENDOR"     , this.dsList2.getColumn(i, "CD_VENDOR") || "");
						this.dsUpdate2.setColumn(nRow, "DT_RECEIPT"     , this.dsList2.getColumn(i, "DT_RECEIPT") || "");
						this.dsUpdate2.setColumn(nRow, "AM_INTEREST"     , this.dsList2.getColumn(i, "AM_INTEREST") || "");
						this.dsUpdate2.setColumn(nRow, "RT_INTEREST"     , this.dsList2.getColumn(i, "RT_INTEREST") || "");
						this.dsUpdate2.setColumn(nRow, "TY_INTEREST"   , this.dsList2.getColumn(i, "TY_INTEREST"));
						this.dsUpdate2.setColumn(nRow, "ID_UPDATE"     , this.AuthClient.ID_USER);
					break;
				case "D" :	
						var nRow = this.dsDelete2.addRow();
			
						this.dsDelete2.setColumn(nRow, "CD_ACNTUNIT"   , this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(0, 6));
						this.dsDelete2.setColumn(nRow, "TY_GUBUN"      , this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(6, 1));
						this.dsDelete2.setColumn(nRow, "NO_CHASU"      , this.dsSearch.getColumn(0, "CD_ACNTUNIT").substr(7, 2));
						this.dsDelete2.setColumn(nRow, "NO_DONG"       , this.dsList2.getColumn(i, "NO_DONG"));
						this.dsDelete2.setColumn(nRow, "NO_HOSU"       , this.dsList2.getColumn(i, "HOSU"));
						this.dsDelete2.setColumn(nRow, "NO_UNIONMEMBER", "");
						this.dsDelete2.setColumn(nRow, "TY_LOAN"       , this.dsList2.getColumn(i, "TY_LOAN"));
						this.dsDelete2.setColumn(nRow, "NO_LOAN"       , this.dsList2.getColumn(i, "NO_LOAN"));
						this.dsDelete2.setColumn(nRow, "DT_RECEIPT"	, this.dsList2.getColumn(i, "DT_RECEIPT"));
						this.dsDelete2.setColumn(nRow, "AM_INTEREST", this.dsList2.getColumn(i, "AM_INTEREST"));
						this.dsDelete2.setColumn(nRow, "RT_INTEREST", this.dsList2.getColumn(i, "RT_INTEREST"));
						this.dsDelete2.setColumn(nRow, "TY_INTEREST", this.dsList2.getColumn(i, "TY_INTEREST"));
					break;
			}
		}
	}
	
	if (this.dsInsert.rowcount == 0 && this.dsUpdate.rowcount == 0 && this.dsDelete.rowcount == 0 && this.dsInsert1.rowcount == 0 && this.dsUpdate1.rowcount == 0 && this.dsDelete1.rowcount == 0 && this.dsInsert2.rowcount == 0 && this.dsUpdate2.rowcount == 0 && this.dsDelete2.rowcount == 0) return;
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "insert=dsInsert update=dsUpdate delete=dsDelete insert1=dsInsert1 update1=dsUpdate1 delete1=dsDelete1 insert2=dsInsert2 update2=dsUpdate2 delete2=dsDelete2";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction(strSvcId, 		// transaction을 구분하기 위한 svc id값
						strSvcType, 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData, 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData, 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 		// 입력값으로 보낼 arguments, strFormData="20120607"
						callBackFnc); 	// 통신방법 정의 [생략가능]
};

/*
 *	엑셀 버튼
 */ 


/*
 *	출력 버튼
 */


/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {	

	if (this.gfnIsNull(this.dsSearch.getColumn(0, "CD_ACNTUNIT"))) {
		this.gfnAlert("사업지코드를 입력하지 않았습니다.");
		return false;
	}
}

/*
 *	저장 Validate
 */


/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "selectleft") {
		this.gfnGridAfterSelect(this.dxGrid);
	}
	
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid1);
	}
	
	if (svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if (id == "ccfCD_ACNTUNIT") {
		dsUserParam.setColumn(nrow, "CD_DEPT", this.AuthClient.CD_DEPT);
		dsUserParam.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
		dsUserParam.setColumn(nrow, "ID_GROUP", this.AuthClient.CD_CORP);
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
	}	
	return true;
};

this.fnAfterCDTextChanged = function(id, codeFindData) {
	var arr = codeFindData; 
	
	switch(id){
		case "ccfCD_ACNTUNIT" : 
			this.dsSearch.setColumn(0, "NO_DONG", "");
			this.dsSearch.setColumn(0, "NO_FLOOR", "");
			this.dsSearch.setColumn(0, "NO_HO", "");
			break;
	}
}

this.fnGrid_BeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	
	// 융자사코드
	if (id == "DRX_CFFINANCING_CODEFIND") {
		dsUserParam.setColumn(nrow, "CD_ACNTUNIT", this.dsSearch.getColumn(nrow, "CD_ACNTUNIT"));
		dsUserParam.setColumn(nrow, "YN_OPTION"  , "N");
	}
	
	return true;
}

/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
this.fnGrid_RowCellChanged = function(obj:nexacro.Grid,e:nexacro.GridSelectEventInfo)
{
    if ((obj.oldrow > -1 && obj.oldrow == e.row)
		|| (obj.oldrow == -1 && e.oldrow != e.row)) {
		
		this.fnSelectDetail();
		//this.fnTabDataIndexChanged();
		
		obj.oldrow = -1;
	}
};


/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.divSearch_cbtnNO_DONGHO_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	if (this.gfnIsNull(this.dsSearch.getColumn(0, "CD_ACNTUNIT"))) {
		this.fnVaidateCallback = function() {
			this.ccfCD_ACNTUNIT.form.CDTextBox.setFocus();
		}
		this.gfnAlert("사업자코드를 입력하세요!", "fnVaidateCallback");
		return;
	}
	
	var param = {};
	param.CD_ACNTUNIT = this.dsSearch.getColumn(0, "CD_ACNTUNIT");
	param.FLAG = "1";
	
	this.gfnFormOpen("DRI", "DRI_DONGHOCONTRACT", "fnDonghoPopupCallback", param);
};

this.fnDonghoPopupCallback = function(svcID, val) {
	if (!val) return;
	
	var json = JSON.parse(val);
	if (json.DONG.length > 0) {
		this.dsSearch.setColumn(0, "NO_DONG", json.DONG);
		this.dsSearch.setColumn(0, "NO_FLOOR", json.FLOOR);
		this.dsSearch.setColumn(0, "NO_HO", json.HO);
	}
}

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		if (this.tabData.tabindex == 0){
			this.gfnGridClear(this.dxGrid1);
		}
		else if (this.tabData.tabindex == 1){
			this.gfnGridClear(this.dxGrid2);
		}
		else if (this.tabData.tabindex == 2){
			this.gfnGridClear(this.dxGrid3);
		}
	}
};

// 탭 관련 관리함수
this.fnGetTabIndex = function()
{
	var index = -1;

	var text = this.divData.form.divDataRight.form.divDataBottom.form.tabData.tabpages[this.divData.form.divDataRight.form.divDataBottom.form.tabData.tabindex].text;
	
	switch(text)
	{
		case "융자신청" : index = 0;
			break;
		case "후불제" : index = 1;
			break;
		case "보증수수료" : index = 2;
			break;
	}
	
	return index;
}
/************************************************************************
 * 확장 버튼 실행
 ************************************************************************/
]]></Script>
    <Objects>
      <Dataset id="dsLeft"/>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">selectleft</Col>
            <Col id="SP">DRBPR_LOAN_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DRBPR_LOANAPPLY_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">select1</Col>
            <Col id="SP">DRBPR_LOANINTERESTPAY_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">select2</Col>
            <Col id="SP">DRBPR_LOANINTERESTPAY_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">insert</Col>
            <Col id="SP">DRBPR_LOANAPPLY_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">update</Col>
            <Col id="SP">DRBPR_LOANAPPLY_UPDATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">delete</Col>
            <Col id="SP">DRBPR_LOANAPPLY_DELETE</Col>
          </Row>
          <Row>
            <Col id="TARGET">insert1</Col>
            <Col id="SP">DRBPR_LOANINTERESTPAY_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">update1</Col>
            <Col id="SP">DRBPR_LOANINTERESTPAY_UPDATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">delete1</Col>
            <Col id="SP">DRBPR_LOANINTERESTPAY_DELETE</Col>
          </Row>
          <Row>
            <Col id="TARGET">insert2</Col>
            <Col id="SP">DRBPR_LOANINTERESTPAY_INSERT</Col>
          </Row>
          <Row>
            <Col id="TARGET">update2</Col>
            <Col id="SP">DRBPR_LOANINTERESTPAY_UPDATE</Col>
          </Row>
          <Row>
            <Col id="TARGET">delete2</Col>
            <Col id="SP">DRBPR_LOANINTERESTPAY_DELETE</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_ACNTUNIT" type="STRING" size="256"/>
          <Column id="DS_ACNTUNIT" type="STRING" size="256"/>
          <Column id="NO_DONG" type="STRING" size="256"/>
          <Column id="NO_FLOOR" type="STRING" size="256"/>
          <Column id="NO_HO" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="dsList1"/>
      <Dataset id="dsList2"/>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccfCD_ACNTUNIT.form.CDTextBox" propid="value" datasetid="dsSearch" columnid="CD_ACNTUNIT"/>
      <BindItem id="item1" compid="divSearch.form.ccfCD_ACNTUNIT.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_ACNTUNIT"/>
      <BindItem id="item3" compid="divSearch.form.ctxtNO_DONG" propid="value" datasetid="dsSearch" columnid="NO_DONG"/>
      <BindItem id="item5" compid="divSearch.form.ctxtNO_FLOOR" propid="value" datasetid="dsSearch" columnid="NO_FLOOR"/>
      <BindItem id="item6" compid="divSearch.form.ctxtNO_HO" propid="value" datasetid="dsSearch" columnid="NO_HO"/>
    </Bind>
  </Form>
</FDL>
