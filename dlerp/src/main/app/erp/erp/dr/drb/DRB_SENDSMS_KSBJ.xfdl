<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="DRB_COUNSEL" width="1440" height="750" onload="form_onload" titletext="계약자SMS송신">
    <Layouts>
      <Layout>
        <Div id="divData" taborder="0" left="5" top="5" bottom="5" right="5" cssclass="div_DATA_Bg" text="" ondragmove="divData_ondragmove">
          <Layouts>
            <Layout>
              <Div id="divDataLeft" taborder="0" left="554" top="40" width="516" bottom="5">
                <Layouts>
                  <Layout>
                    <Static id="staMessage" taborder="2" text="메세지" left="1" top="40" width="97" textAlign="right" bottom="5" cssclass="sta_WF_tablelabelE"/>
                    <Static id="staBgMessage" taborder="1" left="staMessage:-1" top="40" cssclass="sta_WF_tablebg" width="419" bottom="5"/>
                    <TextArea id="txtCONTENT" taborder="0" left="staMessage:4" top="45" value="" visible="true" enable="true" maxlength="1000" width="410" bottom="10"/>
                    <Static id="staMessage00" taborder="3" text="제목" left="1" top="0" width="97" textAlign="right" height="41" cssclass="sta_WF_tablelabelE"/>
                    <Static id="staBgMessage00" taborder="4" left="97" top="0" cssclass="sta_WF_tablebg" height="41" width="419"/>
                    <TextArea id="txtTITLE" taborder="5" left="102" top="5" value="" visible="true" enable="true" maxlength="1000" width="410" height="31"/>
                  </Layout>
                </Layouts>
              </Div>
              <Div id="divDataRight" taborder="1" top="40" width="340" left="1090" bottom="5">
                <Layouts>
                  <Layout>
                    <TextArea id="txtCONTENTPREVIEW" taborder="10" left="0" top="40" value="" visible="true" enable="true" maxlength="1000" readonly="true" width="340" bottom="5"/>
                    <TextArea id="txtTITLEPREVIEW" taborder="1" left="0" top="0" value="" visible="true" enable="true" maxlength="1000" readonly="true" height="38" width="340"/>
                  </Layout>
                </Layouts>
              </Div>
              <Div id="divDataCenter" taborder="2" left="10" top="40" width="536" bottom="5">
                <Layouts>
                  <Layout>
                    <Button id="btnDivSelect" taborder="3" text="☞부분선택" left="0" top="7" width="70" height="25" onclick="divData_divDataCenter_btnDivSelect_onclick"/>
                    <Button id="btnDivCancel" taborder="2" text="☞부분해제" left="btnDivSelect:10" top="7" width="70" height="25" onclick="divData_divDataCenter_btnDivCancel_onclick"/>
                    <Button id="btnDivDelete" taborder="1" text="☞부분삭제" left="btnDivCancel:10" top="7" width="70" height="25" onclick="divData_divDataCenter_btnDivDelete_onclick"/>
                    <Grid id="objGrid" taborder="0" left="0" top="btnDivSelect:43" width="525" bottom="5"/>
                    <Static id="staMessage00" taborder="4" text="송신자명" left="0" top="41" width="87" cssclass="sta_WF_tablelabel" textAlign="right" height="35"/>
                    <Static id="staBgMessage00_00" taborder="5" left="86" top="41" cssclass="sta_WF_tablebg" height="35" width="159" text="(주)굿센"/>
                    <Static id="staMessage00_00" taborder="6" text="송신자번호" left="244" top="41" width="87" cssclass="sta_WF_tablelabel" textAlign="right" height="35"/>
                    <Static id="staBgMessage00_00_00" taborder="7" left="330" top="41" cssclass="sta_WF_tablebg" height="35" width="195" text="02-750-8000"/>
                  </Layout>
                </Layouts>
              </Div>
              <Static id="staSMSDETAIL" taborder="3" text="SMS 발송 내용 확인" top="5" height="22" cssclass="sta_TITLE_Bg" width="341" left="1089"/>
              <Static id="staSMS00" taborder="4" text="SMS 발송 내용" left="560" top="5" width="35.94%" height="22" cssclass="sta_TITLE_Bg"/>
              <Static id="staSMS" taborder="5" text="SMS 수신자 정보" left="20" top="5" width="36.22%" height="22" cssclass="sta_TITLE_Bg"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsList">
        <ColumnInfo>
          <Column id="CONTENT" type="STRING" size="256"/>
          <Column id="TITLE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsListGrid">
        <ColumnInfo>
          <Column id="CHK" type="INT" size="256"/>
          <Column id="TOPHONE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">insert</Col>
            <Col id="SP">DZZPR_SMS_SEND3</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_ACNTUNIT" type="STRING" size="256"/>
          <Column id="DS_ACNTUNIT" type="STRING" size="256"/>
          <Column id="DT_FROM" type="STRING" size="256"/>
          <Column id="DT_TO" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_ACNTUNIT"/>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();	
	
	this.fnSelectDS();	
	
};

/************************************************************************
* 버튼 설정 : 화면(Tab) 전환시 마다 호출
************************************************************************/
this.fnSetButton = function() {
	this.FormBtns.Add.set_enable(true);
	this.FormBtns.Del.set_enable(true);
	this.FormBtns.Excel.set_enable(true);
}

/************************************************************************
* 확장 버튼 : 화면별 버튼 설정 ID, function 연결
************************************************************************/
this.fnSetExtendButton = function() {
	this.btnExcelUpload = this.gfnFormButtonAdd("btnExcelUpload", "fnExcelUpload"); 	//엑셀업로드
	this.SMSEND = this.gfnFormButtonAdd("btnSMSEND", "fnSMSEND"); 
	this.SENDRESULT = this.gfnFormButtonAdd("btnSENDRESULT", "fnSENDRESULT"); 
};

/************************************************************************
* 변수 선언
************************************************************************/
this.fnSetVariable = function() {
	this.dxGrid  	    = this.divData.form.divDataCenter.form.objGrid;
};

/************************************************************************
* 이벤트 설정
************************************************************************/
this.fnSetEvent = function() {
	this.gfnGridInit(this.dxGrid, this.dsListGrid, "DR", "DRB_SENDSMS2");		
	
	//this.dxGrid.set_selecttype("cell");
	
	//this.dxGrid.addEventHandler("onselectchanged", this.fnGrid_RowCellChanged, this);
}
/************************************************************************
* 파라미터 설정
************************************************************************/
this.fnSetParameter = function() {
	/*
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("DT_FROM", "string");
	this.dsSelect.addColumn("DT_TO", "string");
	this.dsSelect.addColumn("CD_ACNTUNIT", "string");
	this.dsSelect.addColumn("TY_GUBUN", "string");
	this.dsSelect.addColumn("NO_CHASU", "string");
	this.dsSelect.addColumn("TY_PAY", "string");
	this.dsSelect.addColumn("TY_DIV", "string");
	this.dsSelect.addColumn("NO_DONG", "string");
	this.dsSelect.addColumn("NO_HO", "string");
	*/
	
	this.dsSelect2 = new Dataset();
	this.dsSelect2.addColumn("CD_ACNTUNIT", "string");
	this.dsSelect2.addColumn("TY_GUBUN", "string");
	this.dsSelect2.addColumn("NO_CHASU", "string");
	
	this.dsInsert = new Dataset();
	this.dsInsert.addColumn("Title", "string");
	this.dsInsert.addColumn("Content", "string");
	this.dsInsert.addColumn("ToPhone", "string");
};

/************************************************************************
* 컨트롤 이벤트
************************************************************************/
/*
*	조회 버튼
*/
this.fnSelect = function() {
	
};


/*
*	입력 버튼
*/
this.fnAdd = function() {
	//var nrow = this.gfnGridAdd(this.dxGrid); // top (default), bottom, current
	this.dsListGrid.addRow();
};

/*
*	삭제 버튼
*/
this.fnDel = function() {	
	//this.gfnGridDel(this.dxGrid);
	this.dsListGrid.deleteRow(this.dsListGrid.rowposition);
};

/*
*	저장 버튼
*/
this.fnSave = function() {	
	if (!this.gfnGridValidate(this.dxGrid)) return;
	
	this.dxGrid.updateToDataset();
	this.dsInsert.clearData();
	
	for (var i = 0; i < this.dsListGrid.rowcount; i++) {
		var flag = this.dsListGrid.getColumn(i,"CHK")
		
		switch(flag) {	
		case 1:
			var nrow = this.dsInsert.addRow();			
			this.dsInsert.setColumn(nrow, "Title", this.dsList.getColumn(0, "TITLE"));
			this.dsInsert.setColumn(nrow, "Content", this.dsList.getColumn(0, "CONTENT"));
			this.dsInsert.setColumn(nrow, "ToPhone", this.dsListGrid.getColumn(i, "TOPHONE"));
			break;
		}
	}
	if (this.dsInsert.rowcount == 0) return;
	
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "insert=dsInsert";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
		strSvcType , 	// transaction을 요청할 구분
		inProc,			// Procedure 정보 Dataset 이름
		inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
		outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
		strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
		callBackFnc); // 통신방법 정의 [생략가능]
};

/*
*	엑셀 버튼
*/
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
};

/*
*	출력 버튼
*/
this.fnPrint = function() {
}


/************************************************************************
* Validate
************************************************************************/
/*
*	조회 Validate
*/
this.fnSelectValidate = function() {
	var validate = true;
	
	
	return validate;
};


/************************************************************************
* 콜백 이벤트
************************************************************************/
/*
*	콜백 처리
*/
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		
	} else if(svcID == "save"){
		if (errorCode == 0) {			
			this.gfnAlert("SMS 송신이 완료 되었습니다.");
		} else {
			this.gfnAlert(errorMsg);
		}
	} else if(svcID == "selectDs"){
		this.dsList.clearData();
		this.dsList.addRow();
		
		if(this.dsListDs.rowcount > 0){
			this.dsList.setColumn(0, "DS_USER", this.dsListDs.getColumn(0, "DS_CORP"));
		}
		
		if(this.dsListNo.rowcount > 0){
			this.dsList.setColumn(0, "NO_TEL", this.dsListNo.getColumn(0, "CD_VALUE"));
		}
	} 
}

/************************************************************************
* 코드파인드 이벤트
************************************************************************/

/************************************************************************
* 그리드 이벤트
************************************************************************/

/************************************************************************
* 기타 이벤트
************************************************************************/
this.fnSelectDS = function() {
	//if (!this.fnSelectValidate()) return false;
	
	//this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect2.clearData();
	this.dsSelect2.addRow();
	
	this.dsSelect2.setColumn(0, "CD_ACNTUNIT", "K30600");
	this.dsSelect2.setColumn(0, "TY_GUBUN", "A");
	this.dsSelect2.setColumn(0, "NO_CHASU", "00");	
	
	var strSvcId    = "selectDs";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select_ds=dsSelect2 select_no=dsSelect2";
	var outData     = "dsListDs=select_ds0 dsListNo=select_no0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
		strSvcType , 	// transaction을 요청할 구분
		inProc,			// Procedure 정보 Dataset 이름
		inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
		outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
		strArg, 		// 입력갑스로 보낼 arguments, strFormData="20120607"
		callBackFnc); 	// 통신방법 정의 [생략가능]
};

this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
	}
};

this.divData_divSplitter_ondrag = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
	e.set_userdata("splitter");
	return true;
};

this.divData_ondragmove = function(obj:nexacro.Div,e:nexacro.DragEventInfo)
{
	if(e.userdata == "splitter") {
		this.divData.form.divSplitter.set_left(e.clientx);
		this.divData.form.resetScroll();
	}
};

this.fnValidateCheck = function ()
{
	return true;
};

this.fnSMSEND = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {	
	//if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	if (this.dsListGrid.rowcount < 1) { return false; }
	
	if (!this.fnSendValidate()) return false;
	
	var nChkRowCnt = this.dsListGrid.getCaseCount( "CHK == 1" );
	if (nChkRowCnt <= 0){
		this.gfnAlert("송신 자료를 선택하여 주십시오!");
		return;
	}else{
		this.fnSave();
	}
	
};
this.fnSENDRESULT = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {	
	//if (!this.gfnGridIsRow(this.dxGrid)) { return false; }
	var param = {};
	param.CD_ACNTUNIT = "";
	param.DS_ACNTUNIT = "";
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DRB_SMS_RESULT", "",  param);	
};

// 엑셀업로드
this.fnExcelUpload = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	//if (!this.fnSelectValidate()) return false;
	
	this.dsListGrid.clearData();

	// this.gfnExcelImport("적용할Dataset명","sheet명","데이터시작좌표","콜백함수명","구분ID",현재폼);
	// sheet명 없으면 첫번째 sheet
	this.gfnExcelImport("dsListGrid","sheet1","A2","fnExcelImportCallback","import",this);
	
};


this.fnExcelImportCallback = function(sImportId, dsOut, dsSheet) {
 	if (dsOut.rowcount == 0)  {
		this.gfnAlert("엑셀파일에 내용이 없습니다."); 
		return false;
	}
	
	// 주석시작(양식 다운로드해서 업로드하는게 아니면 아래 부분 주석처리하고 값셋하는부분 더 아래부분 주석 풀어서 처리하면 됨, copyRow로 주석처리해야함)
	//trace(dsOut.saveXML());
	for (var i=0; i< this.dsListGrid.getColCount(); i++)
	{
		sColumnId = "Column"+i;
		
		var sColumnNm = this.gfnGridGetBindColumnNameByIndex(this.dxGrid, i);
		if (sColumnNm != "" && sColumnId != sColumnNm)
		{
			dsOut.updateColID(sColumnId, sColumnNm);
		}
	}  
	//trace("==============111===============");
	//trace(dsOut.saveXML());
	// 주석종료
   
	this.dsListGrid.set_enableevent(false);
	for (var i=0; i< dsOut.rowcount; i++) {
		var nrow = this.dsListGrid.addRow();
		
		//아래 copyRow가 컬럼변경 이벤트를 실행하지 않음. 코드파인더 실행때문에 이 위치로 이동
		// 양식이 일치하는 경우 copyRow
		this.dsListGrid.copyRow(nrow, dsOut, i);
		
		//this.dsList.setColumn(nrow, this.ucFlag, "I");
		
		// 일단 화면에서 보이는 컬럼과 키값이되는 컬럼만 받음(null값 처리된 컬럼은 따로 엑셀에서 입력을 받던지 SP에서 조회후 처리해야할듯)
		//this.dsList.setColumn(nrow, "CD_CORP"		, this.dsSearch.getColumn(0, "CD_CORP"));		// 법인코드
		//this.dsList.setColumn(nrow, "DS_CORP"		, this.ccfCD_CORP.form.DSTextBox.value);		// 법인명
		//this.dsList.setColumn(nrow, "YY_BASE"		, this.dsSearch.getColumn(0, "YY_BASE"));		// 년도		
	}	
	this.dsListGrid.set_enableevent(true); 
	
	// 버튼 활성화 시키기
	this.fnSetButton();	
};


// sms 발송전 체크
this.fnSendValidate = function() {
	var validate = true;
	
	if(this.gfnIsNull(this.dsList.getColumn(0, "TITLE"))){
		this.fnVaidateCallback = function() {
			this.divData.form.divDataLeft.form.txtTITLE.setFocus();
		}
		this.gfnAlert("제목을 입력하셔야 합니다.", "fnVaidateCallback");
		
		return false;
	}
	
	if(this.gfnIsNull(this.dsList.getColumn(0, "CONTENT"))){
		this.fnVaidateCallback = function() {
			this.divData.form.divDataLeft.form.txtCONTENT.setFocus();
		}
		this.gfnAlert("메세지를 입력하셔야 합니다.", "fnVaidateCallback");
		
		return false;
	}
	
	return validate;
};

// 부분선택
this.divData_divDataCenter_btnDivSelect_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if(!this.gfnGridIsRow(this.dxGrid)) return;	
	
	var rows = this.dxGrid.getSelectedDatasetRows();
	for(var r = 0; r < rows.length; r++) { 
		this.dsListGrid.setColumn(rows[r], "CHK", 1);
	}
};

// 부분해제
this.divData_divDataCenter_btnDivCancel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if(!this.gfnGridIsRow(this.dxGrid)) return;	
	
	var rows = this.dxGrid.getSelectedDatasetRows();
	for(var r = 0; r < rows.length; r++) { 
		this.dsListGrid.setColumn(rows[r], "CHK", 0);
	}
};

// 부분삭제
this.divData_divDataCenter_btnDivDelete_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if(!this.gfnGridIsRow(this.dxGrid)) return;	
		
	this.dsListGrid.deleteMultiRows(this.dxGrid.getSelectedDatasetRows());
};
]]></Script>
    <Bind>
      <BindItem id="item9" compid="divData.form.divDataLeft.form.txtCONTENT" propid="value" datasetid="dsList" columnid="CONTENT"/>
      <BindItem id="item10" compid="divData.form.divDataRight.form.txtCONTENTPREVIEW" propid="value" datasetid="dsList" columnid="CONTENT"/>
      <BindItem id="item0" compid="divData.form.divDataLeft.form.txtTITLE" propid="value" datasetid="dsList" columnid="TITLE"/>
      <BindItem id="item1" compid="divData.form.divDataRight.form.txtTITLEPREVIEW" propid="value" datasetid="dsList" columnid="TITLE"/>
    </Bind>
  </Form>
</FDL>
