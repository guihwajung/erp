<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="New Form" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="110.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none">
          <Layouts>
            <Layout>
              <Static id="staTY_GUBUN" taborder="1" text="계약자" left="0.0" top="10.0" width="105.0" height="24.0" textAlign="center" cssclass="sta_WF_SchLabel"/>
              <Combo id="ccboTY_GUBUN" taborder="2" left="staTY_GUBUN:0.0" top="10.0" width="110" height="24.0" innerdataset="dsTY_GUBUN" codecolumn="CD_CODE" datacolumn="DS_CODE"/>
              <Edit id="ctxtNO_JUMIN" taborder="3" left="ccboTY_GUBUN:0.0" top="10.0" width="120" height="24.0" value=""/>
              <Static id="staCD_ACNTUNIT" taborder="4" text="사업지코드" left="ctxtNO_JUMIN:0.0" top="10.0" width="105.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Div id="ccfCD_ACNTUNIT" CodeFindName="DRX_CFACNTUNIT" CDTextWidth="80" taborder="5" left="staCD_ACNTUNIT:0.0" top="10.0" width="200" height="24.0" FitToContents="true" url="cmm::cmmCodeFind.xfdl"/>
              <Static id="staNO_DONG" taborder="6" text="동층호" left="0.0" top="staTY_GUBUN:10.0" width="105.0" height="24.0" textAlign="center" cssclass="sta_WF_SchLabel"/>
              <Edit id="ctxtNO_DONG" taborder="7" left="staNO_DONG:0.0" top="staTY_GUBUN:10.0" width="60" height="24.0" value="" maxlength="4" inputtype="number,normal"/>
              <Edit id="ctxtNO_FLOOR" taborder="8" left="ctxtNO_DONG:0.0" top="staTY_GUBUN:10.0" width="40" height="24.0" value="" maxlength="2" inputmode="normal" inputtype="number,normal"/>
              <Edit id="ctxtNO_HO" taborder="9" left="ctxtNO_FLOOR:0.0" top="staTY_GUBUN:10.0" width="80" height="24.0" value="" inputtype="number,normal" maxlength="3"/>
              <Static id="staDT_CONTRACT" taborder="10" text="계약일자" left="ctxtNO_JUMIN:0.0" top="staCD_ACNTUNIT:10.0" width="105.0" height="24.0" cssclass="sta_WF_SchLabel"/>
              <Calendar id="ctclDT_CONTRACT_FR" taborder="11" left="staDT_CONTRACT:0.0" top="staTY_GUBUN:10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" value=""/>
              <Static id="staDT_CONTRACT_range" taborder="12" text="~" left="ctclDT_CONTRACT_FR:0.0" top="staTY_GUBUN:10.0" width="30.0" height="24.0" cssclass="sta_WF_AC"/>
              <Calendar id="ctclDT_CONTRACT_TO" taborder="13" left="staDT_CONTRACT_range:0.0" top="staTY_GUBUN:10.0" width="105" height="24.0" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" value=""/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg">
          <Layouts>
            <Layout>
              <Grid id="objGrid" taborder="0" left="0" top="0" bottom="0" right="0"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {

};

/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {	
	this.dxGrid = this.divData.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.divSearch.form.ccfCD_ACNTUNIT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsList, "DR", "DRB_SEARCHCONTRACTOR");
	

};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("TY_GUBUN", "string");
	this.dsSelect.addColumn("DS_CONTRACTOR", "string");
	this.dsSelect.addColumn("NO_JUMIN", "string");
	this.dsSelect.addColumn("DS_ACNTUNIT", "string");
	this.dsSelect.addColumn("NO_DONG", "string");
	this.dsSelect.addColumn("NO_FLOOR", "string");
	this.dsSelect.addColumn("NO_HO", "string");
	this.dsSelect.addColumn("DT_CONTRACT_FR", "string");
	this.dsSelect.addColumn("DT_CONTRACT_TO", "string");
}

/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (!this.fnSelectValidate()) return false;
	
	this.gfnGridBeforeSelect(this.dxGrid);
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	var ds_contractor = this.dsSearch.getColumn(0, "TY_GUBUN") == 1 ? this.dsSearch.getColumn(0, "DS_CONTRACTOR") : "";
	var no_jumin = this.dsSearch.getColumn(0, "TY_GUBUN") == 1 ? "" : this.dsSearch.getColumn(0, "DS_CONTRACTOR");
	
	this.dsSelect.setColumn(0, "TY_GUBUN", this.dsSearch.getColumn(0, "TY_GUBUN"));
	this.dsSelect.setColumn(0, "DS_CONTRACTOR", ds_contractor);
	this.dsSelect.setColumn(0, "NO_JUMIN", no_jumin);
	this.dsSelect.setColumn(0, "DS_ACNTUNIT", this.dsSearch.getColumn(0, "DS_ACNTUNIT"));
	this.dsSelect.setColumn(0, "NO_DONG", this.dsSearch.getColumn(0, "NO_DONG"));
	this.dsSelect.setColumn(0, "NO_FLOOR", this.dsSearch.getColumn(0, "NO_FLOOR"));
	this.dsSelect.setColumn(0, "NO_HO", this.dsSearch.getColumn(0, "NO_HO"));
	this.dsSelect.setColumn(0, "DT_CONTRACT_FR", this.gfnNvl(this.dsSearch.getColumn(0, "DT_CONTRACT_FR"),"").replaceAll("-",""));
	this.dsSelect.setColumn(0, "DT_CONTRACT_TO", this.gfnNvl(this.dsSearch.getColumn(0, "DT_CONTRACT_TO"),"").replaceAll("-",""));
	
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	입력 버튼
 */
this.fnAdd = function() {
	var nrow = this.gfnGridAdd(this.dxGrid); // top (default), bottom, current
}

/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	// 그리드 필수항목 체크
	if (!this.gfnGridValidate(this.dxGrid)) return;	

	this.dxGrid.updateToDataset();
		
	this.dsInsert.clearData();
	this.dsUpdate.clearData();
	this.dsDelete.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
				var nrow = this.dsInsert.addRow();
// 				this.dsInsert.setColumn(nrow, "CD_CORP", this.dsList.getColumn(i, "CD_CORP"));
// 				this.dsInsert.setColumn(nrow, "NO_CORP", this.dsList.getColumn(i, "NO_CORP").replace(/-/g, ''));
// 				this.dsInsert.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
				break;
				
			case "U":
				var nrow = this.dsUpdate.addRow();
// 				this.dsUpdate.setColumn(nrow, "CD_CORP", this.dsList.getColumn(i, "CD_CORP"));
// 				this.dsUpdate.setColumn(nrow, "NO_CORP", this.dsList.getColumn(i, "NO_CORP").replace(/-/g, ''));
// 				this.dsUpdate.setColumn(nrow, "ID_UPDATE", this.AuthClient.ID_USER);
				break;
				
			case "D":
				var nrow = this.dsDelete.addRow();
//				this.dsDelete.setColumn(nrow, "CD_CORP", this.dsList.getColumn(i, "CD_CORP"));
				break;
		}
	}
	
	if (this.dsInsert.rowcount == 0 && this.dsUpdate.rowcount == 0 && this.dsDelete.rowcount == 0) return;
		
	// save SP 한개로 사용하는 경우
	/*
	this.dsSave.clearData();
	
	for (var i = 0; i < this.dsList.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsList, i);
		switch(flag) {
			case "I":
			case "U":
			case "D":
				var nrow = this.dsSave.addRow();
				this.dsSave.setColumn(nrow, "TY_FLAG", flag);
				this.dsSave.setColumn(nrow, "NO_IDX", this.dsList.getColumn(i, "NO_IDX"));
				break;
		}
	}
		
	if (this.dsSave.rowcount == 0) return;
	*/
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "insert=dsInsert update=dsUpdate delete=dsDelete";
	//var inData      = "save=dsSave";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/
/*
 *	조회 Validate
 */
this.fnSelectValidate = function() {
	var validate = true;
	
	var msg = this.dsSearch.getColumn(0, "TY_GUBUN") == 1 ? "계약자명" : "주민등록번호";
	
	if (this.gfnIsNull(this.dsSearch.getColumn(0,"DS_CONTRACTOR")) && this.gfnIsNull(this.dsSearch.getColumn(0,"DS_ACNTUNIT")) ) 
	{
		if(this.gfnIsNull(this.dsSearch.getColumn(0, "NO_DONG")) && this.gfnIsNull(this.dsSearch.getColumn(0, "NO_FLOOR")) && this.gfnIsNull(this.dsSearch.getColumn(0, "NO_HO")))
		{
			validate = false;

			this.gfnAlert(msg + ", 사업지코드, 동층호 정보 중 하나는 입력해야합니다.");
		}
	}
	else if(!this.gfnIsNull(this.dsSearch.getColumn(0,"DT_CONTRACT_FR")) && !this.gfnIsNull(this.dsSearch.getColumn(0,"DT_CONTRACT_TO")))
	{
		if(this.gfnGetDiffDate(this.dsSearch.getColumn(0,"DT_CONTRACT_FR").replaceAll("-",""), this.dsSearch.getColumn(0,"DT_CONTRACT_TO").replaceAll("-","")) < 0)
		{
			validate = false;
			this.gfnAlert("종료기준일자는 시작기준일자보다 크거나 같아야 합니다.");
		}
	}
	
	return validate;
};

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnGridAfterSelect(this.dxGrid);	
	}
	else if(svcID == "save") {
		if (errorCode == 0) {
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if (id == "ccfCD_ACNTUNIT") {
		dsUserParam.setColumn(nrow, "CD_DEPT", this.AuthClient.CD_DEPT);
		dsUserParam.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
		dsUserParam.setColumn(nrow, "ID_GROUP", this.FormInfo.ID_GROUP);
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);
	}
	
	return true;
}
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 
/************************************************************************
 * 기타 이벤트
 ************************************************************************/
this.dsSearch_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(e.oldvalue != e.newvalue) {
		this.gfnSetFormStatus(this);	// 폼상태 초기화
		this.gfnGridClear(this.dxGrid);	
		
		if(e.columnid == "NO_DONG")
		{
			switch(this.gfnNvl(e.newvalue,"").trim().length)
			{
				case 1 : this.dsSearch.setColumn(0, "NO_DONG", "000" + e.newvalue); break;
				case 2 : this.dsSearch.setColumn(0, "NO_DONG", "00" + e.newvalue); break;
				case 3 : this.dsSearch.setColumn(0, "NO_DONG", "0" + e.newvalue); break;
			}
		}
		else if(e.columnid == "NO_FLOOR")
		{
			switch(this.gfnNvl(e.newvalue,"").trim().length)
			{
				case 1 : this.dsSearch.setColumn(0, "NO_FLOOR", "0" + e.newvalue); break;
			}
		}
		else if(e.columnid == "NO_HO")
		{
			switch(this.gfnNvl(e.newvalue,"").trim().length)
			{
				case 1 : this.dsSearch.setColumn(0, "NO_HO", "00" + e.newvalue); break;
				case 2 : this.dsSearch.setColumn(0, "NO_HO", "0" + e.newvalue); break;
			}
		}
	}
};

]]></Script>
    <Objects>
      <Dataset id="dsList"/>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DRBPR_SEARCHCONTRACTOR_SELECT</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="TY_GUBUN" type="STRING" size="256"/>
          <Column id="DS_CONTRACTOR" type="STRING" size="256"/>
          <Column id="DS_ACNTUNIT" type="STRING" size="256"/>
          <Column id="NO_DONG" type="STRING" size="256"/>
          <Column id="NO_FLOOR" type="STRING" size="256"/>
          <Column id="NO_HO" type="STRING" size="256"/>
          <Column id="DT_CONTRACT_FR" type="STRING" size="256"/>
          <Column id="DT_CONTRACT_TO" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TY_GUBUN">1</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_GUBUN">
        <ColumnInfo>
          <Column id="CD_CODE" type="STRING" size="256"/>
          <Column id="DS_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD_CODE">1</Col>
            <Col id="DS_CODE">성명</Col>
          </Row>
          <Row>
            <Col id="CD_CODE">2</Col>
            <Col id="DS_CODE">주민등록번호</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divSearch.form.ccboTY_GUBUN" propid="value" datasetid="dsSearch" columnid="TY_GUBUN"/>
      <BindItem id="item1" compid="divSearch.form.ctxtNO_JUMIN" propid="value" datasetid="dsSearch" columnid="DS_CONTRACTOR"/>
      <BindItem id="item2" compid="divSearch.form.ccfCD_ACNTUNIT.form.DSTextBox" propid="value" datasetid="dsSearch" columnid="DS_ACNTUNIT"/>
      <BindItem id="item3" compid="divSearch.form.ctxtNO_DONG" propid="value" datasetid="dsSearch" columnid="NO_DONG"/>
      <BindItem id="item4" compid="divSearch.form.ctxtNO_FLOOR" propid="value" datasetid="dsSearch" columnid="NO_FLOOR"/>
      <BindItem id="item5" compid="divSearch.form.ctxtNO_HO" propid="value" datasetid="dsSearch" columnid="NO_HO"/>
      <BindItem id="item6" compid="divSearch.form.ctclDT_CONTRACT_FR" propid="value" datasetid="dsSearch" columnid="DT_CONTRACT_FR"/>
      <BindItem id="item7" compid="divSearch.form.ctclDT_CONTRACT_TO" propid="value" datasetid="dsSearch" columnid="DT_CONTRACT_TO"/>
    </Bind>
  </Form>
</FDL>
