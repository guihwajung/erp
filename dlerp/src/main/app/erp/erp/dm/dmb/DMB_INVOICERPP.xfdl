<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="1280" height="720" titletext="기타입고송장" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divSearch" taborder="0" left="0.0" top="10.0" height="46.0" right="0" cssclass="div_SEARCH_Bg" formscrolltype="none" text="">
          <Layouts>
            <Layout>
              <Static id="staNO_INVOICE" taborder="0" text="송장번호" left="0.0" top="10.0" width="92.0" height="24.0" textDecoration="none" cssclass="sta_WF_SchLabel"/>
              <Edit id="edtNO_INVOICE" taborder="1" left="staNO_INVOICE:0.0" top="10.0" width="250" height="24.0" readonly="true"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divData" taborder="0" left="0" top="divSearch:10" bottom="0" right="0" cssclass="div_DATA_Bg" ondragmove="divData_ondragmove" text="">
          <Layouts>
            <Layout>
              <Div id="divDataTop" taborder="1" left="0" top="0" height="95" right="0" text="">
                <Layouts>
                  <Layout>
                    <Static id="sta01" taborder="1" text="송장정보" left="0" top="0" height="25" right="0" cssclass="sta_TITLE_Bg"/>
                    <Static id="staCS_SITE" taborder="3" text="현장코드" left="0" top="30" width="87" height="30" textAlign="center" cssclass="sta_WF_tablelabelE"/>
                    <Static id="staBg1" taborder="4" left="86" top="30" height="30" cssclass="sta_WF_tablebg" width="263"/>
                    <Div id="ccfCD_SITE" CDTextWidth="80" taborder="0" CodeFindName="DZX_CFSITE" left="staCS_SITE:5" top="35" width="250" height="20" url="cmm::cmmCodeFind.xfdl"/>
                    <Static id="staDS_SITE00" taborder="5" text="비고" left="0" top="59" width="87" height="30" cssclass="sta_WF_tablelabel" textAlign="center"/>
                    <Static id="staBg00" taborder="6" left="86" top="59" height="30" cssclass="sta_WF_tablebg" width="824"/>
                    <Edit id="edt00" taborder="2" left="staDS_SITE00:5" top="64" width="807" height="20" readonly="false"/>
                    <Static id="staDT_INVOICE" taborder="7" text="입고일자" left="348" top="30" width="87" height="30" textAlign="center" cssclass="sta_WF_tablelabelE"/>
                    <Static id="staBg01" taborder="8" left="434" top="30" height="30" cssclass="sta_WF_tablebg" width="124"/>
                    <Static id="staCD_VENDOR" taborder="9" text="거래처" left="557" top="30" width="87" height="30" textAlign="center" cssclass="sta_WF_tablelabelE"/>
                    <Static id="staBg02" taborder="10" left="640" top="30" height="30" cssclass="sta_WF_tablebg" text="" width="270"/>
                    <Div id="ccfCD_VENDOR" CDTextWidth="80" CodeFindName="DMX_CFVENDOR_COMMON" taborder="11" left="staCD_VENDOR:5" top="35" width="250" height="20" url="cmm::cmmCodeFind.xfdl"/>
                    <Calendar id="ctclDT_INVOICE" taborder="12" left="staDT_INVOICE:5" top="35" width="110" height="20" dateformat="yyyy-MM-dd" editformat="yyyyMMdd" autoselect="true" value=""/>
                  </Layout>
                </Layouts>
              </Div>
              <Div id="divDataMedium" taborder="0" left="0" top="divDataTop:10" right="0" text="" bottom="10">
                <Layouts>
                  <Layout>
                    <Static id="sta02" taborder="0" text="품목정보" left="0" top="0" right="0" height="25" cssclass="sta_TITLE_Bg"/>
                    <Grid id="objGrid" taborder="0" left="0" top="sta02:5" bottom="0" right="0" binddataset="dsListSub">
                      <Formats>
                        <Format id="default"/>
                      </Formats>
                    </Grid>
                  </Layout>
                </Layouts>
              </Div>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	
	this.fnSetButton();
	this.fnSetExtendButton();
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();

	this.MODE = this.getOwnerFrame().MODE;

	if(this.MODE == "I") {
		this.dsList.set_enableevent(false);
		this.dsList.setColumn(0, "현장코드", this.getOwnerFrame().CD_SITE);
		this.divData.form.divDataTop.form.ccfCD_SITE.form.DSTextBox.set_value(this.getOwnerFrame().DS_SITE);
		this.dsList.setColumn(0, "입고일자",  this.gfnGetDate()); //입고일자
		this.dsList.setColumn(0, "사업자번호", this.getOwnerFrame().CD_VENDOR); 
		this.divData.form.divDataTop.form.ccfCD_VENDOR.form.DSTextBox.set_value(this.getOwnerFrame().DS_VENDOR);
		this.dsList.set_enableevent(true);
		
		this.FormBtns.Add.set_enable(true);
	}
	else if(this.MODE == "U") {

		this.dsSearch.setColumn(0, "NO_INVOICE", this.getOwnerFrame().NO_INVOICE);
		
		this.FormBtns.Select.click();
	}
};

/************************************************************************
 * 버튼 설정 : 화면(Tab) 전환시 마다 호출
 * 서브버튼 사용 및 공통버튼 강제 제어시 여기서 처리
 ************************************************************************/
this.fnSetButton = function() {
	// Select, Add, Del, Save, Excel, Print
	// SubSelect, SubAdd, SubDel, SuubSave, SubExcel
	//this.FormBtns.Select.set_enable(false);
	
}

/************************************************************************
 * 확장 버튼 : 화면별 버튼 설정 ID, function 연결 (화면버튼관리)
 ************************************************************************/
this.fnSetExtendButton = function() {
	this.btn1 = this.gfnFormButtonAdd("btnConfirm", "fnConfirm"); 	//검수확정		
	this.btn2 = this.gfnFormButtonAdd("btnCancel", "fnCancel");		//확정취소 	
	this.btn3 = this.gfnFormButtonAdd("btnInDelete", "fnInDelete");	//입고삭제	
	this.btn4 = this.gfnFormButtonAdd("btnInAdd", "fnInAdd");		//추가등록
	this.btn5 = this.gfnFormButtonAdd("btnFile", "fnFile");			//파일첨부
};


/************************************************************************
 * 변수 선언
 ************************************************************************/
this.fnSetVariable = function() {
	
	this.ccfCD_SITE = this.divData.form.divDataTop.form.ccfCD_SITE;
	this.edtNO_INVOICE = this.divSearch.form.edtNO_INVOICE;
	this.ctclDT_INVOICE = this.divData.form.divDataTop.form.ctclDT_INVOICE;
	this.ccfCD_VENDOR = this.divData.form.divDataTop.form.ccfCD_VENDOR;
	
	this.dxGrid = this.divData.form.divDataMedium.form.objGrid;
};

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {	
		
	
	// 그리드 초기화
	this.gfnGridInit(this.dxGrid, this.dsListSub, "DM", "DMB_INVOICERPP");
	
	this.dxGrid.BeforeUserDataSetParam = "fnGrid_BeforeUserDataSetParam";
	
	this.dxGrid.AfterEdit = "fnGrid_AfterEdit";
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {

	this.dsSelect = new Dataset();
	this.dsSelect.addColumn("NO_INVOICE", "string");

	this.dsSave = new Dataset();
	this.dsSave.addColumn("TY_ACT", "string");
	this.dsSave.addColumn("TY_INVOICE", "string");
	this.dsSave.addColumn("TY_INVOIO", "string");
	this.dsSave.addColumn("DT_INVOICE", "string");
	this.dsSave.addColumn("DT_INVOWK", "string");
	this.dsSave.addColumn("AM_INVOICE", "bigdecimal");
	this.dsSave.addColumn("CD_INSIT", "string");
	this.dsSave.addColumn("CD_OUTSIT", "string");
	this.dsSave.addColumn("NO_PO", "string");
	this.dsSave.addColumn("CD_VENDOR", "string");
	this.dsSave.addColumn("ID_USER", "string");
	this.dsSave.addColumn("NO_INVOICE2", "string");
	this.dsSave.addColumn("RM_BIGO", "string");
	this.dsSave.addColumn("YN_TRAN", "string");
	this.dsSave.addColumn("YN_SELECT", "string");
	this.dsSave.addColumn("NO_MR", "string");
	this.dsSave.addColumn("CD_ITEM", "string");
	this.dsSave.addColumn("CD_SITE_STOCK", "string");
	this.dsSave.addColumn("CD_VENDOR_STOCK", "string");
	this.dsSave.addColumn("AM_CMS", "bigdecimal");
	this.dsSave.addColumn("AM_SUPPLY", "bigdecimal");
	this.dsSave.addColumn("AM_VAT", "bigdecimal");
	this.dsSave.addColumn("NO_INVOICE1", "string");

	this.dsSelect1 = new Dataset();
	this.dsSelect1.addColumn("NO_INVOICE", "string");

	this.dsSave1 = new Dataset();
	this.dsSave1.addColumn("TY_ACT", "string");
	this.dsSave1.addColumn("NO_INVOICE1", "string");
	this.dsSave1.addColumn("SN_NO", "int");
	this.dsSave1.addColumn("CD_ITEM", "string");
	this.dsSave1.addColumn("TY_ITEM", "string");
	this.dsSave1.addColumn("NO_CONTROL", "string");
	this.dsSave1.addColumn("QN_ITEM", "bigdecimal");
	this.dsSave1.addColumn("UP_ITEM", "bigdecimal");
	this.dsSave1.addColumn("AM_ITEM", "bigdecimal");
	this.dsSave1.addColumn("CD_COST", "string");
	this.dsSave1.addColumn("NO_LC", "string");
	this.dsSave1.addColumn("ID_USER", "string");
	this.dsSave1.addColumn("NO_REVINVOICE", "string");
	this.dsSave1.addColumn("SN_REVNO", "int");
	this.dsSave1.addColumn("YN_INPUT", "string");
	this.dsSave1.addColumn("NO_SERIAL", "string");
	this.dsSave1.addColumn("RM_ETC", "string");
	this.dsSave1.addColumn("SZ_SITEITEM", "string");
	this.dsSave1.addColumn("YN_TRAN", "string");
	this.dsSave1.addColumn("YN_SELECT", "string");
	this.dsSave1.addColumn("NO_GASOLJAE", "string");
	this.dsSave1.addColumn("UP_CMS", "bigdecimal");
	this.dsSave1.addColumn("AM_CMS", "bigdecimal");
	this.dsSave1.addColumn("NO_HADOCONT", "string");
	this.dsSave1.addColumn("CNT_GASOLJAE_MONTH", "int");
	this.dsSave1.addColumn("CD_COST_IN", "string");
	this.dsSave1.addColumn("NO_HADOCONT_IN", "string");
	this.dsSave1.addColumn("CD_COST_OUT", "string");
	this.dsSave1.addColumn("NO_HADOCONT_OUT", "string");
	this.dsSave1.addColumn("CD_VENDOR", "string");
	
	this.dsExec = new Dataset();
	this.dsExec.addColumn("TY_ACT", "string");
	this.dsExec.addColumn("NO_INVOICE1", "string");
	this.dsExec.addColumn("NO_INVOICE2", "string");
	this.dsExec.addColumn("ID_USER", "string");
	this.dsExec.addColumn("CD_DEPT_LOGIN", "string");
	
	this.dsExec1 = new Dataset();
	this.dsExec1.addColumn("TY_ACT", "string");
	this.dsExec1.addColumn("DT_INVOICE", "string");
	this.dsExec1.addColumn("CD_INSIT", "string");
	this.dsExec1.addColumn("CD_OUTSIT", "string");
	this.dsExec1.addColumn("ID_USER", "string");
	this.dsExec1.addColumn("NO_INVOICE1", "string");

}
 
/************************************************************************
 * 컨트롤 이벤트
 ************************************************************************/
 /*
  *	조회 버튼
  */
this.fnSelect = function() {
	if (this.MODE == "I") return false;
	
	this.dsSelect.clearData();
	this.dsSelect.addRow();
	
	this.dsSelect.setColumn(0, "NO_INVOICE", this.dsSearch.getColumn(0, "NO_INVOICE").replace(/\-/g,''));
				
	var strSvcId    = "select";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select=dsSelect";
	var outData     = "dsList=select0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
						
	// 그리드 조회
	this.fnSelect1();
}


/*
 *	입력 버튼
 */
this.fnAdd = function() {
	var nrow = this.gfnGridAdd(this.dxGrid);
}


/*
 *	삭제 버튼
 */
this.fnDel = function() {
	this.gfnGridDel(this.dxGrid);
}

/*
 *	저장 버튼
 */
this.fnSave = function() {
	if (!this.fnValidate()) return false;
	
	// 그리드 필수항목 체크
	if (!this.gfnGridValidate(this.dxGrid)) return;	
	
	this.dsSave.clearData();
	
	if(this.dsList.rowcount > 0) {
		var nrow = this.dsSave.addRow();		
		this.dsSave.setColumn(nrow, "TY_ACT", this.MODE);
		this.dsSave.setColumn(nrow, "TY_INVOICE", "RPP");
		this.dsSave.setColumn(nrow, "TY_INVOIO", "I");
		this.dsSave.setColumn(nrow, "DT_INVOICE", this.dsList.getColumn(0, "입고일자"));
		this.dsSave.setColumn(nrow, "DT_INVOWK", "");
		this.dsSave.setColumn(nrow, "AM_INVOICE", this.dsListSub.getSum("AM_ITEM")); // 그리드 AM_ITEM 의 합계
		this.dsSave.setColumn(nrow, "CD_INSIT", this.dsList.getColumn(0, "현장코드"));
		this.dsSave.setColumn(nrow, "CD_OUTSIT", this.dsList.getColumn(0, "현장코드"));
		this.dsSave.setColumn(nrow, "NO_PO", "");
		this.dsSave.setColumn(nrow, "CD_VENDOR", this.dsList.getColumn(0, "사업자번호"));
		this.dsSave.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
		this.dsSave.setColumn(nrow, "NO_INVOICE2", "");
		this.dsSave.setColumn(nrow, "RM_BIGO", this.dsList.getColumn(0, "비고"));
		this.dsSave.setColumn(nrow, "YN_TRAN", "");
		this.dsSave.setColumn(nrow, "YN_SELECT", "");
		this.dsSave.setColumn(nrow, "NO_MR", "");
		this.dsSave.setColumn(nrow, "CD_ITEM", "");
		this.dsSave.setColumn(nrow, "CD_SITE_STOCK", "");
		this.dsSave.setColumn(nrow, "CD_VENDOR_STOCK", "");
		this.dsSave.setColumn(nrow, "AM_CMS", "");
		this.dsSave.setColumn(nrow, "AM_SUPPLY", "");
		this.dsSave.setColumn(nrow, "AM_VAT", "");
		this.dsSave.setColumn(nrow, "NO_INVOICE1", this.dsSearch.getColumn(0, "NO_INVOICE").replace(/\-/g,''));	
	}
	
	if (this.dsSave.rowcount == 0) return;
		
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save=dsSave";
	var outData     = "dsOutput=save";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}


/*
 *	엑셀 버튼
 */
this.fnExcel = function() {
	this.gfnExcelExport(this.dxGrid);
}

/*
 *	출력 버튼
 */
this.fnPrint = function() {
}

/************************************************************************
 * Validate
 ************************************************************************/

this.fnValidate = function() {	
	var validate = true;
	
	if (this.gfnIsNull(this.dsList.getColumn(0,"현장코드"))) { //회계일자
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
		this.ccfCD_SITE.form.CDTextBox.setFocus();
		}
		this.gfnAlert("현장코드 반드시 입력 하셔야 합니다.", "fnVaidateCallback");
	}else if (this.gfnIsNull(this.dsList.getColumn(0,"입고일자"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.ctclDT_INVOICE.form.CDTextBox.setFocus();
		}
		this.gfnAlert("입고일자는 반드시 입력 하셔야 합니다.", "fnVaidateCallback");
	}else if (this.gfnIsNull(this.dsList.getColumn(0,"사업자번호"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.ccfCD_VENDOR.form.CDTextBox.setFocus();
		}
		this.gfnAlert("거래처는 반드시 입력 하셔야 합니다.", "fnVaidateCallback");
	}
	return validate;
	
};
/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
/*
 *	콜백 처리
 */
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (svcID == "select") {
		this.gfnSetFormStatus(this, "Q");
		
		// 첨부파일 개수 설정
		if(this.dsList.getColumn(0, "CNT_FILE") > 0) {
			this.btn5.set_text("첨부파일(" + this.dsList.getColumn(0, "CNT_FILE") + ")");
		} else {
			this.btn5.set_text("첨부파일");
		}
		this.btn5.parent.fnSetBtn();
		
		// 버튼설정
		if(this.dsList.getColumn(0, "YN_CONFIRM") == "Y") {
			this.btn1.set_enable(false);
			this.btn2.set_enable(true);
			this.btn3.set_enable(false);
		} else {
			this.btn1.set_enable(true);
			this.btn2.set_enable(false);
			this.btn3.set_enable(true);
		}
	}
	else if(svcID == "save") {
		if (errorCode == 0) {

			if(this.MODE == "I") {
				if(this.dsOutput.rowcount > 0) {
					var no_invoice = this.dsOutput.getColumn(0, "NO_INVOICE1");
					// 송장번호 edit 박스에 셋팅	
					this.edtNO_INVOICE.set_value(no_invoice);
					this.MODE = "U";
				} else {
					return;
				}
			}

			// 디테일 저장
			this.fnSave1();
		} else {
			this.gfnAlert(errorMsg);
		}
	}else if(svcID == "save1") {
		this.FormBtns.Select.click();
	}else if(svcID == "exec"){
		if (errorCode == 0) {
			this.gfnAlert("입고송장 확정 및 재고반영이 완료되었습니다.");
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}else if(svcID == "execsub"){
		if (errorCode == 0) {
			this.gfnAlert("입고송장 확정 및 재고반영이 취소되었습니다.");
			this.FormBtns.Select.click();
		} else {
			this.gfnAlert(errorMsg);
		}
	}else if(svcID == "exec1"){
		if (errorCode == 0) {
			this.gfnAlert("삭제 되었습니다.", "fnCloseForm");
		} else {
			this.gfnAlert(errorMsg);
		}
	}
} 

this.fnCloseForm = function() {
	this.getParentContext().close(true);
}


/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
//코드파인드의 파라미터 값을 넘겨줄때 사용하는 함수
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	
	if(id == "ccfCD_SITE"){
		dsUserParam.setColumn(nrow,  "TY_TYPE", "");
		dsUserParam.setColumn(nrow,  "LOGIN_DEPT", this.AuthClient.CD_DEPT);
		dsUserParam.setColumn(nrow, "TY_SELECT", this.FormInfo.GR_SEARCH);
	}
}
/************************************************************************
 * 그리드 이벤트
 ************************************************************************/
 /*
  *	조회1 버튼
  */
this.fnSelect1 = function() {
	
	this.dsSelect1.clearData();
	this.dsSelect1.addRow();
	
	this.dsSelect1.setColumn(0, "NO_INVOICE", this.dsSearch.getColumn(0, "NO_INVOICE").replace(/\-/g,''));
		
	var strSvcId    = "select1";
	var strSvcType  = "grid";
	var inProc		= "_dsProc";
	var inData      = "select1=dsSelect1";
	var outData     = "dsListSub=select10";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}

/*
 *	저장1 버튼
 */
this.fnSave1 = function() {
	if (!this.gfnGridValidate(this.dxGrid)) return;
	
	this.dxGrid.updateToDataset();
	
	this.dsSave1.clearData();
	
	for (var i = 0; i < this.dsListSub.rowcount; i++) {
		var flag = this.gfnGetFlag(this.dsListSub, i);
		switch(flag) {
			case "I":
			case "U":
			case "D":
				var nrow = this.dsSave1.addRow();		
				this.dsSave1.setColumn(nrow, "TY_ACT", flag);
				this.dsSave1.setColumn(nrow, "NO_INVOICE1", this.dsSearch.getColumn(0, "NO_INVOICE").replace(/\-/g,''));
				this.dsSave1.setColumn(nrow, "SN_NO", this.dsListSub.getColumn(i, "SN_NO"));
				this.dsSave1.setColumn(nrow, "CD_ITEM", this.dsListSub.getColumn(i, "CD_ITEM"));
				this.dsSave1.setColumn(nrow, "TY_ITEM", this.dsListSub.getColumn(i, "TY_ITEM"));
				this.dsSave1.setColumn(nrow, "QN_ITEM", this.dsListSub.getColumn(i, "QN_ITEM"));
				this.dsSave1.setColumn(nrow, "UP_ITEM", this.dsListSub.getColumn(i, "UP_ITEM"));
				this.dsSave1.setColumn(nrow, "AM_ITEM", this.dsListSub.getColumn(i, "AM_ITEM"));
				this.dsSave1.setColumn(nrow, "CD_COST", this.dsListSub.getColumn(i, "CD_COST"));
				this.dsSave1.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);
				this.dsSave1.setColumn(nrow, "YN_INPUT", this.dsListSub.getColumn(i, "YN_INPUT"));
				this.dsSave1.setColumn(nrow, "RM_ETC", this.dsListSub.getColumn(i, "RM_ETC"));
				this.dsSave1.setColumn(nrow, "SZ_SITEITEM", this.dsListSub.getColumn(i, "SZ_SITEITEM"));
				this.dsSave1.setColumn(nrow, "NO_HADOCONT", this.dsListSub.getColumn(i, "NO_HADOCONT"));
				this.dsSave1.setColumn(nrow, "CD_COST_OUT", this.dsListSub.getColumn(i, "CD_COST"));
				this.dsSave1.setColumn(nrow, "NO_HADOCONT_OUT", this.dsListSub.getColumn(i, "NO_HADOCONT"));
				break;						
		}
	}
	  if (this.dsSave1.rowcount == 0) {      
			this.FormBtns.Select.click();
					return;
   }
		
	var strSvcId    = "save1";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "save1=dsSave1";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
}


/************************************************************************
 * 기타 이벤트
 ************************************************************************/
 
this.fnGrid_AfterEdit = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo) {
	if(e.columnid == "QN_ITEM" || e.columnid == "UP_ITEM") {
		if(e.oldvalue != e.newvalue) {
			this.dsListSub.setColumn(this.dsListSub.rowposition, "AM_ITEM", this.dsListSub.getColumn(this.dsListSub.rowposition, "QN_ITEM") * this.dsListSub.getColumn(this.dsListSub.rowposition, "UP_ITEM"));
		}
	}
	else if(e.columnid == "NO_HADOCONT") {
		// 계약번호 변경시 공종코드 초기화
		if(e.oldvalue != e.newvalue) {
			this.dsListSub.setColumn(this.dsListSub.rowposition, "CD_DKCOST", "");
			this.dsListSub.setColumn(this.dsListSub.rowposition, "CD_COST", "");
			this.dsListSub.setColumn(this.dsListSub.rowposition, "DS_COST", "");
		}
	}
}
 
  this.fnGrid_BeforeUserDataSetParam=function(id, dsUserParam, nrow){
 
	if(id == "DWX_CFHADO_CONT"){
		var cd_site = this.dsList.getColumn(0, "현장코드");
		if(this.gfnIsNull(cd_site)) {
			this.gfnAlert("현장코드를 먼저 입력하세요.");
			return false;
		}
		dsUserParam.setColumn(nrow, "CD_SITE", this.dsList.getColumn(0, "현장코드"));
		
	}else if(id == "DWX_CFCOST"){		
		var cd_site = this.dsList.getColumn(0, "현장코드");
		if(this.gfnIsNull(cd_site)) {
			this.gfnAlert("현장코드를 먼저 입력하세요.");
			return false;
		}				
		var no_hadocont = this.dsListSub.getColumn(this.dsListSub.rowposition, "NO_HADOCONT");
		if(this.gfnIsNull(no_hadocont)) {
			this.gfnAlert("계약번호를 먼저 입력하세요.");
			return false;
		}
		
		dsUserParam.setColumn(nrow, "CD_SITE", this.dsList.getColumn(0, "현장코드"));
		dsUserParam.setColumn(nrow, "NO_HADOCONT", this.dsListSub.getColumn(this.dsListSub.rowposition, "NO_HADOCONT"));
	}
	return true;
};


// 검수확정
 this.fnConfirm = function(obj:nexacro.Button, e:nexacro.ClickEventInfo){
	if(!this.fnValidate()) return;
	
	this.gfnConfirm("입고작업을 확정 하시겠습니까?", "fnConfirm_callback");
};

this.fnConfirm_callback = function(strId, val){
	if(val == false){
			return false;
	}
	this.dsExec.clearData();
	this.dsExec.addRow();

	this.dsExec.setColumn(0, "TY_ACT", "I");
	this.dsExec.setColumn(0, "NO_INVOICE1", this.dsSearch.getColumn(0, "NO_INVOICE").replace(/\-/g,'')); //송장번호
	this.dsExec.setColumn(0, "NO_INVOICE2", "");
	this.dsExec.setColumn(0, "ID_USER", this.AuthClient.ID_USER);
	this.dsExec.setColumn(0, "CD_DEPT_LOGIN", "");

	var strSvcId    = "exec";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "exec=dsExec";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";

	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};


// 확정취소
 this.fnCancel = function(obj:nexacro.Button, e:nexacro.ClickEventInfo){
	if(!this.fnValidate()) return;
	
	this.gfnConfirm("입고작업을 확정 하시겠습니까?", "fnCancel_callback");
};

this.fnCancel_callback = function(strId, val){
	if(val == false){
			return false;
	}
	this.dsExec.clearData();
	this.dsExec.addRow();

	this.dsExec.setColumn(0, "TY_ACT", "D");
	this.dsExec.setColumn(0, "NO_INVOICE1", this.dsSearch.getColumn(0, "NO_INVOICE").replace(/\-/g,'')); //송장번호
	this.dsExec.setColumn(0, "NO_INVOICE2", "");
	this.dsExec.setColumn(0, "ID_USER", this.AuthClient.ID_USER);
	this.dsExec.setColumn(0, "CD_DEPT_LOGIN", "");

	var strSvcId    = "execsub";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "exec=dsExec";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";

	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};

// 입고삭제
 this.fnInDelete = function(obj:nexacro.Button, e:nexacro.ClickEventInfo){
	if(!this.fnValidate()) return;
	
	this.gfnConfirm("입고송장을 삭제하시겠습니까?", "fnInDelete_callback");
};

this.fnInDelete_callback = function(strId, val){
	if(val == false){
			return false;
	}
	this.dsExec1.clearData();
	this.dsExec1.addRow();

	this.dsExec1.setColumn(0, "TY_ACT", "D");
	this.dsExec1.setColumn(0, "DT_INVOICE", this.dsList.getColumn(0, "입고일자"));
	this.dsExec1.setColumn(0, "CD_INSIT", this.dsList.getColumn(0, "현장코드"));
	this.dsExec1.setColumn(0, "CD_OUTSIT", this.dsList.getColumn(0, "현장코드"));
	this.dsExec1.setColumn(0, "ID_USER", this.AuthClient.ID_USER);
	this.dsExec1.setColumn(0, "NO_INVOICE1", this.dsSearch.getColumn(0, "NO_INVOICE").replace(/\-/g,'')); //송장번호

	var strSvcId    = "exec1";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "exec1=dsExec1";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	//trace(this.dsSave1.saveXML());
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]
};

// 추가등록
 this.fnInAdd = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	
	this.MODE = "I";
	
	var cd_site = this.dsList.getColumn(0, "현장코드");
	var ds_site = this.dsList.getColumn(0, "현장명");
	var cd_vendor = this.dsList.getColumn(0, "사업자번호");
	var ds_vendor = this.dsList.getColumn(0, "거래처명");
	
	this.dsSearch.setColumn(0, "NO_INVOICE", "");
	this.dsList.clearData();
	this.dsListSub.clearData();
	this.dsList.addRow();
	
	this.dsList.set_enableevent(false);
	this.dsList.setColumn(0, "현장코드", cd_site);
	this.dsList.setColumn(0, "현장명", ds_site);
	this.dsList.setColumn(0, "입고일자",  this.gfnGetDate()); //입고일자
	this.dsList.setColumn(0, "사업자번호", cd_vendor); 
	this.dsList.setColumn(0, "거래처명", ds_vendor); 
	this.dsList.set_enableevent(true);
	
	this.gfnSetFormStatus(this);
	this.FormBtns.Add.set_enable(true);
	this.FormBtns.Save.set_enable(true);
}

// 파일첨부
 this.fnFile = function(obj:nexacro.Button,e:nexacro.ClickEventInfo) {
	
	var cd_site = this.dsList.getColumn(0, "현장코드");
	var no_invoice = this.dsSearch.getColumn(0, "NO_INVOICE").replace(/\-/g, '');
	
	var fileManager = {};
	fileManager.CD_GUBUN = "DM50";
	fileManager.CD_DIR = [ cd_site, no_invoice ];
	
	if(this.FormInfo.TY_AUTH == "R") {
		fileManager.IS_READONLY = true;
	} else {
		fileManager.IS_READONLY = false;
	}
	
	this.gfnFileManager(fileManager, "fnFileCallback");
}

this.fnFileCallback = function(strID, val) {
	// val.IsChange : 변경여부, val.Cnt : 파일개수
	
	// 변경시 조회를 다시 하거나
// 	if(val.IsChange == true) {
// 		this.FormBtns.Select.click();
// 	}
	
	// 파일개수를 다시 셋팅
	if(val.Cnt == 0) {
		this.btn5.set_text("첨부파일");
	} else {
		this.btn5.set_text("첨부파일(" + val.Cnt + ")");
	}
	this.btn5.parent.fnSetBtn();
};

this.dsList_onvaluechanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if(this.MODE == "U" && e.newvalue != e.oldvalue) {
		this.gfnSetFormStatus(this, "U");
	}
};
]]></Script>
    <Objects>
      <Dataset id="dsList" onvaluechanged="dsList_onvaluechanged">
        <ColumnInfo>
          <Column id="입고일자" type="STRING" size="256"/>
          <Column id="현장코드" type="STRING" size="256"/>
          <Column id="현장명" type="STRING" size="256"/>
          <Column id="전출현장코드" type="STRING" size="256"/>
          <Column id="전출현장명" type="STRING" size="256"/>
          <Column id="사업자번호" type="STRING" size="256"/>
          <Column id="거래처명" type="STRING" size="256"/>
          <Column id="비고" type="STRING" size="256"/>
          <Column id="완료" type="STRING" size="256"/>
          <Column id="YN_CONFIRM" type="STRING" size="256"/>
          <Column id="담당자사번" type="STRING" size="256"/>
          <Column id="담당자명" type="STRING" size="256"/>
          <Column id="완료일자" type="STRING" size="256"/>
          <Column id="발주번호" type="STRING" size="256"/>
          <Column id="발주명" type="STRING" size="256"/>
          <Column id="청구번호" type="STRING" size="256"/>
          <Column id="청구명" type="STRING" size="256"/>
          <Column id="송장금액" type="BIGDECIMAL" size="256"/>
          <Column id="매각공급가" type="BIGDECIMAL" size="256"/>
          <Column id="매각VAT" type="BIGDECIMAL" size="256"/>
          <Column id="DS_APPROVAL" type="STRING" size="256"/>
          <Column id="TY_APPROVAL" type="STRING" size="256"/>
          <Column id="대표품목코드" type="STRING" size="256"/>
          <Column id="대표품목명" type="STRING" size="256"/>
          <Column id="CD_SITE_STOCK" type="STRING" size="256"/>
          <Column id="DS_DEPT" type="STRING" size="256"/>
          <Column id="CD_VENDOR_STOCK" type="STRING" size="256"/>
          <Column id="DS_VENDOR" type="STRING" size="256"/>
          <Column id="NO_ERPKEY" type="STRING" size="256"/>
          <Column id="NO_SLIP" type="STRING" size="256"/>
          <Column id="STATUS_A" type="STRING" size="256"/>
          <Column id="STATUS_DESC_A" type="STRING" size="256"/>
          <Column id="STATUS_B" type="STRING" size="256"/>
          <Column id="STATUS_DESC_B" type="STRING" size="256"/>
          <Column id="GW_ERPKEY" type="STRING" size="256"/>
          <Column id="GW_STATUS" type="STRING" size="256"/>
          <Column id="ID_GWCMP" type="STRING" size="256"/>
          <Column id="CD_INS" type="STRING" size="256"/>
          <Column id="DS_INS" type="STRING" size="256"/>
          <Column id="YN_OVERSEA" type="STRING" size="256"/>
          <Column id="TY_OVERSEA" type="STRING" size="256"/>
          <Column id="CNT_FILE" type="INT" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="입고일자"/>
            <Col id="현장코드"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">select</Col>
            <Col id="SP">DMBPR_INVOBAS_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">select1</Col>
            <Col id="SP">DMBPR_INVOITEMFORRPP_SELECT</Col>
          </Row>
          <Row>
            <Col id="TARGET">save</Col>
            <Col id="SP">DMBPR_INVOMST_SAVE</Col>
          </Row>
          <Row>
            <Col id="TARGET">save1</Col>
            <Col id="SP">DMBPR_INVODTL_SAVE</Col>
          </Row>
          <Row>
            <Col id="SP">DMBPR_INVOSTK_ACT</Col>
            <Col id="TARGET">exec</Col>
          </Row>
          <Row>
            <Col id="SP">DMBPR_INVOMST_SAVE</Col>
            <Col id="TARGET">exec1</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsSearch" onvaluechanged="dsSearch_onvaluechanged">
        <ColumnInfo>
          <Column id="NO_INVOICE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="NO_INVOICE"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsListSub">
        <ColumnInfo>
          <Column id="SN_NO" type="int" size="4"/>
          <Column id="CD_DKCOST" type="string" size="32"/>
          <Column id="CD_COST" type="string" size="32"/>
          <Column id="DS_COST" type="string" size="32"/>
          <Column id="NO_HADOCONT" type="string" size="32"/>
          <Column id="DS_HADOCONT" type="string" size="32"/>
          <Column id="CD_ITEM" type="string" size="32"/>
          <Column id="DS_KSITEM" type="string" size="32"/>
          <Column id="SZ_ITEM" type="string" size="32"/>
          <Column id="SZ_SITEITEM" type="string" size="32"/>
          <Column id="UT_ITEM" type="string" size="32"/>
          <Column id="TY_ITEM" type="string" size="32"/>
          <Column id="QN_ITEM" type="bigdecimal" size="16"/>
          <Column id="UP_ITEM" type="bigdecimal" size="8"/>
          <Column id="AM_ITEM" type="bigdecimal" size="8"/>
          <Column id="YN_INPUT" type="string" size="32"/>
          <Column id="RM_ETC" type="string" size="32"/>
          <Column id="nx_flag" type="string" size="32"/>
          <Column id="nx_sort" type="string" size="32"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsOutput">
        <ColumnInfo>
          <Column id="NO_INVOICE1" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="NO_INVOICE1"/>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item4" compid="divData.form.divDataTop.form.edt00" propid="value" datasetid="dsList" columnid="비고"/>
      <BindItem id="item2" compid="divData.form.divDataTop.form.ctclDT_INVOICE" propid="value" datasetid="dsList" columnid="입고일자"/>
      <BindItem id="item3" compid="divSearch.form.edtNO_INVOICE" propid="value" datasetid="dsSearch" columnid="NO_INVOICE"/>
      <BindItem id="item0" compid="divData.form.divDataTop.form.ccfCD_SITE.form.CDTextBox" propid="value" datasetid="dsList" columnid="현장코드"/>
      <BindItem id="item7" compid="divData.form.divDataTop.form.ccfCD_VENDOR.form.CDTextBox" propid="value" datasetid="dsList" columnid="사업자번호"/>
      <BindItem id="item1" compid="divData.form.divDataTop.form.ccfCD_VENDOR.form.DSTextBox" propid="value" datasetid="dsList" columnid="거래처명"/>
    </Bind>
  </Form>
</FDL>
