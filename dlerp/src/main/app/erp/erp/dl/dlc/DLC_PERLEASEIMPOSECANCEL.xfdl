<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="form" width="450" height="320" maxwidth="500" maxheight="320" titletext="" onload="form_onload">
    <Layouts>
      <Layout>
        <Div id="divData" taborder="0" left="0" top="0" bottom="30" right="0">
          <Layouts>
            <Layout>
              <Static id="staTITLE" taborder="0" text="부과 임대료 개별 취소" left="0" top="0" width="100.00%" height="30" cssclass="sta_TITLE_Bg" textAlign="left"/>
              <Static id="staSubTITLE" taborder="0" text="세대별 부과된 임대료를 개별 취소합니다" left="5" top="staTITLE:0" height="30" textAlign="left" right="0"/>
              <Static id="staCD_ACNTUNIT" taborder="1" text="사업지코드" left="10" top="staSubTITLE:5" width="100" height="30" textAlign="right" cssclass="sta_WF_tablelabelE"/>
              <Static id="staBgCD_ACNTUNIT" taborder="2" left="staCD_ACNTUNIT:-1" top="staSubTITLE:5" width="300" height="30" cssclass="sta_WF_tablebg" text=""/>
              <Static id="staNO_DONG" taborder="3" text="동층호" left="10" top="staCD_ACNTUNIT:28" width="100" height="30" textAlign="right" cssclass="sta_WF_tablelabelE"/>
              <Static id="staBgNO_DONG" taborder="4" left="staNO_DONG:-1" top="staBgCD_ACNTUNIT:28" width="300" height="30" cssclass="sta_WF_tablebg" text=""/>
              <Static id="staYM_IMPOSE" taborder="3" text="부과년월" left="10" top="staNO_DONG:-1" width="100" height="30" textAlign="right" cssclass="sta_WF_tablelabelE"/>
              <Static id="staBgYM_IMPOSE" taborder="4" left="staYM_IMPOSE:-1" top="staBgNO_DONG:-1" width="300" height="30" cssclass="sta_WF_tablebg" text=""/>
              <Div id="ccfCD_ACNTUNIT" CodeFindName="DLX_CFLEASESITE_CODEFIND" CDTextWidth="70" taborder="1" left="staCD_ACNTUNIT:5" top="staSubTITLE:10" width="200" height="20" url="cmm::cmmCodeFind.xfdl"/>
              <Edit id="ctxtNO_DONG" taborder="4" left="staNO_DONG:5" top="ccfCD_ACNTUNIT:38" width="80" height="20" value="" readonly="false" maxlength="4" onkillfocus="divData_ctxtNO_DONG_onkillfocus" inputtype="normal,number"/>
              <Edit id="ctxtNO_FLOOR" taborder="5" left="ctxtNO_DONG:5" top="ccfCD_ACNTUNIT:38" width="60" height="20" value="" readonly="false" maxlength="2" inputtype="normal,number"/>
              <Edit id="ctxtNO_HO" taborder="6" left="ctxtNO_FLOOR:5" top="ccfCD_ACNTUNIT:38" width="80" height="20" value="" readonly="false" maxlength="3" inputtype="normal,number"/>
              <Button id="cbtnNO_DONGHO" taborder="7" top="ccfCD_ACNTUNIT:38" width="25" cssclass="btn_CF_Search" left="ctxtNO_HO:5" height="20" onclick="divData_cbtnNO_DONGHO_onclick"/>
              <Div id="ctclYM_IMPOSE" taborder="1" left="staYM_IMPOSE:5" top="cbtnNO_DONGHO:9" width="80" height="20" url="cmm::cmmCalMM.xfdl"/>
              <Button id="btnOK" taborder="8" text="확인" left="30.00%" top="ctclYM_IMPOSE:20" width="60" height="27" onclick="btnOK_onclick"/>
              <Button id="btnCANCLE" taborder="9" text="취소" left="btnOK:30" top="ctclYM_IMPOSE:20" width="60" height="27" onclick="btnCANCLE_onclick"/>
              <Static id="sta03" taborder="1" left="109" top="94" height="30" cssclass="sta_WF_tablebg" text="" width="300"/>
              <Static id="sta02" taborder="2" text="구분" left="10" top="94" width="100" height="30" textAlign="right" cssclass="sta_WF_tablelabelE"/>
              <Combo id="ccboTY_TYPE" taborder="3" left="115" top="99" width="105" height="20" datacolumn="DS_CODE" codecolumn="CD_CODE" innerdataset="dsTY_TYPE"/>
            </Layout>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.objApp = this.gfnGetApplication();

this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	// -- 필수 -------------------//
	this.gfnFormOnLoad(this);	
	this.gfnFormInfo(this);		
	// ---------------------------//
	this.fnSetVariable();
	this.fnSetEvent();
	this.fnSetParameter();
	this.fnSetCombo();
	
	this.dsList.setColumn(0, "YM_IMPOSE", this.gfnGetDate().substr(0,6));
	
	if(!this.gfnIsNull(this.getOwnerFrame().CD_ACNTUNIT)){
		this.dsList.setColumn(0, "CD_ACNTUNIT", this.getOwnerFrame().CD_ACNTUNIT);
		this.dsList.setColumn(0, "DS_ACNTUNIT", this.getOwnerFrame().DS_ACNTUNIT);
		this.dsList.setColumn(0, "NO_DONG", this.getOwnerFrame().NO_DONG);
		this.dsList.setColumn(0, "NO_FLOOR", this.getOwnerFrame().NO_FLOOR);
		this.dsList.setColumn(0, "NO_HO", this.getOwnerFrame().NO_HO);
		this.dsList.setColumn(0, "YM_IMPOSE", this.getOwnerFrame().YM_IMPOSE);
	}	
};


/************************************************************************
 * 변수 선언  
 ************************************************************************/
this.fnSetVariable = function() {	
	this.ccfCD_ACNTUNIT = this.divData.form.ccfCD_ACNTUNIT;
	this.ccboTY_TYPE = this.divData.form.ccboTY_TYPE;
};

this.fnSetCombo = function() {
	
	this.dsCombo = new Dataset();
	this.dsCombo.addColumn("CD_SYSTEM", "string");
	this.dsCombo.addColumn("CD_TYPE", "string");
	
	this.dsCombo.addRow();
	this.dsCombo.setColumn(0, "CD_SYSTEM", "DL");
	this.dsCombo.setColumn(0, "CD_TYPE", "C1");
	
	
	
	var strSvcId    = "combo";
	var strSvcType  = "select";
	var inProc		= "_dsProc";
	var inData      = "combo=dsCombo";
	var outData     = "dsTY_TYPE=combo0";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// transaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc,false); // 통신방법 정의 [생략가능]
};

/************************************************************************
 * 파라미터 설정
 ************************************************************************/
this.fnSetParameter = function() {
	this.dsDelete = new Dataset();
	this.dsDelete.addColumn("CD_ACNTUNIT", "string");
	this.dsDelete.addColumn("TY_GUBUN", "string");
	this.dsDelete.addColumn("NO_CHASU", "string");
	this.dsDelete.addColumn("NO_DONG", "string");
	this.dsDelete.addColumn("NO_FLOOR", "string");
	this.dsDelete.addColumn("NO_HO", "string");
	this.dsDelete.addColumn("YM_IMPOSE", "string");
	this.dsDelete.addColumn("ID_UPDATE", "string");
	this.dsDelete.addColumn("TY_TYPE", "string");
}

/************************************************************************
 * 이벤트 설정
 ************************************************************************/
this.fnSetEvent = function() {
	this.ccfCD_ACNTUNIT.BeforeUserDataSetParam = "fnBeforeUserDataSetParam";
	this.ccfCD_ACNTUNIT.AfterCDTextChanged = "fnAfterCDTextChanged";
};
/************************************************************************
 * Validate
 ************************************************************************/
this.fnSaveValidate = function() {
	var validate = true;
	if (this.gfnIsNull(this.dsList.getColumn(0, "CD_ACNTUNIT"))) {
		validate = false;
		// Alert후 실행할 처리
		this.fnVaidateCallback = function() {
			this.divData.form.ccfCD_ACNTUNIT.form.CDTextBox.setFocus();
		}
		this.gfnAlert("사업지코드를 입력하세요.", "fnVaidateCallback");
	}
	else if (this.gfnIsNull(this.dsList.getColumn(0, "TY_TYPE")))
	{
		this.fnVaidateCallback = function() {
			this.divData.form.ccboTY_TYPE.form.TextBox.setFocus();
		}
		validate = false;
		this.gfnAlert("구분을 입력하지 않았습니다.", "fnVaidateCallback");
	}
	else if (this.gfnIsNull(this.dsList.getColumn(0, "NO_DONG")))
	{
		this.fnVaidateCallback = function() {
			this.divData.form.ctxtNO_DONG.form.TextBox.setFocus();
		}
		validate = false;
		this.gfnAlert("동을 입력하지 않았습니다.", "fnVaidateCallback");
	}
	else if (this.gfnIsNull(this.dsList.getColumn(0, "NO_FLOOR")))
	{
		this.fnVaidateCallback = function() {
			this.divData.form.ctxtNO_FLOOR.form.TextBox.setFocus();
		}
		validate = false;
		this.gfnAlert("층을 입력하지 않았습니다.", "fnVaidateCallback");
	}
	else if (this.gfnIsNull(this.dsList.getColumn(0, "NO_HO")))
	{
		this.fnVaidateCallback = function() {
			this.divData.form.ctxtNO_HO.form.TextBox.setFocus();
		}
		validate = false;
		this.gfnAlert("호를 입력하지 않았습니다.", "fnVaidateCallback");
	}
	else if (this.gfnIsNull(this.dsList.getColumn(0, "YM_IMPOSE")))
	{
		this.fnVaidateCallback = function() {
			this.divData.form.ctclYM_IMPOSE.form.TextBox.setFocus();
		}
		validate = false;
		this.gfnAlert("부과년월을 입력하지 않았습니다.", "fnVaidateCallback");
	}
	
	return validate;
};

/************************************************************************
 * 코드파인드 이벤트
 ************************************************************************/
this.fnBeforeUserDataSetParam = function(id, dsUserParam, nrow) {
	if (id == "ccfCD_ACNTUNIT") {
		dsUserParam.setColumn(nrow, "FLAG", "A");
		dsUserParam.setColumn(nrow, "CD_DEPT", this.AuthClient.CD_DEPT);  
		dsUserParam.setColumn(nrow, "ID_USER", this.AuthClient.ID_USER);  
		dsUserParam.setColumn(nrow, "ID_GROUP", this.FormInfo.ID_GROUP);  
		dsUserParam.setColumn(nrow, "GR_SEARCH", this.FormInfo.GR_SEARCH);  
		dsUserParam.setColumn(nrow, "YN_TOTALCHASU", "");
	}
	return true;
}

this.fnAfterCDTextChanged = function(id, codeFindData) {
	if (id == "ccfCD_ACNTUNIT") {
		this.dsList.setColumn(0, "NO_DONG", "");
		this.dsList.setColumn(0, "NO_FLOOR", "");
		this.dsList.setColumn(0, "NO_HO", "");
	}
	return true;
}

/************************************************************************
 * 콜백 이벤트
 ************************************************************************/
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if (errorCode != 0) {
		this.gfnAlert(errorMsg);
		return;
	} 
	if(svcID == "save"){ 	
		if (errorCode == 0) { 	
			this.fnCallback_callback = function()
			{
				this.getParentContext().close(true);
			}
			
			var msg = "임대료가 취소되었습니다. \n"
					+ "사업지 : " + this.dsList.getColumn(0, "DS_ACNTUNIT") + "\n"
					+ "동층호 : " + this.dsList.getColumn(0, "NO_DONG") + " 동 "
					+ this.dsList.getColumn(0, "NO_FLOOR") + " 층 "
					+ this.dsList.getColumn(0, "NO_HO") + " 호 " + "\n"
					+ "부과년월 : " + this.dsList.getColumn(0, "YM_IMPOSE");
			
			this.gfnAlert(msg, "fnCallback_callback");
			
		} else {
			this.gfnAlert(errorMsg);
		}
	}
}


/************************************************************************
 * 기타 이벤트
 ************************************************************************/

this.btnOK_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{	
	var msg = this.dsList.getColumn(0, "NO_DONG") + " 동 "
	        + this.dsList.getColumn(0, "NO_FLOOR") + " 층 "
			+ this.dsList.getColumn(0, "NO_HO") + " 호 "
			+ this.dsList.getColumn(0, "YM_IMPOSE") + "월분 임대료를 취소하시겠습니까? ";
	this.gfnConfirm(msg, "fnOKConfirm");
};

this.fnOKConfirm = function(strId, val)
{
	if(val == true)
	{
		if(!this.fnSaveValidate()) return;
		this.fnSave();
	}
}

this.btnCANCLE_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	// 취소
	this.getParentContext().close(false);
};


this.divData_cbtnNO_DONGHO_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if(this.gfnIsNull(this.dsList.getColumn(0, "CD_ACNTUNIT")))
	{
		this.gfnAlert("사업지코드 (을)를 먼저 입력 하셔야 합니다.");
		return false;
	}
	
	var param = {};
	
	param.CD_ACNTUNIT = this.dsList.getColumn(0, "CD_ACNTUNIT");
	param.FLAG		  = "1";
	this.gfnFormOpen(this.FormInfo.CD_MODULE, "DRI_DONGHOCONTRACT", "fnDonghoPopupCallback", param);	
};


this.fnDonghoPopupCallback = function(svcID, val) {
	if (!val) return;

	var json = JSON.parse(val);
	if (json.DONG.length > 0) {
		this.dsList.setColumn(0, "NO_DONG", json.DONG);
		this.dsList.setColumn(0, "NO_FLOOR", json.FLOOR);
		this.dsList.setColumn(0, "NO_HO", json.HO);
	}
	else {
		this.dsList.setColumn(0, "NO_DONG", "");
		this.dsList.setColumn(0, "NO_FLOOR", "");
		this.dsList.setColumn(0, "NO_HO", "");
	}
}

this.fnSave = function()
{
	this.dsDelete.clearData();
	var nrow = this.dsDelete.addRow();
	
	this.dsDelete.setColumn(nrow, "CD_ACNTUNIT", this.dsList.getColumn(0, "CD_ACNTUNIT").substr(0,6));
	this.dsDelete.setColumn(nrow, "TY_GUBUN", this.dsList.getColumn(0, "CD_ACNTUNIT").substr(6,1));
	this.dsDelete.setColumn(nrow, "NO_CHASU", this.dsList.getColumn(0, "CD_ACNTUNIT").substr(7,2));
	this.dsDelete.setColumn(nrow, "NO_DONG", this.dsList.getColumn(0, "NO_DONG"));
	this.dsDelete.setColumn(nrow, "NO_FLOOR", this.dsList.getColumn(0, "NO_FLOOR"));
	this.dsDelete.setColumn(nrow, "NO_HO", this.dsList.getColumn(0, "NO_HO"));
	this.dsDelete.setColumn(nrow, "YM_IMPOSE", this.dsList.getColumn(0, "YM_IMPOSE"));
	this.dsDelete.setColumn(nrow, "ID_UPDATE", this.AuthClient.ID_USER);
	this.dsDelete.setColumn(nrow, "TY_TYPE", this.dsList.getColumn(0, "TY_TYPE"));
	
	var strSvcId    = "save";
	var strSvcType  = "save";
	var inProc		= "_dsProc";
	var inData      = "delete=dsDelete";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction( strSvcId , 	// transaction을 구분하기 위한 svc id값
						strSvcType , 	// trabsaction을 요청할 구분
						inProc,			// Procedure 정보 Dataset 이름
						inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						strArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						callBackFnc); // 통신방법 정의 [생략가능]	
}

this.divData_ctxtNO_DONG_onkillfocus = function(obj:nexacro.Edit,e:nexacro.KillFocusEventInfo) {
	if (this.gfnIsNull(this.dsList.getColumn(0, "NO_DONG"))) return;
	if (nexacro.isNumeric(this.dsList.getColumn(0, "NO_DONG"))) {
		this.dsList.setColumn(0, "NO_DONG", this.dsList.getColumn(0, "NO_DONG").padLeft(4, "0"));
	}
};


this.divData_ctxtNO_FLOOR_onkillfocus = function(obj:nexacro.Edit,e:nexacro.KillFocusEventInfo) {
	if (this.gfnIsNull(this.dsList.getColumn(0, "NO_FLOOR"))) return;
	if (nexacro.isNumeric(this.dsList.getColumn(0, "NO_FLOOR"))) {
		this.dsList.setColumn(0, "NO_FLOOR", this.dsList.getColumn(0, "NO_FLOOR").padLeft(2, "0"));
	}
};

this.divData_ctxtNO_HO_onkillfocus = function(obj:nexacro.Edit,e:nexacro.KillFocusEventInfo) {
	if (this.gfnIsNull(this.dsList.getColumn(0, "NO_HO"))) return;
	if (nexacro.isNumeric(this.dsList.getColumn(0, "NO_HO"))) {
		this.dsList.setColumn(0, "NO_HO", this.dsList.getColumn(0, "NO_HO").padLeft(3, "0"));
	}
};
]]></Script>
    <Objects>
      <Dataset id="dsList" onvaluechanged="dsList_onvaluechanged">
        <ColumnInfo>
          <Column id="CD_ACNTUNIT" type="STRING" size="256"/>
          <Column id="DS_ACNTUNIT" type="STRING" size="256"/>
          <Column id="NO_DONG" type="STRING" size="256"/>
          <Column id="NO_FLOOR" type="STRING" size="256"/>
          <Column id="NO_HO" type="STRING" size="256"/>
          <Column id="YM_IMPOSE" type="STRING" size="256"/>
          <Column id="TY_TYPE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="_dsProc">
        <ColumnInfo>
          <Column id="TARGET" type="STRING" size="256"/>
          <Column id="SP" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="TARGET">delete</Col>
            <Col id="SP">DLCPR_PER_IMPOSECANCEL </Col>
          </Row>
          <Row>
            <Col id="SP">DZXPR_COMBO_SELECT</Col>
            <Col id="TARGET">combo</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="dsTY_TYPE" onvaluechanged="dsList_onvaluechanged"/>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="divData.form.ccfCD_ACNTUNIT.form.CDTextBox" propid="value" datasetid="dsList" columnid="CD_ACNTUNIT"/>
      <BindItem id="item1" compid="divData.form.ccfCD_ACNTUNIT.form.DSTextBox" propid="value" datasetid="dsList" columnid="DS_ACNTUNIT"/>
      <BindItem id="item2" compid="divData.form.ctxtNO_DONG" propid="value" datasetid="dsList" columnid="NO_DONG"/>
      <BindItem id="item3" compid="divData.form.ctxtNO_FLOOR" propid="value" datasetid="dsList" columnid="NO_FLOOR"/>
      <BindItem id="item4" compid="divData.form.ctxtNO_HO" propid="value" datasetid="dsList" columnid="NO_HO"/>
      <BindItem id="item5" compid="divData.form.ctclYM_IMPOSE.form.TextBox" propid="value" datasetid="dsList" columnid="YM_IMPOSE"/>
      <BindItem id="item6" compid="divData.form.ccboTY_TYPE" propid="value" datasetid="dsList" columnid="TY_TYPE"/>
    </Bind>
  </Form>
</FDL>
