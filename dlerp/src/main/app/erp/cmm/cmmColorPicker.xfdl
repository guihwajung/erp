<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.0">
  <Form id="cmmColorPicker" width="90" height="25" onload="form_onload" scrolltype="none">
    <Layouts>
      <Layout>
        <Edit id="TextBox" taborder="0" left="0" top="0" right="27" bottom="0" onchanged="TextBox_onchanged" autoselect="true" value="" text="" padding="0px 0px 0px 5px" type="string" textAlign="left" maxlength="6"/>
        <PopupDiv id="pdvColor" visible="false" left="0" top="TextBox:0" width="245" height="240" url="cmm::cmmColorPicker_Pop.xfdl"/>
        <Button id="btnColor" taborder="2" top="0" onclick="btnColor_onclick" bottom="0" right="0" width="25" border="1px solid darkgray" background="transparent"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[/**
*  컨설팅 표준화 작업
*  @MenuPath    cmm > cmmColorPicker (공통 색상 선택)
*  @FileName 	cmmColorPicker.xfdl 
*  @Creator 	consulting
*  @CreateDate 	2020.11.23
*  @Desction    월달력
************** 소스 수정 이력 ***************************************************
*  date          		Modifier                Description
*******************************************************************************
*******************************************************************************
*/

/************************************************************************************************
 * FORM 변수 선언 영역
 ************************************************************************************************/

this.set_readonly = function(ro) {
	this.TextBox.set_readonly(ro);
};

this.fnResetScroll = function() {
	this.OrgWidth = this.parent.form.width;
	this.OrgHeight = this.parent.form.height;
	this.set_width(this.OrgWidth);
	this.set_height(this.OrgHeight);
	this.resetScroll();
};

/*
 *	색상 지정후 미리보기 색상 재로딩
 */
this.fnColorPickerLoad = function() {
	this.fnSetColor(this.TextBox.value);
}

/***********************************************************************************************
* FORM EVENT 영역(onload)
/***********************************************************************************************/
this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	this.fnResetScroll();
	
	this.parent.value = "";
	
	if(!this.gfnIsNull(this.parent.readonly)) {
		this.TextBox.set_readonly(this.parent.readonly);
	}	
	
};

/************************************************************************************************
* TRANSACTION 서비스 호출 처리
************************************************************************************************/

/************************************************************************************************
 * CALLBACK 콜백 처리부분
 ************************************************************************************************/

 /************************************************************************************************
 * 사용자 FUNCTION 영역
 ************************************************************************************************/

 /************************************************************************************************
 * 각 COMPONENT 별 EVENT 영역
 ************************************************************************************************/
this.fnSetColor = function(val) {
	var color = this.gfnTrim(val).toUpperCase();
			
	var hex = "#"+color;
	if(/^#[0-9A-F]{6}$/i.test(hex)) {
		this.btnColor.set_background(hex);
		this.pdvColor.form._cpObj.setHex(hex);
	} else {
		color = "";
		this.btnColor.set_background("transparent");
	}
	this.TextBox.set_value(color);
	
	this.parent.value = color;
	
};

this.TextBox_onchanged = function(obj:nexacro.Edit,e:nexacro.ChangeEventInfo)
{
	if(e.prevalue != e.postvalue) {
		this.fnSetColor(e.postvalue);
	}
};

this.call_back = function(strId, val) {
	if(!this.gfnIsNull(val) && val.length == 6) {
		this.TextBox.set_value(val);
		this.fnSetColor(val);
	}
};

this.btnColor_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var oForm = this.getOwnerFrame().form.divWork.form;
	
	var nTop = 0;
	// 상단 팝업
	if (oForm.getOffsetHeight() < (this.parent.getOffsetBottom() + this.pdvColor.getOffsetHeight())) {
		nTop = -1 * (this.pdvColor.getOffsetHeight() + 1);
	}
	else {
		nTop = this.parent.getOffsetHeight(); 
	}
	
	var nLeft = 0;
	// 우측 정렬
	if (oForm.getOffsetWidth() < (this.parent.getOffsetRight() + this.pdvColor.getOffsetWidth()) ) {
		nLeft = this.parent.getOffsetWidth() - this.pdvColor.getOffsetWidth();
	}
	else {
		nLeft = 0; 
	}
	
	this.pdvColor.trackPopupByComponent(this,nLeft,nTop, null, null, "call_back");
	
	
};
]]></Script>
  </Form>
</FDL>
